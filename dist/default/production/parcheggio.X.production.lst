

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 30 17:39:36 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  005D56                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  005D56  0064               	dw	100
    70                           
    71                           	psect	idataBANK0
    72  005D58                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  005D58  10                 	db	16
    77                           
    78                           	psect	idataBANK1
    79  005D4E                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _larghezza
    83  005D4E  0000               	dw	0
    84  005D50  4200               	dw	16896
    85                           
    86                           ;initializer for _raggio
    87  005D52  0000               	dw	0
    88  005D54  4296               	dw	17046
    89                           
    90                           	psect	smallconst
    91  000D00                     __psmallconst:
    92                           	opt stack 0
    93  000D00  00                 	db	0
    94  000D01                     atan@coeff_a:
    95                           	opt stack 0
    96  000D01  3C06               	dw	15366
    97  000D03  4204               	dw	16900
    98  000D05  9F7D               	dw	40829
    99  000D07  426A               	dw	17002
   100  000D09  905C               	dw	36956
   101  000D0B  4201               	dw	16897
   102  000D0D  4D60               	dw	19808
   103  000D0F  40BB               	dw	16571
   104  000D11  EC51               	dw	60497
   105  000D13  3E47               	dw	15943
   106  000D15  8DDE               	dw	36318
   107  000D17  BB1F               	dw	47903
   108  000D19                     __end_ofatan@coeff_a:
   109                           	opt stack 0
   110  000D19                     atan@coeff_b:
   111                           	opt stack 0
   112  000D19  3C06               	dw	15366
   113  000D1B  4204               	dw	16900
   114  000D1D  59C0               	dw	22976
   115  000D1F  428B               	dw	17035
   116  000D21  0474               	dw	1140
   117  000D23  4244               	dw	16964
   118  000D25  9BF9               	dw	39929
   119  000D27  414F               	dw	16719
   120  000D29  0000               	dw	0
   121  000D2B  3F80               	dw	16256
   122  000D2D                     __end_ofatan@coeff_b:
   123                           	opt stack 0
   124  000D2D                     sin@coeff_a:
   125                           	opt stack 0
   126  000D2D  F3EC               	dw	62444
   127  000D2F  484A               	dw	18506
   128  000D31  9535               	dw	38197
   129  000D33  C795               	dw	51093
   130  000D35  C117               	dw	49431
   131  000D37  45DC               	dw	17884
   132  000D39  DBFD               	dw	56317
   133  000D3B  C36D               	dw	50029
   134  000D3D  B372               	dw	45938
   135  000D3F  4033               	dw	16435
   136  000D41                     __end_ofsin@coeff_a:
   137                           	opt stack 0
   138  000D41                     sin@coeff_b:
   139                           	opt stack 0
   140  000D41  342B               	dw	13355
   141  000D43  4801               	dw	18433
   142  000D45  9D7F               	dw	40319
   143  000D47  45B0               	dw	17840
   144  000D49  FFE7               	dw	65511
   145  000D4B  42D9               	dw	17113
   146  000D4D  0000               	dw	0
   147  000D4F  3F80               	dw	16256
   148  000D51                     __end_ofsin@coeff_b:
   149                           	opt stack 0
   150  0000                     _RXB1CON	set	3920
   151  0000                     _RXB1CONbits	set	3920
   152  0000                     _RXB1D0	set	3926
   153  0000                     _RXB1D1	set	3927
   154  0000                     _RXB1D2	set	3928
   155  0000                     _RXB1D3	set	3929
   156  0000                     _RXB1D4	set	3930
   157  0000                     _RXB1D5	set	3931
   158  0000                     _RXB1D6	set	3932
   159  0000                     _RXB1D7	set	3933
   160  0000                     _RXB1DLC	set	3925
   161  0000                     _RXB1DLCbits	set	3925
   162  0000                     _RXB1EIDH	set	3923
   163  0000                     _RXB1EIDL	set	3924
   164  0000                     _RXB1SIDH	set	3921
   165  0000                     _RXB1SIDL	set	3922
   166  0000                     _RXB1SIDLbits	set	3922
   167  0000                     _RXF0EIDH	set	3842
   168  0000                     _RXF0EIDL	set	3843
   169  0000                     _RXF0SIDH	set	3840
   170  0000                     _RXF0SIDL	set	3841
   171  0000                     _RXF0SIDLbits	set	3841
   172  0000                     _RXF1EIDH	set	3846
   173  0000                     _RXF1EIDL	set	3847
   174  0000                     _RXF1SIDH	set	3844
   175  0000                     _RXF1SIDL	set	3845
   176  0000                     _RXF1SIDLbits	set	3845
   177  0000                     _RXF2EIDH	set	3850
   178  0000                     _RXF2EIDL	set	3851
   179  0000                     _RXF2SIDH	set	3848
   180  0000                     _RXF2SIDL	set	3849
   181  0000                     _RXF2SIDLbits	set	3849
   182  0000                     _RXF3EIDH	set	3854
   183  0000                     _RXF3EIDL	set	3855
   184  0000                     _RXF3SIDH	set	3852
   185  0000                     _RXF3SIDL	set	3853
   186  0000                     _RXF3SIDLbits	set	3853
   187  0000                     _RXF4EIDH	set	3858
   188  0000                     _RXF4EIDL	set	3859
   189  0000                     _RXF4SIDH	set	3856
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDLbits	set	3857
   192  0000                     _RXF5EIDH	set	3862
   193  0000                     _RXF5EIDL	set	3863
   194  0000                     _RXF5SIDH	set	3860
   195  0000                     _RXF5SIDL	set	3861
   196  0000                     _RXF5SIDLbits	set	3861
   197  0000                     _RXM0EIDH	set	3866
   198  0000                     _RXM0EIDL	set	3867
   199  0000                     _RXM0SIDH	set	3864
   200  0000                     _RXM0SIDL	set	3865
   201  0000                     _RXM0SIDLbits	set	3865
   202  0000                     _RXM1EIDH	set	3870
   203  0000                     _RXM1EIDL	set	3871
   204  0000                     _RXM1SIDH	set	3868
   205  0000                     _RXM1SIDL	set	3869
   206  0000                     _RXM1SIDLbits	set	3869
   207  0000                     _TXB0CONbits	set	3904
   208  0000                     _TXB0D0	set	3910
   209  0000                     _TXB0D1	set	3911
   210  0000                     _TXB0D2	set	3912
   211  0000                     _TXB0D3	set	3913
   212  0000                     _TXB0D4	set	3914
   213  0000                     _TXB0D5	set	3915
   214  0000                     _TXB0D6	set	3916
   215  0000                     _TXB0D7	set	3917
   216  0000                     _TXB0DLC	set	3909
   217  0000                     _TXB0DLCbits	set	3909
   218  0000                     _TXB0EIDH	set	3907
   219  0000                     _TXB0EIDL	set	3908
   220  0000                     _TXB0SIDH	set	3905
   221  0000                     _TXB0SIDL	set	3906
   222  0000                     _TXB0SIDLbits	set	3906
   223  0000                     _TXB1CONbits	set	3888
   224  0000                     _TXB1D0	set	3894
   225  0000                     _TXB1D1	set	3895
   226  0000                     _TXB1D2	set	3896
   227  0000                     _TXB1D3	set	3897
   228  0000                     _TXB1D4	set	3898
   229  0000                     _TXB1D5	set	3899
   230  0000                     _TXB1D6	set	3900
   231  0000                     _TXB1D7	set	3901
   232  0000                     _TXB1DLC	set	3893
   233  0000                     _TXB1DLCbits	set	3893
   234  0000                     _TXB1EIDH	set	3891
   235  0000                     _TXB1EIDL	set	3892
   236  0000                     _TXB1SIDH	set	3889
   237  0000                     _TXB1SIDL	set	3890
   238  0000                     _TXB1SIDLbits	set	3890
   239  0000                     _TXB2CONbits	set	3872
   240  0000                     _TXB2D0	set	3878
   241  0000                     _TXB2D1	set	3879
   242  0000                     _TXB2D2	set	3880
   243  0000                     _TXB2D3	set	3881
   244  0000                     _TXB2D4	set	3882
   245  0000                     _TXB2D5	set	3883
   246  0000                     _TXB2D6	set	3884
   247  0000                     _TXB2D7	set	3885
   248  0000                     _TXB2DLC	set	3877
   249  0000                     _TXB2DLCbits	set	3877
   250  0000                     _TXB2EIDH	set	3875
   251  0000                     _TXB2EIDL	set	3876
   252  0000                     _TXB2SIDH	set	3873
   253  0000                     _TXB2SIDL	set	3874
   254  0000                     _TXB2SIDLbits	set	3874
   255  0000                     _ADCON1	set	4033
   256  0000                     _BRGCON1	set	3952
   257  0000                     _BRGCON2	set	3953
   258  0000                     _BRGCON2bits	set	3953
   259  0000                     _BRGCON3	set	3954
   260  0000                     _BRGCON3bits	set	3954
   261  0000                     _CANCON	set	3951
   262  0000                     _CANCONbits	set	3951
   263  0000                     _CANSTAT	set	3950
   264  0000                     _COMSTATbits	set	3956
   265  0000                     _INTCON2bits	set	4081
   266  0000                     _INTCONbits	set	4082
   267  0000                     _IPR3bits	set	4005
   268  0000                     _LATA	set	3977
   269  0000                     _LATB	set	3978
   270  0000                     _LATBbits	set	3978
   271  0000                     _LATC	set	3979
   272  0000                     _PIE3bits	set	4003
   273  0000                     _PIR3bits	set	4004
   274  0000                     _PORTA	set	3968
   275  0000                     _PORTBbits	set	3969
   276  0000                     _RCONbits	set	4048
   277  0000                     _RXB0CON	set	3936
   278  0000                     _RXB0CONbits	set	3936
   279  0000                     _RXB0D0	set	3942
   280  0000                     _RXB0D1	set	3943
   281  0000                     _RXB0D2	set	3944
   282  0000                     _RXB0D3	set	3945
   283  0000                     _RXB0D4	set	3946
   284  0000                     _RXB0D5	set	3947
   285  0000                     _RXB0D6	set	3948
   286  0000                     _RXB0D7	set	3949
   287  0000                     _RXB0DLC	set	3941
   288  0000                     _RXB0DLCbits	set	3941
   289  0000                     _RXB0EIDH	set	3939
   290  0000                     _RXB0EIDL	set	3940
   291  0000                     _RXB0SIDH	set	3937
   292  0000                     _RXB0SIDL	set	3938
   293  0000                     _RXB0SIDLbits	set	3938
   294  0000                     _RXERRCNT	set	3957
   295  0000                     _T0CON	set	4053
   296  0000                     _T0CONbits	set	4053
   297  0000                     _T3CON	set	4017
   298  0000                     _TMR0H	set	4055
   299  0000                     _TMR0L	set	4054
   300  0000                     _TMR3H	set	4019
   301  0000                     _TMR3L	set	4018
   302  0000                     _TRISA	set	3986
   303  0000                     _TRISB	set	3987
   304  0000                     _TRISBbits	set	3987
   305  0000                     _TRISC	set	3988
   306  0000                     _TXERRCNT	set	3958
   307                           
   308                           ; #config settings
   309  000D51  00                 	db	0	; dummy byte at the end
   310  0000                     
   311                           	psect	cinit
   312  00598E                     __pcinit:
   313                           	opt stack 0
   314  00598E                     start_initialization:
   315                           	opt stack 0
   316  00598E                     __initialization:
   317                           	opt stack 0
   318                           
   319                           ; Clear objects allocated to BANK1 (131 bytes)
   320  00598E  EE01  F000         	lfsr	0,__pbssBANK1
   321  005992  0E83               	movlw	131
   322  005994                     clear_0:
   323  005994  6AEE               	clrf	postinc0,c
   324  005996  06E8               	decf	wreg,f,c
   325  005998  E1FD               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to BANK0 (16 bytes)
   328  00599A  EE00  F0D7         	lfsr	0,__pbssBANK0
   329  00599E  0E10               	movlw	16
   330  0059A0                     clear_1:
   331  0059A0  6AEE               	clrf	postinc0,c
   332  0059A2  06E8               	decf	wreg,f,c
   333  0059A4  E1FD               	bnz	clear_1
   334                           
   335                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   336  0059A6  6A45               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   337  0059A8  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   338                           
   339                           ; Clear objects allocated to COMRAM (32 bytes)
   340  0059AA  EE00  F024         	lfsr	0,__pbssCOMRAM
   341  0059AE  0E20               	movlw	32
   342  0059B0                     clear_2:
   343  0059B0  6AEE               	clrf	postinc0,c
   344  0059B2  06E8               	decf	wreg,f,c
   345  0059B4  E1FD               	bnz	clear_2
   346                           
   347                           ; Initialize objects allocated to BANK1 (8 bytes)
   348                           ; load TBLPTR registers with __pidataBANK1
   349  0059B6  0E4E               	movlw	low __pidataBANK1
   350  0059B8  6EF6               	movwf	tblptrl,c
   351  0059BA  0E5D               	movlw	high __pidataBANK1
   352  0059BC  6EF7               	movwf	tblptrh,c
   353  0059BE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   354  0059C0  6EF8               	movwf	tblptru,c
   355  0059C2  EE01  F0D8         	lfsr	0,__pdataBANK1
   356  0059C6  EE10 F008          	lfsr	1,8
   357  0059CA                     copy_data0:
   358  0059CA  0009               	tblrd		*+
   359  0059CC  CFF5 FFEE          	movff	tablat,postinc0
   360  0059D0  50E5               	movf	postdec1,w,c
   361  0059D2  50E1               	movf	fsr1l,w,c
   362  0059D4  E1FA               	bnz	copy_data0
   363                           
   364                           ; Initialize objects allocated to BANK0 (1 bytes)
   365                           ; load TBLPTR registers with __pidataBANK0
   366  0059D6  0E58               	movlw	low __pidataBANK0
   367  0059D8  6EF6               	movwf	tblptrl,c
   368  0059DA  0E5D               	movlw	high __pidataBANK0
   369  0059DC  6EF7               	movwf	tblptrh,c
   370  0059DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   371  0059E0  6EF8               	movwf	tblptru,c
   372  0059E2  0009               	tblrd		*+	;fetch initializer
   373  0059E4  CFF5 F0E7          	movff	tablat,__pdataBANK0
   374                           
   375                           ; Initialize objects allocated to COMRAM (2 bytes)
   376                           ; load TBLPTR registers with __pidataCOMRAM
   377  0059E8  0E56               	movlw	low __pidataCOMRAM
   378  0059EA  6EF6               	movwf	tblptrl,c
   379  0059EC  0E5D               	movlw	high __pidataCOMRAM
   380  0059EE  6EF7               	movwf	tblptrh,c
   381  0059F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   382  0059F2  6EF8               	movwf	tblptru,c
   383  0059F4  0009               	tblrd		*+	;fetch initializer
   384  0059F6  CFF5 F046          	movff	tablat,__pdataCOMRAM
   385  0059FA  0009               	tblrd		*+	;fetch initializer
   386  0059FC  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   387  005A00                     end_of_initialization:
   388                           	opt stack 0
   389  005A00                     __end_of__initialization:
   390                           	opt stack 0
   391  005A00  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   392  005A02  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  005A04  0100               	movlb	0
   394  005A06  EFA1  F02D         	goto	_main	;jump to C main() function
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	bitbssCOMRAM
   405  000220                     __pbitbssCOMRAM:
   406                           	opt stack 0
   407  000220                     _activation:
   408                           	opt stack 0
   409  000220                     	ds	1
   410  000221                     _asd:
   411                           	opt stack 0
   412  000221                     	ds	1
   413  000222                     _dir:
   414                           	opt stack 0
   415  000222                     	ds	1
   416  000223                     _distance_error:
   417                           	opt stack 0
   418  000223                     	ds	1
   419  000224                     _distance_received:
   420                           	opt stack 0
   421  000224                     	ds	1
   422  000225                     _distance_received1:
   423                           	opt stack 0
   424  000225                     	ds	1
   425  000226                     _distance_wait:
   426                           	opt stack 0
   427  000226                     	ds	1
   428  000227                     _old_data_correction:
   429                           	opt stack 0
   430  000227                     	ds	1
   431  000228                     _request_sent:
   432                           	opt stack 0
   433  000228                     	ds	1
   434  000229                     _request_sent1:
   435                           	opt stack 0
   436  000229                     	ds	1
   437  00022A                     _start_operation:
   438                           	opt stack 0
   439  00022A                     	ds	1
   440  00022B                     _steering_correction_dir:
   441                           	opt stack 0
   442  00022B                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bssCOMRAM
   453  000024                     __pbssCOMRAM:
   454                           	opt stack 0
   455  000024                     _sensor_distance:
   456                           	opt stack 0
   457  000024                     	ds	16
   458  000034                     _distance_dx:
   459                           	opt stack 0
   460  000034                     	ds	2
   461  000036                     _distance_sx:
   462                           	opt stack 0
   463  000036                     	ds	2
   464  000038                     _left_speed:
   465                           	opt stack 0
   466  000038                     	ds	2
   467  00003A                     _pulse_time:
   468                           	opt stack 0
   469  00003A                     	ds	2
   470  00003C                     _right_speed:
   471                           	opt stack 0
   472  00003C                     	ds	2
   473  00003E                     _timerValue2:
   474                           	opt stack 0
   475  00003E                     	ds	2
   476  000040                     _MUX_index:
   477                           	opt stack 0
   478  000040                     	ds	1
   479  000041                     _asus:
   480                           	opt stack 0
   481  000041                     	ds	1
   482  000042                     _gianni:
   483                           	opt stack 0
   484  000042                     	ds	1
   485  000043                     _steering_correction:
   486                           	opt stack 0
   487  000043                     	ds	1
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	dataCOMRAM
   498  000046                     __pdataCOMRAM:
   499                           	opt stack 0
   500  000046                     _spazio_parcheggio:
   501                           	opt stack 0
   502  000046                     	ds	2
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssBANK0
   513  0000D7                     __pbssBANK0:
   514                           	opt stack 0
   515  0000D7                     _alignment_gap:
   516                           	opt stack 0
   517  0000D7                     	ds	4
   518  0000DB                     _z:
   519                           	opt stack 0
   520  0000DB                     	ds	4
   521  0000DF                     _actual_speed:
   522                           	opt stack 0
   523  0000DF                     	ds	2
   524  0000E1                     _clock_counter_reference:
   525                           	opt stack 0
   526  0000E1                     	ds	2
   527  0000E3                     _distance_average:
   528                           	opt stack 0
   529  0000E3                     	ds	2
   530  0000E5                     _set_speed:
   531                           	opt stack 0
   532  0000E5                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	dataBANK0
   543  0000E7                     __pdataBANK0:
   544                           	opt stack 0
   545  0000E7                     _delay_quartz_frequency_value:
   546                           	opt stack 0
   547  0000E7                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	bssBANK1
   558  000100                     __pbssBANK1:
   559                           	opt stack 0
   560  000100                     _MUX_select:
   561                           	opt stack 0
   562  000100                     	ds	8
   563  000108                     _data_speed_rx:
   564                           	opt stack 0
   565  000108                     	ds	8
   566  000110                     _distance_set:
   567                           	opt stack 0
   568  000110                     	ds	8
   569  000118                     _Pminimo:
   570                           	opt stack 0
   571  000118                     	ds	4
   572  00011C                     _alfa:
   573                           	opt stack 0
   574  00011C                     	ds	4
   575  000120                     _beta:
   576                           	opt stack 0
   577  000120                     	ds	4
   578  000124                     _bordo:
   579                           	opt stack 0
   580  000124                     	ds	4
   581  000128                     _jjj:
   582                           	opt stack 0
   583  000128                     	ds	4
   584  00012C                     _kkk:
   585                           	opt stack 0
   586  00012C                     	ds	4
   587  000130                     _n:
   588                           	opt stack 0
   589  000130                     	ds	4
   590  000134                     _old_alignment_gap:
   591                           	opt stack 0
   592  000134                     	ds	4
   593  000138                     _prima_sterzata:
   594                           	opt stack 0
   595  000138                     	ds	4
   596  00013C                     _x:
   597                           	opt stack 0
   598  00013C                     	ds	4
   599  000140                     _distance:
   600                           	opt stack 0
   601  000140                     	ds	2
   602  000142                     _errno:
   603                           	opt stack 0
   604  000142                     	ds	2
   605  000144                     _msg:
   606                           	opt stack 0
   607  000144                     	ds	15
   608  000153                     _data:
   609                           	opt stack 0
   610  000153                     	ds	8
   611  00015B                     _data_brake:
   612                           	opt stack 0
   613  00015B                     	ds	8
   614  000163                     _data_correction:
   615                           	opt stack 0
   616  000163                     	ds	8
   617  00016B                     _data_speed:
   618                           	opt stack 0
   619  00016B                     	ds	8
   620  000173                     _data_steering:
   621                           	opt stack 0
   622  000173                     	ds	8
   623  00017B                     _data_test:
   624                           	opt stack 0
   625  00017B                     	ds	8
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	dataBANK1
   636  0001D8                     __pdataBANK1:
   637                           	opt stack 0
   638  0001D8                     _larghezza:
   639                           	opt stack 0
   640  0001D8                     	ds	4
   641  0001DC                     _raggio:
   642                           	opt stack 0
   643  0001DC                     	ds	4
   644                           tblptru	equ	0xFF8
   645                           tblptrh	equ	0xFF7
   646                           tblptrl	equ	0xFF6
   647                           tablat	equ	0xFF5
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653                           	psect	cstackBANK1
   654  000183                     __pcstackBANK1:
   655                           	opt stack 0
   656  000183                     sqrt@sign:
   657                           	opt stack 0
   658  000183                     ___xxtofl@sign:
   659                           	opt stack 0
   660  000183                     atan@y:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x0
   664  000183                     	ds	1
   665  000184                     sqrt@i:
   666                           	opt stack 0
   667  000184                     ___xxtofl@exp:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1
   671  000184                     	ds	1
   672  000185                     sqrt@tfrac:
   673                           	opt stack 0
   674  000185                     ___xxtofl@arg:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x2
   678  000185                     	ds	2
   679  000187                     atan@x:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x4
   683  000187                     	ds	2
   684  000189                     sqrt@p:
   685                           	opt stack 0
   686  000189                     floor@i:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x6
   690  000189                     	ds	1
   691  00018A                     sqrt@grs:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x7
   695  00018A                     	ds	1
   696  00018B                     atan@recip:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x8
   700  00018B                     	ds	1
   701  00018C                     atan@val_squared:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x9
   705  00018C                     	ds	1
   706  00018D                     floor@expon:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xA
   710  00018D                     	ds	1
   711  00018E                     sqrt@exp:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xB
   715  00018E                     	ds	1
   716  00018F                     ?___flsub:
   717                           	opt stack 0
   718  00018F                     ___flsub@b:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xC
   722  00018F                     	ds	1
   723  000190                     atan@val:
   724                           	opt stack 0
   725  000190                     sqrt@root:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0xD
   729  000190                     	ds	3
   730  000193                     ___flsub@a:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x10
   734  000193                     	ds	1
   735  000194                     sqrt@frac:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x11
   739  000194                     	ds	3
   740  000197                     ?_sin:
   741                           	opt stack 0
   742  000197                     sin@f:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x14
   746  000197                     	ds	1
   747  000198                     ?_asin:
   748                           	opt stack 0
   749  000198                     asin@x:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x15
   753  000198                     	ds	3
   754  00019B                     sin@y:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x18
   758  00019B                     	ds	1
   759  00019C                     asin@sgn:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x19
   763  00019C                     	ds	3
   764  00019F                     _sin$3750:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x1C
   768  00019F                     	ds	1
   769  0001A0                     _asin$3748:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x1D
   773  0001A0                     	ds	3
   774  0001A3                     sin@x2:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x20
   778  0001A3                     	ds	1
   779  0001A4                     _asin$3747:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x21
   783  0001A4                     	ds	3
   784  0001A7                     sin@sgn:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788  0001A7                     	ds	1
   789  0001A8                     asin@y:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x25
   793  0001A8                     	ds	4
   794  0001AC                     _asin$3746:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x29
   798  0001AC                     	ds	4
   799  0001B0                     ??_park_search:
   800  0001B0                     ?_cos:
   801                           	opt stack 0
   802  0001B0                     cos@f:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x2D
   806  0001B0                     	ds	4
   807  0001B4                     _cos$3749:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x31
   811  0001B4                     	ds	4
   812  0001B8                     _matematica$3738:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x35
   816  0001B8                     	ds	4
   817  0001BC                     _matematica$3739:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x39
   821  0001BC                     	ds	4
   822  0001C0                     _matematica$3740:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x3D
   826  0001C0                     	ds	4
   827  0001C4                     _matematica$3741:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x41
   831  0001C4                     	ds	4
   832  0001C8                     _matematica$3742:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x45
   836  0001C8                     	ds	4
   837  0001CC                     _matematica$3743:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x49
   841  0001CC                     	ds	4
   842  0001D0                     _matematica$3744:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x4D
   846  0001D0                     	ds	4
   847  0001D4                     _matematica$3745:
   848                           	opt stack 0
   849                           
   850                           ; 4 bytes @ 0x51
   851  0001D4                     	ds	4
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           
   861                           	psect	cstackBANK0
   862  000060                     __pcstackBANK0:
   863                           	opt stack 0
   864  000060                     ?___lwdiv:
   865                           	opt stack 0
   866  000060                     ___lwdiv@dividend:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000060                     	ds	2
   871  000062                     ___lwdiv@divisor:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000062                     	ds	2
   876  000064                     ___lwdiv@counter:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x4
   880  000064                     	ds	1
   881  000065                     ___lwdiv@quotient:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x5
   885  000065                     	ds	2
   886  000067                     ??_ISR_Alta:
   887                           
   888                           ; 0 bytes @ 0x7
   889  000067                     	ds	16
   890  000077                     ??_can_interpreter:
   891  000077                     ?_abs:
   892                           	opt stack 0
   893  000077                     ?___wmul:
   894                           	opt stack 0
   895  000077                     ?___fldiv:
   896                           	opt stack 0
   897  000077                     CANOperationMode@mode:
   898                           	opt stack 0
   899  000077                     _CANisTxReady$2845:
   900                           	opt stack 0
   901  000077                     ___wmul@multiplier:
   902                           	opt stack 0
   903  000077                     abs@a:
   904                           	opt stack 0
   905  000077                     CANsendMessage@identifier:
   906                           	opt stack 0
   907  000077                     CANSetMask@mask:
   908                           	opt stack 0
   909  000077                     CANSetFilter@filter:
   910                           	opt stack 0
   911  000077                     ___fldiv@b:
   912                           	opt stack 0
   913  000077                     frexp@value:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x17
   917  000077                     	ds	2
   918  000079                     ??_abs:
   919  000079                     ___wmul@multiplicand:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x19
   923  000079                     	ds	2
   924  00007B                     CANSetMask@type:
   925                           	opt stack 0
   926  00007B                     CANSetFilter@type:
   927                           	opt stack 0
   928  00007B                     CANsendMessage@data:
   929                           	opt stack 0
   930  00007B                     ___wmul@product:
   931                           	opt stack 0
   932  00007B                     frexp@eptr:
   933                           	opt stack 0
   934  00007B                     ___fldiv@a:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x1B
   938  00007B                     	ds	1
   939  00007C                     ??_CANSetMask:
   940  00007C                     ??_CANSetFilter:
   941                           
   942                           ; 0 bytes @ 0x1C
   943  00007C                     	ds	1
   944  00007D                     ??_frexp:
   945  00007D                     CANsendMessage@dataLength:
   946                           	opt stack 0
   947  00007D                     delay_ms@value_ms:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x1D
   951  00007D                     	ds	1
   952  00007E                     CANsendMessage@flags:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00007E                     	ds	1
   957  00007F                     ??___fldiv:
   958  00007F                     ??_CANsendMessage:
   959  00007F                     delay_s@value_s:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x1F
   963  00007F                     	ds	1
   964  000080                     CANSetMask@numBuffer:
   965                           	opt stack 0
   966  000080                     CANSetFilter@numBuffer:
   967                           	opt stack 0
   968  000080                     delay_s@repeat_loop:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x20
   972  000080                     	ds	1
   973  000081                     CANSetMask@tamp:
   974                           	opt stack 0
   975  000081                     CANSetFilter@tamp:
   976                           	opt stack 0
   977                           
   978                           ; 4 bytes @ 0x21
   979  000081                     	ds	2
   980  000083                     ___fldiv@sign:
   981                           	opt stack 0
   982  000083                     CANsendMessage@tamp:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x23
   986  000083                     	ds	1
   987  000084                     ___fldiv@rem:
   988                           	opt stack 0
   989                           
   990                           ; 4 bytes @ 0x24
   991  000084                     	ds	1
   992  000085                     CANInitialize@phaseSeg1:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x25
   996  000085                     	ds	1
   997  000086                     CANInitialize@phaseSeg2:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x26
  1001  000086                     	ds	1
  1002  000087                     can_send@data_correction1:
  1003                           	opt stack 0
  1004  000087                     CANInitialize@SJW:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x27
  1008  000087                     	ds	1
  1009  000088                     CANInitialize@BRP:
  1010                           	opt stack 0
  1011  000088                     ___fldiv@new_exp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x28
  1015  000088                     	ds	1
  1016  000089                     CANInitialize@flags:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x29
  1020  000089                     	ds	1
  1021  00008A                     ??_CANInitialize:
  1022  00008A                     ___fldiv@grs:
  1023                           	opt stack 0
  1024                           
  1025                           ; 4 bytes @ 0x2A
  1026  00008A                     	ds	4
  1027  00008E                     CANInitialize@propSeg:
  1028                           	opt stack 0
  1029  00008E                     ___fldiv@bexp:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x2E
  1033  00008E                     	ds	1
  1034  00008F                     CANInitialize@FilterConfig1:
  1035                           	opt stack 0
  1036  00008F                     ___fldiv@aexp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x2F
  1040  00008F                     	ds	1
  1041  000090                     ?___flmul:
  1042                           	opt stack 0
  1043  000090                     CANInitialize@FilterConfig2:
  1044                           	opt stack 0
  1045  000090                     ___flmul@b:
  1046                           	opt stack 0
  1047                           
  1048                           ; 4 bytes @ 0x30
  1049  000090                     	ds	1
  1050  000091                     
  1051                           ; 0 bytes @ 0x31
  1052  000091                     	ds	3
  1053  000094                     ___flmul@a:
  1054                           	opt stack 0
  1055                           
  1056                           ; 4 bytes @ 0x34
  1057  000094                     	ds	4
  1058  000098                     ??___flmul:
  1059                           
  1060                           ; 0 bytes @ 0x38
  1061  000098                     	ds	4
  1062  00009C                     ___flmul@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x3C
  1066  00009C                     	ds	1
  1067  00009D                     ___flmul@aexp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x3D
  1071  00009D                     	ds	1
  1072  00009E                     ___flmul@grs:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0x3E
  1076  00009E                     	ds	4
  1077  0000A2                     ___flmul@bexp:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x42
  1081  0000A2                     	ds	1
  1082  0000A3                     ___flmul@prod:
  1083                           	opt stack 0
  1084                           
  1085                           ; 4 bytes @ 0x43
  1086  0000A3                     	ds	4
  1087  0000A7                     ___flmul@temp:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x47
  1091  0000A7                     	ds	2
  1092  0000A9                     ?___flneg:
  1093                           	opt stack 0
  1094  0000A9                     ___flneg@f1:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x49
  1098  0000A9                     	ds	4
  1099  0000AD                     ?___fladd:
  1100                           	opt stack 0
  1101  0000AD                     ?_fabs:
  1102                           	opt stack 0
  1103  0000AD                     fabs@d:
  1104                           	opt stack 0
  1105  0000AD                     ___fladd@b:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x4D
  1109  0000AD                     	ds	4
  1110  0000B1                     ___flge@ff1:
  1111                           	opt stack 0
  1112  0000B1                     ___fladd@a:
  1113                           	opt stack 0
  1114                           
  1115                           ; 4 bytes @ 0x51
  1116  0000B1                     	ds	4
  1117  0000B5                     ??___fladd:
  1118  0000B5                     ___flge@ff2:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x55
  1122  0000B5                     	ds	4
  1123  0000B9                     ??___flge:
  1124                           
  1125                           ; 0 bytes @ 0x59
  1126  0000B9                     	ds	4
  1127  0000BD                     ___fladd@signs:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x5D
  1131  0000BD                     	ds	1
  1132  0000BE                     ___fladd@aexp:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x5E
  1136  0000BE                     	ds	1
  1137  0000BF                     ___fladd@bexp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x5F
  1141  0000BF                     	ds	1
  1142  0000C0                     ___fladd@grs:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x60
  1146  0000C0                     	ds	1
  1147  0000C1                     ?_sqrt:
  1148                           	opt stack 0
  1149  0000C1                     ?_eval_poly:
  1150                           	opt stack 0
  1151  0000C1                     ?___fltol:
  1152                           	opt stack 0
  1153  0000C1                     eval_poly@x:
  1154                           	opt stack 0
  1155  0000C1                     ___fltol@f1:
  1156                           	opt stack 0
  1157  0000C1                     sqrt@a:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x61
  1161  0000C1                     	ds	4
  1162  0000C5                     ??_sqrt:
  1163  0000C5                     ??___fltol:
  1164  0000C5                     eval_poly@d:
  1165                           	opt stack 0
  1166                           
  1167                           ; 2 bytes @ 0x65
  1168  0000C5                     	ds	2
  1169  0000C7                     eval_poly@n:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x67
  1173  0000C7                     	ds	2
  1174  0000C9                     ??_eval_poly:
  1175  0000C9                     ___fltol@sign1:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x69
  1179  0000C9                     	ds	1
  1180  0000CA                     ___fltol@exp1:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x6A
  1184  0000CA                     	ds	1
  1185  0000CB                     ?___xxtofl:
  1186                           	opt stack 0
  1187  0000CB                     ___xxtofl@val:
  1188                           	opt stack 0
  1189                           
  1190                           ; 4 bytes @ 0x6B
  1191  0000CB                     	ds	2
  1192  0000CD                     eval_poly@res:
  1193                           	opt stack 0
  1194                           
  1195                           ; 4 bytes @ 0x6D
  1196  0000CD                     	ds	2
  1197  0000CF                     ??___xxtofl:
  1198                           
  1199                           ; 0 bytes @ 0x6F
  1200  0000CF                     	ds	2
  1201  0000D1                     ?_atan:
  1202                           	opt stack 0
  1203  0000D1                     atan@f:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x71
  1207  0000D1                     	ds	2
  1208  0000D3                     ?_floor:
  1209                           	opt stack 0
  1210  0000D3                     floor@x:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x73
  1214  0000D3                     	ds	2
  1215  0000D5                     ??_parallelo:
  1216  0000D5                     
  1217                           ; 0 bytes @ 0x75
  1218  0000D5                     	ds	2
  1219  0000D7                     tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228                           ; 0 bytes @ 0x77
  1229                           
  1230                           	psect	cstackCOMRAM
  1231  000001                     __pcstackCOMRAM:
  1232                           	opt stack 0
  1233  000001                     CANreceiveMessage@msg:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x0
  1237  000001                     	ds	2
  1238  000003                     ??_CANreceiveMessage:
  1239                           
  1240                           ; 0 bytes @ 0x2
  1241  000003                     	ds	8
  1242  00000B                     CANreceiveMessage@error:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0xA
  1246  00000B                     	ds	1
  1247  00000C                     CANreceiveMessage@tamp:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0xB
  1251  00000C                     	ds	1
  1252  00000D                     ??_ISR_Bassa:
  1253                           
  1254                           ; 0 bytes @ 0xC
  1255  00000D                     	ds	21
  1256  000022                     ISR_Bassa@gigi:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0x21
  1260  000022                     	ds	1
  1261  000023                     ISR_Bassa@i:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x22
  1265  000023                     	ds	1
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 186 in file "parcheggio.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels required when called:   10
  1300 ;; This function calls:
  1301 ;;		_can_interpreter
  1302 ;;		_configurazione
  1303 ;;		_park_routine
  1304 ;;		_park_search
  1305 ;; This function is called by:
  1306 ;;		Startup code after reset
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text0
  1311  005B42                     __ptext0:
  1312                           	opt stack 0
  1313  005B42                     _main:
  1314                           	opt stack 21
  1315                           
  1316                           ;parcheggio.c: 187: MUX_select[0] = 0b00000000;
  1317                           
  1318                           ; BSR set to: 15
  1319                           ;incstack = 0
  1320  005B42  0E00               	movlw	0
  1321  005B44  0101               	movlb	1	; () banked
  1322  005B46  6F00               	movwf	_MUX_select& (0+255),b
  1323                           
  1324                           ;parcheggio.c: 188: MUX_select[1] = 0b00000001;
  1325  005B48  0E01               	movlw	1
  1326  005B4A  0101               	movlb	1	; () banked
  1327  005B4C  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1328                           
  1329                           ;parcheggio.c: 189: MUX_select[2] = 0b00000010;
  1330  005B4E  0E02               	movlw	2
  1331  005B50  0101               	movlb	1	; () banked
  1332  005B52  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1333                           
  1334                           ;parcheggio.c: 190: MUX_select[3] = 0b00000011;
  1335  005B54  0E03               	movlw	3
  1336  005B56  0101               	movlb	1	; () banked
  1337  005B58  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1338                           
  1339                           ;parcheggio.c: 191: MUX_select[4] = 0b00000100;
  1340  005B5A  0E04               	movlw	4
  1341  005B5C  0101               	movlb	1	; () banked
  1342  005B5E  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1343                           
  1344                           ;parcheggio.c: 192: MUX_select[5] = 0b00000101;
  1345  005B60  0E05               	movlw	5
  1346  005B62  0101               	movlb	1	; () banked
  1347  005B64  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1348                           
  1349                           ;parcheggio.c: 193: MUX_select[6] = 0b00000110;
  1350  005B66  0E06               	movlw	6
  1351  005B68  0101               	movlb	1	; () banked
  1352  005B6A  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1353                           
  1354                           ;parcheggio.c: 194: MUX_select[7] = 0b00000111;
  1355  005B6C  0E07               	movlw	7
  1356  005B6E  0101               	movlb	1	; () banked
  1357  005B70  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1358                           
  1359                           ; BSR set to: 1
  1360                           ;parcheggio.c: 195: configurazione();
  1361  005B72  EC41  F02D         	call	_configurazione	;wreg free
  1362                           
  1363                           ;parcheggio.c: 196: PORTBbits.RB4 = 0;
  1364  005B76  9881               	bcf	3969,4,c	;volatile
  1365                           
  1366                           ;parcheggio.c: 197: PORTBbits.RB5 = 0;
  1367  005B78  9A81               	bcf	3969,5,c	;volatile
  1368                           
  1369                           ;parcheggio.c: 198: PORTBbits.RB6 = 0;
  1370  005B7A  9C81               	bcf	3969,6,c	;volatile
  1371                           
  1372                           ;parcheggio.c: 199: request_sent = 0;
  1373  005B7C  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1374                           
  1375                           ;parcheggio.c: 200: start_operation = 0;
  1376  005B7E  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1377  005B80                     l7191:
  1378                           
  1379                           ;parcheggio.c: 216: park_search();
  1380  005B80  ECC0  F027         	call	_park_search	;wreg free
  1381                           
  1382                           ;parcheggio.c: 217: can_interpreter();
  1383  005B84  EC77  F02D         	call	_can_interpreter	;wreg free
  1384                           
  1385                           ;parcheggio.c: 218: park_routine();
  1386  005B88  EC32  F022         	call	_park_routine	;wreg free
  1387  005B8C  D7F9               	goto	l7191
  1388  005B8E                     __end_of_main:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           
  1399 ;; *************** function _park_search *****************
  1400 ;; Defined at:
  1401 ;;		line 222 in file "parcheggio.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    9
  1422 ;; This function calls:
  1423 ;;		_CANisTxReady
  1424 ;;		_CANsendMessage
  1425 ;;		___xxtofl
  1426 ;;		_abs
  1427 ;;		_parallelo
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text1
  1434  004F80                     __ptext1:
  1435                           	opt stack 0
  1436  004F80                     _park_search:
  1437                           	opt stack 21
  1438                           
  1439                           ;parcheggio.c: 223: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1440                           
  1441                           ;incstack = 0
  1442  004F80  D0CE               	goto	l718
  1443  004F82                     l6979:
  1444                           
  1445                           ;parcheggio.c: 224: parallelo();
  1446  004F82  EC87  F023         	call	_parallelo	;wreg free
  1447                           
  1448                           ;parcheggio.c: 225: if (sensor_distance[0] > 50) {
  1449  004F86  5025               	movf	_sensor_distance+1,w,c	;volatile
  1450  004F88  E104               	bnz	u8800
  1451  004F8A  0E33               	movlw	51
  1452  004F8C  5C24               	subwf	_sensor_distance,w,c	;volatile
  1453  004F8E  A0D8               	btfss	status,0,c
  1454  004F90  D02A               	goto	l720
  1455  004F92                     u8800:
  1456                           
  1457                           ;parcheggio.c: 226: if (request_sent == 0) {
  1458  004F92  B045               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1459  004F94  D057               	goto	l6999
  1460  004F96                     l6987:
  1461  004F96  EC8A  F02E         	call	_CANisTxReady	;wreg free
  1462  004F9A  0900               	iorlw	0
  1463  004F9C  B4D8               	btfsc	status,2,c
  1464  004F9E  D7FB               	goto	l6987
  1465                           
  1466                           ;parcheggio.c: 228: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1467  004FA0  0E08               	movlw	8
  1468  004FA2  0100               	movlb	0	; () banked
  1469  004FA4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1470  004FA6  0E00               	movlw	0
  1471  004FA8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1472  004FAA  0E00               	movlw	0
  1473  004FAC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1474  004FAE  0E00               	movlw	0
  1475  004FB0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1476  004FB2  0E53               	movlw	low _data
  1477  004FB4  0100               	movlb	0	; () banked
  1478  004FB6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1479  004FB8  0E01               	movlw	high _data
  1480  004FBA  0100               	movlb	0	; () banked
  1481  004FBC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1482  004FBE  0E08               	movlw	8
  1483  004FC0  0100               	movlb	0	; () banked
  1484  004FC2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1485  004FC4  0EFC               	movlw	252
  1486  004FC6  0100               	movlb	0	; () banked
  1487  004FC8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1488  004FCA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1489                           
  1490                           ;parcheggio.c: 229: request_sent = 1;
  1491  004FCE  8045               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1492                           
  1493                           ;parcheggio.c: 230: alignment_gap = 0;
  1494  004FD0  0E00               	movlw	0
  1495  004FD2  0100               	movlb	0	; () banked
  1496  004FD4  6FD7               	movwf	_alignment_gap& (0+255),b
  1497  004FD6  0E00               	movlw	0
  1498  004FD8  6FD8               	movwf	(_alignment_gap+1)& (0+255),b
  1499  004FDA  0E00               	movlw	0
  1500  004FDC  6FD9               	movwf	(_alignment_gap+2)& (0+255),b
  1501  004FDE  0E00               	movlw	0
  1502  004FE0  6FDA               	movwf	(_alignment_gap+3)& (0+255),b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;parcheggio.c: 231: LATBbits.LATB4 = 1;
  1506  004FE2  888A               	bsf	3978,4,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;parcheggio.c: 232: }
  1510                           ;parcheggio.c: 233: } else {
  1511  004FE4  D02F               	goto	l6999
  1512  004FE6                     l720:
  1513                           
  1514                           ;parcheggio.c: 234: LATBbits.LATB4 = 0;
  1515  004FE6  988A               	bcf	3978,4,c	;volatile
  1516                           
  1517                           ;parcheggio.c: 235: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1518  004FE8  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1519  004FEC  CFDE F1B0          	movff	postinc2,??_park_search
  1520  004FF0  CFDD F1B1          	movff	postdec2,??_park_search+1
  1521  004FF4  0101               	movlb	1	; () banked
  1522  004FF6  1FB0               	comf	??_park_search& (0+255),f,b
  1523  004FF8  1FB1               	comf	(??_park_search+1)& (0+255),f,b
  1524  004FFA  4BB0               	infsnz	??_park_search& (0+255),f,b
  1525  004FFC  2BB1               	incf	(??_park_search+1)& (0+255),f,b
  1526  004FFE  5024               	movf	_sensor_distance,w,c	;volatile
  1527  005000  0101               	movlb	1	; () banked
  1528  005002  25B0               	addwf	??_park_search& (0+255),w,b
  1529  005004  0100               	movlb	0	; () banked
  1530  005006  6F77               	movwf	abs@a& (0+255),b
  1531  005008  5025               	movf	_sensor_distance+1,w,c	;volatile
  1532  00500A  0101               	movlb	1	; () banked
  1533  00500C  21B1               	addwfc	(??_park_search+1)& (0+255),w,b
  1534  00500E  0100               	movlb	0	; () banked
  1535  005010  6F78               	movwf	(abs@a+1)& (0+255),b
  1536  005012  EC5E  F02E         	call	_abs	;wreg free
  1537  005016  0100               	movlb	0	; () banked
  1538  005018  C077  F0CB         	movff	?_abs,___xxtofl@val
  1539  00501C  0100               	movlb	0	; () banked
  1540  00501E  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1541  005022  0100               	movlb	0	; () banked
  1542  005024  0E00               	movlw	0
  1543  005026  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1544  005028  0EFF               	movlw	-1
  1545  00502A  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1546  00502C  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1547  00502E  0E01               	movlw	1
  1548  005030  ECF6  F025         	call	___xxtofl
  1549  005034  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1550  005038  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1551  00503C  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1552  005040  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1553  005044                     l6999:
  1554                           
  1555                           ;parcheggio.c: 236: }
  1556                           ;parcheggio.c: 237: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1557  005044  5025               	movf	_sensor_distance+1,w,c	;volatile
  1558  005046  E122               	bnz	l7009
  1559  005048  0E32               	movlw	50
  1560  00504A  5C24               	subwf	_sensor_distance,w,c	;volatile
  1561  00504C  A0D8               	btfss	status,0,c
  1562  00504E  A045               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1563  005050  D01D               	goto	l7009
  1564                           
  1565                           ;parcheggio.c: 238: request_sent = 0;
  1566  005052  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1567  005054                     l7005:
  1568  005054  EC8A  F02E         	call	_CANisTxReady	;wreg free
  1569  005058  0900               	iorlw	0
  1570  00505A  B4D8               	btfsc	status,2,c
  1571  00505C  D7FB               	goto	l7005
  1572                           
  1573                           ;parcheggio.c: 240: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1574  00505E  0E07               	movlw	7
  1575  005060  0100               	movlb	0	; () banked
  1576  005062  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1577  005064  0E00               	movlw	0
  1578  005066  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1579  005068  0E00               	movlw	0
  1580  00506A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1581  00506C  0E00               	movlw	0
  1582  00506E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1583  005070  0E53               	movlw	low _data
  1584  005072  0100               	movlb	0	; () banked
  1585  005074  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1586  005076  0E01               	movlw	high _data
  1587  005078  0100               	movlb	0	; () banked
  1588  00507A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1589  00507C  0E08               	movlw	8
  1590  00507E  0100               	movlb	0	; () banked
  1591  005080  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1592  005082  0EFC               	movlw	252
  1593  005084  0100               	movlb	0	; () banked
  1594  005086  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1595  005088  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1596  00508C                     l7009:
  1597                           
  1598                           ;parcheggio.c: 241: }
  1599                           ;parcheggio.c: 242: if (distance_received == 1) {
  1600  00508C  A844               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1601  00508E  D047               	goto	l718
  1602                           
  1603                           ;parcheggio.c: 243: if (distance_average > 55) {
  1604  005090  0100               	movlb	0	; () banked
  1605  005092  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1606  005094  E105               	bnz	u8870
  1607  005096  0E38               	movlw	56
  1608  005098  0100               	movlb	0	; () banked
  1609  00509A  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1610  00509C  A0D8               	btfss	status,0,c
  1611  00509E  D03D               	goto	l731
  1612  0050A0                     u8870:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;parcheggio.c: 244: PORTBbits.RB5 = 1;
  1616  0050A0  8A81               	bsf	3969,5,c	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;parcheggio.c: 245: data[0] = 1;
  1620  0050A2  0E01               	movlw	1
  1621  0050A4  0101               	movlb	1	; () banked
  1622  0050A6  6F53               	movwf	_data& (0+255),b
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;parcheggio.c: 246: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1626  0050A8  0E0B               	movlw	11
  1627  0050AA  0100               	movlb	0	; () banked
  1628  0050AC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1629  0050AE  0E00               	movlw	0
  1630  0050B0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1631  0050B2  0E00               	movlw	0
  1632  0050B4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1633  0050B6  0E00               	movlw	0
  1634  0050B8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1635  0050BA  0E53               	movlw	low _data
  1636  0050BC  0100               	movlb	0	; () banked
  1637  0050BE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1638  0050C0  0E01               	movlw	high _data
  1639  0050C2  0100               	movlb	0	; () banked
  1640  0050C4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1641  0050C6  0E01               	movlw	1
  1642  0050C8  0100               	movlb	0	; () banked
  1643  0050CA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1644  0050CC  0EBC               	movlw	188
  1645  0050CE  0100               	movlb	0	; () banked
  1646  0050D0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1647  0050D2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1648                           
  1649                           ;parcheggio.c: 247: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1650  0050D6  B245               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1651  0050D8  D022               	goto	l718
  1652  0050DA  5025               	movf	_sensor_distance+1,w,c	;volatile
  1653  0050DC  E120               	bnz	l718
  1654  0050DE  0E28               	movlw	40
  1655  0050E0  5C24               	subwf	_sensor_distance,w,c	;volatile
  1656  0050E2  B0D8               	btfsc	status,0,c
  1657  0050E4  D01C               	goto	l718
  1658                           
  1659                           ;parcheggio.c: 248: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1660  0050E6  0E08               	movlw	8
  1661  0050E8  0100               	movlb	0	; () banked
  1662  0050EA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1663  0050EC  0E00               	movlw	0
  1664  0050EE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1665  0050F0  0E00               	movlw	0
  1666  0050F2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1667  0050F4  0E00               	movlw	0
  1668  0050F6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1669  0050F8  0E53               	movlw	low _data
  1670  0050FA  0100               	movlb	0	; () banked
  1671  0050FC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1672  0050FE  0E01               	movlw	high _data
  1673  005100  0100               	movlb	0	; () banked
  1674  005102  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1675  005104  0E08               	movlw	8
  1676  005106  0100               	movlb	0	; () banked
  1677  005108  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1678  00510A  0EFC               	movlw	252
  1679  00510C  0100               	movlb	0	; () banked
  1680  00510E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1681  005110  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1682                           
  1683                           ;parcheggio.c: 249: distance_received1 = 0;
  1684  005114  9A44               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1685                           
  1686                           ;parcheggio.c: 250: request_sent1 = 1;
  1687  005116  8245               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1688                           
  1689                           ;parcheggio.c: 251: }
  1690                           ;parcheggio.c: 252: } else {
  1691  005118  D002               	goto	l718
  1692  00511A                     l731:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;parcheggio.c: 253: distance_received = 0;
  1696  00511A  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1697                           
  1698                           ;parcheggio.c: 254: PORTBbits.RB5 = 0;
  1699  00511C  9A81               	bcf	3969,5,c	;volatile
  1700  00511E                     l718:
  1701  00511E  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1702  005120  0012               	return	
  1703  005122  BA81               	btfsc	3969,5,c	;volatile
  1704  005124  0012               	return	
  1705  005126  D72D               	goto	l6979
  1706  005128                     __end_of_park_search:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _parallelo *****************
  1721 ;; Defined at:
  1722 ;;		line 356 in file "parcheggio.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    8
  1743 ;; This function calls:
  1744 ;;		___fladd
  1745 ;;		___fldiv
  1746 ;;		___flge
  1747 ;;		___flmul
  1748 ;;		___fltol
  1749 ;;		___xxtofl
  1750 ;;		_abs
  1751 ;;		_asin
  1752 ;;		_can_send
  1753 ;;		_sqrt
  1754 ;; This function is called by:
  1755 ;;		_park_search
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760  00470E                     __ptext2:
  1761                           	opt stack 0
  1762  00470E                     _parallelo:
  1763                           	opt stack 21
  1764                           
  1765                           ;parcheggio.c: 357: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1766                           
  1767                           ;incstack = 0
  1768  00470E  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1769  004712  CFDE F0D5          	movff	postinc2,??_parallelo
  1770  004716  CFDD F0D6          	movff	postdec2,??_parallelo+1
  1771  00471A  0100               	movlb	0	; () banked
  1772  00471C  1FD5               	comf	??_parallelo& (0+255),f,b
  1773  00471E  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  1774  004720  4BD5               	infsnz	??_parallelo& (0+255),f,b
  1775  004722  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  1776  004724  5024               	movf	_sensor_distance,w,c	;volatile
  1777  004726  0100               	movlb	0	; () banked
  1778  004728  25D5               	addwf	??_parallelo& (0+255),w,b
  1779  00472A  0100               	movlb	0	; () banked
  1780  00472C  6F77               	movwf	abs@a& (0+255),b
  1781  00472E  5025               	movf	_sensor_distance+1,w,c	;volatile
  1782  004730  0100               	movlb	0	; () banked
  1783  004732  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  1784  004734  0100               	movlb	0	; () banked
  1785  004736  6F78               	movwf	(abs@a+1)& (0+255),b
  1786  004738  EC5E  F02E         	call	_abs	;wreg free
  1787  00473C  0100               	movlb	0	; () banked
  1788  00473E  C077  F0CB         	movff	?_abs,___xxtofl@val
  1789  004742  0100               	movlb	0	; () banked
  1790  004744  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1791  004748  0100               	movlb	0	; () banked
  1792  00474A  0E00               	movlw	0
  1793  00474C  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1794  00474E  0EFF               	movlw	-1
  1795  004750  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1796  004752  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1797  004754  0E01               	movlw	1
  1798  004756  ECF6  F025         	call	___xxtofl
  1799  00475A  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1800  00475E  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1801  004762  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1802  004766  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1803                           
  1804                           ;parcheggio.c: 359: if (alignment_gap < 30) {
  1805  00476A  C0D7  F0B1         	movff	_alignment_gap,___flge@ff1
  1806  00476E  C0D8  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1807  004772  C0D9  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1808  004776  C0DA  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1809  00477A  0E00               	movlw	0
  1810  00477C  0100               	movlb	0	; () banked
  1811  00477E  6FB5               	movwf	___flge@ff2& (0+255),b
  1812  004780  0E00               	movlw	0
  1813  004782  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1814  004784  0EF0               	movlw	240
  1815  004786  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1816  004788  0E41               	movlw	65
  1817  00478A  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1818  00478C  EC94  F028         	call	___flge	;wreg free
  1819  004790  0100               	movlb	0	; () banked
  1820  004792  B0D8               	btfsc	status,0,c
  1821  004794  D0F9               	goto	l779
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;parcheggio.c: 360: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  1825  004796  5025               	movf	_sensor_distance+1,w,c	;volatile
  1826  004798  E103               	bnz	u8711
  1827  00479A  0E28               	movlw	40
  1828  00479C  5C24               	subwf	_sensor_distance,w,c	;volatile
  1829  00479E  B0D8               	btfsc	status,0,c
  1830  0047A0                     u8711:
  1831  0047A0  D0E5               	goto	l6931
  1832                           
  1833                           ; BSR set to: 0
  1834  0047A2  5027               	movf	_sensor_distance+3,w,c	;volatile
  1835  0047A4  E103               	bnz	u8721
  1836  0047A6  0E28               	movlw	40
  1837  0047A8  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1838  0047AA  B0D8               	btfsc	status,0,c
  1839  0047AC                     u8721:
  1840  0047AC  D0DF               	goto	l6931
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;parcheggio.c: 364: x = ((100) + (alignment_gap * alignment_gap));
  1844  0047AE  C0D7  F094         	movff	_alignment_gap,___flmul@a
  1845  0047B2  C0D8  F095         	movff	_alignment_gap+1,___flmul@a+1
  1846  0047B6  C0D9  F096         	movff	_alignment_gap+2,___flmul@a+2
  1847  0047BA  C0DA  F097         	movff	_alignment_gap+3,___flmul@a+3
  1848  0047BE  C0D7  F090         	movff	_alignment_gap,___flmul@b
  1849  0047C2  C0D8  F091         	movff	_alignment_gap+1,___flmul@b+1
  1850  0047C6  C0D9  F092         	movff	_alignment_gap+2,___flmul@b+2
  1851  0047CA  C0DA  F093         	movff	_alignment_gap+3,___flmul@b+3
  1852  0047CE  EC36  F017         	call	___flmul	;wreg free
  1853  0047D2  C090  F0AD         	movff	?___flmul,___fladd@b
  1854  0047D6  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1855  0047DA  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1856  0047DE  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1857  0047E2  0E00               	movlw	0
  1858  0047E4  0100               	movlb	0	; () banked
  1859  0047E6  6FB1               	movwf	___fladd@a& (0+255),b
  1860  0047E8  0E00               	movlw	0
  1861  0047EA  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1862  0047EC  0EC8               	movlw	200
  1863  0047EE  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1864  0047F0  0E42               	movlw	66
  1865  0047F2  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1866  0047F4  ECE2  F014         	call	___fladd	;wreg free
  1867  0047F8  C0AD  F13C         	movff	?___fladd,_x
  1868  0047FC  C0AE  F13D         	movff	?___fladd+1,_x+1
  1869  004800  C0AF  F13E         	movff	?___fladd+2,_x+2
  1870  004804  C0B0  F13F         	movff	?___fladd+3,_x+3
  1871                           
  1872                           ;parcheggio.c: 365: x = sqrt(x);
  1873  004808  C13C  F0C1         	movff	_x,sqrt@a
  1874  00480C  C13D  F0C2         	movff	_x+1,sqrt@a+1
  1875  004810  C13E  F0C3         	movff	_x+2,sqrt@a+2
  1876  004814  C13F  F0C4         	movff	_x+3,sqrt@a+3
  1877  004818  EC89  F019         	call	_sqrt	;wreg free
  1878  00481C  C0C1  F13C         	movff	?_sqrt,_x
  1879  004820  C0C2  F13D         	movff	?_sqrt+1,_x+1
  1880  004824  C0C3  F13E         	movff	?_sqrt+2,_x+2
  1881  004828  C0C4  F13F         	movff	?_sqrt+3,_x+3
  1882                           
  1883                           ;parcheggio.c: 366: z = alignment_gap / x;
  1884  00482C  C0D7  F077         	movff	_alignment_gap,___fldiv@b
  1885  004830  C0D8  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1886  004834  C0D9  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1887  004838  C0DA  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1888  00483C  C13C  F07B         	movff	_x,___fldiv@a
  1889  004840  C13D  F07C         	movff	_x+1,___fldiv@a+1
  1890  004844  C13E  F07D         	movff	_x+2,___fldiv@a+2
  1891  004848  C13F  F07E         	movff	_x+3,___fldiv@a+3
  1892  00484C  EC6E  F01B         	call	___fldiv	;wreg free
  1893  004850  C077  F0DB         	movff	?___fldiv,_z
  1894  004854  C078  F0DC         	movff	?___fldiv+1,_z+1
  1895  004858  C079  F0DD         	movff	?___fldiv+2,_z+2
  1896  00485C  C07A  F0DE         	movff	?___fldiv+3,_z+3
  1897                           
  1898                           ;parcheggio.c: 367: z = asin(z);
  1899  004860  C0DB  F198         	movff	_z,asin@x
  1900  004864  C0DC  F199         	movff	_z+1,asin@x+1
  1901  004868  C0DD  F19A         	movff	_z+2,asin@x+2
  1902  00486C  C0DE  F19B         	movff	_z+3,asin@x+3
  1903  004870  ECA9  F020         	call	_asin	;wreg free
  1904  004874  C198  F0DB         	movff	?_asin,_z
  1905  004878  C199  F0DC         	movff	?_asin+1,_z+1
  1906  00487C  C19A  F0DD         	movff	?_asin+2,_z+2
  1907  004880  C19B  F0DE         	movff	?_asin+3,_z+3
  1908                           
  1909                           ;parcheggio.c: 368: z = z / 3.14159265358979323846 * 180;
  1910  004884  0EDB               	movlw	219
  1911  004886  0100               	movlb	0	; () banked
  1912  004888  6F7B               	movwf	___fldiv@a& (0+255),b
  1913  00488A  0E0F               	movlw	15
  1914  00488C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1915  00488E  0E49               	movlw	73
  1916  004890  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1917  004892  0E40               	movlw	64
  1918  004894  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1919  004896  C0DB  F077         	movff	_z,___fldiv@b
  1920  00489A  C0DC  F078         	movff	_z+1,___fldiv@b+1
  1921  00489E  C0DD  F079         	movff	_z+2,___fldiv@b+2
  1922  0048A2  C0DE  F07A         	movff	_z+3,___fldiv@b+3
  1923  0048A6  EC6E  F01B         	call	___fldiv	;wreg free
  1924  0048AA  C077  F090         	movff	?___fldiv,___flmul@b
  1925  0048AE  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1926  0048B2  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1927  0048B6  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1928  0048BA  0E00               	movlw	0
  1929  0048BC  0100               	movlb	0	; () banked
  1930  0048BE  6F94               	movwf	___flmul@a& (0+255),b
  1931  0048C0  0E00               	movlw	0
  1932  0048C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1933  0048C4  0E34               	movlw	52
  1934  0048C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1935  0048C8  0E43               	movlw	67
  1936  0048CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1937  0048CC  EC36  F017         	call	___flmul	;wreg free
  1938  0048D0  C090  F0DB         	movff	?___flmul,_z
  1939  0048D4  C091  F0DC         	movff	?___flmul+1,_z+1
  1940  0048D8  C092  F0DD         	movff	?___flmul+2,_z+2
  1941  0048DC  C093  F0DE         	movff	?___flmul+3,_z+3
  1942                           
  1943                           ;parcheggio.c: 369: data_correction[0] = z;
  1944  0048E0  C0DB  F0C1         	movff	_z,___fltol@f1
  1945  0048E4  C0DC  F0C2         	movff	_z+1,___fltol@f1+1
  1946  0048E8  C0DD  F0C3         	movff	_z+2,___fltol@f1+2
  1947  0048EC  C0DE  F0C4         	movff	_z+3,___fltol@f1+3
  1948  0048F0  EC15  F02B         	call	___fltol	;wreg free
  1949  0048F4  0100               	movlb	0	; () banked
  1950  0048F6  51C1               	movf	?___fltol& (0+255),w,b
  1951  0048F8  0101               	movlb	1	; () banked
  1952  0048FA  6F63               	movwf	_data_correction& (0+255),b
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;parcheggio.c: 371: if (sensor_distance[0] < sensor_distance[1]) {
  1956  0048FC  5026               	movf	_sensor_distance+2,w,c	;volatile
  1957  0048FE  5C24               	subwf	_sensor_distance,w,c	;volatile
  1958  004900  5027               	movf	_sensor_distance+3,w,c	;volatile
  1959  004902  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  1960  004904  B0D8               	btfsc	status,0,c
  1961  004906  D002               	goto	l6923
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;parcheggio.c: 372: data_correction[1] = 0;
  1965  004908  0E00               	movlw	0
  1966  00490A  D001               	goto	L1
  1967  00490C                     l6923:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;parcheggio.c: 374: data_correction[1] = 1;
  1971  00490C  0E01               	movlw	1
  1972  00490E                     L1:
  1973  00490E  0101               	movlb	1	; () banked
  1974  004910  6F64               	movwf	(_data_correction+1)& (0+255),b
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;parcheggio.c: 375: }
  1978                           ;parcheggio.c: 376: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  1979                           
  1980                           ; BSR set to: 1
  1981  004912  0100               	movlb	0	; () banked
  1982  004914  51D7               	movf	_alignment_gap& (0+255),w,b
  1983  004916  0101               	movlb	1	; () banked
  1984  004918  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  1985  00491A  E117               	bnz	l785
  1986  00491C  0100               	movlb	0	; () banked
  1987  00491E  51D8               	movf	(_alignment_gap+1)& (0+255),w,b
  1988  004920  0101               	movlb	1	; () banked
  1989  004922  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  1990  004924  E112               	bnz	l785
  1991  004926  0100               	movlb	0	; () banked
  1992  004928  51D9               	movf	(_alignment_gap+2)& (0+255),w,b
  1993  00492A  0101               	movlb	1	; () banked
  1994  00492C  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  1995  00492E  E10D               	bnz	l785
  1996  004930  0100               	movlb	0	; () banked
  1997  004932  51DA               	movf	(_alignment_gap+3)& (0+255),w,b
  1998  004934  0101               	movlb	1	; () banked
  1999  004936  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2000  004938  A4D8               	btfss	status,2,c
  2001  00493A  D007               	goto	l785
  2002                           
  2003                           ; BSR set to: 1
  2004  00493C  0E00               	movlw	0
  2005  00493E  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2006  004940  0E01               	movlw	1
  2007  004942  0101               	movlb	1	; () banked
  2008  004944  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2009  004946  B4D8               	btfsc	status,2,c
  2010  004948  0012               	return	
  2011  00494A                     l785:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;parcheggio.c: 377: old_alignment_gap = alignment_gap;
  2015  00494A  C0D7  F134         	movff	_alignment_gap,_old_alignment_gap
  2016  00494E  C0D8  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2017  004952  C0D9  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2018  004956  C0DA  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2019                           
  2020                           ;parcheggio.c: 378: old_data_correction = data_correction[1];
  2021  00495A  0101               	movlb	1	; () banked
  2022  00495C  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2023  00495E  D002               	goto	u8760
  2024  004960  8E44               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2025  004962  D001               	goto	l6929
  2026  004964                     u8760:
  2027  004964  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2028  004966                     l6929:
  2029                           
  2030                           ;parcheggio.c: 379: can_send();
  2031  004966  EC5C  F029         	call	_can_send	;wreg free
  2032                           
  2033                           ;parcheggio.c: 380: }
  2034                           ;parcheggio.c: 381: } else if (data_correction[0] != old_data_correction) {
  2035  00496A  0012               	return	
  2036  00496C                     l6931:
  2037  00496C  0E00               	movlw	0
  2038  00496E  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2039  004970  0E01               	movlw	1
  2040  004972  0101               	movlb	1	; () banked
  2041  004974  1963               	xorwf	_data_correction& (0+255),w,b
  2042  004976  B4D8               	btfsc	status,2,c
  2043  004978  0012               	return	
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;parcheggio.c: 382: data_correction[0] = 0;
  2047  00497A  0E00               	movlw	0
  2048  00497C  0101               	movlb	1	; () banked
  2049  00497E  6F63               	movwf	_data_correction& (0+255),b
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;parcheggio.c: 383: old_data_correction = 0;
  2053  004980  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;parcheggio.c: 384: can_send();
  2057  004982  EC5C  F029         	call	_can_send	;wreg free
  2058                           
  2059                           ;parcheggio.c: 385: }
  2060                           ;parcheggio.c: 386: } else {
  2061  004986  0012               	return	
  2062  004988                     l779:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;parcheggio.c: 387: if (old_data_correction != 0) {
  2066  004988  AE44               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2067  00498A  0012               	return	
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;parcheggio.c: 388: data_correction[0] = 0;
  2071  00498C  0E00               	movlw	0
  2072  00498E  0101               	movlb	1	; () banked
  2073  004990  6F63               	movwf	_data_correction& (0+255),b
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;parcheggio.c: 389: old_data_correction = 0;
  2077  004992  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;parcheggio.c: 390: can_send();
  2081  004994  EC5C  F029         	call	_can_send	;wreg free
  2082  004998  0012               	return	
  2083  00499A                     __end_of_parallelo:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           postinc2	equ	0xFDE
  2094                           postdec2	equ	0xFDD
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _abs *****************
  2098 ;; Defined at:
  2099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  a               2   23[BANK0 ] int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   23[BANK0 ] int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;Total ram usage:        4 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_park_search
  2124 ;;		_parallelo
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text3
  2129  005CBC                     __ptext3:
  2130                           	opt stack 0
  2131  005CBC                     _abs:
  2132                           	opt stack 24
  2133                           
  2134                           ;incstack = 0
  2135  005CBC  0100               	movlb	0	; () banked
  2136  005CBE  AF78               	btfss	(abs@a+1)& (0+255),7,b
  2137  005CC0  D00E               	goto	l849
  2138                           
  2139                           ; BSR set to: 0
  2140  005CC2  C077  F079         	movff	abs@a,??_abs
  2141  005CC6  C078  F07A         	movff	abs@a+1,??_abs+1
  2142  005CCA  0100               	movlb	0	; () banked
  2143  005CCC  1F79               	comf	??_abs& (0+255),f,b
  2144  005CCE  1F7A               	comf	(??_abs+1)& (0+255),f,b
  2145  005CD0  4B79               	infsnz	??_abs& (0+255),f,b
  2146  005CD2  2B7A               	incf	(??_abs+1)& (0+255),f,b
  2147  005CD4  C079  F077         	movff	??_abs,?_abs
  2148  005CD8  C07A  F078         	movff	??_abs+1,?_abs+1
  2149  005CDC  0012               	return	
  2150  005CDE                     l849:
  2151                           
  2152                           ; BSR set to: 0
  2153  005CDE  C077  F077         	movff	abs@a,?_abs
  2154  005CE2  C078  F078         	movff	abs@a+1,?_abs+1
  2155                           
  2156                           ; BSR set to: 0
  2157  005CE6  0012               	return		;funcret
  2158  005CE8                     __end_of_abs:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _park_routine *****************
  2173 ;; Defined at:
  2174 ;;		line 260 in file "parcheggio.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    9
  2195 ;; This function calls:
  2196 ;;		_CANsendMessage
  2197 ;;		___fladd
  2198 ;;		___fltol
  2199 ;;		___xxtofl
  2200 ;;		_can_send
  2201 ;;		_delay_s
  2202 ;;		_matematica
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text4
  2209  004464                     __ptext4:
  2210                           	opt stack 0
  2211  004464                     _park_routine:
  2212                           	opt stack 21
  2213                           
  2214                           ;parcheggio.c: 261: while ((PORTBbits.RB5 == 1) && (activation == 1)&&(start_operation =
      +                          = 1)) {
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;incstack = 0
  2218  004464  D14D               	goto	l7131
  2219  004466                     l7033:
  2220                           
  2221                           ;parcheggio.c: 262: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  2222  004466  0E07               	movlw	7
  2223  004468  0100               	movlb	0	; () banked
  2224  00446A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2225  00446C  0E00               	movlw	0
  2226  00446E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2227  004470  0E00               	movlw	0
  2228  004472  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2229  004474  0E00               	movlw	0
  2230  004476  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2231  004478  0E53               	movlw	low _data
  2232  00447A  0100               	movlb	0	; () banked
  2233  00447C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2234  00447E  0E01               	movlw	high _data
  2235  004480  0100               	movlb	0	; () banked
  2236  004482  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2237  004484  0E08               	movlw	8
  2238  004486  0100               	movlb	0	; () banked
  2239  004488  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2240  00448A  0EFC               	movlw	252
  2241  00448C  0100               	movlb	0	; () banked
  2242  00448E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2243  004490  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2244                           
  2245                           ;parcheggio.c: 263: bordo = sensor_distance[0];
  2246  004494  C024  F0CB         	movff	_sensor_distance,___xxtofl@val	;volatile
  2247  004498  C025  F0CC         	movff	_sensor_distance+1,___xxtofl@val+1	;volatile
  2248  00449C  0100               	movlb	0	; () banked
  2249  00449E  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2250  0044A0  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2251  0044A2  0E00               	movlw	0
  2252  0044A4  ECF6  F025         	call	___xxtofl
  2253  0044A8  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  2254  0044AC  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  2255  0044B0  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  2256  0044B4  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  2257                           
  2258                           ;parcheggio.c: 264: matematica();
  2259  0044B8  EC78  F012         	call	_matematica	;wreg free
  2260                           
  2261                           ;parcheggio.c: 265: set_speed = 0;
  2262  0044BC  0E00               	movlw	0
  2263  0044BE  0100               	movlb	0	; () banked
  2264  0044C0  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2265  0044C2  0E00               	movlw	0
  2266  0044C4  6FE5               	movwf	_set_speed& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;parcheggio.c: 266: data_steering[0] = 90;
  2270  0044C6  0E5A               	movlw	90
  2271  0044C8  0101               	movlb	1	; () banked
  2272  0044CA  6F73               	movwf	_data_steering& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;parcheggio.c: 267: data_brake [0] = 0;
  2276  0044CC  0E00               	movlw	0
  2277  0044CE  0101               	movlb	1	; () banked
  2278  0044D0  6F5B               	movwf	_data_brake& (0+255),b
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;parcheggio.c: 268: data_brake [1] = 1;
  2282  0044D2  0E01               	movlw	1
  2283  0044D4  0101               	movlb	1	; () banked
  2284  0044D6  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;parcheggio.c: 269: can_send();
  2288  0044D8  EC5C  F029         	call	_can_send	;wreg free
  2289                           
  2290                           ;parcheggio.c: 270: delay_s(1);
  2291  0044DC  0E01               	movlw	1
  2292  0044DE  EC74  F02E         	call	_delay_s
  2293                           
  2294                           ;parcheggio.c: 271: data_brake [0] = 3;
  2295  0044E2  0E03               	movlw	3
  2296  0044E4  0101               	movlb	1	; () banked
  2297  0044E6  6F5B               	movwf	_data_brake& (0+255),b
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;parcheggio.c: 272: data_brake [1] = 1;
  2301  0044E8  0E01               	movlw	1
  2302  0044EA  0101               	movlb	1	; () banked
  2303  0044EC  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2304  0044EE                     l742:
  2305  0044EE  AA44               	btfss	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  2306  0044F0  D7FE               	goto	l742
  2307                           
  2308                           ;parcheggio.c: 274: if (distance_average > 46) {
  2309  0044F2  0100               	movlb	0	; () banked
  2310  0044F4  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  2311  0044F6  E105               	bnz	u8930
  2312  0044F8  0E2F               	movlw	47
  2313  0044FA  0100               	movlb	0	; () banked
  2314  0044FC  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  2315  0044FE  A0D8               	btfss	status,0,c
  2316  004500  D02A               	goto	l7069
  2317  004502                     u8930:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;parcheggio.c: 275: set_speed = 50;
  2321  004502  0E00               	movlw	0
  2322  004504  0100               	movlb	0	; () banked
  2323  004506  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2324  004508  0E32               	movlw	50
  2325  00450A  6FE5               	movwf	_set_speed& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;parcheggio.c: 276: dir = 0;
  2329  00450C  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2330                           
  2331                           ;parcheggio.c: 277: data_steering[0] = 90;
  2332  00450E  0E5A               	movlw	90
  2333  004510  0101               	movlb	1	; () banked
  2334  004512  6F73               	movwf	_data_steering& (0+255),b
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;parcheggio.c: 278: data_test[0] = (distance_average - 45);
  2338  004514  0100               	movlb	0	; () banked
  2339  004516  51E3               	movf	_distance_average& (0+255),w,b	;volatile
  2340  004518  0FD3               	addlw	211
  2341  00451A  0101               	movlb	1	; () banked
  2342  00451C  6F7B               	movwf	_data_test& (0+255),b
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;parcheggio.c: 279: asd = 1;
  2346  00451E  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;parcheggio.c: 280: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2350  004520  0E0D               	movlw	13
  2351  004522  0100               	movlb	0	; () banked
  2352  004524  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2353  004526  0E00               	movlw	0
  2354  004528  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2355  00452A  0E00               	movlw	0
  2356  00452C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2357  00452E  0E00               	movlw	0
  2358  004530  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2359  004532  0E7B               	movlw	low _data_test
  2360  004534  0100               	movlb	0	; () banked
  2361  004536  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2362  004538  0E01               	movlw	high _data_test
  2363  00453A  0100               	movlb	0	; () banked
  2364  00453C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2365  00453E  0E08               	movlw	8
  2366  004540  0100               	movlb	0	; () banked
  2367  004542  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2368  004544  0EBC               	movlw	188
  2369  004546  0100               	movlb	0	; () banked
  2370  004548  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2371  00454A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2372                           
  2373                           ;parcheggio.c: 281: can_send();
  2374  00454E  EC5C  F029         	call	_can_send	;wreg free
  2375  004552                     l746:
  2376  004552  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2377  004554  D7FE               	goto	l746
  2378  004556                     l7069:
  2379                           
  2380                           ;parcheggio.c: 283: }
  2381                           ;parcheggio.c: 284: set_speed = 0;
  2382  004556  0E00               	movlw	0
  2383  004558  0100               	movlb	0	; () banked
  2384  00455A  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2385  00455C  0E00               	movlw	0
  2386  00455E  6FE5               	movwf	_set_speed& (0+255),b
  2387                           
  2388                           ;parcheggio.c: 285: data_steering[0] = 90;
  2389  004560  0E5A               	movlw	90
  2390  004562  0101               	movlb	1	; () banked
  2391  004564  6F73               	movwf	_data_steering& (0+255),b
  2392                           
  2393                           ;parcheggio.c: 286: data_brake [0] = 0;
  2394  004566  0E00               	movlw	0
  2395  004568  0101               	movlb	1	; () banked
  2396  00456A  6F5B               	movwf	_data_brake& (0+255),b
  2397                           
  2398                           ;parcheggio.c: 287: data_brake [1] = 1;
  2399  00456C  0E01               	movlw	1
  2400  00456E  0101               	movlb	1	; () banked
  2401  004570  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;parcheggio.c: 288: can_send();
  2405  004572  EC5C  F029         	call	_can_send	;wreg free
  2406                           
  2407                           ;parcheggio.c: 289: delay_s(1);
  2408  004576  0E01               	movlw	1
  2409  004578  EC74  F02E         	call	_delay_s
  2410                           
  2411                           ;parcheggio.c: 290: data_brake [0] = 3;
  2412  00457C  0E03               	movlw	3
  2413  00457E  0101               	movlb	1	; () banked
  2414  004580  6F5B               	movwf	_data_brake& (0+255),b
  2415                           
  2416                           ; BSR set to: 1
  2417                           ;parcheggio.c: 291: data_brake [1] = 1;
  2418  004582  0E01               	movlw	1
  2419  004584  0101               	movlb	1	; () banked
  2420  004586  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;parcheggio.c: 292: set_speed = 50;
  2424  004588  0E00               	movlw	0
  2425  00458A  0100               	movlb	0	; () banked
  2426  00458C  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2427  00458E  0E32               	movlw	50
  2428  004590  6FE5               	movwf	_set_speed& (0+255),b
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;parcheggio.c: 293: dir = 0;
  2432  004592  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;parcheggio.c: 294: data_steering[0] = 180;
  2436  004594  0EB4               	movlw	180
  2437  004596  0101               	movlb	1	; () banked
  2438  004598  6F73               	movwf	_data_steering& (0+255),b
  2439                           
  2440                           ; BSR set to: 1
  2441                           ;parcheggio.c: 295: data_test[0] = prima_sterzata;
  2442  00459A  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2443  00459E  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2444  0045A2  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2445  0045A6  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2446  0045AA  EC15  F02B         	call	___fltol	;wreg free
  2447  0045AE  0100               	movlb	0	; () banked
  2448  0045B0  51C1               	movf	?___fltol& (0+255),w,b
  2449  0045B2  0101               	movlb	1	; () banked
  2450  0045B4  6F7B               	movwf	_data_test& (0+255),b
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;parcheggio.c: 296: asd = 1;
  2454  0045B6  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2455                           
  2456                           ; BSR set to: 1
  2457                           ;parcheggio.c: 297: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2458  0045B8  0E0D               	movlw	13
  2459  0045BA  0100               	movlb	0	; () banked
  2460  0045BC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2461  0045BE  0E00               	movlw	0
  2462  0045C0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2463  0045C2  0E00               	movlw	0
  2464  0045C4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2465  0045C6  0E00               	movlw	0
  2466  0045C8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2467  0045CA  0E7B               	movlw	low _data_test
  2468  0045CC  0100               	movlb	0	; () banked
  2469  0045CE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2470  0045D0  0E01               	movlw	high _data_test
  2471  0045D2  0100               	movlb	0	; () banked
  2472  0045D4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2473  0045D6  0E08               	movlw	8
  2474  0045D8  0100               	movlb	0	; () banked
  2475  0045DA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2476  0045DC  0EBC               	movlw	188
  2477  0045DE  0100               	movlb	0	; () banked
  2478  0045E0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2479  0045E2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2480                           
  2481                           ;parcheggio.c: 298: can_send();
  2482  0045E6  EC5C  F029         	call	_can_send	;wreg free
  2483  0045EA                     l749:
  2484  0045EA  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2485  0045EC  D7FE               	goto	l749
  2486                           
  2487                           ;parcheggio.c: 300: set_speed = 50;
  2488  0045EE  0E00               	movlw	0
  2489  0045F0  0100               	movlb	0	; () banked
  2490  0045F2  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2491  0045F4  0E32               	movlw	50
  2492  0045F6  6FE5               	movwf	_set_speed& (0+255),b
  2493                           
  2494                           ;parcheggio.c: 301: data_steering[0] = 0;
  2495  0045F8  0E00               	movlw	0
  2496  0045FA  0101               	movlb	1	; () banked
  2497  0045FC  6F73               	movwf	_data_steering& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;parcheggio.c: 302: asd = 1;
  2501  0045FE  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;parcheggio.c: 303: data_test[0] = prima_sterzata + 10;
  2505  004600  0E00               	movlw	0
  2506  004602  0100               	movlb	0	; () banked
  2507  004604  6FB1               	movwf	___fladd@a& (0+255),b
  2508  004606  0E00               	movlw	0
  2509  004608  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2510  00460A  0E20               	movlw	32
  2511  00460C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2512  00460E  0E41               	movlw	65
  2513  004610  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2514  004612  C138  F0AD         	movff	_prima_sterzata,___fladd@b
  2515  004616  C139  F0AE         	movff	_prima_sterzata+1,___fladd@b+1
  2516  00461A  C13A  F0AF         	movff	_prima_sterzata+2,___fladd@b+2
  2517  00461E  C13B  F0B0         	movff	_prima_sterzata+3,___fladd@b+3
  2518  004622  ECE2  F014         	call	___fladd	;wreg free
  2519  004626  C0AD  F0C1         	movff	?___fladd,___fltol@f1
  2520  00462A  C0AE  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2521  00462E  C0AF  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2522  004632  C0B0  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2523  004636  EC15  F02B         	call	___fltol	;wreg free
  2524  00463A  0100               	movlb	0	; () banked
  2525  00463C  51C1               	movf	?___fltol& (0+255),w,b
  2526  00463E  0101               	movlb	1	; () banked
  2527  004640  6F7B               	movwf	_data_test& (0+255),b
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;parcheggio.c: 304: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2531  004642  0E0D               	movlw	13
  2532  004644  0100               	movlb	0	; () banked
  2533  004646  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2534  004648  0E00               	movlw	0
  2535  00464A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2536  00464C  0E00               	movlw	0
  2537  00464E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2538  004650  0E00               	movlw	0
  2539  004652  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2540  004654  0E7B               	movlw	low _data_test
  2541  004656  0100               	movlb	0	; () banked
  2542  004658  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2543  00465A  0E01               	movlw	high _data_test
  2544  00465C  0100               	movlb	0	; () banked
  2545  00465E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2546  004660  0E08               	movlw	8
  2547  004662  0100               	movlb	0	; () banked
  2548  004664  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2549  004666  0EBC               	movlw	188
  2550  004668  0100               	movlb	0	; () banked
  2551  00466A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2552  00466C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2553                           
  2554                           ;parcheggio.c: 305: can_send();
  2555  004670  EC5C  F029         	call	_can_send	;wreg free
  2556  004674                     l752:
  2557  004674  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2558  004676  D7FE               	goto	l752
  2559                           
  2560                           ;parcheggio.c: 307: data_brake [0] = 0;
  2561  004678  0E00               	movlw	0
  2562  00467A  0101               	movlb	1	; () banked
  2563  00467C  6F5B               	movwf	_data_brake& (0+255),b
  2564                           
  2565                           ;parcheggio.c: 308: data_brake [1] = 1;
  2566  00467E  0E01               	movlw	1
  2567  004680  0101               	movlb	1	; () banked
  2568  004682  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2569                           
  2570                           ;parcheggio.c: 309: set_speed = 0;
  2571  004684  0E00               	movlw	0
  2572  004686  0100               	movlb	0	; () banked
  2573  004688  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2574  00468A  0E00               	movlw	0
  2575  00468C  6FE5               	movwf	_set_speed& (0+255),b
  2576                           
  2577                           ;parcheggio.c: 310: data_steering[0] = 90;
  2578  00468E  0E5A               	movlw	90
  2579  004690  0101               	movlb	1	; () banked
  2580  004692  6F73               	movwf	_data_steering& (0+255),b
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;parcheggio.c: 311: can_send();
  2584  004694  EC5C  F029         	call	_can_send	;wreg free
  2585                           
  2586                           ;parcheggio.c: 312: delay_s(1);
  2587  004698  0E01               	movlw	1
  2588  00469A  EC74  F02E         	call	_delay_s
  2589                           
  2590                           ;parcheggio.c: 313: if (sensor_distance [2] > 20) {
  2591  00469E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2592  0046A0  E104               	bnz	u8970
  2593  0046A2  0E15               	movlw	21
  2594  0046A4  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2595  0046A6  A0D8               	btfss	status,0,c
  2596  0046A8  D017               	goto	l7119
  2597  0046AA                     u8970:
  2598                           
  2599                           ;parcheggio.c: 314: data_brake [0] = 3;
  2600  0046AA  0E03               	movlw	3
  2601  0046AC  0101               	movlb	1	; () banked
  2602  0046AE  6F5B               	movwf	_data_brake& (0+255),b
  2603                           
  2604                           ;parcheggio.c: 315: data_brake [1] = 1;
  2605  0046B0  0E01               	movlw	1
  2606  0046B2  0101               	movlb	1	; () banked
  2607  0046B4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2608                           
  2609                           ;parcheggio.c: 316: set_speed = 50;
  2610  0046B6  0E00               	movlw	0
  2611  0046B8  0100               	movlb	0	; () banked
  2612  0046BA  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2613  0046BC  0E32               	movlw	50
  2614  0046BE  6FE5               	movwf	_set_speed& (0+255),b
  2615                           
  2616                           ;parcheggio.c: 317: data_steering[0] = 90;
  2617  0046C0  0E5A               	movlw	90
  2618  0046C2  0101               	movlb	1	; () banked
  2619  0046C4  6F73               	movwf	_data_steering& (0+255),b
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;parcheggio.c: 318: dir = 1;
  2623  0046C6  8444               	bsf	_dir/(0+8),_dir& (0+7),c
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;parcheggio.c: 319: can_send();
  2627  0046C8  EC5C  F029         	call	_can_send	;wreg free
  2628  0046CC                     l7117:
  2629  0046CC  5029               	movf	_sensor_distance+5,w,c	;volatile
  2630  0046CE  E1FE               	bnz	l7117
  2631  0046D0  0E15               	movlw	21
  2632  0046D2  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2633  0046D4  B0D8               	btfsc	status,0,c
  2634  0046D6  D7FA               	goto	l7117
  2635  0046D8                     l7119:
  2636                           
  2637                           ;parcheggio.c: 321: }
  2638                           ;parcheggio.c: 322: data_brake [0] = 0;
  2639  0046D8  0E00               	movlw	0
  2640  0046DA  0101               	movlb	1	; () banked
  2641  0046DC  6F5B               	movwf	_data_brake& (0+255),b
  2642                           
  2643                           ;parcheggio.c: 323: data_brake [1] = 1;
  2644  0046DE  0E01               	movlw	1
  2645  0046E0  0101               	movlb	1	; () banked
  2646  0046E2  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2647                           
  2648                           ;parcheggio.c: 324: set_speed = 0;
  2649  0046E4  0E00               	movlw	0
  2650  0046E6  0100               	movlb	0	; () banked
  2651  0046E8  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2652  0046EA  0E00               	movlw	0
  2653  0046EC  6FE5               	movwf	_set_speed& (0+255),b
  2654                           
  2655                           ;parcheggio.c: 325: data_steering[0] = 90;
  2656  0046EE  0E5A               	movlw	90
  2657  0046F0  0101               	movlb	1	; () banked
  2658  0046F2  6F73               	movwf	_data_steering& (0+255),b
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;parcheggio.c: 326: dir = 0;
  2662  0046F4  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;parcheggio.c: 327: activation = 0;
  2666  0046F6  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;parcheggio.c: 328: can_send();
  2670  0046F8  EC5C  F029         	call	_can_send	;wreg free
  2671                           
  2672                           ;parcheggio.c: 329: PORTBbits.RB5 = 0;
  2673  0046FC  9A81               	bcf	3969,5,c	;volatile
  2674                           
  2675                           ;parcheggio.c: 330: start_operation = 0;
  2676  0046FE  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2677  004700                     l7131:
  2678  004700  AA81               	btfss	3969,5,c	;volatile
  2679  004702  0012               	return	
  2680  004704  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2681  004706  0012               	return	
  2682  004708  A445               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2683  00470A  0012               	return	
  2684  00470C  D6AC               	goto	l7033
  2685  00470E                     __end_of_park_routine:
  2686                           	opt stack 0
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           postdec1	equ	0xFE5
  2694                           fsr1l	equ	0xFE1
  2695                           postinc2	equ	0xFDE
  2696                           postdec2	equ	0xFDD
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _matematica *****************
  2700 ;; Defined at:
  2701 ;;		line 396 in file "parcheggio.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;		None               void
  2708 ;; Registers used:
  2709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;Total ram usage:       32 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    8
  2722 ;; This function calls:
  2723 ;;		___fladd
  2724 ;;		___fldiv
  2725 ;;		___flmul
  2726 ;;		___flneg
  2727 ;;		_asin
  2728 ;;		_cos
  2729 ;; This function is called by:
  2730 ;;		_park_routine
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text5
  2735  0024F0                     __ptext5:
  2736                           	opt stack 0
  2737  0024F0                     _matematica:
  2738                           	opt stack 21
  2739                           
  2740                           ;parcheggio.c: 398: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2741                           
  2742                           ;incstack = 0
  2743  0024F0  C124  F0A9         	movff	_bordo,___flneg@f1	;volatile
  2744  0024F4  C125  F0AA         	movff	_bordo+1,___flneg@f1+1	;volatile
  2745  0024F8  C126  F0AB         	movff	_bordo+2,___flneg@f1+2	;volatile
  2746  0024FC  C127  F0AC         	movff	_bordo+3,___flneg@f1+3	;volatile
  2747  002500  EC27  F02E         	call	___flneg	;wreg free
  2748  002504  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2749  002508  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2750  00250C  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2751  002510  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2752  002514  0E00               	movlw	0
  2753  002516  0100               	movlb	0	; () banked
  2754  002518  6F94               	movwf	___flmul@a& (0+255),b
  2755  00251A  0E00               	movlw	0
  2756  00251C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2757  00251E  0E00               	movlw	0
  2758  002520  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2759  002522  0E40               	movlw	64
  2760  002524  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2761  002526  C1DC  F090         	movff	_raggio,___flmul@b
  2762  00252A  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2763  00252E  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2764  002532  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2765  002536  EC36  F017         	call	___flmul	;wreg free
  2766  00253A  C090  F0AD         	movff	?___flmul,___fladd@b
  2767  00253E  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2768  002542  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2769  002546  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2770  00254A  ECE2  F014         	call	___fladd	;wreg free
  2771  00254E  C0AD  F1B8         	movff	?___fladd,_matematica$3738
  2772  002552  C0AE  F1B9         	movff	?___fladd+1,_matematica$3738+1
  2773  002556  C0AF  F1BA         	movff	?___fladd+2,_matematica$3738+2
  2774  00255A  C0B0  F1BB         	movff	?___fladd+3,_matematica$3738+3
  2775                           
  2776                           ;parcheggio.c: 398: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2777  00255E  0E00               	movlw	0
  2778  002560  0100               	movlb	0	; () banked
  2779  002562  6F7B               	movwf	___fldiv@a& (0+255),b
  2780  002564  0E00               	movlw	0
  2781  002566  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2782  002568  0E00               	movlw	0
  2783  00256A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2784  00256C  0E40               	movlw	64
  2785  00256E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2786  002570  C1D8  F077         	movff	_larghezza,___fldiv@b
  2787  002574  C1D9  F078         	movff	_larghezza+1,___fldiv@b+1
  2788  002578  C1DA  F079         	movff	_larghezza+2,___fldiv@b+2
  2789  00257C  C1DB  F07A         	movff	_larghezza+3,___fldiv@b+3
  2790  002580  EC6E  F01B         	call	___fldiv	;wreg free
  2791  002584  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2792  002588  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2793  00258C  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2794  002590  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2795  002594  EC27  F02E         	call	___flneg	;wreg free
  2796  002598  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2797  00259C  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2798  0025A0  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2799  0025A4  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2800  0025A8  C1B8  F0AD         	movff	_matematica$3738,___fladd@b
  2801  0025AC  C1B9  F0AE         	movff	_matematica$3738+1,___fladd@b+1
  2802  0025B0  C1BA  F0AF         	movff	_matematica$3738+2,___fladd@b+2
  2803  0025B4  C1BB  F0B0         	movff	_matematica$3738+3,___fladd@b+3
  2804  0025B8  ECE2  F014         	call	___fladd	;wreg free
  2805  0025BC  C0AD  F1BC         	movff	?___fladd,_matematica$3739
  2806  0025C0  C0AE  F1BD         	movff	?___fladd+1,_matematica$3739+1
  2807  0025C4  C0AF  F1BE         	movff	?___fladd+2,_matematica$3739+2
  2808  0025C8  C0B0  F1BF         	movff	?___fladd+3,_matematica$3739+3
  2809                           
  2810                           ;parcheggio.c: 398: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2811  0025CC  C1BC  F077         	movff	_matematica$3739,___fldiv@b
  2812  0025D0  C1BD  F078         	movff	_matematica$3739+1,___fldiv@b+1
  2813  0025D4  C1BE  F079         	movff	_matematica$3739+2,___fldiv@b+2
  2814  0025D8  C1BF  F07A         	movff	_matematica$3739+3,___fldiv@b+3
  2815  0025DC  0E00               	movlw	0
  2816  0025DE  0100               	movlb	0	; () banked
  2817  0025E0  6F94               	movwf	___flmul@a& (0+255),b
  2818  0025E2  0E00               	movlw	0
  2819  0025E4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2820  0025E6  0E00               	movlw	0
  2821  0025E8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2822  0025EA  0E40               	movlw	64
  2823  0025EC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2824  0025EE  C1DC  F090         	movff	_raggio,___flmul@b
  2825  0025F2  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2826  0025F6  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2827  0025FA  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2828  0025FE  EC36  F017         	call	___flmul	;wreg free
  2829  002602  C090  F07B         	movff	?___flmul,___fldiv@a
  2830  002606  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  2831  00260A  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  2832  00260E  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  2833  002612  EC6E  F01B         	call	___fldiv	;wreg free
  2834  002616  C077  F1C0         	movff	?___fldiv,_matematica$3740
  2835  00261A  C078  F1C1         	movff	?___fldiv+1,_matematica$3740+1
  2836  00261E  C079  F1C2         	movff	?___fldiv+2,_matematica$3740+2
  2837  002622  C07A  F1C3         	movff	?___fldiv+3,_matematica$3740+3
  2838                           
  2839                           ;parcheggio.c: 398: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2840  002626  C1C0  F198         	movff	_matematica$3740,asin@x
  2841  00262A  C1C1  F199         	movff	_matematica$3740+1,asin@x+1
  2842  00262E  C1C2  F19A         	movff	_matematica$3740+2,asin@x+2
  2843  002632  C1C3  F19B         	movff	_matematica$3740+3,asin@x+3
  2844  002636  ECA9  F020         	call	_asin	;wreg free
  2845  00263A  C198  F11C         	movff	?_asin,_alfa
  2846  00263E  C199  F11D         	movff	?_asin+1,_alfa+1
  2847  002642  C19A  F11E         	movff	?_asin+2,_alfa+2
  2848  002646  C19B  F11F         	movff	?_asin+3,_alfa+3
  2849                           
  2850                           ;parcheggio.c: 399: alfa = alfa / 3.14159265358979323846 * 180;
  2851  00264A  0EDB               	movlw	219
  2852  00264C  0100               	movlb	0	; () banked
  2853  00264E  6F7B               	movwf	___fldiv@a& (0+255),b
  2854  002650  0E0F               	movlw	15
  2855  002652  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2856  002654  0E49               	movlw	73
  2857  002656  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2858  002658  0E40               	movlw	64
  2859  00265A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2860  00265C  C11C  F077         	movff	_alfa,___fldiv@b
  2861  002660  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  2862  002664  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  2863  002668  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  2864  00266C  EC6E  F01B         	call	___fldiv	;wreg free
  2865  002670  C077  F090         	movff	?___fldiv,___flmul@b
  2866  002674  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2867  002678  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2868  00267C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2869  002680  0E00               	movlw	0
  2870  002682  0100               	movlb	0	; () banked
  2871  002684  6F94               	movwf	___flmul@a& (0+255),b
  2872  002686  0E00               	movlw	0
  2873  002688  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2874  00268A  0E34               	movlw	52
  2875  00268C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2876  00268E  0E43               	movlw	67
  2877  002690  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2878  002692  EC36  F017         	call	___flmul	;wreg free
  2879  002696  C090  F11C         	movff	?___flmul,_alfa
  2880  00269A  C091  F11D         	movff	?___flmul+1,_alfa+1
  2881  00269E  C092  F11E         	movff	?___flmul+2,_alfa+2
  2882  0026A2  C093  F11F         	movff	?___flmul+3,_alfa+3
  2883                           
  2884                           ;parcheggio.c: 400: beta = 90 - alfa;
  2885  0026A6  C11C  F0A9         	movff	_alfa,___flneg@f1
  2886  0026AA  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  2887  0026AE  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  2888  0026B2  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  2889  0026B6  EC27  F02E         	call	___flneg	;wreg free
  2890  0026BA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2891  0026BE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2892  0026C2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2893  0026C6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2894  0026CA  0E00               	movlw	0
  2895  0026CC  0100               	movlb	0	; () banked
  2896  0026CE  6FB1               	movwf	___fladd@a& (0+255),b
  2897  0026D0  0E00               	movlw	0
  2898  0026D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2899  0026D4  0EB4               	movlw	180
  2900  0026D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2901  0026D8  0E42               	movlw	66
  2902  0026DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2903  0026DC  ECE2  F014         	call	___fladd	;wreg free
  2904  0026E0  C0AD  F120         	movff	?___fladd,_beta
  2905  0026E4  C0AE  F121         	movff	?___fladd+1,_beta+1
  2906  0026E8  C0AF  F122         	movff	?___fladd+2,_beta+2
  2907  0026EC  C0B0  F123         	movff	?___fladd+3,_beta+3
  2908                           
  2909                           ;parcheggio.c: 401: n = 2 * raggio * cos(alfa);
  2910  0026F0  C11C  F1B0         	movff	_alfa,cos@f
  2911  0026F4  C11D  F1B1         	movff	_alfa+1,cos@f+1
  2912  0026F8  C11E  F1B2         	movff	_alfa+2,cos@f+2
  2913  0026FC  C11F  F1B3         	movff	_alfa+3,cos@f+3
  2914  002700  EC9B  F02B         	call	_cos	;wreg free
  2915  002704  C1B0  F1C4         	movff	?_cos,_matematica$3741
  2916  002708  C1B1  F1C5         	movff	?_cos+1,_matematica$3741+1
  2917  00270C  C1B2  F1C6         	movff	?_cos+2,_matematica$3741+2
  2918  002710  C1B3  F1C7         	movff	?_cos+3,_matematica$3741+3
  2919                           
  2920                           ;parcheggio.c: 401: n = 2 * raggio * cos(alfa);
  2921  002714  C1DC  F094         	movff	_raggio,___flmul@a
  2922  002718  C1DD  F095         	movff	_raggio+1,___flmul@a+1
  2923  00271C  C1DE  F096         	movff	_raggio+2,___flmul@a+2
  2924  002720  C1DF  F097         	movff	_raggio+3,___flmul@a+3
  2925  002724  C1C4  F090         	movff	_matematica$3741,___flmul@b
  2926  002728  C1C5  F091         	movff	_matematica$3741+1,___flmul@b+1
  2927  00272C  C1C6  F092         	movff	_matematica$3741+2,___flmul@b+2
  2928  002730  C1C7  F093         	movff	_matematica$3741+3,___flmul@b+3
  2929  002734  EC36  F017         	call	___flmul	;wreg free
  2930  002738  C090  F1C8         	movff	?___flmul,_matematica$3742
  2931  00273C  C091  F1C9         	movff	?___flmul+1,_matematica$3742+1
  2932  002740  C092  F1CA         	movff	?___flmul+2,_matematica$3742+2
  2933  002744  C093  F1CB         	movff	?___flmul+3,_matematica$3742+3
  2934                           
  2935                           ;parcheggio.c: 401: n = 2 * raggio * cos(alfa);
  2936  002748  C1C8  F090         	movff	_matematica$3742,___flmul@b
  2937  00274C  C1C9  F091         	movff	_matematica$3742+1,___flmul@b+1
  2938  002750  C1CA  F092         	movff	_matematica$3742+2,___flmul@b+2
  2939  002754  C1CB  F093         	movff	_matematica$3742+3,___flmul@b+3
  2940  002758  0E00               	movlw	0
  2941  00275A  0100               	movlb	0	; () banked
  2942  00275C  6F94               	movwf	___flmul@a& (0+255),b
  2943  00275E  0E00               	movlw	0
  2944  002760  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2945  002762  0E00               	movlw	0
  2946  002764  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2947  002766  0E40               	movlw	64
  2948  002768  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2949  00276A  EC36  F017         	call	___flmul	;wreg free
  2950  00276E  C090  F130         	movff	?___flmul,_n
  2951  002772  C091  F131         	movff	?___flmul+1,_n+1
  2952  002776  C092  F132         	movff	?___flmul+2,_n+2
  2953  00277A  C093  F133         	movff	?___flmul+3,_n+3
  2954                           
  2955                           ;parcheggio.c: 402: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2956  00277E  C120  F094         	movff	_beta,___flmul@a
  2957  002782  C121  F095         	movff	_beta+1,___flmul@a+1
  2958  002786  C122  F096         	movff	_beta+2,___flmul@a+2
  2959  00278A  C123  F097         	movff	_beta+3,___flmul@a+3
  2960  00278E  C1DC  F090         	movff	_raggio,___flmul@b
  2961  002792  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2962  002796  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2963  00279A  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2964  00279E  EC36  F017         	call	___flmul	;wreg free
  2965  0027A2  C090  F1CC         	movff	?___flmul,_matematica$3743
  2966  0027A6  C091  F1CD         	movff	?___flmul+1,_matematica$3743+1
  2967  0027AA  C092  F1CE         	movff	?___flmul+2,_matematica$3743+2
  2968  0027AE  C093  F1CF         	movff	?___flmul+3,_matematica$3743+3
  2969                           
  2970                           ;parcheggio.c: 402: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2971  0027B2  0EDB               	movlw	219
  2972  0027B4  0100               	movlb	0	; () banked
  2973  0027B6  6F94               	movwf	___flmul@a& (0+255),b
  2974  0027B8  0E0F               	movlw	15
  2975  0027BA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2976  0027BC  0EC9               	movlw	201
  2977  0027BE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2978  0027C0  0E40               	movlw	64
  2979  0027C2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2980  0027C4  C1CC  F090         	movff	_matematica$3743,___flmul@b
  2981  0027C8  C1CD  F091         	movff	_matematica$3743+1,___flmul@b+1
  2982  0027CC  C1CE  F092         	movff	_matematica$3743+2,___flmul@b+2
  2983  0027D0  C1CF  F093         	movff	_matematica$3743+3,___flmul@b+3
  2984  0027D4  EC36  F017         	call	___flmul	;wreg free
  2985  0027D8  C090  F077         	movff	?___flmul,___fldiv@b
  2986  0027DC  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2987  0027E0  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2988  0027E4  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2989  0027E8  0E00               	movlw	0
  2990  0027EA  0100               	movlb	0	; () banked
  2991  0027EC  6F7B               	movwf	___fldiv@a& (0+255),b
  2992  0027EE  0E00               	movlw	0
  2993  0027F0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2994  0027F2  0EB4               	movlw	180
  2995  0027F4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2996  0027F6  0E43               	movlw	67
  2997  0027F8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2998  0027FA  EC6E  F01B         	call	___fldiv	;wreg free
  2999  0027FE  C077  F138         	movff	?___fldiv,_prima_sterzata
  3000  002802  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  3001  002806  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  3002  00280A  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  3003                           
  3004                           ;parcheggio.c: 403: kkk = raggio + (2 * larghezza / 3);
  3005  00280E  0E00               	movlw	0
  3006  002810  0100               	movlb	0	; () banked
  3007  002812  6F7B               	movwf	___fldiv@a& (0+255),b
  3008  002814  0E00               	movlw	0
  3009  002816  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3010  002818  0E40               	movlw	64
  3011  00281A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3012  00281C  0E40               	movlw	64
  3013  00281E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3014  002820  0E00               	movlw	0
  3015  002822  0100               	movlb	0	; () banked
  3016  002824  6F94               	movwf	___flmul@a& (0+255),b
  3017  002826  0E00               	movlw	0
  3018  002828  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3019  00282A  0E00               	movlw	0
  3020  00282C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3021  00282E  0E40               	movlw	64
  3022  002830  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3023  002832  C1D8  F090         	movff	_larghezza,___flmul@b
  3024  002836  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  3025  00283A  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  3026  00283E  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  3027  002842  EC36  F017         	call	___flmul	;wreg free
  3028  002846  C090  F077         	movff	?___flmul,___fldiv@b
  3029  00284A  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3030  00284E  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3031  002852  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3032  002856  EC6E  F01B         	call	___fldiv	;wreg free
  3033  00285A  C077  F0AD         	movff	?___fldiv,___fladd@b
  3034  00285E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  3035  002862  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  3036  002866  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  3037  00286A  C1DC  F0B1         	movff	_raggio,___fladd@a
  3038  00286E  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  3039  002872  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  3040  002876  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  3041  00287A  ECE2  F014         	call	___fladd	;wreg free
  3042  00287E  C0AD  F12C         	movff	?___fladd,_kkk
  3043  002882  C0AE  F12D         	movff	?___fladd+1,_kkk+1
  3044  002886  C0AF  F12E         	movff	?___fladd+2,_kkk+2
  3045  00288A  C0B0  F12F         	movff	?___fladd+3,_kkk+3
  3046                           
  3047                           ;parcheggio.c: 404: jjj = raggio - (2 * larghezza / 3);
  3048  00288E  0E00               	movlw	0
  3049  002890  0100               	movlb	0	; () banked
  3050  002892  6F7B               	movwf	___fldiv@a& (0+255),b
  3051  002894  0E00               	movlw	0
  3052  002896  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3053  002898  0E40               	movlw	64
  3054  00289A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3055  00289C  0E40               	movlw	64
  3056  00289E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3057  0028A0  0E00               	movlw	0
  3058  0028A2  0100               	movlb	0	; () banked
  3059  0028A4  6F94               	movwf	___flmul@a& (0+255),b
  3060  0028A6  0E00               	movlw	0
  3061  0028A8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3062  0028AA  0E00               	movlw	0
  3063  0028AC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3064  0028AE  0E40               	movlw	64
  3065  0028B0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3066  0028B2  C1D8  F090         	movff	_larghezza,___flmul@b
  3067  0028B6  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  3068  0028BA  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  3069  0028BE  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  3070  0028C2  EC36  F017         	call	___flmul	;wreg free
  3071  0028C6  C090  F077         	movff	?___flmul,___fldiv@b
  3072  0028CA  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3073  0028CE  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3074  0028D2  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3075  0028D6  EC6E  F01B         	call	___fldiv	;wreg free
  3076  0028DA  C077  F0A9         	movff	?___fldiv,___flneg@f1
  3077  0028DE  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  3078  0028E2  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  3079  0028E6  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  3080  0028EA  EC27  F02E         	call	___flneg	;wreg free
  3081  0028EE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3082  0028F2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3083  0028F6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3084  0028FA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3085  0028FE  C1DC  F0B1         	movff	_raggio,___fladd@a
  3086  002902  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  3087  002906  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  3088  00290A  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  3089  00290E  ECE2  F014         	call	___fladd	;wreg free
  3090  002912  C0AD  F128         	movff	?___fladd,_jjj
  3091  002916  C0AE  F129         	movff	?___fladd+1,_jjj+1
  3092  00291A  C0AF  F12A         	movff	?___fladd+2,_jjj+2
  3093  00291E  C0B0  F12B         	movff	?___fladd+3,_jjj+3
  3094                           
  3095                           ;parcheggio.c: 405: Pminimo = kkk * cos(asin((jjj / kkk)));
  3096  002922  C12C  F07B         	movff	_kkk,___fldiv@a
  3097  002926  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  3098  00292A  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  3099  00292E  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  3100  002932  C128  F077         	movff	_jjj,___fldiv@b
  3101  002936  C129  F078         	movff	_jjj+1,___fldiv@b+1
  3102  00293A  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  3103  00293E  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  3104  002942  EC6E  F01B         	call	___fldiv	;wreg free
  3105  002946  C077  F1D0         	movff	?___fldiv,_matematica$3744
  3106  00294A  C078  F1D1         	movff	?___fldiv+1,_matematica$3744+1
  3107  00294E  C079  F1D2         	movff	?___fldiv+2,_matematica$3744+2
  3108  002952  C07A  F1D3         	movff	?___fldiv+3,_matematica$3744+3
  3109                           
  3110                           ;parcheggio.c: 405: Pminimo = kkk * cos(asin((jjj / kkk)));
  3111  002956  C1D0  F198         	movff	_matematica$3744,asin@x
  3112  00295A  C1D1  F199         	movff	_matematica$3744+1,asin@x+1
  3113  00295E  C1D2  F19A         	movff	_matematica$3744+2,asin@x+2
  3114  002962  C1D3  F19B         	movff	_matematica$3744+3,asin@x+3
  3115  002966  ECA9  F020         	call	_asin	;wreg free
  3116  00296A  C198  F1B0         	movff	?_asin,cos@f
  3117  00296E  C199  F1B1         	movff	?_asin+1,cos@f+1
  3118  002972  C19A  F1B2         	movff	?_asin+2,cos@f+2
  3119  002976  C19B  F1B3         	movff	?_asin+3,cos@f+3
  3120  00297A  EC9B  F02B         	call	_cos	;wreg free
  3121  00297E  C1B0  F1D4         	movff	?_cos,_matematica$3745
  3122  002982  C1B1  F1D5         	movff	?_cos+1,_matematica$3745+1
  3123  002986  C1B2  F1D6         	movff	?_cos+2,_matematica$3745+2
  3124  00298A  C1B3  F1D7         	movff	?_cos+3,_matematica$3745+3
  3125                           
  3126                           ;parcheggio.c: 405: Pminimo = kkk * cos(asin((jjj / kkk)));
  3127  00298E  C1D4  F090         	movff	_matematica$3745,___flmul@b
  3128  002992  C1D5  F091         	movff	_matematica$3745+1,___flmul@b+1
  3129  002996  C1D6  F092         	movff	_matematica$3745+2,___flmul@b+2
  3130  00299A  C1D7  F093         	movff	_matematica$3745+3,___flmul@b+3
  3131  00299E  C12C  F094         	movff	_kkk,___flmul@a
  3132  0029A2  C12D  F095         	movff	_kkk+1,___flmul@a+1
  3133  0029A6  C12E  F096         	movff	_kkk+2,___flmul@a+2
  3134  0029AA  C12F  F097         	movff	_kkk+3,___flmul@a+3
  3135  0029AE  EC36  F017         	call	___flmul	;wreg free
  3136  0029B2  C090  F118         	movff	?___flmul,_Pminimo
  3137  0029B6  C091  F119         	movff	?___flmul+1,_Pminimo+1
  3138  0029BA  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  3139  0029BE  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  3140  0029C2  0012               	return		;funcret
  3141  0029C4                     __end_of_matematica:
  3142                           	opt stack 0
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           postinc0	equ	0xFEE
  3148                           wreg	equ	0xFE8
  3149                           postdec1	equ	0xFE5
  3150                           fsr1l	equ	0xFE1
  3151                           postinc2	equ	0xFDE
  3152                           postdec2	equ	0xFDD
  3153                           status	equ	0xFD8
  3154                           
  3155 ;; *************** function _cos *****************
  3156 ;; Defined at:
  3157 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  f               4   45[BANK1 ] int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  4   45[BANK1 ] int 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3171 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;Total ram usage:        8 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    7
  3178 ;; This function calls:
  3179 ;;		___fladd
  3180 ;;		___flge
  3181 ;;		_sin
  3182 ;; This function is called by:
  3183 ;;		_matematica
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text6
  3188  005736                     __ptext6:
  3189                           	opt stack 0
  3190  005736                     _cos:
  3191                           	opt stack 21
  3192                           
  3193                           ;incstack = 0
  3194  005736  0EDB               	movlw	219
  3195  005738  0100               	movlb	0	; () banked
  3196  00573A  6FB1               	movwf	___flge@ff1& (0+255),b
  3197  00573C  0E0F               	movlw	15
  3198  00573E  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3199  005740  0E49               	movlw	73
  3200  005742  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3201  005744  0E40               	movlw	64
  3202  005746  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3203  005748  C1B0  F0B5         	movff	cos@f,___flge@ff2
  3204  00574C  C1B1  F0B6         	movff	cos@f+1,___flge@ff2+1
  3205  005750  C1B2  F0B7         	movff	cos@f+2,___flge@ff2+2
  3206  005754  C1B3  F0B8         	movff	cos@f+3,___flge@ff2+3
  3207  005758  EC94  F028         	call	___flge	;wreg free
  3208  00575C  0100               	movlb	0	; () banked
  3209  00575E  B0D8               	btfsc	status,0,c
  3210  005760  D02E               	goto	l6893
  3211                           
  3212                           ; BSR set to: 0
  3213  005762  C1B0  F0AD         	movff	cos@f,___fladd@b
  3214  005766  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3215  00576A  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3216  00576E  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3217  005772  0EE4               	movlw	228
  3218  005774  0100               	movlb	0	; () banked
  3219  005776  6FB1               	movwf	___fladd@a& (0+255),b
  3220  005778  0ECB               	movlw	203
  3221  00577A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3222  00577C  0E96               	movlw	150
  3223  00577E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3224  005780  0EC0               	movlw	192
  3225  005782  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3226  005784  ECE2  F014         	call	___fladd	;wreg free
  3227  005788  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3228  00578C  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3229  005790  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3230  005794  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3231  005798  C1B4  F197         	movff	_cos$3749,sin@f
  3232  00579C  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3233  0057A0  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3234  0057A4  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3235  0057A8  EC1D  F01F         	call	_sin	;wreg free
  3236  0057AC  C197  F1B0         	movff	?_sin,?_cos
  3237  0057B0  C198  F1B1         	movff	?_sin+1,?_cos+1
  3238  0057B4  C199  F1B2         	movff	?_sin+2,?_cos+2
  3239  0057B8  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3240  0057BC  0012               	return	
  3241  0057BE                     l6893:
  3242  0057BE  C1B0  F0AD         	movff	cos@f,___fladd@b
  3243  0057C2  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3244  0057C6  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3245  0057CA  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3246  0057CE  0EDB               	movlw	219
  3247  0057D0  0100               	movlb	0	; () banked
  3248  0057D2  6FB1               	movwf	___fladd@a& (0+255),b
  3249  0057D4  0E0F               	movlw	15
  3250  0057D6  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3251  0057D8  0EC9               	movlw	201
  3252  0057DA  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3253  0057DC  0E3F               	movlw	63
  3254  0057DE  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3255  0057E0  ECE2  F014         	call	___fladd	;wreg free
  3256  0057E4  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3257  0057E8  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3258  0057EC  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3259  0057F0  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3260  0057F4  C1B4  F197         	movff	_cos$3749,sin@f
  3261  0057F8  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3262  0057FC  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3263  005800  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3264  005804  EC1D  F01F         	call	_sin	;wreg free
  3265  005808  C197  F1B0         	movff	?_sin,?_cos
  3266  00580C  C198  F1B1         	movff	?_sin+1,?_cos+1
  3267  005810  C199  F1B2         	movff	?_sin+2,?_cos+2
  3268  005814  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3269  005818  0012               	return	
  3270  00581A                     __end_of_cos:
  3271                           	opt stack 0
  3272                           tblptru	equ	0xFF8
  3273                           tblptrh	equ	0xFF7
  3274                           tblptrl	equ	0xFF6
  3275                           tablat	equ	0xFF5
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           postdec1	equ	0xFE5
  3279                           fsr1l	equ	0xFE1
  3280                           postinc2	equ	0xFDE
  3281                           postdec2	equ	0xFDD
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _sin *****************
  3285 ;; Defined at:
  3286 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  f               4   20[BANK1 ] int 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  x2              4   32[BANK1 ] int 
  3291 ;;  y               4   24[BANK1 ] int 
  3292 ;;  sgn             1   36[BANK1 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  4   20[BANK1 ] unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3302 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;Total ram usage:       17 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    6
  3309 ;; This function calls:
  3310 ;;		___fladd
  3311 ;;		___fldiv
  3312 ;;		___flge
  3313 ;;		___flmul
  3314 ;;		___flneg
  3315 ;;		___flsub
  3316 ;;		_eval_poly
  3317 ;;		_floor
  3318 ;; This function is called by:
  3319 ;;		_cos
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text7
  3324  003E3A                     __ptext7:
  3325                           	opt stack 0
  3326  003E3A                     _sin:
  3327                           	opt stack 21
  3328                           
  3329                           ;incstack = 0
  3330  003E3A  0E00               	movlw	0
  3331  003E3C  0101               	movlb	1	; () banked
  3332  003E3E  6FA7               	movwf	sin@sgn& (0+255),b
  3333                           
  3334                           ; BSR set to: 1
  3335  003E40  0101               	movlb	1	; () banked
  3336  003E42  AF9A               	btfss	(sin@f+3)& (0+255),7,b
  3337  003E44  D015               	goto	l6817
  3338                           
  3339                           ; BSR set to: 1
  3340  003E46  C197  F0A9         	movff	sin@f,___flneg@f1
  3341  003E4A  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3342  003E4E  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3343  003E52  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3344  003E56  EC27  F02E         	call	___flneg	;wreg free
  3345  003E5A  C0A9  F197         	movff	?___flneg,sin@f
  3346  003E5E  C0AA  F198         	movff	?___flneg+1,sin@f+1
  3347  003E62  C0AB  F199         	movff	?___flneg+2,sin@f+2
  3348  003E66  C0AC  F19A         	movff	?___flneg+3,sin@f+3
  3349  003E6A  0E01               	movlw	1
  3350  003E6C  0101               	movlb	1	; () banked
  3351  003E6E  6FA7               	movwf	sin@sgn& (0+255),b
  3352  003E70                     l6817:
  3353                           
  3354                           ; BSR set to: 1
  3355  003E70  C197  F090         	movff	sin@f,___flmul@b
  3356  003E74  C198  F091         	movff	sin@f+1,___flmul@b+1
  3357  003E78  C199  F092         	movff	sin@f+2,___flmul@b+2
  3358  003E7C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3359  003E80  0E83               	movlw	131
  3360  003E82  0100               	movlb	0	; () banked
  3361  003E84  6F94               	movwf	___flmul@a& (0+255),b
  3362  003E86  0EF9               	movlw	249
  3363  003E88  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3364  003E8A  0E22               	movlw	34
  3365  003E8C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3366  003E8E  0E3E               	movlw	62
  3367  003E90  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3368  003E92  EC36  F017         	call	___flmul	;wreg free
  3369  003E96  C090  F197         	movff	?___flmul,sin@f
  3370  003E9A  C091  F198         	movff	?___flmul+1,sin@f+1
  3371  003E9E  C092  F199         	movff	?___flmul+2,sin@f+2
  3372  003EA2  C093  F19A         	movff	?___flmul+3,sin@f+3
  3373  003EA6  C197  F18F         	movff	sin@f,___flsub@b
  3374  003EAA  C198  F190         	movff	sin@f+1,___flsub@b+1
  3375  003EAE  C199  F191         	movff	sin@f+2,___flsub@b+2
  3376  003EB2  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3377  003EB6  C197  F0D3         	movff	sin@f,floor@x
  3378  003EBA  C198  F0D4         	movff	sin@f+1,floor@x+1
  3379  003EBE  C199  F0D5         	movff	sin@f+2,floor@x+2
  3380  003EC2  C19A  F0D6         	movff	sin@f+3,floor@x+3
  3381  003EC6  ECF7  F029         	call	_floor	;wreg free
  3382  003ECA  C0D3  F193         	movff	?_floor,___flsub@a
  3383  003ECE  C0D4  F194         	movff	?_floor+1,___flsub@a+1
  3384  003ED2  C0D5  F195         	movff	?_floor+2,___flsub@a+2
  3385  003ED6  C0D6  F196         	movff	?_floor+3,___flsub@a+3
  3386  003EDA  ECC7  F02D         	call	___flsub	;wreg free
  3387  003EDE  C18F  F197         	movff	?___flsub,sin@f
  3388  003EE2  C190  F198         	movff	?___flsub+1,sin@f+1
  3389  003EE6  C191  F199         	movff	?___flsub+2,sin@f+2
  3390  003EEA  C192  F19A         	movff	?___flsub+3,sin@f+3
  3391  003EEE  C197  F090         	movff	sin@f,___flmul@b
  3392  003EF2  C198  F091         	movff	sin@f+1,___flmul@b+1
  3393  003EF6  C199  F092         	movff	sin@f+2,___flmul@b+2
  3394  003EFA  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3395  003EFE  0E00               	movlw	0
  3396  003F00  0100               	movlb	0	; () banked
  3397  003F02  6F94               	movwf	___flmul@a& (0+255),b
  3398  003F04  0E00               	movlw	0
  3399  003F06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3400  003F08  0E80               	movlw	128
  3401  003F0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3402  003F0C  0E40               	movlw	64
  3403  003F0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3404  003F10  EC36  F017         	call	___flmul	;wreg free
  3405  003F14  C090  F197         	movff	?___flmul,sin@f
  3406  003F18  C091  F198         	movff	?___flmul+1,sin@f+1
  3407  003F1C  C092  F199         	movff	?___flmul+2,sin@f+2
  3408  003F20  C093  F19A         	movff	?___flmul+3,sin@f+3
  3409  003F24  0E00               	movlw	0
  3410  003F26  0100               	movlb	0	; () banked
  3411  003F28  6FB1               	movwf	___flge@ff1& (0+255),b
  3412  003F2A  0E00               	movlw	0
  3413  003F2C  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3414  003F2E  0E00               	movlw	0
  3415  003F30  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3416  003F32  0E40               	movlw	64
  3417  003F34  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3418  003F36  C197  F0B5         	movff	sin@f,___flge@ff2
  3419  003F3A  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3420  003F3E  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3421  003F42  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3422  003F46  EC94  F028         	call	___flge	;wreg free
  3423  003F4A  0100               	movlb	0	; () banked
  3424  003F4C  B0D8               	btfsc	status,0,c
  3425  003F4E  D025               	goto	l6829
  3426                           
  3427                           ; BSR set to: 0
  3428  003F50  C197  F18F         	movff	sin@f,___flsub@b
  3429  003F54  C198  F190         	movff	sin@f+1,___flsub@b+1
  3430  003F58  C199  F191         	movff	sin@f+2,___flsub@b+2
  3431  003F5C  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3432  003F60  0E00               	movlw	0
  3433  003F62  0101               	movlb	1	; () banked
  3434  003F64  6F93               	movwf	___flsub@a& (0+255),b
  3435  003F66  0E00               	movlw	0
  3436  003F68  6F94               	movwf	(___flsub@a+1)& (0+255),b
  3437  003F6A  0E00               	movlw	0
  3438  003F6C  6F95               	movwf	(___flsub@a+2)& (0+255),b
  3439  003F6E  0E40               	movlw	64
  3440  003F70  6F96               	movwf	(___flsub@a+3)& (0+255),b
  3441  003F72  ECC7  F02D         	call	___flsub	;wreg free
  3442  003F76  C18F  F197         	movff	?___flsub,sin@f
  3443  003F7A  C190  F198         	movff	?___flsub+1,sin@f+1
  3444  003F7E  C191  F199         	movff	?___flsub+2,sin@f+2
  3445  003F82  C192  F19A         	movff	?___flsub+3,sin@f+3
  3446  003F86  0101               	movlb	1	; () banked
  3447  003F88  51A7               	movf	sin@sgn& (0+255),w,b
  3448  003F8A  0101               	movlb	1	; () banked
  3449  003F8C  A4D8               	btfss	status,2,c
  3450  003F8E  D002               	goto	u8620
  3451  003F90  0E01               	movlw	1
  3452  003F92  D001               	goto	u8630
  3453  003F94                     u8620:
  3454  003F94  0E00               	movlw	0
  3455  003F96                     u8630:
  3456  003F96  0101               	movlb	1	; () banked
  3457  003F98  6FA7               	movwf	sin@sgn& (0+255),b
  3458  003F9A                     l6829:
  3459  003F9A  0E00               	movlw	0
  3460  003F9C  0100               	movlb	0	; () banked
  3461  003F9E  6FB1               	movwf	___flge@ff1& (0+255),b
  3462  003FA0  0E00               	movlw	0
  3463  003FA2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3464  003FA4  0E80               	movlw	128
  3465  003FA6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3466  003FA8  0E3F               	movlw	63
  3467  003FAA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3468  003FAC  C197  F0B5         	movff	sin@f,___flge@ff2
  3469  003FB0  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3470  003FB4  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3471  003FB8  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3472  003FBC  EC94  F028         	call	___flge	;wreg free
  3473  003FC0  0100               	movlb	0	; () banked
  3474  003FC2  B0D8               	btfsc	status,0,c
  3475  003FC4  D025               	goto	l6833
  3476                           
  3477                           ; BSR set to: 0
  3478  003FC6  C197  F0A9         	movff	sin@f,___flneg@f1
  3479  003FCA  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3480  003FCE  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3481  003FD2  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3482  003FD6  EC27  F02E         	call	___flneg	;wreg free
  3483  003FDA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3484  003FDE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3485  003FE2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3486  003FE6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3487  003FEA  0E00               	movlw	0
  3488  003FEC  0100               	movlb	0	; () banked
  3489  003FEE  6FB1               	movwf	___fladd@a& (0+255),b
  3490  003FF0  0E00               	movlw	0
  3491  003FF2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3492  003FF4  0E00               	movlw	0
  3493  003FF6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3494  003FF8  0E40               	movlw	64
  3495  003FFA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3496  003FFC  ECE2  F014         	call	___fladd	;wreg free
  3497  004000  C0AD  F197         	movff	?___fladd,sin@f
  3498  004004  C0AE  F198         	movff	?___fladd+1,sin@f+1
  3499  004008  C0AF  F199         	movff	?___fladd+2,sin@f+2
  3500  00400C  C0B0  F19A         	movff	?___fladd+3,sin@f+3
  3501  004010                     l6833:
  3502  004010  C197  F090         	movff	sin@f,___flmul@b
  3503  004014  C198  F091         	movff	sin@f+1,___flmul@b+1
  3504  004018  C199  F092         	movff	sin@f+2,___flmul@b+2
  3505  00401C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3506  004020  C197  F094         	movff	sin@f,___flmul@a
  3507  004024  C198  F095         	movff	sin@f+1,___flmul@a+1
  3508  004028  C199  F096         	movff	sin@f+2,___flmul@a+2
  3509  00402C  C19A  F097         	movff	sin@f+3,___flmul@a+3
  3510  004030  EC36  F017         	call	___flmul	;wreg free
  3511  004034  C090  F1A3         	movff	?___flmul,sin@x2
  3512  004038  C091  F1A4         	movff	?___flmul+1,sin@x2+1
  3513  00403C  C092  F1A5         	movff	?___flmul+2,sin@x2+2
  3514  004040  C093  F1A6         	movff	?___flmul+3,sin@x2+3
  3515  004044  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3516  004048  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3517  00404C  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3518  004050  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3519  004054  0E41               	movlw	low sin@coeff_b
  3520  004056  0100               	movlb	0	; () banked
  3521  004058  6FC5               	movwf	eval_poly@d& (0+255),b
  3522  00405A  0E0D               	movlw	high sin@coeff_b
  3523  00405C  0100               	movlb	0	; () banked
  3524  00405E  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3525  004060  0E00               	movlw	0
  3526  004062  0100               	movlb	0	; () banked
  3527  004064  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3528  004066  0E03               	movlw	3
  3529  004068  6FC7               	movwf	eval_poly@n& (0+255),b
  3530  00406A  EC89  F02A         	call	_eval_poly	;wreg free
  3531  00406E  C0C1  F19B         	movff	?_eval_poly,sin@y
  3532  004072  C0C2  F19C         	movff	?_eval_poly+1,sin@y+1
  3533  004076  C0C3  F19D         	movff	?_eval_poly+2,sin@y+2
  3534  00407A  C0C4  F19E         	movff	?_eval_poly+3,sin@y+3
  3535  00407E  C19B  F07B         	movff	sin@y,___fldiv@a
  3536  004082  C19C  F07C         	movff	sin@y+1,___fldiv@a+1
  3537  004086  C19D  F07D         	movff	sin@y+2,___fldiv@a+2
  3538  00408A  C19E  F07E         	movff	sin@y+3,___fldiv@a+3
  3539  00408E  0E00               	movlw	0
  3540  004090  0100               	movlb	0	; () banked
  3541  004092  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3542  004094  0E04               	movlw	4
  3543  004096  6FC7               	movwf	eval_poly@n& (0+255),b
  3544  004098  0E2D               	movlw	low sin@coeff_a
  3545  00409A  0100               	movlb	0	; () banked
  3546  00409C  6FC5               	movwf	eval_poly@d& (0+255),b
  3547  00409E  0E0D               	movlw	high sin@coeff_a
  3548  0040A0  0100               	movlb	0	; () banked
  3549  0040A2  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3550  0040A4  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3551  0040A8  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3552  0040AC  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3553  0040B0  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3554  0040B4  EC89  F02A         	call	_eval_poly	;wreg free
  3555  0040B8  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  3556  0040BC  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  3557  0040C0  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  3558  0040C4  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  3559  0040C8  EC6E  F01B         	call	___fldiv	;wreg free
  3560  0040CC  C077  F19F         	movff	?___fldiv,_sin$3750
  3561  0040D0  C078  F1A0         	movff	?___fldiv+1,_sin$3750+1
  3562  0040D4  C079  F1A1         	movff	?___fldiv+2,_sin$3750+2
  3563  0040D8  C07A  F1A2         	movff	?___fldiv+3,_sin$3750+3
  3564  0040DC  C197  F090         	movff	sin@f,___flmul@b
  3565  0040E0  C198  F091         	movff	sin@f+1,___flmul@b+1
  3566  0040E4  C199  F092         	movff	sin@f+2,___flmul@b+2
  3567  0040E8  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3568  0040EC  C19F  F094         	movff	_sin$3750,___flmul@a
  3569  0040F0  C1A0  F095         	movff	_sin$3750+1,___flmul@a+1
  3570  0040F4  C1A1  F096         	movff	_sin$3750+2,___flmul@a+2
  3571  0040F8  C1A2  F097         	movff	_sin$3750+3,___flmul@a+3
  3572  0040FC  EC36  F017         	call	___flmul	;wreg free
  3573  004100  C090  F197         	movff	?___flmul,sin@f
  3574  004104  C091  F198         	movff	?___flmul+1,sin@f+1
  3575  004108  C092  F199         	movff	?___flmul+2,sin@f+2
  3576  00410C  C093  F19A         	movff	?___flmul+3,sin@f+3
  3577  004110  0101               	movlb	1	; () banked
  3578  004112  51A7               	movf	sin@sgn& (0+255),w,b
  3579  004114  0101               	movlb	1	; () banked
  3580  004116  B4D8               	btfsc	status,2,c
  3581  004118  D013               	goto	l1292
  3582                           
  3583                           ; BSR set to: 1
  3584  00411A  C197  F0A9         	movff	sin@f,___flneg@f1
  3585  00411E  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3586  004122  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3587  004126  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3588  00412A  EC27  F02E         	call	___flneg	;wreg free
  3589  00412E  C0A9  F197         	movff	?___flneg,?_sin
  3590  004132  C0AA  F198         	movff	?___flneg+1,?_sin+1
  3591  004136  C0AB  F199         	movff	?___flneg+2,?_sin+2
  3592  00413A  C0AC  F19A         	movff	?___flneg+3,?_sin+3
  3593  00413E  0012               	return	
  3594  004140                     l1292:
  3595                           
  3596                           ; BSR set to: 1
  3597  004140  C197  F197         	movff	sin@f,?_sin
  3598  004144  C198  F198         	movff	sin@f+1,?_sin+1
  3599  004148  C199  F199         	movff	sin@f+2,?_sin+2
  3600  00414C  C19A  F19A         	movff	sin@f+3,?_sin+3
  3601  004150  0012               	return		;funcret
  3602  004152                     __end_of_sin:
  3603                           	opt stack 0
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           postinc0	equ	0xFEE
  3609                           wreg	equ	0xFE8
  3610                           postdec1	equ	0xFE5
  3611                           fsr1l	equ	0xFE1
  3612                           postinc2	equ	0xFDE
  3613                           postdec2	equ	0xFDD
  3614                           status	equ	0xFD8
  3615                           
  3616 ;; *************** function _floor *****************
  3617 ;; Defined at:
  3618 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  x               4  115[BANK0 ] unsigned char 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  i               4    6[BANK1 ] unsigned char 
  3623 ;;  expon           2   10[BANK1 ] int 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  4  115[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;Total ram usage:       10 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    5
  3640 ;; This function calls:
  3641 ;;		___fladd
  3642 ;;		___flge
  3643 ;;		___fltol
  3644 ;;		___xxtofl
  3645 ;;		_frexp
  3646 ;; This function is called by:
  3647 ;;		_sin
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text8
  3652  0053EE                     __ptext8:
  3653                           	opt stack 0
  3654  0053EE                     _floor:
  3655                           	opt stack 21
  3656                           
  3657                           ;incstack = 0
  3658  0053EE  C0D3  F077         	movff	floor@x,frexp@value
  3659  0053F2  C0D4  F078         	movff	floor@x+1,frexp@value+1
  3660  0053F6  C0D5  F079         	movff	floor@x+2,frexp@value+2
  3661  0053FA  C0D6  F07A         	movff	floor@x+3,frexp@value+3
  3662  0053FE  0E8D               	movlw	low floor@expon
  3663  005400  0100               	movlb	0	; () banked
  3664  005402  6F7B               	movwf	frexp@eptr& (0+255),b
  3665  005404  0E01               	movlw	high floor@expon
  3666  005406  0100               	movlb	0	; () banked
  3667  005408  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  3668  00540A  EC7D  F02C         	call	_frexp	;wreg free
  3669  00540E  0101               	movlb	1	; () banked
  3670  005410  AF8E               	btfss	(floor@expon+1)& (0+255),7,b
  3671  005412  D017               	goto	l6671
  3672                           
  3673                           ; BSR set to: 1
  3674  005414  0100               	movlb	0	; () banked
  3675  005416  AFD6               	btfss	(floor@x+3)& (0+255),7,b
  3676  005418  D00A               	goto	l6667
  3677                           
  3678                           ; BSR set to: 0
  3679  00541A  0E00               	movlw	0
  3680  00541C  0100               	movlb	0	; () banked
  3681  00541E  6FD3               	movwf	?_floor& (0+255),b
  3682  005420  0E00               	movlw	0
  3683  005422  6FD4               	movwf	(?_floor+1)& (0+255),b
  3684  005424  0E80               	movlw	128
  3685  005426  6FD5               	movwf	(?_floor+2)& (0+255),b
  3686  005428  0EBF               	movlw	191
  3687  00542A  6FD6               	movwf	(?_floor+3)& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690  00542C  0012               	return	
  3691  00542E                     l6667:
  3692                           
  3693                           ; BSR set to: 0
  3694  00542E  0E00               	movlw	0
  3695  005430  0100               	movlb	0	; () banked
  3696  005432  6FD3               	movwf	?_floor& (0+255),b
  3697  005434  0E00               	movlw	0
  3698  005436  6FD4               	movwf	(?_floor+1)& (0+255),b
  3699  005438  0E00               	movlw	0
  3700  00543A  6FD5               	movwf	(?_floor+2)& (0+255),b
  3701  00543C  0E00               	movlw	0
  3702  00543E  6FD6               	movwf	(?_floor+3)& (0+255),b
  3703                           
  3704                           ; BSR set to: 0
  3705  005440  0012               	return	
  3706  005442                     l6671:
  3707  005442  0101               	movlb	1	; () banked
  3708  005444  518E               	movf	(floor@expon+1)& (0+255),w,b
  3709  005446  E105               	bnz	u8410
  3710  005448  0E1D               	movlw	29
  3711  00544A  0101               	movlb	1	; () banked
  3712  00544C  5D8D               	subwf	floor@expon& (0+255),w,b
  3713  00544E  A0D8               	btfss	status,0,c
  3714  005450  D009               	goto	l6675
  3715  005452                     u8410:
  3716                           
  3717                           ; BSR set to: 1
  3718  005452  C0D3  F0D3         	movff	floor@x,?_floor
  3719  005456  C0D4  F0D4         	movff	floor@x+1,?_floor+1
  3720  00545A  C0D5  F0D5         	movff	floor@x+2,?_floor+2
  3721  00545E  C0D6  F0D6         	movff	floor@x+3,?_floor+3
  3722  005462  0012               	return	
  3723  005464                     l6675:
  3724                           
  3725                           ; BSR set to: 1
  3726  005464  C0D3  F0C1         	movff	floor@x,___fltol@f1
  3727  005468  C0D4  F0C2         	movff	floor@x+1,___fltol@f1+1
  3728  00546C  C0D5  F0C3         	movff	floor@x+2,___fltol@f1+2
  3729  005470  C0D6  F0C4         	movff	floor@x+3,___fltol@f1+3
  3730  005474  EC15  F02B         	call	___fltol	;wreg free
  3731  005478  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  3732  00547C  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  3733  005480  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  3734  005484  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  3735  005488  0E01               	movlw	1
  3736  00548A  ECF6  F025         	call	___xxtofl
  3737  00548E  C0CB  F189         	movff	?___xxtofl,floor@i
  3738  005492  C0CC  F18A         	movff	?___xxtofl+1,floor@i+1
  3739  005496  C0CD  F18B         	movff	?___xxtofl+2,floor@i+2
  3740  00549A  C0CE  F18C         	movff	?___xxtofl+3,floor@i+3
  3741  00549E  C0D3  F0B1         	movff	floor@x,___flge@ff1
  3742  0054A2  C0D4  F0B2         	movff	floor@x+1,___flge@ff1+1
  3743  0054A6  C0D5  F0B3         	movff	floor@x+2,___flge@ff1+2
  3744  0054AA  C0D6  F0B4         	movff	floor@x+3,___flge@ff1+3
  3745  0054AE  C189  F0B5         	movff	floor@i,___flge@ff2
  3746  0054B2  C18A  F0B6         	movff	floor@i+1,___flge@ff2+1
  3747  0054B6  C18B  F0B7         	movff	floor@i+2,___flge@ff2+2
  3748  0054BA  C18C  F0B8         	movff	floor@i+3,___flge@ff2+3
  3749  0054BE  EC94  F028         	call	___flge	;wreg free
  3750  0054C2  0100               	movlb	0	; () banked
  3751  0054C4  B0D8               	btfsc	status,0,c
  3752  0054C6  D01C               	goto	l1461
  3753                           
  3754                           ; BSR set to: 0
  3755  0054C8  C189  F0AD         	movff	floor@i,___fladd@b
  3756  0054CC  C18A  F0AE         	movff	floor@i+1,___fladd@b+1
  3757  0054D0  C18B  F0AF         	movff	floor@i+2,___fladd@b+2
  3758  0054D4  C18C  F0B0         	movff	floor@i+3,___fladd@b+3
  3759  0054D8  0E00               	movlw	0
  3760  0054DA  0100               	movlb	0	; () banked
  3761  0054DC  6FB1               	movwf	___fladd@a& (0+255),b
  3762  0054DE  0E00               	movlw	0
  3763  0054E0  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3764  0054E2  0E80               	movlw	128
  3765  0054E4  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3766  0054E6  0EBF               	movlw	191
  3767  0054E8  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3768  0054EA  ECE2  F014         	call	___fladd	;wreg free
  3769  0054EE  C0AD  F0D3         	movff	?___fladd,?_floor
  3770  0054F2  C0AE  F0D4         	movff	?___fladd+1,?_floor+1
  3771  0054F6  C0AF  F0D5         	movff	?___fladd+2,?_floor+2
  3772  0054FA  C0B0  F0D6         	movff	?___fladd+3,?_floor+3
  3773  0054FE  0012               	return	
  3774  005500                     l1461:
  3775                           
  3776                           ; BSR set to: 0
  3777  005500  C189  F0D3         	movff	floor@i,?_floor
  3778  005504  C18A  F0D4         	movff	floor@i+1,?_floor+1
  3779  005508  C18B  F0D5         	movff	floor@i+2,?_floor+2
  3780  00550C  C18C  F0D6         	movff	floor@i+3,?_floor+3
  3781  005510  0012               	return		;funcret
  3782  005512                     __end_of_floor:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           postdec1	equ	0xFE5
  3791                           fsr1l	equ	0xFE1
  3792                           postinc2	equ	0xFDE
  3793                           postdec2	equ	0xFDD
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function _frexp *****************
  3797 ;; Defined at:
  3798 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  value           4   23[BANK0 ] int 
  3801 ;;  eptr            2   27[BANK0 ] PTR int 
  3802 ;;		 -> floor@expon(2), 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  4   23[BANK0 ] PTR int 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;Total ram usage:        8 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    4
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_floor
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text9
  3829  0058FA                     __ptext9:
  3830                           	opt stack 0
  3831  0058FA                     _frexp:
  3832                           	opt stack 21
  3833                           
  3834                           ;incstack = 0
  3835  0058FA  0100               	movlb	0	; () banked
  3836  0058FC  5177               	movf	frexp@value& (0+255),w,b
  3837  0058FE  0100               	movlb	0	; () banked
  3838  005900  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  3839  005902  0100               	movlb	0	; () banked
  3840  005904  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  3841  005906  0100               	movlb	0	; () banked
  3842  005908  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  3843  00590A  A4D8               	btfss	status,2,c
  3844  00590C  D009               	goto	l6493
  3845                           
  3846                           ; BSR set to: 0
  3847  00590E  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3848  005912  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3849  005916  0E00               	movlw	0
  3850  005918  6EDE               	movwf	postinc2,c
  3851  00591A  0E00               	movlw	0
  3852  00591C  6EDD               	movwf	postdec2,c
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;	Return value of _frexp is never used
  3856  00591E  0012               	return	
  3857  005920                     l6493:
  3858                           
  3859                           ; BSR set to: 0
  3860  005920  0100               	movlb	0	; () banked
  3861  005922  517A               	movf	(frexp@value+3)& (0+255),w,b
  3862  005924  0B7F               	andlw	127
  3863  005926  0100               	movlb	0	; () banked
  3864  005928  6F7D               	movwf	??_frexp& (0+255),b
  3865  00592A  6B7E               	clrf	(??_frexp+1)& (0+255),b
  3866  00592C  90D8               	bcf	status,0,c
  3867  00592E  0100               	movlb	0	; () banked
  3868  005930  377D               	rlcf	??_frexp& (0+255),f,b
  3869  005932  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  3870  005934  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3871  005938  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3872  00593C  C07D  FFDE         	movff	??_frexp,postinc2
  3873  005940  C07E  FFDD         	movff	??_frexp+1,postdec2
  3874  005944  0100               	movlb	0	; () banked
  3875  005946  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  3876  005948  D004               	goto	u8130
  3877  00594A  0100               	movlb	0	; () banked
  3878  00594C  6B7D               	clrf	??_frexp& (0+255),b
  3879  00594E  2B7D               	incf	??_frexp& (0+255),f,b
  3880  005950  D002               	goto	u8138
  3881  005952                     u8130:
  3882  005952  0100               	movlb	0	; () banked
  3883  005954  6B7D               	clrf	??_frexp& (0+255),b
  3884  005956                     u8138:
  3885  005956  0100               	movlb	0	; () banked
  3886  005958  517D               	movf	??_frexp& (0+255),w,b
  3887  00595A  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3888  00595E  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3889  005962  12DE               	iorwf	postinc2,f,c
  3890  005964  0E00               	movlw	0
  3891  005966  12DD               	iorwf	postdec2,f,c
  3892                           
  3893                           ; BSR set to: 0
  3894  005968  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3895  00596C  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3896  005970  0E82               	movlw	130
  3897  005972  26DE               	addwf	postinc2,f,c
  3898  005974  0EFF               	movlw	255
  3899  005976  22DD               	addwfc	postdec2,f,c
  3900                           
  3901                           ; BSR set to: 0
  3902  005978  0100               	movlb	0	; () banked
  3903  00597A  817A               	bsf	(frexp@value+3)& (0+255),0,b
  3904  00597C  837A               	bsf	(frexp@value+3)& (0+255),1,b
  3905  00597E  857A               	bsf	(frexp@value+3)& (0+255),2,b
  3906  005980  877A               	bsf	(frexp@value+3)& (0+255),3,b
  3907  005982  897A               	bsf	(frexp@value+3)& (0+255),4,b
  3908  005984  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  3909  005986  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  3910                           
  3911                           ; BSR set to: 0
  3912  005988  0100               	movlb	0	; () banked
  3913  00598A  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  3914  00598C  0012               	return	
  3915  00598E                     __end_of_frexp:
  3916                           	opt stack 0
  3917                           tblptru	equ	0xFF8
  3918                           tblptrh	equ	0xFF7
  3919                           tblptrl	equ	0xFF6
  3920                           tablat	equ	0xFF5
  3921                           postinc0	equ	0xFEE
  3922                           wreg	equ	0xFE8
  3923                           postdec1	equ	0xFE5
  3924                           fsr1l	equ	0xFE1
  3925                           postinc2	equ	0xFDE
  3926                           postdec2	equ	0xFDD
  3927                           fsr2h	equ	0xFDA
  3928                           fsr2l	equ	0xFD9
  3929                           status	equ	0xFD8
  3930                           
  3931 ;; *************** function ___xxtofl *****************
  3932 ;; Defined at:
  3933 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  sign            1    wreg     unsigned char 
  3936 ;;  val             4  107[BANK0 ] long 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  sign            1    0[BANK1 ] unsigned char 
  3939 ;;  arg             4    2[BANK1 ] unsigned long 
  3940 ;;  exp             1    1[BANK1 ] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  4  107[BANK0 ] unsigned char 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;Total ram usage:       14 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    4
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_park_search
  3961 ;;		_park_routine
  3962 ;;		_parallelo
  3963 ;;		_floor
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text10
  3968  004BEC                     __ptext10:
  3969                           	opt stack 0
  3970  004BEC                     ___xxtofl:
  3971                           	opt stack 24
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;incstack = 0
  3975                           ;___xxtofl@sign stored from wreg
  3976  004BEC  0101               	movlb	1	; () banked
  3977  004BEE  6F83               	movwf	___xxtofl@sign& (0+255),b
  3978  004BF0  0101               	movlb	1	; () banked
  3979  004BF2  5183               	movf	___xxtofl@sign& (0+255),w,b
  3980  004BF4  0101               	movlb	1	; () banked
  3981  004BF6  B4D8               	btfsc	status,2,c
  3982  004BF8  D01E               	goto	l1436
  3983                           
  3984                           ; BSR set to: 1
  3985  004BFA  0100               	movlb	0	; () banked
  3986  004BFC  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3987  004BFE  D01B               	goto	l1436
  3988                           
  3989                           ; BSR set to: 0
  3990  004C00  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  3991  004C04  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  3992  004C08  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  3993  004C0C  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  3994  004C10  0100               	movlb	0	; () banked
  3995  004C12  1FCF               	comf	??___xxtofl& (0+255),f,b
  3996  004C14  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  3997  004C16  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  3998  004C18  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  3999  004C1A  2BCF               	incf	??___xxtofl& (0+255),f,b
  4000  004C1C  0E00               	movlw	0
  4001  004C1E  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  4002  004C20  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  4003  004C22  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  4004  004C24  C0CF  F185         	movff	??___xxtofl,___xxtofl@arg
  4005  004C28  C0D0  F186         	movff	??___xxtofl+1,___xxtofl@arg+1
  4006  004C2C  C0D1  F187         	movff	??___xxtofl+2,___xxtofl@arg+2
  4007  004C30  C0D2  F188         	movff	??___xxtofl+3,___xxtofl@arg+3
  4008  004C34  D008               	goto	l6451
  4009  004C36                     l1436:
  4010  004C36  C0CB  F185         	movff	___xxtofl@val,___xxtofl@arg
  4011  004C3A  C0CC  F186         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4012  004C3E  C0CD  F187         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4013  004C42  C0CE  F188         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4014  004C46                     l6451:
  4015  004C46  0100               	movlb	0	; () banked
  4016  004C48  51CB               	movf	___xxtofl@val& (0+255),w,b
  4017  004C4A  0100               	movlb	0	; () banked
  4018  004C4C  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  4019  004C4E  0100               	movlb	0	; () banked
  4020  004C50  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  4021  004C52  0100               	movlb	0	; () banked
  4022  004C54  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  4023  004C56  A4D8               	btfss	status,2,c
  4024  004C58  D00A               	goto	l6457
  4025                           
  4026                           ; BSR set to: 0
  4027  004C5A  0E00               	movlw	0
  4028  004C5C  0100               	movlb	0	; () banked
  4029  004C5E  6FCB               	movwf	?___xxtofl& (0+255),b
  4030  004C60  0E00               	movlw	0
  4031  004C62  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  4032  004C64  0E00               	movlw	0
  4033  004C66  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  4034  004C68  0E00               	movlw	0
  4035  004C6A  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038  004C6C  0012               	return	
  4039  004C6E                     l6457:
  4040                           
  4041                           ; BSR set to: 0
  4042  004C6E  0E96               	movlw	150
  4043  004C70  0101               	movlb	1	; () banked
  4044  004C72  6F84               	movwf	___xxtofl@exp& (0+255),b
  4045  004C74  D008               	goto	l6461
  4046  004C76                     l6459:
  4047  004C76  0101               	movlb	1	; () banked
  4048  004C78  2B84               	incf	___xxtofl@exp& (0+255),f,b
  4049  004C7A  0101               	movlb	1	; () banked
  4050  004C7C  90D8               	bcf	status,0,c
  4051  004C7E  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4052  004C80  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4053  004C82  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4054  004C84  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  4055  004C86                     l6461:
  4056                           
  4057                           ; BSR set to: 1
  4058  004C86  0E00               	movlw	0
  4059  004C88  0101               	movlb	1	; () banked
  4060  004C8A  1585               	andwf	___xxtofl@arg& (0+255),w,b
  4061  004C8C  0100               	movlb	0	; () banked
  4062  004C8E  6FCF               	movwf	??___xxtofl& (0+255),b
  4063  004C90  0E00               	movlw	0
  4064  004C92  0101               	movlb	1	; () banked
  4065  004C94  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4066  004C96  0100               	movlb	0	; () banked
  4067  004C98  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  4068  004C9A  0E00               	movlw	0
  4069  004C9C  0101               	movlb	1	; () banked
  4070  004C9E  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4071  004CA0  0100               	movlb	0	; () banked
  4072  004CA2  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  4073  004CA4  0EFE               	movlw	254
  4074  004CA6  0101               	movlb	1	; () banked
  4075  004CA8  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4076  004CAA  0100               	movlb	0	; () banked
  4077  004CAC  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4078  004CAE  0100               	movlb	0	; () banked
  4079  004CB0  51CF               	movf	??___xxtofl& (0+255),w,b
  4080  004CB2  0100               	movlb	0	; () banked
  4081  004CB4  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4082  004CB6  0100               	movlb	0	; () banked
  4083  004CB8  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4084  004CBA  0100               	movlb	0	; () banked
  4085  004CBC  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4086  004CBE  B4D8               	btfsc	status,2,c
  4087  004CC0  D010               	goto	l1443
  4088  004CC2  D7D9               	goto	l6459
  4089  004CC4                     l6463:
  4090                           
  4091                           ; BSR set to: 0
  4092  004CC4  0101               	movlb	1	; () banked
  4093  004CC6  2B84               	incf	___xxtofl@exp& (0+255),f,b
  4094                           
  4095                           ; BSR set to: 1
  4096  004CC8  0E01               	movlw	1
  4097  004CCA  0101               	movlb	1	; () banked
  4098  004CCC  2785               	addwf	___xxtofl@arg& (0+255),f,b
  4099  004CCE  0E00               	movlw	0
  4100  004CD0  2386               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  4101  004CD2  2387               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  4102  004CD4  2388               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  4103                           
  4104                           ; BSR set to: 1
  4105  004CD6  0101               	movlb	1	; () banked
  4106  004CD8  90D8               	bcf	status,0,c
  4107  004CDA  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4108  004CDC  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4109  004CDE  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4110  004CE0  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  4111  004CE2                     l1443:
  4112  004CE2  0E00               	movlw	0
  4113  004CE4  0101               	movlb	1	; () banked
  4114  004CE6  1585               	andwf	___xxtofl@arg& (0+255),w,b
  4115  004CE8  0100               	movlb	0	; () banked
  4116  004CEA  6FCF               	movwf	??___xxtofl& (0+255),b
  4117  004CEC  0E00               	movlw	0
  4118  004CEE  0101               	movlb	1	; () banked
  4119  004CF0  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4120  004CF2  0100               	movlb	0	; () banked
  4121  004CF4  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  4122  004CF6  0E00               	movlw	0
  4123  004CF8  0101               	movlb	1	; () banked
  4124  004CFA  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4125  004CFC  0100               	movlb	0	; () banked
  4126  004CFE  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  4127  004D00  0EFF               	movlw	255
  4128  004D02  0101               	movlb	1	; () banked
  4129  004D04  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4130  004D06  0100               	movlb	0	; () banked
  4131  004D08  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4132  004D0A  0100               	movlb	0	; () banked
  4133  004D0C  51CF               	movf	??___xxtofl& (0+255),w,b
  4134  004D0E  0100               	movlb	0	; () banked
  4135  004D10  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4136  004D12  0100               	movlb	0	; () banked
  4137  004D14  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4138  004D16  0100               	movlb	0	; () banked
  4139  004D18  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4140  004D1A  B4D8               	btfsc	status,2,c
  4141  004D1C  D009               	goto	l6471
  4142  004D1E  D7D2               	goto	l6463
  4143  004D20                     l6469:
  4144  004D20  0101               	movlb	1	; () banked
  4145  004D22  0784               	decf	___xxtofl@exp& (0+255),f,b
  4146  004D24  0101               	movlb	1	; () banked
  4147  004D26  90D8               	bcf	status,0,c
  4148  004D28  3785               	rlcf	___xxtofl@arg& (0+255),f,b
  4149  004D2A  3786               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4150  004D2C  3787               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4151  004D2E  3788               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4152  004D30                     l6471:
  4153  004D30  0101               	movlb	1	; () banked
  4154  004D32  BF87               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4155  004D34  D004               	goto	l1450
  4156                           
  4157                           ; BSR set to: 1
  4158  004D36  0E02               	movlw	2
  4159  004D38  0101               	movlb	1	; () banked
  4160  004D3A  6184               	cpfslt	___xxtofl@exp& (0+255),b
  4161  004D3C  D7F1               	goto	l6469
  4162  004D3E                     l1450:
  4163                           
  4164                           ; BSR set to: 1
  4165  004D3E  0101               	movlb	1	; () banked
  4166  004D40  B184               	btfsc	___xxtofl@exp& (0+255),0,b
  4167  004D42  D009               	goto	l1451
  4168                           
  4169                           ; BSR set to: 1
  4170  004D44  0EFF               	movlw	255
  4171  004D46  0101               	movlb	1	; () banked
  4172  004D48  1785               	andwf	___xxtofl@arg& (0+255),f,b
  4173  004D4A  0EFF               	movlw	255
  4174  004D4C  1786               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  4175  004D4E  0E7F               	movlw	127
  4176  004D50  1787               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  4177  004D52  0EFF               	movlw	255
  4178  004D54  1788               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  4179  004D56                     l1451:
  4180                           
  4181                           ; BSR set to: 1
  4182  004D56  0101               	movlb	1	; () banked
  4183  004D58  90D8               	bcf	status,0,c
  4184  004D5A  3384               	rrcf	___xxtofl@exp& (0+255),f,b
  4185  004D5C  C184  F0CF         	movff	___xxtofl@exp,??___xxtofl
  4186  004D60  0100               	movlb	0	; () banked
  4187  004D62  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4188  004D64  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4189  004D66  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  4190  004D68  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  4191  004D6C  0100               	movlb	0	; () banked
  4192  004D6E  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4193  004D70  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4194  004D72  6BCF               	clrf	??___xxtofl& (0+255),b
  4195  004D74  0100               	movlb	0	; () banked
  4196  004D76  51CF               	movf	??___xxtofl& (0+255),w,b
  4197  004D78  0101               	movlb	1	; () banked
  4198  004D7A  1385               	iorwf	___xxtofl@arg& (0+255),f,b
  4199  004D7C  0100               	movlb	0	; () banked
  4200  004D7E  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  4201  004D80  0101               	movlb	1	; () banked
  4202  004D82  1386               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4203  004D84  0100               	movlb	0	; () banked
  4204  004D86  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  4205  004D88  0101               	movlb	1	; () banked
  4206  004D8A  1387               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4207  004D8C  0100               	movlb	0	; () banked
  4208  004D8E  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  4209  004D90  0101               	movlb	1	; () banked
  4210  004D92  1388               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4211                           
  4212                           ; BSR set to: 1
  4213  004D94  0101               	movlb	1	; () banked
  4214  004D96  5183               	movf	___xxtofl@sign& (0+255),w,b
  4215  004D98  0101               	movlb	1	; () banked
  4216  004D9A  B4D8               	btfsc	status,2,c
  4217  004D9C  D005               	goto	l6483
  4218                           
  4219                           ; BSR set to: 1
  4220  004D9E  0100               	movlb	0	; () banked
  4221  004DA0  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4222  004DA2  D002               	goto	l6483
  4223                           
  4224                           ; BSR set to: 0
  4225  004DA4  0101               	movlb	1	; () banked
  4226  004DA6  8F88               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4227  004DA8                     l6483:
  4228  004DA8  C185  F0CB         	movff	___xxtofl@arg,?___xxtofl
  4229  004DAC  C186  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  4230  004DB0  C187  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  4231  004DB4  C188  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  4232  004DB8  0012               	return	
  4233  004DBA                     __end_of___xxtofl:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           fsr1l	equ	0xFE1
  4243                           postinc2	equ	0xFDE
  4244                           postdec2	equ	0xFDD
  4245                           fsr2h	equ	0xFDA
  4246                           fsr2l	equ	0xFD9
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function ___fltol *****************
  4250 ;; Defined at:
  4251 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  f1              4   97[BANK0 ] unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  exp1            1  106[BANK0 ] unsigned char 
  4256 ;;  sign1           1  105[BANK0 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  4   97[BANK0 ] long 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4266 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;Total ram usage:       10 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    4
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_park_routine
  4277 ;;		_parallelo
  4278 ;;		_floor
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text11
  4283  00562A                     __ptext11:
  4284                           	opt stack 0
  4285  00562A                     ___fltol:
  4286                           	opt stack 24
  4287                           
  4288                           ;incstack = 0
  4289  00562A  0100               	movlb	0	; () banked
  4290  00562C  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4291  00562E  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4292  005630  0100               	movlb	0	; () banked
  4293  005632  6FCA               	movwf	___fltol@exp1& (0+255),b
  4294  005634  0100               	movlb	0	; () banked
  4295  005636  51CA               	movf	___fltol@exp1& (0+255),w,b
  4296  005638  A4D8               	btfss	status,2,c
  4297  00563A  D00A               	goto	l6407
  4298                           
  4299                           ; BSR set to: 0
  4300  00563C  0E00               	movlw	0
  4301  00563E  0100               	movlb	0	; () banked
  4302  005640  6FC1               	movwf	?___fltol& (0+255),b
  4303  005642  0E00               	movlw	0
  4304  005644  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4305  005646  0E00               	movlw	0
  4306  005648  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4307  00564A  0E00               	movlw	0
  4308  00564C  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311  00564E  0012               	return	
  4312  005650                     l6407:
  4313                           
  4314                           ; BSR set to: 0
  4315  005650  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  4316  005654  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  4317  005658  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  4318  00565C  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  4319  005660  0E20               	movlw	32
  4320  005662  D006               	goto	u7960
  4321  005664                     u7965:
  4322  005664  0100               	movlb	0	; () banked
  4323  005666  90D8               	bcf	status,0,c
  4324  005668  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  4325  00566A  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  4326  00566C  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  4327  00566E  33C5               	rrcf	??___fltol& (0+255),f,b
  4328  005670                     u7960:
  4329  005670  2EE8               	decfsz	wreg,f,c
  4330  005672  D7F8               	goto	u7965
  4331  005674  0100               	movlb	0	; () banked
  4332  005676  51C5               	movf	??___fltol& (0+255),w,b
  4333  005678  0100               	movlb	0	; () banked
  4334  00567A  6FC9               	movwf	___fltol@sign1& (0+255),b
  4335                           
  4336                           ; BSR set to: 0
  4337  00567C  0100               	movlb	0	; () banked
  4338  00567E  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  4339                           
  4340                           ; BSR set to: 0
  4341  005680  0EFF               	movlw	255
  4342  005682  0100               	movlb	0	; () banked
  4343  005684  17C1               	andwf	___fltol@f1& (0+255),f,b
  4344  005686  0EFF               	movlw	255
  4345  005688  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  4346  00568A  0EFF               	movlw	255
  4347  00568C  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  4348  00568E  0E00               	movlw	0
  4349  005690  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  4350                           
  4351                           ; BSR set to: 0
  4352  005692  0E96               	movlw	150
  4353  005694  0100               	movlb	0	; () banked
  4354  005696  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  4355                           
  4356                           ; BSR set to: 0
  4357  005698  0100               	movlb	0	; () banked
  4358  00569A  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  4359  00569C  D01A               	goto	l6427
  4360                           
  4361                           ; BSR set to: 0
  4362  00569E  0100               	movlb	0	; () banked
  4363  0056A0  51CA               	movf	___fltol@exp1& (0+255),w,b
  4364  0056A2  0A80               	xorlw	128
  4365  0056A4  0F97               	addlw	151
  4366  0056A6  B0D8               	btfsc	status,0,c
  4367  0056A8  D00A               	goto	l6423
  4368                           
  4369                           ; BSR set to: 0
  4370  0056AA  0E00               	movlw	0
  4371  0056AC  0100               	movlb	0	; () banked
  4372  0056AE  6FC1               	movwf	?___fltol& (0+255),b
  4373  0056B0  0E00               	movlw	0
  4374  0056B2  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4375  0056B4  0E00               	movlw	0
  4376  0056B6  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4377  0056B8  0E00               	movlw	0
  4378  0056BA  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4379                           
  4380                           ; BSR set to: 0
  4381  0056BC  0012               	return	
  4382  0056BE                     l6423:
  4383                           
  4384                           ; BSR set to: 0
  4385  0056BE  0100               	movlb	0	; () banked
  4386  0056C0  90D8               	bcf	status,0,c
  4387  0056C2  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4388  0056C4  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4389  0056C6  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4390  0056C8  33C1               	rrcf	___fltol@f1& (0+255),f,b
  4391                           
  4392                           ; BSR set to: 0
  4393  0056CA  0100               	movlb	0	; () banked
  4394  0056CC  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  4395  0056CE  D7F7               	goto	l6423
  4396                           
  4397                           ; BSR set to: 0
  4398  0056D0  D01B               	goto	l6437
  4399  0056D2                     l6427:
  4400                           
  4401                           ; BSR set to: 0
  4402  0056D2  0E1F               	movlw	31
  4403  0056D4  0100               	movlb	0	; () banked
  4404  0056D6  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  4405  0056D8  D012               	goto	l6435
  4406                           
  4407                           ; BSR set to: 0
  4408  0056DA  0E00               	movlw	0
  4409  0056DC  0100               	movlb	0	; () banked
  4410  0056DE  6FC1               	movwf	?___fltol& (0+255),b
  4411  0056E0  0E00               	movlw	0
  4412  0056E2  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4413  0056E4  0E00               	movlw	0
  4414  0056E6  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4415  0056E8  0E00               	movlw	0
  4416  0056EA  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4417                           
  4418                           ; BSR set to: 0
  4419  0056EC  0012               	return	
  4420  0056EE                     l6433:
  4421                           
  4422                           ; BSR set to: 0
  4423  0056EE  0100               	movlb	0	; () banked
  4424  0056F0  90D8               	bcf	status,0,c
  4425  0056F2  37C1               	rlcf	___fltol@f1& (0+255),f,b
  4426  0056F4  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4427  0056F6  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4428  0056F8  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4429  0056FA  0100               	movlb	0	; () banked
  4430  0056FC  07CA               	decf	___fltol@exp1& (0+255),f,b
  4431  0056FE                     l6435:
  4432                           
  4433                           ; BSR set to: 0
  4434  0056FE  0100               	movlb	0	; () banked
  4435  005700  51CA               	movf	___fltol@exp1& (0+255),w,b
  4436  005702  0100               	movlb	0	; () banked
  4437  005704  A4D8               	btfss	status,2,c
  4438  005706  D7F3               	goto	l6433
  4439  005708                     l6437:
  4440                           
  4441                           ; BSR set to: 0
  4442  005708  0100               	movlb	0	; () banked
  4443  00570A  51C9               	movf	___fltol@sign1& (0+255),w,b
  4444  00570C  0100               	movlb	0	; () banked
  4445  00570E  B4D8               	btfsc	status,2,c
  4446  005710  D009               	goto	l6441
  4447                           
  4448                           ; BSR set to: 0
  4449  005712  0100               	movlb	0	; () banked
  4450  005714  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  4451  005716  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  4452  005718  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  4453  00571A  6DC1               	negf	___fltol@f1& (0+255),b
  4454  00571C  0E00               	movlw	0
  4455  00571E  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4456  005720  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4457  005722  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4458  005724                     l6441:
  4459                           
  4460                           ; BSR set to: 0
  4461  005724  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  4462  005728  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  4463  00572C  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  4464  005730  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  4465  005734  0012               	return	
  4466  005736                     __end_of___fltol:
  4467                           	opt stack 0
  4468                           tblptru	equ	0xFF8
  4469                           tblptrh	equ	0xFF7
  4470                           tblptrl	equ	0xFF6
  4471                           tablat	equ	0xFF5
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8
  4481                           
  4482 ;; *************** function ___flsub *****************
  4483 ;; Defined at:
  4484 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  b               4   12[BANK1 ] long 
  4487 ;;  a               4   16[BANK1 ] long 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  4   12[BANK1 ] long 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4499 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;Total ram usage:        8 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    5
  4506 ;; This function calls:
  4507 ;;		___fladd
  4508 ;; This function is called by:
  4509 ;;		_sin
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text12
  4514  005B8E                     __ptext12:
  4515                           	opt stack 0
  4516  005B8E                     ___flsub:
  4517                           	opt stack 21
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;incstack = 0
  4521  005B8E  0E00               	movlw	0
  4522  005B90  0101               	movlb	1	; () banked
  4523  005B92  1B93               	xorwf	___flsub@a& (0+255),f,b
  4524  005B94  0E00               	movlw	0
  4525  005B96  1B94               	xorwf	(___flsub@a+1)& (0+255),f,b
  4526  005B98  0E00               	movlw	0
  4527  005B9A  1B95               	xorwf	(___flsub@a+2)& (0+255),f,b
  4528  005B9C  0E80               	movlw	128
  4529  005B9E  1B96               	xorwf	(___flsub@a+3)& (0+255),f,b
  4530                           
  4531                           ; BSR set to: 1
  4532  005BA0  C18F  F0AD         	movff	___flsub@b,___fladd@b
  4533  005BA4  C190  F0AE         	movff	___flsub@b+1,___fladd@b+1
  4534  005BA8  C191  F0AF         	movff	___flsub@b+2,___fladd@b+2
  4535  005BAC  C192  F0B0         	movff	___flsub@b+3,___fladd@b+3
  4536  005BB0  C193  F0B1         	movff	___flsub@a,___fladd@a
  4537  005BB4  C194  F0B2         	movff	___flsub@a+1,___fladd@a+1
  4538  005BB8  C195  F0B3         	movff	___flsub@a+2,___fladd@a+2
  4539  005BBC  C196  F0B4         	movff	___flsub@a+3,___fladd@a+3
  4540  005BC0  ECE2  F014         	call	___fladd	;wreg free
  4541  005BC4  C0AD  F18F         	movff	?___fladd,?___flsub
  4542  005BC8  C0AE  F190         	movff	?___fladd+1,?___flsub+1
  4543  005BCC  C0AF  F191         	movff	?___fladd+2,?___flsub+2
  4544  005BD0  C0B0  F192         	movff	?___fladd+3,?___flsub+3
  4545  005BD4  0012               	return	
  4546  005BD6                     __end_of___flsub:
  4547                           	opt stack 0
  4548                           tblptru	equ	0xFF8
  4549                           tblptrh	equ	0xFF7
  4550                           tblptrl	equ	0xFF6
  4551                           tablat	equ	0xFF5
  4552                           postinc0	equ	0xFEE
  4553                           wreg	equ	0xFE8
  4554                           postdec1	equ	0xFE5
  4555                           fsr1l	equ	0xFE1
  4556                           postinc2	equ	0xFDE
  4557                           postdec2	equ	0xFDD
  4558                           fsr2h	equ	0xFDA
  4559                           fsr2l	equ	0xFD9
  4560                           status	equ	0xFD8
  4561                           
  4562 ;; *************** function _asin *****************
  4563 ;; Defined at:
  4564 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  x               4   21[BANK1 ] long 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  y               4   37[BANK1 ] long 
  4569 ;;  sgn             4   25[BANK1 ] long 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  4   21[BANK1 ] long 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4579 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;Total ram usage:       24 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    7
  4586 ;; This function calls:
  4587 ;;		___fladd
  4588 ;;		___fldiv
  4589 ;;		___flge
  4590 ;;		___flmul
  4591 ;;		___flneg
  4592 ;;		_atan
  4593 ;;		_fabs
  4594 ;;		_sqrt
  4595 ;; This function is called by:
  4596 ;;		_parallelo
  4597 ;;		_matematica
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text13
  4602  004152                     __ptext13:
  4603                           	opt stack 0
  4604  004152                     _asin:
  4605                           	opt stack 21
  4606                           
  4607                           ;incstack = 0
  4608  004152  0E00               	movlw	0
  4609  004154  0100               	movlb	0	; () banked
  4610  004156  6FB1               	movwf	___flge@ff1& (0+255),b
  4611  004158  0E00               	movlw	0
  4612  00415A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4613  00415C  0E80               	movlw	128
  4614  00415E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4615  004160  0E3F               	movlw	63
  4616  004162  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4617  004164  C198  F0AD         	movff	asin@x,fabs@d
  4618  004168  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4619  00416C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4620  004170  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4621  004174  ECEB  F02D         	call	_fabs	;wreg free
  4622  004178  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  4623  00417C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  4624  004180  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  4625  004184  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  4626  004188  EC94  F028         	call	___flge	;wreg free
  4627  00418C  0100               	movlb	0	; () banked
  4628  00418E  B0D8               	btfsc	status,0,c
  4629  004190  D00F               	goto	l6853
  4630                           
  4631                           ; BSR set to: 0
  4632  004192  0E00               	movlw	0
  4633  004194  0101               	movlb	1	; () banked
  4634  004196  6F43               	movwf	(_errno+1)& (0+255),b
  4635  004198  0E21               	movlw	33
  4636  00419A  6F42               	movwf	_errno& (0+255),b
  4637  00419C  0E00               	movlw	0
  4638  00419E  0101               	movlb	1	; () banked
  4639  0041A0  6F98               	movwf	?_asin& (0+255),b
  4640  0041A2  0E00               	movlw	0
  4641  0041A4  6F99               	movwf	(?_asin+1)& (0+255),b
  4642  0041A6  0E00               	movlw	0
  4643  0041A8  6F9A               	movwf	(?_asin+2)& (0+255),b
  4644  0041AA  0E00               	movlw	0
  4645  0041AC  6F9B               	movwf	(?_asin+3)& (0+255),b
  4646                           
  4647                           ; BSR set to: 1
  4648  0041AE  0012               	return	
  4649  0041B0                     l6853:
  4650  0041B0  0E00               	movlw	0
  4651  0041B2  0101               	movlb	1	; () banked
  4652  0041B4  6F9C               	movwf	asin@sgn& (0+255),b
  4653  0041B6  0E00               	movlw	0
  4654  0041B8  6F9D               	movwf	(asin@sgn+1)& (0+255),b
  4655  0041BA  0E80               	movlw	128
  4656  0041BC  6F9E               	movwf	(asin@sgn+2)& (0+255),b
  4657  0041BE  0E3F               	movlw	63
  4658  0041C0  6F9F               	movwf	(asin@sgn+3)& (0+255),b
  4659                           
  4660                           ; BSR set to: 1
  4661  0041C2  C198  F094         	movff	asin@x,___flmul@a
  4662  0041C6  C199  F095         	movff	asin@x+1,___flmul@a+1
  4663  0041CA  C19A  F096         	movff	asin@x+2,___flmul@a+2
  4664  0041CE  C19B  F097         	movff	asin@x+3,___flmul@a+3
  4665  0041D2  C198  F090         	movff	asin@x,___flmul@b
  4666  0041D6  C199  F091         	movff	asin@x+1,___flmul@b+1
  4667  0041DA  C19A  F092         	movff	asin@x+2,___flmul@b+2
  4668  0041DE  C19B  F093         	movff	asin@x+3,___flmul@b+3
  4669  0041E2  EC36  F017         	call	___flmul	;wreg free
  4670  0041E6  C090  F0A9         	movff	?___flmul,___flneg@f1
  4671  0041EA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  4672  0041EE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  4673  0041F2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  4674  0041F6  EC27  F02E         	call	___flneg	;wreg free
  4675  0041FA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4676  0041FE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4677  004202  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4678  004206  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4679  00420A  0E00               	movlw	0
  4680  00420C  0100               	movlb	0	; () banked
  4681  00420E  6FB1               	movwf	___fladd@a& (0+255),b
  4682  004210  0E00               	movlw	0
  4683  004212  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4684  004214  0E80               	movlw	128
  4685  004216  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4686  004218  0E3F               	movlw	63
  4687  00421A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4688  00421C  ECE2  F014         	call	___fladd	;wreg free
  4689  004220  C0AD  F0C1         	movff	?___fladd,sqrt@a
  4690  004224  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  4691  004228  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  4692  00422C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  4693  004230  EC89  F019         	call	_sqrt	;wreg free
  4694  004234  C0C1  F1A8         	movff	?_sqrt,asin@y
  4695  004238  C0C2  F1A9         	movff	?_sqrt+1,asin@y+1
  4696  00423C  C0C3  F1AA         	movff	?_sqrt+2,asin@y+2
  4697  004240  C0C4  F1AB         	movff	?_sqrt+3,asin@y+3
  4698  004244  C198  F0AD         	movff	asin@x,fabs@d
  4699  004248  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4700  00424C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4701  004250  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4702  004254  ECEB  F02D         	call	_fabs	;wreg free
  4703  004258  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  4704  00425C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  4705  004260  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  4706  004264  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  4707  004268  0E8F               	movlw	143
  4708  00426A  0100               	movlb	0	; () banked
  4709  00426C  6FB5               	movwf	___flge@ff2& (0+255),b
  4710  00426E  0EC2               	movlw	194
  4711  004270  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  4712  004272  0E35               	movlw	53
  4713  004274  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  4714  004276  0E3F               	movlw	63
  4715  004278  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  4716  00427A  EC94  F028         	call	___flge	;wreg free
  4717  00427E  0100               	movlb	0	; () banked
  4718  004280  B0D8               	btfsc	status,0,c
  4719  004282  D02D               	goto	l6865
  4720                           
  4721                           ; BSR set to: 0
  4722  004284  C198  F077         	movff	asin@x,___fldiv@b
  4723  004288  C199  F078         	movff	asin@x+1,___fldiv@b+1
  4724  00428C  C19A  F079         	movff	asin@x+2,___fldiv@b+2
  4725  004290  C19B  F07A         	movff	asin@x+3,___fldiv@b+3
  4726  004294  C1A8  F07B         	movff	asin@y,___fldiv@a
  4727  004298  C1A9  F07C         	movff	asin@y+1,___fldiv@a+1
  4728  00429C  C1AA  F07D         	movff	asin@y+2,___fldiv@a+2
  4729  0042A0  C1AB  F07E         	movff	asin@y+3,___fldiv@a+3
  4730  0042A4  EC6E  F01B         	call	___fldiv	;wreg free
  4731  0042A8  C077  F1AC         	movff	?___fldiv,_asin$3746
  4732  0042AC  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4733  0042B0  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4734  0042B4  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4735  0042B8  C1AC  F0D1         	movff	_asin$3746,atan@f
  4736  0042BC  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4737  0042C0  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4738  0042C4  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4739  0042C8  ECCD  F024         	call	_atan	;wreg free
  4740  0042CC  C0D1  F198         	movff	?_atan,?_asin
  4741  0042D0  C0D2  F199         	movff	?_atan+1,?_asin+1
  4742  0042D4  C0D3  F19A         	movff	?_atan+2,?_asin+2
  4743  0042D8  C0D4  F19B         	movff	?_atan+3,?_asin+3
  4744  0042DC  0012               	return	
  4745  0042DE                     l6865:
  4746  0042DE  0101               	movlb	1	; () banked
  4747  0042E0  AF9B               	btfss	(asin@x+3)& (0+255),7,b
  4748  0042E2  D06E               	goto	l6877
  4749                           
  4750                           ; BSR set to: 1
  4751  0042E4  C198  F07B         	movff	asin@x,___fldiv@a
  4752  0042E8  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4753  0042EC  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4754  0042F0  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4755  0042F4  C1A8  F0A9         	movff	asin@y,___flneg@f1
  4756  0042F8  C1A9  F0AA         	movff	asin@y+1,___flneg@f1+1
  4757  0042FC  C1AA  F0AB         	movff	asin@y+2,___flneg@f1+2
  4758  004300  C1AB  F0AC         	movff	asin@y+3,___flneg@f1+3
  4759  004304  EC27  F02E         	call	___flneg	;wreg free
  4760  004308  C0A9  F077         	movff	?___flneg,___fldiv@b
  4761  00430C  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  4762  004310  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  4763  004314  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  4764  004318  EC6E  F01B         	call	___fldiv	;wreg free
  4765  00431C  C077  F1AC         	movff	?___fldiv,_asin$3746
  4766  004320  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4767  004324  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4768  004328  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4769  00432C  C1AC  F0D1         	movff	_asin$3746,atan@f
  4770  004330  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4771  004334  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4772  004338  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4773  00433C  ECCD  F024         	call	_atan	;wreg free
  4774  004340  C0D1  F1A4         	movff	?_atan,_asin$3747
  4775  004344  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4776  004348  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4777  00434C  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4778  004350  0EDB               	movlw	219
  4779  004352  0100               	movlb	0	; () banked
  4780  004354  6FB1               	movwf	___fladd@a& (0+255),b
  4781  004356  0E0F               	movlw	15
  4782  004358  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4783  00435A  0EC9               	movlw	201
  4784  00435C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4785  00435E  0E3F               	movlw	63
  4786  004360  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4787  004362  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4788  004366  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4789  00436A  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4790  00436E  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4791  004372  EC27  F02E         	call	___flneg	;wreg free
  4792  004376  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4793  00437A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4794  00437E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4795  004382  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4796  004386  ECE2  F014         	call	___fladd	;wreg free
  4797  00438A  C0AD  F1A0         	movff	?___fladd,_asin$3748
  4798  00438E  C0AE  F1A1         	movff	?___fladd+1,_asin$3748+1
  4799  004392  C0AF  F1A2         	movff	?___fladd+2,_asin$3748+2
  4800  004396  C0B0  F1A3         	movff	?___fladd+3,_asin$3748+3
  4801  00439A  C1A0  F0A9         	movff	_asin$3748,___flneg@f1
  4802  00439E  C1A1  F0AA         	movff	_asin$3748+1,___flneg@f1+1
  4803  0043A2  C1A2  F0AB         	movff	_asin$3748+2,___flneg@f1+2
  4804  0043A6  C1A3  F0AC         	movff	_asin$3748+3,___flneg@f1+3
  4805  0043AA  EC27  F02E         	call	___flneg	;wreg free
  4806  0043AE  C0A9  F198         	movff	?___flneg,?_asin
  4807  0043B2  C0AA  F199         	movff	?___flneg+1,?_asin+1
  4808  0043B6  C0AB  F19A         	movff	?___flneg+2,?_asin+2
  4809  0043BA  C0AC  F19B         	movff	?___flneg+3,?_asin+3
  4810  0043BE  0012               	return	
  4811  0043C0                     l6877:
  4812  0043C0  C198  F07B         	movff	asin@x,___fldiv@a
  4813  0043C4  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4814  0043C8  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4815  0043CC  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4816  0043D0  C1A8  F077         	movff	asin@y,___fldiv@b
  4817  0043D4  C1A9  F078         	movff	asin@y+1,___fldiv@b+1
  4818  0043D8  C1AA  F079         	movff	asin@y+2,___fldiv@b+2
  4819  0043DC  C1AB  F07A         	movff	asin@y+3,___fldiv@b+3
  4820  0043E0  EC6E  F01B         	call	___fldiv	;wreg free
  4821  0043E4  C077  F1AC         	movff	?___fldiv,_asin$3746
  4822  0043E8  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4823  0043EC  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4824  0043F0  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4825  0043F4  C1AC  F0D1         	movff	_asin$3746,atan@f
  4826  0043F8  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4827  0043FC  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4828  004400  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4829  004404  ECCD  F024         	call	_atan	;wreg free
  4830  004408  C0D1  F1A4         	movff	?_atan,_asin$3747
  4831  00440C  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4832  004410  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4833  004414  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4834  004418  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4835  00441C  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4836  004420  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4837  004424  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4838  004428  EC27  F02E         	call	___flneg	;wreg free
  4839  00442C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4840  004430  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4841  004434  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4842  004438  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4843  00443C  0EDB               	movlw	219
  4844  00443E  0100               	movlb	0	; () banked
  4845  004440  6FB1               	movwf	___fladd@a& (0+255),b
  4846  004442  0E0F               	movlw	15
  4847  004444  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4848  004446  0EC9               	movlw	201
  4849  004448  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4850  00444A  0E3F               	movlw	63
  4851  00444C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4852  00444E  ECE2  F014         	call	___fladd	;wreg free
  4853  004452  C0AD  F198         	movff	?___fladd,?_asin
  4854  004456  C0AE  F199         	movff	?___fladd+1,?_asin+1
  4855  00445A  C0AF  F19A         	movff	?___fladd+2,?_asin+2
  4856  00445E  C0B0  F19B         	movff	?___fladd+3,?_asin+3
  4857  004462  0012               	return	
  4858  004464                     __end_of_asin:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           postdec1	equ	0xFE5
  4867                           fsr1l	equ	0xFE1
  4868                           postinc2	equ	0xFDE
  4869                           postdec2	equ	0xFDD
  4870                           fsr2h	equ	0xFDA
  4871                           fsr2l	equ	0xFD9
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function _sqrt *****************
  4875 ;; Defined at:
  4876 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  a               4   97[BANK0 ] long 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  frac            4   17[BANK1 ] unsigned long 
  4881 ;;  root            4   13[BANK1 ] struct .
  4882 ;;  grs             4    7[BANK1 ] unsigned long 
  4883 ;;  tfrac           4    2[BANK1 ] unsigned long 
  4884 ;;  exp             2   11[BANK1 ] int 
  4885 ;;  p               1    6[BANK1 ] unsigned char 
  4886 ;;  i               1    1[BANK1 ] unsigned char 
  4887 ;;  sign            1    0[BANK1 ] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  4   97[BANK0 ] unsigned char 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:       29 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    4
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_parallelo
  4908 ;;		_asin
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text14
  4913  003312                     __ptext14:
  4914                           	opt stack 0
  4915  003312                     _sqrt:
  4916                           	opt stack 24
  4917                           
  4918                           ;incstack = 0
  4919  003312  0100               	movlb	0	; () banked
  4920  003314  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4921  003316  0B80               	andlw	128
  4922  003318  0101               	movlb	1	; () banked
  4923  00331A  6F83               	movwf	sqrt@sign& (0+255),b
  4924  00331C  0100               	movlb	0	; () banked
  4925  00331E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4926  003320  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  4927  003322  0101               	movlb	1	; () banked
  4928  003324  6F89               	movwf	sqrt@p& (0+255),b
  4929                           
  4930                           ; BSR set to: 1
  4931  003326  0100               	movlb	0	; () banked
  4932  003328  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  4933  00332A  D002               	goto	l6687
  4934                           
  4935                           ; BSR set to: 0
  4936  00332C  0101               	movlb	1	; () banked
  4937  00332E  8189               	bsf	sqrt@p& (0+255),0,b
  4938  003330                     l6687:
  4939  003330  C189  F18E         	movff	sqrt@p,sqrt@exp
  4940  003334  0101               	movlb	1	; () banked
  4941  003336  6B8F               	clrf	(sqrt@exp+1)& (0+255),b
  4942                           
  4943                           ; BSR set to: 1
  4944  003338  0EFF               	movlw	255
  4945  00333A  0100               	movlb	0	; () banked
  4946  00333C  15C1               	andwf	sqrt@a& (0+255),w,b
  4947  00333E  0101               	movlb	1	; () banked
  4948  003340  6F94               	movwf	sqrt@frac& (0+255),b
  4949  003342  0EFF               	movlw	255
  4950  003344  0100               	movlb	0	; () banked
  4951  003346  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  4952  003348  0101               	movlb	1	; () banked
  4953  00334A  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  4954  00334C  0E7F               	movlw	127
  4955  00334E  0100               	movlb	0	; () banked
  4956  003350  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  4957  003352  0101               	movlb	1	; () banked
  4958  003354  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  4959  003356  0E00               	movlw	0
  4960  003358  0100               	movlb	0	; () banked
  4961  00335A  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  4962  00335C  0101               	movlb	1	; () banked
  4963  00335E  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  4964                           
  4965                           ; BSR set to: 1
  4966  003360  0101               	movlb	1	; () banked
  4967  003362  518E               	movf	sqrt@exp& (0+255),w,b
  4968  003364  0101               	movlb	1	; () banked
  4969  003366  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4970  003368  B4D8               	btfsc	status,2,c
  4971  00336A  D008               	goto	l6699
  4972                           
  4973                           ; BSR set to: 1
  4974  00336C  0101               	movlb	1	; () banked
  4975  00336E  8F96               	bsf	(sqrt@frac+2)& (0+255),7,b
  4976                           
  4977                           ; BSR set to: 1
  4978  003370  0101               	movlb	1	; () banked
  4979  003372  298E               	incf	sqrt@exp& (0+255),w,b
  4980  003374  0101               	movlb	1	; () banked
  4981  003376  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4982  003378  A4D8               	btfss	status,2,c
  4983  00337A  D009               	goto	l6701
  4984  00337C                     l6699:
  4985                           
  4986                           ; BSR set to: 1
  4987  00337C  0E00               	movlw	0
  4988  00337E  0101               	movlb	1	; () banked
  4989  003380  6F94               	movwf	sqrt@frac& (0+255),b
  4990  003382  0E00               	movlw	0
  4991  003384  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  4992  003386  0E00               	movlw	0
  4993  003388  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  4994  00338A  0E00               	movlw	0
  4995  00338C  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  4996  00338E                     l6701:
  4997                           
  4998                           ; BSR set to: 1
  4999  00338E  0101               	movlb	1	; () banked
  5000  003390  518E               	movf	sqrt@exp& (0+255),w,b
  5001  003392  0101               	movlb	1	; () banked
  5002  003394  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5003  003396  A4D8               	btfss	status,2,c
  5004  003398  D00A               	goto	l6707
  5005                           
  5006                           ; BSR set to: 1
  5007  00339A  0E00               	movlw	0
  5008  00339C  0100               	movlb	0	; () banked
  5009  00339E  6FC1               	movwf	?_sqrt& (0+255),b
  5010  0033A0  0E00               	movlw	0
  5011  0033A2  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  5012  0033A4  0E00               	movlw	0
  5013  0033A6  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  5014  0033A8  0E00               	movlw	0
  5015  0033AA  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  5016                           
  5017                           ; BSR set to: 0
  5018  0033AC  0012               	return	
  5019  0033AE                     l6707:
  5020  0033AE  0101               	movlb	1	; () banked
  5021  0033B0  5183               	movf	sqrt@sign& (0+255),w,b
  5022  0033B2  0101               	movlb	1	; () banked
  5023  0033B4  B4D8               	btfsc	status,2,c
  5024  0033B6  D01C               	goto	l6719
  5025                           
  5026                           ; BSR set to: 1
  5027  0033B8  0E00               	movlw	0
  5028  0033BA  0101               	movlb	1	; () banked
  5029  0033BC  6F90               	movwf	sqrt@root& (0+255),b
  5030  0033BE  0E00               	movlw	0
  5031  0033C0  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5032  0033C2  0E40               	movlw	64
  5033  0033C4  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5034  0033C6  0E00               	movlw	0
  5035  0033C8  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5036                           
  5037                           ; BSR set to: 1
  5038  0033CA  0101               	movlb	1	; () banked
  5039  0033CC  0E80               	movlw	128
  5040  0033CE  1392               	iorwf	(sqrt@root+2)& (0+255),f,b
  5041  0033D0  0EFF               	movlw	255
  5042  0033D2  1393               	iorwf	(sqrt@root+3)& (0+255),f,b
  5043                           
  5044                           ; BSR set to: 1
  5045  0033D4  0E00               	movlw	0
  5046  0033D6  0101               	movlb	1	; () banked
  5047  0033D8  6F43               	movwf	(_errno+1)& (0+255),b
  5048  0033DA  0E21               	movlw	33
  5049  0033DC  6F42               	movwf	_errno& (0+255),b
  5050                           
  5051                           ; BSR set to: 1
  5052  0033DE  C190  F0C1         	movff	sqrt@root,?_sqrt
  5053  0033E2  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5054  0033E6  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5055  0033EA  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5056                           
  5057                           ; BSR set to: 1
  5058  0033EE  0012               	return	
  5059  0033F0                     l6719:
  5060                           
  5061                           ; BSR set to: 1
  5062  0033F0  0101               	movlb	1	; () banked
  5063  0033F2  298E               	incf	sqrt@exp& (0+255),w,b
  5064  0033F4  0101               	movlb	1	; () banked
  5065  0033F6  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5066  0033F8  A4D8               	btfss	status,2,c
  5067  0033FA  D012               	goto	l6727
  5068                           
  5069                           ; BSR set to: 1
  5070  0033FC  0E00               	movlw	0
  5071  0033FE  0101               	movlb	1	; () banked
  5072  003400  6F90               	movwf	sqrt@root& (0+255),b
  5073  003402  0E00               	movlw	0
  5074  003404  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5075  003406  0E80               	movlw	128
  5076  003408  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5077  00340A  0E7F               	movlw	127
  5078  00340C  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5079                           
  5080                           ; BSR set to: 1
  5081  00340E  C190  F0C1         	movff	sqrt@root,?_sqrt
  5082  003412  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5083  003416  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5084  00341A  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5085                           
  5086                           ; BSR set to: 1
  5087  00341E  0012               	return	
  5088  003420                     l6727:
  5089                           
  5090                           ; BSR set to: 1
  5091  003420  0101               	movlb	1	; () banked
  5092  003422  0E81               	movlw	129
  5093  003424  278E               	addwf	sqrt@exp& (0+255),f,b
  5094  003426  0EFF               	movlw	255
  5095  003428  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  5096  00342A  0101               	movlb	1	; () banked
  5097  00342C  518E               	movf	sqrt@exp& (0+255),w,b
  5098  00342E  0B01               	andlw	1
  5099  003430  0101               	movlb	1	; () banked
  5100  003432  6F89               	movwf	sqrt@p& (0+255),b
  5101  003434  0101               	movlb	1	; () banked
  5102  003436  358F               	rlcf	(sqrt@exp+1)& (0+255),w,b
  5103  003438  338F               	rrcf	(sqrt@exp+1)& (0+255),f,b
  5104  00343A  338E               	rrcf	sqrt@exp& (0+255),f,b
  5105  00343C  0E7F               	movlw	127
  5106  00343E  0101               	movlb	1	; () banked
  5107  003440  278E               	addwf	sqrt@exp& (0+255),f,b
  5108  003442  0E00               	movlw	0
  5109  003444  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  5110  003446  90D8               	bcf	status,0,c
  5111  003448  0101               	movlb	1	; () banked
  5112  00344A  3594               	rlcf	sqrt@frac& (0+255),w,b
  5113  00344C  0101               	movlb	1	; () banked
  5114  00344E  6F85               	movwf	sqrt@tfrac& (0+255),b
  5115  003450  0101               	movlb	1	; () banked
  5116  003452  3595               	rlcf	(sqrt@frac+1)& (0+255),w,b
  5117  003454  0101               	movlb	1	; () banked
  5118  003456  6F86               	movwf	(sqrt@tfrac+1)& (0+255),b
  5119  003458  0101               	movlb	1	; () banked
  5120  00345A  3596               	rlcf	(sqrt@frac+2)& (0+255),w,b
  5121  00345C  0101               	movlb	1	; () banked
  5122  00345E  6F87               	movwf	(sqrt@tfrac+2)& (0+255),b
  5123  003460  0101               	movlb	1	; () banked
  5124  003462  3597               	rlcf	(sqrt@frac+3)& (0+255),w,b
  5125  003464  0101               	movlb	1	; () banked
  5126  003466  6F88               	movwf	(sqrt@tfrac+3)& (0+255),b
  5127                           
  5128                           ; BSR set to: 1
  5129  003468  0E00               	movlw	0
  5130  00346A  0101               	movlb	1	; () banked
  5131  00346C  6F94               	movwf	sqrt@frac& (0+255),b
  5132  00346E  0E00               	movlw	0
  5133  003470  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  5134  003472  0E00               	movlw	0
  5135  003474  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  5136  003476  0E00               	movlw	0
  5137  003478  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  5138                           
  5139                           ; BSR set to: 1
  5140  00347A  0E00               	movlw	0
  5141  00347C  0101               	movlb	1	; () banked
  5142  00347E  6F8A               	movwf	sqrt@grs& (0+255),b
  5143  003480  0E00               	movlw	0
  5144  003482  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5145  003484  0E00               	movlw	0
  5146  003486  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5147  003488  0E01               	movlw	1
  5148  00348A  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5149                           
  5150                           ; BSR set to: 1
  5151  00348C  0101               	movlb	1	; () banked
  5152  00348E  5189               	movf	sqrt@p& (0+255),w,b
  5153  003490  0101               	movlb	1	; () banked
  5154  003492  B4D8               	btfsc	status,2,c
  5155  003494  D006               	goto	l6737
  5156                           
  5157                           ; BSR set to: 1
  5158  003496  0101               	movlb	1	; () banked
  5159  003498  90D8               	bcf	status,0,c
  5160  00349A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5161  00349C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5162  00349E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5163  0034A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5164  0034A2                     l6737:
  5165                           
  5166                           ; BSR set to: 1
  5167  0034A2  0E00               	movlw	0
  5168  0034A4  0101               	movlb	1	; () banked
  5169  0034A6  6F84               	movwf	sqrt@i& (0+255),b
  5170  0034A8  D07E               	goto	l6751
  5171  0034AA                     l6739:
  5172                           
  5173                           ; BSR set to: 1
  5174  0034AA  0101               	movlb	1	; () banked
  5175  0034AC  518A               	movf	sqrt@grs& (0+255),w,b
  5176  0034AE  0101               	movlb	1	; () banked
  5177  0034B0  1394               	iorwf	sqrt@frac& (0+255),f,b
  5178  0034B2  0101               	movlb	1	; () banked
  5179  0034B4  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5180  0034B6  0101               	movlb	1	; () banked
  5181  0034B8  1395               	iorwf	(sqrt@frac+1)& (0+255),f,b
  5182  0034BA  0101               	movlb	1	; () banked
  5183  0034BC  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5184  0034BE  0101               	movlb	1	; () banked
  5185  0034C0  1396               	iorwf	(sqrt@frac+2)& (0+255),f,b
  5186  0034C2  0101               	movlb	1	; () banked
  5187  0034C4  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5188  0034C6  0101               	movlb	1	; () banked
  5189  0034C8  1397               	iorwf	(sqrt@frac+3)& (0+255),f,b
  5190  0034CA  0101               	movlb	1	; () banked
  5191  0034CC  5194               	movf	sqrt@frac& (0+255),w,b
  5192  0034CE  0101               	movlb	1	; () banked
  5193  0034D0  5D85               	subwf	sqrt@tfrac& (0+255),w,b
  5194  0034D2  0101               	movlb	1	; () banked
  5195  0034D4  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5196  0034D6  0101               	movlb	1	; () banked
  5197  0034D8  5986               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  5198  0034DA  0101               	movlb	1	; () banked
  5199  0034DC  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5200  0034DE  0101               	movlb	1	; () banked
  5201  0034E0  5987               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  5202  0034E2  0101               	movlb	1	; () banked
  5203  0034E4  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5204  0034E6  0101               	movlb	1	; () banked
  5205  0034E8  5988               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  5206  0034EA  A0D8               	btfss	status,0,c
  5207  0034EC  D021               	goto	l6743
  5208                           
  5209                           ; BSR set to: 1
  5210  0034EE  0101               	movlb	1	; () banked
  5211  0034F0  5194               	movf	sqrt@frac& (0+255),w,b
  5212  0034F2  0101               	movlb	1	; () banked
  5213  0034F4  5F85               	subwf	sqrt@tfrac& (0+255),f,b
  5214  0034F6  0101               	movlb	1	; () banked
  5215  0034F8  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5216  0034FA  0101               	movlb	1	; () banked
  5217  0034FC  5B86               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  5218  0034FE  0101               	movlb	1	; () banked
  5219  003500  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5220  003502  0101               	movlb	1	; () banked
  5221  003504  5B87               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  5222  003506  0101               	movlb	1	; () banked
  5223  003508  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5224  00350A  0101               	movlb	1	; () banked
  5225  00350C  5B88               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  5226  00350E  0101               	movlb	1	; () banked
  5227  003510  518A               	movf	sqrt@grs& (0+255),w,b
  5228  003512  0101               	movlb	1	; () banked
  5229  003514  2794               	addwf	sqrt@frac& (0+255),f,b
  5230  003516  0101               	movlb	1	; () banked
  5231  003518  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5232  00351A  0101               	movlb	1	; () banked
  5233  00351C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5234  00351E  0101               	movlb	1	; () banked
  5235  003520  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5236  003522  0101               	movlb	1	; () banked
  5237  003524  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5238  003526  0101               	movlb	1	; () banked
  5239  003528  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5240  00352A  0101               	movlb	1	; () banked
  5241  00352C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5242  00352E  D01D               	goto	l6745
  5243  003530                     l6743:
  5244                           
  5245                           ; BSR set to: 1
  5246  003530  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5247  003534  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5248  003538  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5249  00353C  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5250  003540  0100               	movlb	0	; () banked
  5251  003542  1FC5               	comf	??_sqrt& (0+255),f,b
  5252  003544  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  5253  003546  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  5254  003548  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  5255  00354A  0100               	movlb	0	; () banked
  5256  00354C  51C5               	movf	??_sqrt& (0+255),w,b
  5257  00354E  0101               	movlb	1	; () banked
  5258  003550  1794               	andwf	sqrt@frac& (0+255),f,b
  5259  003552  0100               	movlb	0	; () banked
  5260  003554  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  5261  003556  0101               	movlb	1	; () banked
  5262  003558  1795               	andwf	(sqrt@frac+1)& (0+255),f,b
  5263  00355A  0100               	movlb	0	; () banked
  5264  00355C  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  5265  00355E  0101               	movlb	1	; () banked
  5266  003560  1796               	andwf	(sqrt@frac+2)& (0+255),f,b
  5267  003562  0100               	movlb	0	; () banked
  5268  003564  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  5269  003566  0101               	movlb	1	; () banked
  5270  003568  1797               	andwf	(sqrt@frac+3)& (0+255),f,b
  5271  00356A                     l6745:
  5272                           
  5273                           ; BSR set to: 1
  5274  00356A  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5275  00356E  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5276  003572  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5277  003576  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5278  00357A  0100               	movlb	0	; () banked
  5279  00357C  90D8               	bcf	status,0,c
  5280  00357E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5281  003580  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5282  003582  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5283  003584  33C5               	rrcf	??_sqrt& (0+255),f,b
  5284  003586  C0C5  F18A         	movff	??_sqrt,sqrt@grs
  5285  00358A  C0C6  F18B         	movff	??_sqrt+1,sqrt@grs+1
  5286  00358E  C0C7  F18C         	movff	??_sqrt+2,sqrt@grs+2
  5287  003592  C0C8  F18D         	movff	??_sqrt+3,sqrt@grs+3
  5288                           
  5289                           ; BSR set to: 0
  5290  003596  0101               	movlb	1	; () banked
  5291  003598  90D8               	bcf	status,0,c
  5292  00359A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5293  00359C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5294  00359E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5295  0035A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5296                           
  5297                           ; BSR set to: 1
  5298  0035A2  0101               	movlb	1	; () banked
  5299  0035A4  2B84               	incf	sqrt@i& (0+255),f,b
  5300  0035A6                     l6751:
  5301                           
  5302                           ; BSR set to: 1
  5303  0035A6  0E18               	movlw	24
  5304  0035A8  0101               	movlb	1	; () banked
  5305  0035AA  6584               	cpfsgt	sqrt@i& (0+255),b
  5306  0035AC  D77E               	goto	l6739
  5307                           
  5308                           ; BSR set to: 1
  5309                           
  5310                           ; BSR set to: 1
  5311  0035AE  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5312  0035B2  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5313  0035B6  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5314  0035BA  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5315  0035BE  0100               	movlb	0	; () banked
  5316  0035C0  90D8               	bcf	status,0,c
  5317  0035C2  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5318  0035C4  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5319  0035C6  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5320  0035C8  33C5               	rrcf	??_sqrt& (0+255),f,b
  5321  0035CA  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5322  0035CE  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5323  0035D2  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5324  0035D6  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5325                           
  5326                           ; BSR set to: 0
  5327  0035DA  0E01               	movlw	1
  5328  0035DC  0101               	movlb	1	; () banked
  5329  0035DE  1594               	andwf	sqrt@frac& (0+255),w,b
  5330  0035E0  0101               	movlb	1	; () banked
  5331  0035E2  6F8A               	movwf	sqrt@grs& (0+255),b
  5332  0035E4  0E00               	movlw	0
  5333  0035E6  0101               	movlb	1	; () banked
  5334  0035E8  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5335  0035EA  0101               	movlb	1	; () banked
  5336  0035EC  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5337  0035EE  0E00               	movlw	0
  5338  0035F0  0101               	movlb	1	; () banked
  5339  0035F2  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5340  0035F4  0101               	movlb	1	; () banked
  5341  0035F6  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5342  0035F8  0E00               	movlw	0
  5343  0035FA  0101               	movlb	1	; () banked
  5344  0035FC  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5345  0035FE  0101               	movlb	1	; () banked
  5346  003600  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5347                           
  5348                           ; BSR set to: 1
  5349  003602  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5350  003606  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5351  00360A  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5352  00360E  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5353  003612  0100               	movlb	0	; () banked
  5354  003614  90D8               	bcf	status,0,c
  5355  003616  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5356  003618  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5357  00361A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5358  00361C  33C5               	rrcf	??_sqrt& (0+255),f,b
  5359  00361E  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5360  003622  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5361  003626  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5362  00362A  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5363  00362E  0101               	movlb	1	; () banked
  5364  003630  518A               	movf	sqrt@grs& (0+255),w,b
  5365  003632  0101               	movlb	1	; () banked
  5366  003634  2794               	addwf	sqrt@frac& (0+255),f,b
  5367  003636  0101               	movlb	1	; () banked
  5368  003638  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5369  00363A  0101               	movlb	1	; () banked
  5370  00363C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5371  00363E  0101               	movlb	1	; () banked
  5372  003640  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5373  003642  0101               	movlb	1	; () banked
  5374  003644  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5375  003646  0101               	movlb	1	; () banked
  5376  003648  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5377  00364A  0101               	movlb	1	; () banked
  5378  00364C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5379                           
  5380                           ; BSR set to: 1
  5381  00364E  0101               	movlb	1	; () banked
  5382  003650  A197               	btfss	(sqrt@frac+3)& (0+255),0,b
  5383  003652  D019               	goto	l6763
  5384                           
  5385                           ; BSR set to: 1
  5386  003654  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5387  003658  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5388  00365C  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5389  003660  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5390  003664  0100               	movlb	0	; () banked
  5391  003666  90D8               	bcf	status,0,c
  5392  003668  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5393  00366A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5394  00366C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5395  00366E  33C5               	rrcf	??_sqrt& (0+255),f,b
  5396  003670  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5397  003674  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5398  003678  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5399  00367C  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5400  003680  0101               	movlb	1	; () banked
  5401  003682  4B8E               	infsnz	sqrt@exp& (0+255),f,b
  5402  003684  2B8F               	incf	(sqrt@exp+1)& (0+255),f,b
  5403  003686                     l6763:
  5404                           
  5405                           ; BSR set to: 1
  5406  003686  0EFF               	movlw	255
  5407  003688  0101               	movlb	1	; () banked
  5408  00368A  1594               	andwf	sqrt@frac& (0+255),w,b
  5409  00368C  0101               	movlb	1	; () banked
  5410  00368E  6F90               	movwf	sqrt@root& (0+255),b
  5411  003690  0EFF               	movlw	255
  5412  003692  0101               	movlb	1	; () banked
  5413  003694  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5414  003696  0101               	movlb	1	; () banked
  5415  003698  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5416  00369A  0E7F               	movlw	127
  5417  00369C  0101               	movlb	1	; () banked
  5418  00369E  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5419  0036A0  0101               	movlb	1	; () banked
  5420  0036A2  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5421  0036A4  0E00               	movlw	0
  5422  0036A6  0101               	movlb	1	; () banked
  5423  0036A8  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5424  0036AA  0101               	movlb	1	; () banked
  5425  0036AC  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5426                           
  5427                           ; BSR set to: 1
  5428  0036AE  C18E  F189         	movff	sqrt@exp,sqrt@p
  5429                           
  5430                           ; BSR set to: 1
  5431  0036B2  0101               	movlb	1	; () banked
  5432  0036B4  A189               	btfss	sqrt@p& (0+255),0,b
  5433  0036B6  D002               	goto	l6771
  5434                           
  5435                           ; BSR set to: 1
  5436  0036B8  0101               	movlb	1	; () banked
  5437  0036BA  8F92               	bsf	(sqrt@root+2)& (0+255),7,b
  5438  0036BC                     l6771:
  5439                           
  5440                           ; BSR set to: 1
  5441  0036BC  0101               	movlb	1	; () banked
  5442  0036BE  90D8               	bcf	status,0,c
  5443  0036C0  3189               	rrcf	sqrt@p& (0+255),w,b
  5444  0036C2  0101               	movlb	1	; () banked
  5445  0036C4  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5446                           
  5447                           ; BSR set to: 1
  5448  0036C6  0101               	movlb	1	; () banked
  5449  0036C8  9F93               	bcf	(sqrt@root+3)& (0+255),7,b
  5450                           
  5451                           ; BSR set to: 1
  5452  0036CA  C190  F0C1         	movff	sqrt@root,?_sqrt
  5453  0036CE  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5454  0036D2  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5455  0036D6  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5456  0036DA  0012               	return	
  5457  0036DC                     __end_of_sqrt:
  5458                           	opt stack 0
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           postdec1	equ	0xFE5
  5466                           fsr1l	equ	0xFE1
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _atan *****************
  5474 ;; Defined at:
  5475 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  f               4  113[BANK0 ] unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  val             4   13[BANK1 ] unsigned char 
  5480 ;;  val_squared     4    9[BANK1 ] unsigned char 
  5481 ;;  x               4    4[BANK1 ] unsigned char 
  5482 ;;  y               4    0[BANK1 ] unsigned char 
  5483 ;;  recip           1    8[BANK1 ] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  4  113[BANK0 ] unsigned char 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;Total ram usage:       21 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    6
  5500 ;; This function calls:
  5501 ;;		___fladd
  5502 ;;		___fldiv
  5503 ;;		___flge
  5504 ;;		___flmul
  5505 ;;		___flneg
  5506 ;;		_eval_poly
  5507 ;;		_fabs
  5508 ;; This function is called by:
  5509 ;;		_asin
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text15
  5514  00499A                     __ptext15:
  5515                           	opt stack 0
  5516  00499A                     _atan:
  5517                           	opt stack 21
  5518                           
  5519                           ;incstack = 0
  5520  00499A  C0D1  F0AD         	movff	atan@f,fabs@d
  5521  00499E  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  5522  0049A2  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  5523  0049A6  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  5524  0049AA  ECEB  F02D         	call	_fabs	;wreg free
  5525  0049AE  C0AD  F190         	movff	?_fabs,atan@val
  5526  0049B2  C0AE  F191         	movff	?_fabs+1,atan@val+1
  5527  0049B6  C0AF  F192         	movff	?_fabs+2,atan@val+2
  5528  0049BA  C0B0  F193         	movff	?_fabs+3,atan@val+3
  5529  0049BE  0101               	movlb	1	; () banked
  5530  0049C0  5190               	movf	atan@val& (0+255),w,b
  5531  0049C2  0101               	movlb	1	; () banked
  5532  0049C4  1191               	iorwf	(atan@val+1)& (0+255),w,b
  5533  0049C6  0101               	movlb	1	; () banked
  5534  0049C8  1192               	iorwf	(atan@val+2)& (0+255),w,b
  5535  0049CA  0101               	movlb	1	; () banked
  5536  0049CC  1193               	iorwf	(atan@val+3)& (0+255),w,b
  5537  0049CE  A4D8               	btfss	status,2,c
  5538  0049D0  D00A               	goto	l6785
  5539                           
  5540                           ; BSR set to: 1
  5541  0049D2  0E00               	movlw	0
  5542  0049D4  0100               	movlb	0	; () banked
  5543  0049D6  6FD1               	movwf	?_atan& (0+255),b
  5544  0049D8  0E00               	movlw	0
  5545  0049DA  6FD2               	movwf	(?_atan+1)& (0+255),b
  5546  0049DC  0E00               	movlw	0
  5547  0049DE  6FD3               	movwf	(?_atan+2)& (0+255),b
  5548  0049E0  0E00               	movlw	0
  5549  0049E2  6FD4               	movwf	(?_atan+3)& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552  0049E4  0012               	return	
  5553  0049E6                     l6785:
  5554  0049E6  0E00               	movlw	0
  5555  0049E8  0100               	movlb	0	; () banked
  5556  0049EA  6FB1               	movwf	___flge@ff1& (0+255),b
  5557  0049EC  0E00               	movlw	0
  5558  0049EE  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5559  0049F0  0E80               	movlw	128
  5560  0049F2  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5561  0049F4  0E3F               	movlw	63
  5562  0049F6  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5563  0049F8  C190  F0B5         	movff	atan@val,___flge@ff2
  5564  0049FC  C191  F0B6         	movff	atan@val+1,___flge@ff2+1
  5565  004A00  C192  F0B7         	movff	atan@val+2,___flge@ff2+2
  5566  004A04  C193  F0B8         	movff	atan@val+3,___flge@ff2+3
  5567  004A08  EC94  F028         	call	___flge	;wreg free
  5568  004A0C  0100               	movlb	0	; () banked
  5569  004A0E  B0D8               	btfsc	status,0,c
  5570  004A10  D002               	goto	u8550
  5571  004A12  0E01               	movlw	1
  5572  004A14  D001               	goto	u8560
  5573  004A16                     u8550:
  5574  004A16  0E00               	movlw	0
  5575  004A18                     u8560:
  5576  004A18  0101               	movlb	1	; () banked
  5577  004A1A  6F8B               	movwf	atan@recip& (0+255),b
  5578  004A1C  0101               	movlb	1	; () banked
  5579  004A1E  518B               	movf	atan@recip& (0+255),w,b
  5580  004A20  B4D8               	btfsc	status,2,c
  5581  004A22  D01B               	goto	l6789
  5582                           
  5583                           ; BSR set to: 1
  5584  004A24  0E00               	movlw	0
  5585  004A26  0100               	movlb	0	; () banked
  5586  004A28  6F77               	movwf	___fldiv@b& (0+255),b
  5587  004A2A  0E00               	movlw	0
  5588  004A2C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5589  004A2E  0E80               	movlw	128
  5590  004A30  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5591  004A32  0E3F               	movlw	63
  5592  004A34  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5593  004A36  C190  F07B         	movff	atan@val,___fldiv@a
  5594  004A3A  C191  F07C         	movff	atan@val+1,___fldiv@a+1
  5595  004A3E  C192  F07D         	movff	atan@val+2,___fldiv@a+2
  5596  004A42  C193  F07E         	movff	atan@val+3,___fldiv@a+3
  5597  004A46  EC6E  F01B         	call	___fldiv	;wreg free
  5598  004A4A  C077  F190         	movff	?___fldiv,atan@val
  5599  004A4E  C078  F191         	movff	?___fldiv+1,atan@val+1
  5600  004A52  C079  F192         	movff	?___fldiv+2,atan@val+2
  5601  004A56  C07A  F193         	movff	?___fldiv+3,atan@val+3
  5602  004A5A                     l6789:
  5603  004A5A  C190  F090         	movff	atan@val,___flmul@b
  5604  004A5E  C191  F091         	movff	atan@val+1,___flmul@b+1
  5605  004A62  C192  F092         	movff	atan@val+2,___flmul@b+2
  5606  004A66  C193  F093         	movff	atan@val+3,___flmul@b+3
  5607  004A6A  C190  F094         	movff	atan@val,___flmul@a
  5608  004A6E  C191  F095         	movff	atan@val+1,___flmul@a+1
  5609  004A72  C192  F096         	movff	atan@val+2,___flmul@a+2
  5610  004A76  C193  F097         	movff	atan@val+3,___flmul@a+3
  5611  004A7A  EC36  F017         	call	___flmul	;wreg free
  5612  004A7E  C090  F18C         	movff	?___flmul,atan@val_squared
  5613  004A82  C091  F18D         	movff	?___flmul+1,atan@val_squared+1
  5614  004A86  C092  F18E         	movff	?___flmul+2,atan@val_squared+2
  5615  004A8A  C093  F18F         	movff	?___flmul+3,atan@val_squared+3
  5616  004A8E  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5617  004A92  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5618  004A96  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5619  004A9A  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5620  004A9E  0E19               	movlw	low atan@coeff_b
  5621  004AA0  0100               	movlb	0	; () banked
  5622  004AA2  6FC5               	movwf	eval_poly@d& (0+255),b
  5623  004AA4  0E0D               	movlw	high atan@coeff_b
  5624  004AA6  0100               	movlb	0	; () banked
  5625  004AA8  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5626  004AAA  0E00               	movlw	0
  5627  004AAC  0100               	movlb	0	; () banked
  5628  004AAE  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5629  004AB0  0E04               	movlw	4
  5630  004AB2  6FC7               	movwf	eval_poly@n& (0+255),b
  5631  004AB4  EC89  F02A         	call	_eval_poly	;wreg free
  5632  004AB8  C0C1  F183         	movff	?_eval_poly,atan@y
  5633  004ABC  C0C2  F184         	movff	?_eval_poly+1,atan@y+1
  5634  004AC0  C0C3  F185         	movff	?_eval_poly+2,atan@y+2
  5635  004AC4  C0C4  F186         	movff	?_eval_poly+3,atan@y+3
  5636  004AC8  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5637  004ACC  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5638  004AD0  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5639  004AD4  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5640  004AD8  0E01               	movlw	low atan@coeff_a
  5641  004ADA  0100               	movlb	0	; () banked
  5642  004ADC  6FC5               	movwf	eval_poly@d& (0+255),b
  5643  004ADE  0E0D               	movlw	high atan@coeff_a
  5644  004AE0  0100               	movlb	0	; () banked
  5645  004AE2  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5646  004AE4  0E00               	movlw	0
  5647  004AE6  0100               	movlb	0	; () banked
  5648  004AE8  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5649  004AEA  0E05               	movlw	5
  5650  004AEC  6FC7               	movwf	eval_poly@n& (0+255),b
  5651  004AEE  EC89  F02A         	call	_eval_poly	;wreg free
  5652  004AF2  C0C1  F187         	movff	?_eval_poly,atan@x
  5653  004AF6  C0C2  F188         	movff	?_eval_poly+1,atan@x+1
  5654  004AFA  C0C3  F189         	movff	?_eval_poly+2,atan@x+2
  5655  004AFE  C0C4  F18A         	movff	?_eval_poly+3,atan@x+3
  5656  004B02  C190  F090         	movff	atan@val,___flmul@b
  5657  004B06  C191  F091         	movff	atan@val+1,___flmul@b+1
  5658  004B0A  C192  F092         	movff	atan@val+2,___flmul@b+2
  5659  004B0E  C193  F093         	movff	atan@val+3,___flmul@b+3
  5660  004B12  C183  F07B         	movff	atan@y,___fldiv@a
  5661  004B16  C184  F07C         	movff	atan@y+1,___fldiv@a+1
  5662  004B1A  C185  F07D         	movff	atan@y+2,___fldiv@a+2
  5663  004B1E  C186  F07E         	movff	atan@y+3,___fldiv@a+3
  5664  004B22  C187  F077         	movff	atan@x,___fldiv@b
  5665  004B26  C188  F078         	movff	atan@x+1,___fldiv@b+1
  5666  004B2A  C189  F079         	movff	atan@x+2,___fldiv@b+2
  5667  004B2E  C18A  F07A         	movff	atan@x+3,___fldiv@b+3
  5668  004B32  EC6E  F01B         	call	___fldiv	;wreg free
  5669  004B36  C077  F094         	movff	?___fldiv,___flmul@a
  5670  004B3A  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  5671  004B3E  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  5672  004B42  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  5673  004B46  EC36  F017         	call	___flmul	;wreg free
  5674  004B4A  C090  F190         	movff	?___flmul,atan@val
  5675  004B4E  C091  F191         	movff	?___flmul+1,atan@val+1
  5676  004B52  C092  F192         	movff	?___flmul+2,atan@val+2
  5677  004B56  C093  F193         	movff	?___flmul+3,atan@val+3
  5678  004B5A  0101               	movlb	1	; () banked
  5679  004B5C  518B               	movf	atan@recip& (0+255),w,b
  5680  004B5E  0101               	movlb	1	; () banked
  5681  004B60  B4D8               	btfsc	status,2,c
  5682  004B62  D025               	goto	l6801
  5683                           
  5684                           ; BSR set to: 1
  5685  004B64  C190  F0A9         	movff	atan@val,___flneg@f1
  5686  004B68  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5687  004B6C  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5688  004B70  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5689  004B74  EC27  F02E         	call	___flneg	;wreg free
  5690  004B78  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5691  004B7C  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5692  004B80  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5693  004B84  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5694  004B88  0EDB               	movlw	219
  5695  004B8A  0100               	movlb	0	; () banked
  5696  004B8C  6FB1               	movwf	___fladd@a& (0+255),b
  5697  004B8E  0E0F               	movlw	15
  5698  004B90  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5699  004B92  0EC9               	movlw	201
  5700  004B94  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5701  004B96  0E3F               	movlw	63
  5702  004B98  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5703  004B9A  ECE2  F014         	call	___fladd	;wreg free
  5704  004B9E  C0AD  F190         	movff	?___fladd,atan@val
  5705  004BA2  C0AE  F191         	movff	?___fladd+1,atan@val+1
  5706  004BA6  C0AF  F192         	movff	?___fladd+2,atan@val+2
  5707  004BAA  C0B0  F193         	movff	?___fladd+3,atan@val+3
  5708  004BAE                     l6801:
  5709  004BAE  0100               	movlb	0	; () banked
  5710  004BB0  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  5711  004BB2  D009               	goto	l6805
  5712                           
  5713                           ; BSR set to: 0
  5714  004BB4  C190  F0D1         	movff	atan@val,?_atan
  5715  004BB8  C191  F0D2         	movff	atan@val+1,?_atan+1
  5716  004BBC  C192  F0D3         	movff	atan@val+2,?_atan+2
  5717  004BC0  C193  F0D4         	movff	atan@val+3,?_atan+3
  5718  004BC4  0012               	return	
  5719  004BC6                     l6805:
  5720                           
  5721                           ; BSR set to: 0
  5722  004BC6  C190  F0A9         	movff	atan@val,___flneg@f1
  5723  004BCA  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5724  004BCE  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5725  004BD2  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5726  004BD6  EC27  F02E         	call	___flneg	;wreg free
  5727  004BDA  C0A9  F0D1         	movff	?___flneg,?_atan
  5728  004BDE  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  5729  004BE2  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  5730  004BE6  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  5731  004BEA  0012               	return	
  5732  004BEC                     __end_of_atan:
  5733                           	opt stack 0
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           postinc0	equ	0xFEE
  5739                           wreg	equ	0xFE8
  5740                           postdec1	equ	0xFE5
  5741                           fsr1l	equ	0xFE1
  5742                           postinc2	equ	0xFDE
  5743                           postdec2	equ	0xFDD
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8
  5747                           
  5748 ;; *************** function _fabs *****************
  5749 ;; Defined at:
  5750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  d               4   77[BANK0 ] unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  4   77[BANK0 ] unsigned char 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;Total ram usage:        4 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    5
  5771 ;; This function calls:
  5772 ;;		___flneg
  5773 ;; This function is called by:
  5774 ;;		_asin
  5775 ;;		_atan
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text16
  5780  005BD6                     __ptext16:
  5781                           	opt stack 0
  5782  005BD6                     _fabs:
  5783                           	opt stack 22
  5784                           
  5785                           ;incstack = 0
  5786  005BD6  0100               	movlb	0	; () banked
  5787  005BD8  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  5788  005BDA  D013               	goto	l1049
  5789                           
  5790                           ; BSR set to: 0
  5791  005BDC  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  5792  005BE0  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  5793  005BE4  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  5794  005BE8  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  5795  005BEC  EC27  F02E         	call	___flneg	;wreg free
  5796  005BF0  C0A9  F0AD         	movff	?___flneg,?_fabs
  5797  005BF4  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  5798  005BF8  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  5799  005BFC  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  5800  005C00  0012               	return	
  5801  005C02                     l1049:
  5802                           
  5803                           ; BSR set to: 0
  5804  005C02  C0AD  F0AD         	movff	fabs@d,?_fabs
  5805  005C06  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  5806  005C0A  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  5807  005C0E  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  5808  005C12  0012               	return		;funcret
  5809  005C14                     __end_of_fabs:
  5810                           	opt stack 0
  5811                           tblptru	equ	0xFF8
  5812                           tblptrh	equ	0xFF7
  5813                           tblptrl	equ	0xFF6
  5814                           tablat	equ	0xFF5
  5815                           postinc0	equ	0xFEE
  5816                           wreg	equ	0xFE8
  5817                           postdec1	equ	0xFE5
  5818                           fsr1l	equ	0xFE1
  5819                           postinc2	equ	0xFDE
  5820                           postdec2	equ	0xFDD
  5821                           fsr2h	equ	0xFDA
  5822                           fsr2l	equ	0xFD9
  5823                           status	equ	0xFD8
  5824                           
  5825 ;; *************** function ___flneg *****************
  5826 ;; Defined at:
  5827 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  f1              4   73[BANK0 ] unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  4   73[BANK0 ] unsigned char 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;Total ram usage:        4 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    4
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_matematica
  5852 ;;		_asin
  5853 ;;		_atan
  5854 ;;		_fabs
  5855 ;;		_sin
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text17
  5860  005C4E                     __ptext17:
  5861                           	opt stack 0
  5862  005C4E                     ___flneg:
  5863                           	opt stack 22
  5864                           
  5865                           ;incstack = 0
  5866  005C4E  0100               	movlb	0	; () banked
  5867  005C50  51A9               	movf	___flneg@f1& (0+255),w,b
  5868  005C52  0100               	movlb	0	; () banked
  5869  005C54  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5870  005C56  0100               	movlb	0	; () banked
  5871  005C58  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5872  005C5A  0100               	movlb	0	; () banked
  5873  005C5C  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5874  005C5E  B4D8               	btfsc	status,2,c
  5875  005C60  D009               	goto	l6397
  5876                           
  5877                           ; BSR set to: 0
  5878  005C62  0E00               	movlw	0
  5879  005C64  0100               	movlb	0	; () banked
  5880  005C66  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  5881  005C68  0E00               	movlw	0
  5882  005C6A  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5883  005C6C  0E00               	movlw	0
  5884  005C6E  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5885  005C70  0E80               	movlw	128
  5886  005C72  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5887  005C74                     l6397:
  5888                           
  5889                           ; BSR set to: 0
  5890  005C74  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  5891  005C78  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  5892  005C7C  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  5893  005C80  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  5894  005C84  0012               	return	
  5895  005C86                     __end_of___flneg:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           postinc0	equ	0xFEE
  5902                           wreg	equ	0xFE8
  5903                           postdec1	equ	0xFE5
  5904                           fsr1l	equ	0xFE1
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _eval_poly *****************
  5912 ;; Defined at:
  5913 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  x               4   97[BANK0 ] unsigned char 
  5916 ;;  d               2  101[BANK0 ] PTR const 
  5917 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  5918 ;;  n               2  103[BANK0 ] int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  res             4  109[BANK0 ] int 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  4   97[BANK0 ] int 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;Total ram usage:       16 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    5
  5937 ;; This function calls:
  5938 ;;		___fladd
  5939 ;;		___flmul
  5940 ;; This function is called by:
  5941 ;;		_atan
  5942 ;;		_sin
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text18
  5947  005512                     __ptext18:
  5948                           	opt stack 0
  5949  005512                     _eval_poly:
  5950                           	opt stack 21
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;incstack = 0
  5954  005512  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5955  005516  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5956  00551A  0100               	movlb	0	; () banked
  5957  00551C  90D8               	bcf	status,0,c
  5958  00551E  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5959  005520  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5960  005522  0100               	movlb	0	; () banked
  5961  005524  90D8               	bcf	status,0,c
  5962  005526  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5963  005528  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5964  00552A  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5965  00552E  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5966  005532  0100               	movlb	0	; () banked
  5967  005534  51C9               	movf	??_eval_poly& (0+255),w,b
  5968  005536  0100               	movlb	0	; () banked
  5969  005538  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5970  00553A  0100               	movlb	0	; () banked
  5971  00553C  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  5972  00553E  0100               	movlb	0	; () banked
  5973  005540  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5974  005542  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  5975  005546  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  5976  00554A                     	if	0	;tblptru may be non-zero
  5977  00554A                     	endif
  5978  00554A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5979  00554A  0E00               	movlw	low (__mediumconst shr (0+16))
  5980  00554C  6EF8               	movwf	tblptru,c
  5981  00554E                     	endif
  5982  00554E  0009               	tblrd		*+
  5983  005550  CFF5 F0CD          	movff	tablat,eval_poly@res
  5984  005554  0009               	tblrd		*+
  5985  005556  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  5986  00555A  0009               	tblrd		*+
  5987  00555C  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  5988  005560  000A               	tblrd		*-
  5989  005562  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  5990  005566  D052               	goto	l6655
  5991  005568                     l6653:
  5992                           
  5993                           ; BSR set to: 0
  5994  005568  C0CD  F094         	movff	eval_poly@res,___flmul@a
  5995  00556C  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  5996  005570  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  5997  005574  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  5998  005578  C0C1  F090         	movff	eval_poly@x,___flmul@b
  5999  00557C  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  6000  005580  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  6001  005584  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  6002  005588  EC36  F017         	call	___flmul	;wreg free
  6003  00558C  C090  F0AD         	movff	?___flmul,___fladd@b
  6004  005590  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  6005  005594  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  6006  005598  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  6007  00559C  0100               	movlb	0	; () banked
  6008  00559E  07C7               	decf	eval_poly@n& (0+255),f,b
  6009  0055A0  A0D8               	btfss	status,0,c
  6010  0055A2  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  6011  0055A4  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  6012  0055A8  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  6013  0055AC  0100               	movlb	0	; () banked
  6014  0055AE  90D8               	bcf	status,0,c
  6015  0055B0  37C9               	rlcf	??_eval_poly& (0+255),f,b
  6016  0055B2  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  6017  0055B4  0100               	movlb	0	; () banked
  6018  0055B6  90D8               	bcf	status,0,c
  6019  0055B8  37C9               	rlcf	??_eval_poly& (0+255),f,b
  6020  0055BA  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  6021  0055BC  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  6022  0055C0  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  6023  0055C4  0100               	movlb	0	; () banked
  6024  0055C6  51C9               	movf	??_eval_poly& (0+255),w,b
  6025  0055C8  0100               	movlb	0	; () banked
  6026  0055CA  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  6027  0055CC  0100               	movlb	0	; () banked
  6028  0055CE  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  6029  0055D0  0100               	movlb	0	; () banked
  6030  0055D2  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  6031  0055D4  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  6032  0055D8  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  6033  0055DC                     	if	0	;tblptru may be non-zero
  6034  0055DC                     	endif
  6035  0055DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6036  0055DC  0E00               	movlw	low (__mediumconst shr (0+16))
  6037  0055DE  6EF8               	movwf	tblptru,c
  6038  0055E0                     	endif
  6039  0055E0  0009               	tblrd		*+
  6040  0055E2  CFF5 F0B1          	movff	tablat,___fladd@a
  6041  0055E6  0009               	tblrd		*+
  6042  0055E8  CFF5 F0B2          	movff	tablat,___fladd@a+1
  6043  0055EC  0009               	tblrd		*+
  6044  0055EE  CFF5 F0B3          	movff	tablat,___fladd@a+2
  6045  0055F2  000A               	tblrd		*-
  6046  0055F4  CFF5 F0B4          	movff	tablat,___fladd@a+3
  6047  0055F8  ECE2  F014         	call	___fladd	;wreg free
  6048  0055FC  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  6049  005600  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  6050  005604  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  6051  005608  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  6052  00560C                     l6655:
  6053  00560C  0100               	movlb	0	; () banked
  6054  00560E  51C7               	movf	eval_poly@n& (0+255),w,b
  6055  005610  0100               	movlb	0	; () banked
  6056  005612  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  6057  005614  A4D8               	btfss	status,2,c
  6058  005616  D7A8               	goto	l6653
  6059                           
  6060                           ; BSR set to: 0
  6061  005618  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  6062  00561C  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  6063  005620  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  6064  005624  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  6065                           
  6066                           ; BSR set to: 0
  6067  005628  0012               	return		;funcret
  6068  00562A                     __end_of_eval_poly:
  6069                           	opt stack 0
  6070                           tblptru	equ	0xFF8
  6071                           tblptrh	equ	0xFF7
  6072                           tblptrl	equ	0xFF6
  6073                           tablat	equ	0xFF5
  6074                           postinc0	equ	0xFEE
  6075                           wreg	equ	0xFE8
  6076                           postdec1	equ	0xFE5
  6077                           fsr1l	equ	0xFE1
  6078                           postinc2	equ	0xFDE
  6079                           postdec2	equ	0xFDD
  6080                           fsr2h	equ	0xFDA
  6081                           fsr2l	equ	0xFD9
  6082                           status	equ	0xFD8
  6083                           
  6084 ;; *************** function ___flmul *****************
  6085 ;; Defined at:
  6086 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  b               4   48[BANK0 ] int 
  6089 ;;  a               4   52[BANK0 ] int 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  prod            4   67[BANK0 ] struct .
  6092 ;;  grs             4   62[BANK0 ] unsigned long 
  6093 ;;  temp            2   71[BANK0 ] struct .
  6094 ;;  bexp            1   66[BANK0 ] unsigned char 
  6095 ;;  aexp            1   61[BANK0 ] unsigned char 
  6096 ;;  sign            1   60[BANK0 ] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  4   48[BANK0 ] unsigned char 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0, prodl, prodh
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6106 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;Total ram usage:       25 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    4
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_parallelo
  6117 ;;		_matematica
  6118 ;;		_asin
  6119 ;;		_atan
  6120 ;;		_eval_poly
  6121 ;;		_sin
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text19
  6126  002E6C                     __ptext19:
  6127                           	opt stack 0
  6128  002E6C                     ___flmul:
  6129                           	opt stack 21
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;incstack = 0
  6133  002E6C  0100               	movlb	0	; () banked
  6134  002E6E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6135  002E70  0B80               	andlw	128
  6136  002E72  0100               	movlb	0	; () banked
  6137  002E74  6F9C               	movwf	___flmul@sign& (0+255),b
  6138  002E76  0100               	movlb	0	; () banked
  6139  002E78  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6140  002E7A  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  6141  002E7C  0100               	movlb	0	; () banked
  6142  002E7E  6FA2               	movwf	___flmul@bexp& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145  002E80  0100               	movlb	0	; () banked
  6146  002E82  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  6147  002E84  D002               	goto	l6247
  6148                           
  6149                           ; BSR set to: 0
  6150  002E86  0100               	movlb	0	; () banked
  6151  002E88  81A2               	bsf	___flmul@bexp& (0+255),0,b
  6152  002E8A                     l6247:
  6153                           
  6154                           ; BSR set to: 0
  6155  002E8A  0100               	movlb	0	; () banked
  6156  002E8C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6157  002E8E  0100               	movlb	0	; () banked
  6158  002E90  B4D8               	btfsc	status,2,c
  6159  002E92  D010               	goto	l6255
  6160                           
  6161                           ; BSR set to: 0
  6162  002E94  0100               	movlb	0	; () banked
  6163  002E96  29A2               	incf	___flmul@bexp& (0+255),w,b
  6164  002E98  A4D8               	btfss	status,2,c
  6165  002E9A  D009               	goto	l6253
  6166                           
  6167                           ; BSR set to: 0
  6168  002E9C  0E00               	movlw	0
  6169  002E9E  0100               	movlb	0	; () banked
  6170  002EA0  6F90               	movwf	___flmul@b& (0+255),b
  6171  002EA2  0E00               	movlw	0
  6172  002EA4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6173  002EA6  0E00               	movlw	0
  6174  002EA8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6175  002EAA  0E00               	movlw	0
  6176  002EAC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6177  002EAE                     l6253:
  6178                           
  6179                           ; BSR set to: 0
  6180  002EAE  0100               	movlb	0	; () banked
  6181  002EB0  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  6182  002EB2  D009               	goto	l6257
  6183  002EB4                     l6255:
  6184                           
  6185                           ; BSR set to: 0
  6186  002EB4  0E00               	movlw	0
  6187  002EB6  0100               	movlb	0	; () banked
  6188  002EB8  6F90               	movwf	___flmul@b& (0+255),b
  6189  002EBA  0E00               	movlw	0
  6190  002EBC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6191  002EBE  0E00               	movlw	0
  6192  002EC0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6193  002EC2  0E00               	movlw	0
  6194  002EC4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6195  002EC6                     l6257:
  6196                           
  6197                           ; BSR set to: 0
  6198  002EC6  0100               	movlb	0	; () banked
  6199  002EC8  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6200  002ECA  0B80               	andlw	128
  6201  002ECC  0100               	movlb	0	; () banked
  6202  002ECE  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  002ED0  0100               	movlb	0	; () banked
  6206  002ED2  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6207  002ED4  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  6208  002ED6  0100               	movlb	0	; () banked
  6209  002ED8  6F9D               	movwf	___flmul@aexp& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212  002EDA  0100               	movlb	0	; () banked
  6213  002EDC  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  6214  002EDE  D002               	goto	l6265
  6215                           
  6216                           ; BSR set to: 0
  6217  002EE0  0100               	movlb	0	; () banked
  6218  002EE2  819D               	bsf	___flmul@aexp& (0+255),0,b
  6219  002EE4                     l6265:
  6220                           
  6221                           ; BSR set to: 0
  6222  002EE4  0100               	movlb	0	; () banked
  6223  002EE6  519D               	movf	___flmul@aexp& (0+255),w,b
  6224  002EE8  0100               	movlb	0	; () banked
  6225  002EEA  B4D8               	btfsc	status,2,c
  6226  002EEC  D010               	goto	l6273
  6227                           
  6228                           ; BSR set to: 0
  6229  002EEE  0100               	movlb	0	; () banked
  6230  002EF0  299D               	incf	___flmul@aexp& (0+255),w,b
  6231  002EF2  A4D8               	btfss	status,2,c
  6232  002EF4  D009               	goto	l6271
  6233                           
  6234                           ; BSR set to: 0
  6235  002EF6  0E00               	movlw	0
  6236  002EF8  0100               	movlb	0	; () banked
  6237  002EFA  6F94               	movwf	___flmul@a& (0+255),b
  6238  002EFC  0E00               	movlw	0
  6239  002EFE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6240  002F00  0E00               	movlw	0
  6241  002F02  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6242  002F04  0E00               	movlw	0
  6243  002F06  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6244  002F08                     l6271:
  6245                           
  6246                           ; BSR set to: 0
  6247  002F08  0100               	movlb	0	; () banked
  6248  002F0A  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  6249  002F0C  D009               	goto	l1394
  6250  002F0E                     l6273:
  6251                           
  6252                           ; BSR set to: 0
  6253  002F0E  0E00               	movlw	0
  6254  002F10  0100               	movlb	0	; () banked
  6255  002F12  6F94               	movwf	___flmul@a& (0+255),b
  6256  002F14  0E00               	movlw	0
  6257  002F16  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6258  002F18  0E00               	movlw	0
  6259  002F1A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6260  002F1C  0E00               	movlw	0
  6261  002F1E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6262  002F20                     l1394:
  6263                           
  6264                           ; BSR set to: 0
  6265  002F20  0100               	movlb	0	; () banked
  6266  002F22  519D               	movf	___flmul@aexp& (0+255),w,b
  6267  002F24  0100               	movlb	0	; () banked
  6268  002F26  B4D8               	btfsc	status,2,c
  6269  002F28  D005               	goto	l6277
  6270                           
  6271                           ; BSR set to: 0
  6272  002F2A  0100               	movlb	0	; () banked
  6273  002F2C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6274  002F2E  0100               	movlb	0	; () banked
  6275  002F30  A4D8               	btfss	status,2,c
  6276  002F32  D00A               	goto	l6281
  6277  002F34                     l6277:
  6278                           
  6279                           ; BSR set to: 0
  6280  002F34  0E00               	movlw	0
  6281  002F36  0100               	movlb	0	; () banked
  6282  002F38  6F90               	movwf	?___flmul& (0+255),b
  6283  002F3A  0E00               	movlw	0
  6284  002F3C  6F91               	movwf	(?___flmul+1)& (0+255),b
  6285  002F3E  0E00               	movlw	0
  6286  002F40  6F92               	movwf	(?___flmul+2)& (0+255),b
  6287  002F42  0E00               	movlw	0
  6288  002F44  6F93               	movwf	(?___flmul+3)& (0+255),b
  6289                           
  6290                           ; BSR set to: 0
  6291  002F46  0012               	return	
  6292  002F48                     l6281:
  6293                           
  6294                           ; BSR set to: 0
  6295  002F48  0100               	movlb	0	; () banked
  6296  002F4A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6297  002F4C  0100               	movlb	0	; () banked
  6298  002F4E  0390               	mulwf	___flmul@b& (0+255),b
  6299  002F50  CFF3 F0A7          	movff	prodl,___flmul@temp
  6300  002F54  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6301                           
  6302                           ; BSR set to: 0
  6303  002F58  0100               	movlb	0	; () banked
  6304  002F5A  51A7               	movf	___flmul@temp& (0+255),w,b
  6305  002F5C  0100               	movlb	0	; () banked
  6306  002F5E  6F9E               	movwf	___flmul@grs& (0+255),b
  6307  002F60  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  6308  002F62  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  6309  002F64  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  6310                           
  6311                           ; BSR set to: 0
  6312  002F66  0100               	movlb	0	; () banked
  6313  002F68  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6314  002F6A  0100               	movlb	0	; () banked
  6315  002F6C  6FA3               	movwf	___flmul@prod& (0+255),b
  6316  002F6E  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  6317  002F70  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  6318  002F72  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  6319  002F74  0100               	movlb	0	; () banked
  6320  002F76  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6321  002F78  0100               	movlb	0	; () banked
  6322  002F7A  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6323  002F7C  CFF3 F0A7          	movff	prodl,___flmul@temp
  6324  002F80  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6325                           
  6326                           ; BSR set to: 0
  6327  002F84  0100               	movlb	0	; () banked
  6328  002F86  51A7               	movf	___flmul@temp& (0+255),w,b
  6329  002F88  0100               	movlb	0	; () banked
  6330  002F8A  279E               	addwf	___flmul@grs& (0+255),f,b
  6331  002F8C  0E00               	movlw	0
  6332  002F8E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6333  002F90  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6334  002F92  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6335                           
  6336                           ; BSR set to: 0
  6337  002F94  0100               	movlb	0	; () banked
  6338  002F96  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6339  002F98  0100               	movlb	0	; () banked
  6340  002F9A  27A3               	addwf	___flmul@prod& (0+255),f,b
  6341  002F9C  0E00               	movlw	0
  6342  002F9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6343  002FA0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6344  002FA2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6345  002FA4  0100               	movlb	0	; () banked
  6346  002FA6  5194               	movf	___flmul@a& (0+255),w,b
  6347  002FA8  0100               	movlb	0	; () banked
  6348  002FAA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6349  002FAC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6350  002FB0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6351                           
  6352                           ; BSR set to: 0
  6353  002FB4  0100               	movlb	0	; () banked
  6354  002FB6  51A7               	movf	___flmul@temp& (0+255),w,b
  6355  002FB8  0100               	movlb	0	; () banked
  6356  002FBA  279E               	addwf	___flmul@grs& (0+255),f,b
  6357  002FBC  0E00               	movlw	0
  6358  002FBE  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6359  002FC0  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6360  002FC2  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6361                           
  6362                           ; BSR set to: 0
  6363  002FC4  0100               	movlb	0	; () banked
  6364  002FC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6365  002FC8  0100               	movlb	0	; () banked
  6366  002FCA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6367  002FCC  0E00               	movlw	0
  6368  002FCE  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6369  002FD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6370  002FD2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6371                           
  6372                           ; BSR set to: 0
  6373  002FD4  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6374  002FD8  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6375  002FDC  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6376  002FE0  0100               	movlb	0	; () banked
  6377  002FE2  6B9E               	clrf	___flmul@grs& (0+255),b
  6378                           
  6379                           ; BSR set to: 0
  6380  002FE4  0100               	movlb	0	; () banked
  6381  002FE6  5194               	movf	___flmul@a& (0+255),w,b
  6382  002FE8  0100               	movlb	0	; () banked
  6383  002FEA  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6384  002FEC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6385  002FF0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6386                           
  6387                           ; BSR set to: 0
  6388  002FF4  0100               	movlb	0	; () banked
  6389  002FF6  51A7               	movf	___flmul@temp& (0+255),w,b
  6390  002FF8  0100               	movlb	0	; () banked
  6391  002FFA  279E               	addwf	___flmul@grs& (0+255),f,b
  6392  002FFC  0100               	movlb	0	; () banked
  6393  002FFE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6394  003000  0100               	movlb	0	; () banked
  6395  003002  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6396  003004  0E00               	movlw	0
  6397  003006  0100               	movlb	0	; () banked
  6398  003008  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6399  00300A  0E00               	movlw	0
  6400  00300C  0100               	movlb	0	; () banked
  6401  00300E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6402                           
  6403                           ; BSR set to: 0
  6404  003010  0100               	movlb	0	; () banked
  6405  003012  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6406  003014  0100               	movlb	0	; () banked
  6407  003016  0390               	mulwf	___flmul@b& (0+255),b
  6408  003018  CFF3 F0A7          	movff	prodl,___flmul@temp
  6409  00301C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6410                           
  6411                           ; BSR set to: 0
  6412  003020  0100               	movlb	0	; () banked
  6413  003022  51A7               	movf	___flmul@temp& (0+255),w,b
  6414  003024  0100               	movlb	0	; () banked
  6415  003026  279E               	addwf	___flmul@grs& (0+255),f,b
  6416  003028  0100               	movlb	0	; () banked
  6417  00302A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6418  00302C  0100               	movlb	0	; () banked
  6419  00302E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6420  003030  0E00               	movlw	0
  6421  003032  0100               	movlb	0	; () banked
  6422  003034  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6423  003036  0E00               	movlw	0
  6424  003038  0100               	movlb	0	; () banked
  6425  00303A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6426                           
  6427                           ; BSR set to: 0
  6428  00303C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6429  003040  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6430  003044  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6431  003048  0100               	movlb	0	; () banked
  6432  00304A  6B9E               	clrf	___flmul@grs& (0+255),b
  6433  00304C  0100               	movlb	0	; () banked
  6434  00304E  5194               	movf	___flmul@a& (0+255),w,b
  6435  003050  0100               	movlb	0	; () banked
  6436  003052  0390               	mulwf	___flmul@b& (0+255),b
  6437  003054  CFF3 F0A7          	movff	prodl,___flmul@temp
  6438  003058  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6439                           
  6440                           ; BSR set to: 0
  6441  00305C  0100               	movlb	0	; () banked
  6442  00305E  51A7               	movf	___flmul@temp& (0+255),w,b
  6443  003060  0100               	movlb	0	; () banked
  6444  003062  279E               	addwf	___flmul@grs& (0+255),f,b
  6445  003064  0100               	movlb	0	; () banked
  6446  003066  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6447  003068  0100               	movlb	0	; () banked
  6448  00306A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6449  00306C  0E00               	movlw	0
  6450  00306E  0100               	movlb	0	; () banked
  6451  003070  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6452  003072  0E00               	movlw	0
  6453  003074  0100               	movlb	0	; () banked
  6454  003076  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6455                           
  6456                           ; BSR set to: 0
  6457  003078  0100               	movlb	0	; () banked
  6458  00307A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6459  00307C  0100               	movlb	0	; () banked
  6460  00307E  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6461  003080  CFF3 F0A7          	movff	prodl,___flmul@temp
  6462  003084  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6463  003088  0100               	movlb	0	; () banked
  6464  00308A  51A7               	movf	___flmul@temp& (0+255),w,b
  6465  00308C  0100               	movlb	0	; () banked
  6466  00308E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6467  003090  0100               	movlb	0	; () banked
  6468  003092  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6469  003094  0100               	movlb	0	; () banked
  6470  003096  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6471  003098  0E00               	movlw	0
  6472  00309A  0100               	movlb	0	; () banked
  6473  00309C  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6474  00309E  0E00               	movlw	0
  6475  0030A0  0100               	movlb	0	; () banked
  6476  0030A2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6477                           
  6478                           ; BSR set to: 0
  6479  0030A4  0100               	movlb	0	; () banked
  6480  0030A6  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6481  0030A8  0100               	movlb	0	; () banked
  6482  0030AA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6483  0030AC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6484  0030B0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6485                           
  6486                           ; BSR set to: 0
  6487  0030B4  0100               	movlb	0	; () banked
  6488  0030B6  51A7               	movf	___flmul@temp& (0+255),w,b
  6489  0030B8  0100               	movlb	0	; () banked
  6490  0030BA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6491  0030BC  0100               	movlb	0	; () banked
  6492  0030BE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6493  0030C0  0100               	movlb	0	; () banked
  6494  0030C2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6495  0030C4  0E00               	movlw	0
  6496  0030C6  0100               	movlb	0	; () banked
  6497  0030C8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6498  0030CA  0E00               	movlw	0
  6499  0030CC  0100               	movlb	0	; () banked
  6500  0030CE  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6501  0030D0  0100               	movlb	0	; () banked
  6502  0030D2  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6503  0030D4  0100               	movlb	0	; () banked
  6504  0030D6  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6505  0030D8  CFF3 F0A7          	movff	prodl,___flmul@temp
  6506  0030DC  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6507                           
  6508                           ; BSR set to: 0
  6509  0030E0  0100               	movlb	0	; () banked
  6510  0030E2  51A7               	movf	___flmul@temp& (0+255),w,b
  6511  0030E4  0100               	movlb	0	; () banked
  6512  0030E6  6F98               	movwf	??___flmul& (0+255),b
  6513  0030E8  0100               	movlb	0	; () banked
  6514  0030EA  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6515  0030EC  0100               	movlb	0	; () banked
  6516  0030EE  6F99               	movwf	(??___flmul+1)& (0+255),b
  6517  0030F0  0100               	movlb	0	; () banked
  6518  0030F2  6B9A               	clrf	(??___flmul+2)& (0+255),b
  6519  0030F4  0100               	movlb	0	; () banked
  6520  0030F6  6B9B               	clrf	(??___flmul+3)& (0+255),b
  6521  0030F8  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  6522  0030FC  C099  F09A         	movff	??___flmul+1,??___flmul+2
  6523  003100  C098  F099         	movff	??___flmul,??___flmul+1
  6524  003104  0100               	movlb	0	; () banked
  6525  003106  6B98               	clrf	??___flmul& (0+255),b
  6526  003108  0100               	movlb	0	; () banked
  6527  00310A  5198               	movf	??___flmul& (0+255),w,b
  6528  00310C  0100               	movlb	0	; () banked
  6529  00310E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6530  003110  0100               	movlb	0	; () banked
  6531  003112  5199               	movf	(??___flmul+1)& (0+255),w,b
  6532  003114  0100               	movlb	0	; () banked
  6533  003116  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6534  003118  0100               	movlb	0	; () banked
  6535  00311A  519A               	movf	(??___flmul+2)& (0+255),w,b
  6536  00311C  0100               	movlb	0	; () banked
  6537  00311E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6538  003120  0100               	movlb	0	; () banked
  6539  003122  519B               	movf	(??___flmul+3)& (0+255),w,b
  6540  003124  0100               	movlb	0	; () banked
  6541  003126  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6542                           
  6543                           ; BSR set to: 0
  6544  003128  C09E  F098         	movff	___flmul@grs,??___flmul
  6545  00312C  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  6546  003130  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  6547  003134  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  6548  003138  0E19               	movlw	25
  6549  00313A  D006               	goto	u7780
  6550  00313C                     u7785:
  6551  00313C  0100               	movlb	0	; () banked
  6552  00313E  90D8               	bcf	status,0,c
  6553  003140  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6554  003142  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6555  003144  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6556  003146  3398               	rrcf	??___flmul& (0+255),f,b
  6557  003148                     u7780:
  6558  003148  2EE8               	decfsz	wreg,f,c
  6559  00314A  D7F8               	goto	u7785
  6560  00314C  0100               	movlb	0	; () banked
  6561  00314E  5198               	movf	??___flmul& (0+255),w,b
  6562  003150  0100               	movlb	0	; () banked
  6563  003152  27A3               	addwf	___flmul@prod& (0+255),f,b
  6564  003154  0100               	movlb	0	; () banked
  6565  003156  5199               	movf	(??___flmul+1)& (0+255),w,b
  6566  003158  0100               	movlb	0	; () banked
  6567  00315A  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6568  00315C  0100               	movlb	0	; () banked
  6569  00315E  519A               	movf	(??___flmul+2)& (0+255),w,b
  6570  003160  0100               	movlb	0	; () banked
  6571  003162  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6572  003164  0100               	movlb	0	; () banked
  6573  003166  519B               	movf	(??___flmul+3)& (0+255),w,b
  6574  003168  0100               	movlb	0	; () banked
  6575  00316A  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6576                           
  6577                           ; BSR set to: 0
  6578  00316C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6579  003170  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6580  003174  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6581  003178  0100               	movlb	0	; () banked
  6582  00317A  6B9E               	clrf	___flmul@grs& (0+255),b
  6583                           
  6584                           ; BSR set to: 0
  6585  00317C  0100               	movlb	0	; () banked
  6586  00317E  519D               	movf	___flmul@aexp& (0+255),w,b
  6587  003180  C0A2  F098         	movff	___flmul@bexp,??___flmul
  6588  003184  0100               	movlb	0	; () banked
  6589  003186  6B99               	clrf	(??___flmul+1)& (0+255),b
  6590  003188  0100               	movlb	0	; () banked
  6591  00318A  2798               	addwf	??___flmul& (0+255),f,b
  6592  00318C  0E00               	movlw	0
  6593  00318E  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  6594  003190  0E82               	movlw	130
  6595  003192  0100               	movlb	0	; () banked
  6596  003194  2598               	addwf	??___flmul& (0+255),w,b
  6597  003196  0100               	movlb	0	; () banked
  6598  003198  6FA7               	movwf	___flmul@temp& (0+255),b
  6599  00319A  0EFF               	movlw	255
  6600  00319C  0100               	movlb	0	; () banked
  6601  00319E  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  6602  0031A0  0100               	movlb	0	; () banked
  6603  0031A2  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  6604  0031A4  D015               	goto	l6329
  6605  0031A6                     l6323:
  6606                           
  6607                           ; BSR set to: 0
  6608  0031A6  0100               	movlb	0	; () banked
  6609  0031A8  90D8               	bcf	status,0,c
  6610  0031AA  37A3               	rlcf	___flmul@prod& (0+255),f,b
  6611  0031AC  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6612  0031AE  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6613  0031B0  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6614                           
  6615                           ; BSR set to: 0
  6616  0031B2  0100               	movlb	0	; () banked
  6617  0031B4  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6618  0031B6  D002               	goto	l1401
  6619                           
  6620                           ; BSR set to: 0
  6621  0031B8  0100               	movlb	0	; () banked
  6622  0031BA  81A3               	bsf	___flmul@prod& (0+255),0,b
  6623  0031BC                     l1401:
  6624                           
  6625                           ; BSR set to: 0
  6626  0031BC  0100               	movlb	0	; () banked
  6627  0031BE  90D8               	bcf	status,0,c
  6628  0031C0  379E               	rlcf	___flmul@grs& (0+255),f,b
  6629  0031C2  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6630  0031C4  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6631  0031C6  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6632  0031C8  0100               	movlb	0	; () banked
  6633  0031CA  07A7               	decf	___flmul@temp& (0+255),f,b
  6634  0031CC  A0D8               	btfss	status,0,c
  6635  0031CE  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  6636  0031D0                     l6329:
  6637                           
  6638                           ; BSR set to: 0
  6639  0031D0  0100               	movlb	0	; () banked
  6640  0031D2  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  6641  0031D4  D7E8               	goto	l6323
  6642                           
  6643                           ; BSR set to: 0
  6644                           
  6645                           ; BSR set to: 0
  6646  0031D6  0E00               	movlw	0
  6647  0031D8  0100               	movlb	0	; () banked
  6648  0031DA  6F9D               	movwf	___flmul@aexp& (0+255),b
  6649                           
  6650                           ; BSR set to: 0
  6651  0031DC  0100               	movlb	0	; () banked
  6652  0031DE  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6653  0031E0  D024               	goto	l1403
  6654                           
  6655                           ; BSR set to: 0
  6656  0031E2  0EFF               	movlw	255
  6657  0031E4  0100               	movlb	0	; () banked
  6658  0031E6  159E               	andwf	___flmul@grs& (0+255),w,b
  6659  0031E8  0100               	movlb	0	; () banked
  6660  0031EA  6F98               	movwf	??___flmul& (0+255),b
  6661  0031EC  0EFF               	movlw	255
  6662  0031EE  0100               	movlb	0	; () banked
  6663  0031F0  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6664  0031F2  0100               	movlb	0	; () banked
  6665  0031F4  6F99               	movwf	(??___flmul+1)& (0+255),b
  6666  0031F6  0EFF               	movlw	255
  6667  0031F8  0100               	movlb	0	; () banked
  6668  0031FA  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  6669  0031FC  0100               	movlb	0	; () banked
  6670  0031FE  6F9A               	movwf	(??___flmul+2)& (0+255),b
  6671  003200  0E7F               	movlw	127
  6672  003202  0100               	movlb	0	; () banked
  6673  003204  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  6674  003206  0100               	movlb	0	; () banked
  6675  003208  6F9B               	movwf	(??___flmul+3)& (0+255),b
  6676  00320A  0100               	movlb	0	; () banked
  6677  00320C  5198               	movf	??___flmul& (0+255),w,b
  6678  00320E  0100               	movlb	0	; () banked
  6679  003210  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  6680  003212  0100               	movlb	0	; () banked
  6681  003214  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  6682  003216  0100               	movlb	0	; () banked
  6683  003218  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  6684  00321A  A4D8               	btfss	status,2,c
  6685  00321C  D003               	goto	l6339
  6686                           
  6687                           ; BSR set to: 0
  6688                           
  6689                           ; BSR set to: 0
  6690  00321E  0100               	movlb	0	; () banked
  6691  003220  A1A3               	btfss	___flmul@prod& (0+255),0,b
  6692  003222  D003               	goto	l1403
  6693  003224                     l6339:
  6694                           
  6695                           ; BSR set to: 0
  6696  003224  0E01               	movlw	1
  6697  003226  0100               	movlb	0	; () banked
  6698  003228  6F9D               	movwf	___flmul@aexp& (0+255),b
  6699  00322A                     l1403:
  6700                           
  6701                           ; BSR set to: 0
  6702  00322A  0100               	movlb	0	; () banked
  6703  00322C  519D               	movf	___flmul@aexp& (0+255),w,b
  6704  00322E  0100               	movlb	0	; () banked
  6705  003230  B4D8               	btfsc	status,2,c
  6706  003232  D023               	goto	l6349
  6707                           
  6708                           ; BSR set to: 0
  6709  003234  0E01               	movlw	1
  6710  003236  0100               	movlb	0	; () banked
  6711  003238  27A3               	addwf	___flmul@prod& (0+255),f,b
  6712  00323A  0E00               	movlw	0
  6713  00323C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6714  00323E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6715  003240  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6716                           
  6717                           ; BSR set to: 0
  6718  003242  0100               	movlb	0	; () banked
  6719  003244  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  6720  003246  D019               	goto	l6349
  6721                           
  6722                           ; BSR set to: 0
  6723  003248  C0A3  F098         	movff	___flmul@prod,??___flmul
  6724  00324C  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  6725  003250  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  6726  003254  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  6727  003258  0100               	movlb	0	; () banked
  6728  00325A  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  6729  00325C  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6730  00325E  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6731  003260  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6732  003262  3398               	rrcf	??___flmul& (0+255),f,b
  6733  003264  C098  F0A3         	movff	??___flmul,___flmul@prod
  6734  003268  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  6735  00326C  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  6736  003270  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  6737                           
  6738                           ; BSR set to: 0
  6739  003274  0100               	movlb	0	; () banked
  6740  003276  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  6741  003278  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  6742  00327A                     l6349:
  6743                           
  6744                           ; BSR set to: 0
  6745  00327A  0100               	movlb	0	; () banked
  6746  00327C  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6747  00327E  D010               	goto	l6353
  6748  003280  0100               	movlb	0	; () banked
  6749  003282  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6750  003284  E104               	bnz	u7860
  6751  003286  0100               	movlb	0	; () banked
  6752  003288  29A7               	incf	___flmul@temp& (0+255),w,b
  6753  00328A  A0D8               	btfss	status,0,c
  6754  00328C  D009               	goto	l6353
  6755  00328E                     u7860:
  6756                           
  6757                           ; BSR set to: 0
  6758  00328E  0E00               	movlw	0
  6759  003290  0100               	movlb	0	; () banked
  6760  003292  6FA3               	movwf	___flmul@prod& (0+255),b
  6761  003294  0E00               	movlw	0
  6762  003296  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6763  003298  0E80               	movlw	128
  6764  00329A  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6765  00329C  0E7F               	movlw	127
  6766  00329E  D02B               	goto	L2
  6767  0032A0                     l6353:
  6768                           
  6769                           ; BSR set to: 0
  6770  0032A0  0100               	movlb	0	; () banked
  6771  0032A2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6772  0032A4  D007               	goto	l6355
  6773  0032A6  0100               	movlb	0	; () banked
  6774  0032A8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6775  0032AA  E111               	bnz	l1411
  6776  0032AC  0100               	movlb	0	; () banked
  6777  0032AE  05A7               	decf	___flmul@temp& (0+255),w,b
  6778  0032B0  B0D8               	btfsc	status,0,c
  6779  0032B2  D00D               	goto	l1411
  6780  0032B4                     l6355:
  6781                           
  6782                           ; BSR set to: 0
  6783  0032B4  0E00               	movlw	0
  6784  0032B6  0100               	movlb	0	; () banked
  6785  0032B8  6FA3               	movwf	___flmul@prod& (0+255),b
  6786  0032BA  0E00               	movlw	0
  6787  0032BC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6788  0032BE  0E00               	movlw	0
  6789  0032C0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6790  0032C2  0E00               	movlw	0
  6791  0032C4  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6792  0032C6  0E00               	movlw	0
  6793  0032C8  0100               	movlb	0	; () banked
  6794  0032CA  6F9C               	movwf	___flmul@sign& (0+255),b
  6795  0032CC  D015               	goto	l6365
  6796  0032CE                     l1411:
  6797                           
  6798                           ; BSR set to: 0
  6799  0032CE  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  6800                           
  6801                           ; BSR set to: 0
  6802  0032D2  0EFF               	movlw	255
  6803  0032D4  0100               	movlb	0	; () banked
  6804  0032D6  17A3               	andwf	___flmul@prod& (0+255),f,b
  6805  0032D8  0EFF               	movlw	255
  6806  0032DA  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  6807  0032DC  0E7F               	movlw	127
  6808  0032DE  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  6809  0032E0  0E00               	movlw	0
  6810  0032E2  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  6811                           
  6812                           ; BSR set to: 0
  6813  0032E4  0100               	movlb	0	; () banked
  6814  0032E6  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  6815  0032E8  D002               	goto	l6363
  6816                           
  6817                           ; BSR set to: 0
  6818  0032EA  0100               	movlb	0	; () banked
  6819  0032EC  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  6820  0032EE                     l6363:
  6821                           
  6822                           ; BSR set to: 0
  6823  0032EE  0100               	movlb	0	; () banked
  6824  0032F0  90D8               	bcf	status,0,c
  6825  0032F2  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  6826  0032F4  0100               	movlb	0	; () banked
  6827  0032F6                     L2:
  6828  0032F6  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6829  0032F8                     l6365:
  6830                           
  6831                           ; BSR set to: 0
  6832  0032F8  0100               	movlb	0	; () banked
  6833  0032FA  519C               	movf	___flmul@sign& (0+255),w,b
  6834  0032FC  0100               	movlb	0	; () banked
  6835  0032FE  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6836                           
  6837                           ; BSR set to: 0
  6838  003300  C0A3  F090         	movff	___flmul@prod,?___flmul
  6839  003304  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  6840  003308  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  6841  00330C  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  6842  003310  0012               	return	
  6843  003312                     __end_of___flmul:
  6844                           	opt stack 0
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           postinc0	equ	0xFEE
  6852                           wreg	equ	0xFE8
  6853                           postdec1	equ	0xFE5
  6854                           fsr1l	equ	0xFE1
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           
  6861 ;; *************** function ___fladd *****************
  6862 ;; Defined at:
  6863 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  b               4   77[BANK0 ] unsigned char 
  6866 ;;  a               4   81[BANK0 ] unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  grs             1   96[BANK0 ] unsigned char 
  6869 ;;  bexp            1   95[BANK0 ] unsigned char 
  6870 ;;  aexp            1   94[BANK0 ] unsigned char 
  6871 ;;  signs           1   93[BANK0 ] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  4   77[BANK0 ] unsigned char 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6881 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;Total ram usage:       20 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    4
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_park_routine
  6892 ;;		_parallelo
  6893 ;;		_matematica
  6894 ;;		_asin
  6895 ;;		_atan
  6896 ;;		_cos
  6897 ;;		_eval_poly
  6898 ;;		_sin
  6899 ;;		___flsub
  6900 ;;		_floor
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text20
  6905  0029C4                     __ptext20:
  6906                           	opt stack 0
  6907  0029C4                     ___fladd:
  6908                           	opt stack 21
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;incstack = 0
  6912  0029C4  0100               	movlb	0	; () banked
  6913  0029C6  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6914  0029C8  0B80               	andlw	128
  6915  0029CA  0100               	movlb	0	; () banked
  6916  0029CC  6FBD               	movwf	___fladd@signs& (0+255),b
  6917  0029CE  0100               	movlb	0	; () banked
  6918  0029D0  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6919  0029D2  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  6920  0029D4  0100               	movlb	0	; () banked
  6921  0029D6  6FBF               	movwf	___fladd@bexp& (0+255),b
  6922                           
  6923                           ; BSR set to: 0
  6924  0029D8  0100               	movlb	0	; () banked
  6925  0029DA  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  6926  0029DC  D002               	goto	l6045
  6927                           
  6928                           ; BSR set to: 0
  6929  0029DE  0100               	movlb	0	; () banked
  6930  0029E0  81BF               	bsf	___fladd@bexp& (0+255),0,b
  6931  0029E2                     l6045:
  6932                           
  6933                           ; BSR set to: 0
  6934  0029E2  0100               	movlb	0	; () banked
  6935  0029E4  51BF               	movf	___fladd@bexp& (0+255),w,b
  6936  0029E6  0100               	movlb	0	; () banked
  6937  0029E8  B4D8               	btfsc	status,2,c
  6938  0029EA  D012               	goto	l6055
  6939                           
  6940                           ; BSR set to: 0
  6941  0029EC  0100               	movlb	0	; () banked
  6942  0029EE  29BF               	incf	___fladd@bexp& (0+255),w,b
  6943  0029F0  A4D8               	btfss	status,2,c
  6944  0029F2  D009               	goto	l6051
  6945                           
  6946                           ; BSR set to: 0
  6947  0029F4  0E00               	movlw	0
  6948  0029F6  0100               	movlb	0	; () banked
  6949  0029F8  6FAD               	movwf	___fladd@b& (0+255),b
  6950  0029FA  0E00               	movlw	0
  6951  0029FC  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6952  0029FE  0E00               	movlw	0
  6953  002A00  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6954  002A02  0E00               	movlw	0
  6955  002A04  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6956  002A06                     l6051:
  6957                           
  6958                           ; BSR set to: 0
  6959  002A06  0100               	movlb	0	; () banked
  6960  002A08  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  6961                           
  6962                           ; BSR set to: 0
  6963  002A0A  0E00               	movlw	0
  6964  002A0C  0100               	movlb	0	; () banked
  6965  002A0E  D008               	goto	L3
  6966  002A10                     l6055:
  6967                           
  6968                           ; BSR set to: 0
  6969  002A10  0E00               	movlw	0
  6970  002A12  0100               	movlb	0	; () banked
  6971  002A14  6FAD               	movwf	___fladd@b& (0+255),b
  6972  002A16  0E00               	movlw	0
  6973  002A18  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6974  002A1A  0E00               	movlw	0
  6975  002A1C  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6976  002A1E  0E00               	movlw	0
  6977  002A20                     L3:
  6978  002A20  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6979                           
  6980                           ; BSR set to: 0
  6981                           
  6982                           ; BSR set to: 0
  6983  002A22  0100               	movlb	0	; () banked
  6984  002A24  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6985  002A26  0B80               	andlw	128
  6986  002A28  0100               	movlb	0	; () banked
  6987  002A2A  6FBE               	movwf	___fladd@aexp& (0+255),b
  6988                           
  6989                           ; BSR set to: 0
  6990  002A2C  0100               	movlb	0	; () banked
  6991  002A2E  51BD               	movf	___fladd@signs& (0+255),w,b
  6992  002A30  0100               	movlb	0	; () banked
  6993  002A32  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  6994  002A34  B4D8               	btfsc	status,2,c
  6995  002A36  D002               	goto	l6063
  6996                           
  6997                           ; BSR set to: 0
  6998  002A38  0100               	movlb	0	; () banked
  6999  002A3A  8DBD               	bsf	___fladd@signs& (0+255),6,b
  7000  002A3C                     l6063:
  7001                           
  7002                           ; BSR set to: 0
  7003  002A3C  0100               	movlb	0	; () banked
  7004  002A3E  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7005  002A40  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  7006  002A42  0100               	movlb	0	; () banked
  7007  002A44  6FBE               	movwf	___fladd@aexp& (0+255),b
  7008                           
  7009                           ; BSR set to: 0
  7010  002A46  0100               	movlb	0	; () banked
  7011  002A48  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  7012  002A4A  D002               	goto	l6069
  7013                           
  7014                           ; BSR set to: 0
  7015  002A4C  0100               	movlb	0	; () banked
  7016  002A4E  81BE               	bsf	___fladd@aexp& (0+255),0,b
  7017  002A50                     l6069:
  7018                           
  7019                           ; BSR set to: 0
  7020  002A50  0100               	movlb	0	; () banked
  7021  002A52  51BE               	movf	___fladd@aexp& (0+255),w,b
  7022  002A54  0100               	movlb	0	; () banked
  7023  002A56  B4D8               	btfsc	status,2,c
  7024  002A58  D012               	goto	l6079
  7025                           
  7026                           ; BSR set to: 0
  7027  002A5A  0100               	movlb	0	; () banked
  7028  002A5C  29BE               	incf	___fladd@aexp& (0+255),w,b
  7029  002A5E  A4D8               	btfss	status,2,c
  7030  002A60  D009               	goto	l6075
  7031                           
  7032                           ; BSR set to: 0
  7033  002A62  0E00               	movlw	0
  7034  002A64  0100               	movlb	0	; () banked
  7035  002A66  6FB1               	movwf	___fladd@a& (0+255),b
  7036  002A68  0E00               	movlw	0
  7037  002A6A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7038  002A6C  0E00               	movlw	0
  7039  002A6E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7040  002A70  0E00               	movlw	0
  7041  002A72  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7042  002A74                     l6075:
  7043                           
  7044                           ; BSR set to: 0
  7045  002A74  0100               	movlb	0	; () banked
  7046  002A76  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  7047                           
  7048                           ; BSR set to: 0
  7049  002A78  0E00               	movlw	0
  7050  002A7A  0100               	movlb	0	; () banked
  7051  002A7C  D008               	goto	L4
  7052  002A7E                     l6079:
  7053                           
  7054                           ; BSR set to: 0
  7055  002A7E  0E00               	movlw	0
  7056  002A80  0100               	movlb	0	; () banked
  7057  002A82  6FB1               	movwf	___fladd@a& (0+255),b
  7058  002A84  0E00               	movlw	0
  7059  002A86  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7060  002A88  0E00               	movlw	0
  7061  002A8A  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7062  002A8C  0E00               	movlw	0
  7063  002A8E                     L4:
  7064  002A8E  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7065                           
  7066                           ; BSR set to: 0
  7067                           
  7068                           ; BSR set to: 0
  7069  002A90  0100               	movlb	0	; () banked
  7070  002A92  51BF               	movf	___fladd@bexp& (0+255),w,b
  7071  002A94  0100               	movlb	0	; () banked
  7072  002A96  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  7073  002A98  B0D8               	btfsc	status,0,c
  7074  002A9A  D024               	goto	l6117
  7075                           
  7076                           ; BSR set to: 0
  7077  002A9C  0100               	movlb	0	; () banked
  7078  002A9E  ADBD               	btfss	___fladd@signs& (0+255),6,b
  7079  002AA0  D003               	goto	l6087
  7080                           
  7081                           ; BSR set to: 0
  7082  002AA2  0E80               	movlw	128
  7083  002AA4  0100               	movlb	0	; () banked
  7084  002AA6  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7085  002AA8                     l6087:
  7086                           
  7087                           ; BSR set to: 0
  7088  002AA8  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  7089                           
  7090                           ; BSR set to: 0
  7091  002AAC  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7092                           
  7093                           ; BSR set to: 0
  7094  002AB0  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  7095                           
  7096                           ; BSR set to: 0
  7097  002AB4  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  7098                           
  7099                           ; BSR set to: 0
  7100  002AB8  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  7101                           
  7102                           ; BSR set to: 0
  7103  002ABC  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  7104                           
  7105                           ; BSR set to: 0
  7106  002AC0  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  7107                           
  7108                           ; BSR set to: 0
  7109  002AC4  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  7110                           
  7111                           ; BSR set to: 0
  7112  002AC8  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  7113                           
  7114                           ; BSR set to: 0
  7115  002ACC  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  7116                           
  7117                           ; BSR set to: 0
  7118  002AD0  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  7119                           
  7120                           ; BSR set to: 0
  7121  002AD4  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  7122                           
  7123                           ; BSR set to: 0
  7124  002AD8  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  7125                           
  7126                           ; BSR set to: 0
  7127  002ADC  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  7128                           
  7129                           ; BSR set to: 0
  7130  002AE0  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  7131  002AE4                     l6117:
  7132                           
  7133                           ; BSR set to: 0
  7134  002AE4  0E00               	movlw	0
  7135  002AE6  0100               	movlb	0	; () banked
  7136  002AE8  6FC0               	movwf	___fladd@grs& (0+255),b
  7137                           
  7138                           ; BSR set to: 0
  7139  002AEA  0100               	movlb	0	; () banked
  7140  002AEC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7141  002AEE  0100               	movlb	0	; () banked
  7142  002AF0  6FB5               	movwf	??___fladd& (0+255),b
  7143  002AF2  6BB6               	clrf	(??___fladd+1)& (0+255),b
  7144  002AF4  0100               	movlb	0	; () banked
  7145  002AF6  1FB5               	comf	??___fladd& (0+255),f,b
  7146  002AF8  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7147  002AFA  4BB5               	infsnz	??___fladd& (0+255),f,b
  7148  002AFC  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  7149  002AFE  0100               	movlb	0	; () banked
  7150  002B00  51BE               	movf	___fladd@aexp& (0+255),w,b
  7151  002B02  0100               	movlb	0	; () banked
  7152  002B04  6FB7               	movwf	(??___fladd+2)& (0+255),b
  7153  002B06  6BB8               	clrf	(??___fladd+3)& (0+255),b
  7154  002B08  0100               	movlb	0	; () banked
  7155  002B0A  51B5               	movf	??___fladd& (0+255),w,b
  7156  002B0C  0100               	movlb	0	; () banked
  7157  002B0E  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  7158  002B10  0100               	movlb	0	; () banked
  7159  002B12  51B6               	movf	(??___fladd+1)& (0+255),w,b
  7160  002B14  0100               	movlb	0	; () banked
  7161  002B16  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7162  002B18  0100               	movlb	0	; () banked
  7163  002B1A  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  7164  002B1C  D03D               	goto	l1309
  7165  002B1E  0100               	movlb	0	; () banked
  7166  002B20  51B8               	movf	(??___fladd+3)& (0+255),w,b
  7167  002B22  E105               	bnz	u7400
  7168  002B24  0E1A               	movlw	26
  7169  002B26  0100               	movlb	0	; () banked
  7170  002B28  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  7171  002B2A  A0D8               	btfss	status,0,c
  7172  002B2C  D035               	goto	l1309
  7173  002B2E                     u7400:
  7174                           
  7175                           ; BSR set to: 0
  7176  002B2E  0100               	movlb	0	; () banked
  7177  002B30  51AD               	movf	___fladd@b& (0+255),w,b
  7178  002B32  0100               	movlb	0	; () banked
  7179  002B34  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7180  002B36  0100               	movlb	0	; () banked
  7181  002B38  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7182  002B3A  0100               	movlb	0	; () banked
  7183  002B3C  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7184  002B3E  B4D8               	btfsc	status,2,c
  7185  002B40  D002               	goto	u7410
  7186  002B42  0E01               	movlw	1
  7187  002B44  D001               	goto	u7420
  7188  002B46                     u7410:
  7189  002B46  0E00               	movlw	0
  7190  002B48                     u7420:
  7191  002B48  0100               	movlb	0	; () banked
  7192  002B4A  6FC0               	movwf	___fladd@grs& (0+255),b
  7193                           
  7194                           ; BSR set to: 0
  7195  002B4C  0E00               	movlw	0
  7196  002B4E  0100               	movlb	0	; () banked
  7197  002B50  6FAD               	movwf	___fladd@b& (0+255),b
  7198  002B52  0E00               	movlw	0
  7199  002B54  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7200  002B56  0E00               	movlw	0
  7201  002B58  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7202  002B5A  0E00               	movlw	0
  7203  002B5C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7204                           
  7205                           ; BSR set to: 0
  7206  002B5E  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7207  002B62  D020               	goto	l1308
  7208  002B64                     l1310:
  7209                           
  7210                           ; BSR set to: 0
  7211  002B64  0100               	movlb	0	; () banked
  7212  002B66  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7213  002B68  D007               	goto	l6129
  7214                           
  7215                           ; BSR set to: 0
  7216  002B6A  0100               	movlb	0	; () banked
  7217  002B6C  90D8               	bcf	status,0,c
  7218  002B6E  31C0               	rrcf	___fladd@grs& (0+255),w,b
  7219  002B70  0901               	iorlw	1
  7220  002B72  0100               	movlb	0	; () banked
  7221  002B74  6FC0               	movwf	___fladd@grs& (0+255),b
  7222  002B76  D003               	goto	l6131
  7223  002B78                     l6129:
  7224                           
  7225                           ; BSR set to: 0
  7226  002B78  0100               	movlb	0	; () banked
  7227  002B7A  90D8               	bcf	status,0,c
  7228  002B7C  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7229  002B7E                     l6131:
  7230                           
  7231                           ; BSR set to: 0
  7232  002B7E  0100               	movlb	0	; () banked
  7233  002B80  A1AD               	btfss	___fladd@b& (0+255),0,b
  7234  002B82  D002               	goto	l6135
  7235                           
  7236                           ; BSR set to: 0
  7237  002B84  0100               	movlb	0	; () banked
  7238  002B86  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7239  002B88                     l6135:
  7240                           
  7241                           ; BSR set to: 0
  7242  002B88  0100               	movlb	0	; () banked
  7243  002B8A  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7244  002B8C  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7245  002B8E  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7246  002B90  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7247  002B92  33AD               	rrcf	___fladd@b& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 0
  7250  002B94  0100               	movlb	0	; () banked
  7251  002B96  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7252  002B98                     l1309:
  7253                           
  7254                           ; BSR set to: 0
  7255  002B98  0100               	movlb	0	; () banked
  7256  002B9A  51BE               	movf	___fladd@aexp& (0+255),w,b
  7257  002B9C  0100               	movlb	0	; () banked
  7258  002B9E  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  7259  002BA0  A0D8               	btfss	status,0,c
  7260  002BA2  D7E0               	goto	l1310
  7261  002BA4                     l1308:
  7262                           
  7263                           ; BSR set to: 0
  7264  002BA4  0100               	movlb	0	; () banked
  7265  002BA6  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  7266  002BA8  D03F               	goto	l6163
  7267                           
  7268                           ; BSR set to: 0
  7269  002BAA  0100               	movlb	0	; () banked
  7270  002BAC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7271  002BAE  0100               	movlb	0	; () banked
  7272  002BB0  A4D8               	btfss	status,2,c
  7273  002BB2  D00A               	goto	l6145
  7274                           
  7275                           ; BSR set to: 0
  7276  002BB4  0E00               	movlw	0
  7277  002BB6  0100               	movlb	0	; () banked
  7278  002BB8  6FAD               	movwf	?___fladd& (0+255),b
  7279  002BBA  0E00               	movlw	0
  7280  002BBC  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7281  002BBE  0E00               	movlw	0
  7282  002BC0  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7283  002BC2  0E00               	movlw	0
  7284  002BC4  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7285                           
  7286                           ; BSR set to: 0
  7287  002BC6  0012               	return	
  7288  002BC8                     l6145:
  7289                           
  7290                           ; BSR set to: 0
  7291  002BC8  0100               	movlb	0	; () banked
  7292  002BCA  51B1               	movf	___fladd@a& (0+255),w,b
  7293  002BCC  0100               	movlb	0	; () banked
  7294  002BCE  27AD               	addwf	___fladd@b& (0+255),f,b
  7295  002BD0  0100               	movlb	0	; () banked
  7296  002BD2  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7297  002BD4  0100               	movlb	0	; () banked
  7298  002BD6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7299  002BD8  0100               	movlb	0	; () banked
  7300  002BDA  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7301  002BDC  0100               	movlb	0	; () banked
  7302  002BDE  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7303  002BE0  0100               	movlb	0	; () banked
  7304  002BE2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7305  002BE4  0100               	movlb	0	; () banked
  7306  002BE6  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7307                           
  7308                           ; BSR set to: 0
  7309  002BE8  0100               	movlb	0	; () banked
  7310  002BEA  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7311  002BEC  D0CC               	goto	l6199
  7312                           
  7313                           ; BSR set to: 0
  7314  002BEE  0100               	movlb	0	; () banked
  7315  002BF0  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7316  002BF2  D009               	goto	l6153
  7317                           
  7318                           ; BSR set to: 0
  7319  002BF4  0100               	movlb	0	; () banked
  7320  002BF6  90D8               	bcf	status,0,c
  7321  002BF8  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7322  002BFA  0100               	movlb	0	; () banked
  7323  002BFC  51C0               	movf	___fladd@grs& (0+255),w,b
  7324  002BFE  0901               	iorlw	1
  7325  002C00  0100               	movlb	0	; () banked
  7326  002C02  6FC0               	movwf	___fladd@grs& (0+255),b
  7327  002C04  D003               	goto	l6155
  7328  002C06                     l6153:
  7329                           
  7330                           ; BSR set to: 0
  7331  002C06  0100               	movlb	0	; () banked
  7332  002C08  90D8               	bcf	status,0,c
  7333  002C0A  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7334  002C0C                     l6155:
  7335                           
  7336                           ; BSR set to: 0
  7337  002C0C  0100               	movlb	0	; () banked
  7338  002C0E  A1AD               	btfss	___fladd@b& (0+255),0,b
  7339  002C10  D002               	goto	l6159
  7340                           
  7341                           ; BSR set to: 0
  7342  002C12  0100               	movlb	0	; () banked
  7343  002C14  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7344  002C16                     l6159:
  7345                           
  7346                           ; BSR set to: 0
  7347  002C16  0100               	movlb	0	; () banked
  7348  002C18  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7349  002C1A  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7350  002C1C  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7351  002C1E  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7352  002C20  33AD               	rrcf	___fladd@b& (0+255),f,b
  7353                           
  7354                           ; BSR set to: 0
  7355  002C22  0100               	movlb	0	; () banked
  7356  002C24  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7357                           
  7358                           ; BSR set to: 0
  7359  002C26  D0AF               	goto	l6199
  7360  002C28                     l6163:
  7361                           
  7362                           ; BSR set to: 0
  7363  002C28  0100               	movlb	0	; () banked
  7364  002C2A  51B1               	movf	___fladd@a& (0+255),w,b
  7365  002C2C  0100               	movlb	0	; () banked
  7366  002C2E  5DAD               	subwf	___fladd@b& (0+255),w,b
  7367  002C30  0100               	movlb	0	; () banked
  7368  002C32  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7369  002C34  0100               	movlb	0	; () banked
  7370  002C36  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  7371  002C38  0100               	movlb	0	; () banked
  7372  002C3A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7373  002C3C  0100               	movlb	0	; () banked
  7374  002C3E  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  7375  002C40  0100               	movlb	0	; () banked
  7376  002C42  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  7377  002C44  0A80               	xorlw	128
  7378  002C46  0100               	movlb	0	; () banked
  7379  002C48  6FB5               	movwf	??___fladd& (0+255),b
  7380  002C4A  0100               	movlb	0	; () banked
  7381  002C4C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7382  002C4E  0A80               	xorlw	128
  7383  002C50  0100               	movlb	0	; () banked
  7384  002C52  59B5               	subwfb	??___fladd& (0+255),w,b
  7385  002C54  B0D8               	btfsc	status,0,c
  7386  002C56  D050               	goto	l6173
  7387                           
  7388                           ; BSR set to: 0
  7389  002C58  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7390  002C5C  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7391  002C60  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7392  002C64  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7393  002C68  0100               	movlb	0	; () banked
  7394  002C6A  1FB5               	comf	??___fladd& (0+255),f,b
  7395  002C6C  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7396  002C6E  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  7397  002C70  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  7398  002C72  2BB5               	incf	??___fladd& (0+255),f,b
  7399  002C74  0E00               	movlw	0
  7400  002C76  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  7401  002C78  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  7402  002C7A  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7403  002C7C  0100               	movlb	0	; () banked
  7404  002C7E  51B1               	movf	___fladd@a& (0+255),w,b
  7405  002C80  0100               	movlb	0	; () banked
  7406  002C82  25B5               	addwf	??___fladd& (0+255),w,b
  7407  002C84  0100               	movlb	0	; () banked
  7408  002C86  6FB9               	movwf	(??___fladd+4)& (0+255),b
  7409  002C88  0100               	movlb	0	; () banked
  7410  002C8A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7411  002C8C  0100               	movlb	0	; () banked
  7412  002C8E  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  7413  002C90  0100               	movlb	0	; () banked
  7414  002C92  6FBA               	movwf	(??___fladd+5)& (0+255),b
  7415  002C94  0100               	movlb	0	; () banked
  7416  002C96  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7417  002C98  0100               	movlb	0	; () banked
  7418  002C9A  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  7419  002C9C  0100               	movlb	0	; () banked
  7420  002C9E  6FBB               	movwf	(??___fladd+6)& (0+255),b
  7421  002CA0  0100               	movlb	0	; () banked
  7422  002CA2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7423  002CA4  0100               	movlb	0	; () banked
  7424  002CA6  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  7425  002CA8  0100               	movlb	0	; () banked
  7426  002CAA  6FBC               	movwf	(??___fladd+7)& (0+255),b
  7427  002CAC  0EFF               	movlw	255
  7428  002CAE  0100               	movlb	0	; () banked
  7429  002CB0  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  7430  002CB2  0100               	movlb	0	; () banked
  7431  002CB4  6FAD               	movwf	___fladd@b& (0+255),b
  7432  002CB6  0EFF               	movlw	255
  7433  002CB8  0100               	movlb	0	; () banked
  7434  002CBA  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  7435  002CBC  0100               	movlb	0	; () banked
  7436  002CBE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7437  002CC0  0EFF               	movlw	255
  7438  002CC2  0100               	movlb	0	; () banked
  7439  002CC4  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  7440  002CC6  0100               	movlb	0	; () banked
  7441  002CC8  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7442  002CCA  0EFF               	movlw	255
  7443  002CCC  0100               	movlb	0	; () banked
  7444  002CCE  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  7445  002CD0  0100               	movlb	0	; () banked
  7446  002CD2  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7447  002CD4  0E80               	movlw	128
  7448  002CD6  0100               	movlb	0	; () banked
  7449  002CD8  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7450                           
  7451                           ; BSR set to: 0
  7452  002CDA  0100               	movlb	0	; () banked
  7453  002CDC  6DC0               	negf	___fladd@grs& (0+255),b
  7454                           
  7455                           ; BSR set to: 0
  7456  002CDE  0100               	movlb	0	; () banked
  7457  002CE0  51C0               	movf	___fladd@grs& (0+255),w,b
  7458  002CE2  0100               	movlb	0	; () banked
  7459  002CE4  A4D8               	btfss	status,2,c
  7460  002CE6  D018               	goto	l1325
  7461                           
  7462                           ; BSR set to: 0
  7463  002CE8  0E01               	movlw	1
  7464  002CEA  0100               	movlb	0	; () banked
  7465  002CEC  27AD               	addwf	___fladd@b& (0+255),f,b
  7466  002CEE  0E00               	movlw	0
  7467  002CF0  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7468  002CF2  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7469  002CF4  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7470                           
  7471                           ; BSR set to: 0
  7472  002CF6  D010               	goto	l1325
  7473  002CF8                     l6173:
  7474                           
  7475                           ; BSR set to: 0
  7476  002CF8  0100               	movlb	0	; () banked
  7477  002CFA  51B1               	movf	___fladd@a& (0+255),w,b
  7478  002CFC  0100               	movlb	0	; () banked
  7479  002CFE  5FAD               	subwf	___fladd@b& (0+255),f,b
  7480  002D00  0100               	movlb	0	; () banked
  7481  002D02  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7482  002D04  0100               	movlb	0	; () banked
  7483  002D06  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  7484  002D08  0100               	movlb	0	; () banked
  7485  002D0A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7486  002D0C  0100               	movlb	0	; () banked
  7487  002D0E  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  7488  002D10  0100               	movlb	0	; () banked
  7489  002D12  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7490  002D14  0100               	movlb	0	; () banked
  7491  002D16  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  7492  002D18                     l1325:
  7493                           
  7494                           ; BSR set to: 0
  7495  002D18  0100               	movlb	0	; () banked
  7496  002D1A  51AD               	movf	___fladd@b& (0+255),w,b
  7497  002D1C  0100               	movlb	0	; () banked
  7498  002D1E  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7499  002D20  0100               	movlb	0	; () banked
  7500  002D22  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7501  002D24  0100               	movlb	0	; () banked
  7502  002D26  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7503  002D28  A4D8               	btfss	status,2,c
  7504  002D2A  D02A               	goto	l6197
  7505                           
  7506                           ; BSR set to: 0
  7507  002D2C  0100               	movlb	0	; () banked
  7508  002D2E  51C0               	movf	___fladd@grs& (0+255),w,b
  7509  002D30  0100               	movlb	0	; () banked
  7510  002D32  A4D8               	btfss	status,2,c
  7511  002D34  D025               	goto	l6197
  7512                           
  7513                           ; BSR set to: 0
  7514  002D36  0E00               	movlw	0
  7515  002D38  0100               	movlb	0	; () banked
  7516  002D3A  6FAD               	movwf	?___fladd& (0+255),b
  7517  002D3C  0E00               	movlw	0
  7518  002D3E  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7519  002D40  0E00               	movlw	0
  7520  002D42  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7521  002D44  0E00               	movlw	0
  7522  002D46  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7523                           
  7524                           ; BSR set to: 0
  7525  002D48  0012               	return	
  7526  002D4A                     l6181:
  7527                           
  7528                           ; BSR set to: 0
  7529  002D4A  0100               	movlb	0	; () banked
  7530  002D4C  90D8               	bcf	status,0,c
  7531  002D4E  37AD               	rlcf	___fladd@b& (0+255),f,b
  7532  002D50  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  7533  002D52  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  7534  002D54  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  7535                           
  7536                           ; BSR set to: 0
  7537  002D56  0100               	movlb	0	; () banked
  7538  002D58  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7539  002D5A  D002               	goto	l6187
  7540                           
  7541                           ; BSR set to: 0
  7542  002D5C  0100               	movlb	0	; () banked
  7543  002D5E  81AD               	bsf	___fladd@b& (0+255),0,b
  7544  002D60                     l6187:
  7545                           
  7546                           ; BSR set to: 0
  7547  002D60  0100               	movlb	0	; () banked
  7548  002D62  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7549  002D64  D003               	goto	l6191
  7550                           
  7551                           ; BSR set to: 0
  7552  002D66  80D8               	bsf	status,0,c
  7553  002D68  0100               	movlb	0	; () banked
  7554  002D6A  D002               	goto	L5
  7555  002D6C                     l6191:
  7556                           
  7557                           ; BSR set to: 0
  7558  002D6C  0100               	movlb	0	; () banked
  7559  002D6E  90D8               	bcf	status,0,c
  7560  002D70                     L5:
  7561  002D70  37C0               	rlcf	___fladd@grs& (0+255),f,b
  7562                           
  7563                           ; BSR set to: 0
  7564                           
  7565                           ; BSR set to: 0
  7566  002D72  0100               	movlb	0	; () banked
  7567  002D74  51BF               	movf	___fladd@bexp& (0+255),w,b
  7568  002D76  0100               	movlb	0	; () banked
  7569  002D78  B4D8               	btfsc	status,2,c
  7570  002D7A  D002               	goto	l6197
  7571                           
  7572                           ; BSR set to: 0
  7573  002D7C  0100               	movlb	0	; () banked
  7574  002D7E  07BF               	decf	___fladd@bexp& (0+255),f,b
  7575  002D80                     l6197:
  7576                           
  7577                           ; BSR set to: 0
  7578  002D80  0100               	movlb	0	; () banked
  7579  002D82  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  7580  002D84  D7E2               	goto	l6181
  7581  002D86                     l6199:
  7582                           
  7583                           ; BSR set to: 0
  7584  002D86  0E00               	movlw	0
  7585  002D88  0100               	movlb	0	; () banked
  7586  002D8A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7587                           
  7588                           ; BSR set to: 0
  7589  002D8C  0100               	movlb	0	; () banked
  7590  002D8E  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7591  002D90  D00D               	goto	l1334
  7592                           
  7593                           ; BSR set to: 0
  7594  002D92  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  7595  002D96  0E7F               	movlw	127
  7596  002D98  0100               	movlb	0	; () banked
  7597  002D9A  17B5               	andwf	??___fladd& (0+255),f,b
  7598  002D9C  A4D8               	btfss	status,2,c
  7599  002D9E  D003               	goto	l6207
  7600                           
  7601                           ; BSR set to: 0
  7602                           
  7603                           ; BSR set to: 0
  7604  002DA0  0100               	movlb	0	; () banked
  7605  002DA2  A1AD               	btfss	___fladd@b& (0+255),0,b
  7606  002DA4  D003               	goto	l1334
  7607  002DA6                     l6207:
  7608                           
  7609                           ; BSR set to: 0
  7610  002DA6  0E01               	movlw	1
  7611  002DA8  0100               	movlb	0	; () banked
  7612  002DAA  6FBE               	movwf	___fladd@aexp& (0+255),b
  7613  002DAC                     l1334:
  7614                           
  7615                           ; BSR set to: 0
  7616  002DAC  0100               	movlb	0	; () banked
  7617  002DAE  51BE               	movf	___fladd@aexp& (0+255),w,b
  7618  002DB0  0100               	movlb	0	; () banked
  7619  002DB2  B4D8               	btfsc	status,2,c
  7620  002DB4  D026               	goto	l6217
  7621                           
  7622                           ; BSR set to: 0
  7623  002DB6  0E01               	movlw	1
  7624  002DB8  0100               	movlb	0	; () banked
  7625  002DBA  27AD               	addwf	___fladd@b& (0+255),f,b
  7626  002DBC  0E00               	movlw	0
  7627  002DBE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7628  002DC0  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7629  002DC2  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7630                           
  7631                           ; BSR set to: 0
  7632  002DC4  0100               	movlb	0	; () banked
  7633  002DC6  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7634  002DC8  D01C               	goto	l6217
  7635                           
  7636                           ; BSR set to: 0
  7637  002DCA  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7638  002DCE  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7639  002DD2  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7640  002DD6  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7641  002DDA  0100               	movlb	0	; () banked
  7642  002DDC  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  7643  002DDE  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  7644  002DE0  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  7645  002DE2  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  7646  002DE4  33B5               	rrcf	??___fladd& (0+255),f,b
  7647  002DE6  C0B5  F0AD         	movff	??___fladd,___fladd@b
  7648  002DEA  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  7649  002DEE  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  7650  002DF2  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  7651  002DF6  0100               	movlb	0	; () banked
  7652  002DF8  29BF               	incf	___fladd@bexp& (0+255),w,b
  7653  002DFA  B4D8               	btfsc	status,2,c
  7654  002DFC  D002               	goto	l6217
  7655                           
  7656                           ; BSR set to: 0
  7657  002DFE  0100               	movlb	0	; () banked
  7658  002E00  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7659  002E02                     l6217:
  7660                           
  7661                           ; BSR set to: 0
  7662  002E02  0100               	movlb	0	; () banked
  7663  002E04  29BF               	incf	___fladd@bexp& (0+255),w,b
  7664  002E06  B4D8               	btfsc	status,2,c
  7665  002E08  D005               	goto	l6221
  7666                           
  7667                           ; BSR set to: 0
  7668  002E0A  0100               	movlb	0	; () banked
  7669  002E0C  51BF               	movf	___fladd@bexp& (0+255),w,b
  7670  002E0E  0100               	movlb	0	; () banked
  7671  002E10  A4D8               	btfss	status,2,c
  7672  002E12  D011               	goto	l6225
  7673  002E14                     l6221:
  7674                           
  7675                           ; BSR set to: 0
  7676  002E14  0E00               	movlw	0
  7677  002E16  0100               	movlb	0	; () banked
  7678  002E18  6FAD               	movwf	___fladd@b& (0+255),b
  7679  002E1A  0E00               	movlw	0
  7680  002E1C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7681  002E1E  0E00               	movlw	0
  7682  002E20  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7683  002E22  0E00               	movlw	0
  7684  002E24  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7685  002E26  0100               	movlb	0	; () banked
  7686  002E28  51BF               	movf	___fladd@bexp& (0+255),w,b
  7687  002E2A  0100               	movlb	0	; () banked
  7688  002E2C  A4D8               	btfss	status,2,c
  7689  002E2E  D003               	goto	l6225
  7690                           
  7691                           ; BSR set to: 0
  7692  002E30  0E00               	movlw	0
  7693  002E32  0100               	movlb	0	; () banked
  7694  002E34  6FBD               	movwf	___fladd@signs& (0+255),b
  7695  002E36                     l6225:
  7696                           
  7697                           ; BSR set to: 0
  7698  002E36  0100               	movlb	0	; () banked
  7699  002E38  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  7700  002E3A  D003               	goto	l6229
  7701                           
  7702                           ; BSR set to: 0
  7703  002E3C  0100               	movlb	0	; () banked
  7704  002E3E  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  7705  002E40  D002               	goto	l6231
  7706  002E42                     l6229:
  7707                           
  7708                           ; BSR set to: 0
  7709  002E42  0100               	movlb	0	; () banked
  7710  002E44  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  7711  002E46                     l6231:
  7712                           
  7713                           ; BSR set to: 0
  7714  002E46  0100               	movlb	0	; () banked
  7715  002E48  90D8               	bcf	status,0,c
  7716  002E4A  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  7717  002E4C  0100               	movlb	0	; () banked
  7718  002E4E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7719                           
  7720                           ; BSR set to: 0
  7721  002E50  0100               	movlb	0	; () banked
  7722  002E52  AFBD               	btfss	___fladd@signs& (0+255),7,b
  7723  002E54  D002               	goto	l6237
  7724                           
  7725                           ; BSR set to: 0
  7726  002E56  0100               	movlb	0	; () banked
  7727  002E58  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  7728  002E5A                     l6237:
  7729                           
  7730                           ; BSR set to: 0
  7731  002E5A  C0AD  F0AD         	movff	___fladd@b,?___fladd
  7732  002E5E  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  7733  002E62  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  7734  002E66  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  7735  002E6A  0012               	return	
  7736  002E6C                     __end_of___fladd:
  7737                           	opt stack 0
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodh	equ	0xFF4
  7743                           prodl	equ	0xFF3
  7744                           postinc0	equ	0xFEE
  7745                           wreg	equ	0xFE8
  7746                           postdec1	equ	0xFE5
  7747                           fsr1l	equ	0xFE1
  7748                           postinc2	equ	0xFDE
  7749                           postdec2	equ	0xFDD
  7750                           fsr2h	equ	0xFDA
  7751                           fsr2l	equ	0xFD9
  7752                           status	equ	0xFD8
  7753                           
  7754 ;; *************** function ___flge *****************
  7755 ;; Defined at:
  7756 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  ff1             4   81[BANK0 ] unsigned char 
  7759 ;;  ff2             4   85[BANK0 ] unsigned char 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;		None               void
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7771 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7774 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7775 ;;Total ram usage:       12 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    4
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_parallelo
  7782 ;;		_asin
  7783 ;;		_atan
  7784 ;;		_cos
  7785 ;;		_sin
  7786 ;;		_floor
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text21
  7791  005128                     __ptext21:
  7792                           	opt stack 0
  7793  005128                     ___flge:
  7794                           	opt stack 22
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;incstack = 0
  7798  005128  0E00               	movlw	0
  7799  00512A  0100               	movlb	0	; () banked
  7800  00512C  15B1               	andwf	___flge@ff1& (0+255),w,b
  7801  00512E  0100               	movlb	0	; () banked
  7802  005130  6FB9               	movwf	??___flge& (0+255),b
  7803  005132  0E00               	movlw	0
  7804  005134  0100               	movlb	0	; () banked
  7805  005136  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  7806  005138  0100               	movlb	0	; () banked
  7807  00513A  6FBA               	movwf	(??___flge+1)& (0+255),b
  7808  00513C  0E80               	movlw	128
  7809  00513E  0100               	movlb	0	; () banked
  7810  005140  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  7811  005142  0100               	movlb	0	; () banked
  7812  005144  6FBB               	movwf	(??___flge+2)& (0+255),b
  7813  005146  0E7F               	movlw	127
  7814  005148  0100               	movlb	0	; () banked
  7815  00514A  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  7816  00514C  0100               	movlb	0	; () banked
  7817  00514E  6FBC               	movwf	(??___flge+3)& (0+255),b
  7818  005150  0100               	movlb	0	; () banked
  7819  005152  51B9               	movf	??___flge& (0+255),w,b
  7820  005154  0100               	movlb	0	; () banked
  7821  005156  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7822  005158  0100               	movlb	0	; () banked
  7823  00515A  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7824  00515C  0100               	movlb	0	; () banked
  7825  00515E  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7826  005160  A4D8               	btfss	status,2,c
  7827  005162  D009               	goto	l6375
  7828                           
  7829                           ; BSR set to: 0
  7830  005164  0E00               	movlw	0
  7831  005166  0100               	movlb	0	; () banked
  7832  005168  6FB1               	movwf	___flge@ff1& (0+255),b
  7833  00516A  0E00               	movlw	0
  7834  00516C  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7835  00516E  0E00               	movlw	0
  7836  005170  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7837  005172  0E00               	movlw	0
  7838  005174  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7839  005176                     l6375:
  7840                           
  7841                           ; BSR set to: 0
  7842  005176  0E00               	movlw	0
  7843  005178  0100               	movlb	0	; () banked
  7844  00517A  15B5               	andwf	___flge@ff2& (0+255),w,b
  7845  00517C  0100               	movlb	0	; () banked
  7846  00517E  6FB9               	movwf	??___flge& (0+255),b
  7847  005180  0E00               	movlw	0
  7848  005182  0100               	movlb	0	; () banked
  7849  005184  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  7850  005186  0100               	movlb	0	; () banked
  7851  005188  6FBA               	movwf	(??___flge+1)& (0+255),b
  7852  00518A  0E80               	movlw	128
  7853  00518C  0100               	movlb	0	; () banked
  7854  00518E  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  7855  005190  0100               	movlb	0	; () banked
  7856  005192  6FBB               	movwf	(??___flge+2)& (0+255),b
  7857  005194  0E7F               	movlw	127
  7858  005196  0100               	movlb	0	; () banked
  7859  005198  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  7860  00519A  0100               	movlb	0	; () banked
  7861  00519C  6FBC               	movwf	(??___flge+3)& (0+255),b
  7862  00519E  0100               	movlb	0	; () banked
  7863  0051A0  51B9               	movf	??___flge& (0+255),w,b
  7864  0051A2  0100               	movlb	0	; () banked
  7865  0051A4  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7866  0051A6  0100               	movlb	0	; () banked
  7867  0051A8  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7868  0051AA  0100               	movlb	0	; () banked
  7869  0051AC  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7870  0051AE  A4D8               	btfss	status,2,c
  7871  0051B0  D009               	goto	l6379
  7872                           
  7873                           ; BSR set to: 0
  7874  0051B2  0E00               	movlw	0
  7875  0051B4  0100               	movlb	0	; () banked
  7876  0051B6  6FB5               	movwf	___flge@ff2& (0+255),b
  7877  0051B8  0E00               	movlw	0
  7878  0051BA  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7879  0051BC  0E00               	movlw	0
  7880  0051BE  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7881  0051C0  0E00               	movlw	0
  7882  0051C2  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7883  0051C4                     l6379:
  7884                           
  7885                           ; BSR set to: 0
  7886  0051C4  0100               	movlb	0	; () banked
  7887  0051C6  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  7888  0051C8  D026               	goto	l6383
  7889                           
  7890                           ; BSR set to: 0
  7891  0051CA  C0B1  F0B9         	movff	___flge@ff1,??___flge
  7892  0051CE  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  7893  0051D2  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  7894  0051D6  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  7895  0051DA  0100               	movlb	0	; () banked
  7896  0051DC  1FB9               	comf	??___flge& (0+255),f,b
  7897  0051DE  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7898  0051E0  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7899  0051E2  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7900  0051E4  2BB9               	incf	??___flge& (0+255),f,b
  7901  0051E6  0E00               	movlw	0
  7902  0051E8  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7903  0051EA  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7904  0051EC  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7905  0051EE  0E00               	movlw	0
  7906  0051F0  0100               	movlb	0	; () banked
  7907  0051F2  25B9               	addwf	??___flge& (0+255),w,b
  7908  0051F4  0100               	movlb	0	; () banked
  7909  0051F6  6FB1               	movwf	___flge@ff1& (0+255),b
  7910  0051F8  0E00               	movlw	0
  7911  0051FA  0100               	movlb	0	; () banked
  7912  0051FC  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7913  0051FE  0100               	movlb	0	; () banked
  7914  005200  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7915  005202  0E00               	movlw	0
  7916  005204  0100               	movlb	0	; () banked
  7917  005206  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7918  005208  0100               	movlb	0	; () banked
  7919  00520A  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7920  00520C  0E80               	movlw	128
  7921  00520E  0100               	movlb	0	; () banked
  7922  005210  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7923  005212  0100               	movlb	0	; () banked
  7924  005214  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7925  005216                     l6383:
  7926                           
  7927                           ; BSR set to: 0
  7928  005216  0100               	movlb	0	; () banked
  7929  005218  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  7930  00521A  D026               	goto	l1056
  7931                           
  7932                           ; BSR set to: 0
  7933  00521C  C0B5  F0B9         	movff	___flge@ff2,??___flge
  7934  005220  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  7935  005224  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  7936  005228  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  7937  00522C  0100               	movlb	0	; () banked
  7938  00522E  1FB9               	comf	??___flge& (0+255),f,b
  7939  005230  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7940  005232  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7941  005234  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7942  005236  2BB9               	incf	??___flge& (0+255),f,b
  7943  005238  0E00               	movlw	0
  7944  00523A  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7945  00523C  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7946  00523E  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7947  005240  0E00               	movlw	0
  7948  005242  0100               	movlb	0	; () banked
  7949  005244  25B9               	addwf	??___flge& (0+255),w,b
  7950  005246  0100               	movlb	0	; () banked
  7951  005248  6FB5               	movwf	___flge@ff2& (0+255),b
  7952  00524A  0E00               	movlw	0
  7953  00524C  0100               	movlb	0	; () banked
  7954  00524E  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7955  005250  0100               	movlb	0	; () banked
  7956  005252  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7957  005254  0E00               	movlw	0
  7958  005256  0100               	movlb	0	; () banked
  7959  005258  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7960  00525A  0100               	movlb	0	; () banked
  7961  00525C  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7962  00525E  0E80               	movlw	128
  7963  005260  0100               	movlb	0	; () banked
  7964  005262  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7965  005264  0100               	movlb	0	; () banked
  7966  005266  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7967  005268                     l1056:
  7968                           
  7969                           ; BSR set to: 0
  7970  005268  0E00               	movlw	0
  7971  00526A  0100               	movlb	0	; () banked
  7972  00526C  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  7973  00526E  0E00               	movlw	0
  7974  005270  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7975  005272  0E00               	movlw	0
  7976  005274  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7977  005276  0E80               	movlw	128
  7978  005278  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7979  00527A  0E00               	movlw	0
  7980  00527C  0100               	movlb	0	; () banked
  7981  00527E  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  7982  005280  0E00               	movlw	0
  7983  005282  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7984  005284  0E00               	movlw	0
  7985  005286  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7986  005288  0E80               	movlw	128
  7987  00528A  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7988  00528C  0100               	movlb	0	; () banked
  7989  00528E  51B5               	movf	___flge@ff2& (0+255),w,b
  7990  005290  0100               	movlb	0	; () banked
  7991  005292  5DB1               	subwf	___flge@ff1& (0+255),w,b
  7992  005294  0100               	movlb	0	; () banked
  7993  005296  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  7994  005298  0100               	movlb	0	; () banked
  7995  00529A  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7996  00529C  0100               	movlb	0	; () banked
  7997  00529E  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  7998  0052A0  0100               	movlb	0	; () banked
  7999  0052A2  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8000  0052A4  0100               	movlb	0	; () banked
  8001  0052A6  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  8002  0052A8  0100               	movlb	0	; () banked
  8003  0052AA  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8004  0052AC  B0D8               	btfsc	status,0,c
  8005  0052AE  D002               	goto	l6389
  8006                           
  8007                           ; BSR set to: 0
  8008  0052B0  90D8               	bcf	status,0,c
  8009  0052B2  0012               	return	
  8010  0052B4                     l6389:
  8011                           
  8012                           ; BSR set to: 0
  8013  0052B4  80D8               	bsf	status,0,c
  8014                           
  8015                           ; BSR set to: 0
  8016  0052B6  0012               	return	
  8017  0052B8                     __end_of___flge:
  8018                           	opt stack 0
  8019                           tblptru	equ	0xFF8
  8020                           tblptrh	equ	0xFF7
  8021                           tblptrl	equ	0xFF6
  8022                           tablat	equ	0xFF5
  8023                           prodh	equ	0xFF4
  8024                           prodl	equ	0xFF3
  8025                           postinc0	equ	0xFEE
  8026                           wreg	equ	0xFE8
  8027                           postdec1	equ	0xFE5
  8028                           fsr1l	equ	0xFE1
  8029                           postinc2	equ	0xFDE
  8030                           postdec2	equ	0xFDD
  8031                           fsr2h	equ	0xFDA
  8032                           fsr2l	equ	0xFD9
  8033                           status	equ	0xFD8
  8034                           
  8035 ;; *************** function ___fldiv *****************
  8036 ;; Defined at:
  8037 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  b               4   23[BANK0 ] unsigned char 
  8040 ;;  a               4   27[BANK0 ] unsigned char 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  grs             4   42[BANK0 ] unsigned long 
  8043 ;;  rem             4   36[BANK0 ] unsigned long 
  8044 ;;  new_exp         2   40[BANK0 ] int 
  8045 ;;  aexp            1   47[BANK0 ] unsigned char 
  8046 ;;  bexp            1   46[BANK0 ] unsigned char 
  8047 ;;  sign            1   35[BANK0 ] unsigned char 
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  4   23[BANK0 ] unsigned char 
  8050 ;; Registers used:
  8051 ;;		wreg, status,2, status,0
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8057 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;Total ram usage:       25 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; Hardware stack levels required when called:    4
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_parallelo
  8068 ;;		_matematica
  8069 ;;		_asin
  8070 ;;		_atan
  8071 ;;		_sin
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text22
  8076  0036DC                     __ptext22:
  8077                           	opt stack 0
  8078  0036DC                     ___fldiv:
  8079                           	opt stack 22
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;incstack = 0
  8083  0036DC  0100               	movlb	0	; () banked
  8084  0036DE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  8085  0036E0  0B80               	andlw	128
  8086  0036E2  0100               	movlb	0	; () banked
  8087  0036E4  6F83               	movwf	___fldiv@sign& (0+255),b
  8088  0036E6  0100               	movlb	0	; () banked
  8089  0036E8  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  8090  0036EA  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  8091  0036EC  0100               	movlb	0	; () banked
  8092  0036EE  6F8E               	movwf	___fldiv@bexp& (0+255),b
  8093                           
  8094                           ; BSR set to: 0
  8095  0036F0  0100               	movlb	0	; () banked
  8096  0036F2  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8097  0036F4  D002               	goto	l6509
  8098                           
  8099                           ; BSR set to: 0
  8100  0036F6  0100               	movlb	0	; () banked
  8101  0036F8  818E               	bsf	___fldiv@bexp& (0+255),0,b
  8102  0036FA                     l6509:
  8103                           
  8104                           ; BSR set to: 0
  8105  0036FA  0100               	movlb	0	; () banked
  8106  0036FC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8107  0036FE  0100               	movlb	0	; () banked
  8108  003700  B4D8               	btfsc	status,2,c
  8109  003702  D012               	goto	l6519
  8110                           
  8111                           ; BSR set to: 0
  8112  003704  0100               	movlb	0	; () banked
  8113  003706  298E               	incf	___fldiv@bexp& (0+255),w,b
  8114  003708  A4D8               	btfss	status,2,c
  8115  00370A  D009               	goto	l6515
  8116                           
  8117                           ; BSR set to: 0
  8118  00370C  0E00               	movlw	0
  8119  00370E  0100               	movlb	0	; () banked
  8120  003710  6F77               	movwf	___fldiv@b& (0+255),b
  8121  003712  0E00               	movlw	0
  8122  003714  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8123  003716  0E00               	movlw	0
  8124  003718  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8125  00371A  0E00               	movlw	0
  8126  00371C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8127  00371E                     l6515:
  8128                           
  8129                           ; BSR set to: 0
  8130  00371E  0100               	movlb	0	; () banked
  8131  003720  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8132                           
  8133                           ; BSR set to: 0
  8134  003722  0E00               	movlw	0
  8135  003724  0100               	movlb	0	; () banked
  8136  003726  D008               	goto	L6
  8137  003728                     l6519:
  8138                           
  8139                           ; BSR set to: 0
  8140  003728  0E00               	movlw	0
  8141  00372A  0100               	movlb	0	; () banked
  8142  00372C  6F77               	movwf	___fldiv@b& (0+255),b
  8143  00372E  0E00               	movlw	0
  8144  003730  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8145  003732  0E00               	movlw	0
  8146  003734  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8147  003736  0E00               	movlw	0
  8148  003738                     L6:
  8149  003738  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8150                           
  8151                           ; BSR set to: 0
  8152                           
  8153                           ; BSR set to: 0
  8154  00373A  0100               	movlb	0	; () banked
  8155  00373C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8156  00373E  0B80               	andlw	128
  8157  003740  0100               	movlb	0	; () banked
  8158  003742  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  8159                           
  8160                           ; BSR set to: 0
  8161  003744  0100               	movlb	0	; () banked
  8162  003746  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8163  003748  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  8164  00374A  0100               	movlb	0	; () banked
  8165  00374C  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8166                           
  8167                           ; BSR set to: 0
  8168  00374E  0100               	movlb	0	; () banked
  8169  003750  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  8170  003752  D002               	goto	l6529
  8171                           
  8172                           ; BSR set to: 0
  8173  003754  0100               	movlb	0	; () banked
  8174  003756  818F               	bsf	___fldiv@aexp& (0+255),0,b
  8175  003758                     l6529:
  8176                           
  8177                           ; BSR set to: 0
  8178  003758  0100               	movlb	0	; () banked
  8179  00375A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8180  00375C  0100               	movlb	0	; () banked
  8181  00375E  B4D8               	btfsc	status,2,c
  8182  003760  D012               	goto	l6539
  8183                           
  8184                           ; BSR set to: 0
  8185  003762  0100               	movlb	0	; () banked
  8186  003764  298F               	incf	___fldiv@aexp& (0+255),w,b
  8187  003766  A4D8               	btfss	status,2,c
  8188  003768  D009               	goto	l6535
  8189                           
  8190                           ; BSR set to: 0
  8191  00376A  0E00               	movlw	0
  8192  00376C  0100               	movlb	0	; () banked
  8193  00376E  6F7B               	movwf	___fldiv@a& (0+255),b
  8194  003770  0E00               	movlw	0
  8195  003772  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8196  003774  0E00               	movlw	0
  8197  003776  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8198  003778  0E00               	movlw	0
  8199  00377A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8200  00377C                     l6535:
  8201                           
  8202                           ; BSR set to: 0
  8203  00377C  0100               	movlb	0	; () banked
  8204  00377E  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  8205                           
  8206                           ; BSR set to: 0
  8207  003780  0E00               	movlw	0
  8208  003782  0100               	movlb	0	; () banked
  8209  003784  D008               	goto	L7
  8210  003786                     l6539:
  8211                           
  8212                           ; BSR set to: 0
  8213  003786  0E00               	movlw	0
  8214  003788  0100               	movlb	0	; () banked
  8215  00378A  6F7B               	movwf	___fldiv@a& (0+255),b
  8216  00378C  0E00               	movlw	0
  8217  00378E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8218  003790  0E00               	movlw	0
  8219  003792  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8220  003794  0E00               	movlw	0
  8221  003796                     L7:
  8222  003796  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225                           
  8226                           ; BSR set to: 0
  8227  003798  0100               	movlb	0	; () banked
  8228  00379A  517B               	movf	___fldiv@a& (0+255),w,b
  8229  00379C  0100               	movlb	0	; () banked
  8230  00379E  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8231  0037A0  0100               	movlb	0	; () banked
  8232  0037A2  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8233  0037A4  0100               	movlb	0	; () banked
  8234  0037A6  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8235  0037A8  A4D8               	btfss	status,2,c
  8236  0037AA  D017               	goto	l6551
  8237                           
  8238                           ; BSR set to: 0
  8239  0037AC  0E00               	movlw	0
  8240  0037AE  0100               	movlb	0	; () banked
  8241  0037B0  6F77               	movwf	___fldiv@b& (0+255),b
  8242  0037B2  0E00               	movlw	0
  8243  0037B4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8244  0037B6  0E00               	movlw	0
  8245  0037B8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8246  0037BA  0E00               	movlw	0
  8247  0037BC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  0037BE  0100               	movlb	0	; () banked
  8251  0037C0  0E80               	movlw	128
  8252  0037C2  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  8253  0037C4  0E7F               	movlw	127
  8254  0037C6  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 0
  8257  0037C8  C077  F077         	movff	___fldiv@b,?___fldiv
  8258  0037CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8259  0037D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8260  0037D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8261                           
  8262                           ; BSR set to: 0
  8263  0037D8  0012               	return	
  8264  0037DA                     l6551:
  8265                           
  8266                           ; BSR set to: 0
  8267  0037DA  0100               	movlb	0	; () banked
  8268  0037DC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8269  0037DE  0100               	movlb	0	; () banked
  8270  0037E0  A4D8               	btfss	status,2,c
  8271  0037E2  D012               	goto	l6559
  8272                           
  8273                           ; BSR set to: 0
  8274  0037E4  0E00               	movlw	0
  8275  0037E6  0100               	movlb	0	; () banked
  8276  0037E8  6F77               	movwf	___fldiv@b& (0+255),b
  8277  0037EA  0E00               	movlw	0
  8278  0037EC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8279  0037EE  0E00               	movlw	0
  8280  0037F0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8281  0037F2  0E00               	movlw	0
  8282  0037F4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8283                           
  8284                           ; BSR set to: 0
  8285  0037F6  C077  F077         	movff	___fldiv@b,?___fldiv
  8286  0037FA  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8287  0037FE  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8288  003802  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8289                           
  8290                           ; BSR set to: 0
  8291  003806  0012               	return	
  8292  003808                     l6559:
  8293                           
  8294                           ; BSR set to: 0
  8295  003808  0100               	movlb	0	; () banked
  8296  00380A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8297  00380C  0100               	movlb	0	; () banked
  8298  00380E  6F7F               	movwf	??___fldiv& (0+255),b
  8299  003810  6B80               	clrf	(??___fldiv+1)& (0+255),b
  8300  003812  0100               	movlb	0	; () banked
  8301  003814  1F7F               	comf	??___fldiv& (0+255),f,b
  8302  003816  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  8303  003818  4B7F               	infsnz	??___fldiv& (0+255),f,b
  8304  00381A  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  8305  00381C  0100               	movlb	0	; () banked
  8306  00381E  518E               	movf	___fldiv@bexp& (0+255),w,b
  8307  003820  0100               	movlb	0	; () banked
  8308  003822  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8309  003824  6B82               	clrf	(??___fldiv+3)& (0+255),b
  8310  003826  0100               	movlb	0	; () banked
  8311  003828  517F               	movf	??___fldiv& (0+255),w,b
  8312  00382A  0100               	movlb	0	; () banked
  8313  00382C  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  8314  00382E  0100               	movlb	0	; () banked
  8315  003830  5180               	movf	(??___fldiv+1)& (0+255),w,b
  8316  003832  0100               	movlb	0	; () banked
  8317  003834  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  8318  003836  0E7F               	movlw	127
  8319  003838  0100               	movlb	0	; () banked
  8320  00383A  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  8321  00383C  0100               	movlb	0	; () banked
  8322  00383E  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8323  003840  0E00               	movlw	0
  8324  003842  0100               	movlb	0	; () banked
  8325  003844  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  8326  003846  0100               	movlb	0	; () banked
  8327  003848  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8328                           
  8329                           ; BSR set to: 0
  8330  00384A  C077  F084         	movff	___fldiv@b,___fldiv@rem
  8331  00384E  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  8332  003852  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  8333  003856  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  8334                           
  8335                           ; BSR set to: 0
  8336  00385A  0E00               	movlw	0
  8337  00385C  0100               	movlb	0	; () banked
  8338  00385E  6F77               	movwf	___fldiv@b& (0+255),b
  8339  003860  0E00               	movlw	0
  8340  003862  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8341  003864  0E00               	movlw	0
  8342  003866  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8343  003868  0E00               	movlw	0
  8344  00386A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8345                           
  8346                           ; BSR set to: 0
  8347  00386C  0E00               	movlw	0
  8348  00386E  0100               	movlb	0	; () banked
  8349  003870  6F8A               	movwf	___fldiv@grs& (0+255),b
  8350  003872  0E00               	movlw	0
  8351  003874  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  8352  003876  0E00               	movlw	0
  8353  003878  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  8354  00387A  0E00               	movlw	0
  8355  00387C  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  8356                           
  8357                           ; BSR set to: 0
  8358  00387E  0E00               	movlw	0
  8359  003880  0100               	movlb	0	; () banked
  8360  003882  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8361  003884  D042               	goto	l1364
  8362  003886                     l6569:
  8363                           
  8364                           ; BSR set to: 0
  8365  003886  0100               	movlb	0	; () banked
  8366  003888  518F               	movf	___fldiv@aexp& (0+255),w,b
  8367  00388A  0100               	movlb	0	; () banked
  8368  00388C  B4D8               	btfsc	status,2,c
  8369  00388E  D017               	goto	l6577
  8370                           
  8371                           ; BSR set to: 0
  8372  003890  0100               	movlb	0	; () banked
  8373  003892  90D8               	bcf	status,0,c
  8374  003894  3784               	rlcf	___fldiv@rem& (0+255),f,b
  8375  003896  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8376  003898  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8377  00389A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8378  00389C  0100               	movlb	0	; () banked
  8379  00389E  90D8               	bcf	status,0,c
  8380  0038A0  3777               	rlcf	___fldiv@b& (0+255),f,b
  8381  0038A2  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8382  0038A4  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8383  0038A6  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8384                           
  8385                           ; BSR set to: 0
  8386  0038A8  0100               	movlb	0	; () banked
  8387  0038AA  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8388  0038AC  D002               	goto	l1367
  8389                           
  8390                           ; BSR set to: 0
  8391  0038AE  0100               	movlb	0	; () banked
  8392  0038B0  8177               	bsf	___fldiv@b& (0+255),0,b
  8393  0038B2                     l1367:
  8394                           
  8395                           ; BSR set to: 0
  8396  0038B2  0100               	movlb	0	; () banked
  8397  0038B4  90D8               	bcf	status,0,c
  8398  0038B6  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8399  0038B8  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8400  0038BA  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8401  0038BC  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8402  0038BE                     l6577:
  8403                           
  8404                           ; BSR set to: 0
  8405  0038BE  0100               	movlb	0	; () banked
  8406  0038C0  517B               	movf	___fldiv@a& (0+255),w,b
  8407  0038C2  0100               	movlb	0	; () banked
  8408  0038C4  5D84               	subwf	___fldiv@rem& (0+255),w,b
  8409  0038C6  0100               	movlb	0	; () banked
  8410  0038C8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8411  0038CA  0100               	movlb	0	; () banked
  8412  0038CC  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8413  0038CE  0100               	movlb	0	; () banked
  8414  0038D0  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8415  0038D2  0100               	movlb	0	; () banked
  8416  0038D4  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8417  0038D6  0100               	movlb	0	; () banked
  8418  0038D8  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8419  0038DA  0100               	movlb	0	; () banked
  8420  0038DC  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8421  0038DE  A0D8               	btfss	status,0,c
  8422  0038E0  D012               	goto	l6583
  8423                           
  8424                           ; BSR set to: 0
  8425  0038E2  0100               	movlb	0	; () banked
  8426  0038E4  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8427                           
  8428                           ; BSR set to: 0
  8429  0038E6  0100               	movlb	0	; () banked
  8430  0038E8  517B               	movf	___fldiv@a& (0+255),w,b
  8431  0038EA  0100               	movlb	0	; () banked
  8432  0038EC  5F84               	subwf	___fldiv@rem& (0+255),f,b
  8433  0038EE  0100               	movlb	0	; () banked
  8434  0038F0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8435  0038F2  0100               	movlb	0	; () banked
  8436  0038F4  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8437  0038F6  0100               	movlb	0	; () banked
  8438  0038F8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8439  0038FA  0100               	movlb	0	; () banked
  8440  0038FC  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8441  0038FE  0100               	movlb	0	; () banked
  8442  003900  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8443  003902  0100               	movlb	0	; () banked
  8444  003904  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8445  003906                     l6583:
  8446                           
  8447                           ; BSR set to: 0
  8448  003906  0100               	movlb	0	; () banked
  8449  003908  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  8450  00390A                     l1364:
  8451                           
  8452                           ; BSR set to: 0
  8453  00390A  0E19               	movlw	25
  8454  00390C  0100               	movlb	0	; () banked
  8455  00390E  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  8456  003910  D7BA               	goto	l6569
  8457                           
  8458                           ; BSR set to: 0
  8459                           
  8460                           ; BSR set to: 0
  8461  003912  0100               	movlb	0	; () banked
  8462  003914  5184               	movf	___fldiv@rem& (0+255),w,b
  8463  003916  0100               	movlb	0	; () banked
  8464  003918  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8465  00391A  0100               	movlb	0	; () banked
  8466  00391C  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8467  00391E  0100               	movlb	0	; () banked
  8468  003920  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8469  003922  B4D8               	btfsc	status,2,c
  8470  003924  D018               	goto	l6595
  8471                           
  8472                           ; BSR set to: 0
  8473  003926  0100               	movlb	0	; () banked
  8474  003928  818A               	bsf	___fldiv@grs& (0+255),0,b
  8475                           
  8476                           ; BSR set to: 0
  8477  00392A  D015               	goto	l6595
  8478  00392C                     l6589:
  8479                           
  8480                           ; BSR set to: 0
  8481  00392C  0100               	movlb	0	; () banked
  8482  00392E  90D8               	bcf	status,0,c
  8483  003930  3777               	rlcf	___fldiv@b& (0+255),f,b
  8484  003932  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8485  003934  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8486  003936  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8487                           
  8488                           ; BSR set to: 0
  8489  003938  0100               	movlb	0	; () banked
  8490  00393A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8491  00393C  D002               	goto	l1373
  8492                           
  8493                           ; BSR set to: 0
  8494  00393E  0100               	movlb	0	; () banked
  8495  003940  8177               	bsf	___fldiv@b& (0+255),0,b
  8496  003942                     l1373:
  8497                           
  8498                           ; BSR set to: 0
  8499  003942  0100               	movlb	0	; () banked
  8500  003944  90D8               	bcf	status,0,c
  8501  003946  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8502  003948  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8503  00394A  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8504  00394C  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8505  00394E  0100               	movlb	0	; () banked
  8506  003950  0788               	decf	___fldiv@new_exp& (0+255),f,b
  8507  003952  A0D8               	btfss	status,0,c
  8508  003954  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8509  003956                     l6595:
  8510                           
  8511                           ; BSR set to: 0
  8512  003956  0100               	movlb	0	; () banked
  8513  003958  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8514  00395A  D7E8               	goto	l6589
  8515                           
  8516                           ; BSR set to: 0
  8517                           
  8518                           ; BSR set to: 0
  8519  00395C  0E00               	movlw	0
  8520  00395E  0100               	movlb	0	; () banked
  8521  003960  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8522                           
  8523                           ; BSR set to: 0
  8524  003962  0100               	movlb	0	; () banked
  8525  003964  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8526  003966  D024               	goto	l1375
  8527                           
  8528                           ; BSR set to: 0
  8529  003968  0EFF               	movlw	255
  8530  00396A  0100               	movlb	0	; () banked
  8531  00396C  158A               	andwf	___fldiv@grs& (0+255),w,b
  8532  00396E  0100               	movlb	0	; () banked
  8533  003970  6F7F               	movwf	??___fldiv& (0+255),b
  8534  003972  0EFF               	movlw	255
  8535  003974  0100               	movlb	0	; () banked
  8536  003976  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8537  003978  0100               	movlb	0	; () banked
  8538  00397A  6F80               	movwf	(??___fldiv+1)& (0+255),b
  8539  00397C  0EFF               	movlw	255
  8540  00397E  0100               	movlb	0	; () banked
  8541  003980  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8542  003982  0100               	movlb	0	; () banked
  8543  003984  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8544  003986  0E7F               	movlw	127
  8545  003988  0100               	movlb	0	; () banked
  8546  00398A  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8547  00398C  0100               	movlb	0	; () banked
  8548  00398E  6F82               	movwf	(??___fldiv+3)& (0+255),b
  8549  003990  0100               	movlb	0	; () banked
  8550  003992  517F               	movf	??___fldiv& (0+255),w,b
  8551  003994  0100               	movlb	0	; () banked
  8552  003996  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  8553  003998  0100               	movlb	0	; () banked
  8554  00399A  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  8555  00399C  0100               	movlb	0	; () banked
  8556  00399E  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  8557  0039A0  A4D8               	btfss	status,2,c
  8558  0039A2  D003               	goto	l6605
  8559                           
  8560                           ; BSR set to: 0
  8561                           
  8562                           ; BSR set to: 0
  8563  0039A4  0100               	movlb	0	; () banked
  8564  0039A6  A177               	btfss	___fldiv@b& (0+255),0,b
  8565  0039A8  D003               	goto	l1375
  8566  0039AA                     l6605:
  8567                           
  8568                           ; BSR set to: 0
  8569  0039AA  0E01               	movlw	1
  8570  0039AC  0100               	movlb	0	; () banked
  8571  0039AE  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8572  0039B0                     l1375:
  8573                           
  8574                           ; BSR set to: 0
  8575  0039B0  0100               	movlb	0	; () banked
  8576  0039B2  518F               	movf	___fldiv@aexp& (0+255),w,b
  8577  0039B4  0100               	movlb	0	; () banked
  8578  0039B6  B4D8               	btfsc	status,2,c
  8579  0039B8  D023               	goto	l6615
  8580                           
  8581                           ; BSR set to: 0
  8582  0039BA  0E01               	movlw	1
  8583  0039BC  0100               	movlb	0	; () banked
  8584  0039BE  2777               	addwf	___fldiv@b& (0+255),f,b
  8585  0039C0  0E00               	movlw	0
  8586  0039C2  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  8587  0039C4  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  8588  0039C6  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  8589                           
  8590                           ; BSR set to: 0
  8591  0039C8  0100               	movlb	0	; () banked
  8592  0039CA  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  8593  0039CC  D019               	goto	l6615
  8594                           
  8595                           ; BSR set to: 0
  8596  0039CE  C077  F07F         	movff	___fldiv@b,??___fldiv
  8597  0039D2  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  8598  0039D6  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  8599  0039DA  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  8600  0039DE  0100               	movlb	0	; () banked
  8601  0039E0  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  8602  0039E2  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  8603  0039E4  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  8604  0039E6  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  8605  0039E8  337F               	rrcf	??___fldiv& (0+255),f,b
  8606  0039EA  C07F  F077         	movff	??___fldiv,___fldiv@b
  8607  0039EE  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  8608  0039F2  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  8609  0039F6  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  8610                           
  8611                           ; BSR set to: 0
  8612  0039FA  0100               	movlb	0	; () banked
  8613  0039FC  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  8614  0039FE  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8615  003A00                     l6615:
  8616                           
  8617                           ; BSR set to: 0
  8618  003A00  0100               	movlb	0	; () banked
  8619  003A02  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8620  003A04  D014               	goto	l6619
  8621  003A06  0100               	movlb	0	; () banked
  8622  003A08  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8623  003A0A  E104               	bnz	u8340
  8624  003A0C  0100               	movlb	0	; () banked
  8625  003A0E  2988               	incf	___fldiv@new_exp& (0+255),w,b
  8626  003A10  A0D8               	btfss	status,0,c
  8627  003A12  D00D               	goto	l6619
  8628  003A14                     u8340:
  8629                           
  8630                           ; BSR set to: 0
  8631  003A14  0E00               	movlw	0
  8632  003A16  0100               	movlb	0	; () banked
  8633  003A18  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8634  003A1A  6988               	setf	___fldiv@new_exp& (0+255),b
  8635  003A1C  0E00               	movlw	0
  8636  003A1E  0100               	movlb	0	; () banked
  8637  003A20  6F77               	movwf	___fldiv@b& (0+255),b
  8638  003A22  0E00               	movlw	0
  8639  003A24  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8640  003A26  0E00               	movlw	0
  8641  003A28  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8642  003A2A  0E00               	movlw	0
  8643  003A2C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8644  003A2E                     l6619:
  8645                           
  8646                           ; BSR set to: 0
  8647  003A2E  0100               	movlb	0	; () banked
  8648  003A30  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8649  003A32  D007               	goto	l6621
  8650  003A34  0100               	movlb	0	; () banked
  8651  003A36  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8652  003A38  E115               	bnz	l6623
  8653  003A3A  0100               	movlb	0	; () banked
  8654  003A3C  0588               	decf	___fldiv@new_exp& (0+255),w,b
  8655  003A3E  B0D8               	btfsc	status,0,c
  8656  003A40  D011               	goto	l6623
  8657  003A42                     l6621:
  8658                           
  8659                           ; BSR set to: 0
  8660  003A42  0E00               	movlw	0
  8661  003A44  0100               	movlb	0	; () banked
  8662  003A46  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8663  003A48  0E00               	movlw	0
  8664  003A4A  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8665  003A4C  0E00               	movlw	0
  8666  003A4E  0100               	movlb	0	; () banked
  8667  003A50  6F77               	movwf	___fldiv@b& (0+255),b
  8668  003A52  0E00               	movlw	0
  8669  003A54  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8670  003A56  0E00               	movlw	0
  8671  003A58  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8672  003A5A  0E00               	movlw	0
  8673  003A5C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8674  003A5E  0E00               	movlw	0
  8675  003A60  0100               	movlb	0	; () banked
  8676  003A62  6F83               	movwf	___fldiv@sign& (0+255),b
  8677  003A64                     l6623:
  8678                           
  8679                           ; BSR set to: 0
  8680  003A64  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  8681                           
  8682                           ; BSR set to: 0
  8683  003A68  0100               	movlb	0	; () banked
  8684  003A6A  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  8685  003A6C  D003               	goto	l6629
  8686                           
  8687                           ; BSR set to: 0
  8688  003A6E  0100               	movlb	0	; () banked
  8689  003A70  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8690  003A72  D002               	goto	l6631
  8691  003A74                     l6629:
  8692                           
  8693                           ; BSR set to: 0
  8694  003A74  0100               	movlb	0	; () banked
  8695  003A76  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  8696  003A78                     l6631:
  8697                           
  8698                           ; BSR set to: 0
  8699  003A78  0100               	movlb	0	; () banked
  8700  003A7A  90D8               	bcf	status,0,c
  8701  003A7C  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  8702  003A7E  0100               	movlb	0	; () banked
  8703  003A80  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8704                           
  8705                           ; BSR set to: 0
  8706  003A82  0100               	movlb	0	; () banked
  8707  003A84  5183               	movf	___fldiv@sign& (0+255),w,b
  8708  003A86  0100               	movlb	0	; () banked
  8709  003A88  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8710                           
  8711                           ; BSR set to: 0
  8712  003A8A  C077  F077         	movff	___fldiv@b,?___fldiv
  8713  003A8E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8714  003A92  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8715  003A96  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8716  003A9A  0012               	return	
  8717  003A9C                     __end_of___fldiv:
  8718                           	opt stack 0
  8719                           tblptru	equ	0xFF8
  8720                           tblptrh	equ	0xFF7
  8721                           tblptrl	equ	0xFF6
  8722                           tablat	equ	0xFF5
  8723                           prodh	equ	0xFF4
  8724                           prodl	equ	0xFF3
  8725                           postinc0	equ	0xFEE
  8726                           wreg	equ	0xFE8
  8727                           postdec1	equ	0xFE5
  8728                           fsr1l	equ	0xFE1
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           
  8735 ;; *************** function _delay_s *****************
  8736 ;; Defined at:
  8737 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  value_s         1    wreg     unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  value_s         1   31[BANK0 ] unsigned char 
  8742 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;		None               void
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;Total ram usage:        2 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    6
  8759 ;; This function calls:
  8760 ;;		_delay_ms
  8761 ;; This function is called by:
  8762 ;;		_park_routine
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text23
  8767  005CE8                     __ptext23:
  8768                           	opt stack 0
  8769  005CE8                     _delay_s:
  8770                           	opt stack 23
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;incstack = 0
  8774                           ;delay_s@value_s stored from wreg
  8775  005CE8  0100               	movlb	0	; () banked
  8776  005CEA  6F7F               	movwf	delay_s@value_s& (0+255),b
  8777                           
  8778                           ;src\delay.c: 104: unsigned char repeat_loop;
  8779                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  8780  005CEC  0E00               	movlw	0
  8781  005CEE  0100               	movlb	0	; () banked
  8782  005CF0  6F80               	movwf	delay_s@repeat_loop& (0+255),b
  8783  005CF2  D009               	goto	l5427
  8784  005CF4                     l5423:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;src\delay.c: 107: delay_ms (1000);
  8788  005CF4  0E03               	movlw	3
  8789  005CF6  0100               	movlb	0	; () banked
  8790  005CF8  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8791  005CFA  0EE8               	movlw	232
  8792  005CFC  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  8793  005CFE  EC0A  F02E         	call	_delay_ms	;wreg free
  8794  005D02  0100               	movlb	0	; () banked
  8795  005D04  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
  8796  005D06                     l5427:
  8797                           
  8798                           ; BSR set to: 0
  8799  005D06  0100               	movlb	0	; () banked
  8800  005D08  517F               	movf	delay_s@value_s& (0+255),w,b
  8801  005D0A  0100               	movlb	0	; () banked
  8802  005D0C  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
  8803  005D0E  B0D8               	btfsc	status,0,c
  8804  005D10  0012               	return	
  8805  005D12  D7F0               	goto	l5423
  8806  005D14                     __end_of_delay_s:
  8807                           	opt stack 0
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           postinc0	equ	0xFEE
  8815                           wreg	equ	0xFE8
  8816                           postdec1	equ	0xFE5
  8817                           fsr1l	equ	0xFE1
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           fsr2h	equ	0xFDA
  8821                           fsr2l	equ	0xFD9
  8822                           status	equ	0xFD8
  8823                           
  8824 ;; *************** function _delay_ms *****************
  8825 ;; Defined at:
  8826 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  value_ms        2   29[BANK0 ] unsigned int 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;		None
  8831 ;; Return value:  Size  Location     Type
  8832 ;;		None               void
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;Total ram usage:        2 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    5
  8847 ;; This function calls:
  8848 ;;		___wmul
  8849 ;; This function is called by:
  8850 ;;		_delay_s
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text24
  8855  005C14                     __ptext24:
  8856                           	opt stack 0
  8857  005C14                     _delay_ms:
  8858                           	opt stack 23
  8859                           
  8860                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;incstack = 0
  8864  005C14  C0E7  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  8865  005C18  0100               	movlb	0	; () banked
  8866  005C1A  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
  8867  005C1C  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
  8868  005C20  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  8869  005C24  EC43  F02E         	call	___wmul	;wreg free
  8870  005C28  C077  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
  8871  005C2C  C078  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  8872                           
  8873                           ;src\delay.c: 75: while (clock_counter_reference) {
  8874  005C30  D007               	goto	l569
  8875  005C32                     l5277:
  8876                           
  8877                           ;src\delay.c: 85: _delay(240);
  8878  005C32  0E50               	movlw	80
  8879  005C34                     u9067:
  8880  005C34  2EE8               	decfsz	wreg,f,c
  8881  005C36  D7FE               	goto	u9067
  8882                           
  8883                           ;src\delay.c: 88: clock_counter_reference--;
  8884  005C38  0100               	movlb	0	; () banked
  8885  005C3A  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8886  005C3C  A0D8               	btfss	status,0,c
  8887  005C3E  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8888  005C40                     l569:
  8889  005C40  0100               	movlb	0	; () banked
  8890  005C42  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8891  005C44  0100               	movlb	0	; () banked
  8892  005C46  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8893  005C48  B4D8               	btfsc	status,2,c
  8894  005C4A  0012               	return	
  8895  005C4C  D7F2               	goto	l5277
  8896  005C4E                     __end_of_delay_ms:
  8897                           	opt stack 0
  8898                           tblptru	equ	0xFF8
  8899                           tblptrh	equ	0xFF7
  8900                           tblptrl	equ	0xFF6
  8901                           tablat	equ	0xFF5
  8902                           prodh	equ	0xFF4
  8903                           prodl	equ	0xFF3
  8904                           postinc0	equ	0xFEE
  8905                           wreg	equ	0xFE8
  8906                           postdec1	equ	0xFE5
  8907                           fsr1l	equ	0xFE1
  8908                           postinc2	equ	0xFDE
  8909                           postdec2	equ	0xFDD
  8910                           fsr2h	equ	0xFDA
  8911                           fsr2l	equ	0xFD9
  8912                           status	equ	0xFD8
  8913                           
  8914 ;; *************** function ___wmul *****************
  8915 ;; Defined at:
  8916 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  multiplier      2   23[BANK0 ] unsigned int 
  8919 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;  product         2   27[BANK0 ] unsigned int 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  2   23[BANK0 ] unsigned int 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, prodl, prodh
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:        6 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    4
  8938 ;; This function calls:
  8939 ;;		Nothing
  8940 ;; This function is called by:
  8941 ;;		_delay_ms
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text25
  8946  005C86                     __ptext25:
  8947                           	opt stack 0
  8948  005C86                     ___wmul:
  8949                           	opt stack 23
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;incstack = 0
  8953  005C86  0100               	movlb	0	; () banked
  8954  005C88  5177               	movf	___wmul@multiplier& (0+255),w,b
  8955  005C8A  0100               	movlb	0	; () banked
  8956  005C8C  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8957  005C8E  CFF3 F07B          	movff	prodl,___wmul@product
  8958  005C92  CFF4 F07C          	movff	prodh,___wmul@product+1
  8959  005C96  0100               	movlb	0	; () banked
  8960  005C98  5177               	movf	___wmul@multiplier& (0+255),w,b
  8961  005C9A  0100               	movlb	0	; () banked
  8962  005C9C  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8963  005C9E  50F3               	movf	prodl,w,c
  8964  005CA0  0100               	movlb	0	; () banked
  8965  005CA2  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8966  005CA4  0100               	movlb	0	; () banked
  8967  005CA6  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8968  005CA8  0100               	movlb	0	; () banked
  8969  005CAA  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8970  005CAC  50F3               	movf	prodl,w,c
  8971  005CAE  0100               	movlb	0	; () banked
  8972  005CB0  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8973                           
  8974                           ; BSR set to: 0
  8975  005CB2  C07B  F077         	movff	___wmul@product,?___wmul
  8976  005CB6  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  8977  005CBA  0012               	return	
  8978  005CBC                     __end_of___wmul:
  8979                           	opt stack 0
  8980                           tblptru	equ	0xFF8
  8981                           tblptrh	equ	0xFF7
  8982                           tblptrl	equ	0xFF6
  8983                           tablat	equ	0xFF5
  8984                           prodh	equ	0xFF4
  8985                           prodl	equ	0xFF3
  8986                           postinc0	equ	0xFEE
  8987                           wreg	equ	0xFE8
  8988                           postdec1	equ	0xFE5
  8989                           fsr1l	equ	0xFE1
  8990                           postinc2	equ	0xFDE
  8991                           postdec2	equ	0xFDD
  8992                           fsr2h	equ	0xFDA
  8993                           fsr2l	equ	0xFD9
  8994                           status	equ	0xFD8
  8995                           
  8996 ;; *************** function _can_send *****************
  8997 ;; Defined at:
  8998 ;;		line 335 in file "parcheggio.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  9003 ;; Return value:  Size  Location     Type
  9004 ;;		None               void
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;Total ram usage:        0 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    5
  9019 ;; This function calls:
  9020 ;;		_CANisTxReady
  9021 ;;		_CANsendMessage
  9022 ;; This function is called by:
  9023 ;;		_park_routine
  9024 ;;		_parallelo
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text26
  9029  0052B8                     __ptext26:
  9030                           	opt stack 0
  9031  0052B8                     _can_send:
  9032                           	opt stack 23
  9033                           
  9034                           ;parcheggio.c: 336: if (PORTBbits.RB5 == 1) {
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;incstack = 0
  9038  0052B8  AA81               	btfss	3969,5,c	;volatile
  9039  0052BA  D063               	goto	l5309
  9040  0052BC                     l5289:
  9041  0052BC  EC8A  F02E         	call	_CANisTxReady	;wreg free
  9042  0052C0  06E8               	decf	wreg,f,c
  9043  0052C2  A4D8               	btfss	status,2,c
  9044  0052C4  D7FB               	goto	l5289
  9045                           
  9046                           ;parcheggio.c: 338: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9047  0052C6  0E05               	movlw	5
  9048  0052C8  0100               	movlb	0	; () banked
  9049  0052CA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9050  0052CC  0E00               	movlw	0
  9051  0052CE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9052  0052D0  0E00               	movlw	0
  9053  0052D2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9054  0052D4  0E00               	movlw	0
  9055  0052D6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9056  0052D8  0E73               	movlw	low _data_steering
  9057  0052DA  0100               	movlb	0	; () banked
  9058  0052DC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9059  0052DE  0E01               	movlw	high _data_steering
  9060  0052E0  0100               	movlb	0	; () banked
  9061  0052E2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9062  0052E4  0E08               	movlw	8
  9063  0052E6  0100               	movlb	0	; () banked
  9064  0052E8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9065  0052EA  0EBC               	movlw	188
  9066  0052EC  0100               	movlb	0	; () banked
  9067  0052EE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9068  0052F0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9069                           
  9070                           ;parcheggio.c: 339: data_speed[0] = set_speed;
  9071  0052F4  C0E5  F16B         	movff	_set_speed,_data_speed
  9072                           
  9073                           ;parcheggio.c: 340: data_speed[1] = (set_speed >> 8);
  9074  0052F8  0100               	movlb	0	; () banked
  9075  0052FA  51E6               	movf	(_set_speed+1)& (0+255),w,b
  9076  0052FC  0101               	movlb	1	; () banked
  9077  0052FE  6F6C               	movwf	(_data_speed+1)& (0+255),b
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;parcheggio.c: 341: data_speed[2] = dir;
  9081  005300  0E00               	movlw	0
  9082  005302  B444               	btfsc	_dir/(0+8),_dir& (0+7),c
  9083  005304  0E01               	movlw	1
  9084  005306  0101               	movlb	1	; () banked
  9085  005308  6F6D               	movwf	(_data_speed+2)& (0+255),b
  9086  00530A                     l5299:
  9087  00530A  EC8A  F02E         	call	_CANisTxReady	;wreg free
  9088  00530E  06E8               	decf	wreg,f,c
  9089  005310  A4D8               	btfss	status,2,c
  9090  005312  D7FB               	goto	l5299
  9091                           
  9092                           ;parcheggio.c: 343: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9093  005314  0E03               	movlw	3
  9094  005316  0100               	movlb	0	; () banked
  9095  005318  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9096  00531A  0E00               	movlw	0
  9097  00531C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9098  00531E  0E00               	movlw	0
  9099  005320  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9100  005322  0E00               	movlw	0
  9101  005324  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9102  005326  0E6B               	movlw	low _data_speed
  9103  005328  0100               	movlb	0	; () banked
  9104  00532A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9105  00532C  0E01               	movlw	high _data_speed
  9106  00532E  0100               	movlb	0	; () banked
  9107  005330  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9108  005332  0E08               	movlw	8
  9109  005334  0100               	movlb	0	; () banked
  9110  005336  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9111  005338  0EBC               	movlw	188
  9112  00533A  0100               	movlb	0	; () banked
  9113  00533C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9114  00533E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9115  005342                     l5303:
  9116  005342  EC8A  F02E         	call	_CANisTxReady	;wreg free
  9117  005346  06E8               	decf	wreg,f,c
  9118  005348  A4D8               	btfss	status,2,c
  9119  00534A  D7FB               	goto	l5303
  9120                           
  9121                           ;parcheggio.c: 345: data_brake[1] = 0;
  9122  00534C  0E00               	movlw	0
  9123  00534E  0101               	movlb	1	; () banked
  9124  005350  6F5C               	movwf	(_data_brake+1)& (0+255),b
  9125                           
  9126                           ; BSR set to: 1
  9127                           ;parcheggio.c: 346: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9128  005352  0E04               	movlw	4
  9129  005354  0100               	movlb	0	; () banked
  9130  005356  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9131  005358  0E00               	movlw	0
  9132  00535A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9133  00535C  0E00               	movlw	0
  9134  00535E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9135  005360  0E00               	movlw	0
  9136  005362  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9137  005364  0E5B               	movlw	low _data_brake
  9138  005366  0100               	movlb	0	; () banked
  9139  005368  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9140  00536A  0E01               	movlw	high _data_brake
  9141  00536C  0100               	movlb	0	; () banked
  9142  00536E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9143  005370  0E08               	movlw	8
  9144  005372  0100               	movlb	0	; () banked
  9145  005374  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9146  005376  0EBC               	movlw	188
  9147  005378  0100               	movlb	0	; () banked
  9148  00537A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9149  00537C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9150                           
  9151                           ;parcheggio.c: 347: } else {
  9152  005380  0012               	return	
  9153  005382                     l5309:
  9154                           
  9155                           ;parcheggio.c: 348: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9156  005382  0E0E               	movlw	14
  9157  005384  0100               	movlb	0	; () banked
  9158  005386  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9159  005388  0E00               	movlw	0
  9160  00538A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9161  00538C  0E00               	movlw	0
  9162  00538E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9163  005390  0E00               	movlw	0
  9164  005392  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9165  005394  0E63               	movlw	low _data_correction
  9166  005396  0100               	movlb	0	; () banked
  9167  005398  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9168  00539A  0E01               	movlw	high _data_correction
  9169  00539C  0100               	movlb	0	; () banked
  9170  00539E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9171  0053A0  0E08               	movlw	8
  9172  0053A2  0100               	movlb	0	; () banked
  9173  0053A4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9174  0053A6  0EBC               	movlw	188
  9175  0053A8  0100               	movlb	0	; () banked
  9176  0053AA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9177  0053AC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9178                           
  9179                           ;parcheggio.c: 349: unsigned char data_correction1[];
  9180                           ;parcheggio.c: 350: data_correction1[0] = data_correction[0];
  9181  0053B0  EE20  F087         	lfsr	2,can_send@data_correction1
  9182  0053B4  C163  FFDF         	movff	_data_correction,indf2
  9183                           
  9184                           ;parcheggio.c: 351: data_correction1[1] = 0;
  9185  0053B8  0E00               	movlw	0
  9186  0053BA  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  9187                           
  9188                           ;parcheggio.c: 352: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9189  0053BE  0EAA               	movlw	170
  9190  0053C0  0100               	movlb	0	; () banked
  9191  0053C2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9192  0053C4  0E00               	movlw	0
  9193  0053C6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9194  0053C8  0E00               	movlw	0
  9195  0053CA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9196  0053CC  0E00               	movlw	0
  9197  0053CE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9198  0053D0  0E87               	movlw	low can_send@data_correction1
  9199  0053D2  0100               	movlb	0	; () banked
  9200  0053D4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9201  0053D6  0E00               	movlw	high can_send@data_correction1
  9202  0053D8  0100               	movlb	0	; () banked
  9203  0053DA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9204  0053DC  0E08               	movlw	8
  9205  0053DE  0100               	movlb	0	; () banked
  9206  0053E0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9207  0053E2  0EBC               	movlw	188
  9208  0053E4  0100               	movlb	0	; () banked
  9209  0053E6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9210  0053E8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9211  0053EC  0012               	return	
  9212  0053EE                     __end_of_can_send:
  9213                           	opt stack 0
  9214                           tblptru	equ	0xFF8
  9215                           tblptrh	equ	0xFF7
  9216                           tblptrl	equ	0xFF6
  9217                           tablat	equ	0xFF5
  9218                           prodh	equ	0xFF4
  9219                           prodl	equ	0xFF3
  9220                           postinc0	equ	0xFEE
  9221                           wreg	equ	0xFE8
  9222                           postdec1	equ	0xFE5
  9223                           fsr1l	equ	0xFE1
  9224                           indf2	equ	0xFDF
  9225                           postinc2	equ	0xFDE
  9226                           postdec2	equ	0xFDD
  9227                           fsr2h	equ	0xFDA
  9228                           fsr2l	equ	0xFD9
  9229                           status	equ	0xFD8
  9230                           
  9231 ;; *************** function _CANsendMessage *****************
  9232 ;; Defined at:
  9233 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  identifier      4   23[BANK0 ] unsigned long 
  9236 ;;  data            2   27[BANK0 ] PTR unsigned char 
  9237 ;;		 -> can_send@data_correction1(0), data_correction(8), data_speed(8), data_test(8), 
  9238 ;;		 -> data_brake(8), data_steering(8), data(8), 
  9239 ;;  dataLength      1   29[BANK0 ] unsigned char 
  9240 ;;  flags           1   30[BANK0 ] enum E16335
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  tamp            4   35[BANK0 ] unsigned long 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;		None               void
  9245 ;; Registers used:
  9246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9252 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;Total ram usage:       16 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    4
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_park_search
  9263 ;;		_park_routine
  9264 ;;		_can_send
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text27
  9269  001858                     __ptext27:
  9270                           	opt stack 0
  9271  001858                     _CANsendMessage:
  9272                           	opt stack 23
  9273                           
  9274                           ;inc\CANlib.h: 296: unsigned long tamp;
  9275                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  9276                           
  9277                           ;incstack = 0
  9278  001858  010F               	movlb	15	; () banked
  9279  00185A  B740               	btfsc	64,3,b	;volatile
  9280  00185C  D13F               	goto	l363
  9281                           
  9282                           ; BSR set to: 15
  9283                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  9284  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  9285                           
  9286                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  9287  001862  0100               	movlb	0	; () banked
  9288  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9289  001866  D003               	goto	l364
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  9293  001868  010F               	movlb	15	; () banked
  9294  00186A  8D45               	bsf	69,6,b	;volatile
  9295  00186C  D002               	goto	l365
  9296  00186E                     l364:
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;inc\CANlib.h: 302: else
  9300                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  9301  00186E  010F               	movlb	15	; () banked
  9302  001870  9D45               	bcf	69,6,b	;volatile
  9303  001872                     l365:
  9304                           
  9305                           ; BSR set to: 15
  9306                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  9307  001872  0100               	movlb	0	; () banked
  9308  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9309  001876  D079               	goto	l366
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;inc\CANlib.h: 306: {
  9313                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  9314  001878  0100               	movlb	0	; () banked
  9315  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9316  00187C  0100               	movlb	0	; () banked
  9317  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9318  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9319  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9320  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  9324  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  9328  00188A  0E00               	movlw	0
  9329  00188C  0100               	movlb	0	; () banked
  9330  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9331  001890  0100               	movlb	0	; () banked
  9332  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9333  001894  0EFF               	movlw	255
  9334  001896  0100               	movlb	0	; () banked
  9335  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9336  00189A  0100               	movlb	0	; () banked
  9337  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9338  00189E  0E00               	movlw	0
  9339  0018A0  0100               	movlb	0	; () banked
  9340  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9341  0018A4  0100               	movlb	0	; () banked
  9342  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9343  0018A8  0E00               	movlw	0
  9344  0018AA  0100               	movlb	0	; () banked
  9345  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9346  0018AE  0100               	movlb	0	; () banked
  9347  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  9351  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9352  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9353  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9354  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9355  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9356  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9357  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9358  0018CE  0100               	movlb	0	; () banked
  9359  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9360  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9361  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9362  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9363  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  9367  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  9371  0018E6  0E00               	movlw	0
  9372  0018E8  010F               	movlb	15	; () banked
  9373  0018EA  6F42               	movwf	66,b	;volatile
  9374                           
  9375                           ; BSR set to: 15
  9376                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  9377  0018EC  010F               	movlb	15	; () banked
  9378  0018EE  8742               	bsf	66,3,b	;volatile
  9379                           
  9380                           ; BSR set to: 15
  9381                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  9382  0018F0  0100               	movlb	0	; () banked
  9383  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9384  0018F4  D002               	goto	l367
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  9388  0018F6  010F               	movlb	15	; () banked
  9389  0018F8  8142               	bsf	66,0,b	;volatile
  9390  0018FA                     l367:
  9391                           
  9392                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  9393  0018FA  0100               	movlb	0	; () banked
  9394  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9395  0018FE  D002               	goto	l368
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  9399  001900  010F               	movlb	15	; () banked
  9400  001902  8342               	bsf	66,1,b	;volatile
  9401  001904                     l368:
  9402                           
  9403                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  9404  001904  0100               	movlb	0	; () banked
  9405  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9406  001908  D002               	goto	l369
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  9410  00190A  010F               	movlb	15	; () banked
  9411  00190C  8B42               	bsf	66,5,b	;volatile
  9412  00190E                     l369:
  9413                           
  9414                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  9415  00190E  0100               	movlb	0	; () banked
  9416  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9417  001912  D002               	goto	l370
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  9421  001914  010F               	movlb	15	; () banked
  9422  001916  8D42               	bsf	66,6,b	;volatile
  9423  001918                     l370:
  9424                           
  9425                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  9426  001918  0100               	movlb	0	; () banked
  9427  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9428  00191C  D002               	goto	l4481
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  9432  00191E  010F               	movlb	15	; () banked
  9433  001920  8F42               	bsf	66,7,b	;volatile
  9434  001922                     l4481:
  9435                           
  9436                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  9437  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9438  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9439  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9440  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9441  001932  0E16               	movlw	22
  9442  001934  D006               	goto	u4870
  9443  001936                     u4875:
  9444  001936  0100               	movlb	0	; () banked
  9445  001938  90D8               	bcf	status,0,c
  9446  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9447  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9448  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9449  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9450  001942                     u4870:
  9451  001942  2EE8               	decfsz	wreg,f,c
  9452  001944  D7F8               	goto	u4875
  9453  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9454  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9455  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9456  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  9460  001956  0100               	movlb	0	; () banked
  9461  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9462  00195A  0100               	movlb	0	; () banked
  9463  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9464  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9465  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9466  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  9470  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9471                           
  9472                           ;inc\CANlib.h: 332: }
  9473  001968  D059               	goto	l4501
  9474  00196A                     l366:
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;inc\CANlib.h: 334: else
  9478                           ;inc\CANlib.h: 336: {
  9479                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  9480  00196A  010F               	movlb	15	; () banked
  9481  00196C  9742               	bcf	66,3,b	;volatile
  9482                           
  9483                           ; BSR set to: 15
  9484                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  9485  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9486  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9487  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9488  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9489  00197E  0E04               	movlw	4
  9490  001980  D006               	goto	u4880
  9491  001982                     u4885:
  9492  001982  0100               	movlb	0	; () banked
  9493  001984  90D8               	bcf	status,0,c
  9494  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9495  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9496  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9497  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9498  00198E                     u4880:
  9499  00198E  2EE8               	decfsz	wreg,f,c
  9500  001990  D7F8               	goto	u4885
  9501  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9502  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9503  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9504  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  9508  0019A2  0100               	movlb	0	; () banked
  9509  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9510  0019A6  0100               	movlb	0	; () banked
  9511  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9512  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9513  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9514  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  9518  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  9522  0019B4  0E07               	movlw	7
  9523  0019B6  0100               	movlb	0	; () banked
  9524  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9525  0019BA  0100               	movlb	0	; () banked
  9526  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9527  0019BE  0E00               	movlw	0
  9528  0019C0  0100               	movlb	0	; () banked
  9529  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9530  0019C4  0100               	movlb	0	; () banked
  9531  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9532  0019C8  0E00               	movlw	0
  9533  0019CA  0100               	movlb	0	; () banked
  9534  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9535  0019CE  0100               	movlb	0	; () banked
  9536  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9537  0019D2  0E00               	movlw	0
  9538  0019D4  0100               	movlb	0	; () banked
  9539  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9540  0019D8  0100               	movlb	0	; () banked
  9541  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  9545  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9546  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9547  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9548  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9549  0019EC  0E05               	movlw	5
  9550  0019EE                     u4895:
  9551  0019EE  90D8               	bcf	status,0,c
  9552  0019F0  0100               	movlb	0	; () banked
  9553  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9554  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9555  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9556  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9557  0019FA  2EE8               	decfsz	wreg,f,c
  9558  0019FC  D7F8               	goto	u4895
  9559  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9560  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9561  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9562  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  9566  001A0E  010F               	movlb	15	; () banked
  9567  001A10  5142               	movf	66,w,b	;volatile
  9568  001A12  0B1F               	andlw	31
  9569  001A14  010F               	movlb	15	; () banked
  9570  001A16  6F42               	movwf	66,b	;volatile
  9571                           
  9572                           ; BSR set to: 15
  9573                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  9574  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  9575  001A1C                     l4501:
  9576                           
  9577                           ;inc\CANlib.h: 347: }
  9578                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  9579  001A1C  0100               	movlb	0	; () banked
  9580  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9581  001A20  D003               	goto	l373
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  9585  001A22  010F               	movlb	15	; () banked
  9586  001A24  8140               	bsf	64,0,b	;volatile
  9587  001A26  D002               	goto	l374
  9588  001A28                     l373:
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;inc\CANlib.h: 351: else
  9592                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  9593  001A28  010F               	movlb	15	; () banked
  9594  001A2A  9140               	bcf	64,0,b	;volatile
  9595  001A2C                     l374:
  9596                           
  9597                           ; BSR set to: 15
  9598                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  9599  001A2C  0100               	movlb	0	; () banked
  9600  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9601  001A30  D003               	goto	l375
  9602                           
  9603                           ; BSR set to: 0
  9604                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  9605  001A32  010F               	movlb	15	; () banked
  9606  001A34  8340               	bsf	64,1,b	;volatile
  9607  001A36  D002               	goto	l4507
  9608  001A38                     l375:
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;inc\CANlib.h: 355: else
  9612                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  9613  001A38  010F               	movlb	15	; () banked
  9614  001A3A  9340               	bcf	64,1,b	;volatile
  9615  001A3C                     l4507:
  9616                           
  9617                           ; BSR set to: 15
  9618                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  9619  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9620  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9621  001A44  50DF               	movf	indf2,w,c
  9622  001A46  010F               	movlb	15	; () banked
  9623  001A48  6F46               	movwf	70,b	;volatile
  9624                           
  9625                           ; BSR set to: 15
  9626                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  9627  001A4A  0100               	movlb	0	; () banked
  9628  001A4C  EE20 F001          	lfsr	2,1
  9629  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  9630  001A52  26D9               	addwf	fsr2l,f,c
  9631  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9632  001A56  22DA               	addwfc	fsr2h,f,c
  9633  001A58  50DF               	movf	indf2,w,c
  9634  001A5A  010F               	movlb	15	; () banked
  9635  001A5C  6F47               	movwf	71,b	;volatile
  9636                           
  9637                           ; BSR set to: 15
  9638                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  9639  001A5E  0100               	movlb	0	; () banked
  9640  001A60  EE20 F002          	lfsr	2,2
  9641  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  9642  001A66  26D9               	addwf	fsr2l,f,c
  9643  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9644  001A6A  22DA               	addwfc	fsr2h,f,c
  9645  001A6C  50DF               	movf	indf2,w,c
  9646  001A6E  010F               	movlb	15	; () banked
  9647  001A70  6F48               	movwf	72,b	;volatile
  9648                           
  9649                           ; BSR set to: 15
  9650                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  9651  001A72  0100               	movlb	0	; () banked
  9652  001A74  EE20 F003          	lfsr	2,3
  9653  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  9654  001A7A  26D9               	addwf	fsr2l,f,c
  9655  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9656  001A7E  22DA               	addwfc	fsr2h,f,c
  9657  001A80  50DF               	movf	indf2,w,c
  9658  001A82  010F               	movlb	15	; () banked
  9659  001A84  6F49               	movwf	73,b	;volatile
  9660                           
  9661                           ; BSR set to: 15
  9662                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  9663  001A86  0100               	movlb	0	; () banked
  9664  001A88  EE20 F004          	lfsr	2,4
  9665  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  9666  001A8E  26D9               	addwf	fsr2l,f,c
  9667  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9668  001A92  22DA               	addwfc	fsr2h,f,c
  9669  001A94  50DF               	movf	indf2,w,c
  9670  001A96  010F               	movlb	15	; () banked
  9671  001A98  6F4A               	movwf	74,b	;volatile
  9672                           
  9673                           ; BSR set to: 15
  9674                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  9675  001A9A  0100               	movlb	0	; () banked
  9676  001A9C  EE20 F005          	lfsr	2,5
  9677  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  9678  001AA2  26D9               	addwf	fsr2l,f,c
  9679  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9680  001AA6  22DA               	addwfc	fsr2h,f,c
  9681  001AA8  50DF               	movf	indf2,w,c
  9682  001AAA  010F               	movlb	15	; () banked
  9683  001AAC  6F4B               	movwf	75,b	;volatile
  9684                           
  9685                           ; BSR set to: 15
  9686                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  9687  001AAE  0100               	movlb	0	; () banked
  9688  001AB0  EE20 F006          	lfsr	2,6
  9689  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9690  001AB6  26D9               	addwf	fsr2l,f,c
  9691  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9692  001ABA  22DA               	addwfc	fsr2h,f,c
  9693  001ABC  50DF               	movf	indf2,w,c
  9694  001ABE  010F               	movlb	15	; () banked
  9695  001AC0  6F4C               	movwf	76,b	;volatile
  9696                           
  9697                           ; BSR set to: 15
  9698                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  9699  001AC2  0100               	movlb	0	; () banked
  9700  001AC4  EE20 F007          	lfsr	2,7
  9701  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9702  001ACA  26D9               	addwf	fsr2l,f,c
  9703  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9704  001ACE  22DA               	addwfc	fsr2h,f,c
  9705  001AD0  50DF               	movf	indf2,w,c
  9706  001AD2  010F               	movlb	15	; () banked
  9707  001AD4  6F4D               	movwf	77,b	;volatile
  9708                           
  9709                           ; BSR set to: 15
  9710                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  9711  001AD6  010F               	movlb	15	; () banked
  9712  001AD8  8740               	bsf	64,3,b	;volatile
  9713                           
  9714                           ; BSR set to: 15
  9715                           ;inc\CANlib.h: 368: return;
  9716  001ADA  0012               	return	
  9717  001ADC                     l363:
  9718                           
  9719                           ; BSR set to: 15
  9720                           ;inc\CANlib.h: 369: }
  9721                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  9722  001ADC  010F               	movlb	15	; () banked
  9723  001ADE  B730               	btfsc	48,3,b	;volatile
  9724  001AE0  D13F               	goto	l378
  9725                           
  9726                           ; BSR set to: 15
  9727                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  9728  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  9729                           
  9730                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  9731  001AE6  0100               	movlb	0	; () banked
  9732  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9733  001AEA  D003               	goto	l379
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  9737  001AEC  010F               	movlb	15	; () banked
  9738  001AEE  8D35               	bsf	53,6,b	;volatile
  9739  001AF0  D002               	goto	l380
  9740  001AF2                     l379:
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;inc\CANlib.h: 378: else
  9744                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  9745  001AF2  010F               	movlb	15	; () banked
  9746  001AF4  9D35               	bcf	53,6,b	;volatile
  9747  001AF6                     l380:
  9748                           
  9749                           ; BSR set to: 15
  9750                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  9751  001AF6  0100               	movlb	0	; () banked
  9752  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9753  001AFA  D079               	goto	l381
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;inc\CANlib.h: 382: {
  9757                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  9758  001AFC  0100               	movlb	0	; () banked
  9759  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9760  001B00  0100               	movlb	0	; () banked
  9761  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9762  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9763  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9764  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  9768  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  9772  001B0E  0E00               	movlw	0
  9773  001B10  0100               	movlb	0	; () banked
  9774  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9775  001B14  0100               	movlb	0	; () banked
  9776  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9777  001B18  0EFF               	movlw	255
  9778  001B1A  0100               	movlb	0	; () banked
  9779  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9780  001B1E  0100               	movlb	0	; () banked
  9781  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9782  001B22  0E00               	movlw	0
  9783  001B24  0100               	movlb	0	; () banked
  9784  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9785  001B28  0100               	movlb	0	; () banked
  9786  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9787  001B2C  0E00               	movlw	0
  9788  001B2E  0100               	movlb	0	; () banked
  9789  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9790  001B32  0100               	movlb	0	; () banked
  9791  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  9795  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9796  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9797  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9798  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9799  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9800  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9801  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9802  001B52  0100               	movlb	0	; () banked
  9803  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9804  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9805  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9806  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9807  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  9811  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  9815  001B6A  0E00               	movlw	0
  9816  001B6C  010F               	movlb	15	; () banked
  9817  001B6E  6F32               	movwf	50,b	;volatile
  9818                           
  9819                           ; BSR set to: 15
  9820                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  9821  001B70  010F               	movlb	15	; () banked
  9822  001B72  8732               	bsf	50,3,b	;volatile
  9823                           
  9824                           ; BSR set to: 15
  9825                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  9826  001B74  0100               	movlb	0	; () banked
  9827  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9828  001B78  D002               	goto	l382
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  9832  001B7A  010F               	movlb	15	; () banked
  9833  001B7C  8132               	bsf	50,0,b	;volatile
  9834  001B7E                     l382:
  9835                           
  9836                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  9837  001B7E  0100               	movlb	0	; () banked
  9838  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9839  001B82  D002               	goto	l383
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  9843  001B84  010F               	movlb	15	; () banked
  9844  001B86  8332               	bsf	50,1,b	;volatile
  9845  001B88                     l383:
  9846                           
  9847                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  9848  001B88  0100               	movlb	0	; () banked
  9849  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9850  001B8C  D002               	goto	l384
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  9854  001B8E  010F               	movlb	15	; () banked
  9855  001B90  8B32               	bsf	50,5,b	;volatile
  9856  001B92                     l384:
  9857                           
  9858                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  9859  001B92  0100               	movlb	0	; () banked
  9860  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9861  001B96  D002               	goto	l385
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  9865  001B98  010F               	movlb	15	; () banked
  9866  001B9A  8D32               	bsf	50,6,b	;volatile
  9867  001B9C                     l385:
  9868                           
  9869                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  9870  001B9C  0100               	movlb	0	; () banked
  9871  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9872  001BA0  D002               	goto	l4557
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  9876  001BA2  010F               	movlb	15	; () banked
  9877  001BA4  8F32               	bsf	50,7,b	;volatile
  9878  001BA6                     l4557:
  9879                           
  9880                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  9881  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9882  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9883  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9884  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9885  001BB6  0E16               	movlw	22
  9886  001BB8  D006               	goto	u5000
  9887  001BBA                     u5005:
  9888  001BBA  0100               	movlb	0	; () banked
  9889  001BBC  90D8               	bcf	status,0,c
  9890  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9891  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9892  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9893  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9894  001BC6                     u5000:
  9895  001BC6  2EE8               	decfsz	wreg,f,c
  9896  001BC8  D7F8               	goto	u5005
  9897  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9898  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9899  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9900  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  9904  001BDA  0100               	movlb	0	; () banked
  9905  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9906  001BDE  0100               	movlb	0	; () banked
  9907  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9908  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9909  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9910  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  9914  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9915                           
  9916                           ;inc\CANlib.h: 407: }
  9917  001BEC  D059               	goto	l4577
  9918  001BEE                     l381:
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;inc\CANlib.h: 409: else
  9922                           ;inc\CANlib.h: 411: {
  9923                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  9924  001BEE  010F               	movlb	15	; () banked
  9925  001BF0  9732               	bcf	50,3,b	;volatile
  9926                           
  9927                           ; BSR set to: 15
  9928                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  9929  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9930  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9931  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9932  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9933  001C02  0E04               	movlw	4
  9934  001C04  D006               	goto	u5010
  9935  001C06                     u5015:
  9936  001C06  0100               	movlb	0	; () banked
  9937  001C08  90D8               	bcf	status,0,c
  9938  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9939  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9940  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9941  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9942  001C12                     u5010:
  9943  001C12  2EE8               	decfsz	wreg,f,c
  9944  001C14  D7F8               	goto	u5015
  9945  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9946  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9947  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9948  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  9952  001C26  0100               	movlb	0	; () banked
  9953  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9954  001C2A  0100               	movlb	0	; () banked
  9955  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9956  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9957  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9958  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  9962  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  9966  001C38  0E07               	movlw	7
  9967  001C3A  0100               	movlb	0	; () banked
  9968  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9969  001C3E  0100               	movlb	0	; () banked
  9970  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9971  001C42  0E00               	movlw	0
  9972  001C44  0100               	movlb	0	; () banked
  9973  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9974  001C48  0100               	movlb	0	; () banked
  9975  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9976  001C4C  0E00               	movlw	0
  9977  001C4E  0100               	movlb	0	; () banked
  9978  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9979  001C52  0100               	movlb	0	; () banked
  9980  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9981  001C56  0E00               	movlw	0
  9982  001C58  0100               	movlb	0	; () banked
  9983  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9984  001C5C  0100               	movlb	0	; () banked
  9985  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  9989  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9990  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9991  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9992  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9993  001C70  0E05               	movlw	5
  9994  001C72                     u5025:
  9995  001C72  90D8               	bcf	status,0,c
  9996  001C74  0100               	movlb	0	; () banked
  9997  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9998  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9999  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10000  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10001  001C7E  2EE8               	decfsz	wreg,f,c
 10002  001C80  D7F8               	goto	u5025
 10003  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10004  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10005  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10006  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 10010  001C92  010F               	movlb	15	; () banked
 10011  001C94  5132               	movf	50,w,b	;volatile
 10012  001C96  0B1F               	andlw	31
 10013  001C98  010F               	movlb	15	; () banked
 10014  001C9A  6F32               	movwf	50,b	;volatile
 10015                           
 10016                           ; BSR set to: 15
 10017                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 10018  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 10019  001CA0                     l4577:
 10020                           
 10021                           ;inc\CANlib.h: 422: }
 10022                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 10023  001CA0  0100               	movlb	0	; () banked
 10024  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10025  001CA4  D003               	goto	l388
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 10029  001CA6  010F               	movlb	15	; () banked
 10030  001CA8  8130               	bsf	48,0,b	;volatile
 10031  001CAA  D002               	goto	l389
 10032  001CAC                     l388:
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;inc\CANlib.h: 426: else
 10036                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 10037  001CAC  010F               	movlb	15	; () banked
 10038  001CAE  9130               	bcf	48,0,b	;volatile
 10039  001CB0                     l389:
 10040                           
 10041                           ; BSR set to: 15
 10042                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 10043  001CB0  0100               	movlb	0	; () banked
 10044  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10045  001CB4  D003               	goto	l390
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 10049  001CB6  010F               	movlb	15	; () banked
 10050  001CB8  8330               	bsf	48,1,b	;volatile
 10051  001CBA  D002               	goto	l4583
 10052  001CBC                     l390:
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;inc\CANlib.h: 430: else
 10056                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 10057  001CBC  010F               	movlb	15	; () banked
 10058  001CBE  9330               	bcf	48,1,b	;volatile
 10059  001CC0                     l4583:
 10060                           
 10061                           ; BSR set to: 15
 10062                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 10063  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10064  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10065  001CC8  50DF               	movf	indf2,w,c
 10066  001CCA  010F               	movlb	15	; () banked
 10067  001CCC  6F36               	movwf	54,b	;volatile
 10068                           
 10069                           ; BSR set to: 15
 10070                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 10071  001CCE  0100               	movlb	0	; () banked
 10072  001CD0  EE20 F001          	lfsr	2,1
 10073  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
 10074  001CD6  26D9               	addwf	fsr2l,f,c
 10075  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10076  001CDA  22DA               	addwfc	fsr2h,f,c
 10077  001CDC  50DF               	movf	indf2,w,c
 10078  001CDE  010F               	movlb	15	; () banked
 10079  001CE0  6F37               	movwf	55,b	;volatile
 10080                           
 10081                           ; BSR set to: 15
 10082                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 10083  001CE2  0100               	movlb	0	; () banked
 10084  001CE4  EE20 F002          	lfsr	2,2
 10085  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10086  001CEA  26D9               	addwf	fsr2l,f,c
 10087  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10088  001CEE  22DA               	addwfc	fsr2h,f,c
 10089  001CF0  50DF               	movf	indf2,w,c
 10090  001CF2  010F               	movlb	15	; () banked
 10091  001CF4  6F38               	movwf	56,b	;volatile
 10092                           
 10093                           ; BSR set to: 15
 10094                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 10095  001CF6  0100               	movlb	0	; () banked
 10096  001CF8  EE20 F003          	lfsr	2,3
 10097  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10098  001CFE  26D9               	addwf	fsr2l,f,c
 10099  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10100  001D02  22DA               	addwfc	fsr2h,f,c
 10101  001D04  50DF               	movf	indf2,w,c
 10102  001D06  010F               	movlb	15	; () banked
 10103  001D08  6F39               	movwf	57,b	;volatile
 10104                           
 10105                           ; BSR set to: 15
 10106                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 10107  001D0A  0100               	movlb	0	; () banked
 10108  001D0C  EE20 F004          	lfsr	2,4
 10109  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
 10110  001D12  26D9               	addwf	fsr2l,f,c
 10111  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10112  001D16  22DA               	addwfc	fsr2h,f,c
 10113  001D18  50DF               	movf	indf2,w,c
 10114  001D1A  010F               	movlb	15	; () banked
 10115  001D1C  6F3A               	movwf	58,b	;volatile
 10116                           
 10117                           ; BSR set to: 15
 10118                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 10119  001D1E  0100               	movlb	0	; () banked
 10120  001D20  EE20 F005          	lfsr	2,5
 10121  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
 10122  001D26  26D9               	addwf	fsr2l,f,c
 10123  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10124  001D2A  22DA               	addwfc	fsr2h,f,c
 10125  001D2C  50DF               	movf	indf2,w,c
 10126  001D2E  010F               	movlb	15	; () banked
 10127  001D30  6F3B               	movwf	59,b	;volatile
 10128                           
 10129                           ; BSR set to: 15
 10130                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 10131  001D32  0100               	movlb	0	; () banked
 10132  001D34  EE20 F006          	lfsr	2,6
 10133  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
 10134  001D3A  26D9               	addwf	fsr2l,f,c
 10135  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10136  001D3E  22DA               	addwfc	fsr2h,f,c
 10137  001D40  50DF               	movf	indf2,w,c
 10138  001D42  010F               	movlb	15	; () banked
 10139  001D44  6F3C               	movwf	60,b	;volatile
 10140                           
 10141                           ; BSR set to: 15
 10142                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 10143  001D46  0100               	movlb	0	; () banked
 10144  001D48  EE20 F007          	lfsr	2,7
 10145  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10146  001D4E  26D9               	addwf	fsr2l,f,c
 10147  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10148  001D52  22DA               	addwfc	fsr2h,f,c
 10149  001D54  50DF               	movf	indf2,w,c
 10150  001D56  010F               	movlb	15	; () banked
 10151  001D58  6F3D               	movwf	61,b	;volatile
 10152                           
 10153                           ; BSR set to: 15
 10154                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 10155  001D5A  010F               	movlb	15	; () banked
 10156  001D5C  8730               	bsf	48,3,b	;volatile
 10157                           
 10158                           ; BSR set to: 15
 10159                           ;inc\CANlib.h: 444: return;
 10160  001D5E  0012               	return	
 10161  001D60                     l378:
 10162                           
 10163                           ; BSR set to: 15
 10164                           ;inc\CANlib.h: 445: }
 10165                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 10166  001D60  010F               	movlb	15	; () banked
 10167  001D62  B720               	btfsc	32,3,b	;volatile
 10168  001D64  0012               	return	
 10169                           
 10170                           ; BSR set to: 15
 10171                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 10172  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 10173                           
 10174                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 10175  001D6A  0100               	movlb	0	; () banked
 10176  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
 10177  001D6E  D003               	goto	l393
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 10181  001D70  010F               	movlb	15	; () banked
 10182  001D72  8D25               	bsf	37,6,b	;volatile
 10183  001D74  D002               	goto	l394
 10184  001D76                     l393:
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;inc\CANlib.h: 454: else
 10188                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 10189  001D76  010F               	movlb	15	; () banked
 10190  001D78  9D25               	bcf	37,6,b	;volatile
 10191  001D7A                     l394:
 10192                           
 10193                           ; BSR set to: 15
 10194                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 10195  001D7A  0100               	movlb	0	; () banked
 10196  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
 10197  001D7E  D079               	goto	l395
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;inc\CANlib.h: 458: {
 10201                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 10202  001D80  0100               	movlb	0	; () banked
 10203  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
 10204  001D84  0100               	movlb	0	; () banked
 10205  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10206  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10207  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10208  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 10212  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 10216  001D92  0E00               	movlw	0
 10217  001D94  0100               	movlb	0	; () banked
 10218  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10219  001D98  0100               	movlb	0	; () banked
 10220  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10221  001D9C  0EFF               	movlw	255
 10222  001D9E  0100               	movlb	0	; () banked
 10223  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10224  001DA2  0100               	movlb	0	; () banked
 10225  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10226  001DA6  0E00               	movlw	0
 10227  001DA8  0100               	movlb	0	; () banked
 10228  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10229  001DAC  0100               	movlb	0	; () banked
 10230  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10231  001DB0  0E00               	movlw	0
 10232  001DB2  0100               	movlb	0	; () banked
 10233  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10234  001DB6  0100               	movlb	0	; () banked
 10235  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 10239  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10240  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10241  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10242  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10243  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
 10244  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 10245  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 10246  001DD6  0100               	movlb	0	; () banked
 10247  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
 10248  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10249  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10250  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10251  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 10255  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 10259  001DEE  0E00               	movlw	0
 10260  001DF0  010F               	movlb	15	; () banked
 10261  001DF2  6F22               	movwf	34,b	;volatile
 10262                           
 10263                           ; BSR set to: 15
 10264                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 10265  001DF4  010F               	movlb	15	; () banked
 10266  001DF6  8722               	bsf	34,3,b	;volatile
 10267                           
 10268                           ; BSR set to: 15
 10269                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 10270  001DF8  0100               	movlb	0	; () banked
 10271  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 10272  001DFC  D002               	goto	l396
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 10276  001DFE  010F               	movlb	15	; () banked
 10277  001E00  8122               	bsf	34,0,b	;volatile
 10278  001E02                     l396:
 10279                           
 10280                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 10281  001E02  0100               	movlb	0	; () banked
 10282  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 10283  001E06  D002               	goto	l397
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 10287  001E08  010F               	movlb	15	; () banked
 10288  001E0A  8322               	bsf	34,1,b	;volatile
 10289  001E0C                     l397:
 10290                           
 10291                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 10292  001E0C  0100               	movlb	0	; () banked
 10293  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 10294  001E10  D002               	goto	l398
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 10298  001E12  010F               	movlb	15	; () banked
 10299  001E14  8B22               	bsf	34,5,b	;volatile
 10300  001E16                     l398:
 10301                           
 10302                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 10303  001E16  0100               	movlb	0	; () banked
 10304  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 10305  001E1A  D002               	goto	l399
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 10309  001E1C  010F               	movlb	15	; () banked
 10310  001E1E  8D22               	bsf	34,6,b	;volatile
 10311  001E20                     l399:
 10312                           
 10313                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 10314  001E20  0100               	movlb	0	; () banked
 10315  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 10316  001E24  D002               	goto	l4633
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 10320  001E26  010F               	movlb	15	; () banked
 10321  001E28  8F22               	bsf	34,7,b	;volatile
 10322  001E2A                     l4633:
 10323                           
 10324                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 10325  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10326  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10327  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10328  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10329  001E3A  0E16               	movlw	22
 10330  001E3C  D006               	goto	u5130
 10331  001E3E                     u5135:
 10332  001E3E  0100               	movlb	0	; () banked
 10333  001E40  90D8               	bcf	status,0,c
 10334  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10335  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10336  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10337  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10338  001E4A                     u5130:
 10339  001E4A  2EE8               	decfsz	wreg,f,c
 10340  001E4C  D7F8               	goto	u5135
 10341  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10342  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10343  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10344  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 10348  001E5E  0100               	movlb	0	; () banked
 10349  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10350  001E62  0100               	movlb	0	; () banked
 10351  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10352  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10353  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10354  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 10358  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10359                           
 10360                           ;inc\CANlib.h: 483: }
 10361  001E70  D059               	goto	l4653
 10362  001E72                     l395:
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;inc\CANlib.h: 485: else
 10366                           ;inc\CANlib.h: 487: {
 10367                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 10368  001E72  010F               	movlb	15	; () banked
 10369  001E74  9722               	bcf	34,3,b	;volatile
 10370                           
 10371                           ; BSR set to: 15
 10372                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 10373  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10374  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10375  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10376  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10377  001E86  0E04               	movlw	4
 10378  001E88  D006               	goto	u5140
 10379  001E8A                     u5145:
 10380  001E8A  0100               	movlb	0	; () banked
 10381  001E8C  90D8               	bcf	status,0,c
 10382  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10383  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10384  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10385  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10386  001E96                     u5140:
 10387  001E96  2EE8               	decfsz	wreg,f,c
 10388  001E98  D7F8               	goto	u5145
 10389  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10390  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10391  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10392  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 10396  001EAA  0100               	movlb	0	; () banked
 10397  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10398  001EAE  0100               	movlb	0	; () banked
 10399  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10400  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10401  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10402  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 10406  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 10410  001EBC  0E07               	movlw	7
 10411  001EBE  0100               	movlb	0	; () banked
 10412  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10413  001EC2  0100               	movlb	0	; () banked
 10414  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10415  001EC6  0E00               	movlw	0
 10416  001EC8  0100               	movlb	0	; () banked
 10417  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10418  001ECC  0100               	movlb	0	; () banked
 10419  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10420  001ED0  0E00               	movlw	0
 10421  001ED2  0100               	movlb	0	; () banked
 10422  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10423  001ED6  0100               	movlb	0	; () banked
 10424  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10425  001EDA  0E00               	movlw	0
 10426  001EDC  0100               	movlb	0	; () banked
 10427  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10428  001EE0  0100               	movlb	0	; () banked
 10429  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 10433  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10434  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10435  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10436  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10437  001EF4  0E05               	movlw	5
 10438  001EF6                     u5155:
 10439  001EF6  90D8               	bcf	status,0,c
 10440  001EF8  0100               	movlb	0	; () banked
 10441  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10442  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10443  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10444  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10445  001F02  2EE8               	decfsz	wreg,f,c
 10446  001F04  D7F8               	goto	u5155
 10447  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10448  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10449  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10450  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 10454  001F16  010F               	movlb	15	; () banked
 10455  001F18  5122               	movf	34,w,b	;volatile
 10456  001F1A  0B1F               	andlw	31
 10457  001F1C  010F               	movlb	15	; () banked
 10458  001F1E  6F22               	movwf	34,b	;volatile
 10459                           
 10460                           ; BSR set to: 15
 10461                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 10462  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 10463  001F24                     l4653:
 10464                           
 10465                           ;inc\CANlib.h: 498: }
 10466                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 10467  001F24  0100               	movlb	0	; () banked
 10468  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10469  001F28  D003               	goto	l402
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 10473  001F2A  010F               	movlb	15	; () banked
 10474  001F2C  8120               	bsf	32,0,b	;volatile
 10475  001F2E  D002               	goto	l403
 10476  001F30                     l402:
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;inc\CANlib.h: 502: else
 10480                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 10481  001F30  010F               	movlb	15	; () banked
 10482  001F32  9120               	bcf	32,0,b	;volatile
 10483  001F34                     l403:
 10484                           
 10485                           ; BSR set to: 15
 10486                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 10487  001F34  0100               	movlb	0	; () banked
 10488  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10489  001F38  D003               	goto	l404
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 10493  001F3A  010F               	movlb	15	; () banked
 10494  001F3C  8320               	bsf	32,1,b	;volatile
 10495  001F3E  D002               	goto	l4659
 10496  001F40                     l404:
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;inc\CANlib.h: 506: else
 10500                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 10501  001F40  010F               	movlb	15	; () banked
 10502  001F42  9320               	bcf	32,1,b	;volatile
 10503  001F44                     l4659:
 10504                           
 10505                           ; BSR set to: 15
 10506                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 10507  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10508  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10509  001F4C  50DF               	movf	indf2,w,c
 10510  001F4E  010F               	movlb	15	; () banked
 10511  001F50  6F26               	movwf	38,b	;volatile
 10512                           
 10513                           ; BSR set to: 15
 10514                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 10515  001F52  0100               	movlb	0	; () banked
 10516  001F54  EE20 F001          	lfsr	2,1
 10517  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
 10518  001F5A  26D9               	addwf	fsr2l,f,c
 10519  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10520  001F5E  22DA               	addwfc	fsr2h,f,c
 10521  001F60  50DF               	movf	indf2,w,c
 10522  001F62  010F               	movlb	15	; () banked
 10523  001F64  6F27               	movwf	39,b	;volatile
 10524                           
 10525                           ; BSR set to: 15
 10526                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 10527  001F66  0100               	movlb	0	; () banked
 10528  001F68  EE20 F002          	lfsr	2,2
 10529  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10530  001F6E  26D9               	addwf	fsr2l,f,c
 10531  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10532  001F72  22DA               	addwfc	fsr2h,f,c
 10533  001F74  50DF               	movf	indf2,w,c
 10534  001F76  010F               	movlb	15	; () banked
 10535  001F78  6F28               	movwf	40,b	;volatile
 10536                           
 10537                           ; BSR set to: 15
 10538                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 10539  001F7A  0100               	movlb	0	; () banked
 10540  001F7C  EE20 F003          	lfsr	2,3
 10541  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
 10542  001F82  26D9               	addwf	fsr2l,f,c
 10543  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10544  001F86  22DA               	addwfc	fsr2h,f,c
 10545  001F88  50DF               	movf	indf2,w,c
 10546  001F8A  010F               	movlb	15	; () banked
 10547  001F8C  6F29               	movwf	41,b	;volatile
 10548                           
 10549                           ; BSR set to: 15
 10550                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 10551  001F8E  0100               	movlb	0	; () banked
 10552  001F90  EE20 F004          	lfsr	2,4
 10553  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
 10554  001F96  26D9               	addwf	fsr2l,f,c
 10555  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10556  001F9A  22DA               	addwfc	fsr2h,f,c
 10557  001F9C  50DF               	movf	indf2,w,c
 10558  001F9E  010F               	movlb	15	; () banked
 10559  001FA0  6F2A               	movwf	42,b	;volatile
 10560                           
 10561                           ; BSR set to: 15
 10562                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 10563  001FA2  0100               	movlb	0	; () banked
 10564  001FA4  EE20 F005          	lfsr	2,5
 10565  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10566  001FAA  26D9               	addwf	fsr2l,f,c
 10567  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10568  001FAE  22DA               	addwfc	fsr2h,f,c
 10569  001FB0  50DF               	movf	indf2,w,c
 10570  001FB2  010F               	movlb	15	; () banked
 10571  001FB4  6F2B               	movwf	43,b	;volatile
 10572                           
 10573                           ; BSR set to: 15
 10574                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 10575  001FB6  0100               	movlb	0	; () banked
 10576  001FB8  EE20 F006          	lfsr	2,6
 10577  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10578  001FBE  26D9               	addwf	fsr2l,f,c
 10579  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10580  001FC2  22DA               	addwfc	fsr2h,f,c
 10581  001FC4  50DF               	movf	indf2,w,c
 10582  001FC6  010F               	movlb	15	; () banked
 10583  001FC8  6F2C               	movwf	44,b	;volatile
 10584                           
 10585                           ; BSR set to: 15
 10586                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 10587  001FCA  0100               	movlb	0	; () banked
 10588  001FCC  EE20 F007          	lfsr	2,7
 10589  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
 10590  001FD2  26D9               	addwf	fsr2l,f,c
 10591  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10592  001FD6  22DA               	addwfc	fsr2h,f,c
 10593  001FD8  50DF               	movf	indf2,w,c
 10594  001FDA  010F               	movlb	15	; () banked
 10595  001FDC  6F2D               	movwf	45,b	;volatile
 10596                           
 10597                           ; BSR set to: 15
 10598                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 10599  001FDE  010F               	movlb	15	; () banked
 10600  001FE0  8720               	bsf	32,3,b	;volatile
 10601                           
 10602                           ; BSR set to: 15
 10603                           ;inc\CANlib.h: 520: return;
 10604  001FE2  0012               	return	
 10605  001FE4                     __end_of_CANsendMessage:
 10606                           	opt stack 0
 10607                           tblptru	equ	0xFF8
 10608                           tblptrh	equ	0xFF7
 10609                           tblptrl	equ	0xFF6
 10610                           tablat	equ	0xFF5
 10611                           prodh	equ	0xFF4
 10612                           prodl	equ	0xFF3
 10613                           postinc0	equ	0xFEE
 10614                           wreg	equ	0xFE8
 10615                           postdec1	equ	0xFE5
 10616                           fsr1l	equ	0xFE1
 10617                           indf2	equ	0xFDF
 10618                           postinc2	equ	0xFDE
 10619                           postdec2	equ	0xFDD
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function _CANisTxReady *****************
 10625 ;; Defined at:
 10626 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      unsigned char 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;Total ram usage:        1 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    4
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_park_search
 10651 ;;		_can_send
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655                           	psect	text28
 10656  005D14                     __ptext28:
 10657                           	opt stack 0
 10658  005D14                     _CANisTxReady:
 10659                           	opt stack 23
 10660                           
 10661                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 10662                           
 10663                           ; BSR set to: 15
 10664                           ;incstack = 0
 10665  005D14  0E01               	movlw	1
 10666  005D16  0100               	movlb	0	; () banked
 10667  005D18  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10668                           
 10669                           ; BSR set to: 0
 10670  005D1A  010F               	movlb	15	; () banked
 10671  005D1C  A740               	btfss	64,3,b	;volatile
 10672  005D1E  D009               	goto	l556
 10673                           
 10674                           ; BSR set to: 15
 10675  005D20  010F               	movlb	15	; () banked
 10676  005D22  A730               	btfss	48,3,b	;volatile
 10677  005D24  D006               	goto	l556
 10678                           
 10679                           ; BSR set to: 15
 10680  005D26  010F               	movlb	15	; () banked
 10681  005D28  A720               	btfss	32,3,b	;volatile
 10682  005D2A  D003               	goto	l556
 10683                           
 10684                           ; BSR set to: 15
 10685  005D2C  0E00               	movlw	0
 10686  005D2E  0100               	movlb	0	; () banked
 10687  005D30  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10688  005D32                     l556:
 10689  005D32  0100               	movlb	0	; () banked
 10690  005D34  5177               	movf	_CANisTxReady$2845& (0+255),w,b
 10691  005D36  0012               	return	
 10692  005D38                     __end_of_CANisTxReady:
 10693                           	opt stack 0
 10694                           tblptru	equ	0xFF8
 10695                           tblptrh	equ	0xFF7
 10696                           tblptrl	equ	0xFF6
 10697                           tablat	equ	0xFF5
 10698                           prodh	equ	0xFF4
 10699                           prodl	equ	0xFF3
 10700                           postinc0	equ	0xFEE
 10701                           wreg	equ	0xFE8
 10702                           postdec1	equ	0xFE5
 10703                           fsr1l	equ	0xFE1
 10704                           indf2	equ	0xFDF
 10705                           postinc2	equ	0xFDE
 10706                           postdec2	equ	0xFDD
 10707                           fsr2h	equ	0xFDA
 10708                           fsr2l	equ	0xFD9
 10709                           status	equ	0xFD8
 10710                           
 10711 ;; *************** function _configurazione *****************
 10712 ;; Defined at:
 10713 ;;		line 416 in file "parcheggio.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;		None
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;		None               void
 10720 ;; Registers used:
 10721 ;;		wreg, status,2, status,0, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;Total ram usage:        0 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:    6
 10734 ;; This function calls:
 10735 ;;		_CANInitialize
 10736 ;; This function is called by:
 10737 ;;		_main
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text29
 10742  005A82                     __ptext29:
 10743                           	opt stack 0
 10744  005A82                     _configurazione:
 10745                           	opt stack 24
 10746                           
 10747                           ;parcheggio.c: 417: LATA = 0x00;
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;incstack = 0
 10751  005A82  0E00               	movlw	0
 10752  005A84  6E89               	movwf	3977,c	;volatile
 10753                           
 10754                           ;parcheggio.c: 418: TRISA = 0b11110000;
 10755  005A86  0EF0               	movlw	240
 10756  005A88  6E92               	movwf	3986,c	;volatile
 10757                           
 10758                           ;parcheggio.c: 420: LATB = 0x00;
 10759  005A8A  0E00               	movlw	0
 10760  005A8C  6E8A               	movwf	3978,c	;volatile
 10761                           
 10762                           ;parcheggio.c: 421: TRISB = 0b10001010;
 10763  005A8E  0E8A               	movlw	138
 10764  005A90  6E93               	movwf	3987,c	;volatile
 10765                           
 10766                           ;parcheggio.c: 423: LATC = 0x00;
 10767  005A92  0E00               	movlw	0
 10768  005A94  6E8B               	movwf	3979,c	;volatile
 10769                           
 10770                           ;parcheggio.c: 424: TRISC = 0b11111111;
 10771  005A96  6894               	setf	3988,c	;volatile
 10772                           
 10773                           ;parcheggio.c: 426: ADCON1 = 0xFF;
 10774  005A98  68C1               	setf	4033,c	;volatile
 10775                           
 10776                           ;parcheggio.c: 427: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10777  005A9A  0E06               	movlw	6
 10778  005A9C  0100               	movlb	0	; () banked
 10779  005A9E  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10780  005AA0  0E05               	movlw	5
 10781  005AA2  0100               	movlb	0	; () banked
 10782  005AA4  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10783  005AA6  0E01               	movlw	1
 10784  005AA8  0100               	movlb	0	; () banked
 10785  005AAA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10786  005AAC  0E03               	movlw	3
 10787  005AAE  0100               	movlb	0	; () banked
 10788  005AB0  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10789  005AB2  0E9D               	movlw	157
 10790  005AB4  0100               	movlb	0	; () banked
 10791  005AB6  6F89               	movwf	CANInitialize@flags& (0+255),b
 10792  005AB8  0E04               	movlw	4
 10793  005ABA  ECDD  F026         	call	_CANInitialize
 10794                           
 10795                           ;parcheggio.c: 429: RCONbits.IPEN = 1;
 10796  005ABE  8ED0               	bsf	4048,7,c	;volatile
 10797                           
 10798                           ;parcheggio.c: 430: PIR3bits.RXB1IF = 0;
 10799  005AC0  92A4               	bcf	4004,1,c	;volatile
 10800                           
 10801                           ;parcheggio.c: 431: PIR3bits.RXB0IF = 0;
 10802  005AC2  90A4               	bcf	4004,0,c	;volatile
 10803                           
 10804                           ;parcheggio.c: 432: IPR3bits.RXB1IP = 0;
 10805  005AC4  92A5               	bcf	4005,1,c	;volatile
 10806                           
 10807                           ;parcheggio.c: 433: IPR3bits.RXB0IP = 0;
 10808  005AC6  90A5               	bcf	4005,0,c	;volatile
 10809                           
 10810                           ;parcheggio.c: 434: PIE3bits.RXB1IE = 1;
 10811  005AC8  82A3               	bsf	4003,1,c	;volatile
 10812                           
 10813                           ;parcheggio.c: 435: PIE3bits.RXB0IE = 1;
 10814  005ACA  80A3               	bsf	4003,0,c	;volatile
 10815                           
 10816                           ;parcheggio.c: 436: INTCON2bits.TMR0IP = 0;
 10817  005ACC  94F1               	bcf	intcon2,2,c	;volatile
 10818                           
 10819                           ;parcheggio.c: 437: T0CON = 0x80;
 10820  005ACE  0E80               	movlw	128
 10821  005AD0  6ED5               	movwf	4053,c	;volatile
 10822                           
 10823                           ;parcheggio.c: 438: T3CON = 0x11;
 10824  005AD2  0E11               	movlw	17
 10825  005AD4  6EB1               	movwf	4017,c	;volatile
 10826                           
 10827                           ;parcheggio.c: 439: TMR0H = 0x34;
 10828  005AD6  0E34               	movlw	52
 10829  005AD8  6ED7               	movwf	4055,c	;volatile
 10830                           
 10831                           ;parcheggio.c: 440: TMR0L = 0xE0;
 10832  005ADA  0EE0               	movlw	224
 10833  005ADC  6ED6               	movwf	4054,c	;volatile
 10834                           
 10835                           ;parcheggio.c: 441: INTCONbits.TMR0IF = 0;
 10836  005ADE  94F2               	bcf	intcon,2,c	;volatile
 10837                           
 10838                           ;parcheggio.c: 442: INTCONbits.TMR0IE = 1;
 10839  005AE0  8AF2               	bsf	intcon,5,c	;volatile
 10840                           
 10841                           ;parcheggio.c: 443: INTCON2bits.INTEDG0 = 1;
 10842  005AE2  8CF1               	bsf	intcon2,6,c	;volatile
 10843                           
 10844                           ;parcheggio.c: 444: INTCONbits.INT0IF = 0;
 10845  005AE4  92F2               	bcf	intcon,1,c	;volatile
 10846                           
 10847                           ;parcheggio.c: 445: INTCONbits.INT0IE = 0;
 10848  005AE6  98F2               	bcf	intcon,4,c	;volatile
 10849                           
 10850                           ;parcheggio.c: 446: INTCONbits.GIEL = 1;
 10851  005AE8  8CF2               	bsf	intcon,6,c	;volatile
 10852                           
 10853                           ;parcheggio.c: 447: INTCONbits.GIEH = 1;
 10854  005AEA  8EF2               	bsf	intcon,7,c	;volatile
 10855  005AEC  0012               	return		;funcret
 10856  005AEE                     __end_of_configurazione:
 10857                           	opt stack 0
 10858                           tblptru	equ	0xFF8
 10859                           tblptrh	equ	0xFF7
 10860                           tblptrl	equ	0xFF6
 10861                           tablat	equ	0xFF5
 10862                           prodh	equ	0xFF4
 10863                           prodl	equ	0xFF3
 10864                           intcon	equ	0xFF2
 10865                           intcon2	equ	0xFF1
 10866                           postinc0	equ	0xFEE
 10867                           wreg	equ	0xFE8
 10868                           postdec1	equ	0xFE5
 10869                           fsr1l	equ	0xFE1
 10870                           indf2	equ	0xFDF
 10871                           postinc2	equ	0xFDE
 10872                           postdec2	equ	0xFDD
 10873                           fsr2h	equ	0xFDA
 10874                           fsr2l	equ	0xFD9
 10875                           status	equ	0xFD8
 10876                           
 10877 ;; *************** function _CANInitialize *****************
 10878 ;; Defined at:
 10879 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  propSeg         1    wreg     unsigned char 
 10882 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 10883 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 10884 ;;  SJW             1   39[BANK0 ] unsigned char 
 10885 ;;  BRP             1   40[BANK0 ] unsigned char 
 10886 ;;  flags           1   41[BANK0 ] enum E16313
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;  propSeg         1   46[BANK0 ] unsigned char 
 10889 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 10890 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;		None               void
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:       12 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    5
 10907 ;; This function calls:
 10908 ;;		_CANOperationMode
 10909 ;;		_CANSetFilter
 10910 ;;		_CANSetMask
 10911 ;; This function is called by:
 10912 ;;		_configurazione
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text30
 10917  004DBA                     __ptext30:
 10918                           	opt stack 0
 10919  004DBA                     _CANInitialize:
 10920                           	opt stack 24
 10921                           
 10922                           ;incstack = 0
 10923                           ;CANInitialize@propSeg stored from wreg
 10924  004DBA  0100               	movlb	0	; () banked
 10925  004DBC  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 10926                           
 10927                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 10928                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 10929                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 10930  004DBE  0E80               	movlw	128
 10931  004DC0  EC9C  F02E         	call	_CANOperationMode
 10932                           
 10933                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 10934  004DC4  0E00               	movlw	0
 10935  004DC6  6E70               	movwf	3952,c	;volatile
 10936                           
 10937                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 10938  004DC8  0E00               	movlw	0
 10939  004DCA  6E71               	movwf	3953,c	;volatile
 10940                           
 10941                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 10942  004DCC  0E00               	movlw	0
 10943  004DCE  6E72               	movwf	3954,c	;volatile
 10944                           
 10945                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 10946  004DD0  0100               	movlb	0	; () banked
 10947  004DD2  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 10948  004DD4  42E8               	rrncf	wreg,f,c
 10949  004DD6  0BC0               	andlw	192
 10950  004DD8  0100               	movlb	0	; () banked
 10951  004DDA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 10955  004DDC  0100               	movlb	0	; () banked
 10956  004DDE  5187               	movf	CANInitialize@SJW& (0+255),w,b
 10957  004DE0  1270               	iorwf	3952,f,c	;volatile
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 10961  004DE2  0100               	movlb	0	; () banked
 10962  004DE4  5188               	movf	CANInitialize@BRP& (0+255),w,b
 10963  004DE6  1270               	iorwf	3952,f,c	;volatile
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 10967  004DE8  0100               	movlb	0	; () banked
 10968  004DEA  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 10969  004DEC  1271               	iorwf	3953,f,c	;volatile
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 10973  004DEE  0100               	movlb	0	; () banked
 10974  004DF0  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 10975  004DF2  42E8               	rrncf	wreg,f,c
 10976  004DF4  0BF8               	andlw	248
 10977  004DF6  0100               	movlb	0	; () banked
 10978  004DF8  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 10982  004DFA  0100               	movlb	0	; () banked
 10983  004DFC  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 10984  004DFE  1271               	iorwf	3953,f,c	;volatile
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 10988  004E00  0100               	movlb	0	; () banked
 10989  004E02  A589               	btfss	CANInitialize@flags& (0+255),2,b
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 10993  004E04  8C71               	bsf	3953,6,c	;volatile
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 10997  004E06  0100               	movlb	0	; () banked
 10998  004E08  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11002  004E0A  8E71               	bsf	3953,7,c	;volatile
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11006                           
 11007                           ; BSR set to: 0
 11008  004E0C  0100               	movlb	0	; () banked
 11009  004E0E  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11010  004E10  1272               	iorwf	3954,f,c	;volatile
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11014  004E12  0100               	movlb	0	; () banked
 11015  004E14  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11019  004E16  8C72               	bsf	3954,6,c	;volatile
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11023                           
 11024                           ; BSR set to: 0
 11025  004E18  0100               	movlb	0	; () banked
 11026  004E1A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11027  004E1C  0B60               	andlw	96
 11028  004E1E  6E60               	movwf	3936,c	;volatile
 11029                           
 11030                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11031  004E20  0100               	movlb	0	; () banked
 11032  004E22  5189               	movf	CANInitialize@flags& (0+255),w,b
 11033  004E24  0B10               	andlw	16
 11034  004E26  0AFF               	xorlw	255
 11035  004E28  B4D8               	btfsc	status,2,c
 11036                           
 11037                           ; BSR set to: 0
 11038                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11039  004E2A  8460               	bsf	3936,2,c	;volatile
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11043  004E2C  CF60 FF50          	movff	3936,3920	;volatile
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11047  004E30  0E00               	movlw	0
 11048  004E32  0100               	movlb	0	; () banked
 11049  004E34  6F77               	movwf	CANSetMask@mask& (0+255),b
 11050  004E36  0E00               	movlw	0
 11051  004E38  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11052  004E3A  0E00               	movlw	0
 11053  004E3C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11054  004E3E  0E00               	movlw	0
 11055  004E40  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11056  004E42  0EF7               	movlw	247
 11057  004E44  0100               	movlb	0	; () banked
 11058  004E46  6F7B               	movwf	CANSetMask@type& (0+255),b
 11059  004E48  0E01               	movlw	1
 11060  004E4A  EC4E  F01D         	call	_CANSetMask
 11061                           
 11062                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11063  004E4E  0E00               	movlw	0
 11064  004E50  0100               	movlb	0	; () banked
 11065  004E52  6F77               	movwf	CANSetMask@mask& (0+255),b
 11066  004E54  0E00               	movlw	0
 11067  004E56  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11068  004E58  0E00               	movlw	0
 11069  004E5A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11070  004E5C  0E00               	movlw	0
 11071  004E5E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11072  004E60  0EF7               	movlw	247
 11073  004E62  0100               	movlb	0	; () banked
 11074  004E64  6F7B               	movwf	CANSetMask@type& (0+255),b
 11075  004E66  0E02               	movlw	2
 11076  004E68  EC4E  F01D         	call	_CANSetMask
 11077                           
 11078                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11079  004E6C  D00F               	goto	l5413
 11080  004E6E                     l5407:
 11081                           
 11082                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11083  004E6E  0EF7               	movlw	247
 11084  004E70  0100               	movlb	0	; () banked
 11085  004E72  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11086  004E74  D007               	goto	l5409
 11087  004E76                     l358:
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11091  004E76  0100               	movlb	0	; () banked
 11092  004E78  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11093                           
 11094                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11095  004E7A  0100               	movlb	0	; () banked
 11096  004E7C  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11097                           
 11098                           ;inc\CANlib.h: 273: break;
 11099  004E7E  D028               	goto	l5415
 11100  004E80                     l359:
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11104  004E80  0100               	movlb	0	; () banked
 11105  004E82  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11106  004E84                     l5409:
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11110  004E84  0EF7               	movlw	247
 11111  004E86  0100               	movlb	0	; () banked
 11112  004E88  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;inc\CANlib.h: 278: }
 11116                           
 11117                           ;inc\CANlib.h: 277: break;
 11118  004E8A  D022               	goto	l5415
 11119  004E8C                     l5413:
 11120  004E8C  0E9F               	movlw	159
 11121  004E8E  0100               	movlb	0	; () banked
 11122  004E90  6F8A               	movwf	??_CANInitialize& (0+255),b
 11123  004E92  0EFF               	movlw	255
 11124  004E94  0100               	movlb	0	; () banked
 11125  004E96  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11126  004E98  0100               	movlb	0	; () banked
 11127  004E9A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11128  004E9C  0B60               	andlw	96
 11129  004E9E  0100               	movlb	0	; () banked
 11130  004EA0  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11131  004EA2  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11132  004EA4  0100               	movlb	0	; () banked
 11133  004EA6  518A               	movf	??_CANInitialize& (0+255),w,b
 11134  004EA8  0100               	movlb	0	; () banked
 11135  004EAA  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11136  004EAC  0100               	movlb	0	; () banked
 11137  004EAE  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11138  004EB0  0100               	movlb	0	; () banked
 11139  004EB2  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11140                           
 11141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11142                           ; Switch size 1, requested type "space"
 11143                           ; Number of cases is 1, Range of values is 0 to 0
 11144                           ; switch strategies available:
 11145                           ; Name         Instructions Cycles
 11146                           ; simple_byte            4     3 (average)
 11147                           ;	Chosen strategy is simple_byte
 11148  004EB4  0100               	movlb	0	; () banked
 11149  004EB6  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11150  004EB8  0A00               	xorlw	0	; case 0
 11151  004EBA  A4D8               	btfss	status,2,c
 11152  004EBC  D7E1               	goto	l359
 11153                           
 11154                           ; BSR set to: 0
 11155                           ; Switch size 1, requested type "space"
 11156                           ; Number of cases is 2, Range of values is 191 to 223
 11157                           ; switch strategies available:
 11158                           ; Name         Instructions Cycles
 11159                           ; simple_byte            7     4 (average)
 11160                           ;	Chosen strategy is simple_byte
 11161  004EBE  0100               	movlb	0	; () banked
 11162  004EC0  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11163  004EC2  0ABF               	xorlw	191	; case 191
 11164  004EC4  B4D8               	btfsc	status,2,c
 11165  004EC6  D7D7               	goto	l358
 11166  004EC8  0A60               	xorlw	96	; case 223
 11167  004ECA  B4D8               	btfsc	status,2,c
 11168  004ECC  D7D0               	goto	l5407
 11169  004ECE  D7D8               	goto	l359
 11170  004ED0                     l5415:
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11174  004ED0  0E00               	movlw	0
 11175  004ED2  0100               	movlb	0	; () banked
 11176  004ED4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11177  004ED6  0E00               	movlw	0
 11178  004ED8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11179  004EDA  0E00               	movlw	0
 11180  004EDC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11181  004EDE  0E00               	movlw	0
 11182  004EE0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11183  004EE2  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11184  004EE6  0E00               	movlw	0
 11185  004EE8  ECA9  F006         	call	_CANSetFilter
 11186                           
 11187                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11188  004EEC  0E00               	movlw	0
 11189  004EEE  0100               	movlb	0	; () banked
 11190  004EF0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11191  004EF2  0E00               	movlw	0
 11192  004EF4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11193  004EF6  0E00               	movlw	0
 11194  004EF8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11195  004EFA  0E00               	movlw	0
 11196  004EFC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11197  004EFE  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11198  004F02  0E01               	movlw	1
 11199  004F04  ECA9  F006         	call	_CANSetFilter
 11200                           
 11201                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11202  004F08  0E00               	movlw	0
 11203  004F0A  0100               	movlb	0	; () banked
 11204  004F0C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11205  004F0E  0E00               	movlw	0
 11206  004F10  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11207  004F12  0E00               	movlw	0
 11208  004F14  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11209  004F16  0E00               	movlw	0
 11210  004F18  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11211  004F1A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11212  004F1E  0E02               	movlw	2
 11213  004F20  ECA9  F006         	call	_CANSetFilter
 11214                           
 11215                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11216  004F24  0E00               	movlw	0
 11217  004F26  0100               	movlb	0	; () banked
 11218  004F28  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11219  004F2A  0E00               	movlw	0
 11220  004F2C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11221  004F2E  0E00               	movlw	0
 11222  004F30  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11223  004F32  0E00               	movlw	0
 11224  004F34  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11225  004F36  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11226  004F3A  0E03               	movlw	3
 11227  004F3C  ECA9  F006         	call	_CANSetFilter
 11228                           
 11229                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11230  004F40  0E00               	movlw	0
 11231  004F42  0100               	movlb	0	; () banked
 11232  004F44  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11233  004F46  0E00               	movlw	0
 11234  004F48  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11235  004F4A  0E00               	movlw	0
 11236  004F4C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11237  004F4E  0E00               	movlw	0
 11238  004F50  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11239  004F52  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11240  004F56  0E04               	movlw	4
 11241  004F58  ECA9  F006         	call	_CANSetFilter
 11242                           
 11243                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11244  004F5C  0E00               	movlw	0
 11245  004F5E  0100               	movlb	0	; () banked
 11246  004F60  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11247  004F62  0E00               	movlw	0
 11248  004F64  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11249  004F66  0E00               	movlw	0
 11250  004F68  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11251  004F6A  0E00               	movlw	0
 11252  004F6C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11253  004F6E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11254  004F72  0E05               	movlw	5
 11255  004F74  ECA9  F006         	call	_CANSetFilter
 11256                           
 11257                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11258  004F78  0E00               	movlw	0
 11259  004F7A  EC9C  F02E         	call	_CANOperationMode
 11260  004F7E  0012               	return		;funcret
 11261  004F80                     __end_of_CANInitialize:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           intcon2	equ	0xFF1
 11271                           postinc0	equ	0xFEE
 11272                           wreg	equ	0xFE8
 11273                           postdec1	equ	0xFE5
 11274                           fsr1l	equ	0xFE1
 11275                           indf2	equ	0xFDF
 11276                           postinc2	equ	0xFDE
 11277                           postdec2	equ	0xFDD
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function _CANSetMask *****************
 11283 ;; Defined at:
 11284 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  numBuffer       1    wreg     enum E16347
 11287 ;;  mask            4   23[BANK0 ] unsigned long 
 11288 ;;  type            1   27[BANK0 ] enum E16313
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11291 ;;  tamp            4   33[BANK0 ] unsigned long 
 11292 ;; Return value:  Size  Location     Type
 11293 ;;		None               void
 11294 ;; Registers used:
 11295 ;;		wreg, status,2, status,0
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11301 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;Total ram usage:       14 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:    4
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_CANInitialize
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text31
 11316  003A9C                     __ptext31:
 11317                           	opt stack 0
 11318  003A9C                     _CANSetMask:
 11319                           	opt stack 24
 11320                           
 11321                           ;incstack = 0
 11322                           ;CANSetMask@numBuffer stored from wreg
 11323  003A9C  0100               	movlb	0	; () banked
 11324  003A9E  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11325                           
 11326                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11327  003AA0  0100               	movlb	0	; () banked
 11328  003AA2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11329  003AA4  A4D8               	btfss	status,2,c
 11330  003AA6  D056               	goto	l4883
 11331                           
 11332                           ; BSR set to: 0
 11333  003AA8  0100               	movlb	0	; () banked
 11334  003AAA  297B               	incf	CANSetMask@type& (0+255),w,b
 11335  003AAC  A4D8               	btfss	status,2,c
 11336  003AAE  D052               	goto	l4883
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;inc\CANlib.h: 644: {
 11340                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11341  003AB0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11342  003AB4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11343  003AB8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11344  003ABC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11345  003AC0  0E04               	movlw	4
 11346  003AC2  D006               	goto	u5470
 11347  003AC4                     u5475:
 11348  003AC4  0100               	movlb	0	; () banked
 11349  003AC6  90D8               	bcf	status,0,c
 11350  003AC8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11351  003ACA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11352  003ACC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11353  003ACE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11354  003AD0                     u5470:
 11355  003AD0  2EE8               	decfsz	wreg,f,c
 11356  003AD2  D7F8               	goto	u5475
 11357  003AD4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11358  003AD8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11359  003ADC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11360  003AE0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11364  003AE4  0100               	movlb	0	; () banked
 11365  003AE6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11366  003AE8  0100               	movlb	0	; () banked
 11367  003AEA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11368  003AEC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11369  003AEE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11370  003AF0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11374  003AF2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11378  003AF6  0E07               	movlw	7
 11379  003AF8  0100               	movlb	0	; () banked
 11380  003AFA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11381  003AFC  0100               	movlb	0	; () banked
 11382  003AFE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11383  003B00  0E00               	movlw	0
 11384  003B02  0100               	movlb	0	; () banked
 11385  003B04  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11386  003B06  0100               	movlb	0	; () banked
 11387  003B08  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11388  003B0A  0E00               	movlw	0
 11389  003B0C  0100               	movlb	0	; () banked
 11390  003B0E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11391  003B10  0100               	movlb	0	; () banked
 11392  003B12  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11393  003B14  0E00               	movlw	0
 11394  003B16  0100               	movlb	0	; () banked
 11395  003B18  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11396  003B1A  0100               	movlb	0	; () banked
 11397  003B1C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11401  003B1E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11402  003B22  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11403  003B26  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11404  003B2A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11405  003B2E  0E05               	movlw	5
 11406  003B30                     u5485:
 11407  003B30  90D8               	bcf	status,0,c
 11408  003B32  0100               	movlb	0	; () banked
 11409  003B34  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11410  003B36  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11411  003B38  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11412  003B3A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11413  003B3C  2EE8               	decfsz	wreg,f,c
 11414  003B3E  D7F8               	goto	u5485
 11415  003B40  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11416  003B44  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11417  003B48  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11418  003B4C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11422  003B50  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11423  003B54                     l4883:
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;inc\CANlib.h: 652: }
 11427                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11428  003B54  0E02               	movlw	2
 11429  003B56  0100               	movlb	0	; () banked
 11430  003B58  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11431  003B5A  A4D8               	btfss	status,2,c
 11432  003B5C  D056               	goto	l4899
 11433                           
 11434                           ; BSR set to: 0
 11435  003B5E  0100               	movlb	0	; () banked
 11436  003B60  297B               	incf	CANSetMask@type& (0+255),w,b
 11437  003B62  A4D8               	btfss	status,2,c
 11438  003B64  D052               	goto	l4899
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;inc\CANlib.h: 655: {
 11442                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11443  003B66  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11444  003B6A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11445  003B6E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11446  003B72  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11447  003B76  0E04               	movlw	4
 11448  003B78  D006               	goto	u5510
 11449  003B7A                     u5515:
 11450  003B7A  0100               	movlb	0	; () banked
 11451  003B7C  90D8               	bcf	status,0,c
 11452  003B7E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11453  003B80  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11454  003B82  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11455  003B84  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11456  003B86                     u5510:
 11457  003B86  2EE8               	decfsz	wreg,f,c
 11458  003B88  D7F8               	goto	u5515
 11459  003B8A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11460  003B8E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11461  003B92  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11462  003B96  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11466  003B9A  0100               	movlb	0	; () banked
 11467  003B9C  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11468  003B9E  0100               	movlb	0	; () banked
 11469  003BA0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11470  003BA2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11471  003BA4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11472  003BA6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11476  003BA8  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11480  003BAC  0E07               	movlw	7
 11481  003BAE  0100               	movlb	0	; () banked
 11482  003BB0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11483  003BB2  0100               	movlb	0	; () banked
 11484  003BB4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11485  003BB6  0E00               	movlw	0
 11486  003BB8  0100               	movlb	0	; () banked
 11487  003BBA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11488  003BBC  0100               	movlb	0	; () banked
 11489  003BBE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11490  003BC0  0E00               	movlw	0
 11491  003BC2  0100               	movlb	0	; () banked
 11492  003BC4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11493  003BC6  0100               	movlb	0	; () banked
 11494  003BC8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11495  003BCA  0E00               	movlw	0
 11496  003BCC  0100               	movlb	0	; () banked
 11497  003BCE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11498  003BD0  0100               	movlb	0	; () banked
 11499  003BD2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11503  003BD4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11504  003BD8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11505  003BDC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11506  003BE0  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11507  003BE4  0E05               	movlw	5
 11508  003BE6                     u5525:
 11509  003BE6  90D8               	bcf	status,0,c
 11510  003BE8  0100               	movlb	0	; () banked
 11511  003BEA  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11512  003BEC  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11513  003BEE  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11514  003BF0  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11515  003BF2  2EE8               	decfsz	wreg,f,c
 11516  003BF4  D7F8               	goto	u5525
 11517  003BF6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11518  003BFA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11519  003BFE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11520  003C02  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11524  003C06  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11525  003C0A                     l4899:
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;inc\CANlib.h: 663: }
 11529                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11530  003C0A  0100               	movlb	0	; () banked
 11531  003C0C  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11532  003C0E  A4D8               	btfss	status,2,c
 11533  003C10  D087               	goto	l4931
 11534                           
 11535                           ; BSR set to: 0
 11536  003C12  0EF7               	movlw	247
 11537  003C14  0100               	movlb	0	; () banked
 11538  003C16  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11539  003C18  A4D8               	btfss	status,2,c
 11540  003C1A  D082               	goto	l4931
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;inc\CANlib.h: 666: {
 11544                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11545  003C1C  0100               	movlb	0	; () banked
 11546  003C1E  5177               	movf	CANSetMask@mask& (0+255),w,b
 11547  003C20  0100               	movlb	0	; () banked
 11548  003C22  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11549  003C24  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11550  003C26  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11551  003C28  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11555  003C2A  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11559  003C2E  0E00               	movlw	0
 11560  003C30  0100               	movlb	0	; () banked
 11561  003C32  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11562  003C34  0100               	movlb	0	; () banked
 11563  003C36  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11564  003C38  0EFF               	movlw	255
 11565  003C3A  0100               	movlb	0	; () banked
 11566  003C3C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11567  003C3E  0100               	movlb	0	; () banked
 11568  003C40  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11569  003C42  0E00               	movlw	0
 11570  003C44  0100               	movlb	0	; () banked
 11571  003C46  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11572  003C48  0100               	movlb	0	; () banked
 11573  003C4A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11574  003C4C  0E00               	movlw	0
 11575  003C4E  0100               	movlb	0	; () banked
 11576  003C50  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11577  003C52  0100               	movlb	0	; () banked
 11578  003C54  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11582  003C56  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11583  003C5A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11584  003C5E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11585  003C62  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11586  003C66  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11587  003C6A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11588  003C6E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11589  003C72  0100               	movlb	0	; () banked
 11590  003C74  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11591  003C76  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11592  003C7A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11593  003C7E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11594  003C82  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11598  003C86  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11602  003C8A  0100               	movlb	0	; () banked
 11603  003C8C  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11604  003C8E  D003               	goto	l432
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11608  003C90  010F               	movlb	15	; () banked
 11609  003C92  8119               	bsf	25,0,b	;volatile
 11610  003C94  D002               	goto	l433
 11611  003C96                     l432:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;inc\CANlib.h: 676: else
 11615                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11616  003C96  010F               	movlb	15	; () banked
 11617  003C98  9119               	bcf	25,0,b	;volatile
 11618  003C9A                     l433:
 11619                           
 11620                           ; BSR set to: 15
 11621                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11622  003C9A  0100               	movlb	0	; () banked
 11623  003C9C  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11624  003C9E  D003               	goto	l434
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11628  003CA0  010F               	movlb	15	; () banked
 11629  003CA2  8319               	bsf	25,1,b	;volatile
 11630  003CA4  D002               	goto	l435
 11631  003CA6                     l434:
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;inc\CANlib.h: 681: else
 11635                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11636  003CA6  010F               	movlb	15	; () banked
 11637  003CA8  9319               	bcf	25,1,b	;volatile
 11638  003CAA                     l435:
 11639                           
 11640                           ; BSR set to: 15
 11641                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11642  003CAA  0100               	movlb	0	; () banked
 11643  003CAC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11644  003CAE  D003               	goto	l436
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11648  003CB0  010F               	movlb	15	; () banked
 11649  003CB2  8B19               	bsf	25,5,b	;volatile
 11650  003CB4  D002               	goto	l437
 11651  003CB6                     l436:
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;inc\CANlib.h: 686: else
 11655                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11656  003CB6  010F               	movlb	15	; () banked
 11657  003CB8  9B19               	bcf	25,5,b	;volatile
 11658  003CBA                     l437:
 11659                           
 11660                           ; BSR set to: 15
 11661                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11662  003CBA  0100               	movlb	0	; () banked
 11663  003CBC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11664  003CBE  D003               	goto	l438
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11668  003CC0  010F               	movlb	15	; () banked
 11669  003CC2  8D19               	bsf	25,6,b	;volatile
 11670  003CC4  D002               	goto	l439
 11671  003CC6                     l438:
 11672                           
 11673                           ; BSR set to: 0
 11674                           ;inc\CANlib.h: 691: else
 11675                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11676  003CC6  010F               	movlb	15	; () banked
 11677  003CC8  9D19               	bcf	25,6,b	;volatile
 11678  003CCA                     l439:
 11679                           
 11680                           ; BSR set to: 15
 11681                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11682  003CCA  0100               	movlb	0	; () banked
 11683  003CCC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11684  003CCE  D003               	goto	l440
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11688  003CD0  010F               	movlb	15	; () banked
 11689  003CD2  8F19               	bsf	25,7,b	;volatile
 11690  003CD4  D002               	goto	l4925
 11691  003CD6                     l440:
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;inc\CANlib.h: 696: else
 11695                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11696  003CD6  010F               	movlb	15	; () banked
 11697  003CD8  9F19               	bcf	25,7,b	;volatile
 11698  003CDA                     l4925:
 11699                           
 11700                           ; BSR set to: 15
 11701                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11702  003CDA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11703  003CDE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11704  003CE2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11705  003CE6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11706  003CEA  0E16               	movlw	22
 11707  003CEC  D006               	goto	u5600
 11708  003CEE                     u5605:
 11709  003CEE  0100               	movlb	0	; () banked
 11710  003CF0  90D8               	bcf	status,0,c
 11711  003CF2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11712  003CF4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11713  003CF6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11714  003CF8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11715  003CFA                     u5600:
 11716  003CFA  2EE8               	decfsz	wreg,f,c
 11717  003CFC  D7F8               	goto	u5605
 11718  003CFE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11719  003D02  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11720  003D06  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11721  003D0A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11725  003D0E  0100               	movlb	0	; () banked
 11726  003D10  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11727  003D12  0100               	movlb	0	; () banked
 11728  003D14  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11729  003D16  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11730  003D18  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11731  003D1A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11732                           
 11733                           ; BSR set to: 0
 11734                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11735  003D1C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11736  003D20                     l4931:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;inc\CANlib.h: 702: }
 11740                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11741  003D20  0E02               	movlw	2
 11742  003D22  0100               	movlb	0	; () banked
 11743  003D24  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11744  003D26  A4D8               	btfss	status,2,c
 11745  003D28  0012               	return	
 11746                           
 11747                           ; BSR set to: 0
 11748  003D2A  0EF7               	movlw	247
 11749  003D2C  0100               	movlb	0	; () banked
 11750  003D2E  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11751  003D30  A4D8               	btfss	status,2,c
 11752  003D32  0012               	return	
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;inc\CANlib.h: 705: {
 11756                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11757  003D34  0100               	movlb	0	; () banked
 11758  003D36  5177               	movf	CANSetMask@mask& (0+255),w,b
 11759  003D38  0100               	movlb	0	; () banked
 11760  003D3A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11761  003D3C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11762  003D3E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11763  003D40  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11767  003D42  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11771  003D46  0E00               	movlw	0
 11772  003D48  0100               	movlb	0	; () banked
 11773  003D4A  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11774  003D4C  0100               	movlb	0	; () banked
 11775  003D4E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11776  003D50  0EFF               	movlw	255
 11777  003D52  0100               	movlb	0	; () banked
 11778  003D54  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11779  003D56  0100               	movlb	0	; () banked
 11780  003D58  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11781  003D5A  0E00               	movlw	0
 11782  003D5C  0100               	movlb	0	; () banked
 11783  003D5E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11784  003D60  0100               	movlb	0	; () banked
 11785  003D62  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11786  003D64  0E00               	movlw	0
 11787  003D66  0100               	movlb	0	; () banked
 11788  003D68  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11789  003D6A  0100               	movlb	0	; () banked
 11790  003D6C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 11794  003D6E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11795  003D72  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11796  003D76  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11797  003D7A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11798  003D7E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11799  003D82  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11800  003D86  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11801  003D8A  0100               	movlb	0	; () banked
 11802  003D8C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11803  003D8E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11804  003D92  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11805  003D96  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11806  003D9A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 11810  003D9E  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 11814  003DA2  0100               	movlb	0	; () banked
 11815  003DA4  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11816  003DA6  D003               	goto	l443
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 11820  003DA8  010F               	movlb	15	; () banked
 11821  003DAA  811D               	bsf	29,0,b	;volatile
 11822  003DAC  D002               	goto	l444
 11823  003DAE                     l443:
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;inc\CANlib.h: 715: else
 11827                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 11828  003DAE  010F               	movlb	15	; () banked
 11829  003DB0  911D               	bcf	29,0,b	;volatile
 11830  003DB2                     l444:
 11831                           
 11832                           ; BSR set to: 15
 11833                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 11834  003DB2  0100               	movlb	0	; () banked
 11835  003DB4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11836  003DB6  D003               	goto	l445
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 11840  003DB8  010F               	movlb	15	; () banked
 11841  003DBA  831D               	bsf	29,1,b	;volatile
 11842  003DBC  D002               	goto	l446
 11843  003DBE                     l445:
 11844                           
 11845                           ; BSR set to: 0
 11846                           ;inc\CANlib.h: 720: else
 11847                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 11848  003DBE  010F               	movlb	15	; () banked
 11849  003DC0  931D               	bcf	29,1,b	;volatile
 11850  003DC2                     l446:
 11851                           
 11852                           ; BSR set to: 15
 11853                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 11854  003DC2  0100               	movlb	0	; () banked
 11855  003DC4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11856  003DC6  D003               	goto	l447
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 11860  003DC8  010F               	movlb	15	; () banked
 11861  003DCA  8B1D               	bsf	29,5,b	;volatile
 11862  003DCC  D002               	goto	l448
 11863  003DCE                     l447:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;inc\CANlib.h: 725: else
 11867                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 11868  003DCE  010F               	movlb	15	; () banked
 11869  003DD0  9B1D               	bcf	29,5,b	;volatile
 11870  003DD2                     l448:
 11871                           
 11872                           ; BSR set to: 15
 11873                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 11874  003DD2  0100               	movlb	0	; () banked
 11875  003DD4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11876  003DD6  D003               	goto	l449
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 11880  003DD8  010F               	movlb	15	; () banked
 11881  003DDA  8D1D               	bsf	29,6,b	;volatile
 11882  003DDC  D002               	goto	l450
 11883  003DDE                     l449:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;inc\CANlib.h: 730: else
 11887                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 11888  003DDE  010F               	movlb	15	; () banked
 11889  003DE0  9D1D               	bcf	29,6,b	;volatile
 11890  003DE2                     l450:
 11891                           
 11892                           ; BSR set to: 15
 11893                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 11894  003DE2  0100               	movlb	0	; () banked
 11895  003DE4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11896  003DE6  D003               	goto	l451
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 11900  003DE8  010F               	movlb	15	; () banked
 11901  003DEA  8F1D               	bsf	29,7,b	;volatile
 11902  003DEC  D002               	goto	l4957
 11903  003DEE                     l451:
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;inc\CANlib.h: 735: else
 11907                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 11908  003DEE  010F               	movlb	15	; () banked
 11909  003DF0  9F1D               	bcf	29,7,b	;volatile
 11910  003DF2                     l4957:
 11911                           
 11912                           ; BSR set to: 15
 11913                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 11914  003DF2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11915  003DF6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11916  003DFA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11917  003DFE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11918  003E02  0E16               	movlw	22
 11919  003E04  D006               	goto	u5680
 11920  003E06                     u5685:
 11921  003E06  0100               	movlb	0	; () banked
 11922  003E08  90D8               	bcf	status,0,c
 11923  003E0A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11924  003E0C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11925  003E0E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11926  003E10  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11927  003E12                     u5680:
 11928  003E12  2EE8               	decfsz	wreg,f,c
 11929  003E14  D7F8               	goto	u5685
 11930  003E16  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11931  003E1A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11932  003E1E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11933  003E22  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 11937  003E26  0100               	movlb	0	; () banked
 11938  003E28  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11939  003E2A  0100               	movlb	0	; () banked
 11940  003E2C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11941  003E2E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11942  003E30  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11943  003E32  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 11947  003E34  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11948  003E38  0012               	return	
 11949  003E3A                     __end_of_CANSetMask:
 11950                           	opt stack 0
 11951                           tblptru	equ	0xFF8
 11952                           tblptrh	equ	0xFF7
 11953                           tblptrl	equ	0xFF6
 11954                           tablat	equ	0xFF5
 11955                           prodh	equ	0xFF4
 11956                           prodl	equ	0xFF3
 11957                           intcon	equ	0xFF2
 11958                           intcon2	equ	0xFF1
 11959                           postinc0	equ	0xFEE
 11960                           wreg	equ	0xFE8
 11961                           postdec1	equ	0xFE5
 11962                           fsr1l	equ	0xFE1
 11963                           indf2	equ	0xFDF
 11964                           postinc2	equ	0xFDE
 11965                           postdec2	equ	0xFDD
 11966                           fsr2h	equ	0xFDA
 11967                           fsr2l	equ	0xFD9
 11968                           status	equ	0xFD8
 11969                           
 11970 ;; *************** function _CANSetFilter *****************
 11971 ;; Defined at:
 11972 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  numBuffer       1    wreg     enum E16350
 11975 ;;  filter          4   23[BANK0 ] unsigned long 
 11976 ;;  type            1   27[BANK0 ] enum E16313
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  numBuffer       1   32[BANK0 ] enum E16350
 11979 ;;  tamp            4   33[BANK0 ] unsigned long 
 11980 ;; Return value:  Size  Location     Type
 11981 ;;		None               void
 11982 ;; Registers used:
 11983 ;;		wreg, status,2, status,0
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11989 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;Total ram usage:       14 bytes
 11994 ;; Hardware stack levels used:    1
 11995 ;; Hardware stack levels required when called:    4
 11996 ;; This function calls:
 11997 ;;		Nothing
 11998 ;; This function is called by:
 11999 ;;		_CANInitialize
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003                           	psect	text32
 12004  000D52                     __ptext32:
 12005                           	opt stack 0
 12006  000D52                     _CANSetFilter:
 12007                           	opt stack 24
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;incstack = 0
 12011                           ;CANSetFilter@numBuffer stored from wreg
 12012  000D52  0100               	movlb	0	; () banked
 12013  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12014                           
 12015                           ;inc\CANlib.h: 750: unsigned long tamp;
 12016                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12017  000D56  0100               	movlb	0	; () banked
 12018  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12019  000D5A  0100               	movlb	0	; () banked
 12020  000D5C  A4D8               	btfss	status,2,c
 12021  000D5E  D058               	goto	l4981
 12022                           
 12023                           ; BSR set to: 0
 12024  000D60  0100               	movlb	0	; () banked
 12025  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12026  000D64  A4D8               	btfss	status,2,c
 12027  000D66  D054               	goto	l4981
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;inc\CANlib.h: 753: {
 12031                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12032  000D68  010F               	movlb	15	; () banked
 12033  000D6A  9701               	bcf	1,3,b	;volatile
 12034                           
 12035                           ; BSR set to: 15
 12036                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12037  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12038  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12039  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12040  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12041  000D7C  0E04               	movlw	4
 12042  000D7E  D006               	goto	u5710
 12043  000D80                     u5715:
 12044  000D80  0100               	movlb	0	; () banked
 12045  000D82  90D8               	bcf	status,0,c
 12046  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12047  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12048  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12049  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12050  000D8C                     u5710:
 12051  000D8C  2EE8               	decfsz	wreg,f,c
 12052  000D8E  D7F8               	goto	u5715
 12053  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12054  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12055  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12056  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12060  000DA0  0100               	movlb	0	; () banked
 12061  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12062  000DA4  0100               	movlb	0	; () banked
 12063  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12064  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12065  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12066  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12070  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12074  000DB2  0E07               	movlw	7
 12075  000DB4  0100               	movlb	0	; () banked
 12076  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12077  000DB8  0100               	movlb	0	; () banked
 12078  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12079  000DBC  0E00               	movlw	0
 12080  000DBE  0100               	movlb	0	; () banked
 12081  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12082  000DC2  0100               	movlb	0	; () banked
 12083  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12084  000DC6  0E00               	movlw	0
 12085  000DC8  0100               	movlb	0	; () banked
 12086  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12087  000DCC  0100               	movlb	0	; () banked
 12088  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12089  000DD0  0E00               	movlw	0
 12090  000DD2  0100               	movlb	0	; () banked
 12091  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12092  000DD6  0100               	movlb	0	; () banked
 12093  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12097  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12098  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12099  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12100  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12101  000DEA  0E05               	movlw	5
 12102  000DEC                     u5725:
 12103  000DEC  90D8               	bcf	status,0,c
 12104  000DEE  0100               	movlb	0	; () banked
 12105  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12106  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12107  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12108  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12109  000DF8  2EE8               	decfsz	wreg,f,c
 12110  000DFA  D7F8               	goto	u5725
 12111  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12112  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12113  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12114  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12118  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12119  000E10                     l4981:
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;inc\CANlib.h: 763: }
 12123                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12124  000E10  0100               	movlb	0	; () banked
 12125  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12126  000E14  A4D8               	btfss	status,2,c
 12127  000E16  D058               	goto	l4999
 12128                           
 12129                           ; BSR set to: 0
 12130  000E18  0100               	movlb	0	; () banked
 12131  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12132  000E1C  A4D8               	btfss	status,2,c
 12133  000E1E  D054               	goto	l4999
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;inc\CANlib.h: 766: {
 12137                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12138  000E20  010F               	movlb	15	; () banked
 12139  000E22  9705               	bcf	5,3,b	;volatile
 12140                           
 12141                           ; BSR set to: 15
 12142                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12143  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12144  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12145  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12146  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12147  000E34  0E04               	movlw	4
 12148  000E36  D006               	goto	u5750
 12149  000E38                     u5755:
 12150  000E38  0100               	movlb	0	; () banked
 12151  000E3A  90D8               	bcf	status,0,c
 12152  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12153  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12154  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12155  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12156  000E44                     u5750:
 12157  000E44  2EE8               	decfsz	wreg,f,c
 12158  000E46  D7F8               	goto	u5755
 12159  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12160  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12161  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12162  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12166  000E58  0100               	movlb	0	; () banked
 12167  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12168  000E5C  0100               	movlb	0	; () banked
 12169  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12170  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12171  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12172  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12176  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12180  000E6A  0E07               	movlw	7
 12181  000E6C  0100               	movlb	0	; () banked
 12182  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12183  000E70  0100               	movlb	0	; () banked
 12184  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12185  000E74  0E00               	movlw	0
 12186  000E76  0100               	movlb	0	; () banked
 12187  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12188  000E7A  0100               	movlb	0	; () banked
 12189  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12190  000E7E  0E00               	movlw	0
 12191  000E80  0100               	movlb	0	; () banked
 12192  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12193  000E84  0100               	movlb	0	; () banked
 12194  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12195  000E88  0E00               	movlw	0
 12196  000E8A  0100               	movlb	0	; () banked
 12197  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12198  000E8E  0100               	movlb	0	; () banked
 12199  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12203  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12204  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12205  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12206  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12207  000EA2  0E05               	movlw	5
 12208  000EA4                     u5765:
 12209  000EA4  90D8               	bcf	status,0,c
 12210  000EA6  0100               	movlb	0	; () banked
 12211  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12212  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12213  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12214  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12215  000EB0  2EE8               	decfsz	wreg,f,c
 12216  000EB2  D7F8               	goto	u5765
 12217  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12218  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12219  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12220  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12224  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12225  000EC8                     l4999:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;inc\CANlib.h: 776: }
 12229                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12230  000EC8  0E02               	movlw	2
 12231  000ECA  0100               	movlb	0	; () banked
 12232  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12233  000ECE  A4D8               	btfss	status,2,c
 12234  000ED0  D058               	goto	l5017
 12235                           
 12236                           ; BSR set to: 0
 12237  000ED2  0100               	movlb	0	; () banked
 12238  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12239  000ED6  A4D8               	btfss	status,2,c
 12240  000ED8  D054               	goto	l5017
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;inc\CANlib.h: 779: {
 12244                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12245  000EDA  010F               	movlb	15	; () banked
 12246  000EDC  9709               	bcf	9,3,b	;volatile
 12247                           
 12248                           ; BSR set to: 15
 12249                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12250  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12251  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12252  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12253  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12254  000EEE  0E04               	movlw	4
 12255  000EF0  D006               	goto	u5790
 12256  000EF2                     u5795:
 12257  000EF2  0100               	movlb	0	; () banked
 12258  000EF4  90D8               	bcf	status,0,c
 12259  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12260  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12261  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12262  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12263  000EFE                     u5790:
 12264  000EFE  2EE8               	decfsz	wreg,f,c
 12265  000F00  D7F8               	goto	u5795
 12266  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12267  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12268  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12269  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12273  000F12  0100               	movlb	0	; () banked
 12274  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12275  000F16  0100               	movlb	0	; () banked
 12276  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12277  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12278  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12279  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12283  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12287  000F24  0E07               	movlw	7
 12288  000F26  0100               	movlb	0	; () banked
 12289  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12290  000F2A  0100               	movlb	0	; () banked
 12291  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12292  000F2E  0E00               	movlw	0
 12293  000F30  0100               	movlb	0	; () banked
 12294  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12295  000F34  0100               	movlb	0	; () banked
 12296  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12297  000F38  0E00               	movlw	0
 12298  000F3A  0100               	movlb	0	; () banked
 12299  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12300  000F3E  0100               	movlb	0	; () banked
 12301  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12302  000F42  0E00               	movlw	0
 12303  000F44  0100               	movlb	0	; () banked
 12304  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12305  000F48  0100               	movlb	0	; () banked
 12306  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12310  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12311  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12312  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12313  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12314  000F5C  0E05               	movlw	5
 12315  000F5E                     u5805:
 12316  000F5E  90D8               	bcf	status,0,c
 12317  000F60  0100               	movlb	0	; () banked
 12318  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12319  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12320  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12321  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12322  000F6A  2EE8               	decfsz	wreg,f,c
 12323  000F6C  D7F8               	goto	u5805
 12324  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12325  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12326  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12327  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12331  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12332  000F82                     l5017:
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;inc\CANlib.h: 789: }
 12336                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12337  000F82  0E03               	movlw	3
 12338  000F84  0100               	movlb	0	; () banked
 12339  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12340  000F88  A4D8               	btfss	status,2,c
 12341  000F8A  D058               	goto	l5035
 12342                           
 12343                           ; BSR set to: 0
 12344  000F8C  0100               	movlb	0	; () banked
 12345  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12346  000F90  A4D8               	btfss	status,2,c
 12347  000F92  D054               	goto	l5035
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;inc\CANlib.h: 792: {
 12351                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12352  000F94  010F               	movlb	15	; () banked
 12353  000F96  970D               	bcf	13,3,b	;volatile
 12354                           
 12355                           ; BSR set to: 15
 12356                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12357  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12358  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12359  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12360  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12361  000FA8  0E04               	movlw	4
 12362  000FAA  D006               	goto	u5830
 12363  000FAC                     u5835:
 12364  000FAC  0100               	movlb	0	; () banked
 12365  000FAE  90D8               	bcf	status,0,c
 12366  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12367  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12368  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12369  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12370  000FB8                     u5830:
 12371  000FB8  2EE8               	decfsz	wreg,f,c
 12372  000FBA  D7F8               	goto	u5835
 12373  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12374  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12375  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12376  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12380  000FCC  0100               	movlb	0	; () banked
 12381  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12382  000FD0  0100               	movlb	0	; () banked
 12383  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12384  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12385  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12386  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12390  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12394  000FDE  0E07               	movlw	7
 12395  000FE0  0100               	movlb	0	; () banked
 12396  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12397  000FE4  0100               	movlb	0	; () banked
 12398  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12399  000FE8  0E00               	movlw	0
 12400  000FEA  0100               	movlb	0	; () banked
 12401  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12402  000FEE  0100               	movlb	0	; () banked
 12403  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12404  000FF2  0E00               	movlw	0
 12405  000FF4  0100               	movlb	0	; () banked
 12406  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12407  000FF8  0100               	movlb	0	; () banked
 12408  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12409  000FFC  0E00               	movlw	0
 12410  000FFE  0100               	movlb	0	; () banked
 12411  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12412  001002  0100               	movlb	0	; () banked
 12413  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12417  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12418  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12419  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12420  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12421  001016  0E05               	movlw	5
 12422  001018                     u5845:
 12423  001018  90D8               	bcf	status,0,c
 12424  00101A  0100               	movlb	0	; () banked
 12425  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12426  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12427  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12428  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12429  001024  2EE8               	decfsz	wreg,f,c
 12430  001026  D7F8               	goto	u5845
 12431  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12432  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12433  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12434  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12438  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12439  00103C                     l5035:
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;inc\CANlib.h: 802: }
 12443                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12444  00103C  0E04               	movlw	4
 12445  00103E  0100               	movlb	0	; () banked
 12446  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12447  001042  A4D8               	btfss	status,2,c
 12448  001044  D058               	goto	l5053
 12449                           
 12450                           ; BSR set to: 0
 12451  001046  0100               	movlb	0	; () banked
 12452  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12453  00104A  A4D8               	btfss	status,2,c
 12454  00104C  D054               	goto	l5053
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;inc\CANlib.h: 805: {
 12458                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12459  00104E  010F               	movlb	15	; () banked
 12460  001050  9711               	bcf	17,3,b	;volatile
 12461                           
 12462                           ; BSR set to: 15
 12463                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12464  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12465  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12466  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12467  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12468  001062  0E04               	movlw	4
 12469  001064  D006               	goto	u5870
 12470  001066                     u5875:
 12471  001066  0100               	movlb	0	; () banked
 12472  001068  90D8               	bcf	status,0,c
 12473  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12474  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12475  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12476  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12477  001072                     u5870:
 12478  001072  2EE8               	decfsz	wreg,f,c
 12479  001074  D7F8               	goto	u5875
 12480  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12481  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12482  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12483  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12487  001086  0100               	movlb	0	; () banked
 12488  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12489  00108A  0100               	movlb	0	; () banked
 12490  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12491  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12492  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12493  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12497  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12501  001098  0E07               	movlw	7
 12502  00109A  0100               	movlb	0	; () banked
 12503  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12504  00109E  0100               	movlb	0	; () banked
 12505  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12506  0010A2  0E00               	movlw	0
 12507  0010A4  0100               	movlb	0	; () banked
 12508  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12509  0010A8  0100               	movlb	0	; () banked
 12510  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12511  0010AC  0E00               	movlw	0
 12512  0010AE  0100               	movlb	0	; () banked
 12513  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12514  0010B2  0100               	movlb	0	; () banked
 12515  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12516  0010B6  0E00               	movlw	0
 12517  0010B8  0100               	movlb	0	; () banked
 12518  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12519  0010BC  0100               	movlb	0	; () banked
 12520  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12524  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12525  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12526  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12527  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12528  0010D0  0E05               	movlw	5
 12529  0010D2                     u5885:
 12530  0010D2  90D8               	bcf	status,0,c
 12531  0010D4  0100               	movlb	0	; () banked
 12532  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12533  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12534  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12535  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12536  0010DE  2EE8               	decfsz	wreg,f,c
 12537  0010E0  D7F8               	goto	u5885
 12538  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12539  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12540  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12541  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12545  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12546  0010F6                     l5053:
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;inc\CANlib.h: 815: }
 12550                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12551  0010F6  0E05               	movlw	5
 12552  0010F8  0100               	movlb	0	; () banked
 12553  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12554  0010FC  A4D8               	btfss	status,2,c
 12555  0010FE  D058               	goto	l5071
 12556                           
 12557                           ; BSR set to: 0
 12558  001100  0100               	movlb	0	; () banked
 12559  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12560  001104  A4D8               	btfss	status,2,c
 12561  001106  D054               	goto	l5071
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;inc\CANlib.h: 818: {
 12565                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12566  001108  010F               	movlb	15	; () banked
 12567  00110A  9715               	bcf	21,3,b	;volatile
 12568                           
 12569                           ; BSR set to: 15
 12570                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12571  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12572  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12573  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12574  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12575  00111C  0E04               	movlw	4
 12576  00111E  D006               	goto	u5910
 12577  001120                     u5915:
 12578  001120  0100               	movlb	0	; () banked
 12579  001122  90D8               	bcf	status,0,c
 12580  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12581  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12582  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12583  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12584  00112C                     u5910:
 12585  00112C  2EE8               	decfsz	wreg,f,c
 12586  00112E  D7F8               	goto	u5915
 12587  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12588  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12589  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12590  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12594  001140  0100               	movlb	0	; () banked
 12595  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12596  001144  0100               	movlb	0	; () banked
 12597  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12598  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12599  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12600  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12604  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12608  001152  0E07               	movlw	7
 12609  001154  0100               	movlb	0	; () banked
 12610  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12611  001158  0100               	movlb	0	; () banked
 12612  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12613  00115C  0E00               	movlw	0
 12614  00115E  0100               	movlb	0	; () banked
 12615  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12616  001162  0100               	movlb	0	; () banked
 12617  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12618  001166  0E00               	movlw	0
 12619  001168  0100               	movlb	0	; () banked
 12620  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12621  00116C  0100               	movlb	0	; () banked
 12622  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12623  001170  0E00               	movlw	0
 12624  001172  0100               	movlb	0	; () banked
 12625  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12626  001176  0100               	movlb	0	; () banked
 12627  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12631  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12632  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12633  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12634  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12635  00118A  0E05               	movlw	5
 12636  00118C                     u5925:
 12637  00118C  90D8               	bcf	status,0,c
 12638  00118E  0100               	movlb	0	; () banked
 12639  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12640  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12641  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12642  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12643  001198  2EE8               	decfsz	wreg,f,c
 12644  00119A  D7F8               	goto	u5925
 12645  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12646  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12647  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12648  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12652  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12653  0011B0                     l5071:
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;inc\CANlib.h: 828: }
 12657                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12658  0011B0  0100               	movlb	0	; () banked
 12659  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12660  0011B4  0100               	movlb	0	; () banked
 12661  0011B6  A4D8               	btfss	status,2,c
 12662  0011B8  D089               	goto	l5105
 12663                           
 12664                           ; BSR set to: 0
 12665  0011BA  0EF7               	movlw	247
 12666  0011BC  0100               	movlb	0	; () banked
 12667  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12668  0011C0  A4D8               	btfss	status,2,c
 12669  0011C2  D084               	goto	l5105
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;inc\CANlib.h: 832: {
 12673                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12674  0011C4  010F               	movlb	15	; () banked
 12675  0011C6  8701               	bsf	1,3,b	;volatile
 12676                           
 12677                           ; BSR set to: 15
 12678                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12679  0011C8  0100               	movlb	0	; () banked
 12680  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12681  0011CC  0100               	movlb	0	; () banked
 12682  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12683  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12684  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12685  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12689  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12693  0011DA  0E00               	movlw	0
 12694  0011DC  0100               	movlb	0	; () banked
 12695  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12696  0011E0  0100               	movlb	0	; () banked
 12697  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12698  0011E4  0EFF               	movlw	255
 12699  0011E6  0100               	movlb	0	; () banked
 12700  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12701  0011EA  0100               	movlb	0	; () banked
 12702  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12703  0011EE  0E00               	movlw	0
 12704  0011F0  0100               	movlb	0	; () banked
 12705  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12706  0011F4  0100               	movlb	0	; () banked
 12707  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12708  0011F8  0E00               	movlw	0
 12709  0011FA  0100               	movlb	0	; () banked
 12710  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12711  0011FE  0100               	movlb	0	; () banked
 12712  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12716  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12717  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12718  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12719  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12720  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12721  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12722  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12723  00121E  0100               	movlb	0	; () banked
 12724  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12725  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12726  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12727  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12728  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12732  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12736  001236  0100               	movlb	0	; () banked
 12737  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12738  00123A  D003               	goto	l463
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12742  00123C  010F               	movlb	15	; () banked
 12743  00123E  8101               	bsf	1,0,b	;volatile
 12744  001240  D002               	goto	l464
 12745  001242                     l463:
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;inc\CANlib.h: 844: else
 12749                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12750  001242  010F               	movlb	15	; () banked
 12751  001244  9101               	bcf	1,0,b	;volatile
 12752  001246                     l464:
 12753                           
 12754                           ; BSR set to: 15
 12755                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12756  001246  0100               	movlb	0	; () banked
 12757  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12758  00124A  D003               	goto	l465
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12762  00124C  010F               	movlb	15	; () banked
 12763  00124E  8301               	bsf	1,1,b	;volatile
 12764  001250  D002               	goto	l466
 12765  001252                     l465:
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;inc\CANlib.h: 849: else
 12769                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12770  001252  010F               	movlb	15	; () banked
 12771  001254  9301               	bcf	1,1,b	;volatile
 12772  001256                     l466:
 12773                           
 12774                           ; BSR set to: 15
 12775                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12776  001256  0100               	movlb	0	; () banked
 12777  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12778  00125A  D003               	goto	l467
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12782  00125C  010F               	movlb	15	; () banked
 12783  00125E  8B01               	bsf	1,5,b	;volatile
 12784  001260  D002               	goto	l468
 12785  001262                     l467:
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;inc\CANlib.h: 854: else
 12789                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 12790  001262  010F               	movlb	15	; () banked
 12791  001264  9B01               	bcf	1,5,b	;volatile
 12792  001266                     l468:
 12793                           
 12794                           ; BSR set to: 15
 12795                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 12796  001266  0100               	movlb	0	; () banked
 12797  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12798  00126A  D003               	goto	l469
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 12802  00126C  010F               	movlb	15	; () banked
 12803  00126E  8D01               	bsf	1,6,b	;volatile
 12804  001270  D002               	goto	l470
 12805  001272                     l469:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;inc\CANlib.h: 859: else
 12809                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 12810  001272  010F               	movlb	15	; () banked
 12811  001274  9D01               	bcf	1,6,b	;volatile
 12812  001276                     l470:
 12813                           
 12814                           ; BSR set to: 15
 12815                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 12816  001276  0100               	movlb	0	; () banked
 12817  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12818  00127A  D003               	goto	l471
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 12822  00127C  010F               	movlb	15	; () banked
 12823  00127E  8F01               	bsf	1,7,b	;volatile
 12824  001280  D002               	goto	l5099
 12825  001282                     l471:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;inc\CANlib.h: 864: else
 12829                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 12830  001282  010F               	movlb	15	; () banked
 12831  001284  9F01               	bcf	1,7,b	;volatile
 12832  001286                     l5099:
 12833                           
 12834                           ; BSR set to: 15
 12835                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 12836  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12837  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12838  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12839  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12840  001296  0E16               	movlw	22
 12841  001298  D006               	goto	u6000
 12842  00129A                     u6005:
 12843  00129A  0100               	movlb	0	; () banked
 12844  00129C  90D8               	bcf	status,0,c
 12845  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12846  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12847  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12848  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12849  0012A6                     u6000:
 12850  0012A6  2EE8               	decfsz	wreg,f,c
 12851  0012A8  D7F8               	goto	u6005
 12852  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12853  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12854  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12855  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 12859  0012BA  0100               	movlb	0	; () banked
 12860  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12861  0012BE  0100               	movlb	0	; () banked
 12862  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12863  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12864  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12865  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 12869  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12870  0012CC                     l5105:
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;inc\CANlib.h: 870: }
 12874                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 12875  0012CC  0100               	movlb	0	; () banked
 12876  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12877  0012D0  A4D8               	btfss	status,2,c
 12878  0012D2  D089               	goto	l5139
 12879                           
 12880                           ; BSR set to: 0
 12881  0012D4  0EF7               	movlw	247
 12882  0012D6  0100               	movlb	0	; () banked
 12883  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12884  0012DA  A4D8               	btfss	status,2,c
 12885  0012DC  D084               	goto	l5139
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;inc\CANlib.h: 873: {
 12889                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 12890  0012DE  010F               	movlb	15	; () banked
 12891  0012E0  8705               	bsf	5,3,b	;volatile
 12892                           
 12893                           ; BSR set to: 15
 12894                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 12895  0012E2  0100               	movlb	0	; () banked
 12896  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12897  0012E6  0100               	movlb	0	; () banked
 12898  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12899  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12900  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12901  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 12905  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 12909  0012F4  0E00               	movlw	0
 12910  0012F6  0100               	movlb	0	; () banked
 12911  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12912  0012FA  0100               	movlb	0	; () banked
 12913  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12914  0012FE  0EFF               	movlw	255
 12915  001300  0100               	movlb	0	; () banked
 12916  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12917  001304  0100               	movlb	0	; () banked
 12918  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12919  001308  0E00               	movlw	0
 12920  00130A  0100               	movlb	0	; () banked
 12921  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12922  00130E  0100               	movlb	0	; () banked
 12923  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12924  001312  0E00               	movlw	0
 12925  001314  0100               	movlb	0	; () banked
 12926  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12927  001318  0100               	movlb	0	; () banked
 12928  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 12932  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12933  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12934  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12935  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12936  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12937  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12938  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12939  001338  0100               	movlb	0	; () banked
 12940  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12941  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12942  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12943  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12944  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 12948  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 12952  001350  0100               	movlb	0	; () banked
 12953  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12954  001354  D003               	goto	l474
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 12958  001356  010F               	movlb	15	; () banked
 12959  001358  8105               	bsf	5,0,b	;volatile
 12960  00135A  D002               	goto	l475
 12961  00135C                     l474:
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;inc\CANlib.h: 885: else
 12965                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 12966  00135C  010F               	movlb	15	; () banked
 12967  00135E  9105               	bcf	5,0,b	;volatile
 12968  001360                     l475:
 12969                           
 12970                           ; BSR set to: 15
 12971                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 12972  001360  0100               	movlb	0	; () banked
 12973  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12974  001364  D003               	goto	l476
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 12978  001366  010F               	movlb	15	; () banked
 12979  001368  8305               	bsf	5,1,b	;volatile
 12980  00136A  D002               	goto	l477
 12981  00136C                     l476:
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;inc\CANlib.h: 890: else
 12985                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 12986  00136C  010F               	movlb	15	; () banked
 12987  00136E  9305               	bcf	5,1,b	;volatile
 12988  001370                     l477:
 12989                           
 12990                           ; BSR set to: 15
 12991                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 12992  001370  0100               	movlb	0	; () banked
 12993  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12994  001374  D003               	goto	l478
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 12998  001376  010F               	movlb	15	; () banked
 12999  001378  8B05               	bsf	5,5,b	;volatile
 13000  00137A  D002               	goto	l479
 13001  00137C                     l478:
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;inc\CANlib.h: 895: else
 13005                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13006  00137C  010F               	movlb	15	; () banked
 13007  00137E  9B05               	bcf	5,5,b	;volatile
 13008  001380                     l479:
 13009                           
 13010                           ; BSR set to: 15
 13011                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13012  001380  0100               	movlb	0	; () banked
 13013  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13014  001384  D003               	goto	l480
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13018  001386  010F               	movlb	15	; () banked
 13019  001388  8D05               	bsf	5,6,b	;volatile
 13020  00138A  D002               	goto	l481
 13021  00138C                     l480:
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;inc\CANlib.h: 900: else
 13025                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13026  00138C  010F               	movlb	15	; () banked
 13027  00138E  9D05               	bcf	5,6,b	;volatile
 13028  001390                     l481:
 13029                           
 13030                           ; BSR set to: 15
 13031                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13032  001390  0100               	movlb	0	; () banked
 13033  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13034  001394  D003               	goto	l482
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13038  001396  010F               	movlb	15	; () banked
 13039  001398  8F05               	bsf	5,7,b	;volatile
 13040  00139A  D002               	goto	l5133
 13041  00139C                     l482:
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;inc\CANlib.h: 905: else
 13045                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13046  00139C  010F               	movlb	15	; () banked
 13047  00139E  9F05               	bcf	5,7,b	;volatile
 13048  0013A0                     l5133:
 13049                           
 13050                           ; BSR set to: 15
 13051                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13052  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13053  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13054  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13055  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13056  0013B0  0E16               	movlw	22
 13057  0013B2  D006               	goto	u6080
 13058  0013B4                     u6085:
 13059  0013B4  0100               	movlb	0	; () banked
 13060  0013B6  90D8               	bcf	status,0,c
 13061  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13062  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13063  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13064  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13065  0013C0                     u6080:
 13066  0013C0  2EE8               	decfsz	wreg,f,c
 13067  0013C2  D7F8               	goto	u6085
 13068  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13069  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13070  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13071  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13075  0013D4  0100               	movlb	0	; () banked
 13076  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13077  0013D8  0100               	movlb	0	; () banked
 13078  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13079  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13080  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13081  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13085  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13086  0013E6                     l5139:
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;inc\CANlib.h: 911: }
 13090                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13091  0013E6  0E02               	movlw	2
 13092  0013E8  0100               	movlb	0	; () banked
 13093  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13094  0013EC  A4D8               	btfss	status,2,c
 13095  0013EE  D089               	goto	l5173
 13096                           
 13097                           ; BSR set to: 0
 13098  0013F0  0EF7               	movlw	247
 13099  0013F2  0100               	movlb	0	; () banked
 13100  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13101  0013F6  A4D8               	btfss	status,2,c
 13102  0013F8  D084               	goto	l5173
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;inc\CANlib.h: 915: {
 13106                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13107  0013FA  010F               	movlb	15	; () banked
 13108  0013FC  8709               	bsf	9,3,b	;volatile
 13109                           
 13110                           ; BSR set to: 15
 13111                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13112  0013FE  0100               	movlb	0	; () banked
 13113  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13114  001402  0100               	movlb	0	; () banked
 13115  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13116  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13117  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13118  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13122  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13126  001410  0E00               	movlw	0
 13127  001412  0100               	movlb	0	; () banked
 13128  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13129  001416  0100               	movlb	0	; () banked
 13130  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13131  00141A  0EFF               	movlw	255
 13132  00141C  0100               	movlb	0	; () banked
 13133  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13134  001420  0100               	movlb	0	; () banked
 13135  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13136  001424  0E00               	movlw	0
 13137  001426  0100               	movlb	0	; () banked
 13138  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13139  00142A  0100               	movlb	0	; () banked
 13140  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13141  00142E  0E00               	movlw	0
 13142  001430  0100               	movlb	0	; () banked
 13143  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13144  001434  0100               	movlb	0	; () banked
 13145  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13146                           
 13147                           ; BSR set to: 0
 13148                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13149  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13150  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13151  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13152  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13153  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13154  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13155  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13156  001454  0100               	movlb	0	; () banked
 13157  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13158  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13159  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13160  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13161  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13165  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13169  00146C  0100               	movlb	0	; () banked
 13170  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13171  001470  D003               	goto	l485
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13175  001472  010F               	movlb	15	; () banked
 13176  001474  8109               	bsf	9,0,b	;volatile
 13177  001476  D002               	goto	l486
 13178  001478                     l485:
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;inc\CANlib.h: 927: else
 13182                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13183  001478  010F               	movlb	15	; () banked
 13184  00147A  9109               	bcf	9,0,b	;volatile
 13185  00147C                     l486:
 13186                           
 13187                           ; BSR set to: 15
 13188                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13189  00147C  0100               	movlb	0	; () banked
 13190  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13191  001480  D003               	goto	l487
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13195  001482  010F               	movlb	15	; () banked
 13196  001484  8309               	bsf	9,1,b	;volatile
 13197  001486  D002               	goto	l488
 13198  001488                     l487:
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;inc\CANlib.h: 932: else
 13202                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13203  001488  010F               	movlb	15	; () banked
 13204  00148A  9309               	bcf	9,1,b	;volatile
 13205  00148C                     l488:
 13206                           
 13207                           ; BSR set to: 15
 13208                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13209  00148C  0100               	movlb	0	; () banked
 13210  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13211  001490  D003               	goto	l489
 13212                           
 13213                           ; BSR set to: 0
 13214                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13215  001492  010F               	movlb	15	; () banked
 13216  001494  8B09               	bsf	9,5,b	;volatile
 13217  001496  D002               	goto	l490
 13218  001498                     l489:
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;inc\CANlib.h: 937: else
 13222                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13223  001498  010F               	movlb	15	; () banked
 13224  00149A  9B09               	bcf	9,5,b	;volatile
 13225  00149C                     l490:
 13226                           
 13227                           ; BSR set to: 15
 13228                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13229  00149C  0100               	movlb	0	; () banked
 13230  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13231  0014A0  D003               	goto	l491
 13232                           
 13233                           ; BSR set to: 0
 13234                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13235  0014A2  010F               	movlb	15	; () banked
 13236  0014A4  8D09               	bsf	9,6,b	;volatile
 13237  0014A6  D002               	goto	l492
 13238  0014A8                     l491:
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;inc\CANlib.h: 942: else
 13242                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13243  0014A8  010F               	movlb	15	; () banked
 13244  0014AA  9D09               	bcf	9,6,b	;volatile
 13245  0014AC                     l492:
 13246                           
 13247                           ; BSR set to: 15
 13248                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13249  0014AC  0100               	movlb	0	; () banked
 13250  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13251  0014B0  D003               	goto	l493
 13252                           
 13253                           ; BSR set to: 0
 13254                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13255  0014B2  010F               	movlb	15	; () banked
 13256  0014B4  8F09               	bsf	9,7,b	;volatile
 13257  0014B6  D002               	goto	l5167
 13258  0014B8                     l493:
 13259                           
 13260                           ; BSR set to: 0
 13261                           ;inc\CANlib.h: 947: else
 13262                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13263  0014B8  010F               	movlb	15	; () banked
 13264  0014BA  9F09               	bcf	9,7,b	;volatile
 13265  0014BC                     l5167:
 13266                           
 13267                           ; BSR set to: 15
 13268                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13269  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13270  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13271  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13272  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13273  0014CC  0E16               	movlw	22
 13274  0014CE  D006               	goto	u6160
 13275  0014D0                     u6165:
 13276  0014D0  0100               	movlb	0	; () banked
 13277  0014D2  90D8               	bcf	status,0,c
 13278  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13279  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13280  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13281  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13282  0014DC                     u6160:
 13283  0014DC  2EE8               	decfsz	wreg,f,c
 13284  0014DE  D7F8               	goto	u6165
 13285  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13286  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13287  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13288  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13292  0014F0  0100               	movlb	0	; () banked
 13293  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13294  0014F4  0100               	movlb	0	; () banked
 13295  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13296  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13297  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13298  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13302  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13303  001502                     l5173:
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;inc\CANlib.h: 953: }
 13307                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13308  001502  0E03               	movlw	3
 13309  001504  0100               	movlb	0	; () banked
 13310  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13311  001508  A4D8               	btfss	status,2,c
 13312  00150A  D089               	goto	l5207
 13313                           
 13314                           ; BSR set to: 0
 13315  00150C  0EF7               	movlw	247
 13316  00150E  0100               	movlb	0	; () banked
 13317  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13318  001512  A4D8               	btfss	status,2,c
 13319  001514  D084               	goto	l5207
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;inc\CANlib.h: 956: {
 13323                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13324  001516  010F               	movlb	15	; () banked
 13325  001518  870D               	bsf	13,3,b	;volatile
 13326                           
 13327                           ; BSR set to: 15
 13328                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13329  00151A  0100               	movlb	0	; () banked
 13330  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13331  00151E  0100               	movlb	0	; () banked
 13332  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13333  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13334  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13335  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13339  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13343  00152C  0E00               	movlw	0
 13344  00152E  0100               	movlb	0	; () banked
 13345  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13346  001532  0100               	movlb	0	; () banked
 13347  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13348  001536  0EFF               	movlw	255
 13349  001538  0100               	movlb	0	; () banked
 13350  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13351  00153C  0100               	movlb	0	; () banked
 13352  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13353  001540  0E00               	movlw	0
 13354  001542  0100               	movlb	0	; () banked
 13355  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13356  001546  0100               	movlb	0	; () banked
 13357  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13358  00154A  0E00               	movlw	0
 13359  00154C  0100               	movlb	0	; () banked
 13360  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13361  001550  0100               	movlb	0	; () banked
 13362  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13366  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13367  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13368  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13369  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13370  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13371  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13372  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13373  001570  0100               	movlb	0	; () banked
 13374  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13375  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13376  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13377  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13378  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13379                           
 13380                           ; BSR set to: 0
 13381                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13382  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13386  001588  0100               	movlb	0	; () banked
 13387  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13388  00158C  D003               	goto	l496
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13392  00158E  010F               	movlb	15	; () banked
 13393  001590  810D               	bsf	13,0,b	;volatile
 13394  001592  D002               	goto	l497
 13395  001594                     l496:
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;inc\CANlib.h: 968: else
 13399                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13400  001594  010F               	movlb	15	; () banked
 13401  001596  910D               	bcf	13,0,b	;volatile
 13402  001598                     l497:
 13403                           
 13404                           ; BSR set to: 15
 13405                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13406  001598  0100               	movlb	0	; () banked
 13407  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13408  00159C  D003               	goto	l498
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13412  00159E  010F               	movlb	15	; () banked
 13413  0015A0  830D               	bsf	13,1,b	;volatile
 13414  0015A2  D002               	goto	l499
 13415  0015A4                     l498:
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;inc\CANlib.h: 973: else
 13419                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13420  0015A4  010F               	movlb	15	; () banked
 13421  0015A6  930D               	bcf	13,1,b	;volatile
 13422  0015A8                     l499:
 13423                           
 13424                           ; BSR set to: 15
 13425                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13426  0015A8  0100               	movlb	0	; () banked
 13427  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13428  0015AC  D003               	goto	l500
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13432  0015AE  010F               	movlb	15	; () banked
 13433  0015B0  8B0D               	bsf	13,5,b	;volatile
 13434  0015B2  D002               	goto	l501
 13435  0015B4                     l500:
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;inc\CANlib.h: 978: else
 13439                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13440  0015B4  010F               	movlb	15	; () banked
 13441  0015B6  9B0D               	bcf	13,5,b	;volatile
 13442  0015B8                     l501:
 13443                           
 13444                           ; BSR set to: 15
 13445                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13446  0015B8  0100               	movlb	0	; () banked
 13447  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13448  0015BC  D003               	goto	l502
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13452  0015BE  010F               	movlb	15	; () banked
 13453  0015C0  8D0D               	bsf	13,6,b	;volatile
 13454  0015C2  D002               	goto	l503
 13455  0015C4                     l502:
 13456                           
 13457                           ; BSR set to: 0
 13458                           ;inc\CANlib.h: 983: else
 13459                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13460  0015C4  010F               	movlb	15	; () banked
 13461  0015C6  9D0D               	bcf	13,6,b	;volatile
 13462  0015C8                     l503:
 13463                           
 13464                           ; BSR set to: 15
 13465                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13466  0015C8  0100               	movlb	0	; () banked
 13467  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13468  0015CC  D003               	goto	l504
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13472  0015CE  010F               	movlb	15	; () banked
 13473  0015D0  8F0D               	bsf	13,7,b	;volatile
 13474  0015D2  D002               	goto	l5201
 13475  0015D4                     l504:
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;inc\CANlib.h: 988: else
 13479                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13480  0015D4  010F               	movlb	15	; () banked
 13481  0015D6  9F0D               	bcf	13,7,b	;volatile
 13482  0015D8                     l5201:
 13483                           
 13484                           ; BSR set to: 15
 13485                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13486  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13487  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13488  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13489  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13490  0015E8  0E16               	movlw	22
 13491  0015EA  D006               	goto	u6240
 13492  0015EC                     u6245:
 13493  0015EC  0100               	movlb	0	; () banked
 13494  0015EE  90D8               	bcf	status,0,c
 13495  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13496  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13497  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13498  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13499  0015F8                     u6240:
 13500  0015F8  2EE8               	decfsz	wreg,f,c
 13501  0015FA  D7F8               	goto	u6245
 13502  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13503  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13504  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13505  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13509  00160C  0100               	movlb	0	; () banked
 13510  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13511  001610  0100               	movlb	0	; () banked
 13512  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13513  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13514  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13515  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13519  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13520  00161E                     l5207:
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;inc\CANlib.h: 994: }
 13524                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13525  00161E  0E04               	movlw	4
 13526  001620  0100               	movlb	0	; () banked
 13527  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13528  001624  A4D8               	btfss	status,2,c
 13529  001626  D089               	goto	l5241
 13530                           
 13531                           ; BSR set to: 0
 13532  001628  0EF7               	movlw	247
 13533  00162A  0100               	movlb	0	; () banked
 13534  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13535  00162E  A4D8               	btfss	status,2,c
 13536  001630  D084               	goto	l5241
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;inc\CANlib.h: 997: {
 13540                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13541  001632  010F               	movlb	15	; () banked
 13542  001634  8711               	bsf	17,3,b	;volatile
 13543                           
 13544                           ; BSR set to: 15
 13545                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13546  001636  0100               	movlb	0	; () banked
 13547  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13548  00163A  0100               	movlb	0	; () banked
 13549  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13550  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13551  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13552  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13556  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13560  001648  0E00               	movlw	0
 13561  00164A  0100               	movlb	0	; () banked
 13562  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13563  00164E  0100               	movlb	0	; () banked
 13564  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13565  001652  0EFF               	movlw	255
 13566  001654  0100               	movlb	0	; () banked
 13567  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13568  001658  0100               	movlb	0	; () banked
 13569  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13570  00165C  0E00               	movlw	0
 13571  00165E  0100               	movlb	0	; () banked
 13572  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13573  001662  0100               	movlb	0	; () banked
 13574  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13575  001666  0E00               	movlw	0
 13576  001668  0100               	movlb	0	; () banked
 13577  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13578  00166C  0100               	movlb	0	; () banked
 13579  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13583  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13584  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13585  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13586  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13587  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13588  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13589  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13590  00168C  0100               	movlb	0	; () banked
 13591  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13592  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13593  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13594  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13595  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13599  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13603  0016A4  0100               	movlb	0	; () banked
 13604  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13605  0016A8  D003               	goto	l507
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13609  0016AA  010F               	movlb	15	; () banked
 13610  0016AC  8111               	bsf	17,0,b	;volatile
 13611  0016AE  D002               	goto	l508
 13612  0016B0                     l507:
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;inc\CANlib.h: 1009: else
 13616                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13617  0016B0  010F               	movlb	15	; () banked
 13618  0016B2  9111               	bcf	17,0,b	;volatile
 13619  0016B4                     l508:
 13620                           
 13621                           ; BSR set to: 15
 13622                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13623  0016B4  0100               	movlb	0	; () banked
 13624  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13625  0016B8  D003               	goto	l509
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13629  0016BA  010F               	movlb	15	; () banked
 13630  0016BC  8311               	bsf	17,1,b	;volatile
 13631  0016BE  D002               	goto	l510
 13632  0016C0                     l509:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;inc\CANlib.h: 1014: else
 13636                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13637  0016C0  010F               	movlb	15	; () banked
 13638  0016C2  9311               	bcf	17,1,b	;volatile
 13639  0016C4                     l510:
 13640                           
 13641                           ; BSR set to: 15
 13642                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13643  0016C4  0100               	movlb	0	; () banked
 13644  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13645  0016C8  D003               	goto	l511
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13649  0016CA  010F               	movlb	15	; () banked
 13650  0016CC  8B11               	bsf	17,5,b	;volatile
 13651  0016CE  D002               	goto	l512
 13652  0016D0                     l511:
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;inc\CANlib.h: 1019: else
 13656                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13657  0016D0  010F               	movlb	15	; () banked
 13658  0016D2  9B11               	bcf	17,5,b	;volatile
 13659  0016D4                     l512:
 13660                           
 13661                           ; BSR set to: 15
 13662                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13663  0016D4  0100               	movlb	0	; () banked
 13664  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13665  0016D8  D003               	goto	l513
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13669  0016DA  010F               	movlb	15	; () banked
 13670  0016DC  8D11               	bsf	17,6,b	;volatile
 13671  0016DE  D002               	goto	l514
 13672  0016E0                     l513:
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;inc\CANlib.h: 1024: else
 13676                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13677  0016E0  010F               	movlb	15	; () banked
 13678  0016E2  9D11               	bcf	17,6,b	;volatile
 13679  0016E4                     l514:
 13680                           
 13681                           ; BSR set to: 15
 13682                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13683  0016E4  0100               	movlb	0	; () banked
 13684  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13685  0016E8  D003               	goto	l515
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13689  0016EA  010F               	movlb	15	; () banked
 13690  0016EC  8F11               	bsf	17,7,b	;volatile
 13691  0016EE  D002               	goto	l5235
 13692  0016F0                     l515:
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;inc\CANlib.h: 1029: else
 13696                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13697  0016F0  010F               	movlb	15	; () banked
 13698  0016F2  9F11               	bcf	17,7,b	;volatile
 13699  0016F4                     l5235:
 13700                           
 13701                           ; BSR set to: 15
 13702                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13703  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13704  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13705  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13706  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13707  001704  0E16               	movlw	22
 13708  001706  D006               	goto	u6320
 13709  001708                     u6325:
 13710  001708  0100               	movlb	0	; () banked
 13711  00170A  90D8               	bcf	status,0,c
 13712  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13713  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13714  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13715  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13716  001714                     u6320:
 13717  001714  2EE8               	decfsz	wreg,f,c
 13718  001716  D7F8               	goto	u6325
 13719  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13720  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13721  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13722  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13726  001728  0100               	movlb	0	; () banked
 13727  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13728  00172C  0100               	movlb	0	; () banked
 13729  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13730  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13731  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13732  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13736  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13737  00173A                     l5241:
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;inc\CANlib.h: 1035: }
 13741                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13742  00173A  0E05               	movlw	5
 13743  00173C  0100               	movlb	0	; () banked
 13744  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13745  001740  A4D8               	btfss	status,2,c
 13746  001742  0012               	return	
 13747                           
 13748                           ; BSR set to: 0
 13749  001744  0EF7               	movlw	247
 13750  001746  0100               	movlb	0	; () banked
 13751  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13752  00174A  A4D8               	btfss	status,2,c
 13753  00174C  0012               	return	
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;inc\CANlib.h: 1038: {
 13757                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13758  00174E  010F               	movlb	15	; () banked
 13759  001750  8715               	bsf	21,3,b	;volatile
 13760                           
 13761                           ; BSR set to: 15
 13762                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13763  001752  0100               	movlb	0	; () banked
 13764  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13765  001756  0100               	movlb	0	; () banked
 13766  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13767  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13768  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13769  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13773  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13777  001764  0E00               	movlw	0
 13778  001766  0100               	movlb	0	; () banked
 13779  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13780  00176A  0100               	movlb	0	; () banked
 13781  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13782  00176E  0EFF               	movlw	255
 13783  001770  0100               	movlb	0	; () banked
 13784  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13785  001774  0100               	movlb	0	; () banked
 13786  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13787  001778  0E00               	movlw	0
 13788  00177A  0100               	movlb	0	; () banked
 13789  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13790  00177E  0100               	movlb	0	; () banked
 13791  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13792  001782  0E00               	movlw	0
 13793  001784  0100               	movlb	0	; () banked
 13794  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13795  001788  0100               	movlb	0	; () banked
 13796  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 13800  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13801  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13802  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13803  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13804  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13805  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13806  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13807  0017A8  0100               	movlb	0	; () banked
 13808  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13809  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13810  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13811  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13812  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 13816  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 13820  0017C0  0100               	movlb	0	; () banked
 13821  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13822  0017C4  D003               	goto	l518
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 13826  0017C6  010F               	movlb	15	; () banked
 13827  0017C8  8115               	bsf	21,0,b	;volatile
 13828  0017CA  D002               	goto	l519
 13829  0017CC                     l518:
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;inc\CANlib.h: 1050: else
 13833                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 13834  0017CC  010F               	movlb	15	; () banked
 13835  0017CE  9115               	bcf	21,0,b	;volatile
 13836  0017D0                     l519:
 13837                           
 13838                           ; BSR set to: 15
 13839                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 13840  0017D0  0100               	movlb	0	; () banked
 13841  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13842  0017D4  D003               	goto	l520
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 13846  0017D6  010F               	movlb	15	; () banked
 13847  0017D8  8315               	bsf	21,1,b	;volatile
 13848  0017DA  D002               	goto	l521
 13849  0017DC                     l520:
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;inc\CANlib.h: 1055: else
 13853                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 13854  0017DC  010F               	movlb	15	; () banked
 13855  0017DE  9315               	bcf	21,1,b	;volatile
 13856  0017E0                     l521:
 13857                           
 13858                           ; BSR set to: 15
 13859                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 13860  0017E0  0100               	movlb	0	; () banked
 13861  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13862  0017E4  D003               	goto	l522
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 13866  0017E6  010F               	movlb	15	; () banked
 13867  0017E8  8B15               	bsf	21,5,b	;volatile
 13868  0017EA  D002               	goto	l523
 13869  0017EC                     l522:
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;inc\CANlib.h: 1060: else
 13873                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 13874  0017EC  010F               	movlb	15	; () banked
 13875  0017EE  9B15               	bcf	21,5,b	;volatile
 13876  0017F0                     l523:
 13877                           
 13878                           ; BSR set to: 15
 13879                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 13880  0017F0  0100               	movlb	0	; () banked
 13881  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13882  0017F4  D003               	goto	l524
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 13886  0017F6  010F               	movlb	15	; () banked
 13887  0017F8  8D15               	bsf	21,6,b	;volatile
 13888  0017FA  D002               	goto	l525
 13889  0017FC                     l524:
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;inc\CANlib.h: 1065: else
 13893                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 13894  0017FC  010F               	movlb	15	; () banked
 13895  0017FE  9D15               	bcf	21,6,b	;volatile
 13896  001800                     l525:
 13897                           
 13898                           ; BSR set to: 15
 13899                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 13900  001800  0100               	movlb	0	; () banked
 13901  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13902  001804  D003               	goto	l526
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 13906  001806  010F               	movlb	15	; () banked
 13907  001808  8F15               	bsf	21,7,b	;volatile
 13908  00180A  D002               	goto	l5269
 13909  00180C                     l526:
 13910                           
 13911                           ; BSR set to: 0
 13912                           ;inc\CANlib.h: 1070: else
 13913                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 13914  00180C  010F               	movlb	15	; () banked
 13915  00180E  9F15               	bcf	21,7,b	;volatile
 13916  001810                     l5269:
 13917                           
 13918                           ; BSR set to: 15
 13919                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 13920  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13921  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13922  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13923  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13924  001820  0E16               	movlw	22
 13925  001822  D006               	goto	u6400
 13926  001824                     u6405:
 13927  001824  0100               	movlb	0	; () banked
 13928  001826  90D8               	bcf	status,0,c
 13929  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13930  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13931  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13932  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13933  001830                     u6400:
 13934  001830  2EE8               	decfsz	wreg,f,c
 13935  001832  D7F8               	goto	u6405
 13936  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13937  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13938  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13939  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 13943  001844  0100               	movlb	0	; () banked
 13944  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13945  001848  0100               	movlb	0	; () banked
 13946  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13947  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13948  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13949  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 13953  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13954  001856  0012               	return	
 13955  001858                     __end_of_CANSetFilter:
 13956                           	opt stack 0
 13957                           tblptru	equ	0xFF8
 13958                           tblptrh	equ	0xFF7
 13959                           tblptrl	equ	0xFF6
 13960                           tablat	equ	0xFF5
 13961                           prodh	equ	0xFF4
 13962                           prodl	equ	0xFF3
 13963                           intcon	equ	0xFF2
 13964                           intcon2	equ	0xFF1
 13965                           postinc0	equ	0xFEE
 13966                           wreg	equ	0xFE8
 13967                           postdec1	equ	0xFE5
 13968                           fsr1l	equ	0xFE1
 13969                           indf2	equ	0xFDF
 13970                           postinc2	equ	0xFDE
 13971                           postdec2	equ	0xFDD
 13972                           fsr2h	equ	0xFDA
 13973                           fsr2l	equ	0xFD9
 13974                           status	equ	0xFD8
 13975                           
 13976 ;; *************** function _CANOperationMode *****************
 13977 ;; Defined at:
 13978 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;  mode            1    wreg     enum E16307
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  mode            1   23[BANK0 ] enum E16307
 13983 ;; Return value:  Size  Location     Type
 13984 ;;		None               void
 13985 ;; Registers used:
 13986 ;;		wreg, status,2, status,0
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;Total ram usage:        1 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    4
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_CANInitialize
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text33
 14007  005D38                     __ptext33:
 14008                           	opt stack 0
 14009  005D38                     _CANOperationMode:
 14010                           	opt stack 24
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;incstack = 0
 14014                           ;CANOperationMode@mode stored from wreg
 14015  005D38  0100               	movlb	0	; () banked
 14016  005D3A  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14017                           
 14018                           ;inc\CANlib.h: 208: CANCON = mode;
 14019  005D3C  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14020  005D40                     l4865:
 14021  005D40  506E               	movf	3950,w,c	;volatile
 14022  005D42  0BE0               	andlw	224
 14023  005D44  0100               	movlb	0	; () banked
 14024  005D46  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14025  005D48  B4D8               	btfsc	status,2,c
 14026  005D4A  0012               	return	
 14027  005D4C  D7F9               	goto	l4865
 14028  005D4E                     __end_of_CANOperationMode:
 14029                           	opt stack 0
 14030                           tblptru	equ	0xFF8
 14031                           tblptrh	equ	0xFF7
 14032                           tblptrl	equ	0xFF6
 14033                           tablat	equ	0xFF5
 14034                           prodh	equ	0xFF4
 14035                           prodl	equ	0xFF3
 14036                           intcon	equ	0xFF2
 14037                           intcon2	equ	0xFF1
 14038                           postinc0	equ	0xFEE
 14039                           wreg	equ	0xFE8
 14040                           postdec1	equ	0xFE5
 14041                           fsr1l	equ	0xFE1
 14042                           indf2	equ	0xFDF
 14043                           postinc2	equ	0xFDE
 14044                           postdec2	equ	0xFDD
 14045                           fsr2h	equ	0xFDA
 14046                           fsr2l	equ	0xFD9
 14047                           status	equ	0xFD8
 14048                           
 14049 ;; *************** function _can_interpreter *****************
 14050 ;; Defined at:
 14051 ;;		line 408 in file "parcheggio.c"
 14052 ;; Parameters:    Size  Location     Type
 14053 ;;		None
 14054 ;; Auto vars:     Size  Location     Type
 14055 ;;		None
 14056 ;; Return value:  Size  Location     Type
 14057 ;;		None               void
 14058 ;; Registers used:
 14059 ;;		wreg, status,2, status,0
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14068 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14069 ;;Total ram usage:        4 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:    4
 14072 ;; This function calls:
 14073 ;;		Nothing
 14074 ;; This function is called by:
 14075 ;;		_main
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           
 14079                           	psect	text34
 14080  005AEE                     __ptext34:
 14081                           	opt stack 0
 14082  005AEE                     _can_interpreter:
 14083                           	opt stack 26
 14084                           
 14085                           ;parcheggio.c: 409: left_speed = data_speed_rx[1];
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;incstack = 0
 14089  005AEE  C109  F038         	movff	_data_speed_rx+1,_left_speed
 14090  005AF2  6A39               	clrf	_left_speed+1,c
 14091                           
 14092                           ;parcheggio.c: 410: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14093  005AF4  5038               	movf	_left_speed,w,c
 14094  005AF6  0100               	movlb	0	; () banked
 14095  005AF8  6F77               	movwf	??_can_interpreter& (0+255),b
 14096  005AFA  0101               	movlb	1	; () banked
 14097  005AFC  5108               	movf	_data_speed_rx& (0+255),w,b
 14098  005AFE  6E38               	movwf	_left_speed,c
 14099  005B00  C077  F039         	movff	??_can_interpreter,_left_speed+1
 14100                           
 14101                           ; BSR set to: 1
 14102                           ;parcheggio.c: 411: right_speed = data_speed_rx[3];
 14103  005B04  C10B  F03C         	movff	_data_speed_rx+3,_right_speed
 14104  005B08  6A3D               	clrf	_right_speed+1,c
 14105                           
 14106                           ;parcheggio.c: 412: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14107  005B0A  503C               	movf	_right_speed,w,c
 14108  005B0C  0100               	movlb	0	; () banked
 14109  005B0E  6F77               	movwf	??_can_interpreter& (0+255),b
 14110  005B10  0101               	movlb	1	; () banked
 14111  005B12  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14112  005B14  6E3C               	movwf	_right_speed,c
 14113  005B16  C077  F03D         	movff	??_can_interpreter,_right_speed+1
 14114                           
 14115                           ; BSR set to: 1
 14116                           ;parcheggio.c: 413: actual_speed = (right_speed + left_speed) / 2;
 14117  005B1A  5038               	movf	_left_speed,w,c
 14118  005B1C  243C               	addwf	_right_speed,w,c
 14119  005B1E  0100               	movlb	0	; () banked
 14120  005B20  6F77               	movwf	??_can_interpreter& (0+255),b
 14121  005B22  5039               	movf	_left_speed+1,w,c
 14122  005B24  203D               	addwfc	_right_speed+1,w,c
 14123  005B26  0100               	movlb	0	; () banked
 14124  005B28  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14125  005B2A  90D8               	bcf	status,0,c
 14126  005B2C  0100               	movlb	0	; () banked
 14127  005B2E  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14128  005B30  0100               	movlb	0	; () banked
 14129  005B32  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14130  005B34  0100               	movlb	0	; () banked
 14131  005B36  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14132  005B38  0100               	movlb	0	; () banked
 14133  005B3A  6FDF               	movwf	_actual_speed& (0+255),b
 14134  005B3C  C079  F0E0         	movff	??_can_interpreter+2,_actual_speed+1
 14135                           
 14136                           ; BSR set to: 0
 14137  005B40  0012               	return		;funcret
 14138  005B42                     __end_of_can_interpreter:
 14139                           	opt stack 0
 14140                           tblptru	equ	0xFF8
 14141                           tblptrh	equ	0xFF7
 14142                           tblptrl	equ	0xFF6
 14143                           tablat	equ	0xFF5
 14144                           prodh	equ	0xFF4
 14145                           prodl	equ	0xFF3
 14146                           intcon	equ	0xFF2
 14147                           intcon2	equ	0xFF1
 14148                           postinc0	equ	0xFEE
 14149                           wreg	equ	0xFE8
 14150                           postdec1	equ	0xFE5
 14151                           fsr1l	equ	0xFE1
 14152                           indf2	equ	0xFDF
 14153                           postinc2	equ	0xFDE
 14154                           postdec2	equ	0xFDD
 14155                           fsr2h	equ	0xFDA
 14156                           fsr2l	equ	0xFD9
 14157                           status	equ	0xFD8
 14158                           
 14159 ;; *************** function _ISR_Bassa *****************
 14160 ;; Defined at:
 14161 ;;		line 109 in file "parcheggio.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;		None
 14164 ;; Auto vars:     Size  Location     Type
 14165 ;;  i               1   34[COMRAM] unsigned char 
 14166 ;;  gigi            1   33[COMRAM] unsigned char 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;		None               void
 14169 ;; Registers used:
 14170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14178 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;Total ram usage:       23 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    3
 14183 ;; This function calls:
 14184 ;;		_CANreceiveMessage
 14185 ;; This function is called by:
 14186 ;;		Interrupt level 1
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           	psect	intcodelo
 14191  000018                     __pintcodelo:
 14192                           	opt stack 0
 14193  000018                     _ISR_Bassa:
 14194                           	opt stack 21
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;incstack = 0
 14198  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14199  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14200  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14201  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14202  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14203  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14204  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14205  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14206  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14207  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14208  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14209  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14210  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14211  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14212  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14213  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14214  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14215  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14216                           
 14217                           ;parcheggio.c: 111: if (INTCONbits.TMR0IF == 1) {
 14218  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14219  000060  D036               	goto	i1l5941
 14220                           
 14221                           ;parcheggio.c: 112: INTCONbits.INT0IE = 0;
 14222  000062  98F2               	bcf	intcon,4,c	;volatile
 14223                           
 14224                           ;parcheggio.c: 113: T0CONbits.TMR0ON = 0;
 14225  000064  9ED5               	bcf	4053,7,c	;volatile
 14226                           
 14227                           ;parcheggio.c: 114: TMR0H = 0x34;
 14228  000066  0E34               	movlw	52
 14229  000068  6ED7               	movwf	4055,c	;volatile
 14230                           
 14231                           ;parcheggio.c: 115: TMR0L = 0xE0;
 14232  00006A  0EE0               	movlw	224
 14233  00006C  6ED6               	movwf	4054,c	;volatile
 14234                           
 14235                           ;parcheggio.c: 116: T0CONbits.TMR0ON = 1;
 14236  00006E  8ED5               	bsf	4053,7,c	;volatile
 14237                           
 14238                           ;parcheggio.c: 117: if (distance_error == 1) {
 14239  000070  A644               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14240  000072  D00C               	goto	i1l5911
 14241                           
 14242                           ;parcheggio.c: 118: sensor_distance[MUX_index] = 5000;
 14243  000074  5040               	movf	_MUX_index,w,c	;volatile
 14244  000076  0D02               	mullw	2
 14245  000078  0E24               	movlw	low _sensor_distance
 14246  00007A  24F3               	addwf	prodl,w,c
 14247  00007C  6ED9               	movwf	fsr2l,c
 14248  00007E  0E00               	movlw	high _sensor_distance
 14249  000080  20F4               	addwfc	prodh,w,c
 14250  000082  6EDA               	movwf	fsr2h,c
 14251  000084  0E88               	movlw	136
 14252  000086  6EDE               	movwf	postinc2,c
 14253  000088  0E13               	movlw	19
 14254  00008A  6EDD               	movwf	postdec2,c
 14255  00008C                     i1l5911:
 14256                           
 14257                           ;parcheggio.c: 119: }
 14258                           ;parcheggio.c: 120: MUX_index++;
 14259  00008C  2A40               	incf	_MUX_index,f,c	;volatile
 14260                           
 14261                           ;parcheggio.c: 121: if (MUX_index == 8) {
 14262  00008E  0E08               	movlw	8
 14263  000090  1840               	xorwf	_MUX_index,w,c	;volatile
 14264  000092  A4D8               	btfss	status,2,c
 14265  000094  D002               	goto	i1l695
 14266                           
 14267                           ;parcheggio.c: 122: MUX_index = 0;
 14268  000096  0E00               	movlw	0
 14269  000098  6E40               	movwf	_MUX_index,c	;volatile
 14270  00009A                     i1l695:
 14271                           
 14272                           ;parcheggio.c: 123: }
 14273                           ;parcheggio.c: 125: unsigned char gigi = 0;
 14274  00009A  0E00               	movlw	0
 14275  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14276                           
 14277                           ;parcheggio.c: 126: gigi = MUX_select[MUX_index];
 14278  00009E  5040               	movf	_MUX_index,w,c	;volatile
 14279  0000A0  0D01               	mullw	1
 14280  0000A2  0E00               	movlw	low _MUX_select
 14281  0000A4  24F3               	addwf	prodl,w,c
 14282  0000A6  6ED9               	movwf	fsr2l,c
 14283  0000A8  0E01               	movlw	high _MUX_select
 14284  0000AA  20F4               	addwfc	prodh,w,c
 14285  0000AC  6EDA               	movwf	fsr2h,c
 14286  0000AE  50DF               	movf	indf2,w,c
 14287  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14288                           
 14289                           ;parcheggio.c: 127: PORTA = gigi;
 14290  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14291                           
 14292                           ;parcheggio.c: 128: TRISBbits.RB0 = 0;
 14293  0000B6  9093               	bcf	3987,0,c	;volatile
 14294                           
 14295                           ;parcheggio.c: 129: LATBbits.LATB0 = 1;
 14296  0000B8  808A               	bsf	3978,0,c	;volatile
 14297                           
 14298                           ;parcheggio.c: 130: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14299  0000BA  0E14               	movlw	20
 14300  0000BC                     i1u907_27:
 14301  0000BC  2EE8               	decfsz	wreg,f,c
 14302  0000BE  D7FE               	goto	i1u907_27
 14303                           
 14304                           ;parcheggio.c: 131: distance_error = 1;
 14305  0000C0  8644               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14306                           
 14307                           ;parcheggio.c: 132: LATBbits.LATB0 = 0;
 14308  0000C2  908A               	bcf	3978,0,c	;volatile
 14309                           
 14310                           ;parcheggio.c: 133: TRISBbits.RB0 = 1;
 14311  0000C4  8093               	bsf	3987,0,c	;volatile
 14312                           
 14313                           ;parcheggio.c: 134: INTCONbits.INT0IF = 0;
 14314  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14315                           
 14316                           ;parcheggio.c: 135: INTCONbits.INT0IE = 1;
 14317  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14318                           
 14319                           ;parcheggio.c: 136: INTCONbits.TMR0IF = 0;
 14320  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14321                           
 14322                           ;parcheggio.c: 137: INTCON2bits.INTEDG0 = 1;
 14323  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14324  0000CE                     i1l5941:
 14325                           
 14326                           ;parcheggio.c: 138: }
 14327                           ;parcheggio.c: 140: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14328  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14329  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14330  0000D2  D001               	goto	i1l5945
 14331  0000D4  D09D               	goto	i1l709
 14332  0000D6                     i1l5945:
 14333                           
 14334                           ;parcheggio.c: 141: CANreceiveMessage(&msg);
 14335  0000D6  0E44               	movlw	low _msg
 14336  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14337  0000DA  0E01               	movlw	high _msg
 14338  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14339  0000DE  ECF2  F00F         	call	_CANreceiveMessage	;wreg free
 14340                           
 14341                           ;parcheggio.c: 142: if (msg.identifier == 0b00000001101) {
 14342  0000E2  0E0D               	movlw	13
 14343  0000E4  0101               	movlb	1	; () banked
 14344  0000E6  1944               	xorwf	_msg& (0+255),w,b
 14345  0000E8  0101               	movlb	1	; () banked
 14346  0000EA  1145               	iorwf	(_msg+1)& (0+255),w,b
 14347  0000EC  0101               	movlb	1	; () banked
 14348  0000EE  1146               	iorwf	(_msg+2)& (0+255),w,b
 14349  0000F0  0101               	movlb	1	; () banked
 14350  0000F2  1147               	iorwf	(_msg+3)& (0+255),w,b
 14351  0000F4  B4D8               	btfsc	status,2,c
 14352                           
 14353                           ; BSR set to: 1
 14354                           ;parcheggio.c: 143: asd = 0;
 14355  0000F6  9244               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14356                           
 14357                           ; BSR set to: 1
 14358                           ;parcheggio.c: 144: }
 14359                           ;parcheggio.c: 145: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14360                           
 14361                           ; BSR set to: 1
 14362  0000F8  0E07               	movlw	7
 14363  0000FA  0101               	movlb	1	; () banked
 14364  0000FC  1944               	xorwf	_msg& (0+255),w,b
 14365  0000FE  0101               	movlb	1	; () banked
 14366  000100  1145               	iorwf	(_msg+1)& (0+255),w,b
 14367  000102  0101               	movlb	1	; () banked
 14368  000104  1146               	iorwf	(_msg+2)& (0+255),w,b
 14369  000106  0101               	movlb	1	; () banked
 14370  000108  1147               	iorwf	(_msg+3)& (0+255),w,b
 14371  00010A  A4D8               	btfss	status,2,c
 14372  00010C  D02D               	goto	i1l5967
 14373                           
 14374                           ; BSR set to: 1
 14375  00010E  0101               	movlb	1	; () banked
 14376  000110  0552               	decf	(_msg+14)& (0+255),w,b
 14377  000112  B4D8               	btfsc	status,2,c
 14378  000114  D029               	goto	i1l5967
 14379                           
 14380                           ; BSR set to: 1
 14381                           ;parcheggio.c: 146: distance_average = 0;
 14382  000116  0E00               	movlw	0
 14383  000118  0100               	movlb	0	; () banked
 14384  00011A  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14385  00011C  0E00               	movlw	0
 14386  00011E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;parcheggio.c: 147: distance_dx = msg.data[1];
 14390  000120  C149  F034         	movff	_msg+5,_distance_dx	;volatile
 14391  000124  6A35               	clrf	_distance_dx+1,c	;volatile
 14392                           
 14393                           ;parcheggio.c: 148: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14394  000126  5034               	movf	_distance_dx,w,c	;volatile
 14395  000128  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14396  00012A  0101               	movlb	1	; () banked
 14397  00012C  5148               	movf	(_msg+4)& (0+255),w,b
 14398  00012E  6E34               	movwf	_distance_dx,c	;volatile
 14399  000130  C00D  F035         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14400                           
 14401                           ; BSR set to: 1
 14402                           ;parcheggio.c: 149: distance_sx = msg.data[3];
 14403  000134  C14B  F036         	movff	_msg+7,_distance_sx	;volatile
 14404  000138  6A37               	clrf	_distance_sx+1,c	;volatile
 14405                           
 14406                           ;parcheggio.c: 150: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14407  00013A  5036               	movf	_distance_sx,w,c	;volatile
 14408  00013C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14409  00013E  0101               	movlb	1	; () banked
 14410  000140  514A               	movf	(_msg+6)& (0+255),w,b
 14411  000142  6E36               	movwf	_distance_sx,c	;volatile
 14412  000144  C00D  F037         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14413                           
 14414                           ; BSR set to: 1
 14415                           ;parcheggio.c: 151: distance_average = (distance_sx + distance_dx) / 2;
 14416  000148  5034               	movf	_distance_dx,w,c	;volatile
 14417  00014A  2436               	addwf	_distance_sx,w,c	;volatile
 14418  00014C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14419  00014E  5035               	movf	_distance_dx+1,w,c	;volatile
 14420  000150  2037               	addwfc	_distance_sx+1,w,c	;volatile
 14421  000152  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14422  000154  90D8               	bcf	status,0,c
 14423  000156  300E               	rrcf	??_ISR_Bassa+1,w,c
 14424  000158  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14425  00015A  300D               	rrcf	??_ISR_Bassa,w,c
 14426  00015C  0100               	movlb	0	; () banked
 14427  00015E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14428  000160  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;parcheggio.c: 152: distance_received = 1;
 14432  000164  8844               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;parcheggio.c: 153: distance_received1 = 1;
 14436  000166  8A44               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14437  000168                     i1l5967:
 14438                           
 14439                           ;parcheggio.c: 154: }
 14440                           ;parcheggio.c: 155: if (msg.identifier == 0b00000001010) {
 14441  000168  0E0A               	movlw	10
 14442  00016A  0101               	movlb	1	; () banked
 14443  00016C  1944               	xorwf	_msg& (0+255),w,b
 14444  00016E  0101               	movlb	1	; () banked
 14445  000170  1145               	iorwf	(_msg+1)& (0+255),w,b
 14446  000172  0101               	movlb	1	; () banked
 14447  000174  1146               	iorwf	(_msg+2)& (0+255),w,b
 14448  000176  0101               	movlb	1	; () banked
 14449  000178  1147               	iorwf	(_msg+3)& (0+255),w,b
 14450  00017A  A4D8               	btfss	status,2,c
 14451  00017C  D00C               	goto	i1l5973
 14452                           
 14453                           ; BSR set to: 1
 14454                           ;parcheggio.c: 156: if (msg.data[0] == 1) {
 14455  00017E  0101               	movlb	1	; () banked
 14456  000180  0548               	decf	(_msg+4)& (0+255),w,b
 14457  000182  A4D8               	btfss	status,2,c
 14458  000184  D003               	goto	i1l702
 14459                           
 14460                           ; BSR set to: 1
 14461                           ;parcheggio.c: 157: activation = 1;
 14462  000186  8044               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14463                           
 14464                           ;parcheggio.c: 158: PORTBbits.RB6 = 1;
 14465  000188  8C81               	bsf	3969,6,c	;volatile
 14466                           
 14467                           ;parcheggio.c: 159: } else {
 14468  00018A  D005               	goto	i1l5973
 14469  00018C                     i1l702:
 14470                           
 14471                           ; BSR set to: 1
 14472                           ;parcheggio.c: 160: activation = 0;
 14473  00018C  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14474                           
 14475                           ;parcheggio.c: 161: PORTBbits.RB4 = 0;
 14476  00018E  9881               	bcf	3969,4,c	;volatile
 14477                           
 14478                           ;parcheggio.c: 162: PORTBbits.RB5 = 0;
 14479  000190  9A81               	bcf	3969,5,c	;volatile
 14480                           
 14481                           ;parcheggio.c: 163: PORTBbits.RB6 = 0;
 14482  000192  9C81               	bcf	3969,6,c	;volatile
 14483                           
 14484                           ;parcheggio.c: 164: request_sent = 0;
 14485  000194  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14486  000196                     i1l5973:
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;parcheggio.c: 165: }
 14490                           ;parcheggio.c: 166: }
 14491                           ;parcheggio.c: 167: if (msg.identifier == 0b00000001100) {
 14492  000196  0E0C               	movlw	12
 14493  000198  0101               	movlb	1	; () banked
 14494  00019A  1944               	xorwf	_msg& (0+255),w,b
 14495  00019C  0101               	movlb	1	; () banked
 14496  00019E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14497  0001A0  0101               	movlb	1	; () banked
 14498  0001A2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14499  0001A4  0101               	movlb	1	; () banked
 14500  0001A6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14501  0001A8  B4D8               	btfsc	status,2,c
 14502                           
 14503                           ; BSR set to: 1
 14504                           ;parcheggio.c: 168: start_operation = 1;
 14505  0001AA  8445               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14506                           
 14507                           ; BSR set to: 1
 14508                           ;parcheggio.c: 169: }
 14509                           ;parcheggio.c: 170: if (msg.identifier == 0b00000000110) {
 14510                           
 14511                           ; BSR set to: 1
 14512  0001AC  0E06               	movlw	6
 14513  0001AE  0101               	movlb	1	; () banked
 14514  0001B0  1944               	xorwf	_msg& (0+255),w,b
 14515  0001B2  0101               	movlb	1	; () banked
 14516  0001B4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14517  0001B6  0101               	movlb	1	; () banked
 14518  0001B8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14519  0001BA  0101               	movlb	1	; () banked
 14520  0001BC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14521  0001BE  A4D8               	btfss	status,2,c
 14522  0001C0  D025               	goto	i1l705
 14523                           
 14524                           ; BSR set to: 1
 14525                           ;parcheggio.c: 171: for (unsigned char i = 0; i < 8; i++) {
 14526  0001C2  0E00               	movlw	0
 14527  0001C4  6E23               	movwf	ISR_Bassa@i,c
 14528  0001C6                     i1l5981:
 14529                           
 14530                           ; BSR set to: 1
 14531  0001C6  0E07               	movlw	7
 14532  0001C8  6423               	cpfsgt	ISR_Bassa@i,c
 14533  0001CA  D001               	goto	i1l5985
 14534  0001CC  D014               	goto	i1l5991
 14535  0001CE                     i1l5985:
 14536                           
 14537                           ;parcheggio.c: 172: data_speed_rx[i] = msg.data[i];
 14538  0001CE  5023               	movf	ISR_Bassa@i,w,c
 14539  0001D0  0D01               	mullw	1
 14540  0001D2  0E48               	movlw	low (_msg+4)
 14541  0001D4  24F3               	addwf	prodl,w,c
 14542  0001D6  6ED9               	movwf	fsr2l,c
 14543  0001D8  0E01               	movlw	high (_msg+4)
 14544  0001DA  20F4               	addwfc	prodh,w,c
 14545  0001DC  6EDA               	movwf	fsr2h,c
 14546  0001DE  5023               	movf	ISR_Bassa@i,w,c
 14547  0001E0  0D01               	mullw	1
 14548  0001E2  0E08               	movlw	low _data_speed_rx
 14549  0001E4  24F3               	addwf	prodl,w,c
 14550  0001E6  6EE1               	movwf	fsr1l,c
 14551  0001E8  0E01               	movlw	high _data_speed_rx
 14552  0001EA  20F4               	addwfc	prodh,w,c
 14553  0001EC  6EE2               	movwf	fsr1h,c
 14554  0001EE  CFDF FFE7          	movff	indf2,indf1
 14555  0001F2  2A23               	incf	ISR_Bassa@i,f,c
 14556  0001F4  D7E8               	goto	i1l5981
 14557  0001F6                     i1l5991:
 14558                           
 14559                           ;parcheggio.c: 173: }
 14560                           ;parcheggio.c: 174: if (msg.identifier == 0b00000001101) {
 14561  0001F6  0E0D               	movlw	13
 14562  0001F8  0101               	movlb	1	; () banked
 14563  0001FA  1944               	xorwf	_msg& (0+255),w,b
 14564  0001FC  0101               	movlb	1	; () banked
 14565  0001FE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14566  000200  0101               	movlb	1	; () banked
 14567  000202  1146               	iorwf	(_msg+2)& (0+255),w,b
 14568  000204  0101               	movlb	1	; () banked
 14569  000206  1147               	iorwf	(_msg+3)& (0+255),w,b
 14570  000208  B4D8               	btfsc	status,2,c
 14571                           
 14572                           ; BSR set to: 1
 14573                           ;parcheggio.c: 175: distance_wait = 0;
 14574  00020A  9C44               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14575  00020C                     i1l705:
 14576                           
 14577                           ; BSR set to: 1
 14578                           ;parcheggio.c: 176: }
 14579                           ;parcheggio.c: 178: }
 14580                           ;parcheggio.c: 180: PIR3bits.RXB0IF = 0;
 14581  00020C  90A4               	bcf	4004,0,c	;volatile
 14582                           
 14583                           ;parcheggio.c: 181: PIR3bits.RXB1IF = 0;
 14584  00020E  92A4               	bcf	4004,1,c	;volatile
 14585  000210                     i1l709:
 14586  000210  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14587  000214  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14588  000218  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14589  00021C  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14590  000220  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14591  000224  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14592  000228  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14593  00022C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14594  000230  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14595  000234  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14596  000238  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14597  00023C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14598  000240  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14599  000244  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14600  000248  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14601  00024C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14602  000250  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14603  000254  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14604  000256  0010               	retfie	
 14605  000258                     __end_of_ISR_Bassa:
 14606                           	opt stack 0
 14607                           pclatu	equ	0xFFB
 14608                           pclath	equ	0xFFA
 14609                           tblptru	equ	0xFF8
 14610                           tblptrh	equ	0xFF7
 14611                           tblptrl	equ	0xFF6
 14612                           tablat	equ	0xFF5
 14613                           prodh	equ	0xFF4
 14614                           prodl	equ	0xFF3
 14615                           intcon	equ	0xFF2
 14616                           intcon2	equ	0xFF1
 14617                           postinc0	equ	0xFEE
 14618                           fsr0h	equ	0xFEA
 14619                           fsr0l	equ	0xFE9
 14620                           wreg	equ	0xFE8
 14621                           indf1	equ	0xFE7
 14622                           postdec1	equ	0xFE5
 14623                           fsr1h	equ	0xFE2
 14624                           fsr1l	equ	0xFE1
 14625                           bsr	equ	0xFE0
 14626                           indf2	equ	0xFDF
 14627                           postinc2	equ	0xFDE
 14628                           postdec2	equ	0xFDD
 14629                           fsr2h	equ	0xFDA
 14630                           fsr2l	equ	0xFD9
 14631                           status	equ	0xFD8
 14632                           
 14633 ;; *************** function _CANreceiveMessage *****************
 14634 ;; Defined at:
 14635 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  msg             2    0[COMRAM] PTR struct .
 14638 ;;		 -> msg(15), 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;  tamp            1   11[COMRAM] unsigned char 
 14641 ;;  error           1   10[COMRAM] unsigned char 
 14642 ;; Return value:  Size  Location     Type
 14643 ;;                  1    wreg      unsigned char 
 14644 ;; Registers used:
 14645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14646 ;; Tracked objects:
 14647 ;;		On entry : 0/0
 14648 ;;		On exit  : 0/0
 14649 ;;		Unchanged: 0/0
 14650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14653 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14654 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14655 ;;Total ram usage:       12 bytes
 14656 ;; Hardware stack levels used:    1
 14657 ;; Hardware stack levels required when called:    2
 14658 ;; This function calls:
 14659 ;;		Nothing
 14660 ;; This function is called by:
 14661 ;;		_ISR_Bassa
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           	psect	text36
 14666  001FE4                     __ptext36:
 14667                           	opt stack 0
 14668  001FE4                     _CANreceiveMessage:
 14669                           	opt stack 21
 14670                           
 14671                           ;inc\CANlib.h: 530: BYTE tamp;
 14672                           ;inc\CANlib.h: 531: BYTE error = 0;
 14673                           
 14674                           ;incstack = 0
 14675  001FE4  0E00               	movlw	0
 14676  001FE6  6E0B               	movwf	CANreceiveMessage@error,c
 14677                           
 14678                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14679  001FE8  BE74               	btfsc	3956,7,c	;volatile
 14680                           
 14681                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14682  001FEA  800B               	bsf	CANreceiveMessage@error,0,c
 14683                           
 14684                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14685  001FEC  BC74               	btfsc	3956,6,c	;volatile
 14686                           
 14687                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14688  001FEE  820B               	bsf	CANreceiveMessage@error,1,c
 14689                           
 14690                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14691  001FF0  010F               	movlb	15	; () banked
 14692  001FF2  AF50               	btfss	80,7,b	;volatile
 14693  001FF4  D143               	goto	i1l410
 14694                           
 14695                           ; BSR set to: 15
 14696                           ;inc\CANlib.h: 541: {
 14697                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14698  001FF6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14699  001FFA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14700  001FFE  6ADE               	clrf	postinc2,c
 14701  002000  6ADE               	clrf	postinc2,c
 14702  002002  6ADE               	clrf	postinc2,c
 14703  002004  6ADD               	clrf	postdec2,c
 14704                           
 14705                           ; BSR set to: 15
 14706                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14707  002006  EE20 F004          	lfsr	2,4
 14708  00200A  5001               	movf	CANreceiveMessage@msg,w,c
 14709  00200C  26D9               	addwf	fsr2l,f,c
 14710  00200E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14711  002010  22DA               	addwfc	fsr2h,f,c
 14712  002012  CF56 FFDF          	movff	3926,indf2	;volatile
 14713                           
 14714                           ; BSR set to: 15
 14715                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14716  002016  EE20 F005          	lfsr	2,5
 14717  00201A  5001               	movf	CANreceiveMessage@msg,w,c
 14718  00201C  26D9               	addwf	fsr2l,f,c
 14719  00201E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14720  002020  22DA               	addwfc	fsr2h,f,c
 14721  002022  CF57 FFDF          	movff	3927,indf2	;volatile
 14722                           
 14723                           ; BSR set to: 15
 14724                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14725  002026  EE20 F006          	lfsr	2,6
 14726  00202A  5001               	movf	CANreceiveMessage@msg,w,c
 14727  00202C  26D9               	addwf	fsr2l,f,c
 14728  00202E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14729  002030  22DA               	addwfc	fsr2h,f,c
 14730  002032  CF58 FFDF          	movff	3928,indf2	;volatile
 14731                           
 14732                           ; BSR set to: 15
 14733                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14734  002036  EE20 F007          	lfsr	2,7
 14735  00203A  5001               	movf	CANreceiveMessage@msg,w,c
 14736  00203C  26D9               	addwf	fsr2l,f,c
 14737  00203E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14738  002040  22DA               	addwfc	fsr2h,f,c
 14739  002042  CF59 FFDF          	movff	3929,indf2	;volatile
 14740                           
 14741                           ; BSR set to: 15
 14742                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14743  002046  EE20 F008          	lfsr	2,8
 14744  00204A  5001               	movf	CANreceiveMessage@msg,w,c
 14745  00204C  26D9               	addwf	fsr2l,f,c
 14746  00204E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14747  002050  22DA               	addwfc	fsr2h,f,c
 14748  002052  CF5A FFDF          	movff	3930,indf2	;volatile
 14749                           
 14750                           ; BSR set to: 15
 14751                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14752  002056  EE20 F009          	lfsr	2,9
 14753  00205A  5001               	movf	CANreceiveMessage@msg,w,c
 14754  00205C  26D9               	addwf	fsr2l,f,c
 14755  00205E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14756  002060  22DA               	addwfc	fsr2h,f,c
 14757  002062  CF5B FFDF          	movff	3931,indf2	;volatile
 14758                           
 14759                           ; BSR set to: 15
 14760                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14761  002066  EE20 F00A          	lfsr	2,10
 14762  00206A  5001               	movf	CANreceiveMessage@msg,w,c
 14763  00206C  26D9               	addwf	fsr2l,f,c
 14764  00206E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14765  002070  22DA               	addwfc	fsr2h,f,c
 14766  002072  CF5C FFDF          	movff	3932,indf2	;volatile
 14767                           
 14768                           ; BSR set to: 15
 14769                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14770  002076  EE20 F00B          	lfsr	2,11
 14771  00207A  5001               	movf	CANreceiveMessage@msg,w,c
 14772  00207C  26D9               	addwf	fsr2l,f,c
 14773  00207E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14774  002080  22DA               	addwfc	fsr2h,f,c
 14775  002082  CF5D FFDF          	movff	3933,indf2	;volatile
 14776                           
 14777                           ; BSR set to: 15
 14778                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14779  002086  EE20 F00E          	lfsr	2,14
 14780  00208A  5001               	movf	CANreceiveMessage@msg,w,c
 14781  00208C  26D9               	addwf	fsr2l,f,c
 14782  00208E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14783  002090  22DA               	addwfc	fsr2h,f,c
 14784  002092  010F               	movlb	15	; () banked
 14785  002094  AD55               	btfss	85,6,b	;volatile
 14786  002096  D002               	goto	i1u669_20
 14787  002098  0E01               	movlw	1
 14788  00209A  D001               	goto	i1u669_26
 14789  00209C                     i1u669_20:
 14790  00209C  0E00               	movlw	0
 14791  00209E                     i1u669_26:
 14792  00209E  6EDF               	movwf	indf2,c
 14793                           
 14794                           ; BSR set to: 15
 14795                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 14796  0020A0  EE20 F00D          	lfsr	2,13
 14797  0020A4  5001               	movf	CANreceiveMessage@msg,w,c
 14798  0020A6  26D9               	addwf	fsr2l,f,c
 14799  0020A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14800  0020AA  22DA               	addwfc	fsr2h,f,c
 14801  0020AC  010F               	movlb	15	; () banked
 14802  0020AE  5155               	movf	85,w,b	;volatile
 14803  0020B0  0B0F               	andlw	15
 14804  0020B2  6EDF               	movwf	indf2,c
 14805                           
 14806                           ; BSR set to: 15
 14807                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 14808  0020B4  EE20 F00C          	lfsr	2,12
 14809  0020B8  5001               	movf	CANreceiveMessage@msg,w,c
 14810  0020BA  26D9               	addwf	fsr2l,f,c
 14811  0020BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14812  0020BE  22DA               	addwfc	fsr2h,f,c
 14813  0020C0  010F               	movlb	15	; () banked
 14814  0020C2  A752               	btfss	82,3,b	;volatile
 14815  0020C4  D002               	goto	i1u670_20
 14816  0020C6  0E01               	movlw	1
 14817  0020C8  D001               	goto	i1u670_26
 14818  0020CA                     i1u670_20:
 14819  0020CA  0E00               	movlw	0
 14820  0020CC                     i1u670_26:
 14821  0020CC  6EDF               	movwf	indf2,c
 14822                           
 14823                           ; BSR set to: 15
 14824                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 14825  0020CE  010F               	movlb	15	; () banked
 14826  0020D0  B752               	btfsc	82,3,b	;volatile
 14827  0020D2  D044               	goto	i1l5551
 14828                           
 14829                           ; BSR set to: 15
 14830                           ;inc\CANlib.h: 559: {
 14831                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 14832  0020D4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14833  0020D8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14834  0020DA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14835  0020DC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14836  0020DE  0E03               	movlw	3
 14837  0020E0                     i1u672_25:
 14838  0020E0  90D8               	bcf	status,0,c
 14839  0020E2  3603               	rlcf	??_CANreceiveMessage,f,c
 14840  0020E4  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14841  0020E6  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14842  0020E8  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14843  0020EA  2EE8               	decfsz	wreg,f,c
 14844  0020EC  D7F9               	goto	i1u672_25
 14845  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14846  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14847  0020F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14848  0020FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14849  0020FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14850  002102  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14851                           
 14852                           ; BSR set to: 15
 14853                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 14854  002106  010F               	movlb	15	; () banked
 14855  002108  3952               	swapf	82,w,b	;volatile
 14856  00210A  42E8               	rrncf	wreg,f,c
 14857  00210C  0B07               	andlw	7
 14858  00210E  0B07               	andlw	7
 14859  002110  6E0C               	movwf	CANreceiveMessage@tamp,c
 14860                           
 14861                           ; BSR set to: 15
 14862                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 14863  002112  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14864  002116  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14865  00211A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 14866  00211E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 14867  002122  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 14868  002126  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 14869  00212A  500C               	movf	CANreceiveMessage@tamp,w,c
 14870  00212C  2403               	addwf	??_CANreceiveMessage,w,c
 14871  00212E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 14872  002130  0E00               	movlw	0
 14873  002132  2004               	addwfc	??_CANreceiveMessage+1,w,c
 14874  002134  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 14875  002136  0E00               	movlw	0
 14876  002138  2005               	addwfc	??_CANreceiveMessage+2,w,c
 14877  00213A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 14878  00213C  0E00               	movlw	0
 14879  00213E  2006               	addwfc	??_CANreceiveMessage+3,w,c
 14880  002140  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 14881  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14882  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14883  00214A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 14884  00214E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 14885  002152  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 14886  002156  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 14887                           
 14888                           ;inc\CANlib.h: 563: }
 14889  00215A  D08D               	goto	i1l5577
 14890  00215C                     i1l5551:
 14891                           
 14892                           ; BSR set to: 15
 14893                           ;inc\CANlib.h: 564: else
 14894                           ;inc\CANlib.h: 565: {
 14895                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 14896  00215C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 14897  002160  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14898  002162  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14899  002164  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14900  002166  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14901  00216A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14902  00216E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14903  002172  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14904  002176  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14905  00217A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14906                           
 14907                           ; BSR set to: 15
 14908                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 14909  00217E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 14910  002182  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14911  002184  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14912  002186  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14913  002188  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 14914  00218C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 14915  002190  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 14916  002194  6A03               	clrf	??_CANreceiveMessage,c
 14917  002196  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14918  00219A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14919  00219E  5003               	movf	??_CANreceiveMessage,w,c
 14920  0021A0  26DE               	addwf	postinc2,f,c
 14921  0021A2  5004               	movf	??_CANreceiveMessage+1,w,c
 14922  0021A4  22DE               	addwfc	postinc2,f,c
 14923  0021A6  5005               	movf	??_CANreceiveMessage+2,w,c
 14924  0021A8  22DE               	addwfc	postinc2,f,c
 14925  0021AA  5006               	movf	??_CANreceiveMessage+3,w,c
 14926  0021AC  22DE               	addwfc	postinc2,f,c
 14927                           
 14928                           ; BSR set to: 15
 14929                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 14930  0021AE  010F               	movlb	15	; () banked
 14931  0021B0  A152               	btfss	82,0,b	;volatile
 14932  0021B2  D00C               	goto	i1l5559
 14933                           
 14934                           ; BSR set to: 15
 14935                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 14936  0021B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14937  0021B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14938  0021BC  0E00               	movlw	0
 14939  0021BE  12DE               	iorwf	postinc2,f,c
 14940  0021C0  0E00               	movlw	0
 14941  0021C2  12DE               	iorwf	postinc2,f,c
 14942  0021C4  0E01               	movlw	1
 14943  0021C6  12DE               	iorwf	postinc2,f,c
 14944  0021C8  0E00               	movlw	0
 14945  0021CA  12DE               	iorwf	postinc2,f,c
 14946  0021CC                     i1l5559:
 14947                           
 14948                           ; BSR set to: 15
 14949                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 14950  0021CC  010F               	movlb	15	; () banked
 14951  0021CE  A352               	btfss	82,1,b	;volatile
 14952  0021D0  D00C               	goto	i1l5563
 14953                           
 14954                           ; BSR set to: 15
 14955                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 14956  0021D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14957  0021D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14958  0021DA  0E00               	movlw	0
 14959  0021DC  12DE               	iorwf	postinc2,f,c
 14960  0021DE  0E00               	movlw	0
 14961  0021E0  12DE               	iorwf	postinc2,f,c
 14962  0021E2  0E02               	movlw	2
 14963  0021E4  12DE               	iorwf	postinc2,f,c
 14964  0021E6  0E00               	movlw	0
 14965  0021E8  12DE               	iorwf	postinc2,f,c
 14966  0021EA                     i1l5563:
 14967                           
 14968                           ; BSR set to: 15
 14969                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 14970  0021EA  010F               	movlb	15	; () banked
 14971  0021EC  AB52               	btfss	82,5,b	;volatile
 14972  0021EE  D00C               	goto	i1l5567
 14973                           
 14974                           ; BSR set to: 15
 14975                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 14976  0021F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14977  0021F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14978  0021F8  0E00               	movlw	0
 14979  0021FA  12DE               	iorwf	postinc2,f,c
 14980  0021FC  0E00               	movlw	0
 14981  0021FE  12DE               	iorwf	postinc2,f,c
 14982  002200  0E04               	movlw	4
 14983  002202  12DE               	iorwf	postinc2,f,c
 14984  002204  0E00               	movlw	0
 14985  002206  12DE               	iorwf	postinc2,f,c
 14986  002208                     i1l5567:
 14987                           
 14988                           ; BSR set to: 15
 14989                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 14990  002208  010F               	movlb	15	; () banked
 14991  00220A  AD52               	btfss	82,6,b	;volatile
 14992  00220C  D00C               	goto	i1l5571
 14993                           
 14994                           ; BSR set to: 15
 14995                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 14996  00220E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14997  002212  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14998  002216  0E00               	movlw	0
 14999  002218  12DE               	iorwf	postinc2,f,c
 15000  00221A  0E00               	movlw	0
 15001  00221C  12DE               	iorwf	postinc2,f,c
 15002  00221E  0E08               	movlw	8
 15003  002220  12DE               	iorwf	postinc2,f,c
 15004  002222  0E00               	movlw	0
 15005  002224  12DE               	iorwf	postinc2,f,c
 15006  002226                     i1l5571:
 15007                           
 15008                           ; BSR set to: 15
 15009                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 15010  002226  010F               	movlb	15	; () banked
 15011  002228  AF52               	btfss	82,7,b	;volatile
 15012  00222A  D00C               	goto	i1l5575
 15013                           
 15014                           ; BSR set to: 15
 15015                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 15016  00222C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15017  002230  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15018  002234  0E00               	movlw	0
 15019  002236  12DE               	iorwf	postinc2,f,c
 15020  002238  0E00               	movlw	0
 15021  00223A  12DE               	iorwf	postinc2,f,c
 15022  00223C  0E10               	movlw	16
 15023  00223E  12DE               	iorwf	postinc2,f,c
 15024  002240  0E00               	movlw	0
 15025  002242  12DE               	iorwf	postinc2,f,c
 15026  002244                     i1l5575:
 15027                           
 15028                           ; BSR set to: 15
 15029                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15030  002244  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15031  002248  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15032  00224A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15033  00224C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15034  00224E  0E15               	movlw	21
 15035  002250                     i1u678_25:
 15036  002250  90D8               	bcf	status,0,c
 15037  002252  3603               	rlcf	??_CANreceiveMessage,f,c
 15038  002254  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15039  002256  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15040  002258  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15041  00225A  2EE8               	decfsz	wreg,f,c
 15042  00225C  D7F9               	goto	i1u678_25
 15043  00225E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15044  002262  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15045  002266  5003               	movf	??_CANreceiveMessage,w,c
 15046  002268  12DE               	iorwf	postinc2,f,c
 15047  00226A  5004               	movf	??_CANreceiveMessage+1,w,c
 15048  00226C  12DE               	iorwf	postinc2,f,c
 15049  00226E  5005               	movf	??_CANreceiveMessage+2,w,c
 15050  002270  12DE               	iorwf	postinc2,f,c
 15051  002272  5006               	movf	??_CANreceiveMessage+3,w,c
 15052  002274  12DE               	iorwf	postinc2,f,c
 15053  002276                     i1l5577:
 15054                           
 15055                           ; BSR set to: 15
 15056                           ;inc\CANlib.h: 581: }
 15057                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 15058  002276  010F               	movlb	15	; () banked
 15059  002278  9F50               	bcf	80,7,b	;volatile
 15060                           
 15061                           ; BSR set to: 15
 15062                           ;inc\CANlib.h: 584: return (error);
 15063                           ;	Return value of _CANreceiveMessage is never used
 15064  00227A  0012               	return	
 15065  00227C                     i1l410:
 15066                           
 15067                           ; BSR set to: 15
 15068                           ;inc\CANlib.h: 585: }
 15069                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 15070  00227C  AE60               	btfss	3936,7,c	;volatile
 15071  00227E  0012               	return	
 15072                           
 15073                           ; BSR set to: 15
 15074                           ;inc\CANlib.h: 588: {
 15075                           ;inc\CANlib.h: 589: msg->identifier = 0;
 15076  002280  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15077  002284  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15078  002288  6ADE               	clrf	postinc2,c
 15079  00228A  6ADE               	clrf	postinc2,c
 15080  00228C  6ADE               	clrf	postinc2,c
 15081  00228E  6ADD               	clrf	postdec2,c
 15082                           
 15083                           ; BSR set to: 15
 15084                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 15085  002290  EE20 F004          	lfsr	2,4
 15086  002294  5001               	movf	CANreceiveMessage@msg,w,c
 15087  002296  26D9               	addwf	fsr2l,f,c
 15088  002298  5002               	movf	CANreceiveMessage@msg+1,w,c
 15089  00229A  22DA               	addwfc	fsr2h,f,c
 15090  00229C  CF66 FFDF          	movff	3942,indf2	;volatile
 15091                           
 15092                           ; BSR set to: 15
 15093                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 15094  0022A0  EE20 F005          	lfsr	2,5
 15095  0022A4  5001               	movf	CANreceiveMessage@msg,w,c
 15096  0022A6  26D9               	addwf	fsr2l,f,c
 15097  0022A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15098  0022AA  22DA               	addwfc	fsr2h,f,c
 15099  0022AC  CF67 FFDF          	movff	3943,indf2	;volatile
 15100                           
 15101                           ; BSR set to: 15
 15102                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 15103  0022B0  EE20 F006          	lfsr	2,6
 15104  0022B4  5001               	movf	CANreceiveMessage@msg,w,c
 15105  0022B6  26D9               	addwf	fsr2l,f,c
 15106  0022B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15107  0022BA  22DA               	addwfc	fsr2h,f,c
 15108  0022BC  CF68 FFDF          	movff	3944,indf2	;volatile
 15109                           
 15110                           ; BSR set to: 15
 15111                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 15112  0022C0  EE20 F007          	lfsr	2,7
 15113  0022C4  5001               	movf	CANreceiveMessage@msg,w,c
 15114  0022C6  26D9               	addwf	fsr2l,f,c
 15115  0022C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15116  0022CA  22DA               	addwfc	fsr2h,f,c
 15117  0022CC  CF69 FFDF          	movff	3945,indf2	;volatile
 15118                           
 15119                           ; BSR set to: 15
 15120                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 15121  0022D0  EE20 F008          	lfsr	2,8
 15122  0022D4  5001               	movf	CANreceiveMessage@msg,w,c
 15123  0022D6  26D9               	addwf	fsr2l,f,c
 15124  0022D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15125  0022DA  22DA               	addwfc	fsr2h,f,c
 15126  0022DC  CF6A FFDF          	movff	3946,indf2	;volatile
 15127                           
 15128                           ; BSR set to: 15
 15129                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 15130  0022E0  EE20 F009          	lfsr	2,9
 15131  0022E4  5001               	movf	CANreceiveMessage@msg,w,c
 15132  0022E6  26D9               	addwf	fsr2l,f,c
 15133  0022E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15134  0022EA  22DA               	addwfc	fsr2h,f,c
 15135  0022EC  CF6B FFDF          	movff	3947,indf2	;volatile
 15136                           
 15137                           ; BSR set to: 15
 15138                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 15139  0022F0  EE20 F00A          	lfsr	2,10
 15140  0022F4  5001               	movf	CANreceiveMessage@msg,w,c
 15141  0022F6  26D9               	addwf	fsr2l,f,c
 15142  0022F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15143  0022FA  22DA               	addwfc	fsr2h,f,c
 15144  0022FC  CF6C FFDF          	movff	3948,indf2	;volatile
 15145                           
 15146                           ; BSR set to: 15
 15147                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 15148  002300  EE20 F00B          	lfsr	2,11
 15149  002304  5001               	movf	CANreceiveMessage@msg,w,c
 15150  002306  26D9               	addwf	fsr2l,f,c
 15151  002308  5002               	movf	CANreceiveMessage@msg+1,w,c
 15152  00230A  22DA               	addwfc	fsr2h,f,c
 15153  00230C  CF6D FFDF          	movff	3949,indf2	;volatile
 15154                           
 15155                           ; BSR set to: 15
 15156                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 15157  002310  EE20 F00E          	lfsr	2,14
 15158  002314  5001               	movf	CANreceiveMessage@msg,w,c
 15159  002316  26D9               	addwf	fsr2l,f,c
 15160  002318  5002               	movf	CANreceiveMessage@msg+1,w,c
 15161  00231A  22DA               	addwfc	fsr2h,f,c
 15162  00231C  AC65               	btfss	3941,6,c	;volatile
 15163  00231E  D002               	goto	i1u680_20
 15164  002320  0E01               	movlw	1
 15165  002322  D001               	goto	i1u680_26
 15166  002324                     i1u680_20:
 15167  002324  0E00               	movlw	0
 15168  002326                     i1u680_26:
 15169  002326  6EDF               	movwf	indf2,c
 15170                           
 15171                           ; BSR set to: 15
 15172                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 15173  002328  EE20 F00D          	lfsr	2,13
 15174  00232C  5001               	movf	CANreceiveMessage@msg,w,c
 15175  00232E  26D9               	addwf	fsr2l,f,c
 15176  002330  5002               	movf	CANreceiveMessage@msg+1,w,c
 15177  002332  22DA               	addwfc	fsr2h,f,c
 15178  002334  5065               	movf	3941,w,c	;volatile
 15179  002336  0B0F               	andlw	15
 15180  002338  6EDF               	movwf	indf2,c
 15181                           
 15182                           ; BSR set to: 15
 15183                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 15184  00233A  EE20 F00C          	lfsr	2,12
 15185  00233E  5001               	movf	CANreceiveMessage@msg,w,c
 15186  002340  26D9               	addwf	fsr2l,f,c
 15187  002342  5002               	movf	CANreceiveMessage@msg+1,w,c
 15188  002344  22DA               	addwfc	fsr2h,f,c
 15189  002346  A662               	btfss	3938,3,c	;volatile
 15190  002348  D002               	goto	i1u681_20
 15191  00234A  0E01               	movlw	1
 15192  00234C  D001               	goto	i1u681_26
 15193  00234E                     i1u681_20:
 15194  00234E  0E00               	movlw	0
 15195  002350                     i1u681_26:
 15196  002350  6EDF               	movwf	indf2,c
 15197                           
 15198                           ; BSR set to: 15
 15199                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15200  002352  B662               	btfsc	3938,3,c	;volatile
 15201  002354  D043               	goto	i1l5613
 15202                           
 15203                           ; BSR set to: 15
 15204                           ;inc\CANlib.h: 606: {
 15205                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15206  002356  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15207  00235A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15208  00235C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15209  00235E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15210  002360  0E03               	movlw	3
 15211  002362                     i1u683_25:
 15212  002362  90D8               	bcf	status,0,c
 15213  002364  3603               	rlcf	??_CANreceiveMessage,f,c
 15214  002366  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15215  002368  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15216  00236A  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15217  00236C  2EE8               	decfsz	wreg,f,c
 15218  00236E  D7F9               	goto	i1u683_25
 15219  002370  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15220  002374  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15221  002378  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15222  00237C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15223  002380  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15224  002384  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15225                           
 15226                           ; BSR set to: 15
 15227                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15228  002388  3862               	swapf	3938,w,c	;volatile
 15229  00238A  42E8               	rrncf	wreg,f,c
 15230  00238C  0B07               	andlw	7
 15231  00238E  0B07               	andlw	7
 15232  002390  6E0C               	movwf	CANreceiveMessage@tamp,c
 15233                           
 15234                           ; BSR set to: 15
 15235                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15236  002392  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15237  002396  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15238  00239A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15239  00239E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15240  0023A2  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15241  0023A6  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15242  0023AA  500C               	movf	CANreceiveMessage@tamp,w,c
 15243  0023AC  2403               	addwf	??_CANreceiveMessage,w,c
 15244  0023AE  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15245  0023B0  0E00               	movlw	0
 15246  0023B2  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15247  0023B4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15248  0023B6  0E00               	movlw	0
 15249  0023B8  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15250  0023BA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15251  0023BC  0E00               	movlw	0
 15252  0023BE  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15253  0023C0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15254  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15255  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15256  0023CA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15257  0023CE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15258  0023D2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15259  0023D6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15260                           
 15261                           ;inc\CANlib.h: 610: }
 15262  0023DA  D088               	goto	i1l5639
 15263  0023DC                     i1l5613:
 15264                           
 15265                           ; BSR set to: 15
 15266                           ;inc\CANlib.h: 611: else
 15267                           ;inc\CANlib.h: 612: {
 15268                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15269  0023DC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15270  0023E0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15271  0023E2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15272  0023E4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15273  0023E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15274  0023EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15275  0023EE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15276  0023F2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15277  0023F6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15278  0023FA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15279                           
 15280                           ; BSR set to: 15
 15281                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15282  0023FE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15283  002402  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15284  002404  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15285  002406  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15286  002408  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15287  00240C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15288  002410  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15289  002414  6A03               	clrf	??_CANreceiveMessage,c
 15290  002416  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15291  00241A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15292  00241E  5003               	movf	??_CANreceiveMessage,w,c
 15293  002420  26DE               	addwf	postinc2,f,c
 15294  002422  5004               	movf	??_CANreceiveMessage+1,w,c
 15295  002424  22DE               	addwfc	postinc2,f,c
 15296  002426  5005               	movf	??_CANreceiveMessage+2,w,c
 15297  002428  22DE               	addwfc	postinc2,f,c
 15298  00242A  5006               	movf	??_CANreceiveMessage+3,w,c
 15299  00242C  22DE               	addwfc	postinc2,f,c
 15300                           
 15301                           ; BSR set to: 15
 15302                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15303  00242E  A062               	btfss	3938,0,c	;volatile
 15304  002430  D00C               	goto	i1l5621
 15305                           
 15306                           ; BSR set to: 15
 15307                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15308  002432  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15309  002436  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15310  00243A  0E00               	movlw	0
 15311  00243C  12DE               	iorwf	postinc2,f,c
 15312  00243E  0E00               	movlw	0
 15313  002440  12DE               	iorwf	postinc2,f,c
 15314  002442  0E01               	movlw	1
 15315  002444  12DE               	iorwf	postinc2,f,c
 15316  002446  0E00               	movlw	0
 15317  002448  12DE               	iorwf	postinc2,f,c
 15318  00244A                     i1l5621:
 15319                           
 15320                           ; BSR set to: 15
 15321                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15322  00244A  A262               	btfss	3938,1,c	;volatile
 15323  00244C  D00C               	goto	i1l5625
 15324                           
 15325                           ; BSR set to: 15
 15326                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15327  00244E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15328  002452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15329  002456  0E00               	movlw	0
 15330  002458  12DE               	iorwf	postinc2,f,c
 15331  00245A  0E00               	movlw	0
 15332  00245C  12DE               	iorwf	postinc2,f,c
 15333  00245E  0E02               	movlw	2
 15334  002460  12DE               	iorwf	postinc2,f,c
 15335  002462  0E00               	movlw	0
 15336  002464  12DE               	iorwf	postinc2,f,c
 15337  002466                     i1l5625:
 15338                           
 15339                           ; BSR set to: 15
 15340                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15341  002466  AA62               	btfss	3938,5,c	;volatile
 15342  002468  D00C               	goto	i1l5629
 15343                           
 15344                           ; BSR set to: 15
 15345                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15346  00246A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15347  00246E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15348  002472  0E00               	movlw	0
 15349  002474  12DE               	iorwf	postinc2,f,c
 15350  002476  0E00               	movlw	0
 15351  002478  12DE               	iorwf	postinc2,f,c
 15352  00247A  0E04               	movlw	4
 15353  00247C  12DE               	iorwf	postinc2,f,c
 15354  00247E  0E00               	movlw	0
 15355  002480  12DE               	iorwf	postinc2,f,c
 15356  002482                     i1l5629:
 15357                           
 15358                           ; BSR set to: 15
 15359                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15360  002482  AC62               	btfss	3938,6,c	;volatile
 15361  002484  D00C               	goto	i1l5633
 15362                           
 15363                           ; BSR set to: 15
 15364                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15365  002486  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15366  00248A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15367  00248E  0E00               	movlw	0
 15368  002490  12DE               	iorwf	postinc2,f,c
 15369  002492  0E00               	movlw	0
 15370  002494  12DE               	iorwf	postinc2,f,c
 15371  002496  0E08               	movlw	8
 15372  002498  12DE               	iorwf	postinc2,f,c
 15373  00249A  0E00               	movlw	0
 15374  00249C  12DE               	iorwf	postinc2,f,c
 15375  00249E                     i1l5633:
 15376                           
 15377                           ; BSR set to: 15
 15378                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15379  00249E  AE62               	btfss	3938,7,c	;volatile
 15380  0024A0  D00C               	goto	i1l5637
 15381                           
 15382                           ; BSR set to: 15
 15383                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15384  0024A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15385  0024A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15386  0024AA  0E00               	movlw	0
 15387  0024AC  12DE               	iorwf	postinc2,f,c
 15388  0024AE  0E00               	movlw	0
 15389  0024B0  12DE               	iorwf	postinc2,f,c
 15390  0024B2  0E10               	movlw	16
 15391  0024B4  12DE               	iorwf	postinc2,f,c
 15392  0024B6  0E00               	movlw	0
 15393  0024B8  12DE               	iorwf	postinc2,f,c
 15394  0024BA                     i1l5637:
 15395                           
 15396                           ; BSR set to: 15
 15397                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15398  0024BA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15399  0024BE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15400  0024C0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15401  0024C2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15402  0024C4  0E15               	movlw	21
 15403  0024C6                     i1u689_25:
 15404  0024C6  90D8               	bcf	status,0,c
 15405  0024C8  3603               	rlcf	??_CANreceiveMessage,f,c
 15406  0024CA  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15407  0024CC  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15408  0024CE  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15409  0024D0  2EE8               	decfsz	wreg,f,c
 15410  0024D2  D7F9               	goto	i1u689_25
 15411  0024D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15412  0024D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15413  0024DC  5003               	movf	??_CANreceiveMessage,w,c
 15414  0024DE  12DE               	iorwf	postinc2,f,c
 15415  0024E0  5004               	movf	??_CANreceiveMessage+1,w,c
 15416  0024E2  12DE               	iorwf	postinc2,f,c
 15417  0024E4  5005               	movf	??_CANreceiveMessage+2,w,c
 15418  0024E6  12DE               	iorwf	postinc2,f,c
 15419  0024E8  5006               	movf	??_CANreceiveMessage+3,w,c
 15420  0024EA  12DE               	iorwf	postinc2,f,c
 15421  0024EC                     i1l5639:
 15422                           
 15423                           ; BSR set to: 15
 15424                           ;inc\CANlib.h: 629: }
 15425                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15426  0024EC  9E60               	bcf	3936,7,c	;volatile
 15427                           
 15428                           ; BSR set to: 15
 15429                           ;inc\CANlib.h: 632: return (error);
 15430                           ;	Return value of _CANreceiveMessage is never used
 15431  0024EE  0012               	return	
 15432  0024F0                     __end_of_CANreceiveMessage:
 15433                           	opt stack 0
 15434                           pclatu	equ	0xFFB
 15435                           pclath	equ	0xFFA
 15436                           tblptru	equ	0xFF8
 15437                           tblptrh	equ	0xFF7
 15438                           tblptrl	equ	0xFF6
 15439                           tablat	equ	0xFF5
 15440                           prodh	equ	0xFF4
 15441                           prodl	equ	0xFF3
 15442                           intcon	equ	0xFF2
 15443                           intcon2	equ	0xFF1
 15444                           postinc0	equ	0xFEE
 15445                           fsr0h	equ	0xFEA
 15446                           fsr0l	equ	0xFE9
 15447                           wreg	equ	0xFE8
 15448                           indf1	equ	0xFE7
 15449                           postdec1	equ	0xFE5
 15450                           fsr1h	equ	0xFE2
 15451                           fsr1l	equ	0xFE1
 15452                           bsr	equ	0xFE0
 15453                           indf2	equ	0xFDF
 15454                           postinc2	equ	0xFDE
 15455                           postdec2	equ	0xFDD
 15456                           fsr2h	equ	0xFDA
 15457                           fsr2l	equ	0xFD9
 15458                           status	equ	0xFD8
 15459                           
 15460 ;; *************** function _ISR_Alta *****************
 15461 ;; Defined at:
 15462 ;;		line 91 in file "parcheggio.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;		None
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;		None
 15467 ;; Return value:  Size  Location     Type
 15468 ;;		None               void
 15469 ;; Registers used:
 15470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15471 ;; Tracked objects:
 15472 ;;		On entry : 0/0
 15473 ;;		On exit  : 0/0
 15474 ;;		Unchanged: 0/0
 15475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;Total ram usage:       16 bytes
 15481 ;; Hardware stack levels used:    1
 15482 ;; Hardware stack levels required when called:    1
 15483 ;; This function calls:
 15484 ;;		___lwdiv
 15485 ;; This function is called by:
 15486 ;;		Interrupt level 2
 15487 ;; This function uses a non-reentrant model
 15488 ;;
 15489                           
 15490                           	psect	intcode
 15491  000008                     __pintcode:
 15492                           	opt stack 0
 15493  000008                     _ISR_Alta:
 15494                           	opt stack 21
 15495                           
 15496                           ; BSR set to: 15
 15497                           ;incstack = 0
 15498  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15499  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15500  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15501  000012  EF0D  F02C         	goto	int_func
 15502                           pclatu	equ	0xFFB
 15503                           pclath	equ	0xFFA
 15504                           tblptru	equ	0xFF8
 15505                           tblptrh	equ	0xFF7
 15506                           tblptrl	equ	0xFF6
 15507                           tablat	equ	0xFF5
 15508                           prodh	equ	0xFF4
 15509                           prodl	equ	0xFF3
 15510                           intcon	equ	0xFF2
 15511                           intcon2	equ	0xFF1
 15512                           postinc0	equ	0xFEE
 15513                           fsr0h	equ	0xFEA
 15514                           fsr0l	equ	0xFE9
 15515                           wreg	equ	0xFE8
 15516                           indf1	equ	0xFE7
 15517                           postdec1	equ	0xFE5
 15518                           fsr1h	equ	0xFE2
 15519                           fsr1l	equ	0xFE1
 15520                           bsr	equ	0xFE0
 15521                           indf2	equ	0xFDF
 15522                           postinc2	equ	0xFDE
 15523                           postdec2	equ	0xFDD
 15524                           fsr2h	equ	0xFDA
 15525                           fsr2l	equ	0xFD9
 15526                           status	equ	0xFD8
 15527                           
 15528                           	psect	intcode_body
 15529  00581A                     __pintcode_body:
 15530                           	opt stack 21
 15531  00581A                     int_func:
 15532                           	opt stack 21
 15533  00581A  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15534  00581E  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15535  005822  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15536  005826  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15537  00582A  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15538  00582E  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15539  005832  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15540  005836  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15541  00583A  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15542  00583E  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15543  005842  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15544  005846  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15545                           
 15546                           ;parcheggio.c: 92: if (INTCON2bits.INTEDG0 == 1) {
 15547  00584A  ACF1               	btfss	intcon2,6,c	;volatile
 15548  00584C  D007               	goto	i2l688
 15549                           
 15550                           ;parcheggio.c: 93: INTCON2bits.INTEDG0 = 0;
 15551  00584E  9CF1               	bcf	intcon2,6,c	;volatile
 15552                           
 15553                           ;parcheggio.c: 94: TMR3H = 0;
 15554  005850  0E00               	movlw	0
 15555  005852  6EB3               	movwf	4019,c	;volatile
 15556                           
 15557                           ;parcheggio.c: 95: TMR3L = 0;
 15558  005854  0E00               	movlw	0
 15559  005856  6EB2               	movwf	4018,c	;volatile
 15560                           
 15561                           ;parcheggio.c: 96: distance_error = 0;
 15562  005858  9644               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15563                           
 15564                           ;parcheggio.c: 97: } else {
 15565  00585A  D030               	goto	i2l7175
 15566  00585C                     i2l688:
 15567                           
 15568                           ;parcheggio.c: 98: gianni = TMR3H;
 15569  00585C  CFB3 F042          	movff	4019,_gianni	;volatile
 15570                           
 15571                           ;parcheggio.c: 99: asus = TMR3L;
 15572  005860  CFB2 F041          	movff	4018,_asus	;volatile
 15573                           
 15574                           ;parcheggio.c: 100: timerValue2 = gianni;
 15575  005864  C042  F03E         	movff	_gianni,_timerValue2	;volatile
 15576  005868  6A3F               	clrf	_timerValue2+1,c	;volatile
 15577                           
 15578                           ;parcheggio.c: 101: timerValue2 = ((timerValue2 << 8) | (asus));
 15579  00586A  503E               	movf	_timerValue2,w,c	;volatile
 15580  00586C  0100               	movlb	0	; () banked
 15581  00586E  6F67               	movwf	??_ISR_Alta& (0+255),b
 15582  005870  5041               	movf	_asus,w,c	;volatile
 15583  005872  6E3E               	movwf	_timerValue2,c	;volatile
 15584  005874  C067  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15585                           
 15586                           ; BSR set to: 0
 15587                           ;parcheggio.c: 102: pulse_time = timerValue2 / 2;
 15588  005878  90D8               	bcf	status,0,c
 15589  00587A  303F               	rrcf	_timerValue2+1,w,c	;volatile
 15590  00587C  0100               	movlb	0	; () banked
 15591  00587E  6F67               	movwf	??_ISR_Alta& (0+255),b
 15592  005880  303E               	rrcf	_timerValue2,w,c	;volatile
 15593  005882  6E3A               	movwf	_pulse_time,c	;volatile
 15594  005884  C067  F03B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15595                           
 15596                           ; BSR set to: 0
 15597                           ;parcheggio.c: 103: sensor_distance[MUX_index] = pulse_time / 58;
 15598  005888  C03A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15599  00588C  C03B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15600  005890  0E00               	movlw	0
 15601  005892  0100               	movlb	0	; () banked
 15602  005894  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15603  005896  0E3A               	movlw	58
 15604  005898  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15605  00589A  EC05  F02D         	call	___lwdiv	;wreg free
 15606  00589E  5040               	movf	_MUX_index,w,c	;volatile
 15607  0058A0  0D02               	mullw	2
 15608  0058A2  0E24               	movlw	low _sensor_distance
 15609  0058A4  24F3               	addwf	prodl,w,c
 15610  0058A6  6ED9               	movwf	fsr2l,c
 15611  0058A8  0E00               	movlw	high _sensor_distance
 15612  0058AA  20F4               	addwfc	prodh,w,c
 15613  0058AC  6EDA               	movwf	fsr2h,c
 15614  0058AE  0100               	movlb	0	; () banked
 15615  0058B0  C060  FFDE         	movff	?___lwdiv,postinc2
 15616  0058B4  0100               	movlb	0	; () banked
 15617  0058B6  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15618                           
 15619                           ; BSR set to: 0
 15620                           ;parcheggio.c: 104: INTCON2bits.INTEDG0 = 1;
 15621  0058BA  8CF1               	bsf	intcon2,6,c	;volatile
 15622  0058BC                     i2l7175:
 15623                           
 15624                           ;parcheggio.c: 105: }
 15625                           ;parcheggio.c: 106: INTCONbits.INT0IF = 0;
 15626  0058BC  92F2               	bcf	intcon,1,c	;volatile
 15627  0058BE  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15628  0058C2  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15629  0058C6  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15630  0058CA  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15631  0058CE  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15632  0058D2  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15633  0058D6  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15634  0058DA  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15635  0058DE  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15636  0058E2  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15637  0058E6  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15638  0058EA  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15639  0058EE  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15640  0058F2  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15641  0058F6  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15642  0058F8  0011               	retfie		f
 15643  0058FA                     __end_of_ISR_Alta:
 15644                           	opt stack 0
 15645                           pclatu	equ	0xFFB
 15646                           pclath	equ	0xFFA
 15647                           tblptru	equ	0xFF8
 15648                           tblptrh	equ	0xFF7
 15649                           tblptrl	equ	0xFF6
 15650                           tablat	equ	0xFF5
 15651                           prodh	equ	0xFF4
 15652                           prodl	equ	0xFF3
 15653                           intcon	equ	0xFF2
 15654                           intcon2	equ	0xFF1
 15655                           postinc0	equ	0xFEE
 15656                           fsr0h	equ	0xFEA
 15657                           fsr0l	equ	0xFE9
 15658                           wreg	equ	0xFE8
 15659                           indf1	equ	0xFE7
 15660                           postdec1	equ	0xFE5
 15661                           fsr1h	equ	0xFE2
 15662                           fsr1l	equ	0xFE1
 15663                           bsr	equ	0xFE0
 15664                           indf2	equ	0xFDF
 15665                           postinc2	equ	0xFDE
 15666                           postdec2	equ	0xFDD
 15667                           fsr2h	equ	0xFDA
 15668                           fsr2l	equ	0xFD9
 15669                           status	equ	0xFD8
 15670                           
 15671 ;; *************** function ___lwdiv *****************
 15672 ;; Defined at:
 15673 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15674 ;; Parameters:    Size  Location     Type
 15675 ;;  dividend        2    0[BANK0 ] unsigned int 
 15676 ;;  divisor         2    2[BANK0 ] unsigned int 
 15677 ;; Auto vars:     Size  Location     Type
 15678 ;;  quotient        2    5[BANK0 ] unsigned int 
 15679 ;;  counter         1    4[BANK0 ] unsigned char 
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  2    0[BANK0 ] unsigned int 
 15682 ;; Registers used:
 15683 ;;		wreg, status,2, status,0
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;Total ram usage:        7 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; This function calls:
 15696 ;;		Nothing
 15697 ;; This function is called by:
 15698 ;;		_ISR_Alta
 15699 ;; This function uses a non-reentrant model
 15700 ;;
 15701                           
 15702                           	psect	text38
 15703  005A0A                     __ptext38:
 15704                           	opt stack 0
 15705  005A0A                     ___lwdiv:
 15706                           	opt stack 21
 15707                           
 15708                           ;incstack = 0
 15709  005A0A  0E00               	movlw	0
 15710  005A0C  0100               	movlb	0	; () banked
 15711  005A0E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15712  005A10  0E00               	movlw	0
 15713  005A12  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15714                           
 15715                           ; BSR set to: 0
 15716  005A14  0100               	movlb	0	; () banked
 15717  005A16  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15718  005A18  0100               	movlb	0	; () banked
 15719  005A1A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15720  005A1C  B4D8               	btfsc	status,2,c
 15721  005A1E  D02C               	goto	i2l1256
 15722                           
 15723                           ; BSR set to: 0
 15724  005A20  0E01               	movlw	1
 15725  005A22  0100               	movlb	0	; () banked
 15726  005A24  6F64               	movwf	___lwdiv@counter& (0+255),b
 15727  005A26  D006               	goto	i2l7145
 15728  005A28                     i2l7143:
 15729                           
 15730                           ; BSR set to: 0
 15731  005A28  0100               	movlb	0	; () banked
 15732  005A2A  90D8               	bcf	status,0,c
 15733  005A2C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15734  005A2E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15735  005A30  0100               	movlb	0	; () banked
 15736  005A32  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15737  005A34                     i2l7145:
 15738                           
 15739                           ; BSR set to: 0
 15740  005A34  0100               	movlb	0	; () banked
 15741  005A36  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15742  005A38  D7F7               	goto	i2l7143
 15743  005A3A                     i2l7147:
 15744                           
 15745                           ; BSR set to: 0
 15746  005A3A  0100               	movlb	0	; () banked
 15747  005A3C  90D8               	bcf	status,0,c
 15748  005A3E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15749  005A40  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15750                           
 15751                           ; BSR set to: 0
 15752  005A42  0100               	movlb	0	; () banked
 15753  005A44  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15754  005A46  0100               	movlb	0	; () banked
 15755  005A48  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15756  005A4A  0100               	movlb	0	; () banked
 15757  005A4C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15758  005A4E  0100               	movlb	0	; () banked
 15759  005A50  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15760  005A52  A0D8               	btfss	status,0,c
 15761  005A54  D00A               	goto	i2l7155
 15762                           
 15763                           ; BSR set to: 0
 15764  005A56  0100               	movlb	0	; () banked
 15765  005A58  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15766  005A5A  0100               	movlb	0	; () banked
 15767  005A5C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15768  005A5E  0100               	movlb	0	; () banked
 15769  005A60  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15770  005A62  0100               	movlb	0	; () banked
 15771  005A64  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15772                           
 15773                           ; BSR set to: 0
 15774  005A66  0100               	movlb	0	; () banked
 15775  005A68  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15776  005A6A                     i2l7155:
 15777                           
 15778                           ; BSR set to: 0
 15779  005A6A  0100               	movlb	0	; () banked
 15780  005A6C  90D8               	bcf	status,0,c
 15781  005A6E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15782  005A70  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15783                           
 15784                           ; BSR set to: 0
 15785  005A72  0100               	movlb	0	; () banked
 15786  005A74  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15787  005A76  D7E1               	goto	i2l7147
 15788  005A78                     i2l1256:
 15789                           
 15790                           ; BSR set to: 0
 15791  005A78  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 15792  005A7C  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15793                           
 15794                           ; BSR set to: 0
 15795  005A80  0012               	return		;funcret
 15796  005A82                     __end_of___lwdiv:
 15797                           	opt stack 0
 15798                           pclatu	equ	0xFFB
 15799                           pclath	equ	0xFFA
 15800                           tblptru	equ	0xFF8
 15801                           tblptrh	equ	0xFF7
 15802                           tblptrl	equ	0xFF6
 15803                           tablat	equ	0xFF5
 15804                           prodh	equ	0xFF4
 15805                           prodl	equ	0xFF3
 15806                           intcon	equ	0xFF2
 15807                           intcon2	equ	0xFF1
 15808                           postinc0	equ	0xFEE
 15809                           fsr0h	equ	0xFEA
 15810                           fsr0l	equ	0xFE9
 15811                           wreg	equ	0xFE8
 15812                           indf1	equ	0xFE7
 15813                           postdec1	equ	0xFE5
 15814                           fsr1h	equ	0xFE2
 15815                           fsr1l	equ	0xFE1
 15816                           bsr	equ	0xFE0
 15817                           indf2	equ	0xFDF
 15818                           postinc2	equ	0xFDE
 15819                           postdec2	equ	0xFDD
 15820                           fsr2h	equ	0xFDA
 15821                           fsr2l	equ	0xFD9
 15822                           status	equ	0xFD8
 15823                           pclatu	equ	0xFFB
 15824                           pclath	equ	0xFFA
 15825                           tblptru	equ	0xFF8
 15826                           tblptrh	equ	0xFF7
 15827                           tblptrl	equ	0xFF6
 15828                           tablat	equ	0xFF5
 15829                           prodh	equ	0xFF4
 15830                           prodl	equ	0xFF3
 15831                           intcon	equ	0xFF2
 15832                           intcon2	equ	0xFF1
 15833                           postinc0	equ	0xFEE
 15834                           fsr0h	equ	0xFEA
 15835                           fsr0l	equ	0xFE9
 15836                           wreg	equ	0xFE8
 15837                           indf1	equ	0xFE7
 15838                           postdec1	equ	0xFE5
 15839                           fsr1h	equ	0xFE2
 15840                           fsr1l	equ	0xFE1
 15841                           bsr	equ	0xFE0
 15842                           indf2	equ	0xFDF
 15843                           postinc2	equ	0xFDE
 15844                           postdec2	equ	0xFDD
 15845                           fsr2h	equ	0xFDA
 15846                           fsr2l	equ	0xFD9
 15847                           status	equ	0xFD8
 15848                           
 15849                           	psect	param0
 15850  0000                     pclatu	equ	0xFFB
 15851                           pclath	equ	0xFFA
 15852                           tblptru	equ	0xFF8
 15853                           tblptrh	equ	0xFF7
 15854                           tblptrl	equ	0xFF6
 15855                           tablat	equ	0xFF5
 15856                           prodh	equ	0xFF4
 15857                           prodl	equ	0xFF3
 15858                           intcon	equ	0xFF2
 15859                           intcon2	equ	0xFF1
 15860                           postinc0	equ	0xFEE
 15861                           fsr0h	equ	0xFEA
 15862                           fsr0l	equ	0xFE9
 15863                           wreg	equ	0xFE8
 15864                           indf1	equ	0xFE7
 15865                           postdec1	equ	0xFE5
 15866                           fsr1h	equ	0xFE2
 15867                           fsr1l	equ	0xFE1
 15868                           bsr	equ	0xFE0
 15869                           indf2	equ	0xFDF
 15870                           postinc2	equ	0xFDE
 15871                           postdec2	equ	0xFDD
 15872                           fsr2h	equ	0xFDA
 15873                           fsr2l	equ	0xFD9
 15874                           status	equ	0xFD8
 15875                           
 15876                           	psect	temp
 15877  000048                     btemp:
 15878                           	opt stack 0
 15879  000048                     	ds	1
 15880  0000                     int$flags	set	btemp
 15881                           pclatu	equ	0xFFB
 15882                           pclath	equ	0xFFA
 15883                           tblptru	equ	0xFF8
 15884                           tblptrh	equ	0xFF7
 15885                           tblptrl	equ	0xFF6
 15886                           tablat	equ	0xFF5
 15887                           prodh	equ	0xFF4
 15888                           prodl	equ	0xFF3
 15889                           intcon	equ	0xFF2
 15890                           intcon2	equ	0xFF1
 15891                           postinc0	equ	0xFEE
 15892                           fsr0h	equ	0xFEA
 15893                           fsr0l	equ	0xFE9
 15894                           wreg	equ	0xFE8
 15895                           indf1	equ	0xFE7
 15896                           postdec1	equ	0xFE5
 15897                           fsr1h	equ	0xFE2
 15898                           fsr1l	equ	0xFE1
 15899                           bsr	equ	0xFE0
 15900                           indf2	equ	0xFDF
 15901                           postinc2	equ	0xFDE
 15902                           postdec2	equ	0xFDD
 15903                           fsr2h	equ	0xFDA
 15904                           fsr2l	equ	0xFD9
 15905                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    119     136
    BANK1           256     85     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_correction(BANK1[8]), data_speed(BANK1[8]), data_test(BANK1[8]), 
		 -> data_brake(BANK1[8]), data_steering(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___fladd
    ___flsub->_floor
    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _parallelo->_asin
    _park_routine->_matematica
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _floor->___xxtofl
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  235319
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   85923
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   79454
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0  143462
                     _CANsendMessage
                            ___fladd
                            ___fltol
                           ___xxtofl
                           _can_send
                            _delay_s
                         _matematica
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  124911
                                             53 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   54115
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   46560
                                             20 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4    9498
                                            115 BANK0      4     0      4
                                              6 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     645
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6161
                                             12 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   54204
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   32321
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1544
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1220
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12239
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5387
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5674
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4039
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     419
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     373
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    5562
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    5467
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                     ___flneg (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               _abs (ARG)
             _frexp
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      20        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 30 17:39:36 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 00DB          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 3CD6  
                         l432 3C96                           l521 17E0                           l513 16E0  
                         l433 3C9A                           l522 17EC                           l514 16E4  
                         l450 3DE2                           l434 3CA6                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 3DEE                           l443 3DAE                           l435 3CAA  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 3DB2                           l436 3CB6                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 3DBE                           l437 3CBA                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 3DC2  
                         l438 3CC6                           l358 4E76                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 3DCE                           l439 3CCA                           l359 4E80  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 3DD2  
                         l384 1B92                           l368 1904                           l720 4FE6  
                         l481 1390                           l465 1252                           l449 3DDE  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 511A  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5D32                           l396 1E02                           l388 1CAC  
                         l493 14B8                           l485 1478                           l477 1370  
                         l469 1272                           l397 1E0C                           l389 1CB0  
                         l486 147C                           l478 137C                           l398 1E16  
                         l742 44EE                           l718 511E                           l487 1488  
                         l479 1380                           l399 1E20                           l496 1594  
                         l488 148C                           l752 4674                           l497 1598  
                         l489 1498                           l569 5C40                           l498 15A4  
                         l746 4552                           l499 15A8                           l749 45EA  
                         l849 5CDE                           l785 494A                           l779 4988  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5CBC  
                         _asd 0221                           _dir 0222                           _cos 5736  
                         _jjj 0128                           _kkk 012C                           _msg 0144  
                         _sin 3E3A                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1310 2B64                          l1056 5268  
                        l1401 31BC                          l1049 5C02                          l1411 32CE  
                        l1403 322A                          l1308 2BA4                          l1325 2D18  
                        l1309 2B98                          l1334 2DAC                          l1450 4D3E  
                        l1451 4D56                          l1443 4CE2                          l1364 390A  
                        l1436 4C36                          l1292 4140                          l1373 3942  
                        l1461 5500                          l1375 39B0                          l1367 38B2  
                        l1394 2F20                          l5201 15D8                          l5105 12CC  
                        l5017 0F82                          l5035 103C                          l5133 13A0  
                        l5053 10F6                          l4501 1A1C                          ?_cos 01B0  
                        l5207 161E                          l5071 11B0                          l5303 5342  
                        l5241 173A                          l5235 16F4                          l5139 13E6  
                        l4507 1A3C                          l6131 2B7E                          l6051 2A06  
                        l5173 1502                          l5413 4E8C                          l5309 5382  
                        l6221 2E14                          l6117 2AE4                          l6045 29E2  
                        l7005 5054                          l5167 14BC                          l5415 4ED0  
                        l5407 4E6E                          l5423 5CF4                          l6231 2E46  
                        l6207 2DA6                          l6135 2B88                          l6063 2A3C  
                        l6055 2A10                          l5409 4E84                          l4633 1E2A  
                        l4481 1922                          l6225 2E36                          l6217 2E02  
                        l6153 2C06                          l6145 2BC8                          l6129 2B78  
                        l7033 4466                          l7009 508C                          l5099 1286  
                        l5427 5D06                          l6155 2C0C                          l6163 2C28  
                        l6075 2A74                          l6323 31A6                          l7131 4700  
                        l5269 1810                          l4653 1F24                          l4557 1BA6  
                        l5277 5C32                          l6237 2E5A                          l6229 2E42  
                        l6181 2D4A                          l6173 2CF8                          l6069 2A50  
                        l6253 2EAE                          l7117 46CC                          l4583 1CC0  
                        l6191 2D6C                          l6159 2C16                          l6087 2AA8  
                        l6079 2A7E                          l6271 2F08                          l6255 2EB4  
                        l6247 2E8A                          l6423 56BE                          l6407 5650  
                        l7119 46D8                          l4577 1CA0                          l5289 52BC  
                        l6353 32A0                          l6329 31D0                          l6281 2F48  
                        l6273 2F0E                          l6265 2EE4                          l6257 2EC6  
                        l6441 5724                          l6433 56EE                          l4931 3D20  
                        l4659 1F44                          l5299 530A                          l6515 371E  
                        l6187 2D60                          l6363 32EE                          l6355 32B4  
                        l6339 3224                          l6435 56FE                          l6427 56D2  
                        l6451 4C46                          l4925 3CDA                          l6621 3A42  
                        l6605 39AA                          l6509 36FA                          l6197 2D80  
                        l6365 32F8                          l6349 327A                          l6277 2F34  
                        l6701 338E                          l6437 5708                          l6461 4C86  
                        l7069 4556                          l6631 3A78                          l6623 3A64  
                        l6615 3A00                          l6551 37DA                          l6535 377C  
                        l6519 3728                          l6383 5216                          l6375 5176  
                        l6199 2D86                          l6471 4D30                          l6463 4CC4  
                        l7191 5B80                          l4865 5D40                          l6529 3758  
                        l6801 4BAE                          l6457 4C6E                          l4883 3B54  
                        l6619 3A2E                          l6539 3786                          l6379 51C4  
                        l6707 33AE                          l6483 4DA8                          l6459 4C76  
                        l4981 0E10                          l4957 3DF2                          l6629 3A74  
                        l6389 52B4                          l6653 5568                          l6397 5C74  
                        l6805 4BC6                          l6469 4D20                          l6493 5920  
                        l6583 3906                          l6559 3808                          l6655 560C  
                        l6743 3530                          l6751 35A6                          l6727 3420  
                        l6719 33F0                          l6671 5442                          l6577 38BE  
                        l6569 3886                          l6745 356A                          l6737 34A2  
                        l6833 4010                          l6817 3E70                          l4899 3C0A  
                        l6595 3956                          l6771 36BC                          l6763 3686  
                        l6739 34AA                          l6675 5464                          l6667 542E  
                        l6923 490C                          l6931 496C                          l6589 392C  
                        l6853 41B0                          l6829 3F9A                          l4999 0EC8  
                        l6687 3330                          l6785 49E6                          l6865 42DE  
                        l6929 4966                          l6699 337C                          ?_sin 0197  
                        l6789 4A5A                          l6877 43C0                          l6893 57BE  
                        l6987 4F96                          l6979 4F82                          l6999 5044  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u5000 1BC6                          u5010 1C12                          u5005 1BBA  
                        u5015 1C06                          u6000 12A6                          u5025 1C72  
                        u5130 1E4A                          u5140 1E96                          u6005 129A  
                        u5135 1E3E                          u5145 1E8A                          u5155 1EF6  
                        u5510 3B86                          u6400 1830                          u6320 1714  
                        u6240 15F8                          u6160 14DC                          u6080 13C0  
                        u5600 3CFA                          u5515 3B7A                          u6405 1824  
                        u6325 1708                          u6245 15EC                          u6165 14D0  
                        u6085 13B4                          u5605 3CEE                          u5525 3BE6  
                        u5710 0D8C                          u5470 3AD0                          u7400 2B2E  
                        u7410 2B46                          u8130 5952                          u5715 0D80  
                        u5475 3AC4                          u7420 2B48                          u5805 0F5E  
                        u5725 0DEC                          u5485 3B30                          u5910 112C  
                        u5830 0FB8                          u5750 0E44                          u4870 1942  
                        u5680 3E12                          u4880 198E                          u8138 5956  
                        u8410 5452                          u5915 1120                          u5835 0FAC  
                        u5755 0E38                          u4875 1936                          u8340 3A14  
                        u5925 118C                          u5845 1018                          u5765 0EA4  
                        u5685 3E06                          u4885 1982                          u5870 1072  
                        u5790 0EFE                          u4895 19EE                          u5875 1066  
                        u5795 0EF2                          u9067 5C34                          u8620 3F94  
                        u5885 10D2                          u8550 4A16                          u8630 3F96  
                        u8711 47A0                          u8560 4A18                          u8800 4F92  
                        u8721 47AC                          u7860 328E                          u7780 3148  
                        u7960 5670                          u8760 4964                          u7785 313C  
                        u8930 4502                          u7965 5664                          u8870 50A0  
                        u8970 46AA           __size_of_CANSetMask 039E                          abs@a 0077  
                        _alfa 011C                          _fabs 5BD6                          _data 0153  
                        _beta 0120                          _atan 499A                          _asin 4152  
                        _main 5B42                          _asus 0041                          cos@f 01B0  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0048  
                        _sqrt 3312                          pclat 000FFA                          sin@f 0197  
                        sin@y 019B                          prodh 000FF4                          prodl 000FF3  
                        start 0258                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 5D38                         ??_abs 0079                         ??_cos 00D7  
                       ??_sin 00D7    __size_of_CANreceiveMessage 050C                         ?_fabs 00AD  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 0198  
             __end_of___fladd 2E6C                         ?_main 0001               __end_of___fldiv 3A9C  
             __end_of___flneg 5C86               __end_of___flmul 3312               __end_of___flsub 5BD6  
             __end_of___fltol 5736                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0240               __end_of___lwdiv 5A82  
                       i1l410 227C                         i1l702 018C                         i1l705 020C  
                       i1l709 0210                         i1l695 009A                         i2l688 585C  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 58FA  
             __end_of_delay_s 5D14                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _bordo 0124                         fabs@d 00AD                         _floor 53EE  
                       _frexp 58FA                         _errno 0142                         atan@f 00D1  
                       atan@x 0187                         atan@y 0183                         asin@x 0198  
                       asin@y 01A8      can_send@data_correction1 0087                __pbitbssCOMRAM 0220  
                       sin@x2 01A3                         tablat 000FF5          __end_of_CANisTxReady 5D38  
                       sqrt@a 00C1                         sqrt@i 0184                         sqrt@p 0189  
                       status 000FD8                  ?_park_search 0001               __initialization 598E  
                __end_of_fabs 5C14                  __end_of_atan 4BEC                  __end_of_asin 4464  
                __end_of_main 5B8E                  __end_of_sqrt 36DC                        ??_fabs 00B1  
                      ??_atan 00D5                        ??_asin 00D5                        ??_main 00D7  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 00D3                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 0225               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 0046                        i2l1256 5A78                        i1l5621 244A  
                      i1l5613 23DC                        i1l5551 215C                        i1l5633 249E  
                      i1l5625 2466                        i1l5571 2226                        i1l5563 21EA  
                      i1l5637 24BA                        i1l5629 2482                        i1l5639 24EC  
                      i1l5575 2244                        i1l5567 2208                        i1l5559 21CC  
                      i1l5911 008C                        i1l5577 2276                        i1l5941 00CE  
                      i1l5945 00D6                        i1l5981 01C6                        i1l5973 0196  
                      i1l5991 01F6                        i1l5967 0168                        i1l5985 01CE  
                      i2l7143 5A28                        i2l7145 5A34                        i2l7155 5A6A  
                      i2l7147 5A3A                        i2l7175 58BC                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 53EE            CANsendMessage@tamp 0083  
            __end_of___xxtofl 4DBA             __end_of_ISR_Bassa 0258              __end_of_delay_ms 5C4E  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 5128  
             _data_correction 0163                     ??___fladd 00B5                        ___wmul 5C86  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D7                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0042  
                      _raggio 01DC                        clear_0 5994                        clear_1 59A0  
                      clear_2 59B0                     ??_delay_s 007F                        floor@i 0189  
                      floor@x 00D3               __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0046  
                      sin@sgn 01A7                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00B1                    ___flge@ff2 00B5                  ___xxtofl@arg 0185  
                ___xxtofl@exp 0184                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 5A00            __end_of_CANSetMask 3E3A               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00A9                 ?_park_routine 0001                  eval_poly@res 00CD  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 0001  
                   ?_ISR_Alta 0001                  __pidataBANK0 5D58                  __pidataBANK1 5D4E  
               __end_of_floor 5512                 __end_of_frexp 598E              ??_configurazione 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 00DF         __size_of_CANisTxReady 0024  
                     ??_floor 00D7                       ??_frexp 007D      __end_of_CANOperationMode 5D4E  
                  __pbssBANK0 00D7                    __pbssBANK1 0100               _sensor_distance 0024  
          __size_of_eval_poly 0118                    _data_brake 015B                ??_park_routine 00D7  
               ISR_Bassa@gigi 0022       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 0220      __size_of_can_interpreter 0054            __size_of_parallelo 028C  
        __size_of_park_search 01A8             _old_alignment_gap 0134                    ??_ISR_Alta 0067  
                     ?___flge 00B1                       ?___wmul 0077                       _CANSTAT 000F6E  
                _CANisTxReady 5D14                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 0001                     ?___xxtofl 00CB  
      __size_of_CANInitialize 01C6                     ?_delay_ms 007D                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 0038  
                     __Lparam 0000              delay_ms@value_ms 007D                       _Pminimo 0118  
             __size_of___flge 0190                    _matematica 24F0                       ___fladd 29C4  
                     ___fldiv 36DC                       ___flneg 5C4E                       ___flmul 2E6C  
                     ___flsub 5B8E                       ___fltol 562A               __size_of___wmul 0036  
                     ___lwdiv 5A0A                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 598E             __end_of_eval_poly 562A                       _delay_s 5CE8  
                     __ramtop 0D00                       __ptext0 5B42                       __ptext1 4F80  
                     __ptext2 470E                       __ptext3 5CBC                       __ptext4 4464  
                     __ptext5 24F0                       __ptext6 5736                       __ptext7 3E3A  
                     __ptext8 53EE                       __ptext9 58FA                     _T0CONbits 000FD5  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 018C                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 0190             __end_of_parallelo 499A                    ??_delay_ms 007F  
                     asin@sgn 019C        CANreceiveMessage@error 000B               _start_operation 022A  
              __pintcode_body 581A          end_of_initialization 5A00                       int_func 581A  
               _CANInitialize 4DBA                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 018A                       sqrt@exp 018E             ??_can_interpreter 0077  
     _steering_correction_dir 022B                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 470E                   ___fladd@grs 00C0                 ___xxtofl@sign 0183  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0040                    _pulse_time 003A       _clock_counter_reference 00E1  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085                    ?_ISR_Bassa 0001  
                 ?_matematica 0001                __end_of___flge 52B8             __size_of_ISR_Alta 58F2  
              __end_of___wmul 5CBC                 __pidataCOMRAM 5D56                    floor@expon 018D  
         start_initialization 598E                    eval_poly@d 00C5                    eval_poly@n 00C7  
                  eval_poly@x 00C1                   __end_of_abs 5CE8                   __end_of_cos 581A  
                 __end_of_sin 4152           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001                 _data_steering 0173  
                  frexp@value 0077            ??_CANOperationMode 0077             _distance_received 0224  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 0043  
                    ??___flge 00B9                      ??___wmul 007B                   __pdataBANK0 00E7  
                 __pdataBANK1 01D8              __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00B1  
                   ___fladd@b 00AD        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0024                     ___flsub@a 0193  
                   ___flsub@b 018F                 __pcstackBANK0 0060                 __pcstackBANK1 0183  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0136  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 04D4               ??_CANInitialize 008A                     _asin$3746 01AC  
                   _asin$3747 01A4                     _asin$3748 01A0                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B0                 _alignment_gap 00D7  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0023                   ??_ISR_Bassa 000D                     __pintcode 0008  
                    ?___fladd 00AD                      ?___fldiv 0077                      ?___flneg 00A9  
                    ?___flmul 0090                      ?___flsub 018F                      ?___fltol 00C1  
       __size_of_park_routine 02AA                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 0001                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 5512                     _larghezza 01D8              ___lwdiv@quotient 0065  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurazione 006C  
                   _parallelo 470E         CANreceiveMessage@tamp 000C                _prima_sterzata 0138  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 5AEE  
                   atan@recip 018B                  _park_routine 4464  _delay_quartz_frequency_value 00E7  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u670_20 20CA  
                    i1u670_26 20CC                      i1u680_20 2324                      i1u672_25 20E0  
                    i1u680_26 2326                      i1u681_20 234E                      i1u681_26 2350  
                    i1u683_25 2362                      i1u907_27 00BC                      i1u669_20 209C  
                    i1u669_26 209E                      _PIR3bits 000FA4                      i1u678_25 2250  
                    i1u689_25 24C6                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 00E5                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 5128                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0034                   _distance_sx 0036  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                     copy_data0 59CA  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 00E3  
                   frexp@eptr 007B                      __Hparam0 0000                      __Lparam0 0000  
                _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52                  ??_matematica 00D7  
               _request_sent1 0229              __size_of___fladd 04A8                    _CANSetMask 3A9C  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C                      _cos$3749 01B4  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 52B8  
                    ___xxtofl 4BEC                  _RXF0SIDLbits 000F01                      _delay_ms 5C14  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
              ??_CANSetFilter 007C                      __ptext10 4BEC                      __ptext11 562A  
                    __ptext20 29C4                      __ptext12 5B8E                      __ptext21 5128  
                    __ptext13 4152                      __ptext30 4DBA                      __ptext22 36DC  
                    __ptext14 3312                      __ptext31 3A9C                      __ptext23 5CE8  
                    __ptext15 499A                      __ptext32 0D52                      __ptext24 5C14  
                    __ptext16 5BD6                      __ptext33 5D38                      __ptext25 5C86  
                    __ptext17 5C4E                      __ptext34 5AEE                      __ptext26 52B8  
                    __ptext18 5512                      __ptext27 1858                      __ptext19 2E6C  
                    __ptext36 1FE4                      __ptext28 5D14                      __ptext29 5A82  
                    __ptext38 5A0A                  _RXF2SIDLbits 000F09                      _sin$3750 019F  
     __end_of_can_interpreter 5B42                  _RXF3SIDLbits 000F0D                      _distance 0140  
          __end_of_matematica 29C4                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 004C                 __size_of_sqrt 03CA  
                 _park_search 4F80          CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0048  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 1FE4                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C9              ??_CANsendMessage 007F            ?_CANreceiveMessage 0001  
                _request_sent 0228                     sqrt@tfrac 0185                _configurazione 5A82  
    CANsendMessage@identifier 0077                   ??_parallelo 00D5                      intlevel1 0000  
                    intlevel2 0000              CANSetFilter@tamp 0081              CANSetFilter@type 007B  
         ??_CANreceiveMessage 0003           _old_data_correction 0227                   _TXB0DLCbits 000F45  
                 _right_speed 003C                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 0223               _matematica$3740 01C0               _matematica$3741 01C4  
             _matematica$3742 01C8               _matematica$3743 01CC               _matematica$3744 01D0  
             _matematica$3745 01D4               _matematica$3738 01B8               _matematica$3739 01BC  
   __end_of_CANreceiveMessage 24F0                      sqrt@frac 0194                      sqrt@sign 0183  
                    sqrt@root 0190                   _timerValue2 003E        __end_of_configurazione 5AEE  
               ___fladd@signs 00BD                 _distance_wait 0226              ?_can_interpreter 0001  
                ___fladd@aexp 00BE                  ___fladd@bexp 00BF         __end_of_CANInitialize 4F80  
