

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu May 05 15:15:38 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	param0,global,class=BANK0,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  005F22                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _delay_quartz_frequency_value
    67  005F22  14                 	db	20
    68                           
    69                           	psect	idataBANK1
    70  005F18                     __pidataBANK1:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _larghezza
    74  005F18  0000               	dw	0
    75  005F1A  4200               	dw	16896
    76                           
    77                           ;initializer for _spazio_parcheggio
    78  005F1C  0064               	dw	100
    79                           
    80                           ;initializer for _raggio
    81  005F1E  0000               	dw	0
    82  005F20  4260               	dw	16992
    83                           
    84                           	psect	smallconst
    85  000D00                     __psmallconst:
    86                           	opt stack 0
    87  000D00  00                 	db	0
    88  000D01                     atan@coeff_a:
    89                           	opt stack 0
    90  000D01  3C06               	dw	15366
    91  000D03  4204               	dw	16900
    92  000D05  9F7D               	dw	40829
    93  000D07  426A               	dw	17002
    94  000D09  905C               	dw	36956
    95  000D0B  4201               	dw	16897
    96  000D0D  4D60               	dw	19808
    97  000D0F  40BB               	dw	16571
    98  000D11  EC51               	dw	60497
    99  000D13  3E47               	dw	15943
   100  000D15  8DDE               	dw	36318
   101  000D17  BB1F               	dw	47903
   102  000D19                     __end_ofatan@coeff_a:
   103                           	opt stack 0
   104  000D19                     atan@coeff_b:
   105                           	opt stack 0
   106  000D19  3C06               	dw	15366
   107  000D1B  4204               	dw	16900
   108  000D1D  59C0               	dw	22976
   109  000D1F  428B               	dw	17035
   110  000D21  0474               	dw	1140
   111  000D23  4244               	dw	16964
   112  000D25  9BF9               	dw	39929
   113  000D27  414F               	dw	16719
   114  000D29  0000               	dw	0
   115  000D2B  3F80               	dw	16256
   116  000D2D                     __end_ofatan@coeff_b:
   117                           	opt stack 0
   118  000D2D                     sin@coeff_a:
   119                           	opt stack 0
   120  000D2D  F3EC               	dw	62444
   121  000D2F  484A               	dw	18506
   122  000D31  9535               	dw	38197
   123  000D33  C795               	dw	51093
   124  000D35  C117               	dw	49431
   125  000D37  45DC               	dw	17884
   126  000D39  DBFD               	dw	56317
   127  000D3B  C36D               	dw	50029
   128  000D3D  B372               	dw	45938
   129  000D3F  4033               	dw	16435
   130  000D41                     __end_ofsin@coeff_a:
   131                           	opt stack 0
   132  000D41                     sin@coeff_b:
   133                           	opt stack 0
   134  000D41  342B               	dw	13355
   135  000D43  4801               	dw	18433
   136  000D45  9D7F               	dw	40319
   137  000D47  45B0               	dw	17840
   138  000D49  FFE7               	dw	65511
   139  000D4B  42D9               	dw	17113
   140  000D4D  0000               	dw	0
   141  000D4F  3F80               	dw	16256
   142  000D51                     __end_ofsin@coeff_b:
   143                           	opt stack 0
   144  0000                     _RXB1CON	set	3920
   145  0000                     _RXB1CONbits	set	3920
   146  0000                     _RXB1D0	set	3926
   147  0000                     _RXB1D1	set	3927
   148  0000                     _RXB1D2	set	3928
   149  0000                     _RXB1D3	set	3929
   150  0000                     _RXB1D4	set	3930
   151  0000                     _RXB1D5	set	3931
   152  0000                     _RXB1D6	set	3932
   153  0000                     _RXB1D7	set	3933
   154  0000                     _RXB1DLC	set	3925
   155  0000                     _RXB1DLCbits	set	3925
   156  0000                     _RXB1EIDH	set	3923
   157  0000                     _RXB1EIDL	set	3924
   158  0000                     _RXB1SIDH	set	3921
   159  0000                     _RXB1SIDL	set	3922
   160  0000                     _RXB1SIDLbits	set	3922
   161  0000                     _RXF0EIDH	set	3842
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0SIDH	set	3840
   164  0000                     _RXF0SIDL	set	3841
   165  0000                     _RXF0SIDLbits	set	3841
   166  0000                     _RXF1EIDH	set	3846
   167  0000                     _RXF1EIDL	set	3847
   168  0000                     _RXF1SIDH	set	3844
   169  0000                     _RXF1SIDL	set	3845
   170  0000                     _RXF1SIDLbits	set	3845
   171  0000                     _RXF2EIDH	set	3850
   172  0000                     _RXF2EIDL	set	3851
   173  0000                     _RXF2SIDH	set	3848
   174  0000                     _RXF2SIDL	set	3849
   175  0000                     _RXF2SIDLbits	set	3849
   176  0000                     _RXF3EIDH	set	3854
   177  0000                     _RXF3EIDL	set	3855
   178  0000                     _RXF3SIDH	set	3852
   179  0000                     _RXF3SIDL	set	3853
   180  0000                     _RXF3SIDLbits	set	3853
   181  0000                     _RXF4EIDH	set	3858
   182  0000                     _RXF4EIDL	set	3859
   183  0000                     _RXF4SIDH	set	3856
   184  0000                     _RXF4SIDL	set	3857
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF5EIDH	set	3862
   187  0000                     _RXF5EIDL	set	3863
   188  0000                     _RXF5SIDH	set	3860
   189  0000                     _RXF5SIDL	set	3861
   190  0000                     _RXF5SIDLbits	set	3861
   191  0000                     _RXM0EIDH	set	3866
   192  0000                     _RXM0EIDL	set	3867
   193  0000                     _RXM0SIDH	set	3864
   194  0000                     _RXM0SIDL	set	3865
   195  0000                     _RXM0SIDLbits	set	3865
   196  0000                     _RXM1EIDH	set	3870
   197  0000                     _RXM1EIDL	set	3871
   198  0000                     _RXM1SIDH	set	3868
   199  0000                     _RXM1SIDL	set	3869
   200  0000                     _RXM1SIDLbits	set	3869
   201  0000                     _TXB0CONbits	set	3904
   202  0000                     _TXB0D0	set	3910
   203  0000                     _TXB0D1	set	3911
   204  0000                     _TXB0D2	set	3912
   205  0000                     _TXB0D3	set	3913
   206  0000                     _TXB0D4	set	3914
   207  0000                     _TXB0D5	set	3915
   208  0000                     _TXB0D6	set	3916
   209  0000                     _TXB0D7	set	3917
   210  0000                     _TXB0DLC	set	3909
   211  0000                     _TXB0DLCbits	set	3909
   212  0000                     _TXB0EIDH	set	3907
   213  0000                     _TXB0EIDL	set	3908
   214  0000                     _TXB0SIDH	set	3905
   215  0000                     _TXB0SIDL	set	3906
   216  0000                     _TXB0SIDLbits	set	3906
   217  0000                     _TXB1CONbits	set	3888
   218  0000                     _TXB1D0	set	3894
   219  0000                     _TXB1D1	set	3895
   220  0000                     _TXB1D2	set	3896
   221  0000                     _TXB1D3	set	3897
   222  0000                     _TXB1D4	set	3898
   223  0000                     _TXB1D5	set	3899
   224  0000                     _TXB1D6	set	3900
   225  0000                     _TXB1D7	set	3901
   226  0000                     _TXB1DLC	set	3893
   227  0000                     _TXB1DLCbits	set	3893
   228  0000                     _TXB1EIDH	set	3891
   229  0000                     _TXB1EIDL	set	3892
   230  0000                     _TXB1SIDH	set	3889
   231  0000                     _TXB1SIDL	set	3890
   232  0000                     _TXB1SIDLbits	set	3890
   233  0000                     _TXB2CONbits	set	3872
   234  0000                     _TXB2D0	set	3878
   235  0000                     _TXB2D1	set	3879
   236  0000                     _TXB2D2	set	3880
   237  0000                     _TXB2D3	set	3881
   238  0000                     _TXB2D4	set	3882
   239  0000                     _TXB2D5	set	3883
   240  0000                     _TXB2D6	set	3884
   241  0000                     _TXB2D7	set	3885
   242  0000                     _TXB2DLC	set	3877
   243  0000                     _TXB2DLCbits	set	3877
   244  0000                     _TXB2EIDH	set	3875
   245  0000                     _TXB2EIDL	set	3876
   246  0000                     _TXB2SIDH	set	3873
   247  0000                     _TXB2SIDL	set	3874
   248  0000                     _TXB2SIDLbits	set	3874
   249  0000                     _ADCON1	set	4033
   250  0000                     _BRGCON1	set	3952
   251  0000                     _BRGCON2	set	3953
   252  0000                     _BRGCON2bits	set	3953
   253  0000                     _BRGCON3	set	3954
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _CANCON	set	3951
   256  0000                     _CANCONbits	set	3951
   257  0000                     _CANSTAT	set	3950
   258  0000                     _COMSTATbits	set	3956
   259  0000                     _INTCON2bits	set	4081
   260  0000                     _INTCONbits	set	4082
   261  0000                     _IPR3bits	set	4005
   262  0000                     _LATA	set	3977
   263  0000                     _LATB	set	3978
   264  0000                     _LATBbits	set	3978
   265  0000                     _LATC	set	3979
   266  0000                     _PIE3bits	set	4003
   267  0000                     _PIR3bits	set	4004
   268  0000                     _PORTA	set	3968
   269  0000                     _PORTBbits	set	3969
   270  0000                     _RCONbits	set	4048
   271  0000                     _RXB0CON	set	3936
   272  0000                     _RXB0CONbits	set	3936
   273  0000                     _RXB0D0	set	3942
   274  0000                     _RXB0D1	set	3943
   275  0000                     _RXB0D2	set	3944
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D4	set	3946
   278  0000                     _RXB0D5	set	3947
   279  0000                     _RXB0D6	set	3948
   280  0000                     _RXB0D7	set	3949
   281  0000                     _RXB0DLC	set	3941
   282  0000                     _RXB0DLCbits	set	3941
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0EIDL	set	3940
   285  0000                     _RXB0SIDH	set	3937
   286  0000                     _RXB0SIDL	set	3938
   287  0000                     _RXB0SIDLbits	set	3938
   288  0000                     _RXERRCNT	set	3957
   289  0000                     _T0CON	set	4053
   290  0000                     _T0CONbits	set	4053
   291  0000                     _T3CON	set	4017
   292  0000                     _TMR0H	set	4055
   293  0000                     _TMR0L	set	4054
   294  0000                     _TMR3H	set	4019
   295  0000                     _TMR3L	set	4018
   296  0000                     _TRISA	set	3986
   297  0000                     _TRISB	set	3987
   298  0000                     _TRISBbits	set	3987
   299  0000                     _TRISC	set	3988
   300  0000                     _TXERRCNT	set	3958
   301                           
   302                           ; #config settings
   303  000D51  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  005C54                     __pcinit:
   307                           	opt stack 0
   308  005C54                     start_initialization:
   309                           	opt stack 0
   310  005C54                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK1 (137 bytes)
   314  005C54  EE01  F000         	lfsr	0,__pbssBANK1
   315  005C58  0E89               	movlw	137
   316  005C5A                     clear_0:
   317  005C5A  6AEE               	clrf	postinc0,c
   318  005C5C  06E8               	decf	wreg,f,c
   319  005C5E  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK0 (8 bytes)
   322  005C60  EE00  F0E0         	lfsr	0,__pbssBANK0
   323  005C64  0E08               	movlw	8
   324  005C66                     clear_1:
   325  005C66  6AEE               	clrf	postinc0,c
   326  005C68  06E8               	decf	wreg,f,c
   327  005C6A  E1FD               	bnz	clear_1
   328                           
   329                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   330  005C6C  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   331  005C6E  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   332                           
   333                           ; Clear objects allocated to COMRAM (34 bytes)
   334  005C70  EE00  F024         	lfsr	0,__pbssCOMRAM
   335  005C74  0E22               	movlw	34
   336  005C76                     clear_2:
   337  005C76  6AEE               	clrf	postinc0,c
   338  005C78  06E8               	decf	wreg,f,c
   339  005C7A  E1FD               	bnz	clear_2
   340                           
   341                           ; Initialize objects allocated to BANK1 (10 bytes)
   342                           ; load TBLPTR registers with __pidataBANK1
   343  005C7C  0E18               	movlw	low __pidataBANK1
   344  005C7E  6EF6               	movwf	tblptrl,c
   345  005C80  0E5F               	movlw	high __pidataBANK1
   346  005C82  6EF7               	movwf	tblptrh,c
   347  005C84  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   348  005C86  6EF8               	movwf	tblptru,c
   349  005C88  EE01  F0DE         	lfsr	0,__pdataBANK1
   350  005C8C  EE10 F00A          	lfsr	1,10
   351  005C90                     copy_data0:
   352  005C90  0009               	tblrd		*+
   353  005C92  CFF5 FFEE          	movff	tablat,postinc0
   354  005C96  50E5               	movf	postdec1,w,c
   355  005C98  50E1               	movf	fsr1l,w,c
   356  005C9A  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK0 (1 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360  005C9C  0E22               	movlw	low __pidataBANK0
   361  005C9E  6EF6               	movwf	tblptrl,c
   362  005CA0  0E5F               	movlw	high __pidataBANK0
   363  005CA2  6EF7               	movwf	tblptrh,c
   364  005CA4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365  005CA6  6EF8               	movwf	tblptru,c
   366  005CA8  0009               	tblrd		*+	;fetch initializer
   367  005CAA  CFF5 F0E8          	movff	tablat,__pdataBANK0
   368  005CAE                     end_of_initialization:
   369                           	opt stack 0
   370  005CAE                     __end_of__initialization:
   371                           	opt stack 0
   372  005CAE  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373  005CB0  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374  005CB2  0100               	movlb	0
   375  005CB4  EF86  F02E         	goto	_main	;jump to C main() function
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bitbssCOMRAM
   386  000230                     __pbitbssCOMRAM:
   387                           	opt stack 0
   388  000230                     _activation:
   389                           	opt stack 0
   390  000230                     	ds	1
   391  000231                     _asd:
   392                           	opt stack 0
   393  000231                     	ds	1
   394  000232                     _dir:
   395                           	opt stack 0
   396  000232                     	ds	1
   397  000233                     _distance_error:
   398                           	opt stack 0
   399  000233                     	ds	1
   400  000234                     _distance_received:
   401                           	opt stack 0
   402  000234                     	ds	1
   403  000235                     _distance_received1:
   404                           	opt stack 0
   405  000235                     	ds	1
   406  000236                     _distance_wait:
   407                           	opt stack 0
   408  000236                     	ds	1
   409  000237                     _old_data_correction:
   410                           	opt stack 0
   411  000237                     	ds	1
   412  000238                     _request_sent:
   413                           	opt stack 0
   414  000238                     	ds	1
   415  000239                     _request_sent1:
   416                           	opt stack 0
   417  000239                     	ds	1
   418  00023A                     _start_operation:
   419                           	opt stack 0
   420  00023A                     	ds	1
   421  00023B                     _steering_correction_dir:
   422                           	opt stack 0
   423  00023B                     	ds	1
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssCOMRAM
   434  000024                     __pbssCOMRAM:
   435                           	opt stack 0
   436  000024                     _sensor_distance:
   437                           	opt stack 0
   438  000024                     	ds	16
   439  000034                     _distance_average:
   440                           	opt stack 0
   441  000034                     	ds	2
   442  000036                     _distance_dx:
   443                           	opt stack 0
   444  000036                     	ds	2
   445  000038                     _distance_sx:
   446                           	opt stack 0
   447  000038                     	ds	2
   448  00003A                     _left_speed:
   449                           	opt stack 0
   450  00003A                     	ds	2
   451  00003C                     _pulse_time:
   452                           	opt stack 0
   453  00003C                     	ds	2
   454  00003E                     _right_speed:
   455                           	opt stack 0
   456  00003E                     	ds	2
   457  000040                     _timerValue2:
   458                           	opt stack 0
   459  000040                     	ds	2
   460  000042                     _MUX_index:
   461                           	opt stack 0
   462  000042                     	ds	1
   463  000043                     _asus:
   464                           	opt stack 0
   465  000043                     	ds	1
   466  000044                     _gianni:
   467                           	opt stack 0
   468  000044                     	ds	1
   469  000045                     _steering_correction:
   470                           	opt stack 0
   471  000045                     	ds	1
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssBANK0
   482  0000E0                     __pbssBANK0:
   483                           	opt stack 0
   484  0000E0                     _alignment_gap:
   485                           	opt stack 0
   486  0000E0                     	ds	4
   487  0000E4                     _clock_counter_reference:
   488                           	opt stack 0
   489  0000E4                     	ds	2
   490  0000E6                     _set_speed:
   491                           	opt stack 0
   492  0000E6                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	dataBANK0
   503  0000E8                     __pdataBANK0:
   504                           	opt stack 0
   505  0000E8                     _delay_quartz_frequency_value:
   506                           	opt stack 0
   507  0000E8                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	bssBANK1
   518  000100                     __pbssBANK1:
   519                           	opt stack 0
   520  000100                     _MUX_select:
   521                           	opt stack 0
   522  000100                     	ds	8
   523  000108                     _data_speed_rx:
   524                           	opt stack 0
   525  000108                     	ds	8
   526  000110                     _distance_set:
   527                           	opt stack 0
   528  000110                     	ds	8
   529  000118                     _Pminimo:
   530                           	opt stack 0
   531  000118                     	ds	4
   532  00011C                     _alfa:
   533                           	opt stack 0
   534  00011C                     	ds	4
   535  000120                     _beta:
   536                           	opt stack 0
   537  000120                     	ds	4
   538  000124                     _bordo:
   539                           	opt stack 0
   540  000124                     	ds	4
   541  000128                     _jjj:
   542                           	opt stack 0
   543  000128                     	ds	4
   544  00012C                     _kkk:
   545                           	opt stack 0
   546  00012C                     	ds	4
   547  000130                     _n:
   548                           	opt stack 0
   549  000130                     	ds	4
   550  000134                     _old_alignment_gap:
   551                           	opt stack 0
   552  000134                     	ds	4
   553  000138                     _prima_sterzata:
   554                           	opt stack 0
   555  000138                     	ds	4
   556  00013C                     _x:
   557                           	opt stack 0
   558  00013C                     	ds	4
   559  000140                     _z:
   560                           	opt stack 0
   561  000140                     	ds	4
   562  000144                     _actual_speed:
   563                           	opt stack 0
   564  000144                     	ds	2
   565  000146                     _distance:
   566                           	opt stack 0
   567  000146                     	ds	2
   568  000148                     _errno:
   569                           	opt stack 0
   570  000148                     	ds	2
   571  00014A                     _msg:
   572                           	opt stack 0
   573  00014A                     	ds	15
   574  000159                     _data:
   575                           	opt stack 0
   576  000159                     	ds	8
   577  000161                     _data_brake:
   578                           	opt stack 0
   579  000161                     	ds	8
   580  000169                     _data_correction:
   581                           	opt stack 0
   582  000169                     	ds	8
   583  000171                     _data_speed:
   584                           	opt stack 0
   585  000171                     	ds	8
   586  000179                     _data_steering:
   587                           	opt stack 0
   588  000179                     	ds	8
   589  000181                     _data_test:
   590                           	opt stack 0
   591  000181                     	ds	8
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           postdec1	equ	0xFE5
   599                           fsr1l	equ	0xFE1
   600                           
   601                           	psect	dataBANK1
   602  0001DE                     __pdataBANK1:
   603                           	opt stack 0
   604  0001DE                     _larghezza:
   605                           	opt stack 0
   606  0001DE                     	ds	4
   607  0001E2                     _spazio_parcheggio:
   608                           	opt stack 0
   609  0001E2                     	ds	2
   610  0001E4                     _raggio:
   611                           	opt stack 0
   612  0001E4                     	ds	4
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	cstackBANK1
   623  000189                     __pcstackBANK1:
   624                           	opt stack 0
   625  000189                     atan@y:
   626                           	opt stack 0
   627  000189                     sin@y:
   628                           	opt stack 0
   629                           
   630                           ; 4 bytes @ 0x0
   631  000189                     	ds	4
   632  00018D                     atan@x:
   633                           	opt stack 0
   634  00018D                     _sin$3750:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x4
   638  00018D                     	ds	4
   639  000191                     atan@recip:
   640                           	opt stack 0
   641  000191                     sin@x2:
   642                           	opt stack 0
   643                           
   644                           ; 4 bytes @ 0x8
   645  000191                     	ds	1
   646  000192                     atan@val_squared:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x9
   650  000192                     	ds	3
   651  000195                     sin@sgn:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655  000195                     	ds	1
   656  000196                     atan@val:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0xD
   660  000196                     	ds	4
   661  00019A                     ?_asin:
   662                           	opt stack 0
   663  00019A                     asin@x:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x11
   667  00019A                     	ds	4
   668  00019E                     asin@sgn:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x15
   672  00019E                     	ds	4
   673  0001A2                     _asin$3748:
   674                           	opt stack 0
   675                           
   676                           ; 4 bytes @ 0x19
   677  0001A2                     	ds	4
   678  0001A6                     _asin$3747:
   679                           	opt stack 0
   680                           
   681                           ; 4 bytes @ 0x1D
   682  0001A6                     	ds	4
   683  0001AA                     asin@y:
   684                           	opt stack 0
   685                           
   686                           ; 4 bytes @ 0x21
   687  0001AA                     	ds	4
   688  0001AE                     _asin$3746:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x25
   692  0001AE                     	ds	4
   693  0001B2                     ??_park_search:
   694  0001B2                     ?_cos:
   695                           	opt stack 0
   696  0001B2                     cos@f:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x29
   700  0001B2                     	ds	4
   701  0001B6                     _cos$3749:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x2D
   705  0001B6                     	ds	4
   706  0001BA                     _matematica$3739:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x31
   710  0001BA                     	ds	4
   711  0001BE                     _matematica$3740:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x35
   715  0001BE                     	ds	4
   716  0001C2                     _matematica$3741:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x39
   720  0001C2                     	ds	4
   721  0001C6                     _matematica$3742:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x3D
   725  0001C6                     	ds	4
   726  0001CA                     _matematica$3744:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x41
   730  0001CA                     	ds	4
   731  0001CE                     _matematica$3745:
   732                           	opt stack 0
   733                           
   734                           ; 4 bytes @ 0x45
   735  0001CE                     	ds	4
   736  0001D2                     _matematica$3743:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x49
   740  0001D2                     	ds	4
   741  0001D6                     ??_park_routine:
   742                           
   743                           ; 0 bytes @ 0x4D
   744  0001D6                     	ds	4
   745  0001DA                     _park_routine$3738:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x51
   749  0001DA                     	ds	4
   750                           tblptru	equ	0xFF8
   751                           tblptrh	equ	0xFF7
   752                           tblptrl	equ	0xFF6
   753                           tablat	equ	0xFF5
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           postdec1	equ	0xFE5
   757                           fsr1l	equ	0xFE1
   758                           
   759                           	psect	cstackBANK0
   760  000060                     __pcstackBANK0:
   761                           	opt stack 0
   762  000060                     ?___lwdiv:
   763                           	opt stack 0
   764  000060                     ___lwdiv@dividend:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x0
   768  000060                     	ds	2
   769  000062                     ___lwdiv@divisor:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x2
   773  000062                     	ds	2
   774  000064                     ___lwdiv@counter:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x4
   778  000064                     	ds	1
   779  000065                     ___lwdiv@quotient:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x5
   783  000065                     	ds	2
   784  000067                     ??_ISR_Alta:
   785                           
   786                           ; 0 bytes @ 0x7
   787  000067                     	ds	16
   788  000077                     ??_can_interpreter:
   789  000077                     ?___wmul:
   790                           	opt stack 0
   791  000077                     ?___fldiv:
   792                           	opt stack 0
   793  000077                     ?___fltol:
   794                           	opt stack 0
   795  000077                     CANOperationMode@mode:
   796                           	opt stack 0
   797  000077                     _CANisTxReady$2845:
   798                           	opt stack 0
   799  000077                     ___wmul@multiplier:
   800                           	opt stack 0
   801  000077                     CANsendMessage@identifier:
   802                           	opt stack 0
   803  000077                     CANSetMask@mask:
   804                           	opt stack 0
   805  000077                     CANSetFilter@filter:
   806                           	opt stack 0
   807  000077                     ___fltol@f1:
   808                           	opt stack 0
   809  000077                     ___fldiv@b:
   810                           	opt stack 0
   811  000077                     frexp@value:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x17
   815  000077                     	ds	2
   816  000079                     ___wmul@multiplicand:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x19
   820  000079                     	ds	2
   821  00007B                     ??___fltol:
   822  00007B                     CANSetMask@type:
   823                           	opt stack 0
   824  00007B                     CANSetFilter@type:
   825                           	opt stack 0
   826  00007B                     CANsendMessage@data:
   827                           	opt stack 0
   828  00007B                     ___wmul@product:
   829                           	opt stack 0
   830  00007B                     frexp@eptr:
   831                           	opt stack 0
   832  00007B                     ___fldiv@a:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x1B
   836  00007B                     	ds	1
   837  00007C                     ??_CANSetMask:
   838  00007C                     ??_CANSetFilter:
   839                           
   840                           ; 0 bytes @ 0x1C
   841  00007C                     	ds	1
   842  00007D                     ??_frexp:
   843  00007D                     CANsendMessage@dataLength:
   844                           	opt stack 0
   845  00007D                     delay_ms@value_ms:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x1D
   849  00007D                     	ds	1
   850  00007E                     CANsendMessage@flags:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x1E
   854  00007E                     	ds	1
   855  00007F                     ??___fldiv:
   856  00007F                     ??_CANsendMessage:
   857  00007F                     delay_s@value_s:
   858                           	opt stack 0
   859  00007F                     ___fltol@sign1:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x1F
   863  00007F                     	ds	1
   864  000080                     CANSetMask@numBuffer:
   865                           	opt stack 0
   866  000080                     CANSetFilter@numBuffer:
   867                           	opt stack 0
   868  000080                     delay_s@repeat_loop:
   869                           	opt stack 0
   870  000080                     ___fltol@exp1:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x20
   874  000080                     	ds	1
   875  000081                     ?_abs:
   876                           	opt stack 0
   877  000081                     abs@a:
   878                           	opt stack 0
   879  000081                     CANSetMask@tamp:
   880                           	opt stack 0
   881  000081                     CANSetFilter@tamp:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x21
   885  000081                     	ds	2
   886  000083                     ??_abs:
   887  000083                     ___fldiv@sign:
   888                           	opt stack 0
   889  000083                     CANsendMessage@tamp:
   890                           	opt stack 0
   891                           
   892                           ; 4 bytes @ 0x23
   893  000083                     	ds	1
   894  000084                     ___fldiv@rem:
   895                           	opt stack 0
   896                           
   897                           ; 4 bytes @ 0x24
   898  000084                     	ds	1
   899  000085                     ?___xxtofl:
   900                           	opt stack 0
   901  000085                     CANInitialize@phaseSeg1:
   902                           	opt stack 0
   903  000085                     ___xxtofl@val:
   904                           	opt stack 0
   905                           
   906                           ; 4 bytes @ 0x25
   907  000085                     	ds	1
   908  000086                     CANInitialize@phaseSeg2:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x26
   912  000086                     	ds	1
   913  000087                     can_send@data_correction1:
   914                           	opt stack 0
   915  000087                     CANInitialize@SJW:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x27
   919  000087                     	ds	1
   920  000088                     CANInitialize@BRP:
   921                           	opt stack 0
   922  000088                     ___fldiv@new_exp:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x28
   926  000088                     	ds	1
   927  000089                     ??___xxtofl:
   928  000089                     CANInitialize@flags:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x29
   932  000089                     	ds	1
   933  00008A                     ??_CANInitialize:
   934  00008A                     ___fldiv@grs:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x2A
   938  00008A                     	ds	3
   939  00008D                     ___xxtofl@sign:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x2D
   943  00008D                     	ds	1
   944  00008E                     CANInitialize@propSeg:
   945                           	opt stack 0
   946  00008E                     ___fldiv@bexp:
   947                           	opt stack 0
   948  00008E                     ___xxtofl@exp:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x2E
   952  00008E                     	ds	1
   953  00008F                     CANInitialize@FilterConfig1:
   954                           	opt stack 0
   955  00008F                     ___fldiv@aexp:
   956                           	opt stack 0
   957  00008F                     ___xxtofl@arg:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x2F
   961  00008F                     	ds	1
   962  000090                     ?___flmul:
   963                           	opt stack 0
   964  000090                     CANInitialize@FilterConfig2:
   965                           	opt stack 0
   966  000090                     ___flmul@b:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x30
   970  000090                     	ds	1
   971  000091                     
   972                           ; 0 bytes @ 0x31
   973  000091                     	ds	3
   974  000094                     ___flmul@a:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x34
   978  000094                     	ds	4
   979  000098                     ??___flmul:
   980                           
   981                           ; 0 bytes @ 0x38
   982  000098                     	ds	4
   983  00009C                     ___flmul@sign:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x3C
   987  00009C                     	ds	1
   988  00009D                     ___flmul@aexp:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x3D
   992  00009D                     	ds	1
   993  00009E                     ___flmul@grs:
   994                           	opt stack 0
   995                           
   996                           ; 4 bytes @ 0x3E
   997  00009E                     	ds	4
   998  0000A2                     ___flmul@bexp:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x42
  1002  0000A2                     	ds	1
  1003  0000A3                     ___flmul@prod:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x43
  1007  0000A3                     	ds	4
  1008  0000A7                     ___flmul@temp:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x47
  1012  0000A7                     	ds	2
  1013  0000A9                     ?___flneg:
  1014                           	opt stack 0
  1015  0000A9                     ___flneg@f1:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x49
  1019  0000A9                     	ds	4
  1020  0000AD                     ?___fladd:
  1021                           	opt stack 0
  1022  0000AD                     ?_fabs:
  1023                           	opt stack 0
  1024  0000AD                     fabs@d:
  1025                           	opt stack 0
  1026  0000AD                     ___fladd@b:
  1027                           	opt stack 0
  1028                           
  1029                           ; 4 bytes @ 0x4D
  1030  0000AD                     	ds	4
  1031  0000B1                     ___flge@ff1:
  1032                           	opt stack 0
  1033  0000B1                     ___fladd@a:
  1034                           	opt stack 0
  1035                           
  1036                           ; 4 bytes @ 0x51
  1037  0000B1                     	ds	4
  1038  0000B5                     ??___fladd:
  1039  0000B5                     ___flge@ff2:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x55
  1043  0000B5                     	ds	4
  1044  0000B9                     ??___flge:
  1045                           
  1046                           ; 0 bytes @ 0x59
  1047  0000B9                     	ds	4
  1048  0000BD                     ___fladd@signs:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x5D
  1052  0000BD                     	ds	1
  1053  0000BE                     ___fladd@aexp:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x5E
  1057  0000BE                     	ds	1
  1058  0000BF                     ___fladd@bexp:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x5F
  1062  0000BF                     	ds	1
  1063  0000C0                     ___fladd@grs:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x60
  1067  0000C0                     	ds	1
  1068  0000C1                     ?_sqrt:
  1069                           	opt stack 0
  1070  0000C1                     ?_eval_poly:
  1071                           	opt stack 0
  1072  0000C1                     ?_floor:
  1073                           	opt stack 0
  1074  0000C1                     eval_poly@x:
  1075                           	opt stack 0
  1076  0000C1                     sqrt@a:
  1077                           	opt stack 0
  1078  0000C1                     floor@x:
  1079                           	opt stack 0
  1080                           
  1081                           ; 4 bytes @ 0x61
  1082  0000C1                     	ds	4
  1083  0000C5                     ??_sqrt:
  1084  0000C5                     eval_poly@d:
  1085                           	opt stack 0
  1086  0000C5                     floor@i:
  1087                           	opt stack 0
  1088                           
  1089                           ; 4 bytes @ 0x65
  1090  0000C5                     	ds	2
  1091  0000C7                     eval_poly@n:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x67
  1095  0000C7                     	ds	2
  1096  0000C9                     ??_eval_poly:
  1097  0000C9                     sqrt@sign:
  1098                           	opt stack 0
  1099  0000C9                     floor@expon:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x69
  1103  0000C9                     	ds	1
  1104  0000CA                     sqrt@i:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x6A
  1108  0000CA                     	ds	1
  1109  0000CB                     ?___flsub:
  1110                           	opt stack 0
  1111  0000CB                     ___flsub@b:
  1112                           	opt stack 0
  1113  0000CB                     sqrt@tfrac:
  1114                           	opt stack 0
  1115                           
  1116                           ; 4 bytes @ 0x6B
  1117  0000CB                     	ds	2
  1118  0000CD                     eval_poly@res:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x6D
  1122  0000CD                     	ds	2
  1123  0000CF                     sqrt@p:
  1124                           	opt stack 0
  1125  0000CF                     ___flsub@a:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x6F
  1129  0000CF                     	ds	1
  1130  0000D0                     sqrt@grs:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x70
  1134  0000D0                     	ds	1
  1135  0000D1                     ?_atan:
  1136                           	opt stack 0
  1137  0000D1                     atan@f:
  1138                           	opt stack 0
  1139                           
  1140                           ; 4 bytes @ 0x71
  1141  0000D1                     	ds	2
  1142  0000D3                     ?_sin:
  1143                           	opt stack 0
  1144  0000D3                     sin@f:
  1145                           	opt stack 0
  1146                           
  1147                           ; 4 bytes @ 0x73
  1148  0000D3                     	ds	1
  1149  0000D4                     sqrt@exp:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0x74
  1153  0000D4                     	ds	1
  1154  0000D5                     
  1155                           ; 0 bytes @ 0x75
  1156  0000D5                     	ds	1
  1157  0000D6                     sqrt@root:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x76
  1161  0000D6                     	ds	1
  1162  0000D7                     
  1163                           ; 0 bytes @ 0x77
  1164  0000D7                     	ds	3
  1165  0000DA                     sqrt@frac:
  1166                           	opt stack 0
  1167                           
  1168                           ; 4 bytes @ 0x7A
  1169  0000DA                     	ds	4
  1170  0000DE                     ??_parallelo:
  1171  0000DE                     
  1172                           ; 0 bytes @ 0x7E
  1173  0000DE                     	ds	2
  1174  0000E0                     tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           postdec1	equ	0xFE5
  1181                           fsr1l	equ	0xFE1
  1182                           
  1183                           ; 0 bytes @ 0x80
  1184                           
  1185                           	psect	cstackCOMRAM
  1186  000001                     __pcstackCOMRAM:
  1187                           	opt stack 0
  1188  000001                     CANreceiveMessage@msg:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x0
  1192  000001                     	ds	2
  1193  000003                     ??_CANreceiveMessage:
  1194                           
  1195                           ; 0 bytes @ 0x2
  1196  000003                     	ds	8
  1197  00000B                     CANreceiveMessage@error:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0xA
  1201  00000B                     	ds	1
  1202  00000C                     CANreceiveMessage@tamp:
  1203                           	opt stack 0
  1204                           
  1205                           ; 1 bytes @ 0xB
  1206  00000C                     	ds	1
  1207  00000D                     ??_ISR_Bassa:
  1208                           
  1209                           ; 0 bytes @ 0xC
  1210  00000D                     	ds	21
  1211  000022                     ISR_Bassa@gigi:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x21
  1215  000022                     	ds	1
  1216  000023                     ISR_Bassa@i:
  1217                           	opt stack 0
  1218                           
  1219                           ; 1 bytes @ 0x22
  1220  000023                     	ds	1
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1l	equ	0xFE1
  1229                           
  1230 ;;
  1231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1232 ;;
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 187 in file "parcheggio.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;		None               void
  1242 ;; Registers used:
  1243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels required when called:   10
  1255 ;; This function calls:
  1256 ;;		_can_interpreter
  1257 ;;		_configurazione
  1258 ;;		_park_routine
  1259 ;;		_park_search
  1260 ;; This function is called by:
  1261 ;;		Startup code after reset
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text0
  1266  005D0C                     __ptext0:
  1267                           	opt stack 0
  1268  005D0C                     _main:
  1269                           	opt stack 21
  1270                           
  1271                           ;parcheggio.c: 188: MUX_select[0] = 0b00000000;
  1272                           
  1273                           ; BSR set to: 15
  1274                           ;incstack = 0
  1275  005D0C  0E00               	movlw	0
  1276  005D0E  0101               	movlb	1	; () banked
  1277  005D10  6F00               	movwf	_MUX_select& (0+255),b
  1278                           
  1279                           ;parcheggio.c: 189: MUX_select[1] = 0b00000001;
  1280  005D12  0E01               	movlw	1
  1281  005D14  0101               	movlb	1	; () banked
  1282  005D16  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1283                           
  1284                           ;parcheggio.c: 190: MUX_select[2] = 0b00000010;
  1285  005D18  0E02               	movlw	2
  1286  005D1A  0101               	movlb	1	; () banked
  1287  005D1C  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1288                           
  1289                           ;parcheggio.c: 191: MUX_select[3] = 0b00000011;
  1290  005D1E  0E03               	movlw	3
  1291  005D20  0101               	movlb	1	; () banked
  1292  005D22  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1293                           
  1294                           ;parcheggio.c: 192: MUX_select[4] = 0b00000100;
  1295  005D24  0E04               	movlw	4
  1296  005D26  0101               	movlb	1	; () banked
  1297  005D28  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1298                           
  1299                           ;parcheggio.c: 193: MUX_select[5] = 0b00000101;
  1300  005D2A  0E05               	movlw	5
  1301  005D2C  0101               	movlb	1	; () banked
  1302  005D2E  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1303                           
  1304                           ;parcheggio.c: 194: MUX_select[6] = 0b00000110;
  1305  005D30  0E06               	movlw	6
  1306  005D32  0101               	movlb	1	; () banked
  1307  005D34  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1308                           
  1309                           ;parcheggio.c: 195: MUX_select[7] = 0b00000111;
  1310  005D36  0E07               	movlw	7
  1311  005D38  0101               	movlb	1	; () banked
  1312  005D3A  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1313                           
  1314                           ; BSR set to: 1
  1315                           ;parcheggio.c: 196: configurazione();
  1316  005D3C  ECF4  F02D         	call	_configurazione	;wreg free
  1317                           
  1318                           ;parcheggio.c: 197: PORTBbits.RB4 = 0;
  1319  005D40  9881               	bcf	3969,4,c	;volatile
  1320                           
  1321                           ;parcheggio.c: 198: PORTBbits.RB5 = 0;
  1322  005D42  9A81               	bcf	3969,5,c	;volatile
  1323                           
  1324                           ;parcheggio.c: 199: PORTBbits.RB6 = 0;
  1325  005D44  9C81               	bcf	3969,6,c	;volatile
  1326                           
  1327                           ;parcheggio.c: 200: request_sent = 0;
  1328  005D46  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1329                           
  1330                           ;parcheggio.c: 201: start_operation = 0;
  1331  005D48  9447               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1332  005D4A                     l7594:
  1333                           
  1334                           ;parcheggio.c: 217: park_search();
  1335  005D4A  ECAF  F028         	call	_park_search	;wreg free
  1336                           
  1337                           ;parcheggio.c: 218: can_interpreter();
  1338  005D4E  EC5C  F02E         	call	_can_interpreter	;wreg free
  1339                           
  1340                           ;parcheggio.c: 219: park_routine();
  1341  005D52  ECE4  F019         	call	_park_routine	;wreg free
  1342  005D56  D7F9               	goto	l7594
  1343  005D58                     __end_of_main:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           tblptrh	equ	0xFF7
  1347                           tblptrl	equ	0xFF6
  1348                           tablat	equ	0xFF5
  1349                           postinc0	equ	0xFEE
  1350                           wreg	equ	0xFE8
  1351                           postdec1	equ	0xFE5
  1352                           fsr1l	equ	0xFE1
  1353                           
  1354 ;; *************** function _park_search *****************
  1355 ;; Defined at:
  1356 ;;		line 223 in file "parcheggio.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;		None               void
  1363 ;; Registers used:
  1364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;Total ram usage:        2 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    9
  1377 ;; This function calls:
  1378 ;;		_CANisTxReady
  1379 ;;		_CANsendMessage
  1380 ;;		___xxtofl
  1381 ;;		_abs
  1382 ;;		_parallelo
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text1
  1389  00515E                     __ptext1:
  1390                           	opt stack 0
  1391  00515E                     _park_search:
  1392                           	opt stack 21
  1393                           
  1394                           ;parcheggio.c: 224: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1395                           
  1396                           ;incstack = 0
  1397  00515E  D0D0               	goto	l718
  1398  005160                     l7350:
  1399                           
  1400                           ;parcheggio.c: 225: parallelo();
  1401  005160  EC76  F024         	call	_parallelo	;wreg free
  1402                           
  1403                           ;parcheggio.c: 226: if (sensor_distance[0] > 50) {
  1404  005164  5025               	movf	_sensor_distance+1,w,c	;volatile
  1405  005166  E104               	bnz	u9350
  1406  005168  0E33               	movlw	51
  1407  00516A  5C24               	subwf	_sensor_distance,w,c	;volatile
  1408  00516C  A0D8               	btfss	status,0,c
  1409  00516E  D02A               	goto	l720
  1410  005170                     u9350:
  1411                           
  1412                           ;parcheggio.c: 227: if (request_sent == 0) {
  1413  005170  B047               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1414  005172  D057               	goto	l7370
  1415  005174                     l7358:
  1416  005174  EC6F  F02F         	call	_CANisTxReady	;wreg free
  1417  005178  0900               	iorlw	0
  1418  00517A  B4D8               	btfsc	status,2,c
  1419  00517C  D7FB               	goto	l7358
  1420                           
  1421                           ;parcheggio.c: 229: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1422  00517E  0E08               	movlw	8
  1423  005180  0100               	movlb	0	; () banked
  1424  005182  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1425  005184  0E00               	movlw	0
  1426  005186  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1427  005188  0E00               	movlw	0
  1428  00518A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1429  00518C  0E00               	movlw	0
  1430  00518E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1431  005190  0E59               	movlw	low _data
  1432  005192  0100               	movlb	0	; () banked
  1433  005194  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1434  005196  0E01               	movlw	high _data
  1435  005198  0100               	movlb	0	; () banked
  1436  00519A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1437  00519C  0E08               	movlw	8
  1438  00519E  0100               	movlb	0	; () banked
  1439  0051A0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1440  0051A2  0EFC               	movlw	252
  1441  0051A4  0100               	movlb	0	; () banked
  1442  0051A6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1443  0051A8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1444                           
  1445                           ;parcheggio.c: 230: request_sent = 1;
  1446  0051AC  8047               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1447                           
  1448                           ;parcheggio.c: 231: alignment_gap = 0;
  1449  0051AE  0E00               	movlw	0
  1450  0051B0  0100               	movlb	0	; () banked
  1451  0051B2  6FE0               	movwf	_alignment_gap& (0+255),b
  1452  0051B4  0E00               	movlw	0
  1453  0051B6  6FE1               	movwf	(_alignment_gap+1)& (0+255),b
  1454  0051B8  0E00               	movlw	0
  1455  0051BA  6FE2               	movwf	(_alignment_gap+2)& (0+255),b
  1456  0051BC  0E00               	movlw	0
  1457  0051BE  6FE3               	movwf	(_alignment_gap+3)& (0+255),b
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;parcheggio.c: 232: LATBbits.LATB4 = 1;
  1461  0051C0  888A               	bsf	3978,4,c	;volatile
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;parcheggio.c: 233: }
  1465                           ;parcheggio.c: 234: } else {
  1466  0051C2  D02F               	goto	l7370
  1467  0051C4                     l720:
  1468                           
  1469                           ;parcheggio.c: 235: LATBbits.LATB4 = 0;
  1470  0051C4  988A               	bcf	3978,4,c	;volatile
  1471                           
  1472                           ;parcheggio.c: 236: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1473  0051C6  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1474  0051CA  CFDE F1B2          	movff	postinc2,??_park_search
  1475  0051CE  CFDD F1B3          	movff	postdec2,??_park_search+1
  1476  0051D2  0101               	movlb	1	; () banked
  1477  0051D4  1FB2               	comf	??_park_search& (0+255),f,b
  1478  0051D6  1FB3               	comf	(??_park_search+1)& (0+255),f,b
  1479  0051D8  4BB2               	infsnz	??_park_search& (0+255),f,b
  1480  0051DA  2BB3               	incf	(??_park_search+1)& (0+255),f,b
  1481  0051DC  5024               	movf	_sensor_distance,w,c	;volatile
  1482  0051DE  0101               	movlb	1	; () banked
  1483  0051E0  25B2               	addwf	??_park_search& (0+255),w,b
  1484  0051E2  0100               	movlb	0	; () banked
  1485  0051E4  6F81               	movwf	abs@a& (0+255),b
  1486  0051E6  5025               	movf	_sensor_distance+1,w,c	;volatile
  1487  0051E8  0101               	movlb	1	; () banked
  1488  0051EA  21B3               	addwfc	(??_park_search+1)& (0+255),w,b
  1489  0051EC  0100               	movlb	0	; () banked
  1490  0051EE  6F82               	movwf	(abs@a+1)& (0+255),b
  1491  0051F0  EC43  F02F         	call	_abs	;wreg free
  1492  0051F4  0100               	movlb	0	; () banked
  1493  0051F6  C081  F085         	movff	?_abs,___xxtofl@val
  1494  0051FA  0100               	movlb	0	; () banked
  1495  0051FC  C082  F086         	movff	?_abs+1,___xxtofl@val+1
  1496  005200  0100               	movlb	0	; () banked
  1497  005202  0E00               	movlw	0
  1498  005204  BF86               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1499  005206  0EFF               	movlw	-1
  1500  005208  6F87               	movwf	(___xxtofl@val+2)& (0+255),b
  1501  00520A  6F88               	movwf	(___xxtofl@val+3)& (0+255),b
  1502  00520C  0E01               	movlw	1
  1503  00520E  ECE5  F026         	call	___xxtofl
  1504  005212  C085  F0E0         	movff	?___xxtofl,_alignment_gap
  1505  005216  C086  F0E1         	movff	?___xxtofl+1,_alignment_gap+1
  1506  00521A  C087  F0E2         	movff	?___xxtofl+2,_alignment_gap+2
  1507  00521E  C088  F0E3         	movff	?___xxtofl+3,_alignment_gap+3
  1508  005222                     l7370:
  1509                           
  1510                           ;parcheggio.c: 237: }
  1511                           ;parcheggio.c: 238: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1512  005222  5025               	movf	_sensor_distance+1,w,c	;volatile
  1513  005224  E122               	bnz	l7380
  1514  005226  0E32               	movlw	50
  1515  005228  5C24               	subwf	_sensor_distance,w,c	;volatile
  1516  00522A  A0D8               	btfss	status,0,c
  1517  00522C  A047               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1518  00522E  D01D               	goto	l7380
  1519                           
  1520                           ;parcheggio.c: 239: request_sent = 0;
  1521  005230  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1522  005232                     l7376:
  1523  005232  EC6F  F02F         	call	_CANisTxReady	;wreg free
  1524  005236  0900               	iorlw	0
  1525  005238  B4D8               	btfsc	status,2,c
  1526  00523A  D7FB               	goto	l7376
  1527                           
  1528                           ;parcheggio.c: 241: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1529  00523C  0E07               	movlw	7
  1530  00523E  0100               	movlb	0	; () banked
  1531  005240  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1532  005242  0E00               	movlw	0
  1533  005244  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1534  005246  0E00               	movlw	0
  1535  005248  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1536  00524A  0E00               	movlw	0
  1537  00524C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1538  00524E  0E59               	movlw	low _data
  1539  005250  0100               	movlb	0	; () banked
  1540  005252  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1541  005254  0E01               	movlw	high _data
  1542  005256  0100               	movlb	0	; () banked
  1543  005258  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1544  00525A  0E08               	movlw	8
  1545  00525C  0100               	movlb	0	; () banked
  1546  00525E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1547  005260  0EFC               	movlw	252
  1548  005262  0100               	movlb	0	; () banked
  1549  005264  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1550  005266  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1551  00526A                     l7380:
  1552                           
  1553                           ;parcheggio.c: 242: }
  1554                           ;parcheggio.c: 243: if (distance_received == 1) {
  1555  00526A  A846               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1556  00526C  D049               	goto	l718
  1557                           
  1558                           ;parcheggio.c: 244: if (distance_average > 55) {
  1559  00526E  5035               	movf	_distance_average+1,w,c	;volatile
  1560  005270  E104               	bnz	u9420
  1561  005272  0E38               	movlw	56
  1562  005274  5C34               	subwf	_distance_average,w,c	;volatile
  1563  005276  A0D8               	btfss	status,0,c
  1564  005278  D041               	goto	l731
  1565  00527A                     u9420:
  1566                           
  1567                           ;parcheggio.c: 245: PORTBbits.RB5 = 1;
  1568  00527A  8A81               	bsf	3969,5,c	;volatile
  1569                           
  1570                           ;parcheggio.c: 246: data[0] = 1;
  1571  00527C  0E01               	movlw	1
  1572  00527E  0101               	movlb	1	; () banked
  1573  005280  6F59               	movwf	_data& (0+255),b
  1574                           
  1575                           ; BSR set to: 1
  1576                           ;parcheggio.c: 247: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1577  005282  0E0B               	movlw	11
  1578  005284  0100               	movlb	0	; () banked
  1579  005286  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1580  005288  0E00               	movlw	0
  1581  00528A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1582  00528C  0E00               	movlw	0
  1583  00528E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1584  005290  0E00               	movlw	0
  1585  005292  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1586  005294  0E59               	movlw	low _data
  1587  005296  0100               	movlb	0	; () banked
  1588  005298  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1589  00529A  0E01               	movlw	high _data
  1590  00529C  0100               	movlb	0	; () banked
  1591  00529E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1592  0052A0  0E01               	movlw	1
  1593  0052A2  0100               	movlb	0	; () banked
  1594  0052A4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1595  0052A6  0EBC               	movlw	188
  1596  0052A8  0100               	movlb	0	; () banked
  1597  0052AA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1598  0052AC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1599                           
  1600                           ;parcheggio.c: 248: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1601  0052B0  B247               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1602  0052B2  D026               	goto	l718
  1603  0052B4  5025               	movf	_sensor_distance+1,w,c	;volatile
  1604  0052B6  E124               	bnz	l718
  1605  0052B8  0E28               	movlw	40
  1606  0052BA  5C24               	subwf	_sensor_distance,w,c	;volatile
  1607  0052BC  B0D8               	btfsc	status,0,c
  1608  0052BE  D020               	goto	l718
  1609                           
  1610                           ;parcheggio.c: 249: data_test[0] = 130;
  1611  0052C0  0E82               	movlw	130
  1612  0052C2  0101               	movlb	1	; () banked
  1613  0052C4  6F81               	movwf	_data_test& (0+255),b
  1614                           
  1615                           ; BSR set to: 1
  1616                           ;parcheggio.c: 250: asd = 1;
  1617  0052C6  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1618                           
  1619                           ; BSR set to: 1
  1620                           ;parcheggio.c: 251: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1621  0052C8  0E0D               	movlw	13
  1622  0052CA  0100               	movlb	0	; () banked
  1623  0052CC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1624  0052CE  0E00               	movlw	0
  1625  0052D0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1626  0052D2  0E00               	movlw	0
  1627  0052D4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1628  0052D6  0E00               	movlw	0
  1629  0052D8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1630  0052DA  0E81               	movlw	low _data_test
  1631  0052DC  0100               	movlb	0	; () banked
  1632  0052DE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1633  0052E0  0E01               	movlw	high _data_test
  1634  0052E2  0100               	movlb	0	; () banked
  1635  0052E4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1636  0052E6  0E08               	movlw	8
  1637  0052E8  0100               	movlb	0	; () banked
  1638  0052EA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1639  0052EC  0EBC               	movlw	188
  1640  0052EE  0100               	movlb	0	; () banked
  1641  0052F0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1642  0052F2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1643                           
  1644                           ;parcheggio.c: 253: distance_received1 = 0;
  1645  0052F6  9A46               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1646                           
  1647                           ;parcheggio.c: 254: request_sent1 = 1;
  1648  0052F8  8247               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1649                           
  1650                           ;parcheggio.c: 255: }
  1651                           ;parcheggio.c: 256: } else {
  1652  0052FA  D002               	goto	l718
  1653  0052FC                     l731:
  1654                           
  1655                           ;parcheggio.c: 257: distance_received = 0;
  1656  0052FC  9846               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1657                           
  1658                           ;parcheggio.c: 258: PORTBbits.RB5 = 0;
  1659  0052FE  9A81               	bcf	3969,5,c	;volatile
  1660  005300                     l718:
  1661  005300  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1662  005302  0012               	return	
  1663  005304  BA81               	btfsc	3969,5,c	;volatile
  1664  005306  0012               	return	
  1665  005308  D72B               	goto	l7350
  1666  00530A                     __end_of_park_search:
  1667                           	opt stack 0
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           postdec1	equ	0xFE5
  1675                           fsr1l	equ	0xFE1
  1676                           postinc2	equ	0xFDE
  1677                           postdec2	equ	0xFDD
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _park_routine *****************
  1681 ;; Defined at:
  1682 ;;		line 264 in file "parcheggio.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;Total ram usage:        8 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    9
  1703 ;; This function calls:
  1704 ;;		_CANsendMessage
  1705 ;;		___fladd
  1706 ;;		___flneg
  1707 ;;		___fltol
  1708 ;;		___xxtofl
  1709 ;;		_abs
  1710 ;;		_can_send
  1711 ;;		_delay_ms
  1712 ;;		_delay_s
  1713 ;;		_matematica
  1714 ;;		_parallelo
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text2
  1721  0033C8                     __ptext2:
  1722                           	opt stack 0
  1723  0033C8                     _park_routine:
  1724                           	opt stack 21
  1725                           
  1726                           ;parcheggio.c: 265: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)&&(start
      +                          _operation == 1)) {
  1727                           
  1728                           ;incstack = 0
  1729  0033C8  D01E               	goto	l7426
  1730  0033CA                     l7408:
  1731                           
  1732                           ;parcheggio.c: 266: data_brake [0] = 3;
  1733  0033CA  0E03               	movlw	3
  1734  0033CC  0101               	movlb	1	; () banked
  1735  0033CE  6F61               	movwf	_data_brake& (0+255),b
  1736                           
  1737                           ;parcheggio.c: 267: data_brake [1] = 1;
  1738  0033D0  0E01               	movlw	1
  1739  0033D2  0101               	movlb	1	; () banked
  1740  0033D4  6F62               	movwf	(_data_brake+1)& (0+255),b
  1741                           
  1742                           ; BSR set to: 1
  1743                           ;parcheggio.c: 268: parallelo();
  1744  0033D6  EC76  F024         	call	_parallelo	;wreg free
  1745                           
  1746                           ;parcheggio.c: 269: if (data_correction[1] == 1)
  1747  0033DA  0101               	movlb	1	; () banked
  1748  0033DC  056A               	decf	(_data_correction+1)& (0+255),w,b
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;parcheggio.c: 271: else {
  1752                           ;parcheggio.c: 272: data_steering[0] = (90 + data_correction[0]);
  1753                           
  1754                           ; BSR set to: 1
  1755                           
  1756                           ; BSR set to: 1
  1757                           ;parcheggio.c: 270: data_steering[0] = (90 + data_correction[0]);
  1758  0033DE  0101               	movlb	1	; () banked
  1759  0033E0  5169               	movf	_data_correction& (0+255),w,b
  1760  0033E2  0F5A               	addlw	90
  1761  0033E4  0101               	movlb	1	; () banked
  1762  0033E6  6F79               	movwf	_data_steering& (0+255),b
  1763                           
  1764                           ; BSR set to: 1
  1765                           ;parcheggio.c: 273: }
  1766                           ;parcheggio.c: 274: set_speed = 1000;
  1767                           
  1768                           ; BSR set to: 1
  1769  0033E8  0E03               	movlw	3
  1770  0033EA  0100               	movlb	0	; () banked
  1771  0033EC  6FE7               	movwf	(_set_speed+1)& (0+255),b
  1772  0033EE  0EE8               	movlw	232
  1773  0033F0  6FE6               	movwf	_set_speed& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;parcheggio.c: 275: dir = 1;
  1777  0033F2  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;parcheggio.c: 276: can_send();
  1781  0033F4  EC4D  F02A         	call	_can_send	;wreg free
  1782                           
  1783                           ;parcheggio.c: 277: delay_ms(50);
  1784  0033F8  0E00               	movlw	0
  1785  0033FA  0100               	movlb	0	; () banked
  1786  0033FC  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1787  0033FE  0E32               	movlw	50
  1788  003400  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1789  003402  ECEF  F02E         	call	_delay_ms	;wreg free
  1790  003406                     l7426:
  1791  003406  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1792  003408  AA81               	btfss	3969,5,c	;volatile
  1793  00340A  D1C0               	goto	l7534
  1794  00340C  B046               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1795  00340E  A447               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1796  003410  D1BD               	goto	l7534
  1797  003412  D7DB               	goto	l7408
  1798  003414                     l7434:
  1799                           
  1800                           ;parcheggio.c: 282: bordo = (sensor_distance[0]+sensor_distance[1])/2;
  1801  003414  5024               	movf	_sensor_distance,w,c	;volatile
  1802  003416  2426               	addwf	_sensor_distance+2,w,c	;volatile
  1803  003418  0101               	movlb	1	; () banked
  1804  00341A  6FD6               	movwf	??_park_routine& (0+255),b
  1805  00341C  5025               	movf	_sensor_distance+1,w,c	;volatile
  1806  00341E  2027               	addwfc	_sensor_distance+3,w,c	;volatile
  1807  003420  0101               	movlb	1	; () banked
  1808  003422  6FD7               	movwf	(??_park_routine+1)& (0+255),b
  1809  003424  90D8               	bcf	status,0,c
  1810  003426  0101               	movlb	1	; () banked
  1811  003428  31D7               	rrcf	(??_park_routine+1)& (0+255),w,b
  1812  00342A  0101               	movlb	1	; () banked
  1813  00342C  6FD9               	movwf	(??_park_routine+3)& (0+255),b
  1814  00342E  0101               	movlb	1	; () banked
  1815  003430  31D6               	rrcf	??_park_routine& (0+255),w,b
  1816  003432  0101               	movlb	1	; () banked
  1817  003434  6FD8               	movwf	(??_park_routine+2)& (0+255),b
  1818  003436  C1D8  F085         	movff	??_park_routine+2,___xxtofl@val
  1819  00343A  C1D9  F086         	movff	??_park_routine+3,___xxtofl@val+1
  1820  00343E  0100               	movlb	0	; () banked
  1821  003440  6B87               	clrf	(___xxtofl@val+2)& (0+255),b
  1822  003442  6B88               	clrf	(___xxtofl@val+3)& (0+255),b
  1823  003444  0E00               	movlw	0
  1824  003446  ECE5  F026         	call	___xxtofl
  1825  00344A  C085  F124         	movff	?___xxtofl,_bordo	;volatile
  1826  00344E  C086  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  1827  003452  C087  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  1828  003456  C088  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  1829                           
  1830                           ;parcheggio.c: 283: matematica();
  1831  00345A  ECF2  F00F         	call	_matematica	;wreg free
  1832                           
  1833                           ;parcheggio.c: 284: set_speed = 0;
  1834  00345E  0E00               	movlw	0
  1835  003460  0100               	movlb	0	; () banked
  1836  003462  6FE7               	movwf	(_set_speed+1)& (0+255),b
  1837  003464  0E00               	movlw	0
  1838  003466  6FE6               	movwf	_set_speed& (0+255),b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;parcheggio.c: 285: data_steering[0] = 90;
  1842  003468  0E5A               	movlw	90
  1843  00346A  0101               	movlb	1	; () banked
  1844  00346C  6F79               	movwf	_data_steering& (0+255),b
  1845                           
  1846                           ; BSR set to: 1
  1847                           ;parcheggio.c: 286: data_brake [0] = 0;
  1848  00346E  0E00               	movlw	0
  1849  003470  0101               	movlb	1	; () banked
  1850  003472  6F61               	movwf	_data_brake& (0+255),b
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;parcheggio.c: 287: data_brake [1] = 1;
  1854  003474  0E01               	movlw	1
  1855  003476  0101               	movlb	1	; () banked
  1856  003478  6F62               	movwf	(_data_brake+1)& (0+255),b
  1857                           
  1858                           ; BSR set to: 1
  1859                           ;parcheggio.c: 288: can_send();
  1860  00347A  EC4D  F02A         	call	_can_send	;wreg free
  1861                           
  1862                           ;parcheggio.c: 289: delay_s(1);
  1863  00347E  0E01               	movlw	1
  1864  003480  EC59  F02F         	call	_delay_s
  1865                           
  1866                           ;parcheggio.c: 291: data_brake [0] = 3;
  1867  003484  0E03               	movlw	3
  1868  003486  0101               	movlb	1	; () banked
  1869  003488  6F61               	movwf	_data_brake& (0+255),b
  1870                           
  1871                           ; BSR set to: 1
  1872                           ;parcheggio.c: 292: data_brake [1] = 1;
  1873  00348A  0E01               	movlw	1
  1874  00348C  0101               	movlb	1	; () banked
  1875  00348E  6F62               	movwf	(_data_brake+1)& (0+255),b
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;parcheggio.c: 294: set_speed = 1000;
  1879  003490  0E03               	movlw	3
  1880  003492  0100               	movlb	0	; () banked
  1881  003494  6FE7               	movwf	(_set_speed+1)& (0+255),b
  1882  003496  0EE8               	movlw	232
  1883  003498  6FE6               	movwf	_set_speed& (0+255),b
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;parcheggio.c: 295: dir = 0;
  1887  00349A  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;parcheggio.c: 296: data_steering[0] = 90;
  1891  00349C  0E5A               	movlw	90
  1892  00349E  0101               	movlb	1	; () banked
  1893  0034A0  6F79               	movwf	_data_steering& (0+255),b
  1894                           
  1895                           ; BSR set to: 1
  1896                           ;parcheggio.c: 297: data_test[0] = ((130 + Pminimo)-(abs(n) + 10 + 45));
  1897  0034A2  C118  F0B1         	movff	_Pminimo,___fladd@a
  1898  0034A6  C119  F0B2         	movff	_Pminimo+1,___fladd@a+1
  1899  0034AA  C11A  F0B3         	movff	_Pminimo+2,___fladd@a+2
  1900  0034AE  C11B  F0B4         	movff	_Pminimo+3,___fladd@a+3
  1901  0034B2  C130  F077         	movff	_n,___fltol@f1
  1902  0034B6  C131  F078         	movff	_n+1,___fltol@f1+1
  1903  0034BA  C132  F079         	movff	_n+2,___fltol@f1+2
  1904  0034BE  C133  F07A         	movff	_n+3,___fltol@f1+3
  1905  0034C2  EC06  F02C         	call	___fltol	;wreg free
  1906  0034C6  C077  F081         	movff	?___fltol,abs@a
  1907  0034CA  C078  F082         	movff	?___fltol+1,abs@a+1
  1908  0034CE  EC43  F02F         	call	_abs	;wreg free
  1909  0034D2  0E37               	movlw	55
  1910  0034D4  0100               	movlb	0	; () banked
  1911  0034D6  2781               	addwf	?_abs& (0+255),f,b
  1912  0034D8  0E00               	movlw	0
  1913  0034DA  0100               	movlb	0	; () banked
  1914  0034DC  2382               	addwfc	(?_abs+1)& (0+255),f,b
  1915  0034DE  0100               	movlb	0	; () banked
  1916  0034E0  C081  F085         	movff	?_abs,___xxtofl@val
  1917  0034E4  0100               	movlb	0	; () banked
  1918  0034E6  C082  F086         	movff	?_abs+1,___xxtofl@val+1
  1919  0034EA  0100               	movlb	0	; () banked
  1920  0034EC  0E00               	movlw	0
  1921  0034EE  BF86               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1922  0034F0  0EFF               	movlw	-1
  1923  0034F2  6F87               	movwf	(___xxtofl@val+2)& (0+255),b
  1924  0034F4  6F88               	movwf	(___xxtofl@val+3)& (0+255),b
  1925  0034F6  0E01               	movlw	1
  1926  0034F8  ECE5  F026         	call	___xxtofl
  1927  0034FC  C085  F0A9         	movff	?___xxtofl,___flneg@f1
  1928  003500  C086  F0AA         	movff	?___xxtofl+1,___flneg@f1+1
  1929  003504  C087  F0AB         	movff	?___xxtofl+2,___flneg@f1+2
  1930  003508  C088  F0AC         	movff	?___xxtofl+3,___flneg@f1+3
  1931  00350C  EC0C  F02F         	call	___flneg	;wreg free
  1932  003510  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1933  003514  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1934  003518  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1935  00351C  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1936  003520  EC3D  F015         	call	___fladd	;wreg free
  1937  003524  C0AD  F1DA         	movff	?___fladd,_park_routine$3738
  1938  003528  C0AE  F1DB         	movff	?___fladd+1,_park_routine$3738+1
  1939  00352C  C0AF  F1DC         	movff	?___fladd+2,_park_routine$3738+2
  1940  003530  C0B0  F1DD         	movff	?___fladd+3,_park_routine$3738+3
  1941                           
  1942                           ;parcheggio.c: 297: data_test[0] = ((130 + Pminimo)-(abs(n) + 10 + 45));
  1943  003534  0E00               	movlw	0
  1944  003536  0100               	movlb	0	; () banked
  1945  003538  6FB1               	movwf	___fladd@a& (0+255),b
  1946  00353A  0E00               	movlw	0
  1947  00353C  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1948  00353E  0E02               	movlw	2
  1949  003540  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1950  003542  0E43               	movlw	67
  1951  003544  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1952  003546  C1DA  F0AD         	movff	_park_routine$3738,___fladd@b
  1953  00354A  C1DB  F0AE         	movff	_park_routine$3738+1,___fladd@b+1
  1954  00354E  C1DC  F0AF         	movff	_park_routine$3738+2,___fladd@b+2
  1955  003552  C1DD  F0B0         	movff	_park_routine$3738+3,___fladd@b+3
  1956  003556  EC3D  F015         	call	___fladd	;wreg free
  1957  00355A  C0AD  F077         	movff	?___fladd,___fltol@f1
  1958  00355E  C0AE  F078         	movff	?___fladd+1,___fltol@f1+1
  1959  003562  C0AF  F079         	movff	?___fladd+2,___fltol@f1+2
  1960  003566  C0B0  F07A         	movff	?___fladd+3,___fltol@f1+3
  1961  00356A  EC06  F02C         	call	___fltol	;wreg free
  1962  00356E  0100               	movlb	0	; () banked
  1963  003570  5177               	movf	?___fltol& (0+255),w,b
  1964  003572  0101               	movlb	1	; () banked
  1965  003574  6F81               	movwf	_data_test& (0+255),b
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;parcheggio.c: 298: asd = 1;
  1969  003576  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;parcheggio.c: 299: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1973  003578  0E0D               	movlw	13
  1974  00357A  0100               	movlb	0	; () banked
  1975  00357C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1976  00357E  0E00               	movlw	0
  1977  003580  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1978  003582  0E00               	movlw	0
  1979  003584  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1980  003586  0E00               	movlw	0
  1981  003588  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1982  00358A  0E81               	movlw	low _data_test
  1983  00358C  0100               	movlb	0	; () banked
  1984  00358E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1985  003590  0E01               	movlw	high _data_test
  1986  003592  0100               	movlb	0	; () banked
  1987  003594  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1988  003596  0E08               	movlw	8
  1989  003598  0100               	movlb	0	; () banked
  1990  00359A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1991  00359C  0EBC               	movlw	188
  1992  00359E  0100               	movlb	0	; () banked
  1993  0035A0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1994  0035A2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1995                           
  1996                           ;parcheggio.c: 300: can_send();
  1997  0035A6  EC4D  F02A         	call	_can_send	;wreg free
  1998  0035AA                     l749:
  1999  0035AA  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2000  0035AC  D7FE               	goto	l749
  2001                           
  2002                           ;parcheggio.c: 303: set_speed = 0;
  2003  0035AE  0E00               	movlw	0
  2004  0035B0  0100               	movlb	0	; () banked
  2005  0035B2  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2006  0035B4  0E00               	movlw	0
  2007  0035B6  6FE6               	movwf	_set_speed& (0+255),b
  2008                           
  2009                           ;parcheggio.c: 304: data_steering[0] = 90;
  2010  0035B8  0E5A               	movlw	90
  2011  0035BA  0101               	movlb	1	; () banked
  2012  0035BC  6F79               	movwf	_data_steering& (0+255),b
  2013                           
  2014                           ;parcheggio.c: 305: data_brake [0] = 0;
  2015  0035BE  0E00               	movlw	0
  2016  0035C0  0101               	movlb	1	; () banked
  2017  0035C2  6F61               	movwf	_data_brake& (0+255),b
  2018                           
  2019                           ;parcheggio.c: 306: data_brake [1] = 1;
  2020  0035C4  0E01               	movlw	1
  2021  0035C6  0101               	movlb	1	; () banked
  2022  0035C8  6F62               	movwf	(_data_brake+1)& (0+255),b
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;parcheggio.c: 307: can_send();
  2026  0035CA  EC4D  F02A         	call	_can_send	;wreg free
  2027                           
  2028                           ;parcheggio.c: 308: delay_s(1);
  2029  0035CE  0E01               	movlw	1
  2030  0035D0  EC59  F02F         	call	_delay_s
  2031                           
  2032                           ;parcheggio.c: 310: data_brake [0] = 3;
  2033  0035D4  0E03               	movlw	3
  2034  0035D6  0101               	movlb	1	; () banked
  2035  0035D8  6F61               	movwf	_data_brake& (0+255),b
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;parcheggio.c: 311: data_brake [1] = 1;
  2039  0035DA  0E01               	movlw	1
  2040  0035DC  0101               	movlb	1	; () banked
  2041  0035DE  6F62               	movwf	(_data_brake+1)& (0+255),b
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;parcheggio.c: 312: set_speed = 1000;
  2045  0035E0  0E03               	movlw	3
  2046  0035E2  0100               	movlb	0	; () banked
  2047  0035E4  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2048  0035E6  0EE8               	movlw	232
  2049  0035E8  6FE6               	movwf	_set_speed& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;parcheggio.c: 313: dir = 0;
  2053  0035EA  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;parcheggio.c: 314: data_steering[0] = 180;
  2057  0035EC  0EB4               	movlw	180
  2058  0035EE  0101               	movlb	1	; () banked
  2059  0035F0  6F79               	movwf	_data_steering& (0+255),b
  2060                           
  2061                           ; BSR set to: 1
  2062                           ;parcheggio.c: 315: data_test[0] = prima_sterzata;
  2063  0035F2  C138  F077         	movff	_prima_sterzata,___fltol@f1
  2064  0035F6  C139  F078         	movff	_prima_sterzata+1,___fltol@f1+1
  2065  0035FA  C13A  F079         	movff	_prima_sterzata+2,___fltol@f1+2
  2066  0035FE  C13B  F07A         	movff	_prima_sterzata+3,___fltol@f1+3
  2067  003602  EC06  F02C         	call	___fltol	;wreg free
  2068  003606  0100               	movlb	0	; () banked
  2069  003608  5177               	movf	?___fltol& (0+255),w,b
  2070  00360A  0101               	movlb	1	; () banked
  2071  00360C  6F81               	movwf	_data_test& (0+255),b
  2072                           
  2073                           ; BSR set to: 1
  2074                           ;parcheggio.c: 316: asd = 1;
  2075  00360E  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;parcheggio.c: 317: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2079  003610  0E0D               	movlw	13
  2080  003612  0100               	movlb	0	; () banked
  2081  003614  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2082  003616  0E00               	movlw	0
  2083  003618  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2084  00361A  0E00               	movlw	0
  2085  00361C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2086  00361E  0E00               	movlw	0
  2087  003620  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2088  003622  0E81               	movlw	low _data_test
  2089  003624  0100               	movlb	0	; () banked
  2090  003626  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2091  003628  0E01               	movlw	high _data_test
  2092  00362A  0100               	movlb	0	; () banked
  2093  00362C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2094  00362E  0E08               	movlw	8
  2095  003630  0100               	movlb	0	; () banked
  2096  003632  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2097  003634  0EBC               	movlw	188
  2098  003636  0100               	movlb	0	; () banked
  2099  003638  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2100  00363A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2101                           
  2102                           ;parcheggio.c: 318: can_send();
  2103  00363E  EC4D  F02A         	call	_can_send	;wreg free
  2104  003642                     l752:
  2105  003642  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2106  003644  D7FE               	goto	l752
  2107                           
  2108                           ;parcheggio.c: 320: set_speed = 1000;
  2109  003646  0E03               	movlw	3
  2110  003648  0100               	movlb	0	; () banked
  2111  00364A  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2112  00364C  0EE8               	movlw	232
  2113  00364E  6FE6               	movwf	_set_speed& (0+255),b
  2114                           
  2115                           ;parcheggio.c: 321: data_steering[0] = 0;
  2116  003650  0E00               	movlw	0
  2117  003652  0101               	movlb	1	; () banked
  2118  003654  6F79               	movwf	_data_steering& (0+255),b
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;parcheggio.c: 322: asd = 1;
  2122  003656  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;parcheggio.c: 323: data_test[0] = prima_sterzata + 10;
  2126  003658  0E00               	movlw	0
  2127  00365A  0100               	movlb	0	; () banked
  2128  00365C  6FB1               	movwf	___fladd@a& (0+255),b
  2129  00365E  0E00               	movlw	0
  2130  003660  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2131  003662  0E20               	movlw	32
  2132  003664  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2133  003666  0E41               	movlw	65
  2134  003668  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2135  00366A  C138  F0AD         	movff	_prima_sterzata,___fladd@b
  2136  00366E  C139  F0AE         	movff	_prima_sterzata+1,___fladd@b+1
  2137  003672  C13A  F0AF         	movff	_prima_sterzata+2,___fladd@b+2
  2138  003676  C13B  F0B0         	movff	_prima_sterzata+3,___fladd@b+3
  2139  00367A  EC3D  F015         	call	___fladd	;wreg free
  2140  00367E  C0AD  F077         	movff	?___fladd,___fltol@f1
  2141  003682  C0AE  F078         	movff	?___fladd+1,___fltol@f1+1
  2142  003686  C0AF  F079         	movff	?___fladd+2,___fltol@f1+2
  2143  00368A  C0B0  F07A         	movff	?___fladd+3,___fltol@f1+3
  2144  00368E  EC06  F02C         	call	___fltol	;wreg free
  2145  003692  0100               	movlb	0	; () banked
  2146  003694  5177               	movf	?___fltol& (0+255),w,b
  2147  003696  0101               	movlb	1	; () banked
  2148  003698  6F81               	movwf	_data_test& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;parcheggio.c: 324: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2152  00369A  0E0D               	movlw	13
  2153  00369C  0100               	movlb	0	; () banked
  2154  00369E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2155  0036A0  0E00               	movlw	0
  2156  0036A2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2157  0036A4  0E00               	movlw	0
  2158  0036A6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2159  0036A8  0E00               	movlw	0
  2160  0036AA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2161  0036AC  0E81               	movlw	low _data_test
  2162  0036AE  0100               	movlb	0	; () banked
  2163  0036B0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2164  0036B2  0E01               	movlw	high _data_test
  2165  0036B4  0100               	movlb	0	; () banked
  2166  0036B6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2167  0036B8  0E08               	movlw	8
  2168  0036BA  0100               	movlb	0	; () banked
  2169  0036BC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2170  0036BE  0EBC               	movlw	188
  2171  0036C0  0100               	movlb	0	; () banked
  2172  0036C2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2173  0036C4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2174                           
  2175                           ;parcheggio.c: 325: can_send();
  2176  0036C8  EC4D  F02A         	call	_can_send	;wreg free
  2177  0036CC                     l755:
  2178  0036CC  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2179  0036CE  D7FE               	goto	l755
  2180                           
  2181                           ;parcheggio.c: 327: data_brake [0] = 0;
  2182  0036D0  0E00               	movlw	0
  2183  0036D2  0101               	movlb	1	; () banked
  2184  0036D4  6F61               	movwf	_data_brake& (0+255),b
  2185                           
  2186                           ;parcheggio.c: 328: data_brake [1] = 1;
  2187  0036D6  0E01               	movlw	1
  2188  0036D8  0101               	movlb	1	; () banked
  2189  0036DA  6F62               	movwf	(_data_brake+1)& (0+255),b
  2190                           
  2191                           ;parcheggio.c: 329: set_speed = 0;
  2192  0036DC  0E00               	movlw	0
  2193  0036DE  0100               	movlb	0	; () banked
  2194  0036E0  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2195  0036E2  0E00               	movlw	0
  2196  0036E4  6FE6               	movwf	_set_speed& (0+255),b
  2197                           
  2198                           ;parcheggio.c: 330: data_steering[0] = 90;
  2199  0036E6  0E5A               	movlw	90
  2200  0036E8  0101               	movlb	1	; () banked
  2201  0036EA  6F79               	movwf	_data_steering& (0+255),b
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;parcheggio.c: 331: can_send();
  2205  0036EC  EC4D  F02A         	call	_can_send	;wreg free
  2206                           
  2207                           ;parcheggio.c: 332: delay_s(1);
  2208  0036F0  0E01               	movlw	1
  2209  0036F2  EC59  F02F         	call	_delay_s
  2210                           
  2211                           ;parcheggio.c: 333: if (sensor_distance [2] > 20) {
  2212  0036F6  5029               	movf	_sensor_distance+5,w,c	;volatile
  2213  0036F8  E104               	bnz	u9550
  2214  0036FA  0E15               	movlw	21
  2215  0036FC  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2216  0036FE  A0D8               	btfss	status,0,c
  2217  003700  D017               	goto	l7520
  2218  003702                     u9550:
  2219                           
  2220                           ;parcheggio.c: 334: data_brake [0] = 3;
  2221  003702  0E03               	movlw	3
  2222  003704  0101               	movlb	1	; () banked
  2223  003706  6F61               	movwf	_data_brake& (0+255),b
  2224                           
  2225                           ;parcheggio.c: 335: data_brake [1] = 1;
  2226  003708  0E01               	movlw	1
  2227  00370A  0101               	movlb	1	; () banked
  2228  00370C  6F62               	movwf	(_data_brake+1)& (0+255),b
  2229                           
  2230                           ;parcheggio.c: 336: set_speed = 1000;
  2231  00370E  0E03               	movlw	3
  2232  003710  0100               	movlb	0	; () banked
  2233  003712  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2234  003714  0EE8               	movlw	232
  2235  003716  6FE6               	movwf	_set_speed& (0+255),b
  2236                           
  2237                           ;parcheggio.c: 337: data_steering[0] = 90;
  2238  003718  0E5A               	movlw	90
  2239  00371A  0101               	movlb	1	; () banked
  2240  00371C  6F79               	movwf	_data_steering& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;parcheggio.c: 338: dir = 1;
  2244  00371E  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;parcheggio.c: 339: can_send();
  2248  003720  EC4D  F02A         	call	_can_send	;wreg free
  2249  003724                     l7518:
  2250  003724  5029               	movf	_sensor_distance+5,w,c	;volatile
  2251  003726  E1FE               	bnz	l7518
  2252  003728  0E15               	movlw	21
  2253  00372A  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2254  00372C  B0D8               	btfsc	status,0,c
  2255  00372E  D7FA               	goto	l7518
  2256  003730                     l7520:
  2257                           
  2258                           ;parcheggio.c: 341: }
  2259                           ;parcheggio.c: 342: data_brake [0] = 0;
  2260  003730  0E00               	movlw	0
  2261  003732  0101               	movlb	1	; () banked
  2262  003734  6F61               	movwf	_data_brake& (0+255),b
  2263                           
  2264                           ;parcheggio.c: 343: data_brake [1] = 1;
  2265  003736  0E01               	movlw	1
  2266  003738  0101               	movlb	1	; () banked
  2267  00373A  6F62               	movwf	(_data_brake+1)& (0+255),b
  2268                           
  2269                           ;parcheggio.c: 344: set_speed = 0;
  2270  00373C  0E00               	movlw	0
  2271  00373E  0100               	movlb	0	; () banked
  2272  003740  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2273  003742  0E00               	movlw	0
  2274  003744  6FE6               	movwf	_set_speed& (0+255),b
  2275                           
  2276                           ;parcheggio.c: 345: data_steering[0] = 90;
  2277  003746  0E5A               	movlw	90
  2278  003748  0101               	movlb	1	; () banked
  2279  00374A  6F79               	movwf	_data_steering& (0+255),b
  2280                           
  2281                           ; BSR set to: 1
  2282                           ;parcheggio.c: 346: dir = 0;
  2283  00374C  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;parcheggio.c: 348: can_send();
  2287  00374E  EC4D  F02A         	call	_can_send	;wreg free
  2288                           
  2289                           ;parcheggio.c: 349: activation = 0;
  2290  003752  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2291                           
  2292                           ;parcheggio.c: 350: PORTBbits.RB5 = 0;
  2293  003754  9A81               	bcf	3969,5,c	;volatile
  2294                           
  2295                           ;parcheggio.c: 351: start_operation = 0;
  2296  003756  9447               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2297                           
  2298                           ;parcheggio.c: 352: data[0] = 3;
  2299  003758  0E03               	movlw	3
  2300  00375A  0101               	movlb	1	; () banked
  2301  00375C  6F59               	movwf	_data& (0+255),b
  2302                           
  2303                           ;parcheggio.c: 353: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2304  00375E  0E0B               	movlw	11
  2305  003760  0100               	movlb	0	; () banked
  2306  003762  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2307  003764  0E00               	movlw	0
  2308  003766  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2309  003768  0E00               	movlw	0
  2310  00376A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2311  00376C  0E00               	movlw	0
  2312  00376E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2313  003770  0E59               	movlw	low _data
  2314  003772  0100               	movlb	0	; () banked
  2315  003774  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2316  003776  0E01               	movlw	high _data
  2317  003778  0100               	movlb	0	; () banked
  2318  00377A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2319  00377C  0E01               	movlw	1
  2320  00377E  0100               	movlb	0	; () banked
  2321  003780  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2322  003782  0EBC               	movlw	188
  2323  003784  0100               	movlb	0	; () banked
  2324  003786  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2325  003788  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2326  00378C                     l7534:
  2327  00378C  AA81               	btfss	3969,5,c	;volatile
  2328  00378E  0012               	return	
  2329  003790  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2330  003792  0012               	return	
  2331  003794  A447               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2332  003796  0012               	return	
  2333  003798  D63D               	goto	l7434
  2334  00379A                     __end_of_park_routine:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           postdec1	equ	0xFE5
  2343                           fsr1l	equ	0xFE1
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _parallelo *****************
  2349 ;; Defined at:
  2350 ;;		line 379 in file "parcheggio.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;Total ram usage:        2 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    8
  2371 ;; This function calls:
  2372 ;;		___fladd
  2373 ;;		___fldiv
  2374 ;;		___flge
  2375 ;;		___flmul
  2376 ;;		___fltol
  2377 ;;		___xxtofl
  2378 ;;		_abs
  2379 ;;		_asin
  2380 ;;		_can_send
  2381 ;;		_sqrt
  2382 ;; This function is called by:
  2383 ;;		_park_search
  2384 ;;		_park_routine
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text3
  2389  0048EC                     __ptext3:
  2390                           	opt stack 0
  2391  0048EC                     _parallelo:
  2392                           	opt stack 21
  2393                           
  2394                           ;parcheggio.c: 380: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2395                           
  2396                           ;incstack = 0
  2397  0048EC  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  2398  0048F0  CFDE F0DE          	movff	postinc2,??_parallelo
  2399  0048F4  CFDD F0DF          	movff	postdec2,??_parallelo+1
  2400  0048F8  0100               	movlb	0	; () banked
  2401  0048FA  1FDE               	comf	??_parallelo& (0+255),f,b
  2402  0048FC  1FDF               	comf	(??_parallelo+1)& (0+255),f,b
  2403  0048FE  4BDE               	infsnz	??_parallelo& (0+255),f,b
  2404  004900  2BDF               	incf	(??_parallelo+1)& (0+255),f,b
  2405  004902  5024               	movf	_sensor_distance,w,c	;volatile
  2406  004904  0100               	movlb	0	; () banked
  2407  004906  25DE               	addwf	??_parallelo& (0+255),w,b
  2408  004908  0100               	movlb	0	; () banked
  2409  00490A  6F81               	movwf	abs@a& (0+255),b
  2410  00490C  5025               	movf	_sensor_distance+1,w,c	;volatile
  2411  00490E  0100               	movlb	0	; () banked
  2412  004910  21DF               	addwfc	(??_parallelo+1)& (0+255),w,b
  2413  004912  0100               	movlb	0	; () banked
  2414  004914  6F82               	movwf	(abs@a+1)& (0+255),b
  2415  004916  EC43  F02F         	call	_abs	;wreg free
  2416  00491A  0100               	movlb	0	; () banked
  2417  00491C  C081  F085         	movff	?_abs,___xxtofl@val
  2418  004920  0100               	movlb	0	; () banked
  2419  004922  C082  F086         	movff	?_abs+1,___xxtofl@val+1
  2420  004926  0100               	movlb	0	; () banked
  2421  004928  0E00               	movlw	0
  2422  00492A  BF86               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2423  00492C  0EFF               	movlw	-1
  2424  00492E  6F87               	movwf	(___xxtofl@val+2)& (0+255),b
  2425  004930  6F88               	movwf	(___xxtofl@val+3)& (0+255),b
  2426  004932  0E01               	movlw	1
  2427  004934  ECE5  F026         	call	___xxtofl
  2428  004938  C085  F0E0         	movff	?___xxtofl,_alignment_gap
  2429  00493C  C086  F0E1         	movff	?___xxtofl+1,_alignment_gap+1
  2430  004940  C087  F0E2         	movff	?___xxtofl+2,_alignment_gap+2
  2431  004944  C088  F0E3         	movff	?___xxtofl+3,_alignment_gap+3
  2432                           
  2433                           ;parcheggio.c: 382: if (alignment_gap < 30) {
  2434  004948  C0E0  F0B1         	movff	_alignment_gap,___flge@ff1
  2435  00494C  C0E1  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  2436  004950  C0E2  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  2437  004954  C0E3  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  2438  004958  0E00               	movlw	0
  2439  00495A  0100               	movlb	0	; () banked
  2440  00495C  6FB5               	movwf	___flge@ff2& (0+255),b
  2441  00495E  0E00               	movlw	0
  2442  004960  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  2443  004962  0EF0               	movlw	240
  2444  004964  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  2445  004966  0E41               	movlw	65
  2446  004968  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  2447  00496A  EC85  F029         	call	___flge	;wreg free
  2448  00496E  0100               	movlb	0	; () banked
  2449  004970  B0D8               	btfsc	status,0,c
  2450  004972  D0F9               	goto	l782
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;parcheggio.c: 383: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  2454  004974  5025               	movf	_sensor_distance+1,w,c	;volatile
  2455  004976  E103               	bnz	u9261
  2456  004978  0E28               	movlw	40
  2457  00497A  5C24               	subwf	_sensor_distance,w,c	;volatile
  2458  00497C  B0D8               	btfsc	status,0,c
  2459  00497E                     u9261:
  2460  00497E  D0E5               	goto	l7300
  2461                           
  2462                           ; BSR set to: 0
  2463  004980  5027               	movf	_sensor_distance+3,w,c	;volatile
  2464  004982  E103               	bnz	u9271
  2465  004984  0E28               	movlw	40
  2466  004986  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  2467  004988  B0D8               	btfsc	status,0,c
  2468  00498A                     u9271:
  2469  00498A  D0DF               	goto	l7300
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;parcheggio.c: 387: x = ((100) + (alignment_gap * alignment_gap));
  2473  00498C  C0E0  F094         	movff	_alignment_gap,___flmul@a
  2474  004990  C0E1  F095         	movff	_alignment_gap+1,___flmul@a+1
  2475  004994  C0E2  F096         	movff	_alignment_gap+2,___flmul@a+2
  2476  004998  C0E3  F097         	movff	_alignment_gap+3,___flmul@a+3
  2477  00499C  C0E0  F090         	movff	_alignment_gap,___flmul@b
  2478  0049A0  C0E1  F091         	movff	_alignment_gap+1,___flmul@b+1
  2479  0049A4  C0E2  F092         	movff	_alignment_gap+2,___flmul@b+2
  2480  0049A8  C0E3  F093         	movff	_alignment_gap+3,___flmul@b+3
  2481  0049AC  EC91  F017         	call	___flmul	;wreg free
  2482  0049B0  C090  F0AD         	movff	?___flmul,___fladd@b
  2483  0049B4  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2484  0049B8  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2485  0049BC  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2486  0049C0  0E00               	movlw	0
  2487  0049C2  0100               	movlb	0	; () banked
  2488  0049C4  6FB1               	movwf	___fladd@a& (0+255),b
  2489  0049C6  0E00               	movlw	0
  2490  0049C8  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2491  0049CA  0EC8               	movlw	200
  2492  0049CC  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2493  0049CE  0E42               	movlw	66
  2494  0049D0  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2495  0049D2  EC3D  F015         	call	___fladd	;wreg free
  2496  0049D6  C0AD  F13C         	movff	?___fladd,_x
  2497  0049DA  C0AE  F13D         	movff	?___fladd+1,_x+1
  2498  0049DE  C0AF  F13E         	movff	?___fladd+2,_x+2
  2499  0049E2  C0B0  F13F         	movff	?___fladd+3,_x+3
  2500                           
  2501                           ;parcheggio.c: 388: x = sqrt(x);
  2502  0049E6  C13C  F0C1         	movff	_x,sqrt@a
  2503  0049EA  C13D  F0C2         	movff	_x+1,sqrt@a+1
  2504  0049EE  C13E  F0C3         	movff	_x+2,sqrt@a+2
  2505  0049F2  C13F  F0C4         	movff	_x+3,sqrt@a+3
  2506  0049F6  ECCD  F01B         	call	_sqrt	;wreg free
  2507  0049FA  C0C1  F13C         	movff	?_sqrt,_x
  2508  0049FE  C0C2  F13D         	movff	?_sqrt+1,_x+1
  2509  004A02  C0C3  F13E         	movff	?_sqrt+2,_x+2
  2510  004A06  C0C4  F13F         	movff	?_sqrt+3,_x+3
  2511                           
  2512                           ;parcheggio.c: 389: z = alignment_gap / x;
  2513  004A0A  C0E0  F077         	movff	_alignment_gap,___fldiv@b
  2514  004A0E  C0E1  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2515  004A12  C0E2  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2516  004A16  C0E3  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2517  004A1A  C13C  F07B         	movff	_x,___fldiv@a
  2518  004A1E  C13D  F07C         	movff	_x+1,___fldiv@a+1
  2519  004A22  C13E  F07D         	movff	_x+2,___fldiv@a+2
  2520  004A26  C13F  F07E         	movff	_x+3,___fldiv@a+3
  2521  004A2A  ECB2  F01D         	call	___fldiv	;wreg free
  2522  004A2E  C077  F140         	movff	?___fldiv,_z
  2523  004A32  C078  F141         	movff	?___fldiv+1,_z+1
  2524  004A36  C079  F142         	movff	?___fldiv+2,_z+2
  2525  004A3A  C07A  F143         	movff	?___fldiv+3,_z+3
  2526                           
  2527                           ;parcheggio.c: 390: z = asin(z);
  2528  004A3E  C140  F19A         	movff	_z,asin@x
  2529  004A42  C141  F19B         	movff	_z+1,asin@x+1
  2530  004A46  C142  F19C         	movff	_z+2,asin@x+2
  2531  004A4A  C143  F19D         	movff	_z+3,asin@x+3
  2532  004A4E  ECED  F022         	call	_asin	;wreg free
  2533  004A52  C19A  F140         	movff	?_asin,_z
  2534  004A56  C19B  F141         	movff	?_asin+1,_z+1
  2535  004A5A  C19C  F142         	movff	?_asin+2,_z+2
  2536  004A5E  C19D  F143         	movff	?_asin+3,_z+3
  2537                           
  2538                           ;parcheggio.c: 391: z = z / 3.14159265358979323846 * 180;
  2539  004A62  0EDB               	movlw	219
  2540  004A64  0100               	movlb	0	; () banked
  2541  004A66  6F7B               	movwf	___fldiv@a& (0+255),b
  2542  004A68  0E0F               	movlw	15
  2543  004A6A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2544  004A6C  0E49               	movlw	73
  2545  004A6E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2546  004A70  0E40               	movlw	64
  2547  004A72  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2548  004A74  C140  F077         	movff	_z,___fldiv@b
  2549  004A78  C141  F078         	movff	_z+1,___fldiv@b+1
  2550  004A7C  C142  F079         	movff	_z+2,___fldiv@b+2
  2551  004A80  C143  F07A         	movff	_z+3,___fldiv@b+3
  2552  004A84  ECB2  F01D         	call	___fldiv	;wreg free
  2553  004A88  C077  F090         	movff	?___fldiv,___flmul@b
  2554  004A8C  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2555  004A90  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2556  004A94  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2557  004A98  0E00               	movlw	0
  2558  004A9A  0100               	movlb	0	; () banked
  2559  004A9C  6F94               	movwf	___flmul@a& (0+255),b
  2560  004A9E  0E00               	movlw	0
  2561  004AA0  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2562  004AA2  0E34               	movlw	52
  2563  004AA4  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2564  004AA6  0E43               	movlw	67
  2565  004AA8  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2566  004AAA  EC91  F017         	call	___flmul	;wreg free
  2567  004AAE  C090  F140         	movff	?___flmul,_z
  2568  004AB2  C091  F141         	movff	?___flmul+1,_z+1
  2569  004AB6  C092  F142         	movff	?___flmul+2,_z+2
  2570  004ABA  C093  F143         	movff	?___flmul+3,_z+3
  2571                           
  2572                           ;parcheggio.c: 392: data_correction[0] = z;
  2573  004ABE  C140  F077         	movff	_z,___fltol@f1
  2574  004AC2  C141  F078         	movff	_z+1,___fltol@f1+1
  2575  004AC6  C142  F079         	movff	_z+2,___fltol@f1+2
  2576  004ACA  C143  F07A         	movff	_z+3,___fltol@f1+3
  2577  004ACE  EC06  F02C         	call	___fltol	;wreg free
  2578  004AD2  0100               	movlb	0	; () banked
  2579  004AD4  5177               	movf	?___fltol& (0+255),w,b
  2580  004AD6  0101               	movlb	1	; () banked
  2581  004AD8  6F69               	movwf	_data_correction& (0+255),b
  2582                           
  2583                           ; BSR set to: 1
  2584                           ;parcheggio.c: 394: if (sensor_distance[0] < sensor_distance[1]) {
  2585  004ADA  5026               	movf	_sensor_distance+2,w,c	;volatile
  2586  004ADC  5C24               	subwf	_sensor_distance,w,c	;volatile
  2587  004ADE  5027               	movf	_sensor_distance+3,w,c	;volatile
  2588  004AE0  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  2589  004AE2  B0D8               	btfsc	status,0,c
  2590  004AE4  D002               	goto	l7292
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;parcheggio.c: 395: data_correction[1] = 0;
  2594  004AE6  0E00               	movlw	0
  2595  004AE8  D001               	goto	L1
  2596  004AEA                     l7292:
  2597                           
  2598                           ; BSR set to: 1
  2599                           ;parcheggio.c: 397: data_correction[1] = 1;
  2600  004AEA  0E01               	movlw	1
  2601  004AEC                     L1:
  2602  004AEC  0101               	movlb	1	; () banked
  2603  004AEE  6F6A               	movwf	(_data_correction+1)& (0+255),b
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;parcheggio.c: 398: }
  2607                           ;parcheggio.c: 399: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2608                           
  2609                           ; BSR set to: 1
  2610  004AF0  0100               	movlb	0	; () banked
  2611  004AF2  51E0               	movf	_alignment_gap& (0+255),w,b
  2612  004AF4  0101               	movlb	1	; () banked
  2613  004AF6  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  2614  004AF8  E117               	bnz	l788
  2615  004AFA  0100               	movlb	0	; () banked
  2616  004AFC  51E1               	movf	(_alignment_gap+1)& (0+255),w,b
  2617  004AFE  0101               	movlb	1	; () banked
  2618  004B00  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2619  004B02  E112               	bnz	l788
  2620  004B04  0100               	movlb	0	; () banked
  2621  004B06  51E2               	movf	(_alignment_gap+2)& (0+255),w,b
  2622  004B08  0101               	movlb	1	; () banked
  2623  004B0A  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2624  004B0C  E10D               	bnz	l788
  2625  004B0E  0100               	movlb	0	; () banked
  2626  004B10  51E3               	movf	(_alignment_gap+3)& (0+255),w,b
  2627  004B12  0101               	movlb	1	; () banked
  2628  004B14  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2629  004B16  A4D8               	btfss	status,2,c
  2630  004B18  D007               	goto	l788
  2631                           
  2632                           ; BSR set to: 1
  2633  004B1A  0E00               	movlw	0
  2634  004B1C  BE46               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2635  004B1E  0E01               	movlw	1
  2636  004B20  0101               	movlb	1	; () banked
  2637  004B22  196A               	xorwf	(_data_correction+1)& (0+255),w,b
  2638  004B24  B4D8               	btfsc	status,2,c
  2639  004B26  0012               	return	
  2640  004B28                     l788:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;parcheggio.c: 400: old_alignment_gap = alignment_gap;
  2644  004B28  C0E0  F134         	movff	_alignment_gap,_old_alignment_gap
  2645  004B2C  C0E1  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2646  004B30  C0E2  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2647  004B34  C0E3  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2648                           
  2649                           ;parcheggio.c: 401: old_data_correction = data_correction[1];
  2650  004B38  0101               	movlb	1	; () banked
  2651  004B3A  A16A               	btfss	(_data_correction+1)& (0+255),0,b
  2652  004B3C  D002               	goto	u9310
  2653  004B3E  8E46               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2654  004B40  D001               	goto	l7298
  2655  004B42                     u9310:
  2656  004B42  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2657  004B44                     l7298:
  2658                           
  2659                           ;parcheggio.c: 402: can_send();
  2660  004B44  EC4D  F02A         	call	_can_send	;wreg free
  2661                           
  2662                           ;parcheggio.c: 403: }
  2663                           ;parcheggio.c: 404: } else if (data_correction[0] != old_data_correction) {
  2664  004B48  0012               	return	
  2665  004B4A                     l7300:
  2666  004B4A  0E00               	movlw	0
  2667  004B4C  BE46               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2668  004B4E  0E01               	movlw	1
  2669  004B50  0101               	movlb	1	; () banked
  2670  004B52  1969               	xorwf	_data_correction& (0+255),w,b
  2671  004B54  B4D8               	btfsc	status,2,c
  2672  004B56  0012               	return	
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;parcheggio.c: 405: data_correction[0] = 0;
  2676  004B58  0E00               	movlw	0
  2677  004B5A  0101               	movlb	1	; () banked
  2678  004B5C  6F69               	movwf	_data_correction& (0+255),b
  2679                           
  2680                           ; BSR set to: 1
  2681                           ;parcheggio.c: 406: old_data_correction = 0;
  2682  004B5E  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;parcheggio.c: 407: can_send();
  2686  004B60  EC4D  F02A         	call	_can_send	;wreg free
  2687                           
  2688                           ;parcheggio.c: 408: }
  2689                           ;parcheggio.c: 409: } else {
  2690  004B64  0012               	return	
  2691  004B66                     l782:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;parcheggio.c: 410: if (old_data_correction != 0) {
  2695  004B66  AE46               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2696  004B68  0012               	return	
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;parcheggio.c: 411: data_correction[0] = 0;
  2700  004B6A  0E00               	movlw	0
  2701  004B6C  0101               	movlb	1	; () banked
  2702  004B6E  6F69               	movwf	_data_correction& (0+255),b
  2703                           
  2704                           ; BSR set to: 1
  2705                           ;parcheggio.c: 412: old_data_correction = 0;
  2706  004B70  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2707                           
  2708                           ; BSR set to: 1
  2709                           ;parcheggio.c: 413: can_send();
  2710  004B72  EC4D  F02A         	call	_can_send	;wreg free
  2711  004B76  0012               	return	
  2712  004B78                     __end_of_parallelo:
  2713                           	opt stack 0
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           postdec1	equ	0xFE5
  2721                           fsr1l	equ	0xFE1
  2722                           postinc2	equ	0xFDE
  2723                           postdec2	equ	0xFDD
  2724                           status	equ	0xFD8
  2725                           
  2726 ;; *************** function _can_send *****************
  2727 ;; Defined at:
  2728 ;;		line 358 in file "parcheggio.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    5
  2749 ;; This function calls:
  2750 ;;		_CANisTxReady
  2751 ;;		_CANsendMessage
  2752 ;; This function is called by:
  2753 ;;		_park_routine
  2754 ;;		_parallelo
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text4
  2759  00549A                     __ptext4:
  2760                           	opt stack 0
  2761  00549A                     _can_send:
  2762                           	opt stack 23
  2763                           
  2764                           ;parcheggio.c: 359: if (PORTBbits.RB5 == 1) {
  2765                           
  2766                           ;incstack = 0
  2767  00549A  AA81               	btfss	3969,5,c	;volatile
  2768  00549C  D063               	goto	l7200
  2769  00549E                     l7180:
  2770  00549E  EC6F  F02F         	call	_CANisTxReady	;wreg free
  2771  0054A2  06E8               	decf	wreg,f,c
  2772  0054A4  A4D8               	btfss	status,2,c
  2773  0054A6  D7FB               	goto	l7180
  2774                           
  2775                           ;parcheggio.c: 361: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2776  0054A8  0E05               	movlw	5
  2777  0054AA  0100               	movlb	0	; () banked
  2778  0054AC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2779  0054AE  0E00               	movlw	0
  2780  0054B0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2781  0054B2  0E00               	movlw	0
  2782  0054B4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2783  0054B6  0E00               	movlw	0
  2784  0054B8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2785  0054BA  0E79               	movlw	low _data_steering
  2786  0054BC  0100               	movlb	0	; () banked
  2787  0054BE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2788  0054C0  0E01               	movlw	high _data_steering
  2789  0054C2  0100               	movlb	0	; () banked
  2790  0054C4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2791  0054C6  0E08               	movlw	8
  2792  0054C8  0100               	movlb	0	; () banked
  2793  0054CA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2794  0054CC  0EBC               	movlw	188
  2795  0054CE  0100               	movlb	0	; () banked
  2796  0054D0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2797  0054D2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2798                           
  2799                           ;parcheggio.c: 362: data_speed[0] = set_speed;
  2800  0054D6  C0E6  F171         	movff	_set_speed,_data_speed
  2801                           
  2802                           ;parcheggio.c: 363: data_speed[1] = (set_speed >> 8);
  2803  0054DA  0100               	movlb	0	; () banked
  2804  0054DC  51E7               	movf	(_set_speed+1)& (0+255),w,b
  2805  0054DE  0101               	movlb	1	; () banked
  2806  0054E0  6F72               	movwf	(_data_speed+1)& (0+255),b
  2807                           
  2808                           ; BSR set to: 1
  2809                           ;parcheggio.c: 364: data_speed[2] = dir;
  2810  0054E2  0E00               	movlw	0
  2811  0054E4  B446               	btfsc	_dir/(0+8),_dir& (0+7),c
  2812  0054E6  0E01               	movlw	1
  2813  0054E8  0101               	movlb	1	; () banked
  2814  0054EA  6F73               	movwf	(_data_speed+2)& (0+255),b
  2815  0054EC                     l7190:
  2816  0054EC  EC6F  F02F         	call	_CANisTxReady	;wreg free
  2817  0054F0  06E8               	decf	wreg,f,c
  2818  0054F2  A4D8               	btfss	status,2,c
  2819  0054F4  D7FB               	goto	l7190
  2820                           
  2821                           ;parcheggio.c: 366: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2822  0054F6  0E03               	movlw	3
  2823  0054F8  0100               	movlb	0	; () banked
  2824  0054FA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2825  0054FC  0E00               	movlw	0
  2826  0054FE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2827  005500  0E00               	movlw	0
  2828  005502  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2829  005504  0E00               	movlw	0
  2830  005506  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2831  005508  0E71               	movlw	low _data_speed
  2832  00550A  0100               	movlb	0	; () banked
  2833  00550C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2834  00550E  0E01               	movlw	high _data_speed
  2835  005510  0100               	movlb	0	; () banked
  2836  005512  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2837  005514  0E08               	movlw	8
  2838  005516  0100               	movlb	0	; () banked
  2839  005518  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2840  00551A  0EBC               	movlw	188
  2841  00551C  0100               	movlb	0	; () banked
  2842  00551E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2843  005520  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2844  005524                     l7194:
  2845  005524  EC6F  F02F         	call	_CANisTxReady	;wreg free
  2846  005528  06E8               	decf	wreg,f,c
  2847  00552A  A4D8               	btfss	status,2,c
  2848  00552C  D7FB               	goto	l7194
  2849                           
  2850                           ;parcheggio.c: 368: data_brake[1] = 0;
  2851  00552E  0E00               	movlw	0
  2852  005530  0101               	movlb	1	; () banked
  2853  005532  6F62               	movwf	(_data_brake+1)& (0+255),b
  2854                           
  2855                           ; BSR set to: 1
  2856                           ;parcheggio.c: 369: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2857  005534  0E04               	movlw	4
  2858  005536  0100               	movlb	0	; () banked
  2859  005538  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2860  00553A  0E00               	movlw	0
  2861  00553C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2862  00553E  0E00               	movlw	0
  2863  005540  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2864  005542  0E00               	movlw	0
  2865  005544  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2866  005546  0E61               	movlw	low _data_brake
  2867  005548  0100               	movlb	0	; () banked
  2868  00554A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2869  00554C  0E01               	movlw	high _data_brake
  2870  00554E  0100               	movlb	0	; () banked
  2871  005550  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2872  005552  0E08               	movlw	8
  2873  005554  0100               	movlb	0	; () banked
  2874  005556  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2875  005558  0EBC               	movlw	188
  2876  00555A  0100               	movlb	0	; () banked
  2877  00555C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2878  00555E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2879                           
  2880                           ;parcheggio.c: 370: } else {
  2881  005562  0012               	return	
  2882  005564                     l7200:
  2883                           
  2884                           ;parcheggio.c: 371: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2885  005564  0E0E               	movlw	14
  2886  005566  0100               	movlb	0	; () banked
  2887  005568  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2888  00556A  0E00               	movlw	0
  2889  00556C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2890  00556E  0E00               	movlw	0
  2891  005570  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2892  005572  0E00               	movlw	0
  2893  005574  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2894  005576  0E69               	movlw	low _data_correction
  2895  005578  0100               	movlb	0	; () banked
  2896  00557A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2897  00557C  0E01               	movlw	high _data_correction
  2898  00557E  0100               	movlb	0	; () banked
  2899  005580  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2900  005582  0E08               	movlw	8
  2901  005584  0100               	movlb	0	; () banked
  2902  005586  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2903  005588  0EBC               	movlw	188
  2904  00558A  0100               	movlb	0	; () banked
  2905  00558C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2906  00558E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2907                           
  2908                           ;parcheggio.c: 372: unsigned char data_correction1[];
  2909                           ;parcheggio.c: 373: data_correction1[0] = data_correction[0];
  2910  005592  EE20  F087         	lfsr	2,can_send@data_correction1
  2911  005596  C169  FFDF         	movff	_data_correction,indf2
  2912                           
  2913                           ;parcheggio.c: 374: data_correction1[1] = 0;
  2914  00559A  0E00               	movlw	0
  2915  00559C  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  2916                           
  2917                           ;parcheggio.c: 375: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2918  0055A0  0EAA               	movlw	170
  2919  0055A2  0100               	movlb	0	; () banked
  2920  0055A4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2921  0055A6  0E00               	movlw	0
  2922  0055A8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2923  0055AA  0E00               	movlw	0
  2924  0055AC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2925  0055AE  0E00               	movlw	0
  2926  0055B0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2927  0055B2  0E87               	movlw	low can_send@data_correction1
  2928  0055B4  0100               	movlb	0	; () banked
  2929  0055B6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2930  0055B8  0E00               	movlw	high can_send@data_correction1
  2931  0055BA  0100               	movlb	0	; () banked
  2932  0055BC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2933  0055BE  0E08               	movlw	8
  2934  0055C0  0100               	movlb	0	; () banked
  2935  0055C2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2936  0055C4  0EBC               	movlw	188
  2937  0055C6  0100               	movlb	0	; () banked
  2938  0055C8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2939  0055CA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2940  0055CE  0012               	return	
  2941  0055D0                     __end_of_can_send:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           postdec1	equ	0xFE5
  2950                           fsr1l	equ	0xFE1
  2951                           indf2	equ	0xFDF
  2952                           postinc2	equ	0xFDE
  2953                           postdec2	equ	0xFDD
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _CANsendMessage *****************
  2957 ;; Defined at:
  2958 ;;		line 294 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  identifier      4   23[BANK0 ] unsigned long 
  2961 ;;  data            2   27[BANK0 ] PTR unsigned char 
  2962 ;;		 -> can_send@data_correction1(0), data_speed(8), data_steering(8), data_correction(8), 
  2963 ;;		 -> data_brake(8), data_test(8), data(8), 
  2964 ;;  dataLength      1   29[BANK0 ] unsigned char 
  2965 ;;  flags           1   30[BANK0 ] enum E16335
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  tamp            4   35[BANK0 ] unsigned long 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;		None               void
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2977 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2980 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2981 ;;Total ram usage:       16 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    4
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_park_search
  2988 ;;		_park_routine
  2989 ;;		_can_send
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text5
  2994  001858                     __ptext5:
  2995                           	opt stack 0
  2996  001858                     _CANsendMessage:
  2997                           	opt stack 23
  2998                           
  2999                           ;inc\CANlib.h: 296: unsigned long tamp;
  3000                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3001                           
  3002                           ;incstack = 0
  3003  001858  010F               	movlb	15	; () banked
  3004  00185A  B740               	btfsc	64,3,b	;volatile
  3005  00185C  D13F               	goto	l363
  3006                           
  3007                           ; BSR set to: 15
  3008                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3009  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3010                           
  3011                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3012  001862  0100               	movlb	0	; () banked
  3013  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3014  001866  D003               	goto	l364
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3018  001868  010F               	movlb	15	; () banked
  3019  00186A  8D45               	bsf	69,6,b	;volatile
  3020  00186C  D002               	goto	l365
  3021  00186E                     l364:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;inc\CANlib.h: 302: else
  3025                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3026  00186E  010F               	movlb	15	; () banked
  3027  001870  9D45               	bcf	69,6,b	;volatile
  3028  001872                     l365:
  3029                           
  3030                           ; BSR set to: 15
  3031                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3032  001872  0100               	movlb	0	; () banked
  3033  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3034  001876  D079               	goto	l366
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;inc\CANlib.h: 306: {
  3038                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3039  001878  0100               	movlb	0	; () banked
  3040  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3041  00187C  0100               	movlb	0	; () banked
  3042  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3043  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3044  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3045  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3049  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3053  00188A  0E00               	movlw	0
  3054  00188C  0100               	movlb	0	; () banked
  3055  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3056  001890  0100               	movlb	0	; () banked
  3057  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3058  001894  0EFF               	movlw	255
  3059  001896  0100               	movlb	0	; () banked
  3060  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3061  00189A  0100               	movlb	0	; () banked
  3062  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3063  00189E  0E00               	movlw	0
  3064  0018A0  0100               	movlb	0	; () banked
  3065  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3066  0018A4  0100               	movlb	0	; () banked
  3067  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3068  0018A8  0E00               	movlw	0
  3069  0018AA  0100               	movlb	0	; () banked
  3070  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3071  0018AE  0100               	movlb	0	; () banked
  3072  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3076  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3077  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3078  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3079  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3080  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3081  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3082  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3083  0018CE  0100               	movlb	0	; () banked
  3084  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3085  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3086  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3087  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3088  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3092  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3096  0018E6  0E00               	movlw	0
  3097  0018E8  010F               	movlb	15	; () banked
  3098  0018EA  6F42               	movwf	66,b	;volatile
  3099                           
  3100                           ; BSR set to: 15
  3101                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3102  0018EC  010F               	movlb	15	; () banked
  3103  0018EE  8742               	bsf	66,3,b	;volatile
  3104                           
  3105                           ; BSR set to: 15
  3106                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3107  0018F0  0100               	movlb	0	; () banked
  3108  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3109  0018F4  D002               	goto	l367
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3113  0018F6  010F               	movlb	15	; () banked
  3114  0018F8  8142               	bsf	66,0,b	;volatile
  3115  0018FA                     l367:
  3116                           
  3117                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3118  0018FA  0100               	movlb	0	; () banked
  3119  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3120  0018FE  D002               	goto	l368
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3124  001900  010F               	movlb	15	; () banked
  3125  001902  8342               	bsf	66,1,b	;volatile
  3126  001904                     l368:
  3127                           
  3128                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3129  001904  0100               	movlb	0	; () banked
  3130  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3131  001908  D002               	goto	l369
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3135  00190A  010F               	movlb	15	; () banked
  3136  00190C  8B42               	bsf	66,5,b	;volatile
  3137  00190E                     l369:
  3138                           
  3139                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3140  00190E  0100               	movlb	0	; () banked
  3141  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3142  001912  D002               	goto	l370
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3146  001914  010F               	movlb	15	; () banked
  3147  001916  8D42               	bsf	66,6,b	;volatile
  3148  001918                     l370:
  3149                           
  3150                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3151  001918  0100               	movlb	0	; () banked
  3152  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3153  00191C  D002               	goto	l6784
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3157  00191E  010F               	movlb	15	; () banked
  3158  001920  8F42               	bsf	66,7,b	;volatile
  3159  001922                     l6784:
  3160                           
  3161                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3162  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3163  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3164  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3165  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3166  001932  0E16               	movlw	22
  3167  001934  D006               	goto	u8570
  3168  001936                     u8575:
  3169  001936  0100               	movlb	0	; () banked
  3170  001938  90D8               	bcf	status,0,c
  3171  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3172  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3173  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3174  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3175  001942                     u8570:
  3176  001942  2EE8               	decfsz	wreg,f,c
  3177  001944  D7F8               	goto	u8575
  3178  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3179  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3180  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3181  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3185  001956  0100               	movlb	0	; () banked
  3186  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3187  00195A  0100               	movlb	0	; () banked
  3188  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3189  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3190  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3191  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3195  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3196                           
  3197                           ;inc\CANlib.h: 332: }
  3198  001968  D059               	goto	l6804
  3199  00196A                     l366:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;inc\CANlib.h: 334: else
  3203                           ;inc\CANlib.h: 336: {
  3204                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3205  00196A  010F               	movlb	15	; () banked
  3206  00196C  9742               	bcf	66,3,b	;volatile
  3207                           
  3208                           ; BSR set to: 15
  3209                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3210  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3211  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3212  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3213  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3214  00197E  0E04               	movlw	4
  3215  001980  D006               	goto	u8580
  3216  001982                     u8585:
  3217  001982  0100               	movlb	0	; () banked
  3218  001984  90D8               	bcf	status,0,c
  3219  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3220  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3221  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3222  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3223  00198E                     u8580:
  3224  00198E  2EE8               	decfsz	wreg,f,c
  3225  001990  D7F8               	goto	u8585
  3226  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3227  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3228  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3229  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3233  0019A2  0100               	movlb	0	; () banked
  3234  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3235  0019A6  0100               	movlb	0	; () banked
  3236  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3237  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3238  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3239  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3243  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3247  0019B4  0E07               	movlw	7
  3248  0019B6  0100               	movlb	0	; () banked
  3249  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3250  0019BA  0100               	movlb	0	; () banked
  3251  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3252  0019BE  0E00               	movlw	0
  3253  0019C0  0100               	movlb	0	; () banked
  3254  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3255  0019C4  0100               	movlb	0	; () banked
  3256  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3257  0019C8  0E00               	movlw	0
  3258  0019CA  0100               	movlb	0	; () banked
  3259  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3260  0019CE  0100               	movlb	0	; () banked
  3261  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3262  0019D2  0E00               	movlw	0
  3263  0019D4  0100               	movlb	0	; () banked
  3264  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3265  0019D8  0100               	movlb	0	; () banked
  3266  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3270  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3271  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3272  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3273  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3274  0019EC  0E05               	movlw	5
  3275  0019EE                     u8595:
  3276  0019EE  90D8               	bcf	status,0,c
  3277  0019F0  0100               	movlb	0	; () banked
  3278  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3279  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3280  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3281  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3282  0019FA  2EE8               	decfsz	wreg,f,c
  3283  0019FC  D7F8               	goto	u8595
  3284  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3285  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3286  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3287  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3291  001A0E  010F               	movlb	15	; () banked
  3292  001A10  5142               	movf	66,w,b	;volatile
  3293  001A12  0B1F               	andlw	31
  3294  001A14  010F               	movlb	15	; () banked
  3295  001A16  6F42               	movwf	66,b	;volatile
  3296                           
  3297                           ; BSR set to: 15
  3298                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3299  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3300  001A1C                     l6804:
  3301                           
  3302                           ;inc\CANlib.h: 347: }
  3303                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3304  001A1C  0100               	movlb	0	; () banked
  3305  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3306  001A20  D003               	goto	l373
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3310  001A22  010F               	movlb	15	; () banked
  3311  001A24  8140               	bsf	64,0,b	;volatile
  3312  001A26  D002               	goto	l374
  3313  001A28                     l373:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 351: else
  3317                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3318  001A28  010F               	movlb	15	; () banked
  3319  001A2A  9140               	bcf	64,0,b	;volatile
  3320  001A2C                     l374:
  3321                           
  3322                           ; BSR set to: 15
  3323                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3324  001A2C  0100               	movlb	0	; () banked
  3325  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3326  001A30  D003               	goto	l375
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3330  001A32  010F               	movlb	15	; () banked
  3331  001A34  8340               	bsf	64,1,b	;volatile
  3332  001A36  D002               	goto	l6810
  3333  001A38                     l375:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;inc\CANlib.h: 355: else
  3337                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3338  001A38  010F               	movlb	15	; () banked
  3339  001A3A  9340               	bcf	64,1,b	;volatile
  3340  001A3C                     l6810:
  3341                           
  3342                           ; BSR set to: 15
  3343                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3344  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3345  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3346  001A44  50DF               	movf	indf2,w,c
  3347  001A46  010F               	movlb	15	; () banked
  3348  001A48  6F46               	movwf	70,b	;volatile
  3349                           
  3350                           ; BSR set to: 15
  3351                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3352  001A4A  0100               	movlb	0	; () banked
  3353  001A4C  EE20 F001          	lfsr	2,1
  3354  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3355  001A52  26D9               	addwf	fsr2l,f,c
  3356  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3357  001A56  22DA               	addwfc	fsr2h,f,c
  3358  001A58  50DF               	movf	indf2,w,c
  3359  001A5A  010F               	movlb	15	; () banked
  3360  001A5C  6F47               	movwf	71,b	;volatile
  3361                           
  3362                           ; BSR set to: 15
  3363                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3364  001A5E  0100               	movlb	0	; () banked
  3365  001A60  EE20 F002          	lfsr	2,2
  3366  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3367  001A66  26D9               	addwf	fsr2l,f,c
  3368  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3369  001A6A  22DA               	addwfc	fsr2h,f,c
  3370  001A6C  50DF               	movf	indf2,w,c
  3371  001A6E  010F               	movlb	15	; () banked
  3372  001A70  6F48               	movwf	72,b	;volatile
  3373                           
  3374                           ; BSR set to: 15
  3375                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3376  001A72  0100               	movlb	0	; () banked
  3377  001A74  EE20 F003          	lfsr	2,3
  3378  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3379  001A7A  26D9               	addwf	fsr2l,f,c
  3380  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3381  001A7E  22DA               	addwfc	fsr2h,f,c
  3382  001A80  50DF               	movf	indf2,w,c
  3383  001A82  010F               	movlb	15	; () banked
  3384  001A84  6F49               	movwf	73,b	;volatile
  3385                           
  3386                           ; BSR set to: 15
  3387                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3388  001A86  0100               	movlb	0	; () banked
  3389  001A88  EE20 F004          	lfsr	2,4
  3390  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3391  001A8E  26D9               	addwf	fsr2l,f,c
  3392  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3393  001A92  22DA               	addwfc	fsr2h,f,c
  3394  001A94  50DF               	movf	indf2,w,c
  3395  001A96  010F               	movlb	15	; () banked
  3396  001A98  6F4A               	movwf	74,b	;volatile
  3397                           
  3398                           ; BSR set to: 15
  3399                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3400  001A9A  0100               	movlb	0	; () banked
  3401  001A9C  EE20 F005          	lfsr	2,5
  3402  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3403  001AA2  26D9               	addwf	fsr2l,f,c
  3404  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3405  001AA6  22DA               	addwfc	fsr2h,f,c
  3406  001AA8  50DF               	movf	indf2,w,c
  3407  001AAA  010F               	movlb	15	; () banked
  3408  001AAC  6F4B               	movwf	75,b	;volatile
  3409                           
  3410                           ; BSR set to: 15
  3411                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3412  001AAE  0100               	movlb	0	; () banked
  3413  001AB0  EE20 F006          	lfsr	2,6
  3414  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3415  001AB6  26D9               	addwf	fsr2l,f,c
  3416  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3417  001ABA  22DA               	addwfc	fsr2h,f,c
  3418  001ABC  50DF               	movf	indf2,w,c
  3419  001ABE  010F               	movlb	15	; () banked
  3420  001AC0  6F4C               	movwf	76,b	;volatile
  3421                           
  3422                           ; BSR set to: 15
  3423                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3424  001AC2  0100               	movlb	0	; () banked
  3425  001AC4  EE20 F007          	lfsr	2,7
  3426  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3427  001ACA  26D9               	addwf	fsr2l,f,c
  3428  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3429  001ACE  22DA               	addwfc	fsr2h,f,c
  3430  001AD0  50DF               	movf	indf2,w,c
  3431  001AD2  010F               	movlb	15	; () banked
  3432  001AD4  6F4D               	movwf	77,b	;volatile
  3433                           
  3434                           ; BSR set to: 15
  3435                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3436  001AD6  010F               	movlb	15	; () banked
  3437  001AD8  8740               	bsf	64,3,b	;volatile
  3438                           
  3439                           ; BSR set to: 15
  3440                           ;inc\CANlib.h: 368: return;
  3441  001ADA  0012               	return	
  3442  001ADC                     l363:
  3443                           
  3444                           ; BSR set to: 15
  3445                           ;inc\CANlib.h: 369: }
  3446                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3447  001ADC  010F               	movlb	15	; () banked
  3448  001ADE  B730               	btfsc	48,3,b	;volatile
  3449  001AE0  D13F               	goto	l378
  3450                           
  3451                           ; BSR set to: 15
  3452                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3453  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3454                           
  3455                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3456  001AE6  0100               	movlb	0	; () banked
  3457  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3458  001AEA  D003               	goto	l379
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3462  001AEC  010F               	movlb	15	; () banked
  3463  001AEE  8D35               	bsf	53,6,b	;volatile
  3464  001AF0  D002               	goto	l380
  3465  001AF2                     l379:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;inc\CANlib.h: 378: else
  3469                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3470  001AF2  010F               	movlb	15	; () banked
  3471  001AF4  9D35               	bcf	53,6,b	;volatile
  3472  001AF6                     l380:
  3473                           
  3474                           ; BSR set to: 15
  3475                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3476  001AF6  0100               	movlb	0	; () banked
  3477  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3478  001AFA  D079               	goto	l381
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;inc\CANlib.h: 382: {
  3482                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3483  001AFC  0100               	movlb	0	; () banked
  3484  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3485  001B00  0100               	movlb	0	; () banked
  3486  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3487  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3488  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3489  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3493  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3497  001B0E  0E00               	movlw	0
  3498  001B10  0100               	movlb	0	; () banked
  3499  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3500  001B14  0100               	movlb	0	; () banked
  3501  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3502  001B18  0EFF               	movlw	255
  3503  001B1A  0100               	movlb	0	; () banked
  3504  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3505  001B1E  0100               	movlb	0	; () banked
  3506  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3507  001B22  0E00               	movlw	0
  3508  001B24  0100               	movlb	0	; () banked
  3509  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3510  001B28  0100               	movlb	0	; () banked
  3511  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3512  001B2C  0E00               	movlw	0
  3513  001B2E  0100               	movlb	0	; () banked
  3514  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3515  001B32  0100               	movlb	0	; () banked
  3516  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3520  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3521  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3522  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3523  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3524  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3525  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3526  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3527  001B52  0100               	movlb	0	; () banked
  3528  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3529  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3530  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3531  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3532  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3536  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3540  001B6A  0E00               	movlw	0
  3541  001B6C  010F               	movlb	15	; () banked
  3542  001B6E  6F32               	movwf	50,b	;volatile
  3543                           
  3544                           ; BSR set to: 15
  3545                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3546  001B70  010F               	movlb	15	; () banked
  3547  001B72  8732               	bsf	50,3,b	;volatile
  3548                           
  3549                           ; BSR set to: 15
  3550                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3551  001B74  0100               	movlb	0	; () banked
  3552  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3553  001B78  D002               	goto	l382
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3557  001B7A  010F               	movlb	15	; () banked
  3558  001B7C  8132               	bsf	50,0,b	;volatile
  3559  001B7E                     l382:
  3560                           
  3561                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3562  001B7E  0100               	movlb	0	; () banked
  3563  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3564  001B82  D002               	goto	l383
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3568  001B84  010F               	movlb	15	; () banked
  3569  001B86  8332               	bsf	50,1,b	;volatile
  3570  001B88                     l383:
  3571                           
  3572                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3573  001B88  0100               	movlb	0	; () banked
  3574  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3575  001B8C  D002               	goto	l384
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3579  001B8E  010F               	movlb	15	; () banked
  3580  001B90  8B32               	bsf	50,5,b	;volatile
  3581  001B92                     l384:
  3582                           
  3583                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3584  001B92  0100               	movlb	0	; () banked
  3585  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3586  001B96  D002               	goto	l385
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3590  001B98  010F               	movlb	15	; () banked
  3591  001B9A  8D32               	bsf	50,6,b	;volatile
  3592  001B9C                     l385:
  3593                           
  3594                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3595  001B9C  0100               	movlb	0	; () banked
  3596  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3597  001BA0  D002               	goto	l6860
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3601  001BA2  010F               	movlb	15	; () banked
  3602  001BA4  8F32               	bsf	50,7,b	;volatile
  3603  001BA6                     l6860:
  3604                           
  3605                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3606  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3607  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3608  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3609  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3610  001BB6  0E16               	movlw	22
  3611  001BB8  D006               	goto	u8700
  3612  001BBA                     u8705:
  3613  001BBA  0100               	movlb	0	; () banked
  3614  001BBC  90D8               	bcf	status,0,c
  3615  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3616  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3617  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3618  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3619  001BC6                     u8700:
  3620  001BC6  2EE8               	decfsz	wreg,f,c
  3621  001BC8  D7F8               	goto	u8705
  3622  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3623  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3624  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3625  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3629  001BDA  0100               	movlb	0	; () banked
  3630  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3631  001BDE  0100               	movlb	0	; () banked
  3632  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3633  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3634  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3635  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3639  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3640                           
  3641                           ;inc\CANlib.h: 407: }
  3642  001BEC  D059               	goto	l6880
  3643  001BEE                     l381:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 409: else
  3647                           ;inc\CANlib.h: 411: {
  3648                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3649  001BEE  010F               	movlb	15	; () banked
  3650  001BF0  9732               	bcf	50,3,b	;volatile
  3651                           
  3652                           ; BSR set to: 15
  3653                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3654  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3655  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3656  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3657  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3658  001C02  0E04               	movlw	4
  3659  001C04  D006               	goto	u8710
  3660  001C06                     u8715:
  3661  001C06  0100               	movlb	0	; () banked
  3662  001C08  90D8               	bcf	status,0,c
  3663  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3664  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3665  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3666  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3667  001C12                     u8710:
  3668  001C12  2EE8               	decfsz	wreg,f,c
  3669  001C14  D7F8               	goto	u8715
  3670  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3671  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3672  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3673  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3677  001C26  0100               	movlb	0	; () banked
  3678  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3679  001C2A  0100               	movlb	0	; () banked
  3680  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3681  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3682  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3683  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3687  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3691  001C38  0E07               	movlw	7
  3692  001C3A  0100               	movlb	0	; () banked
  3693  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3694  001C3E  0100               	movlb	0	; () banked
  3695  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3696  001C42  0E00               	movlw	0
  3697  001C44  0100               	movlb	0	; () banked
  3698  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3699  001C48  0100               	movlb	0	; () banked
  3700  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3701  001C4C  0E00               	movlw	0
  3702  001C4E  0100               	movlb	0	; () banked
  3703  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3704  001C52  0100               	movlb	0	; () banked
  3705  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3706  001C56  0E00               	movlw	0
  3707  001C58  0100               	movlb	0	; () banked
  3708  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3709  001C5C  0100               	movlb	0	; () banked
  3710  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  3714  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3715  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3716  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3717  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3718  001C70  0E05               	movlw	5
  3719  001C72                     u8725:
  3720  001C72  90D8               	bcf	status,0,c
  3721  001C74  0100               	movlb	0	; () banked
  3722  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3723  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3724  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3725  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3726  001C7E  2EE8               	decfsz	wreg,f,c
  3727  001C80  D7F8               	goto	u8725
  3728  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3729  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3730  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3731  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  3735  001C92  010F               	movlb	15	; () banked
  3736  001C94  5132               	movf	50,w,b	;volatile
  3737  001C96  0B1F               	andlw	31
  3738  001C98  010F               	movlb	15	; () banked
  3739  001C9A  6F32               	movwf	50,b	;volatile
  3740                           
  3741                           ; BSR set to: 15
  3742                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  3743  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3744  001CA0                     l6880:
  3745                           
  3746                           ;inc\CANlib.h: 422: }
  3747                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  3748  001CA0  0100               	movlb	0	; () banked
  3749  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3750  001CA4  D003               	goto	l388
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  3754  001CA6  010F               	movlb	15	; () banked
  3755  001CA8  8130               	bsf	48,0,b	;volatile
  3756  001CAA  D002               	goto	l389
  3757  001CAC                     l388:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;inc\CANlib.h: 426: else
  3761                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  3762  001CAC  010F               	movlb	15	; () banked
  3763  001CAE  9130               	bcf	48,0,b	;volatile
  3764  001CB0                     l389:
  3765                           
  3766                           ; BSR set to: 15
  3767                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  3768  001CB0  0100               	movlb	0	; () banked
  3769  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3770  001CB4  D003               	goto	l390
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  3774  001CB6  010F               	movlb	15	; () banked
  3775  001CB8  8330               	bsf	48,1,b	;volatile
  3776  001CBA  D002               	goto	l6886
  3777  001CBC                     l390:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;inc\CANlib.h: 430: else
  3781                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  3782  001CBC  010F               	movlb	15	; () banked
  3783  001CBE  9330               	bcf	48,1,b	;volatile
  3784  001CC0                     l6886:
  3785                           
  3786                           ; BSR set to: 15
  3787                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  3788  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3789  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3790  001CC8  50DF               	movf	indf2,w,c
  3791  001CCA  010F               	movlb	15	; () banked
  3792  001CCC  6F36               	movwf	54,b	;volatile
  3793                           
  3794                           ; BSR set to: 15
  3795                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  3796  001CCE  0100               	movlb	0	; () banked
  3797  001CD0  EE20 F001          	lfsr	2,1
  3798  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3799  001CD6  26D9               	addwf	fsr2l,f,c
  3800  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3801  001CDA  22DA               	addwfc	fsr2h,f,c
  3802  001CDC  50DF               	movf	indf2,w,c
  3803  001CDE  010F               	movlb	15	; () banked
  3804  001CE0  6F37               	movwf	55,b	;volatile
  3805                           
  3806                           ; BSR set to: 15
  3807                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  3808  001CE2  0100               	movlb	0	; () banked
  3809  001CE4  EE20 F002          	lfsr	2,2
  3810  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3811  001CEA  26D9               	addwf	fsr2l,f,c
  3812  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3813  001CEE  22DA               	addwfc	fsr2h,f,c
  3814  001CF0  50DF               	movf	indf2,w,c
  3815  001CF2  010F               	movlb	15	; () banked
  3816  001CF4  6F38               	movwf	56,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  3820  001CF6  0100               	movlb	0	; () banked
  3821  001CF8  EE20 F003          	lfsr	2,3
  3822  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  3823  001CFE  26D9               	addwf	fsr2l,f,c
  3824  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3825  001D02  22DA               	addwfc	fsr2h,f,c
  3826  001D04  50DF               	movf	indf2,w,c
  3827  001D06  010F               	movlb	15	; () banked
  3828  001D08  6F39               	movwf	57,b	;volatile
  3829                           
  3830                           ; BSR set to: 15
  3831                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  3832  001D0A  0100               	movlb	0	; () banked
  3833  001D0C  EE20 F004          	lfsr	2,4
  3834  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  3835  001D12  26D9               	addwf	fsr2l,f,c
  3836  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3837  001D16  22DA               	addwfc	fsr2h,f,c
  3838  001D18  50DF               	movf	indf2,w,c
  3839  001D1A  010F               	movlb	15	; () banked
  3840  001D1C  6F3A               	movwf	58,b	;volatile
  3841                           
  3842                           ; BSR set to: 15
  3843                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  3844  001D1E  0100               	movlb	0	; () banked
  3845  001D20  EE20 F005          	lfsr	2,5
  3846  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  3847  001D26  26D9               	addwf	fsr2l,f,c
  3848  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3849  001D2A  22DA               	addwfc	fsr2h,f,c
  3850  001D2C  50DF               	movf	indf2,w,c
  3851  001D2E  010F               	movlb	15	; () banked
  3852  001D30  6F3B               	movwf	59,b	;volatile
  3853                           
  3854                           ; BSR set to: 15
  3855                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  3856  001D32  0100               	movlb	0	; () banked
  3857  001D34  EE20 F006          	lfsr	2,6
  3858  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  3859  001D3A  26D9               	addwf	fsr2l,f,c
  3860  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3861  001D3E  22DA               	addwfc	fsr2h,f,c
  3862  001D40  50DF               	movf	indf2,w,c
  3863  001D42  010F               	movlb	15	; () banked
  3864  001D44  6F3C               	movwf	60,b	;volatile
  3865                           
  3866                           ; BSR set to: 15
  3867                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  3868  001D46  0100               	movlb	0	; () banked
  3869  001D48  EE20 F007          	lfsr	2,7
  3870  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3871  001D4E  26D9               	addwf	fsr2l,f,c
  3872  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3873  001D52  22DA               	addwfc	fsr2h,f,c
  3874  001D54  50DF               	movf	indf2,w,c
  3875  001D56  010F               	movlb	15	; () banked
  3876  001D58  6F3D               	movwf	61,b	;volatile
  3877                           
  3878                           ; BSR set to: 15
  3879                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  3880  001D5A  010F               	movlb	15	; () banked
  3881  001D5C  8730               	bsf	48,3,b	;volatile
  3882                           
  3883                           ; BSR set to: 15
  3884                           ;inc\CANlib.h: 444: return;
  3885  001D5E  0012               	return	
  3886  001D60                     l378:
  3887                           
  3888                           ; BSR set to: 15
  3889                           ;inc\CANlib.h: 445: }
  3890                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  3891  001D60  010F               	movlb	15	; () banked
  3892  001D62  B720               	btfsc	32,3,b	;volatile
  3893  001D64  0012               	return	
  3894                           
  3895                           ; BSR set to: 15
  3896                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  3897  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  3898                           
  3899                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  3900  001D6A  0100               	movlb	0	; () banked
  3901  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3902  001D6E  D003               	goto	l393
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  3906  001D70  010F               	movlb	15	; () banked
  3907  001D72  8D25               	bsf	37,6,b	;volatile
  3908  001D74  D002               	goto	l394
  3909  001D76                     l393:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;inc\CANlib.h: 454: else
  3913                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  3914  001D76  010F               	movlb	15	; () banked
  3915  001D78  9D25               	bcf	37,6,b	;volatile
  3916  001D7A                     l394:
  3917                           
  3918                           ; BSR set to: 15
  3919                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  3920  001D7A  0100               	movlb	0	; () banked
  3921  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3922  001D7E  D079               	goto	l395
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;inc\CANlib.h: 458: {
  3926                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  3927  001D80  0100               	movlb	0	; () banked
  3928  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3929  001D84  0100               	movlb	0	; () banked
  3930  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3931  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3932  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3933  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  3937  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  3941  001D92  0E00               	movlw	0
  3942  001D94  0100               	movlb	0	; () banked
  3943  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3944  001D98  0100               	movlb	0	; () banked
  3945  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3946  001D9C  0EFF               	movlw	255
  3947  001D9E  0100               	movlb	0	; () banked
  3948  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3949  001DA2  0100               	movlb	0	; () banked
  3950  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3951  001DA6  0E00               	movlw	0
  3952  001DA8  0100               	movlb	0	; () banked
  3953  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3954  001DAC  0100               	movlb	0	; () banked
  3955  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3956  001DB0  0E00               	movlw	0
  3957  001DB2  0100               	movlb	0	; () banked
  3958  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3959  001DB6  0100               	movlb	0	; () banked
  3960  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  3964  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3965  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3966  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3967  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3968  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3969  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3970  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3971  001DD6  0100               	movlb	0	; () banked
  3972  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3973  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3974  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3975  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3976  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  3980  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  3984  001DEE  0E00               	movlw	0
  3985  001DF0  010F               	movlb	15	; () banked
  3986  001DF2  6F22               	movwf	34,b	;volatile
  3987                           
  3988                           ; BSR set to: 15
  3989                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  3990  001DF4  010F               	movlb	15	; () banked
  3991  001DF6  8722               	bsf	34,3,b	;volatile
  3992                           
  3993                           ; BSR set to: 15
  3994                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  3995  001DF8  0100               	movlb	0	; () banked
  3996  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3997  001DFC  D002               	goto	l396
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4001  001DFE  010F               	movlb	15	; () banked
  4002  001E00  8122               	bsf	34,0,b	;volatile
  4003  001E02                     l396:
  4004                           
  4005                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4006  001E02  0100               	movlb	0	; () banked
  4007  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4008  001E06  D002               	goto	l397
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4012  001E08  010F               	movlb	15	; () banked
  4013  001E0A  8322               	bsf	34,1,b	;volatile
  4014  001E0C                     l397:
  4015                           
  4016                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4017  001E0C  0100               	movlb	0	; () banked
  4018  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4019  001E10  D002               	goto	l398
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4023  001E12  010F               	movlb	15	; () banked
  4024  001E14  8B22               	bsf	34,5,b	;volatile
  4025  001E16                     l398:
  4026                           
  4027                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4028  001E16  0100               	movlb	0	; () banked
  4029  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4030  001E1A  D002               	goto	l399
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4034  001E1C  010F               	movlb	15	; () banked
  4035  001E1E  8D22               	bsf	34,6,b	;volatile
  4036  001E20                     l399:
  4037                           
  4038                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4039  001E20  0100               	movlb	0	; () banked
  4040  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4041  001E24  D002               	goto	l6936
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4045  001E26  010F               	movlb	15	; () banked
  4046  001E28  8F22               	bsf	34,7,b	;volatile
  4047  001E2A                     l6936:
  4048                           
  4049                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4050  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4051  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4052  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4053  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4054  001E3A  0E16               	movlw	22
  4055  001E3C  D006               	goto	u8830
  4056  001E3E                     u8835:
  4057  001E3E  0100               	movlb	0	; () banked
  4058  001E40  90D8               	bcf	status,0,c
  4059  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4060  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4061  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4062  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4063  001E4A                     u8830:
  4064  001E4A  2EE8               	decfsz	wreg,f,c
  4065  001E4C  D7F8               	goto	u8835
  4066  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4067  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4068  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4069  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4073  001E5E  0100               	movlb	0	; () banked
  4074  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4075  001E62  0100               	movlb	0	; () banked
  4076  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4077  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4078  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4079  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4083  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4084                           
  4085                           ;inc\CANlib.h: 483: }
  4086  001E70  D059               	goto	l6956
  4087  001E72                     l395:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;inc\CANlib.h: 485: else
  4091                           ;inc\CANlib.h: 487: {
  4092                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4093  001E72  010F               	movlb	15	; () banked
  4094  001E74  9722               	bcf	34,3,b	;volatile
  4095                           
  4096                           ; BSR set to: 15
  4097                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4098  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4099  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4100  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4101  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4102  001E86  0E04               	movlw	4
  4103  001E88  D006               	goto	u8840
  4104  001E8A                     u8845:
  4105  001E8A  0100               	movlb	0	; () banked
  4106  001E8C  90D8               	bcf	status,0,c
  4107  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4108  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4109  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4110  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4111  001E96                     u8840:
  4112  001E96  2EE8               	decfsz	wreg,f,c
  4113  001E98  D7F8               	goto	u8845
  4114  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4115  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4116  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4117  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4121  001EAA  0100               	movlb	0	; () banked
  4122  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4123  001EAE  0100               	movlb	0	; () banked
  4124  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4125  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4126  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4127  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4131  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4135  001EBC  0E07               	movlw	7
  4136  001EBE  0100               	movlb	0	; () banked
  4137  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4138  001EC2  0100               	movlb	0	; () banked
  4139  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4140  001EC6  0E00               	movlw	0
  4141  001EC8  0100               	movlb	0	; () banked
  4142  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4143  001ECC  0100               	movlb	0	; () banked
  4144  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4145  001ED0  0E00               	movlw	0
  4146  001ED2  0100               	movlb	0	; () banked
  4147  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4148  001ED6  0100               	movlb	0	; () banked
  4149  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4150  001EDA  0E00               	movlw	0
  4151  001EDC  0100               	movlb	0	; () banked
  4152  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4153  001EE0  0100               	movlb	0	; () banked
  4154  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4158  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4159  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4160  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4161  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4162  001EF4  0E05               	movlw	5
  4163  001EF6                     u8855:
  4164  001EF6  90D8               	bcf	status,0,c
  4165  001EF8  0100               	movlb	0	; () banked
  4166  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4167  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4168  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4169  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4170  001F02  2EE8               	decfsz	wreg,f,c
  4171  001F04  D7F8               	goto	u8855
  4172  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4173  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4174  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4175  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4179  001F16  010F               	movlb	15	; () banked
  4180  001F18  5122               	movf	34,w,b	;volatile
  4181  001F1A  0B1F               	andlw	31
  4182  001F1C  010F               	movlb	15	; () banked
  4183  001F1E  6F22               	movwf	34,b	;volatile
  4184                           
  4185                           ; BSR set to: 15
  4186                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4187  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4188  001F24                     l6956:
  4189                           
  4190                           ;inc\CANlib.h: 498: }
  4191                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4192  001F24  0100               	movlb	0	; () banked
  4193  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4194  001F28  D003               	goto	l402
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4198  001F2A  010F               	movlb	15	; () banked
  4199  001F2C  8120               	bsf	32,0,b	;volatile
  4200  001F2E  D002               	goto	l403
  4201  001F30                     l402:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 502: else
  4205                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4206  001F30  010F               	movlb	15	; () banked
  4207  001F32  9120               	bcf	32,0,b	;volatile
  4208  001F34                     l403:
  4209                           
  4210                           ; BSR set to: 15
  4211                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4212  001F34  0100               	movlb	0	; () banked
  4213  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4214  001F38  D003               	goto	l404
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4218  001F3A  010F               	movlb	15	; () banked
  4219  001F3C  8320               	bsf	32,1,b	;volatile
  4220  001F3E  D002               	goto	l6962
  4221  001F40                     l404:
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;inc\CANlib.h: 506: else
  4225                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4226  001F40  010F               	movlb	15	; () banked
  4227  001F42  9320               	bcf	32,1,b	;volatile
  4228  001F44                     l6962:
  4229                           
  4230                           ; BSR set to: 15
  4231                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4232  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4233  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4234  001F4C  50DF               	movf	indf2,w,c
  4235  001F4E  010F               	movlb	15	; () banked
  4236  001F50  6F26               	movwf	38,b	;volatile
  4237                           
  4238                           ; BSR set to: 15
  4239                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4240  001F52  0100               	movlb	0	; () banked
  4241  001F54  EE20 F001          	lfsr	2,1
  4242  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4243  001F5A  26D9               	addwf	fsr2l,f,c
  4244  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4245  001F5E  22DA               	addwfc	fsr2h,f,c
  4246  001F60  50DF               	movf	indf2,w,c
  4247  001F62  010F               	movlb	15	; () banked
  4248  001F64  6F27               	movwf	39,b	;volatile
  4249                           
  4250                           ; BSR set to: 15
  4251                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4252  001F66  0100               	movlb	0	; () banked
  4253  001F68  EE20 F002          	lfsr	2,2
  4254  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4255  001F6E  26D9               	addwf	fsr2l,f,c
  4256  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4257  001F72  22DA               	addwfc	fsr2h,f,c
  4258  001F74  50DF               	movf	indf2,w,c
  4259  001F76  010F               	movlb	15	; () banked
  4260  001F78  6F28               	movwf	40,b	;volatile
  4261                           
  4262                           ; BSR set to: 15
  4263                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4264  001F7A  0100               	movlb	0	; () banked
  4265  001F7C  EE20 F003          	lfsr	2,3
  4266  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4267  001F82  26D9               	addwf	fsr2l,f,c
  4268  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4269  001F86  22DA               	addwfc	fsr2h,f,c
  4270  001F88  50DF               	movf	indf2,w,c
  4271  001F8A  010F               	movlb	15	; () banked
  4272  001F8C  6F29               	movwf	41,b	;volatile
  4273                           
  4274                           ; BSR set to: 15
  4275                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4276  001F8E  0100               	movlb	0	; () banked
  4277  001F90  EE20 F004          	lfsr	2,4
  4278  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4279  001F96  26D9               	addwf	fsr2l,f,c
  4280  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4281  001F9A  22DA               	addwfc	fsr2h,f,c
  4282  001F9C  50DF               	movf	indf2,w,c
  4283  001F9E  010F               	movlb	15	; () banked
  4284  001FA0  6F2A               	movwf	42,b	;volatile
  4285                           
  4286                           ; BSR set to: 15
  4287                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4288  001FA2  0100               	movlb	0	; () banked
  4289  001FA4  EE20 F005          	lfsr	2,5
  4290  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4291  001FAA  26D9               	addwf	fsr2l,f,c
  4292  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4293  001FAE  22DA               	addwfc	fsr2h,f,c
  4294  001FB0  50DF               	movf	indf2,w,c
  4295  001FB2  010F               	movlb	15	; () banked
  4296  001FB4  6F2B               	movwf	43,b	;volatile
  4297                           
  4298                           ; BSR set to: 15
  4299                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4300  001FB6  0100               	movlb	0	; () banked
  4301  001FB8  EE20 F006          	lfsr	2,6
  4302  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4303  001FBE  26D9               	addwf	fsr2l,f,c
  4304  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4305  001FC2  22DA               	addwfc	fsr2h,f,c
  4306  001FC4  50DF               	movf	indf2,w,c
  4307  001FC6  010F               	movlb	15	; () banked
  4308  001FC8  6F2C               	movwf	44,b	;volatile
  4309                           
  4310                           ; BSR set to: 15
  4311                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4312  001FCA  0100               	movlb	0	; () banked
  4313  001FCC  EE20 F007          	lfsr	2,7
  4314  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4315  001FD2  26D9               	addwf	fsr2l,f,c
  4316  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4317  001FD6  22DA               	addwfc	fsr2h,f,c
  4318  001FD8  50DF               	movf	indf2,w,c
  4319  001FDA  010F               	movlb	15	; () banked
  4320  001FDC  6F2D               	movwf	45,b	;volatile
  4321                           
  4322                           ; BSR set to: 15
  4323                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4324  001FDE  010F               	movlb	15	; () banked
  4325  001FE0  8720               	bsf	32,3,b	;volatile
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;inc\CANlib.h: 520: return;
  4329  001FE2  0012               	return	
  4330  001FE4                     __end_of_CANsendMessage:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           postinc0	equ	0xFEE
  4337                           wreg	equ	0xFE8
  4338                           postdec1	equ	0xFE5
  4339                           fsr1l	equ	0xFE1
  4340                           indf2	equ	0xFDF
  4341                           postinc2	equ	0xFDE
  4342                           postdec2	equ	0xFDD
  4343                           fsr2h	equ	0xFDA
  4344                           fsr2l	equ	0xFD9
  4345                           status	equ	0xFD8
  4346                           
  4347 ;; *************** function _CANisTxReady *****************
  4348 ;; Defined at:
  4349 ;;		line 1154 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;Total ram usage:        1 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    4
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_park_search
  4374 ;;		_can_send
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text6
  4379  005EDE                     __ptext6:
  4380                           	opt stack 0
  4381  005EDE                     _CANisTxReady:
  4382                           	opt stack 23
  4383                           
  4384                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;incstack = 0
  4388  005EDE  0E01               	movlw	1
  4389  005EE0  0100               	movlb	0	; () banked
  4390  005EE2  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4391                           
  4392                           ; BSR set to: 0
  4393  005EE4  010F               	movlb	15	; () banked
  4394  005EE6  A740               	btfss	64,3,b	;volatile
  4395  005EE8  D009               	goto	l556
  4396                           
  4397                           ; BSR set to: 15
  4398  005EEA  010F               	movlb	15	; () banked
  4399  005EEC  A730               	btfss	48,3,b	;volatile
  4400  005EEE  D006               	goto	l556
  4401                           
  4402                           ; BSR set to: 15
  4403  005EF0  010F               	movlb	15	; () banked
  4404  005EF2  A720               	btfss	32,3,b	;volatile
  4405  005EF4  D003               	goto	l556
  4406                           
  4407                           ; BSR set to: 15
  4408  005EF6  0E00               	movlw	0
  4409  005EF8  0100               	movlb	0	; () banked
  4410  005EFA  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4411  005EFC                     l556:
  4412  005EFC  0100               	movlb	0	; () banked
  4413  005EFE  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4414  005F00  0012               	return	
  4415  005F02                     __end_of_CANisTxReady:
  4416                           	opt stack 0
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           postinc0	equ	0xFEE
  4422                           wreg	equ	0xFE8
  4423                           postdec1	equ	0xFE5
  4424                           fsr1l	equ	0xFE1
  4425                           indf2	equ	0xFDF
  4426                           postinc2	equ	0xFDE
  4427                           postdec2	equ	0xFDD
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _abs *****************
  4433 ;; Defined at:
  4434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  a               2   33[BANK0 ] int 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2   33[BANK0 ] int 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4451 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4452 ;;Total ram usage:        4 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    4
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_park_search
  4459 ;;		_park_routine
  4460 ;;		_parallelo
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text7
  4465  005E86                     __ptext7:
  4466                           	opt stack 0
  4467  005E86                     _abs:
  4468                           	opt stack 24
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;incstack = 0
  4472  005E86  0100               	movlb	0	; () banked
  4473  005E88  AF82               	btfss	(abs@a+1)& (0+255),7,b
  4474  005E8A  D00E               	goto	l852
  4475                           
  4476                           ; BSR set to: 0
  4477  005E8C  C081  F083         	movff	abs@a,??_abs
  4478  005E90  C082  F084         	movff	abs@a+1,??_abs+1
  4479  005E94  0100               	movlb	0	; () banked
  4480  005E96  1F83               	comf	??_abs& (0+255),f,b
  4481  005E98  1F84               	comf	(??_abs+1)& (0+255),f,b
  4482  005E9A  4B83               	infsnz	??_abs& (0+255),f,b
  4483  005E9C  2B84               	incf	(??_abs+1)& (0+255),f,b
  4484  005E9E  C083  F081         	movff	??_abs,?_abs
  4485  005EA2  C084  F082         	movff	??_abs+1,?_abs+1
  4486  005EA6  0012               	return	
  4487  005EA8                     l852:
  4488                           
  4489                           ; BSR set to: 0
  4490  005EA8  C081  F081         	movff	abs@a,?_abs
  4491  005EAC  C082  F082         	movff	abs@a+1,?_abs+1
  4492                           
  4493                           ; BSR set to: 0
  4494  005EB0  0012               	return		;funcret
  4495  005EB2                     __end_of_abs:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1l	equ	0xFE1
  4505                           indf2	equ	0xFDF
  4506                           postinc2	equ	0xFDE
  4507                           postdec2	equ	0xFDD
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function _matematica *****************
  4513 ;; Defined at:
  4514 ;;		line 419 in file "parcheggio.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;		None               void
  4521 ;; Registers used:
  4522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:       28 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    8
  4535 ;; This function calls:
  4536 ;;		___fladd
  4537 ;;		___fldiv
  4538 ;;		___flmul
  4539 ;;		___flneg
  4540 ;;		_asin
  4541 ;;		_cos
  4542 ;; This function is called by:
  4543 ;;		_park_routine
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text8
  4548  001FE4                     __ptext8:
  4549                           	opt stack 0
  4550  001FE4                     _matematica:
  4551                           	opt stack 21
  4552                           
  4553                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;incstack = 0
  4557  001FE4  C124  F0B1         	movff	_bordo,___fladd@a	;volatile
  4558  001FE8  C125  F0B2         	movff	_bordo+1,___fladd@a+1	;volatile
  4559  001FEC  C126  F0B3         	movff	_bordo+2,___fladd@a+2	;volatile
  4560  001FF0  C127  F0B4         	movff	_bordo+3,___fladd@a+3	;volatile
  4561  001FF4  0E00               	movlw	0
  4562  001FF6  0100               	movlb	0	; () banked
  4563  001FF8  6F7B               	movwf	___fldiv@a& (0+255),b
  4564  001FFA  0E00               	movlw	0
  4565  001FFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4566  001FFE  0E00               	movlw	0
  4567  002000  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4568  002002  0E40               	movlw	64
  4569  002004  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4570  002006  C1DE  F077         	movff	_larghezza,___fldiv@b
  4571  00200A  C1DF  F078         	movff	_larghezza+1,___fldiv@b+1
  4572  00200E  C1E0  F079         	movff	_larghezza+2,___fldiv@b+2
  4573  002012  C1E1  F07A         	movff	_larghezza+3,___fldiv@b+3
  4574  002016  ECB2  F01D         	call	___fldiv	;wreg free
  4575  00201A  C077  F0AD         	movff	?___fldiv,___fladd@b
  4576  00201E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  4577  002022  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  4578  002026  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  4579  00202A  EC3D  F015         	call	___fladd	;wreg free
  4580  00202E  C0AD  F0A9         	movff	?___fladd,___flneg@f1
  4581  002032  C0AE  F0AA         	movff	?___fladd+1,___flneg@f1+1
  4582  002036  C0AF  F0AB         	movff	?___fladd+2,___flneg@f1+2
  4583  00203A  C0B0  F0AC         	movff	?___fladd+3,___flneg@f1+3
  4584  00203E  EC0C  F02F         	call	___flneg	;wreg free
  4585  002042  C0A9  F1BA         	movff	?___flneg,_matematica$3739
  4586  002046  C0AA  F1BB         	movff	?___flneg+1,_matematica$3739+1
  4587  00204A  C0AB  F1BC         	movff	?___flneg+2,_matematica$3739+2
  4588  00204E  C0AC  F1BD         	movff	?___flneg+3,_matematica$3739+3
  4589                           
  4590                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4591  002052  C1BA  F0B1         	movff	_matematica$3739,___fladd@a
  4592  002056  C1BB  F0B2         	movff	_matematica$3739+1,___fladd@a+1
  4593  00205A  C1BC  F0B3         	movff	_matematica$3739+2,___fladd@a+2
  4594  00205E  C1BD  F0B4         	movff	_matematica$3739+3,___fladd@a+3
  4595  002062  0E00               	movlw	0
  4596  002064  0100               	movlb	0	; () banked
  4597  002066  6F94               	movwf	___flmul@a& (0+255),b
  4598  002068  0E00               	movlw	0
  4599  00206A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4600  00206C  0E00               	movlw	0
  4601  00206E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4602  002070  0E40               	movlw	64
  4603  002072  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4604  002074  C1E4  F090         	movff	_raggio,___flmul@b
  4605  002078  C1E5  F091         	movff	_raggio+1,___flmul@b+1
  4606  00207C  C1E6  F092         	movff	_raggio+2,___flmul@b+2
  4607  002080  C1E7  F093         	movff	_raggio+3,___flmul@b+3
  4608  002084  EC91  F017         	call	___flmul	;wreg free
  4609  002088  C090  F0AD         	movff	?___flmul,___fladd@b
  4610  00208C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  4611  002090  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  4612  002094  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  4613  002098  EC3D  F015         	call	___fladd	;wreg free
  4614  00209C  C0AD  F1BE         	movff	?___fladd,_matematica$3740
  4615  0020A0  C0AE  F1BF         	movff	?___fladd+1,_matematica$3740+1
  4616  0020A4  C0AF  F1C0         	movff	?___fladd+2,_matematica$3740+2
  4617  0020A8  C0B0  F1C1         	movff	?___fladd+3,_matematica$3740+3
  4618                           
  4619                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4620  0020AC  0E00               	movlw	0
  4621  0020AE  0100               	movlb	0	; () banked
  4622  0020B0  6F7B               	movwf	___fldiv@a& (0+255),b
  4623  0020B2  0E00               	movlw	0
  4624  0020B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4625  0020B6  0E00               	movlw	0
  4626  0020B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4627  0020BA  0E40               	movlw	64
  4628  0020BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4629  0020BE  C1DE  F077         	movff	_larghezza,___fldiv@b
  4630  0020C2  C1DF  F078         	movff	_larghezza+1,___fldiv@b+1
  4631  0020C6  C1E0  F079         	movff	_larghezza+2,___fldiv@b+2
  4632  0020CA  C1E1  F07A         	movff	_larghezza+3,___fldiv@b+3
  4633  0020CE  ECB2  F01D         	call	___fldiv	;wreg free
  4634  0020D2  C077  F0A9         	movff	?___fldiv,___flneg@f1
  4635  0020D6  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  4636  0020DA  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  4637  0020DE  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  4638  0020E2  EC0C  F02F         	call	___flneg	;wreg free
  4639  0020E6  C0A9  F0B1         	movff	?___flneg,___fladd@a
  4640  0020EA  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  4641  0020EE  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  4642  0020F2  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  4643  0020F6  C1BE  F0AD         	movff	_matematica$3740,___fladd@b
  4644  0020FA  C1BF  F0AE         	movff	_matematica$3740+1,___fladd@b+1
  4645  0020FE  C1C0  F0AF         	movff	_matematica$3740+2,___fladd@b+2
  4646  002102  C1C1  F0B0         	movff	_matematica$3740+3,___fladd@b+3
  4647  002106  EC3D  F015         	call	___fladd	;wreg free
  4648  00210A  C0AD  F1C2         	movff	?___fladd,_matematica$3741
  4649  00210E  C0AE  F1C3         	movff	?___fladd+1,_matematica$3741+1
  4650  002112  C0AF  F1C4         	movff	?___fladd+2,_matematica$3741+2
  4651  002116  C0B0  F1C5         	movff	?___fladd+3,_matematica$3741+3
  4652                           
  4653                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4654  00211A  C1C2  F077         	movff	_matematica$3741,___fldiv@b
  4655  00211E  C1C3  F078         	movff	_matematica$3741+1,___fldiv@b+1
  4656  002122  C1C4  F079         	movff	_matematica$3741+2,___fldiv@b+2
  4657  002126  C1C5  F07A         	movff	_matematica$3741+3,___fldiv@b+3
  4658  00212A  0E00               	movlw	0
  4659  00212C  0100               	movlb	0	; () banked
  4660  00212E  6F94               	movwf	___flmul@a& (0+255),b
  4661  002130  0E00               	movlw	0
  4662  002132  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4663  002134  0E00               	movlw	0
  4664  002136  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4665  002138  0E40               	movlw	64
  4666  00213A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4667  00213C  C1E4  F090         	movff	_raggio,___flmul@b
  4668  002140  C1E5  F091         	movff	_raggio+1,___flmul@b+1
  4669  002144  C1E6  F092         	movff	_raggio+2,___flmul@b+2
  4670  002148  C1E7  F093         	movff	_raggio+3,___flmul@b+3
  4671  00214C  EC91  F017         	call	___flmul	;wreg free
  4672  002150  C090  F07B         	movff	?___flmul,___fldiv@a
  4673  002154  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4674  002158  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4675  00215C  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4676  002160  ECB2  F01D         	call	___fldiv	;wreg free
  4677  002164  C077  F1C6         	movff	?___fldiv,_matematica$3742
  4678  002168  C078  F1C7         	movff	?___fldiv+1,_matematica$3742+1
  4679  00216C  C079  F1C8         	movff	?___fldiv+2,_matematica$3742+2
  4680  002170  C07A  F1C9         	movff	?___fldiv+3,_matematica$3742+3
  4681                           
  4682                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4683  002174  C1C6  F19A         	movff	_matematica$3742,asin@x
  4684  002178  C1C7  F19B         	movff	_matematica$3742+1,asin@x+1
  4685  00217C  C1C8  F19C         	movff	_matematica$3742+2,asin@x+2
  4686  002180  C1C9  F19D         	movff	_matematica$3742+3,asin@x+3
  4687  002184  ECED  F022         	call	_asin	;wreg free
  4688  002188  C19A  F11C         	movff	?_asin,_alfa
  4689  00218C  C19B  F11D         	movff	?_asin+1,_alfa+1
  4690  002190  C19C  F11E         	movff	?_asin+2,_alfa+2
  4691  002194  C19D  F11F         	movff	?_asin+3,_alfa+3
  4692                           
  4693                           ;parcheggio.c: 422: alfa = alfa / 3.14159265358979323846 * 180;
  4694  002198  0EDB               	movlw	219
  4695  00219A  0100               	movlb	0	; () banked
  4696  00219C  6F7B               	movwf	___fldiv@a& (0+255),b
  4697  00219E  0E0F               	movlw	15
  4698  0021A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4699  0021A2  0E49               	movlw	73
  4700  0021A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4701  0021A6  0E40               	movlw	64
  4702  0021A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4703  0021AA  C11C  F077         	movff	_alfa,___fldiv@b
  4704  0021AE  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  4705  0021B2  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  4706  0021B6  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  4707  0021BA  ECB2  F01D         	call	___fldiv	;wreg free
  4708  0021BE  C077  F090         	movff	?___fldiv,___flmul@b
  4709  0021C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4710  0021C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4711  0021CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4712  0021CE  0E00               	movlw	0
  4713  0021D0  0100               	movlb	0	; () banked
  4714  0021D2  6F94               	movwf	___flmul@a& (0+255),b
  4715  0021D4  0E00               	movlw	0
  4716  0021D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4717  0021D8  0E34               	movlw	52
  4718  0021DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4719  0021DC  0E43               	movlw	67
  4720  0021DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4721  0021E0  EC91  F017         	call	___flmul	;wreg free
  4722  0021E4  C090  F11C         	movff	?___flmul,_alfa
  4723  0021E8  C091  F11D         	movff	?___flmul+1,_alfa+1
  4724  0021EC  C092  F11E         	movff	?___flmul+2,_alfa+2
  4725  0021F0  C093  F11F         	movff	?___flmul+3,_alfa+3
  4726                           
  4727                           ;parcheggio.c: 423: beta = 90 - alfa;
  4728  0021F4  C11C  F0A9         	movff	_alfa,___flneg@f1
  4729  0021F8  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  4730  0021FC  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  4731  002200  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  4732  002204  EC0C  F02F         	call	___flneg	;wreg free
  4733  002208  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4734  00220C  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4735  002210  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4736  002214  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4737  002218  0E00               	movlw	0
  4738  00221A  0100               	movlb	0	; () banked
  4739  00221C  6FB1               	movwf	___fladd@a& (0+255),b
  4740  00221E  0E00               	movlw	0
  4741  002220  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4742  002222  0EB4               	movlw	180
  4743  002224  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4744  002226  0E42               	movlw	66
  4745  002228  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4746  00222A  EC3D  F015         	call	___fladd	;wreg free
  4747  00222E  C0AD  F120         	movff	?___fladd,_beta
  4748  002232  C0AE  F121         	movff	?___fladd+1,_beta+1
  4749  002236  C0AF  F122         	movff	?___fladd+2,_beta+2
  4750  00223A  C0B0  F123         	movff	?___fladd+3,_beta+3
  4751                           
  4752                           ;parcheggio.c: 424: alfa = (alfa*3.14159265358979323846)/180;
  4753  00223E  0EDB               	movlw	219
  4754  002240  0100               	movlb	0	; () banked
  4755  002242  6F94               	movwf	___flmul@a& (0+255),b
  4756  002244  0E0F               	movlw	15
  4757  002246  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4758  002248  0E49               	movlw	73
  4759  00224A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4760  00224C  0E40               	movlw	64
  4761  00224E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4762  002250  C11C  F090         	movff	_alfa,___flmul@b
  4763  002254  C11D  F091         	movff	_alfa+1,___flmul@b+1
  4764  002258  C11E  F092         	movff	_alfa+2,___flmul@b+2
  4765  00225C  C11F  F093         	movff	_alfa+3,___flmul@b+3
  4766  002260  EC91  F017         	call	___flmul	;wreg free
  4767  002264  C090  F077         	movff	?___flmul,___fldiv@b
  4768  002268  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4769  00226C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4770  002270  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4771  002274  0E00               	movlw	0
  4772  002276  0100               	movlb	0	; () banked
  4773  002278  6F7B               	movwf	___fldiv@a& (0+255),b
  4774  00227A  0E00               	movlw	0
  4775  00227C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4776  00227E  0E34               	movlw	52
  4777  002280  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4778  002282  0E43               	movlw	67
  4779  002284  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4780  002286  ECB2  F01D         	call	___fldiv	;wreg free
  4781  00228A  C077  F11C         	movff	?___fldiv,_alfa
  4782  00228E  C078  F11D         	movff	?___fldiv+1,_alfa+1
  4783  002292  C079  F11E         	movff	?___fldiv+2,_alfa+2
  4784  002296  C07A  F11F         	movff	?___fldiv+3,_alfa+3
  4785                           
  4786                           ;parcheggio.c: 425: n = cos(alfa);
  4787  00229A  C11C  F1B2         	movff	_alfa,cos@f
  4788  00229E  C11D  F1B3         	movff	_alfa+1,cos@f+1
  4789  0022A2  C11E  F1B4         	movff	_alfa+2,cos@f+2
  4790  0022A6  C11F  F1B5         	movff	_alfa+3,cos@f+3
  4791  0022AA  EC8C  F02C         	call	_cos	;wreg free
  4792  0022AE  C1B2  F130         	movff	?_cos,_n
  4793  0022B2  C1B3  F131         	movff	?_cos+1,_n+1
  4794  0022B6  C1B4  F132         	movff	?_cos+2,_n+2
  4795  0022BA  C1B5  F133         	movff	?_cos+3,_n+3
  4796                           
  4797                           ;parcheggio.c: 426: n = 2 * raggio *n;
  4798  0022BE  C130  F094         	movff	_n,___flmul@a
  4799  0022C2  C131  F095         	movff	_n+1,___flmul@a+1
  4800  0022C6  C132  F096         	movff	_n+2,___flmul@a+2
  4801  0022CA  C133  F097         	movff	_n+3,___flmul@a+3
  4802  0022CE  C1E4  F090         	movff	_raggio,___flmul@b
  4803  0022D2  C1E5  F091         	movff	_raggio+1,___flmul@b+1
  4804  0022D6  C1E6  F092         	movff	_raggio+2,___flmul@b+2
  4805  0022DA  C1E7  F093         	movff	_raggio+3,___flmul@b+3
  4806  0022DE  EC91  F017         	call	___flmul	;wreg free
  4807  0022E2  C090  F1D2         	movff	?___flmul,_matematica$3743
  4808  0022E6  C091  F1D3         	movff	?___flmul+1,_matematica$3743+1
  4809  0022EA  C092  F1D4         	movff	?___flmul+2,_matematica$3743+2
  4810  0022EE  C093  F1D5         	movff	?___flmul+3,_matematica$3743+3
  4811                           
  4812                           ;parcheggio.c: 426: n = 2 * raggio *n;
  4813  0022F2  C1D2  F090         	movff	_matematica$3743,___flmul@b
  4814  0022F6  C1D3  F091         	movff	_matematica$3743+1,___flmul@b+1
  4815  0022FA  C1D4  F092         	movff	_matematica$3743+2,___flmul@b+2
  4816  0022FE  C1D5  F093         	movff	_matematica$3743+3,___flmul@b+3
  4817  002302  0E00               	movlw	0
  4818  002304  0100               	movlb	0	; () banked
  4819  002306  6F94               	movwf	___flmul@a& (0+255),b
  4820  002308  0E00               	movlw	0
  4821  00230A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4822  00230C  0E00               	movlw	0
  4823  00230E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4824  002310  0E40               	movlw	64
  4825  002312  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4826  002314  EC91  F017         	call	___flmul	;wreg free
  4827  002318  C090  F130         	movff	?___flmul,_n
  4828  00231C  C091  F131         	movff	?___flmul+1,_n+1
  4829  002320  C092  F132         	movff	?___flmul+2,_n+2
  4830  002324  C093  F133         	movff	?___flmul+3,_n+3
  4831                           
  4832                           ;parcheggio.c: 427: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4833  002328  C120  F094         	movff	_beta,___flmul@a
  4834  00232C  C121  F095         	movff	_beta+1,___flmul@a+1
  4835  002330  C122  F096         	movff	_beta+2,___flmul@a+2
  4836  002334  C123  F097         	movff	_beta+3,___flmul@a+3
  4837  002338  C1E4  F090         	movff	_raggio,___flmul@b
  4838  00233C  C1E5  F091         	movff	_raggio+1,___flmul@b+1
  4839  002340  C1E6  F092         	movff	_raggio+2,___flmul@b+2
  4840  002344  C1E7  F093         	movff	_raggio+3,___flmul@b+3
  4841  002348  EC91  F017         	call	___flmul	;wreg free
  4842  00234C  C090  F1D2         	movff	?___flmul,_matematica$3743
  4843  002350  C091  F1D3         	movff	?___flmul+1,_matematica$3743+1
  4844  002354  C092  F1D4         	movff	?___flmul+2,_matematica$3743+2
  4845  002358  C093  F1D5         	movff	?___flmul+3,_matematica$3743+3
  4846                           
  4847                           ;parcheggio.c: 427: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4848  00235C  0EDB               	movlw	219
  4849  00235E  0100               	movlb	0	; () banked
  4850  002360  6F94               	movwf	___flmul@a& (0+255),b
  4851  002362  0E0F               	movlw	15
  4852  002364  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4853  002366  0EC9               	movlw	201
  4854  002368  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4855  00236A  0E40               	movlw	64
  4856  00236C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4857  00236E  C1D2  F090         	movff	_matematica$3743,___flmul@b
  4858  002372  C1D3  F091         	movff	_matematica$3743+1,___flmul@b+1
  4859  002376  C1D4  F092         	movff	_matematica$3743+2,___flmul@b+2
  4860  00237A  C1D5  F093         	movff	_matematica$3743+3,___flmul@b+3
  4861  00237E  EC91  F017         	call	___flmul	;wreg free
  4862  002382  C090  F077         	movff	?___flmul,___fldiv@b
  4863  002386  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4864  00238A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4865  00238E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4866  002392  0E00               	movlw	0
  4867  002394  0100               	movlb	0	; () banked
  4868  002396  6F7B               	movwf	___fldiv@a& (0+255),b
  4869  002398  0E00               	movlw	0
  4870  00239A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4871  00239C  0EB4               	movlw	180
  4872  00239E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4873  0023A0  0E43               	movlw	67
  4874  0023A2  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4875  0023A4  ECB2  F01D         	call	___fldiv	;wreg free
  4876  0023A8  C077  F138         	movff	?___fldiv,_prima_sterzata
  4877  0023AC  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  4878  0023B0  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  4879  0023B4  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  4880                           
  4881                           ;parcheggio.c: 428: kkk = raggio + (2 * larghezza / 3);
  4882  0023B8  0E00               	movlw	0
  4883  0023BA  0100               	movlb	0	; () banked
  4884  0023BC  6F7B               	movwf	___fldiv@a& (0+255),b
  4885  0023BE  0E00               	movlw	0
  4886  0023C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4887  0023C2  0E40               	movlw	64
  4888  0023C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4889  0023C6  0E40               	movlw	64
  4890  0023C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4891  0023CA  0E00               	movlw	0
  4892  0023CC  0100               	movlb	0	; () banked
  4893  0023CE  6F94               	movwf	___flmul@a& (0+255),b
  4894  0023D0  0E00               	movlw	0
  4895  0023D2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4896  0023D4  0E00               	movlw	0
  4897  0023D6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4898  0023D8  0E40               	movlw	64
  4899  0023DA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4900  0023DC  C1DE  F090         	movff	_larghezza,___flmul@b
  4901  0023E0  C1DF  F091         	movff	_larghezza+1,___flmul@b+1
  4902  0023E4  C1E0  F092         	movff	_larghezza+2,___flmul@b+2
  4903  0023E8  C1E1  F093         	movff	_larghezza+3,___flmul@b+3
  4904  0023EC  EC91  F017         	call	___flmul	;wreg free
  4905  0023F0  C090  F077         	movff	?___flmul,___fldiv@b
  4906  0023F4  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4907  0023F8  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4908  0023FC  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4909  002400  ECB2  F01D         	call	___fldiv	;wreg free
  4910  002404  C077  F0AD         	movff	?___fldiv,___fladd@b
  4911  002408  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  4912  00240C  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  4913  002410  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  4914  002414  C1E4  F0B1         	movff	_raggio,___fladd@a
  4915  002418  C1E5  F0B2         	movff	_raggio+1,___fladd@a+1
  4916  00241C  C1E6  F0B3         	movff	_raggio+2,___fladd@a+2
  4917  002420  C1E7  F0B4         	movff	_raggio+3,___fladd@a+3
  4918  002424  EC3D  F015         	call	___fladd	;wreg free
  4919  002428  C0AD  F12C         	movff	?___fladd,_kkk
  4920  00242C  C0AE  F12D         	movff	?___fladd+1,_kkk+1
  4921  002430  C0AF  F12E         	movff	?___fladd+2,_kkk+2
  4922  002434  C0B0  F12F         	movff	?___fladd+3,_kkk+3
  4923                           
  4924                           ;parcheggio.c: 429: jjj = raggio - (2 * larghezza / 3);
  4925  002438  0E00               	movlw	0
  4926  00243A  0100               	movlb	0	; () banked
  4927  00243C  6F7B               	movwf	___fldiv@a& (0+255),b
  4928  00243E  0E00               	movlw	0
  4929  002440  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4930  002442  0E40               	movlw	64
  4931  002444  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4932  002446  0E40               	movlw	64
  4933  002448  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4934  00244A  0E00               	movlw	0
  4935  00244C  0100               	movlb	0	; () banked
  4936  00244E  6F94               	movwf	___flmul@a& (0+255),b
  4937  002450  0E00               	movlw	0
  4938  002452  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4939  002454  0E00               	movlw	0
  4940  002456  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4941  002458  0E40               	movlw	64
  4942  00245A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4943  00245C  C1DE  F090         	movff	_larghezza,___flmul@b
  4944  002460  C1DF  F091         	movff	_larghezza+1,___flmul@b+1
  4945  002464  C1E0  F092         	movff	_larghezza+2,___flmul@b+2
  4946  002468  C1E1  F093         	movff	_larghezza+3,___flmul@b+3
  4947  00246C  EC91  F017         	call	___flmul	;wreg free
  4948  002470  C090  F077         	movff	?___flmul,___fldiv@b
  4949  002474  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4950  002478  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4951  00247C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4952  002480  ECB2  F01D         	call	___fldiv	;wreg free
  4953  002484  C077  F0A9         	movff	?___fldiv,___flneg@f1
  4954  002488  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  4955  00248C  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  4956  002490  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  4957  002494  EC0C  F02F         	call	___flneg	;wreg free
  4958  002498  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4959  00249C  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4960  0024A0  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4961  0024A4  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4962  0024A8  C1E4  F0B1         	movff	_raggio,___fladd@a
  4963  0024AC  C1E5  F0B2         	movff	_raggio+1,___fladd@a+1
  4964  0024B0  C1E6  F0B3         	movff	_raggio+2,___fladd@a+2
  4965  0024B4  C1E7  F0B4         	movff	_raggio+3,___fladd@a+3
  4966  0024B8  EC3D  F015         	call	___fladd	;wreg free
  4967  0024BC  C0AD  F128         	movff	?___fladd,_jjj
  4968  0024C0  C0AE  F129         	movff	?___fladd+1,_jjj+1
  4969  0024C4  C0AF  F12A         	movff	?___fladd+2,_jjj+2
  4970  0024C8  C0B0  F12B         	movff	?___fladd+3,_jjj+3
  4971                           
  4972                           ;parcheggio.c: 430: Pminimo = kkk * cos(asin((jjj / kkk)));
  4973  0024CC  C12C  F07B         	movff	_kkk,___fldiv@a
  4974  0024D0  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  4975  0024D4  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  4976  0024D8  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  4977  0024DC  C128  F077         	movff	_jjj,___fldiv@b
  4978  0024E0  C129  F078         	movff	_jjj+1,___fldiv@b+1
  4979  0024E4  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  4980  0024E8  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  4981  0024EC  ECB2  F01D         	call	___fldiv	;wreg free
  4982  0024F0  C077  F1CA         	movff	?___fldiv,_matematica$3744
  4983  0024F4  C078  F1CB         	movff	?___fldiv+1,_matematica$3744+1
  4984  0024F8  C079  F1CC         	movff	?___fldiv+2,_matematica$3744+2
  4985  0024FC  C07A  F1CD         	movff	?___fldiv+3,_matematica$3744+3
  4986                           
  4987                           ;parcheggio.c: 430: Pminimo = kkk * cos(asin((jjj / kkk)));
  4988  002500  C1CA  F19A         	movff	_matematica$3744,asin@x
  4989  002504  C1CB  F19B         	movff	_matematica$3744+1,asin@x+1
  4990  002508  C1CC  F19C         	movff	_matematica$3744+2,asin@x+2
  4991  00250C  C1CD  F19D         	movff	_matematica$3744+3,asin@x+3
  4992  002510  ECED  F022         	call	_asin	;wreg free
  4993  002514  C19A  F1B2         	movff	?_asin,cos@f
  4994  002518  C19B  F1B3         	movff	?_asin+1,cos@f+1
  4995  00251C  C19C  F1B4         	movff	?_asin+2,cos@f+2
  4996  002520  C19D  F1B5         	movff	?_asin+3,cos@f+3
  4997  002524  EC8C  F02C         	call	_cos	;wreg free
  4998  002528  C1B2  F1CE         	movff	?_cos,_matematica$3745
  4999  00252C  C1B3  F1CF         	movff	?_cos+1,_matematica$3745+1
  5000  002530  C1B4  F1D0         	movff	?_cos+2,_matematica$3745+2
  5001  002534  C1B5  F1D1         	movff	?_cos+3,_matematica$3745+3
  5002                           
  5003                           ;parcheggio.c: 430: Pminimo = kkk * cos(asin((jjj / kkk)));
  5004  002538  C1CE  F090         	movff	_matematica$3745,___flmul@b
  5005  00253C  C1CF  F091         	movff	_matematica$3745+1,___flmul@b+1
  5006  002540  C1D0  F092         	movff	_matematica$3745+2,___flmul@b+2
  5007  002544  C1D1  F093         	movff	_matematica$3745+3,___flmul@b+3
  5008  002548  C12C  F094         	movff	_kkk,___flmul@a
  5009  00254C  C12D  F095         	movff	_kkk+1,___flmul@a+1
  5010  002550  C12E  F096         	movff	_kkk+2,___flmul@a+2
  5011  002554  C12F  F097         	movff	_kkk+3,___flmul@a+3
  5012  002558  EC91  F017         	call	___flmul	;wreg free
  5013  00255C  C090  F118         	movff	?___flmul,_Pminimo
  5014  002560  C091  F119         	movff	?___flmul+1,_Pminimo+1
  5015  002564  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  5016  002568  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  5017  00256C  0012               	return		;funcret
  5018  00256E                     __end_of_matematica:
  5019                           	opt stack 0
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           postinc0	equ	0xFEE
  5025                           wreg	equ	0xFE8
  5026                           postdec1	equ	0xFE5
  5027                           fsr1l	equ	0xFE1
  5028                           indf2	equ	0xFDF
  5029                           postinc2	equ	0xFDE
  5030                           postdec2	equ	0xFDD
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8
  5034                           
  5035 ;; *************** function _cos *****************
  5036 ;; Defined at:
  5037 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  f               4   41[BANK1 ] int 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  4   41[BANK1 ] int 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5051 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;Total ram usage:        8 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    7
  5058 ;; This function calls:
  5059 ;;		___fladd
  5060 ;;		___flge
  5061 ;;		_sin
  5062 ;; This function is called by:
  5063 ;;		_matematica
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text9
  5068  005918                     __ptext9:
  5069                           	opt stack 0
  5070  005918                     _cos:
  5071                           	opt stack 21
  5072                           
  5073                           ;incstack = 0
  5074  005918  0EDB               	movlw	219
  5075  00591A  0100               	movlb	0	; () banked
  5076  00591C  6FB1               	movwf	___flge@ff1& (0+255),b
  5077  00591E  0E0F               	movlw	15
  5078  005920  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5079  005922  0E49               	movlw	73
  5080  005924  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5081  005926  0E40               	movlw	64
  5082  005928  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5083  00592A  C1B2  F0B5         	movff	cos@f,___flge@ff2
  5084  00592E  C1B3  F0B6         	movff	cos@f+1,___flge@ff2+1
  5085  005932  C1B4  F0B7         	movff	cos@f+2,___flge@ff2+2
  5086  005936  C1B5  F0B8         	movff	cos@f+3,___flge@ff2+3
  5087  00593A  EC85  F029         	call	___flge	;wreg free
  5088  00593E  0100               	movlb	0	; () banked
  5089  005940  B0D8               	btfsc	status,0,c
  5090  005942  D02E               	goto	l7254
  5091                           
  5092                           ; BSR set to: 0
  5093  005944  C1B2  F0AD         	movff	cos@f,___fladd@b
  5094  005948  C1B3  F0AE         	movff	cos@f+1,___fladd@b+1
  5095  00594C  C1B4  F0AF         	movff	cos@f+2,___fladd@b+2
  5096  005950  C1B5  F0B0         	movff	cos@f+3,___fladd@b+3
  5097  005954  0EE4               	movlw	228
  5098  005956  0100               	movlb	0	; () banked
  5099  005958  6FB1               	movwf	___fladd@a& (0+255),b
  5100  00595A  0ECB               	movlw	203
  5101  00595C  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5102  00595E  0E96               	movlw	150
  5103  005960  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5104  005962  0EC0               	movlw	192
  5105  005964  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5106  005966  EC3D  F015         	call	___fladd	;wreg free
  5107  00596A  C0AD  F1B6         	movff	?___fladd,_cos$3749
  5108  00596E  C0AE  F1B7         	movff	?___fladd+1,_cos$3749+1
  5109  005972  C0AF  F1B8         	movff	?___fladd+2,_cos$3749+2
  5110  005976  C0B0  F1B9         	movff	?___fladd+3,_cos$3749+3
  5111  00597A  C1B6  F0D3         	movff	_cos$3749,sin@f
  5112  00597E  C1B7  F0D4         	movff	_cos$3749+1,sin@f+1
  5113  005982  C1B8  F0D5         	movff	_cos$3749+2,sin@f+2
  5114  005986  C1B9  F0D6         	movff	_cos$3749+3,sin@f+3
  5115  00598A  EC61  F021         	call	_sin	;wreg free
  5116  00598E  C0D3  F1B2         	movff	?_sin,?_cos
  5117  005992  C0D4  F1B3         	movff	?_sin+1,?_cos+1
  5118  005996  C0D5  F1B4         	movff	?_sin+2,?_cos+2
  5119  00599A  C0D6  F1B5         	movff	?_sin+3,?_cos+3
  5120  00599E  0012               	return	
  5121  0059A0                     l7254:
  5122  0059A0  C1B2  F0AD         	movff	cos@f,___fladd@b
  5123  0059A4  C1B3  F0AE         	movff	cos@f+1,___fladd@b+1
  5124  0059A8  C1B4  F0AF         	movff	cos@f+2,___fladd@b+2
  5125  0059AC  C1B5  F0B0         	movff	cos@f+3,___fladd@b+3
  5126  0059B0  0EDB               	movlw	219
  5127  0059B2  0100               	movlb	0	; () banked
  5128  0059B4  6FB1               	movwf	___fladd@a& (0+255),b
  5129  0059B6  0E0F               	movlw	15
  5130  0059B8  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5131  0059BA  0EC9               	movlw	201
  5132  0059BC  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5133  0059BE  0E3F               	movlw	63
  5134  0059C0  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5135  0059C2  EC3D  F015         	call	___fladd	;wreg free
  5136  0059C6  C0AD  F1B6         	movff	?___fladd,_cos$3749
  5137  0059CA  C0AE  F1B7         	movff	?___fladd+1,_cos$3749+1
  5138  0059CE  C0AF  F1B8         	movff	?___fladd+2,_cos$3749+2
  5139  0059D2  C0B0  F1B9         	movff	?___fladd+3,_cos$3749+3
  5140  0059D6  C1B6  F0D3         	movff	_cos$3749,sin@f
  5141  0059DA  C1B7  F0D4         	movff	_cos$3749+1,sin@f+1
  5142  0059DE  C1B8  F0D5         	movff	_cos$3749+2,sin@f+2
  5143  0059E2  C1B9  F0D6         	movff	_cos$3749+3,sin@f+3
  5144  0059E6  EC61  F021         	call	_sin	;wreg free
  5145  0059EA  C0D3  F1B2         	movff	?_sin,?_cos
  5146  0059EE  C0D4  F1B3         	movff	?_sin+1,?_cos+1
  5147  0059F2  C0D5  F1B4         	movff	?_sin+2,?_cos+2
  5148  0059F6  C0D6  F1B5         	movff	?_sin+3,?_cos+3
  5149  0059FA  0012               	return	
  5150  0059FC                     __end_of_cos:
  5151                           	opt stack 0
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           postinc0	equ	0xFEE
  5157                           wreg	equ	0xFE8
  5158                           postdec1	equ	0xFE5
  5159                           fsr1l	equ	0xFE1
  5160                           indf2	equ	0xFDF
  5161                           postinc2	equ	0xFDE
  5162                           postdec2	equ	0xFDD
  5163                           fsr2h	equ	0xFDA
  5164                           fsr2l	equ	0xFD9
  5165                           status	equ	0xFD8
  5166                           
  5167 ;; *************** function _sin *****************
  5168 ;; Defined at:
  5169 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  f               4  115[BANK0 ] int 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  x2              4    8[BANK1 ] int 
  5174 ;;  y               4    0[BANK1 ] int 
  5175 ;;  sgn             1   12[BANK1 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  4  115[BANK0 ] unsigned char 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Totals:         0       4      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;Total ram usage:       17 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    6
  5192 ;; This function calls:
  5193 ;;		___fladd
  5194 ;;		___fldiv
  5195 ;;		___flge
  5196 ;;		___flmul
  5197 ;;		___flneg
  5198 ;;		___flsub
  5199 ;;		_eval_poly
  5200 ;;		_floor
  5201 ;; This function is called by:
  5202 ;;		_cos
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text10
  5207  0042C2                     __ptext10:
  5208                           	opt stack 0
  5209  0042C2                     _sin:
  5210                           	opt stack 21
  5211                           
  5212                           ;incstack = 0
  5213  0042C2  0E00               	movlw	0
  5214  0042C4  0101               	movlb	1	; () banked
  5215  0042C6  6F95               	movwf	sin@sgn& (0+255),b
  5216                           
  5217                           ; BSR set to: 1
  5218  0042C8  0100               	movlb	0	; () banked
  5219  0042CA  AFD6               	btfss	(sin@f+3)& (0+255),7,b
  5220  0042CC  D015               	goto	l7136
  5221                           
  5222                           ; BSR set to: 0
  5223  0042CE  C0D3  F0A9         	movff	sin@f,___flneg@f1
  5224  0042D2  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  5225  0042D6  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  5226  0042DA  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  5227  0042DE  EC0C  F02F         	call	___flneg	;wreg free
  5228  0042E2  C0A9  F0D3         	movff	?___flneg,sin@f
  5229  0042E6  C0AA  F0D4         	movff	?___flneg+1,sin@f+1
  5230  0042EA  C0AB  F0D5         	movff	?___flneg+2,sin@f+2
  5231  0042EE  C0AC  F0D6         	movff	?___flneg+3,sin@f+3
  5232  0042F2  0E01               	movlw	1
  5233  0042F4  0101               	movlb	1	; () banked
  5234  0042F6  6F95               	movwf	sin@sgn& (0+255),b
  5235  0042F8                     l7136:
  5236  0042F8  C0D3  F090         	movff	sin@f,___flmul@b
  5237  0042FC  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5238  004300  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5239  004304  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5240  004308  0E83               	movlw	131
  5241  00430A  0100               	movlb	0	; () banked
  5242  00430C  6F94               	movwf	___flmul@a& (0+255),b
  5243  00430E  0EF9               	movlw	249
  5244  004310  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5245  004312  0E22               	movlw	34
  5246  004314  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5247  004316  0E3E               	movlw	62
  5248  004318  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5249  00431A  EC91  F017         	call	___flmul	;wreg free
  5250  00431E  C090  F0D3         	movff	?___flmul,sin@f
  5251  004322  C091  F0D4         	movff	?___flmul+1,sin@f+1
  5252  004326  C092  F0D5         	movff	?___flmul+2,sin@f+2
  5253  00432A  C093  F0D6         	movff	?___flmul+3,sin@f+3
  5254  00432E  C0D3  F0CB         	movff	sin@f,___flsub@b
  5255  004332  C0D4  F0CC         	movff	sin@f+1,___flsub@b+1
  5256  004336  C0D5  F0CD         	movff	sin@f+2,___flsub@b+2
  5257  00433A  C0D6  F0CE         	movff	sin@f+3,___flsub@b+3
  5258  00433E  C0D3  F0C1         	movff	sin@f,floor@x
  5259  004342  C0D4  F0C2         	movff	sin@f+1,floor@x+1
  5260  004346  C0D5  F0C3         	movff	sin@f+2,floor@x+2
  5261  00434A  C0D6  F0C4         	movff	sin@f+3,floor@x+3
  5262  00434E  ECE8  F02A         	call	_floor	;wreg free
  5263  004352  C0C1  F0CF         	movff	?_floor,___flsub@a
  5264  004356  C0C2  F0D0         	movff	?_floor+1,___flsub@a+1
  5265  00435A  C0C3  F0D1         	movff	?_floor+2,___flsub@a+2
  5266  00435E  C0C4  F0D2         	movff	?_floor+3,___flsub@a+3
  5267  004362  ECAC  F02E         	call	___flsub	;wreg free
  5268  004366  C0CB  F0D3         	movff	?___flsub,sin@f
  5269  00436A  C0CC  F0D4         	movff	?___flsub+1,sin@f+1
  5270  00436E  C0CD  F0D5         	movff	?___flsub+2,sin@f+2
  5271  004372  C0CE  F0D6         	movff	?___flsub+3,sin@f+3
  5272  004376  C0D3  F090         	movff	sin@f,___flmul@b
  5273  00437A  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5274  00437E  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5275  004382  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5276  004386  0E00               	movlw	0
  5277  004388  0100               	movlb	0	; () banked
  5278  00438A  6F94               	movwf	___flmul@a& (0+255),b
  5279  00438C  0E00               	movlw	0
  5280  00438E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5281  004390  0E80               	movlw	128
  5282  004392  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5283  004394  0E40               	movlw	64
  5284  004396  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5285  004398  EC91  F017         	call	___flmul	;wreg free
  5286  00439C  C090  F0D3         	movff	?___flmul,sin@f
  5287  0043A0  C091  F0D4         	movff	?___flmul+1,sin@f+1
  5288  0043A4  C092  F0D5         	movff	?___flmul+2,sin@f+2
  5289  0043A8  C093  F0D6         	movff	?___flmul+3,sin@f+3
  5290  0043AC  0E00               	movlw	0
  5291  0043AE  0100               	movlb	0	; () banked
  5292  0043B0  6FB1               	movwf	___flge@ff1& (0+255),b
  5293  0043B2  0E00               	movlw	0
  5294  0043B4  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5295  0043B6  0E00               	movlw	0
  5296  0043B8  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5297  0043BA  0E40               	movlw	64
  5298  0043BC  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5299  0043BE  C0D3  F0B5         	movff	sin@f,___flge@ff2
  5300  0043C2  C0D4  F0B6         	movff	sin@f+1,___flge@ff2+1
  5301  0043C6  C0D5  F0B7         	movff	sin@f+2,___flge@ff2+2
  5302  0043CA  C0D6  F0B8         	movff	sin@f+3,___flge@ff2+3
  5303  0043CE  EC85  F029         	call	___flge	;wreg free
  5304  0043D2  0100               	movlb	0	; () banked
  5305  0043D4  B0D8               	btfsc	status,0,c
  5306  0043D6  D025               	goto	l7148
  5307                           
  5308                           ; BSR set to: 0
  5309  0043D8  C0D3  F0CB         	movff	sin@f,___flsub@b
  5310  0043DC  C0D4  F0CC         	movff	sin@f+1,___flsub@b+1
  5311  0043E0  C0D5  F0CD         	movff	sin@f+2,___flsub@b+2
  5312  0043E4  C0D6  F0CE         	movff	sin@f+3,___flsub@b+3
  5313  0043E8  0E00               	movlw	0
  5314  0043EA  0100               	movlb	0	; () banked
  5315  0043EC  6FCF               	movwf	___flsub@a& (0+255),b
  5316  0043EE  0E00               	movlw	0
  5317  0043F0  6FD0               	movwf	(___flsub@a+1)& (0+255),b
  5318  0043F2  0E00               	movlw	0
  5319  0043F4  6FD1               	movwf	(___flsub@a+2)& (0+255),b
  5320  0043F6  0E40               	movlw	64
  5321  0043F8  6FD2               	movwf	(___flsub@a+3)& (0+255),b
  5322  0043FA  ECAC  F02E         	call	___flsub	;wreg free
  5323  0043FE  C0CB  F0D3         	movff	?___flsub,sin@f
  5324  004402  C0CC  F0D4         	movff	?___flsub+1,sin@f+1
  5325  004406  C0CD  F0D5         	movff	?___flsub+2,sin@f+2
  5326  00440A  C0CE  F0D6         	movff	?___flsub+3,sin@f+3
  5327  00440E  0101               	movlb	1	; () banked
  5328  004410  5195               	movf	sin@sgn& (0+255),w,b
  5329  004412  0101               	movlb	1	; () banked
  5330  004414  A4D8               	btfss	status,2,c
  5331  004416  D002               	goto	u9100
  5332  004418  0E01               	movlw	1
  5333  00441A  D001               	goto	u9110
  5334  00441C                     u9100:
  5335  00441C  0E00               	movlw	0
  5336  00441E                     u9110:
  5337  00441E  0101               	movlb	1	; () banked
  5338  004420  6F95               	movwf	sin@sgn& (0+255),b
  5339  004422                     l7148:
  5340  004422  0E00               	movlw	0
  5341  004424  0100               	movlb	0	; () banked
  5342  004426  6FB1               	movwf	___flge@ff1& (0+255),b
  5343  004428  0E00               	movlw	0
  5344  00442A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5345  00442C  0E80               	movlw	128
  5346  00442E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5347  004430  0E3F               	movlw	63
  5348  004432  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5349  004434  C0D3  F0B5         	movff	sin@f,___flge@ff2
  5350  004438  C0D4  F0B6         	movff	sin@f+1,___flge@ff2+1
  5351  00443C  C0D5  F0B7         	movff	sin@f+2,___flge@ff2+2
  5352  004440  C0D6  F0B8         	movff	sin@f+3,___flge@ff2+3
  5353  004444  EC85  F029         	call	___flge	;wreg free
  5354  004448  0100               	movlb	0	; () banked
  5355  00444A  B0D8               	btfsc	status,0,c
  5356  00444C  D025               	goto	l7152
  5357                           
  5358                           ; BSR set to: 0
  5359  00444E  C0D3  F0A9         	movff	sin@f,___flneg@f1
  5360  004452  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  5361  004456  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  5362  00445A  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  5363  00445E  EC0C  F02F         	call	___flneg	;wreg free
  5364  004462  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5365  004466  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5366  00446A  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5367  00446E  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5368  004472  0E00               	movlw	0
  5369  004474  0100               	movlb	0	; () banked
  5370  004476  6FB1               	movwf	___fladd@a& (0+255),b
  5371  004478  0E00               	movlw	0
  5372  00447A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5373  00447C  0E00               	movlw	0
  5374  00447E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5375  004480  0E40               	movlw	64
  5376  004482  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5377  004484  EC3D  F015         	call	___fladd	;wreg free
  5378  004488  C0AD  F0D3         	movff	?___fladd,sin@f
  5379  00448C  C0AE  F0D4         	movff	?___fladd+1,sin@f+1
  5380  004490  C0AF  F0D5         	movff	?___fladd+2,sin@f+2
  5381  004494  C0B0  F0D6         	movff	?___fladd+3,sin@f+3
  5382  004498                     l7152:
  5383  004498  C0D3  F090         	movff	sin@f,___flmul@b
  5384  00449C  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5385  0044A0  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5386  0044A4  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5387  0044A8  C0D3  F094         	movff	sin@f,___flmul@a
  5388  0044AC  C0D4  F095         	movff	sin@f+1,___flmul@a+1
  5389  0044B0  C0D5  F096         	movff	sin@f+2,___flmul@a+2
  5390  0044B4  C0D6  F097         	movff	sin@f+3,___flmul@a+3
  5391  0044B8  EC91  F017         	call	___flmul	;wreg free
  5392  0044BC  C090  F191         	movff	?___flmul,sin@x2
  5393  0044C0  C091  F192         	movff	?___flmul+1,sin@x2+1
  5394  0044C4  C092  F193         	movff	?___flmul+2,sin@x2+2
  5395  0044C8  C093  F194         	movff	?___flmul+3,sin@x2+3
  5396  0044CC  C191  F0C1         	movff	sin@x2,eval_poly@x
  5397  0044D0  C192  F0C2         	movff	sin@x2+1,eval_poly@x+1
  5398  0044D4  C193  F0C3         	movff	sin@x2+2,eval_poly@x+2
  5399  0044D8  C194  F0C4         	movff	sin@x2+3,eval_poly@x+3
  5400  0044DC  0E41               	movlw	low sin@coeff_b
  5401  0044DE  0100               	movlb	0	; () banked
  5402  0044E0  6FC5               	movwf	eval_poly@d& (0+255),b
  5403  0044E2  0E0D               	movlw	high sin@coeff_b
  5404  0044E4  0100               	movlb	0	; () banked
  5405  0044E6  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5406  0044E8  0E00               	movlw	0
  5407  0044EA  0100               	movlb	0	; () banked
  5408  0044EC  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5409  0044EE  0E03               	movlw	3
  5410  0044F0  6FC7               	movwf	eval_poly@n& (0+255),b
  5411  0044F2  EC7A  F02B         	call	_eval_poly	;wreg free
  5412  0044F6  C0C1  F189         	movff	?_eval_poly,sin@y
  5413  0044FA  C0C2  F18A         	movff	?_eval_poly+1,sin@y+1
  5414  0044FE  C0C3  F18B         	movff	?_eval_poly+2,sin@y+2
  5415  004502  C0C4  F18C         	movff	?_eval_poly+3,sin@y+3
  5416  004506  C189  F07B         	movff	sin@y,___fldiv@a
  5417  00450A  C18A  F07C         	movff	sin@y+1,___fldiv@a+1
  5418  00450E  C18B  F07D         	movff	sin@y+2,___fldiv@a+2
  5419  004512  C18C  F07E         	movff	sin@y+3,___fldiv@a+3
  5420  004516  0E00               	movlw	0
  5421  004518  0100               	movlb	0	; () banked
  5422  00451A  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5423  00451C  0E04               	movlw	4
  5424  00451E  6FC7               	movwf	eval_poly@n& (0+255),b
  5425  004520  0E2D               	movlw	low sin@coeff_a
  5426  004522  0100               	movlb	0	; () banked
  5427  004524  6FC5               	movwf	eval_poly@d& (0+255),b
  5428  004526  0E0D               	movlw	high sin@coeff_a
  5429  004528  0100               	movlb	0	; () banked
  5430  00452A  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5431  00452C  C191  F0C1         	movff	sin@x2,eval_poly@x
  5432  004530  C192  F0C2         	movff	sin@x2+1,eval_poly@x+1
  5433  004534  C193  F0C3         	movff	sin@x2+2,eval_poly@x+2
  5434  004538  C194  F0C4         	movff	sin@x2+3,eval_poly@x+3
  5435  00453C  EC7A  F02B         	call	_eval_poly	;wreg free
  5436  004540  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  5437  004544  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5438  004548  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5439  00454C  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5440  004550  ECB2  F01D         	call	___fldiv	;wreg free
  5441  004554  C077  F18D         	movff	?___fldiv,_sin$3750
  5442  004558  C078  F18E         	movff	?___fldiv+1,_sin$3750+1
  5443  00455C  C079  F18F         	movff	?___fldiv+2,_sin$3750+2
  5444  004560  C07A  F190         	movff	?___fldiv+3,_sin$3750+3
  5445  004564  C0D3  F090         	movff	sin@f,___flmul@b
  5446  004568  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5447  00456C  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5448  004570  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5449  004574  C18D  F094         	movff	_sin$3750,___flmul@a
  5450  004578  C18E  F095         	movff	_sin$3750+1,___flmul@a+1
  5451  00457C  C18F  F096         	movff	_sin$3750+2,___flmul@a+2
  5452  004580  C190  F097         	movff	_sin$3750+3,___flmul@a+3
  5453  004584  EC91  F017         	call	___flmul	;wreg free
  5454  004588  C090  F0D3         	movff	?___flmul,sin@f
  5455  00458C  C091  F0D4         	movff	?___flmul+1,sin@f+1
  5456  004590  C092  F0D5         	movff	?___flmul+2,sin@f+2
  5457  004594  C093  F0D6         	movff	?___flmul+3,sin@f+3
  5458  004598  0101               	movlb	1	; () banked
  5459  00459A  5195               	movf	sin@sgn& (0+255),w,b
  5460  00459C  0101               	movlb	1	; () banked
  5461  00459E  B4D8               	btfsc	status,2,c
  5462  0045A0  D013               	goto	l1295
  5463                           
  5464                           ; BSR set to: 1
  5465  0045A2  C0D3  F0A9         	movff	sin@f,___flneg@f1
  5466  0045A6  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  5467  0045AA  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  5468  0045AE  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  5469  0045B2  EC0C  F02F         	call	___flneg	;wreg free
  5470  0045B6  C0A9  F0D3         	movff	?___flneg,?_sin
  5471  0045BA  C0AA  F0D4         	movff	?___flneg+1,?_sin+1
  5472  0045BE  C0AB  F0D5         	movff	?___flneg+2,?_sin+2
  5473  0045C2  C0AC  F0D6         	movff	?___flneg+3,?_sin+3
  5474  0045C6  0012               	return	
  5475  0045C8                     l1295:
  5476                           
  5477                           ; BSR set to: 1
  5478  0045C8  C0D3  F0D3         	movff	sin@f,?_sin
  5479  0045CC  C0D4  F0D4         	movff	sin@f+1,?_sin+1
  5480  0045D0  C0D5  F0D5         	movff	sin@f+2,?_sin+2
  5481  0045D4  C0D6  F0D6         	movff	sin@f+3,?_sin+3
  5482  0045D8  0012               	return		;funcret
  5483  0045DA                     __end_of_sin:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           postinc0	equ	0xFEE
  5490                           wreg	equ	0xFE8
  5491                           postdec1	equ	0xFE5
  5492                           fsr1l	equ	0xFE1
  5493                           indf2	equ	0xFDF
  5494                           postinc2	equ	0xFDE
  5495                           postdec2	equ	0xFDD
  5496                           fsr2h	equ	0xFDA
  5497                           fsr2l	equ	0xFD9
  5498                           status	equ	0xFD8
  5499                           
  5500 ;; *************** function _floor *****************
  5501 ;; Defined at:
  5502 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  x               4   97[BANK0 ] unsigned char 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  i               4  101[BANK0 ] unsigned char 
  5507 ;;  expon           2  105[BANK0 ] int 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  4   97[BANK0 ] int 
  5510 ;; Registers used:
  5511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5517 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;Total ram usage:       10 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    5
  5524 ;; This function calls:
  5525 ;;		___fladd
  5526 ;;		___flge
  5527 ;;		___fltol
  5528 ;;		___xxtofl
  5529 ;;		_frexp
  5530 ;; This function is called by:
  5531 ;;		_sin
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text11
  5536  0055D0                     __ptext11:
  5537                           	opt stack 0
  5538  0055D0                     _floor:
  5539                           	opt stack 21
  5540                           
  5541                           ;incstack = 0
  5542  0055D0  C0C1  F077         	movff	floor@x,frexp@value
  5543  0055D4  C0C2  F078         	movff	floor@x+1,frexp@value+1
  5544  0055D8  C0C3  F079         	movff	floor@x+2,frexp@value+2
  5545  0055DC  C0C4  F07A         	movff	floor@x+3,frexp@value+3
  5546  0055E0  0EC9               	movlw	low floor@expon
  5547  0055E2  0100               	movlb	0	; () banked
  5548  0055E4  6F7B               	movwf	frexp@eptr& (0+255),b
  5549  0055E6  0E00               	movlw	high floor@expon
  5550  0055E8  0100               	movlb	0	; () banked
  5551  0055EA  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5552  0055EC  EC6E  F02D         	call	_frexp	;wreg free
  5553  0055F0  0100               	movlb	0	; () banked
  5554  0055F2  AFCA               	btfss	(floor@expon+1)& (0+255),7,b
  5555  0055F4  D017               	goto	l6742
  5556                           
  5557                           ; BSR set to: 0
  5558  0055F6  0100               	movlb	0	; () banked
  5559  0055F8  AFC4               	btfss	(floor@x+3)& (0+255),7,b
  5560  0055FA  D00A               	goto	l6738
  5561                           
  5562                           ; BSR set to: 0
  5563  0055FC  0E00               	movlw	0
  5564  0055FE  0100               	movlb	0	; () banked
  5565  005600  6FC1               	movwf	?_floor& (0+255),b
  5566  005602  0E00               	movlw	0
  5567  005604  6FC2               	movwf	(?_floor+1)& (0+255),b
  5568  005606  0E80               	movlw	128
  5569  005608  6FC3               	movwf	(?_floor+2)& (0+255),b
  5570  00560A  0EBF               	movlw	191
  5571  00560C  6FC4               	movwf	(?_floor+3)& (0+255),b
  5572                           
  5573                           ; BSR set to: 0
  5574  00560E  0012               	return	
  5575  005610                     l6738:
  5576                           
  5577                           ; BSR set to: 0
  5578  005610  0E00               	movlw	0
  5579  005612  0100               	movlb	0	; () banked
  5580  005614  6FC1               	movwf	?_floor& (0+255),b
  5581  005616  0E00               	movlw	0
  5582  005618  6FC2               	movwf	(?_floor+1)& (0+255),b
  5583  00561A  0E00               	movlw	0
  5584  00561C  6FC3               	movwf	(?_floor+2)& (0+255),b
  5585  00561E  0E00               	movlw	0
  5586  005620  6FC4               	movwf	(?_floor+3)& (0+255),b
  5587                           
  5588                           ; BSR set to: 0
  5589  005622  0012               	return	
  5590  005624                     l6742:
  5591                           
  5592                           ; BSR set to: 0
  5593  005624  0100               	movlb	0	; () banked
  5594  005626  51CA               	movf	(floor@expon+1)& (0+255),w,b
  5595  005628  E105               	bnz	u8470
  5596  00562A  0E1D               	movlw	29
  5597  00562C  0100               	movlb	0	; () banked
  5598  00562E  5DC9               	subwf	floor@expon& (0+255),w,b
  5599  005630  A0D8               	btfss	status,0,c
  5600  005632  D009               	goto	l6746
  5601  005634                     u8470:
  5602                           
  5603                           ; BSR set to: 0
  5604  005634  C0C1  F0C1         	movff	floor@x,?_floor
  5605  005638  C0C2  F0C2         	movff	floor@x+1,?_floor+1
  5606  00563C  C0C3  F0C3         	movff	floor@x+2,?_floor+2
  5607  005640  C0C4  F0C4         	movff	floor@x+3,?_floor+3
  5608  005644  0012               	return	
  5609  005646                     l6746:
  5610                           
  5611                           ; BSR set to: 0
  5612  005646  C0C1  F077         	movff	floor@x,___fltol@f1
  5613  00564A  C0C2  F078         	movff	floor@x+1,___fltol@f1+1
  5614  00564E  C0C3  F079         	movff	floor@x+2,___fltol@f1+2
  5615  005652  C0C4  F07A         	movff	floor@x+3,___fltol@f1+3
  5616  005656  EC06  F02C         	call	___fltol	;wreg free
  5617  00565A  C077  F085         	movff	?___fltol,___xxtofl@val
  5618  00565E  C078  F086         	movff	?___fltol+1,___xxtofl@val+1
  5619  005662  C079  F087         	movff	?___fltol+2,___xxtofl@val+2
  5620  005666  C07A  F088         	movff	?___fltol+3,___xxtofl@val+3
  5621  00566A  0E01               	movlw	1
  5622  00566C  ECE5  F026         	call	___xxtofl
  5623  005670  C085  F0C5         	movff	?___xxtofl,floor@i
  5624  005674  C086  F0C6         	movff	?___xxtofl+1,floor@i+1
  5625  005678  C087  F0C7         	movff	?___xxtofl+2,floor@i+2
  5626  00567C  C088  F0C8         	movff	?___xxtofl+3,floor@i+3
  5627  005680  C0C1  F0B1         	movff	floor@x,___flge@ff1
  5628  005684  C0C2  F0B2         	movff	floor@x+1,___flge@ff1+1
  5629  005688  C0C3  F0B3         	movff	floor@x+2,___flge@ff1+2
  5630  00568C  C0C4  F0B4         	movff	floor@x+3,___flge@ff1+3
  5631  005690  C0C5  F0B5         	movff	floor@i,___flge@ff2
  5632  005694  C0C6  F0B6         	movff	floor@i+1,___flge@ff2+1
  5633  005698  C0C7  F0B7         	movff	floor@i+2,___flge@ff2+2
  5634  00569C  C0C8  F0B8         	movff	floor@i+3,___flge@ff2+3
  5635  0056A0  EC85  F029         	call	___flge	;wreg free
  5636  0056A4  0100               	movlb	0	; () banked
  5637  0056A6  B0D8               	btfsc	status,0,c
  5638  0056A8  D01C               	goto	l1464
  5639                           
  5640                           ; BSR set to: 0
  5641  0056AA  C0C5  F0AD         	movff	floor@i,___fladd@b
  5642  0056AE  C0C6  F0AE         	movff	floor@i+1,___fladd@b+1
  5643  0056B2  C0C7  F0AF         	movff	floor@i+2,___fladd@b+2
  5644  0056B6  C0C8  F0B0         	movff	floor@i+3,___fladd@b+3
  5645  0056BA  0E00               	movlw	0
  5646  0056BC  0100               	movlb	0	; () banked
  5647  0056BE  6FB1               	movwf	___fladd@a& (0+255),b
  5648  0056C0  0E00               	movlw	0
  5649  0056C2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5650  0056C4  0E80               	movlw	128
  5651  0056C6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5652  0056C8  0EBF               	movlw	191
  5653  0056CA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5654  0056CC  EC3D  F015         	call	___fladd	;wreg free
  5655  0056D0  C0AD  F0C1         	movff	?___fladd,?_floor
  5656  0056D4  C0AE  F0C2         	movff	?___fladd+1,?_floor+1
  5657  0056D8  C0AF  F0C3         	movff	?___fladd+2,?_floor+2
  5658  0056DC  C0B0  F0C4         	movff	?___fladd+3,?_floor+3
  5659  0056E0  0012               	return	
  5660  0056E2                     l1464:
  5661                           
  5662                           ; BSR set to: 0
  5663  0056E2  C0C5  F0C1         	movff	floor@i,?_floor
  5664  0056E6  C0C6  F0C2         	movff	floor@i+1,?_floor+1
  5665  0056EA  C0C7  F0C3         	movff	floor@i+2,?_floor+2
  5666  0056EE  C0C8  F0C4         	movff	floor@i+3,?_floor+3
  5667  0056F2  0012               	return		;funcret
  5668  0056F4                     __end_of_floor:
  5669                           	opt stack 0
  5670                           tblptru	equ	0xFF8
  5671                           tblptrh	equ	0xFF7
  5672                           tblptrl	equ	0xFF6
  5673                           tablat	equ	0xFF5
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           postdec1	equ	0xFE5
  5677                           fsr1l	equ	0xFE1
  5678                           indf2	equ	0xFDF
  5679                           postinc2	equ	0xFDE
  5680                           postdec2	equ	0xFDD
  5681                           fsr2h	equ	0xFDA
  5682                           fsr2l	equ	0xFD9
  5683                           status	equ	0xFD8
  5684                           
  5685 ;; *************** function _frexp *****************
  5686 ;; Defined at:
  5687 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  value           4   23[BANK0 ] int 
  5690 ;;  eptr            2   27[BANK0 ] PTR int 
  5691 ;;		 -> floor@expon(2), 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  4   23[BANK0 ] PTR int 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5703 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;Total ram usage:        8 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    4
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_floor
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text12
  5718  005ADC                     __ptext12:
  5719                           	opt stack 0
  5720  005ADC                     _frexp:
  5721                           	opt stack 21
  5722                           
  5723                           ;incstack = 0
  5724  005ADC  0100               	movlb	0	; () banked
  5725  005ADE  5177               	movf	frexp@value& (0+255),w,b
  5726  005AE0  0100               	movlb	0	; () banked
  5727  005AE2  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5728  005AE4  0100               	movlb	0	; () banked
  5729  005AE6  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5730  005AE8  0100               	movlb	0	; () banked
  5731  005AEA  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5732  005AEC  A4D8               	btfss	status,2,c
  5733  005AEE  D009               	goto	l6564
  5734                           
  5735                           ; BSR set to: 0
  5736  005AF0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5737  005AF4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5738  005AF8  0E00               	movlw	0
  5739  005AFA  6EDE               	movwf	postinc2,c
  5740  005AFC  0E00               	movlw	0
  5741  005AFE  6EDD               	movwf	postdec2,c
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;	Return value of _frexp is never used
  5745  005B00  0012               	return	
  5746  005B02                     l6564:
  5747                           
  5748                           ; BSR set to: 0
  5749  005B02  0100               	movlb	0	; () banked
  5750  005B04  517A               	movf	(frexp@value+3)& (0+255),w,b
  5751  005B06  0B7F               	andlw	127
  5752  005B08  0100               	movlb	0	; () banked
  5753  005B0A  6F7D               	movwf	??_frexp& (0+255),b
  5754  005B0C  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5755  005B0E  90D8               	bcf	status,0,c
  5756  005B10  0100               	movlb	0	; () banked
  5757  005B12  377D               	rlcf	??_frexp& (0+255),f,b
  5758  005B14  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5759  005B16  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5760  005B1A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5761  005B1E  C07D  FFDE         	movff	??_frexp,postinc2
  5762  005B22  C07E  FFDD         	movff	??_frexp+1,postdec2
  5763  005B26  0100               	movlb	0	; () banked
  5764  005B28  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5765  005B2A  D004               	goto	u8190
  5766  005B2C  0100               	movlb	0	; () banked
  5767  005B2E  6B7D               	clrf	??_frexp& (0+255),b
  5768  005B30  2B7D               	incf	??_frexp& (0+255),f,b
  5769  005B32  D002               	goto	u8198
  5770  005B34                     u8190:
  5771  005B34  0100               	movlb	0	; () banked
  5772  005B36  6B7D               	clrf	??_frexp& (0+255),b
  5773  005B38                     u8198:
  5774  005B38  0100               	movlb	0	; () banked
  5775  005B3A  517D               	movf	??_frexp& (0+255),w,b
  5776  005B3C  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5777  005B40  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5778  005B44  12DE               	iorwf	postinc2,f,c
  5779  005B46  0E00               	movlw	0
  5780  005B48  12DD               	iorwf	postdec2,f,c
  5781                           
  5782                           ; BSR set to: 0
  5783  005B4A  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5784  005B4E  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5785  005B52  0E82               	movlw	130
  5786  005B54  26DE               	addwf	postinc2,f,c
  5787  005B56  0EFF               	movlw	255
  5788  005B58  22DD               	addwfc	postdec2,f,c
  5789                           
  5790                           ; BSR set to: 0
  5791  005B5A  0100               	movlb	0	; () banked
  5792  005B5C  817A               	bsf	(frexp@value+3)& (0+255),0,b
  5793  005B5E  837A               	bsf	(frexp@value+3)& (0+255),1,b
  5794  005B60  857A               	bsf	(frexp@value+3)& (0+255),2,b
  5795  005B62  877A               	bsf	(frexp@value+3)& (0+255),3,b
  5796  005B64  897A               	bsf	(frexp@value+3)& (0+255),4,b
  5797  005B66  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  5798  005B68  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  5799                           
  5800                           ; BSR set to: 0
  5801  005B6A  0100               	movlb	0	; () banked
  5802  005B6C  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  5803  005B6E  0012               	return	
  5804  005B70                     __end_of_frexp:
  5805                           	opt stack 0
  5806                           tblptru	equ	0xFF8
  5807                           tblptrh	equ	0xFF7
  5808                           tblptrl	equ	0xFF6
  5809                           tablat	equ	0xFF5
  5810                           postinc0	equ	0xFEE
  5811                           wreg	equ	0xFE8
  5812                           postdec1	equ	0xFE5
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           fsr2h	equ	0xFDA
  5818                           fsr2l	equ	0xFD9
  5819                           status	equ	0xFD8
  5820                           
  5821 ;; *************** function ___xxtofl *****************
  5822 ;; Defined at:
  5823 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  sign            1    wreg     unsigned char 
  5826 ;;  val             4   37[BANK0 ] long 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  sign            1   45[BANK0 ] unsigned char 
  5829 ;;  arg             4   47[BANK0 ] unsigned long 
  5830 ;;  exp             1   46[BANK0 ] unsigned char 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  4   37[BANK0 ] unsigned char 
  5833 ;; Registers used:
  5834 ;;		wreg, status,2, status,0
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;Total ram usage:       14 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    4
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_park_search
  5851 ;;		_park_routine
  5852 ;;		_parallelo
  5853 ;;		_floor
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text13
  5858  004DCA                     __ptext13:
  5859                           	opt stack 0
  5860  004DCA                     ___xxtofl:
  5861                           	opt stack 24
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;incstack = 0
  5865                           ;___xxtofl@sign stored from wreg
  5866  004DCA  0100               	movlb	0	; () banked
  5867  004DCC  6F8D               	movwf	___xxtofl@sign& (0+255),b
  5868  004DCE  0100               	movlb	0	; () banked
  5869  004DD0  518D               	movf	___xxtofl@sign& (0+255),w,b
  5870  004DD2  0100               	movlb	0	; () banked
  5871  004DD4  B4D8               	btfsc	status,2,c
  5872  004DD6  D01E               	goto	l1439
  5873                           
  5874                           ; BSR set to: 0
  5875  004DD8  0100               	movlb	0	; () banked
  5876  004DDA  AF88               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5877  004DDC  D01B               	goto	l1439
  5878                           
  5879                           ; BSR set to: 0
  5880  004DDE  C085  F089         	movff	___xxtofl@val,??___xxtofl
  5881  004DE2  C086  F08A         	movff	___xxtofl@val+1,??___xxtofl+1
  5882  004DE6  C087  F08B         	movff	___xxtofl@val+2,??___xxtofl+2
  5883  004DEA  C088  F08C         	movff	___xxtofl@val+3,??___xxtofl+3
  5884  004DEE  0100               	movlb	0	; () banked
  5885  004DF0  1F89               	comf	??___xxtofl& (0+255),f,b
  5886  004DF2  1F8A               	comf	(??___xxtofl+1)& (0+255),f,b
  5887  004DF4  1F8B               	comf	(??___xxtofl+2)& (0+255),f,b
  5888  004DF6  1F8C               	comf	(??___xxtofl+3)& (0+255),f,b
  5889  004DF8  2B89               	incf	??___xxtofl& (0+255),f,b
  5890  004DFA  0E00               	movlw	0
  5891  004DFC  238A               	addwfc	(??___xxtofl+1)& (0+255),f,b
  5892  004DFE  238B               	addwfc	(??___xxtofl+2)& (0+255),f,b
  5893  004E00  238C               	addwfc	(??___xxtofl+3)& (0+255),f,b
  5894  004E02  C089  F08F         	movff	??___xxtofl,___xxtofl@arg
  5895  004E06  C08A  F090         	movff	??___xxtofl+1,___xxtofl@arg+1
  5896  004E0A  C08B  F091         	movff	??___xxtofl+2,___xxtofl@arg+2
  5897  004E0E  C08C  F092         	movff	??___xxtofl+3,___xxtofl@arg+3
  5898  004E12  D008               	goto	l6522
  5899  004E14                     l1439:
  5900                           
  5901                           ; BSR set to: 0
  5902  004E14  C085  F08F         	movff	___xxtofl@val,___xxtofl@arg
  5903  004E18  C086  F090         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5904  004E1C  C087  F091         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5905  004E20  C088  F092         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5906  004E24                     l6522:
  5907                           
  5908                           ; BSR set to: 0
  5909  004E24  0100               	movlb	0	; () banked
  5910  004E26  5185               	movf	___xxtofl@val& (0+255),w,b
  5911  004E28  0100               	movlb	0	; () banked
  5912  004E2A  1186               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  5913  004E2C  0100               	movlb	0	; () banked
  5914  004E2E  1187               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  5915  004E30  0100               	movlb	0	; () banked
  5916  004E32  1188               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  5917  004E34  A4D8               	btfss	status,2,c
  5918  004E36  D00A               	goto	l6528
  5919                           
  5920                           ; BSR set to: 0
  5921  004E38  0E00               	movlw	0
  5922  004E3A  0100               	movlb	0	; () banked
  5923  004E3C  6F85               	movwf	?___xxtofl& (0+255),b
  5924  004E3E  0E00               	movlw	0
  5925  004E40  6F86               	movwf	(?___xxtofl+1)& (0+255),b
  5926  004E42  0E00               	movlw	0
  5927  004E44  6F87               	movwf	(?___xxtofl+2)& (0+255),b
  5928  004E46  0E00               	movlw	0
  5929  004E48  6F88               	movwf	(?___xxtofl+3)& (0+255),b
  5930                           
  5931                           ; BSR set to: 0
  5932  004E4A  0012               	return	
  5933  004E4C                     l6528:
  5934                           
  5935                           ; BSR set to: 0
  5936  004E4C  0E96               	movlw	150
  5937  004E4E  0100               	movlb	0	; () banked
  5938  004E50  6F8E               	movwf	___xxtofl@exp& (0+255),b
  5939  004E52  D008               	goto	l6532
  5940  004E54                     l6530:
  5941                           
  5942                           ; BSR set to: 0
  5943  004E54  0100               	movlb	0	; () banked
  5944  004E56  2B8E               	incf	___xxtofl@exp& (0+255),f,b
  5945  004E58  0100               	movlb	0	; () banked
  5946  004E5A  90D8               	bcf	status,0,c
  5947  004E5C  3392               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5948  004E5E  3391               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5949  004E60  3390               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5950  004E62  338F               	rrcf	___xxtofl@arg& (0+255),f,b
  5951  004E64                     l6532:
  5952                           
  5953                           ; BSR set to: 0
  5954  004E64  0E00               	movlw	0
  5955  004E66  0100               	movlb	0	; () banked
  5956  004E68  158F               	andwf	___xxtofl@arg& (0+255),w,b
  5957  004E6A  0100               	movlb	0	; () banked
  5958  004E6C  6F89               	movwf	??___xxtofl& (0+255),b
  5959  004E6E  0E00               	movlw	0
  5960  004E70  0100               	movlb	0	; () banked
  5961  004E72  1590               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5962  004E74  0100               	movlb	0	; () banked
  5963  004E76  6F8A               	movwf	(??___xxtofl+1)& (0+255),b
  5964  004E78  0E00               	movlw	0
  5965  004E7A  0100               	movlb	0	; () banked
  5966  004E7C  1591               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5967  004E7E  0100               	movlb	0	; () banked
  5968  004E80  6F8B               	movwf	(??___xxtofl+2)& (0+255),b
  5969  004E82  0EFE               	movlw	254
  5970  004E84  0100               	movlb	0	; () banked
  5971  004E86  1592               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5972  004E88  0100               	movlb	0	; () banked
  5973  004E8A  6F8C               	movwf	(??___xxtofl+3)& (0+255),b
  5974  004E8C  0100               	movlb	0	; () banked
  5975  004E8E  5189               	movf	??___xxtofl& (0+255),w,b
  5976  004E90  0100               	movlb	0	; () banked
  5977  004E92  118A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5978  004E94  0100               	movlb	0	; () banked
  5979  004E96  118B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5980  004E98  0100               	movlb	0	; () banked
  5981  004E9A  118C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5982  004E9C  B4D8               	btfsc	status,2,c
  5983  004E9E  D010               	goto	l1446
  5984  004EA0  D7D9               	goto	l6530
  5985  004EA2                     l6534:
  5986                           
  5987                           ; BSR set to: 0
  5988  004EA2  0100               	movlb	0	; () banked
  5989  004EA4  2B8E               	incf	___xxtofl@exp& (0+255),f,b
  5990                           
  5991                           ; BSR set to: 0
  5992  004EA6  0E01               	movlw	1
  5993  004EA8  0100               	movlb	0	; () banked
  5994  004EAA  278F               	addwf	___xxtofl@arg& (0+255),f,b
  5995  004EAC  0E00               	movlw	0
  5996  004EAE  2390               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  5997  004EB0  2391               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  5998  004EB2  2392               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  5999                           
  6000                           ; BSR set to: 0
  6001  004EB4  0100               	movlb	0	; () banked
  6002  004EB6  90D8               	bcf	status,0,c
  6003  004EB8  3392               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6004  004EBA  3391               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6005  004EBC  3390               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6006  004EBE  338F               	rrcf	___xxtofl@arg& (0+255),f,b
  6007  004EC0                     l1446:
  6008                           
  6009                           ; BSR set to: 0
  6010  004EC0  0E00               	movlw	0
  6011  004EC2  0100               	movlb	0	; () banked
  6012  004EC4  158F               	andwf	___xxtofl@arg& (0+255),w,b
  6013  004EC6  0100               	movlb	0	; () banked
  6014  004EC8  6F89               	movwf	??___xxtofl& (0+255),b
  6015  004ECA  0E00               	movlw	0
  6016  004ECC  0100               	movlb	0	; () banked
  6017  004ECE  1590               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6018  004ED0  0100               	movlb	0	; () banked
  6019  004ED2  6F8A               	movwf	(??___xxtofl+1)& (0+255),b
  6020  004ED4  0E00               	movlw	0
  6021  004ED6  0100               	movlb	0	; () banked
  6022  004ED8  1591               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6023  004EDA  0100               	movlb	0	; () banked
  6024  004EDC  6F8B               	movwf	(??___xxtofl+2)& (0+255),b
  6025  004EDE  0EFF               	movlw	255
  6026  004EE0  0100               	movlb	0	; () banked
  6027  004EE2  1592               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6028  004EE4  0100               	movlb	0	; () banked
  6029  004EE6  6F8C               	movwf	(??___xxtofl+3)& (0+255),b
  6030  004EE8  0100               	movlb	0	; () banked
  6031  004EEA  5189               	movf	??___xxtofl& (0+255),w,b
  6032  004EEC  0100               	movlb	0	; () banked
  6033  004EEE  118A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6034  004EF0  0100               	movlb	0	; () banked
  6035  004EF2  118B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6036  004EF4  0100               	movlb	0	; () banked
  6037  004EF6  118C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6038  004EF8  B4D8               	btfsc	status,2,c
  6039  004EFA  D009               	goto	l6542
  6040  004EFC  D7D2               	goto	l6534
  6041  004EFE                     l6540:
  6042                           
  6043                           ; BSR set to: 0
  6044  004EFE  0100               	movlb	0	; () banked
  6045  004F00  078E               	decf	___xxtofl@exp& (0+255),f,b
  6046  004F02  0100               	movlb	0	; () banked
  6047  004F04  90D8               	bcf	status,0,c
  6048  004F06  378F               	rlcf	___xxtofl@arg& (0+255),f,b
  6049  004F08  3790               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6050  004F0A  3791               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6051  004F0C  3792               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6052  004F0E                     l6542:
  6053                           
  6054                           ; BSR set to: 0
  6055  004F0E  0100               	movlb	0	; () banked
  6056  004F10  BF91               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6057  004F12  D004               	goto	l1453
  6058                           
  6059                           ; BSR set to: 0
  6060  004F14  0E02               	movlw	2
  6061  004F16  0100               	movlb	0	; () banked
  6062  004F18  618E               	cpfslt	___xxtofl@exp& (0+255),b
  6063  004F1A  D7F1               	goto	l6540
  6064  004F1C                     l1453:
  6065                           
  6066                           ; BSR set to: 0
  6067  004F1C  0100               	movlb	0	; () banked
  6068  004F1E  B18E               	btfsc	___xxtofl@exp& (0+255),0,b
  6069  004F20  D009               	goto	l1454
  6070                           
  6071                           ; BSR set to: 0
  6072  004F22  0EFF               	movlw	255
  6073  004F24  0100               	movlb	0	; () banked
  6074  004F26  178F               	andwf	___xxtofl@arg& (0+255),f,b
  6075  004F28  0EFF               	movlw	255
  6076  004F2A  1790               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6077  004F2C  0E7F               	movlw	127
  6078  004F2E  1791               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6079  004F30  0EFF               	movlw	255
  6080  004F32  1792               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6081  004F34                     l1454:
  6082                           
  6083                           ; BSR set to: 0
  6084  004F34  0100               	movlb	0	; () banked
  6085  004F36  90D8               	bcf	status,0,c
  6086  004F38  338E               	rrcf	___xxtofl@exp& (0+255),f,b
  6087  004F3A  C08E  F089         	movff	___xxtofl@exp,??___xxtofl
  6088  004F3E  0100               	movlb	0	; () banked
  6089  004F40  6B8A               	clrf	(??___xxtofl+1)& (0+255),b
  6090  004F42  6B8B               	clrf	(??___xxtofl+2)& (0+255),b
  6091  004F44  6B8C               	clrf	(??___xxtofl+3)& (0+255),b
  6092  004F46  C089  F08C         	movff	??___xxtofl,??___xxtofl+3
  6093  004F4A  0100               	movlb	0	; () banked
  6094  004F4C  6B8B               	clrf	(??___xxtofl+2)& (0+255),b
  6095  004F4E  6B8A               	clrf	(??___xxtofl+1)& (0+255),b
  6096  004F50  6B89               	clrf	??___xxtofl& (0+255),b
  6097  004F52  0100               	movlb	0	; () banked
  6098  004F54  5189               	movf	??___xxtofl& (0+255),w,b
  6099  004F56  0100               	movlb	0	; () banked
  6100  004F58  138F               	iorwf	___xxtofl@arg& (0+255),f,b
  6101  004F5A  0100               	movlb	0	; () banked
  6102  004F5C  518A               	movf	(??___xxtofl+1)& (0+255),w,b
  6103  004F5E  0100               	movlb	0	; () banked
  6104  004F60  1390               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6105  004F62  0100               	movlb	0	; () banked
  6106  004F64  518B               	movf	(??___xxtofl+2)& (0+255),w,b
  6107  004F66  0100               	movlb	0	; () banked
  6108  004F68  1391               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6109  004F6A  0100               	movlb	0	; () banked
  6110  004F6C  518C               	movf	(??___xxtofl+3)& (0+255),w,b
  6111  004F6E  0100               	movlb	0	; () banked
  6112  004F70  1392               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6113                           
  6114                           ; BSR set to: 0
  6115  004F72  0100               	movlb	0	; () banked
  6116  004F74  518D               	movf	___xxtofl@sign& (0+255),w,b
  6117  004F76  0100               	movlb	0	; () banked
  6118  004F78  B4D8               	btfsc	status,2,c
  6119  004F7A  D005               	goto	l6554
  6120                           
  6121                           ; BSR set to: 0
  6122  004F7C  0100               	movlb	0	; () banked
  6123  004F7E  AF88               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6124  004F80  D002               	goto	l6554
  6125                           
  6126                           ; BSR set to: 0
  6127  004F82  0100               	movlb	0	; () banked
  6128  004F84  8F92               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6129  004F86                     l6554:
  6130                           
  6131                           ; BSR set to: 0
  6132  004F86  C08F  F085         	movff	___xxtofl@arg,?___xxtofl
  6133  004F8A  C090  F086         	movff	___xxtofl@arg+1,?___xxtofl+1
  6134  004F8E  C091  F087         	movff	___xxtofl@arg+2,?___xxtofl+2
  6135  004F92  C092  F088         	movff	___xxtofl@arg+3,?___xxtofl+3
  6136  004F96  0012               	return	
  6137  004F98                     __end_of___xxtofl:
  6138                           	opt stack 0
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           postinc0	equ	0xFEE
  6144                           wreg	equ	0xFE8
  6145                           postdec1	equ	0xFE5
  6146                           fsr1l	equ	0xFE1
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function ___fltol *****************
  6155 ;; Defined at:
  6156 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  f1              4   23[BANK0 ] unsigned char 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  exp1            1   32[BANK0 ] unsigned char 
  6161 ;;  sign1           1   31[BANK0 ] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  4   23[BANK0 ] long 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6171 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;Total ram usage:       10 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    4
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_park_routine
  6182 ;;		_parallelo
  6183 ;;		_floor
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text14
  6188  00580C                     __ptext14:
  6189                           	opt stack 0
  6190  00580C                     ___fltol:
  6191                           	opt stack 24
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;incstack = 0
  6195  00580C  0100               	movlb	0	; () banked
  6196  00580E  3579               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6197  005810  357A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6198  005812  0100               	movlb	0	; () banked
  6199  005814  6F80               	movwf	___fltol@exp1& (0+255),b
  6200  005816  0100               	movlb	0	; () banked
  6201  005818  5180               	movf	___fltol@exp1& (0+255),w,b
  6202  00581A  A4D8               	btfss	status,2,c
  6203  00581C  D00A               	goto	l6478
  6204                           
  6205                           ; BSR set to: 0
  6206  00581E  0E00               	movlw	0
  6207  005820  0100               	movlb	0	; () banked
  6208  005822  6F77               	movwf	?___fltol& (0+255),b
  6209  005824  0E00               	movlw	0
  6210  005826  6F78               	movwf	(?___fltol+1)& (0+255),b
  6211  005828  0E00               	movlw	0
  6212  00582A  6F79               	movwf	(?___fltol+2)& (0+255),b
  6213  00582C  0E00               	movlw	0
  6214  00582E  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6215                           
  6216                           ; BSR set to: 0
  6217  005830  0012               	return	
  6218  005832                     l6478:
  6219                           
  6220                           ; BSR set to: 0
  6221  005832  C077  F07B         	movff	___fltol@f1,??___fltol
  6222  005836  C078  F07C         	movff	___fltol@f1+1,??___fltol+1
  6223  00583A  C079  F07D         	movff	___fltol@f1+2,??___fltol+2
  6224  00583E  C07A  F07E         	movff	___fltol@f1+3,??___fltol+3
  6225  005842  0E20               	movlw	32
  6226  005844  D006               	goto	u8020
  6227  005846                     u8025:
  6228  005846  0100               	movlb	0	; () banked
  6229  005848  90D8               	bcf	status,0,c
  6230  00584A  337E               	rrcf	(??___fltol+3)& (0+255),f,b
  6231  00584C  337D               	rrcf	(??___fltol+2)& (0+255),f,b
  6232  00584E  337C               	rrcf	(??___fltol+1)& (0+255),f,b
  6233  005850  337B               	rrcf	??___fltol& (0+255),f,b
  6234  005852                     u8020:
  6235  005852  2EE8               	decfsz	wreg,f,c
  6236  005854  D7F8               	goto	u8025
  6237  005856  0100               	movlb	0	; () banked
  6238  005858  517B               	movf	??___fltol& (0+255),w,b
  6239  00585A  0100               	movlb	0	; () banked
  6240  00585C  6F7F               	movwf	___fltol@sign1& (0+255),b
  6241                           
  6242                           ; BSR set to: 0
  6243  00585E  0100               	movlb	0	; () banked
  6244  005860  8F79               	bsf	(___fltol@f1+2)& (0+255),7,b
  6245                           
  6246                           ; BSR set to: 0
  6247  005862  0EFF               	movlw	255
  6248  005864  0100               	movlb	0	; () banked
  6249  005866  1777               	andwf	___fltol@f1& (0+255),f,b
  6250  005868  0EFF               	movlw	255
  6251  00586A  1778               	andwf	(___fltol@f1+1)& (0+255),f,b
  6252  00586C  0EFF               	movlw	255
  6253  00586E  1779               	andwf	(___fltol@f1+2)& (0+255),f,b
  6254  005870  0E00               	movlw	0
  6255  005872  177A               	andwf	(___fltol@f1+3)& (0+255),f,b
  6256                           
  6257                           ; BSR set to: 0
  6258  005874  0E96               	movlw	150
  6259  005876  0100               	movlb	0	; () banked
  6260  005878  5F80               	subwf	___fltol@exp1& (0+255),f,b
  6261                           
  6262                           ; BSR set to: 0
  6263  00587A  0100               	movlb	0	; () banked
  6264  00587C  AF80               	btfss	___fltol@exp1& (0+255),7,b
  6265  00587E  D01A               	goto	l6498
  6266                           
  6267                           ; BSR set to: 0
  6268  005880  0100               	movlb	0	; () banked
  6269  005882  5180               	movf	___fltol@exp1& (0+255),w,b
  6270  005884  0A80               	xorlw	128
  6271  005886  0F97               	addlw	151
  6272  005888  B0D8               	btfsc	status,0,c
  6273  00588A  D00A               	goto	l6494
  6274                           
  6275                           ; BSR set to: 0
  6276  00588C  0E00               	movlw	0
  6277  00588E  0100               	movlb	0	; () banked
  6278  005890  6F77               	movwf	?___fltol& (0+255),b
  6279  005892  0E00               	movlw	0
  6280  005894  6F78               	movwf	(?___fltol+1)& (0+255),b
  6281  005896  0E00               	movlw	0
  6282  005898  6F79               	movwf	(?___fltol+2)& (0+255),b
  6283  00589A  0E00               	movlw	0
  6284  00589C  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6285                           
  6286                           ; BSR set to: 0
  6287  00589E  0012               	return	
  6288  0058A0                     l6494:
  6289                           
  6290                           ; BSR set to: 0
  6291  0058A0  0100               	movlb	0	; () banked
  6292  0058A2  90D8               	bcf	status,0,c
  6293  0058A4  337A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6294  0058A6  3379               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6295  0058A8  3378               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6296  0058AA  3377               	rrcf	___fltol@f1& (0+255),f,b
  6297                           
  6298                           ; BSR set to: 0
  6299  0058AC  0100               	movlb	0	; () banked
  6300  0058AE  3F80               	incfsz	___fltol@exp1& (0+255),f,b
  6301  0058B0  D7F7               	goto	l6494
  6302                           
  6303                           ; BSR set to: 0
  6304  0058B2  D01B               	goto	l6508
  6305  0058B4                     l6498:
  6306                           
  6307                           ; BSR set to: 0
  6308  0058B4  0E1F               	movlw	31
  6309  0058B6  0100               	movlb	0	; () banked
  6310  0058B8  6580               	cpfsgt	___fltol@exp1& (0+255),b
  6311  0058BA  D012               	goto	l6506
  6312                           
  6313                           ; BSR set to: 0
  6314  0058BC  0E00               	movlw	0
  6315  0058BE  0100               	movlb	0	; () banked
  6316  0058C0  6F77               	movwf	?___fltol& (0+255),b
  6317  0058C2  0E00               	movlw	0
  6318  0058C4  6F78               	movwf	(?___fltol+1)& (0+255),b
  6319  0058C6  0E00               	movlw	0
  6320  0058C8  6F79               	movwf	(?___fltol+2)& (0+255),b
  6321  0058CA  0E00               	movlw	0
  6322  0058CC  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6323                           
  6324                           ; BSR set to: 0
  6325  0058CE  0012               	return	
  6326  0058D0                     l6504:
  6327                           
  6328                           ; BSR set to: 0
  6329  0058D0  0100               	movlb	0	; () banked
  6330  0058D2  90D8               	bcf	status,0,c
  6331  0058D4  3777               	rlcf	___fltol@f1& (0+255),f,b
  6332  0058D6  3778               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6333  0058D8  3779               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6334  0058DA  377A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6335  0058DC  0100               	movlb	0	; () banked
  6336  0058DE  0780               	decf	___fltol@exp1& (0+255),f,b
  6337  0058E0                     l6506:
  6338                           
  6339                           ; BSR set to: 0
  6340  0058E0  0100               	movlb	0	; () banked
  6341  0058E2  5180               	movf	___fltol@exp1& (0+255),w,b
  6342  0058E4  0100               	movlb	0	; () banked
  6343  0058E6  A4D8               	btfss	status,2,c
  6344  0058E8  D7F3               	goto	l6504
  6345  0058EA                     l6508:
  6346                           
  6347                           ; BSR set to: 0
  6348  0058EA  0100               	movlb	0	; () banked
  6349  0058EC  517F               	movf	___fltol@sign1& (0+255),w,b
  6350  0058EE  0100               	movlb	0	; () banked
  6351  0058F0  B4D8               	btfsc	status,2,c
  6352  0058F2  D009               	goto	l6512
  6353                           
  6354                           ; BSR set to: 0
  6355  0058F4  0100               	movlb	0	; () banked
  6356  0058F6  1F7A               	comf	(___fltol@f1+3)& (0+255),f,b
  6357  0058F8  1F79               	comf	(___fltol@f1+2)& (0+255),f,b
  6358  0058FA  1F78               	comf	(___fltol@f1+1)& (0+255),f,b
  6359  0058FC  6D77               	negf	___fltol@f1& (0+255),b
  6360  0058FE  0E00               	movlw	0
  6361  005900  2378               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6362  005902  2379               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6363  005904  237A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6364  005906                     l6512:
  6365                           
  6366                           ; BSR set to: 0
  6367  005906  C077  F077         	movff	___fltol@f1,?___fltol
  6368  00590A  C078  F078         	movff	___fltol@f1+1,?___fltol+1
  6369  00590E  C079  F079         	movff	___fltol@f1+2,?___fltol+2
  6370  005912  C07A  F07A         	movff	___fltol@f1+3,?___fltol+3
  6371  005916  0012               	return	
  6372  005918                     __end_of___fltol:
  6373                           	opt stack 0
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           postinc0	equ	0xFEE
  6379                           wreg	equ	0xFE8
  6380                           postdec1	equ	0xFE5
  6381                           fsr1l	equ	0xFE1
  6382                           indf2	equ	0xFDF
  6383                           postinc2	equ	0xFDE
  6384                           postdec2	equ	0xFDD
  6385                           fsr2h	equ	0xFDA
  6386                           fsr2l	equ	0xFD9
  6387                           status	equ	0xFD8
  6388                           
  6389 ;; *************** function ___flsub *****************
  6390 ;; Defined at:
  6391 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  b               4  107[BANK0 ] long 
  6394 ;;  a               4  111[BANK0 ] long 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;		None
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  4  107[BANK0 ] long 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2, status,0, cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;Total ram usage:        8 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    5
  6413 ;; This function calls:
  6414 ;;		___fladd
  6415 ;; This function is called by:
  6416 ;;		_sin
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text15
  6421  005D58                     __ptext15:
  6422                           	opt stack 0
  6423  005D58                     ___flsub:
  6424                           	opt stack 21
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;incstack = 0
  6428  005D58  0E00               	movlw	0
  6429  005D5A  0100               	movlb	0	; () banked
  6430  005D5C  1BCF               	xorwf	___flsub@a& (0+255),f,b
  6431  005D5E  0E00               	movlw	0
  6432  005D60  1BD0               	xorwf	(___flsub@a+1)& (0+255),f,b
  6433  005D62  0E00               	movlw	0
  6434  005D64  1BD1               	xorwf	(___flsub@a+2)& (0+255),f,b
  6435  005D66  0E80               	movlw	128
  6436  005D68  1BD2               	xorwf	(___flsub@a+3)& (0+255),f,b
  6437                           
  6438                           ; BSR set to: 0
  6439  005D6A  C0CB  F0AD         	movff	___flsub@b,___fladd@b
  6440  005D6E  C0CC  F0AE         	movff	___flsub@b+1,___fladd@b+1
  6441  005D72  C0CD  F0AF         	movff	___flsub@b+2,___fladd@b+2
  6442  005D76  C0CE  F0B0         	movff	___flsub@b+3,___fladd@b+3
  6443  005D7A  C0CF  F0B1         	movff	___flsub@a,___fladd@a
  6444  005D7E  C0D0  F0B2         	movff	___flsub@a+1,___fladd@a+1
  6445  005D82  C0D1  F0B3         	movff	___flsub@a+2,___fladd@a+2
  6446  005D86  C0D2  F0B4         	movff	___flsub@a+3,___fladd@a+3
  6447  005D8A  EC3D  F015         	call	___fladd	;wreg free
  6448  005D8E  C0AD  F0CB         	movff	?___fladd,?___flsub
  6449  005D92  C0AE  F0CC         	movff	?___fladd+1,?___flsub+1
  6450  005D96  C0AF  F0CD         	movff	?___fladd+2,?___flsub+2
  6451  005D9A  C0B0  F0CE         	movff	?___fladd+3,?___flsub+3
  6452  005D9E  0012               	return	
  6453  005DA0                     __end_of___flsub:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           postinc0	equ	0xFEE
  6460                           wreg	equ	0xFE8
  6461                           postdec1	equ	0xFE5
  6462                           fsr1l	equ	0xFE1
  6463                           indf2	equ	0xFDF
  6464                           postinc2	equ	0xFDE
  6465                           postdec2	equ	0xFDD
  6466                           fsr2h	equ	0xFDA
  6467                           fsr2l	equ	0xFD9
  6468                           status	equ	0xFD8
  6469                           
  6470 ;; *************** function _asin *****************
  6471 ;; Defined at:
  6472 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  x               4   17[BANK1 ] long 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  y               4   33[BANK1 ] long 
  6477 ;;  sgn             4   21[BANK1 ] long 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  4   17[BANK1 ] long 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6487 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;Total ram usage:       24 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    7
  6494 ;; This function calls:
  6495 ;;		___fladd
  6496 ;;		___fldiv
  6497 ;;		___flge
  6498 ;;		___flmul
  6499 ;;		___flneg
  6500 ;;		_atan
  6501 ;;		_fabs
  6502 ;;		_sqrt
  6503 ;; This function is called by:
  6504 ;;		_parallelo
  6505 ;;		_matematica
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text16
  6510  0045DA                     __ptext16:
  6511                           	opt stack 0
  6512  0045DA                     _asin:
  6513                           	opt stack 21
  6514                           
  6515                           ;incstack = 0
  6516  0045DA  0E00               	movlw	0
  6517  0045DC  0100               	movlb	0	; () banked
  6518  0045DE  6FB1               	movwf	___flge@ff1& (0+255),b
  6519  0045E0  0E00               	movlw	0
  6520  0045E2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  6521  0045E4  0E80               	movlw	128
  6522  0045E6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  6523  0045E8  0E3F               	movlw	63
  6524  0045EA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  6525  0045EC  C19A  F0AD         	movff	asin@x,fabs@d
  6526  0045F0  C19B  F0AE         	movff	asin@x+1,fabs@d+1
  6527  0045F4  C19C  F0AF         	movff	asin@x+2,fabs@d+2
  6528  0045F8  C19D  F0B0         	movff	asin@x+3,fabs@d+3
  6529  0045FC  ECD0  F02E         	call	_fabs	;wreg free
  6530  004600  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  6531  004604  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  6532  004608  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  6533  00460C  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  6534  004610  EC85  F029         	call	___flge	;wreg free
  6535  004614  0100               	movlb	0	; () banked
  6536  004616  B0D8               	btfsc	status,0,c
  6537  004618  D00F               	goto	l7214
  6538                           
  6539                           ; BSR set to: 0
  6540  00461A  0E00               	movlw	0
  6541  00461C  0101               	movlb	1	; () banked
  6542  00461E  6F49               	movwf	(_errno+1)& (0+255),b
  6543  004620  0E21               	movlw	33
  6544  004622  6F48               	movwf	_errno& (0+255),b
  6545  004624  0E00               	movlw	0
  6546  004626  0101               	movlb	1	; () banked
  6547  004628  6F9A               	movwf	?_asin& (0+255),b
  6548  00462A  0E00               	movlw	0
  6549  00462C  6F9B               	movwf	(?_asin+1)& (0+255),b
  6550  00462E  0E00               	movlw	0
  6551  004630  6F9C               	movwf	(?_asin+2)& (0+255),b
  6552  004632  0E00               	movlw	0
  6553  004634  6F9D               	movwf	(?_asin+3)& (0+255),b
  6554                           
  6555                           ; BSR set to: 1
  6556  004636  0012               	return	
  6557  004638                     l7214:
  6558  004638  0E00               	movlw	0
  6559  00463A  0101               	movlb	1	; () banked
  6560  00463C  6F9E               	movwf	asin@sgn& (0+255),b
  6561  00463E  0E00               	movlw	0
  6562  004640  6F9F               	movwf	(asin@sgn+1)& (0+255),b
  6563  004642  0E80               	movlw	128
  6564  004644  6FA0               	movwf	(asin@sgn+2)& (0+255),b
  6565  004646  0E3F               	movlw	63
  6566  004648  6FA1               	movwf	(asin@sgn+3)& (0+255),b
  6567                           
  6568                           ; BSR set to: 1
  6569  00464A  C19A  F094         	movff	asin@x,___flmul@a
  6570  00464E  C19B  F095         	movff	asin@x+1,___flmul@a+1
  6571  004652  C19C  F096         	movff	asin@x+2,___flmul@a+2
  6572  004656  C19D  F097         	movff	asin@x+3,___flmul@a+3
  6573  00465A  C19A  F090         	movff	asin@x,___flmul@b
  6574  00465E  C19B  F091         	movff	asin@x+1,___flmul@b+1
  6575  004662  C19C  F092         	movff	asin@x+2,___flmul@b+2
  6576  004666  C19D  F093         	movff	asin@x+3,___flmul@b+3
  6577  00466A  EC91  F017         	call	___flmul	;wreg free
  6578  00466E  C090  F0A9         	movff	?___flmul,___flneg@f1
  6579  004672  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  6580  004676  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  6581  00467A  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  6582  00467E  EC0C  F02F         	call	___flneg	;wreg free
  6583  004682  C0A9  F0AD         	movff	?___flneg,___fladd@b
  6584  004686  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  6585  00468A  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  6586  00468E  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  6587  004692  0E00               	movlw	0
  6588  004694  0100               	movlb	0	; () banked
  6589  004696  6FB1               	movwf	___fladd@a& (0+255),b
  6590  004698  0E00               	movlw	0
  6591  00469A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6592  00469C  0E80               	movlw	128
  6593  00469E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6594  0046A0  0E3F               	movlw	63
  6595  0046A2  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6596  0046A4  EC3D  F015         	call	___fladd	;wreg free
  6597  0046A8  C0AD  F0C1         	movff	?___fladd,sqrt@a
  6598  0046AC  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  6599  0046B0  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  6600  0046B4  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  6601  0046B8  ECCD  F01B         	call	_sqrt	;wreg free
  6602  0046BC  C0C1  F1AA         	movff	?_sqrt,asin@y
  6603  0046C0  C0C2  F1AB         	movff	?_sqrt+1,asin@y+1
  6604  0046C4  C0C3  F1AC         	movff	?_sqrt+2,asin@y+2
  6605  0046C8  C0C4  F1AD         	movff	?_sqrt+3,asin@y+3
  6606  0046CC  C19A  F0AD         	movff	asin@x,fabs@d
  6607  0046D0  C19B  F0AE         	movff	asin@x+1,fabs@d+1
  6608  0046D4  C19C  F0AF         	movff	asin@x+2,fabs@d+2
  6609  0046D8  C19D  F0B0         	movff	asin@x+3,fabs@d+3
  6610  0046DC  ECD0  F02E         	call	_fabs	;wreg free
  6611  0046E0  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  6612  0046E4  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  6613  0046E8  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  6614  0046EC  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  6615  0046F0  0E8F               	movlw	143
  6616  0046F2  0100               	movlb	0	; () banked
  6617  0046F4  6FB5               	movwf	___flge@ff2& (0+255),b
  6618  0046F6  0EC2               	movlw	194
  6619  0046F8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  6620  0046FA  0E35               	movlw	53
  6621  0046FC  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  6622  0046FE  0E3F               	movlw	63
  6623  004700  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  6624  004702  EC85  F029         	call	___flge	;wreg free
  6625  004706  0100               	movlb	0	; () banked
  6626  004708  B0D8               	btfsc	status,0,c
  6627  00470A  D02D               	goto	l7226
  6628                           
  6629                           ; BSR set to: 0
  6630  00470C  C19A  F077         	movff	asin@x,___fldiv@b
  6631  004710  C19B  F078         	movff	asin@x+1,___fldiv@b+1
  6632  004714  C19C  F079         	movff	asin@x+2,___fldiv@b+2
  6633  004718  C19D  F07A         	movff	asin@x+3,___fldiv@b+3
  6634  00471C  C1AA  F07B         	movff	asin@y,___fldiv@a
  6635  004720  C1AB  F07C         	movff	asin@y+1,___fldiv@a+1
  6636  004724  C1AC  F07D         	movff	asin@y+2,___fldiv@a+2
  6637  004728  C1AD  F07E         	movff	asin@y+3,___fldiv@a+3
  6638  00472C  ECB2  F01D         	call	___fldiv	;wreg free
  6639  004730  C077  F1AE         	movff	?___fldiv,_asin$3746
  6640  004734  C078  F1AF         	movff	?___fldiv+1,_asin$3746+1
  6641  004738  C079  F1B0         	movff	?___fldiv+2,_asin$3746+2
  6642  00473C  C07A  F1B1         	movff	?___fldiv+3,_asin$3746+3
  6643  004740  C1AE  F0D1         	movff	_asin$3746,atan@f
  6644  004744  C1AF  F0D2         	movff	_asin$3746+1,atan@f+1
  6645  004748  C1B0  F0D3         	movff	_asin$3746+2,atan@f+2
  6646  00474C  C1B1  F0D4         	movff	_asin$3746+3,atan@f+3
  6647  004750  ECBC  F025         	call	_atan	;wreg free
  6648  004754  C0D1  F19A         	movff	?_atan,?_asin
  6649  004758  C0D2  F19B         	movff	?_atan+1,?_asin+1
  6650  00475C  C0D3  F19C         	movff	?_atan+2,?_asin+2
  6651  004760  C0D4  F19D         	movff	?_atan+3,?_asin+3
  6652  004764  0012               	return	
  6653  004766                     l7226:
  6654  004766  0101               	movlb	1	; () banked
  6655  004768  AF9D               	btfss	(asin@x+3)& (0+255),7,b
  6656  00476A  D06E               	goto	l7238
  6657                           
  6658                           ; BSR set to: 1
  6659  00476C  C19A  F07B         	movff	asin@x,___fldiv@a
  6660  004770  C19B  F07C         	movff	asin@x+1,___fldiv@a+1
  6661  004774  C19C  F07D         	movff	asin@x+2,___fldiv@a+2
  6662  004778  C19D  F07E         	movff	asin@x+3,___fldiv@a+3
  6663  00477C  C1AA  F0A9         	movff	asin@y,___flneg@f1
  6664  004780  C1AB  F0AA         	movff	asin@y+1,___flneg@f1+1
  6665  004784  C1AC  F0AB         	movff	asin@y+2,___flneg@f1+2
  6666  004788  C1AD  F0AC         	movff	asin@y+3,___flneg@f1+3
  6667  00478C  EC0C  F02F         	call	___flneg	;wreg free
  6668  004790  C0A9  F077         	movff	?___flneg,___fldiv@b
  6669  004794  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  6670  004798  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  6671  00479C  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  6672  0047A0  ECB2  F01D         	call	___fldiv	;wreg free
  6673  0047A4  C077  F1AE         	movff	?___fldiv,_asin$3746
  6674  0047A8  C078  F1AF         	movff	?___fldiv+1,_asin$3746+1
  6675  0047AC  C079  F1B0         	movff	?___fldiv+2,_asin$3746+2
  6676  0047B0  C07A  F1B1         	movff	?___fldiv+3,_asin$3746+3
  6677  0047B4  C1AE  F0D1         	movff	_asin$3746,atan@f
  6678  0047B8  C1AF  F0D2         	movff	_asin$3746+1,atan@f+1
  6679  0047BC  C1B0  F0D3         	movff	_asin$3746+2,atan@f+2
  6680  0047C0  C1B1  F0D4         	movff	_asin$3746+3,atan@f+3
  6681  0047C4  ECBC  F025         	call	_atan	;wreg free
  6682  0047C8  C0D1  F1A6         	movff	?_atan,_asin$3747
  6683  0047CC  C0D2  F1A7         	movff	?_atan+1,_asin$3747+1
  6684  0047D0  C0D3  F1A8         	movff	?_atan+2,_asin$3747+2
  6685  0047D4  C0D4  F1A9         	movff	?_atan+3,_asin$3747+3
  6686  0047D8  0EDB               	movlw	219
  6687  0047DA  0100               	movlb	0	; () banked
  6688  0047DC  6FB1               	movwf	___fladd@a& (0+255),b
  6689  0047DE  0E0F               	movlw	15
  6690  0047E0  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6691  0047E2  0EC9               	movlw	201
  6692  0047E4  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6693  0047E6  0E3F               	movlw	63
  6694  0047E8  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6695  0047EA  C1A6  F0A9         	movff	_asin$3747,___flneg@f1
  6696  0047EE  C1A7  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  6697  0047F2  C1A8  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  6698  0047F6  C1A9  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  6699  0047FA  EC0C  F02F         	call	___flneg	;wreg free
  6700  0047FE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  6701  004802  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  6702  004806  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  6703  00480A  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  6704  00480E  EC3D  F015         	call	___fladd	;wreg free
  6705  004812  C0AD  F1A2         	movff	?___fladd,_asin$3748
  6706  004816  C0AE  F1A3         	movff	?___fladd+1,_asin$3748+1
  6707  00481A  C0AF  F1A4         	movff	?___fladd+2,_asin$3748+2
  6708  00481E  C0B0  F1A5         	movff	?___fladd+3,_asin$3748+3
  6709  004822  C1A2  F0A9         	movff	_asin$3748,___flneg@f1
  6710  004826  C1A3  F0AA         	movff	_asin$3748+1,___flneg@f1+1
  6711  00482A  C1A4  F0AB         	movff	_asin$3748+2,___flneg@f1+2
  6712  00482E  C1A5  F0AC         	movff	_asin$3748+3,___flneg@f1+3
  6713  004832  EC0C  F02F         	call	___flneg	;wreg free
  6714  004836  C0A9  F19A         	movff	?___flneg,?_asin
  6715  00483A  C0AA  F19B         	movff	?___flneg+1,?_asin+1
  6716  00483E  C0AB  F19C         	movff	?___flneg+2,?_asin+2
  6717  004842  C0AC  F19D         	movff	?___flneg+3,?_asin+3
  6718  004846  0012               	return	
  6719  004848                     l7238:
  6720  004848  C19A  F07B         	movff	asin@x,___fldiv@a
  6721  00484C  C19B  F07C         	movff	asin@x+1,___fldiv@a+1
  6722  004850  C19C  F07D         	movff	asin@x+2,___fldiv@a+2
  6723  004854  C19D  F07E         	movff	asin@x+3,___fldiv@a+3
  6724  004858  C1AA  F077         	movff	asin@y,___fldiv@b
  6725  00485C  C1AB  F078         	movff	asin@y+1,___fldiv@b+1
  6726  004860  C1AC  F079         	movff	asin@y+2,___fldiv@b+2
  6727  004864  C1AD  F07A         	movff	asin@y+3,___fldiv@b+3
  6728  004868  ECB2  F01D         	call	___fldiv	;wreg free
  6729  00486C  C077  F1AE         	movff	?___fldiv,_asin$3746
  6730  004870  C078  F1AF         	movff	?___fldiv+1,_asin$3746+1
  6731  004874  C079  F1B0         	movff	?___fldiv+2,_asin$3746+2
  6732  004878  C07A  F1B1         	movff	?___fldiv+3,_asin$3746+3
  6733  00487C  C1AE  F0D1         	movff	_asin$3746,atan@f
  6734  004880  C1AF  F0D2         	movff	_asin$3746+1,atan@f+1
  6735  004884  C1B0  F0D3         	movff	_asin$3746+2,atan@f+2
  6736  004888  C1B1  F0D4         	movff	_asin$3746+3,atan@f+3
  6737  00488C  ECBC  F025         	call	_atan	;wreg free
  6738  004890  C0D1  F1A6         	movff	?_atan,_asin$3747
  6739  004894  C0D2  F1A7         	movff	?_atan+1,_asin$3747+1
  6740  004898  C0D3  F1A8         	movff	?_atan+2,_asin$3747+2
  6741  00489C  C0D4  F1A9         	movff	?_atan+3,_asin$3747+3
  6742  0048A0  C1A6  F0A9         	movff	_asin$3747,___flneg@f1
  6743  0048A4  C1A7  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  6744  0048A8  C1A8  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  6745  0048AC  C1A9  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  6746  0048B0  EC0C  F02F         	call	___flneg	;wreg free
  6747  0048B4  C0A9  F0AD         	movff	?___flneg,___fladd@b
  6748  0048B8  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  6749  0048BC  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  6750  0048C0  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  6751  0048C4  0EDB               	movlw	219
  6752  0048C6  0100               	movlb	0	; () banked
  6753  0048C8  6FB1               	movwf	___fladd@a& (0+255),b
  6754  0048CA  0E0F               	movlw	15
  6755  0048CC  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6756  0048CE  0EC9               	movlw	201
  6757  0048D0  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6758  0048D2  0E3F               	movlw	63
  6759  0048D4  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6760  0048D6  EC3D  F015         	call	___fladd	;wreg free
  6761  0048DA  C0AD  F19A         	movff	?___fladd,?_asin
  6762  0048DE  C0AE  F19B         	movff	?___fladd+1,?_asin+1
  6763  0048E2  C0AF  F19C         	movff	?___fladd+2,?_asin+2
  6764  0048E6  C0B0  F19D         	movff	?___fladd+3,?_asin+3
  6765  0048EA  0012               	return	
  6766  0048EC                     __end_of_asin:
  6767                           	opt stack 0
  6768                           tblptru	equ	0xFF8
  6769                           tblptrh	equ	0xFF7
  6770                           tblptrl	equ	0xFF6
  6771                           tablat	equ	0xFF5
  6772                           postinc0	equ	0xFEE
  6773                           wreg	equ	0xFE8
  6774                           postdec1	equ	0xFE5
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           postinc2	equ	0xFDE
  6778                           postdec2	equ	0xFDD
  6779                           fsr2h	equ	0xFDA
  6780                           fsr2l	equ	0xFD9
  6781                           status	equ	0xFD8
  6782                           
  6783 ;; *************** function _sqrt *****************
  6784 ;; Defined at:
  6785 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  a               4   97[BANK0 ] long 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  frac            4  122[BANK0 ] unsigned long 
  6790 ;;  root            4  118[BANK0 ] struct .
  6791 ;;  grs             4  112[BANK0 ] unsigned long 
  6792 ;;  tfrac           4  107[BANK0 ] unsigned long 
  6793 ;;  exp             2  116[BANK0 ] int 
  6794 ;;  p               1  111[BANK0 ] unsigned char 
  6795 ;;  i               1  106[BANK0 ] unsigned char 
  6796 ;;  sign            1  105[BANK0 ] unsigned char 
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  4   97[BANK0 ] unsigned char 
  6799 ;; Registers used:
  6800 ;;		wreg, status,2, status,0
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6807 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6809 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;Total ram usage:       29 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    4
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_parallelo
  6817 ;;		_asin
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text17
  6822  00379A                     __ptext17:
  6823                           	opt stack 0
  6824  00379A                     _sqrt:
  6825                           	opt stack 24
  6826                           
  6827                           ;incstack = 0
  6828  00379A  0100               	movlb	0	; () banked
  6829  00379C  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6830  00379E  0B80               	andlw	128
  6831  0037A0  0100               	movlb	0	; () banked
  6832  0037A2  6FC9               	movwf	sqrt@sign& (0+255),b
  6833  0037A4  0100               	movlb	0	; () banked
  6834  0037A6  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6835  0037A8  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  6836  0037AA  0100               	movlb	0	; () banked
  6837  0037AC  6FCF               	movwf	sqrt@p& (0+255),b
  6838                           
  6839                           ; BSR set to: 0
  6840  0037AE  0100               	movlb	0	; () banked
  6841  0037B0  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  6842  0037B2  D002               	goto	l7000
  6843                           
  6844                           ; BSR set to: 0
  6845  0037B4  0100               	movlb	0	; () banked
  6846  0037B6  81CF               	bsf	sqrt@p& (0+255),0,b
  6847  0037B8                     l7000:
  6848                           
  6849                           ; BSR set to: 0
  6850  0037B8  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  6851  0037BC  0100               	movlb	0	; () banked
  6852  0037BE  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  6853                           
  6854                           ; BSR set to: 0
  6855  0037C0  0EFF               	movlw	255
  6856  0037C2  0100               	movlb	0	; () banked
  6857  0037C4  15C1               	andwf	sqrt@a& (0+255),w,b
  6858  0037C6  0100               	movlb	0	; () banked
  6859  0037C8  6FDA               	movwf	sqrt@frac& (0+255),b
  6860  0037CA  0EFF               	movlw	255
  6861  0037CC  0100               	movlb	0	; () banked
  6862  0037CE  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  6863  0037D0  0100               	movlb	0	; () banked
  6864  0037D2  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6865  0037D4  0E7F               	movlw	127
  6866  0037D6  0100               	movlb	0	; () banked
  6867  0037D8  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  6868  0037DA  0100               	movlb	0	; () banked
  6869  0037DC  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6870  0037DE  0E00               	movlw	0
  6871  0037E0  0100               	movlb	0	; () banked
  6872  0037E2  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  6873  0037E4  0100               	movlb	0	; () banked
  6874  0037E6  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6875                           
  6876                           ; BSR set to: 0
  6877  0037E8  0100               	movlb	0	; () banked
  6878  0037EA  51D4               	movf	sqrt@exp& (0+255),w,b
  6879  0037EC  0100               	movlb	0	; () banked
  6880  0037EE  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6881  0037F0  B4D8               	btfsc	status,2,c
  6882  0037F2  D008               	goto	l7012
  6883                           
  6884                           ; BSR set to: 0
  6885  0037F4  0100               	movlb	0	; () banked
  6886  0037F6  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  6887                           
  6888                           ; BSR set to: 0
  6889  0037F8  0100               	movlb	0	; () banked
  6890  0037FA  29D4               	incf	sqrt@exp& (0+255),w,b
  6891  0037FC  0100               	movlb	0	; () banked
  6892  0037FE  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6893  003800  A4D8               	btfss	status,2,c
  6894  003802  D009               	goto	l7014
  6895  003804                     l7012:
  6896                           
  6897                           ; BSR set to: 0
  6898  003804  0E00               	movlw	0
  6899  003806  0100               	movlb	0	; () banked
  6900  003808  6FDA               	movwf	sqrt@frac& (0+255),b
  6901  00380A  0E00               	movlw	0
  6902  00380C  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6903  00380E  0E00               	movlw	0
  6904  003810  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6905  003812  0E00               	movlw	0
  6906  003814  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6907  003816                     l7014:
  6908                           
  6909                           ; BSR set to: 0
  6910  003816  0100               	movlb	0	; () banked
  6911  003818  51D4               	movf	sqrt@exp& (0+255),w,b
  6912  00381A  0100               	movlb	0	; () banked
  6913  00381C  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6914  00381E  A4D8               	btfss	status,2,c
  6915  003820  D00A               	goto	l7020
  6916                           
  6917                           ; BSR set to: 0
  6918  003822  0E00               	movlw	0
  6919  003824  0100               	movlb	0	; () banked
  6920  003826  6FC1               	movwf	?_sqrt& (0+255),b
  6921  003828  0E00               	movlw	0
  6922  00382A  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  6923  00382C  0E00               	movlw	0
  6924  00382E  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  6925  003830  0E00               	movlw	0
  6926  003832  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  6927                           
  6928                           ; BSR set to: 0
  6929  003834  0012               	return	
  6930  003836                     l7020:
  6931                           
  6932                           ; BSR set to: 0
  6933  003836  0100               	movlb	0	; () banked
  6934  003838  51C9               	movf	sqrt@sign& (0+255),w,b
  6935  00383A  0100               	movlb	0	; () banked
  6936  00383C  B4D8               	btfsc	status,2,c
  6937  00383E  D01C               	goto	l7032
  6938                           
  6939                           ; BSR set to: 0
  6940  003840  0E00               	movlw	0
  6941  003842  0100               	movlb	0	; () banked
  6942  003844  6FD6               	movwf	sqrt@root& (0+255),b
  6943  003846  0E00               	movlw	0
  6944  003848  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  6945  00384A  0E40               	movlw	64
  6946  00384C  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  6947  00384E  0E00               	movlw	0
  6948  003850  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  6949                           
  6950                           ; BSR set to: 0
  6951  003852  0100               	movlb	0	; () banked
  6952  003854  0E80               	movlw	128
  6953  003856  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  6954  003858  0EFF               	movlw	255
  6955  00385A  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  6956                           
  6957                           ; BSR set to: 0
  6958  00385C  0E00               	movlw	0
  6959  00385E  0101               	movlb	1	; () banked
  6960  003860  6F49               	movwf	(_errno+1)& (0+255),b
  6961  003862  0E21               	movlw	33
  6962  003864  6F48               	movwf	_errno& (0+255),b
  6963                           
  6964                           ; BSR set to: 1
  6965  003866  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  6966  00386A  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  6967  00386E  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  6968  003872  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  6969                           
  6970                           ; BSR set to: 1
  6971  003876  0012               	return	
  6972  003878                     l7032:
  6973  003878  0100               	movlb	0	; () banked
  6974  00387A  29D4               	incf	sqrt@exp& (0+255),w,b
  6975  00387C  0100               	movlb	0	; () banked
  6976  00387E  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6977  003880  A4D8               	btfss	status,2,c
  6978  003882  D012               	goto	l7040
  6979                           
  6980                           ; BSR set to: 0
  6981  003884  0E00               	movlw	0
  6982  003886  0100               	movlb	0	; () banked
  6983  003888  6FD6               	movwf	sqrt@root& (0+255),b
  6984  00388A  0E00               	movlw	0
  6985  00388C  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  6986  00388E  0E80               	movlw	128
  6987  003890  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  6988  003892  0E7F               	movlw	127
  6989  003894  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  6990                           
  6991                           ; BSR set to: 0
  6992  003896  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  6993  00389A  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  6994  00389E  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  6995  0038A2  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  6996                           
  6997                           ; BSR set to: 0
  6998  0038A6  0012               	return	
  6999  0038A8                     l7040:
  7000                           
  7001                           ; BSR set to: 0
  7002  0038A8  0100               	movlb	0	; () banked
  7003  0038AA  0E81               	movlw	129
  7004  0038AC  27D4               	addwf	sqrt@exp& (0+255),f,b
  7005  0038AE  0EFF               	movlw	255
  7006  0038B0  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7007  0038B2  0100               	movlb	0	; () banked
  7008  0038B4  51D4               	movf	sqrt@exp& (0+255),w,b
  7009  0038B6  0B01               	andlw	1
  7010  0038B8  0100               	movlb	0	; () banked
  7011  0038BA  6FCF               	movwf	sqrt@p& (0+255),b
  7012  0038BC  0100               	movlb	0	; () banked
  7013  0038BE  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7014  0038C0  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7015  0038C2  33D4               	rrcf	sqrt@exp& (0+255),f,b
  7016  0038C4  0E7F               	movlw	127
  7017  0038C6  0100               	movlb	0	; () banked
  7018  0038C8  27D4               	addwf	sqrt@exp& (0+255),f,b
  7019  0038CA  0E00               	movlw	0
  7020  0038CC  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7021  0038CE  90D8               	bcf	status,0,c
  7022  0038D0  0100               	movlb	0	; () banked
  7023  0038D2  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7024  0038D4  0100               	movlb	0	; () banked
  7025  0038D6  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7026  0038D8  0100               	movlb	0	; () banked
  7027  0038DA  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7028  0038DC  0100               	movlb	0	; () banked
  7029  0038DE  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7030  0038E0  0100               	movlb	0	; () banked
  7031  0038E2  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7032  0038E4  0100               	movlb	0	; () banked
  7033  0038E6  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7034  0038E8  0100               	movlb	0	; () banked
  7035  0038EA  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7036  0038EC  0100               	movlb	0	; () banked
  7037  0038EE  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7038                           
  7039                           ; BSR set to: 0
  7040  0038F0  0E00               	movlw	0
  7041  0038F2  0100               	movlb	0	; () banked
  7042  0038F4  6FDA               	movwf	sqrt@frac& (0+255),b
  7043  0038F6  0E00               	movlw	0
  7044  0038F8  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7045  0038FA  0E00               	movlw	0
  7046  0038FC  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7047  0038FE  0E00               	movlw	0
  7048  003900  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7049                           
  7050                           ; BSR set to: 0
  7051  003902  0E00               	movlw	0
  7052  003904  0100               	movlb	0	; () banked
  7053  003906  6FD0               	movwf	sqrt@grs& (0+255),b
  7054  003908  0E00               	movlw	0
  7055  00390A  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7056  00390C  0E00               	movlw	0
  7057  00390E  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7058  003910  0E01               	movlw	1
  7059  003912  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7060                           
  7061                           ; BSR set to: 0
  7062  003914  0100               	movlb	0	; () banked
  7063  003916  51CF               	movf	sqrt@p& (0+255),w,b
  7064  003918  0100               	movlb	0	; () banked
  7065  00391A  B4D8               	btfsc	status,2,c
  7066  00391C  D006               	goto	l7050
  7067                           
  7068                           ; BSR set to: 0
  7069  00391E  0100               	movlb	0	; () banked
  7070  003920  90D8               	bcf	status,0,c
  7071  003922  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7072  003924  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7073  003926  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7074  003928  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7075  00392A                     l7050:
  7076                           
  7077                           ; BSR set to: 0
  7078  00392A  0E00               	movlw	0
  7079  00392C  0100               	movlb	0	; () banked
  7080  00392E  6FCA               	movwf	sqrt@i& (0+255),b
  7081  003930  D07E               	goto	l7064
  7082  003932                     l7052:
  7083                           
  7084                           ; BSR set to: 0
  7085  003932  0100               	movlb	0	; () banked
  7086  003934  51D0               	movf	sqrt@grs& (0+255),w,b
  7087  003936  0100               	movlb	0	; () banked
  7088  003938  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7089  00393A  0100               	movlb	0	; () banked
  7090  00393C  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7091  00393E  0100               	movlb	0	; () banked
  7092  003940  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7093  003942  0100               	movlb	0	; () banked
  7094  003944  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7095  003946  0100               	movlb	0	; () banked
  7096  003948  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7097  00394A  0100               	movlb	0	; () banked
  7098  00394C  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7099  00394E  0100               	movlb	0	; () banked
  7100  003950  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7101  003952  0100               	movlb	0	; () banked
  7102  003954  51DA               	movf	sqrt@frac& (0+255),w,b
  7103  003956  0100               	movlb	0	; () banked
  7104  003958  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7105  00395A  0100               	movlb	0	; () banked
  7106  00395C  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7107  00395E  0100               	movlb	0	; () banked
  7108  003960  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7109  003962  0100               	movlb	0	; () banked
  7110  003964  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7111  003966  0100               	movlb	0	; () banked
  7112  003968  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7113  00396A  0100               	movlb	0	; () banked
  7114  00396C  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7115  00396E  0100               	movlb	0	; () banked
  7116  003970  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7117  003972  A0D8               	btfss	status,0,c
  7118  003974  D021               	goto	l7056
  7119                           
  7120                           ; BSR set to: 0
  7121  003976  0100               	movlb	0	; () banked
  7122  003978  51DA               	movf	sqrt@frac& (0+255),w,b
  7123  00397A  0100               	movlb	0	; () banked
  7124  00397C  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7125  00397E  0100               	movlb	0	; () banked
  7126  003980  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7127  003982  0100               	movlb	0	; () banked
  7128  003984  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7129  003986  0100               	movlb	0	; () banked
  7130  003988  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7131  00398A  0100               	movlb	0	; () banked
  7132  00398C  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7133  00398E  0100               	movlb	0	; () banked
  7134  003990  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7135  003992  0100               	movlb	0	; () banked
  7136  003994  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7137  003996  0100               	movlb	0	; () banked
  7138  003998  51D0               	movf	sqrt@grs& (0+255),w,b
  7139  00399A  0100               	movlb	0	; () banked
  7140  00399C  27DA               	addwf	sqrt@frac& (0+255),f,b
  7141  00399E  0100               	movlb	0	; () banked
  7142  0039A0  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7143  0039A2  0100               	movlb	0	; () banked
  7144  0039A4  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7145  0039A6  0100               	movlb	0	; () banked
  7146  0039A8  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7147  0039AA  0100               	movlb	0	; () banked
  7148  0039AC  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7149  0039AE  0100               	movlb	0	; () banked
  7150  0039B0  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7151  0039B2  0100               	movlb	0	; () banked
  7152  0039B4  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7153  0039B6  D01D               	goto	l7058
  7154  0039B8                     l7056:
  7155                           
  7156                           ; BSR set to: 0
  7157  0039B8  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7158  0039BC  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7159  0039C0  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7160  0039C4  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7161  0039C8  0100               	movlb	0	; () banked
  7162  0039CA  1FC5               	comf	??_sqrt& (0+255),f,b
  7163  0039CC  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7164  0039CE  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7165  0039D0  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7166  0039D2  0100               	movlb	0	; () banked
  7167  0039D4  51C5               	movf	??_sqrt& (0+255),w,b
  7168  0039D6  0100               	movlb	0	; () banked
  7169  0039D8  17DA               	andwf	sqrt@frac& (0+255),f,b
  7170  0039DA  0100               	movlb	0	; () banked
  7171  0039DC  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7172  0039DE  0100               	movlb	0	; () banked
  7173  0039E0  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7174  0039E2  0100               	movlb	0	; () banked
  7175  0039E4  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7176  0039E6  0100               	movlb	0	; () banked
  7177  0039E8  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7178  0039EA  0100               	movlb	0	; () banked
  7179  0039EC  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7180  0039EE  0100               	movlb	0	; () banked
  7181  0039F0  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7182  0039F2                     l7058:
  7183                           
  7184                           ; BSR set to: 0
  7185  0039F2  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7186  0039F6  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7187  0039FA  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7188  0039FE  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7189  003A02  0100               	movlb	0	; () banked
  7190  003A04  90D8               	bcf	status,0,c
  7191  003A06  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7192  003A08  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7193  003A0A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7194  003A0C  33C5               	rrcf	??_sqrt& (0+255),f,b
  7195  003A0E  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7196  003A12  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7197  003A16  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7198  003A1A  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7199                           
  7200                           ; BSR set to: 0
  7201  003A1E  0100               	movlb	0	; () banked
  7202  003A20  90D8               	bcf	status,0,c
  7203  003A22  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7204  003A24  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7205  003A26  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7206  003A28  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7207                           
  7208                           ; BSR set to: 0
  7209  003A2A  0100               	movlb	0	; () banked
  7210  003A2C  2BCA               	incf	sqrt@i& (0+255),f,b
  7211  003A2E                     l7064:
  7212                           
  7213                           ; BSR set to: 0
  7214  003A2E  0E18               	movlw	24
  7215  003A30  0100               	movlb	0	; () banked
  7216  003A32  65CA               	cpfsgt	sqrt@i& (0+255),b
  7217  003A34  D77E               	goto	l7052
  7218                           
  7219                           ; BSR set to: 0
  7220                           
  7221                           ; BSR set to: 0
  7222  003A36  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7223  003A3A  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7224  003A3E  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7225  003A42  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7226  003A46  0100               	movlb	0	; () banked
  7227  003A48  90D8               	bcf	status,0,c
  7228  003A4A  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7229  003A4C  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7230  003A4E  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7231  003A50  33C5               	rrcf	??_sqrt& (0+255),f,b
  7232  003A52  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7233  003A56  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7234  003A5A  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7235  003A5E  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7236                           
  7237                           ; BSR set to: 0
  7238  003A62  0E01               	movlw	1
  7239  003A64  0100               	movlb	0	; () banked
  7240  003A66  15DA               	andwf	sqrt@frac& (0+255),w,b
  7241  003A68  0100               	movlb	0	; () banked
  7242  003A6A  6FD0               	movwf	sqrt@grs& (0+255),b
  7243  003A6C  0E00               	movlw	0
  7244  003A6E  0100               	movlb	0	; () banked
  7245  003A70  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7246  003A72  0100               	movlb	0	; () banked
  7247  003A74  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7248  003A76  0E00               	movlw	0
  7249  003A78  0100               	movlb	0	; () banked
  7250  003A7A  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7251  003A7C  0100               	movlb	0	; () banked
  7252  003A7E  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7253  003A80  0E00               	movlw	0
  7254  003A82  0100               	movlb	0	; () banked
  7255  003A84  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7256  003A86  0100               	movlb	0	; () banked
  7257  003A88  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7258                           
  7259                           ; BSR set to: 0
  7260  003A8A  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7261  003A8E  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7262  003A92  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7263  003A96  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7264  003A9A  0100               	movlb	0	; () banked
  7265  003A9C  90D8               	bcf	status,0,c
  7266  003A9E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7267  003AA0  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7268  003AA2  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7269  003AA4  33C5               	rrcf	??_sqrt& (0+255),f,b
  7270  003AA6  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7271  003AAA  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7272  003AAE  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7273  003AB2  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7274  003AB6  0100               	movlb	0	; () banked
  7275  003AB8  51D0               	movf	sqrt@grs& (0+255),w,b
  7276  003ABA  0100               	movlb	0	; () banked
  7277  003ABC  27DA               	addwf	sqrt@frac& (0+255),f,b
  7278  003ABE  0100               	movlb	0	; () banked
  7279  003AC0  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7280  003AC2  0100               	movlb	0	; () banked
  7281  003AC4  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7282  003AC6  0100               	movlb	0	; () banked
  7283  003AC8  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7284  003ACA  0100               	movlb	0	; () banked
  7285  003ACC  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7286  003ACE  0100               	movlb	0	; () banked
  7287  003AD0  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7288  003AD2  0100               	movlb	0	; () banked
  7289  003AD4  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7290                           
  7291                           ; BSR set to: 0
  7292  003AD6  0100               	movlb	0	; () banked
  7293  003AD8  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7294  003ADA  D019               	goto	l7076
  7295                           
  7296                           ; BSR set to: 0
  7297  003ADC  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7298  003AE0  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7299  003AE4  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7300  003AE8  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7301  003AEC  0100               	movlb	0	; () banked
  7302  003AEE  90D8               	bcf	status,0,c
  7303  003AF0  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7304  003AF2  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7305  003AF4  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7306  003AF6  33C5               	rrcf	??_sqrt& (0+255),f,b
  7307  003AF8  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7308  003AFC  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7309  003B00  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7310  003B04  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7311  003B08  0100               	movlb	0	; () banked
  7312  003B0A  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7313  003B0C  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7314  003B0E                     l7076:
  7315                           
  7316                           ; BSR set to: 0
  7317  003B0E  0EFF               	movlw	255
  7318  003B10  0100               	movlb	0	; () banked
  7319  003B12  15DA               	andwf	sqrt@frac& (0+255),w,b
  7320  003B14  0100               	movlb	0	; () banked
  7321  003B16  6FD6               	movwf	sqrt@root& (0+255),b
  7322  003B18  0EFF               	movlw	255
  7323  003B1A  0100               	movlb	0	; () banked
  7324  003B1C  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7325  003B1E  0100               	movlb	0	; () banked
  7326  003B20  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7327  003B22  0E7F               	movlw	127
  7328  003B24  0100               	movlb	0	; () banked
  7329  003B26  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7330  003B28  0100               	movlb	0	; () banked
  7331  003B2A  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7332  003B2C  0E00               	movlw	0
  7333  003B2E  0100               	movlb	0	; () banked
  7334  003B30  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7335  003B32  0100               	movlb	0	; () banked
  7336  003B34  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7337                           
  7338                           ; BSR set to: 0
  7339  003B36  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7340                           
  7341                           ; BSR set to: 0
  7342  003B3A  0100               	movlb	0	; () banked
  7343  003B3C  A1CF               	btfss	sqrt@p& (0+255),0,b
  7344  003B3E  D002               	goto	l7084
  7345                           
  7346                           ; BSR set to: 0
  7347  003B40  0100               	movlb	0	; () banked
  7348  003B42  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7349  003B44                     l7084:
  7350                           
  7351                           ; BSR set to: 0
  7352  003B44  0100               	movlb	0	; () banked
  7353  003B46  90D8               	bcf	status,0,c
  7354  003B48  31CF               	rrcf	sqrt@p& (0+255),w,b
  7355  003B4A  0100               	movlb	0	; () banked
  7356  003B4C  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7357                           
  7358                           ; BSR set to: 0
  7359  003B4E  0100               	movlb	0	; () banked
  7360  003B50  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7361                           
  7362                           ; BSR set to: 0
  7363  003B52  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7364  003B56  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7365  003B5A  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7366  003B5E  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7367  003B62  0012               	return	
  7368  003B64                     __end_of_sqrt:
  7369                           	opt stack 0
  7370                           tblptru	equ	0xFF8
  7371                           tblptrh	equ	0xFF7
  7372                           tblptrl	equ	0xFF6
  7373                           tablat	equ	0xFF5
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           fsr1l	equ	0xFE1
  7378                           indf2	equ	0xFDF
  7379                           postinc2	equ	0xFDE
  7380                           postdec2	equ	0xFDD
  7381                           fsr2h	equ	0xFDA
  7382                           fsr2l	equ	0xFD9
  7383                           status	equ	0xFD8
  7384                           
  7385 ;; *************** function _atan *****************
  7386 ;; Defined at:
  7387 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  f               4  113[BANK0 ] unsigned char 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  val             4   13[BANK1 ] unsigned char 
  7392 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7393 ;;  x               4    4[BANK1 ] unsigned char 
  7394 ;;  y               4    0[BANK1 ] unsigned char 
  7395 ;;  recip           1    8[BANK1 ] unsigned char 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  4  113[BANK0 ] unsigned char 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;Total ram usage:       21 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:    6
  7412 ;; This function calls:
  7413 ;;		___fladd
  7414 ;;		___fldiv
  7415 ;;		___flge
  7416 ;;		___flmul
  7417 ;;		___flneg
  7418 ;;		_eval_poly
  7419 ;;		_fabs
  7420 ;; This function is called by:
  7421 ;;		_asin
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text18
  7426  004B78                     __ptext18:
  7427                           	opt stack 0
  7428  004B78                     _atan:
  7429                           	opt stack 21
  7430                           
  7431                           ;incstack = 0
  7432  004B78  C0D1  F0AD         	movff	atan@f,fabs@d
  7433  004B7C  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  7434  004B80  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  7435  004B84  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  7436  004B88  ECD0  F02E         	call	_fabs	;wreg free
  7437  004B8C  C0AD  F196         	movff	?_fabs,atan@val
  7438  004B90  C0AE  F197         	movff	?_fabs+1,atan@val+1
  7439  004B94  C0AF  F198         	movff	?_fabs+2,atan@val+2
  7440  004B98  C0B0  F199         	movff	?_fabs+3,atan@val+3
  7441  004B9C  0101               	movlb	1	; () banked
  7442  004B9E  5196               	movf	atan@val& (0+255),w,b
  7443  004BA0  0101               	movlb	1	; () banked
  7444  004BA2  1197               	iorwf	(atan@val+1)& (0+255),w,b
  7445  004BA4  0101               	movlb	1	; () banked
  7446  004BA6  1198               	iorwf	(atan@val+2)& (0+255),w,b
  7447  004BA8  0101               	movlb	1	; () banked
  7448  004BAA  1199               	iorwf	(atan@val+3)& (0+255),w,b
  7449  004BAC  A4D8               	btfss	status,2,c
  7450  004BAE  D00A               	goto	l7104
  7451                           
  7452                           ; BSR set to: 1
  7453  004BB0  0E00               	movlw	0
  7454  004BB2  0100               	movlb	0	; () banked
  7455  004BB4  6FD1               	movwf	?_atan& (0+255),b
  7456  004BB6  0E00               	movlw	0
  7457  004BB8  6FD2               	movwf	(?_atan+1)& (0+255),b
  7458  004BBA  0E00               	movlw	0
  7459  004BBC  6FD3               	movwf	(?_atan+2)& (0+255),b
  7460  004BBE  0E00               	movlw	0
  7461  004BC0  6FD4               	movwf	(?_atan+3)& (0+255),b
  7462                           
  7463                           ; BSR set to: 0
  7464  004BC2  0012               	return	
  7465  004BC4                     l7104:
  7466  004BC4  0E00               	movlw	0
  7467  004BC6  0100               	movlb	0	; () banked
  7468  004BC8  6FB1               	movwf	___flge@ff1& (0+255),b
  7469  004BCA  0E00               	movlw	0
  7470  004BCC  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7471  004BCE  0E80               	movlw	128
  7472  004BD0  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7473  004BD2  0E3F               	movlw	63
  7474  004BD4  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7475  004BD6  C196  F0B5         	movff	atan@val,___flge@ff2
  7476  004BDA  C197  F0B6         	movff	atan@val+1,___flge@ff2+1
  7477  004BDE  C198  F0B7         	movff	atan@val+2,___flge@ff2+2
  7478  004BE2  C199  F0B8         	movff	atan@val+3,___flge@ff2+3
  7479  004BE6  EC85  F029         	call	___flge	;wreg free
  7480  004BEA  0100               	movlb	0	; () banked
  7481  004BEC  B0D8               	btfsc	status,0,c
  7482  004BEE  D002               	goto	u9030
  7483  004BF0  0E01               	movlw	1
  7484  004BF2  D001               	goto	u9040
  7485  004BF4                     u9030:
  7486  004BF4  0E00               	movlw	0
  7487  004BF6                     u9040:
  7488  004BF6  0101               	movlb	1	; () banked
  7489  004BF8  6F91               	movwf	atan@recip& (0+255),b
  7490  004BFA  0101               	movlb	1	; () banked
  7491  004BFC  5191               	movf	atan@recip& (0+255),w,b
  7492  004BFE  B4D8               	btfsc	status,2,c
  7493  004C00  D01B               	goto	l7108
  7494                           
  7495                           ; BSR set to: 1
  7496  004C02  0E00               	movlw	0
  7497  004C04  0100               	movlb	0	; () banked
  7498  004C06  6F77               	movwf	___fldiv@b& (0+255),b
  7499  004C08  0E00               	movlw	0
  7500  004C0A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7501  004C0C  0E80               	movlw	128
  7502  004C0E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7503  004C10  0E3F               	movlw	63
  7504  004C12  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7505  004C14  C196  F07B         	movff	atan@val,___fldiv@a
  7506  004C18  C197  F07C         	movff	atan@val+1,___fldiv@a+1
  7507  004C1C  C198  F07D         	movff	atan@val+2,___fldiv@a+2
  7508  004C20  C199  F07E         	movff	atan@val+3,___fldiv@a+3
  7509  004C24  ECB2  F01D         	call	___fldiv	;wreg free
  7510  004C28  C077  F196         	movff	?___fldiv,atan@val
  7511  004C2C  C078  F197         	movff	?___fldiv+1,atan@val+1
  7512  004C30  C079  F198         	movff	?___fldiv+2,atan@val+2
  7513  004C34  C07A  F199         	movff	?___fldiv+3,atan@val+3
  7514  004C38                     l7108:
  7515  004C38  C196  F090         	movff	atan@val,___flmul@b
  7516  004C3C  C197  F091         	movff	atan@val+1,___flmul@b+1
  7517  004C40  C198  F092         	movff	atan@val+2,___flmul@b+2
  7518  004C44  C199  F093         	movff	atan@val+3,___flmul@b+3
  7519  004C48  C196  F094         	movff	atan@val,___flmul@a
  7520  004C4C  C197  F095         	movff	atan@val+1,___flmul@a+1
  7521  004C50  C198  F096         	movff	atan@val+2,___flmul@a+2
  7522  004C54  C199  F097         	movff	atan@val+3,___flmul@a+3
  7523  004C58  EC91  F017         	call	___flmul	;wreg free
  7524  004C5C  C090  F192         	movff	?___flmul,atan@val_squared
  7525  004C60  C091  F193         	movff	?___flmul+1,atan@val_squared+1
  7526  004C64  C092  F194         	movff	?___flmul+2,atan@val_squared+2
  7527  004C68  C093  F195         	movff	?___flmul+3,atan@val_squared+3
  7528  004C6C  C192  F0C1         	movff	atan@val_squared,eval_poly@x
  7529  004C70  C193  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  7530  004C74  C194  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  7531  004C78  C195  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  7532  004C7C  0E19               	movlw	low atan@coeff_b
  7533  004C7E  0100               	movlb	0	; () banked
  7534  004C80  6FC5               	movwf	eval_poly@d& (0+255),b
  7535  004C82  0E0D               	movlw	high atan@coeff_b
  7536  004C84  0100               	movlb	0	; () banked
  7537  004C86  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  7538  004C88  0E00               	movlw	0
  7539  004C8A  0100               	movlb	0	; () banked
  7540  004C8C  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  7541  004C8E  0E04               	movlw	4
  7542  004C90  6FC7               	movwf	eval_poly@n& (0+255),b
  7543  004C92  EC7A  F02B         	call	_eval_poly	;wreg free
  7544  004C96  C0C1  F189         	movff	?_eval_poly,atan@y
  7545  004C9A  C0C2  F18A         	movff	?_eval_poly+1,atan@y+1
  7546  004C9E  C0C3  F18B         	movff	?_eval_poly+2,atan@y+2
  7547  004CA2  C0C4  F18C         	movff	?_eval_poly+3,atan@y+3
  7548  004CA6  C192  F0C1         	movff	atan@val_squared,eval_poly@x
  7549  004CAA  C193  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  7550  004CAE  C194  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  7551  004CB2  C195  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  7552  004CB6  0E01               	movlw	low atan@coeff_a
  7553  004CB8  0100               	movlb	0	; () banked
  7554  004CBA  6FC5               	movwf	eval_poly@d& (0+255),b
  7555  004CBC  0E0D               	movlw	high atan@coeff_a
  7556  004CBE  0100               	movlb	0	; () banked
  7557  004CC0  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  7558  004CC2  0E00               	movlw	0
  7559  004CC4  0100               	movlb	0	; () banked
  7560  004CC6  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  7561  004CC8  0E05               	movlw	5
  7562  004CCA  6FC7               	movwf	eval_poly@n& (0+255),b
  7563  004CCC  EC7A  F02B         	call	_eval_poly	;wreg free
  7564  004CD0  C0C1  F18D         	movff	?_eval_poly,atan@x
  7565  004CD4  C0C2  F18E         	movff	?_eval_poly+1,atan@x+1
  7566  004CD8  C0C3  F18F         	movff	?_eval_poly+2,atan@x+2
  7567  004CDC  C0C4  F190         	movff	?_eval_poly+3,atan@x+3
  7568  004CE0  C196  F090         	movff	atan@val,___flmul@b
  7569  004CE4  C197  F091         	movff	atan@val+1,___flmul@b+1
  7570  004CE8  C198  F092         	movff	atan@val+2,___flmul@b+2
  7571  004CEC  C199  F093         	movff	atan@val+3,___flmul@b+3
  7572  004CF0  C189  F07B         	movff	atan@y,___fldiv@a
  7573  004CF4  C18A  F07C         	movff	atan@y+1,___fldiv@a+1
  7574  004CF8  C18B  F07D         	movff	atan@y+2,___fldiv@a+2
  7575  004CFC  C18C  F07E         	movff	atan@y+3,___fldiv@a+3
  7576  004D00  C18D  F077         	movff	atan@x,___fldiv@b
  7577  004D04  C18E  F078         	movff	atan@x+1,___fldiv@b+1
  7578  004D08  C18F  F079         	movff	atan@x+2,___fldiv@b+2
  7579  004D0C  C190  F07A         	movff	atan@x+3,___fldiv@b+3
  7580  004D10  ECB2  F01D         	call	___fldiv	;wreg free
  7581  004D14  C077  F094         	movff	?___fldiv,___flmul@a
  7582  004D18  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7583  004D1C  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7584  004D20  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7585  004D24  EC91  F017         	call	___flmul	;wreg free
  7586  004D28  C090  F196         	movff	?___flmul,atan@val
  7587  004D2C  C091  F197         	movff	?___flmul+1,atan@val+1
  7588  004D30  C092  F198         	movff	?___flmul+2,atan@val+2
  7589  004D34  C093  F199         	movff	?___flmul+3,atan@val+3
  7590  004D38  0101               	movlb	1	; () banked
  7591  004D3A  5191               	movf	atan@recip& (0+255),w,b
  7592  004D3C  0101               	movlb	1	; () banked
  7593  004D3E  B4D8               	btfsc	status,2,c
  7594  004D40  D025               	goto	l7120
  7595                           
  7596                           ; BSR set to: 1
  7597  004D42  C196  F0A9         	movff	atan@val,___flneg@f1
  7598  004D46  C197  F0AA         	movff	atan@val+1,___flneg@f1+1
  7599  004D4A  C198  F0AB         	movff	atan@val+2,___flneg@f1+2
  7600  004D4E  C199  F0AC         	movff	atan@val+3,___flneg@f1+3
  7601  004D52  EC0C  F02F         	call	___flneg	;wreg free
  7602  004D56  C0A9  F0AD         	movff	?___flneg,___fladd@b
  7603  004D5A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  7604  004D5E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  7605  004D62  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  7606  004D66  0EDB               	movlw	219
  7607  004D68  0100               	movlb	0	; () banked
  7608  004D6A  6FB1               	movwf	___fladd@a& (0+255),b
  7609  004D6C  0E0F               	movlw	15
  7610  004D6E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7611  004D70  0EC9               	movlw	201
  7612  004D72  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7613  004D74  0E3F               	movlw	63
  7614  004D76  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7615  004D78  EC3D  F015         	call	___fladd	;wreg free
  7616  004D7C  C0AD  F196         	movff	?___fladd,atan@val
  7617  004D80  C0AE  F197         	movff	?___fladd+1,atan@val+1
  7618  004D84  C0AF  F198         	movff	?___fladd+2,atan@val+2
  7619  004D88  C0B0  F199         	movff	?___fladd+3,atan@val+3
  7620  004D8C                     l7120:
  7621  004D8C  0100               	movlb	0	; () banked
  7622  004D8E  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7623  004D90  D009               	goto	l7124
  7624                           
  7625                           ; BSR set to: 0
  7626  004D92  C196  F0D1         	movff	atan@val,?_atan
  7627  004D96  C197  F0D2         	movff	atan@val+1,?_atan+1
  7628  004D9A  C198  F0D3         	movff	atan@val+2,?_atan+2
  7629  004D9E  C199  F0D4         	movff	atan@val+3,?_atan+3
  7630  004DA2  0012               	return	
  7631  004DA4                     l7124:
  7632                           
  7633                           ; BSR set to: 0
  7634  004DA4  C196  F0A9         	movff	atan@val,___flneg@f1
  7635  004DA8  C197  F0AA         	movff	atan@val+1,___flneg@f1+1
  7636  004DAC  C198  F0AB         	movff	atan@val+2,___flneg@f1+2
  7637  004DB0  C199  F0AC         	movff	atan@val+3,___flneg@f1+3
  7638  004DB4  EC0C  F02F         	call	___flneg	;wreg free
  7639  004DB8  C0A9  F0D1         	movff	?___flneg,?_atan
  7640  004DBC  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  7641  004DC0  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  7642  004DC4  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  7643  004DC8  0012               	return	
  7644  004DCA                     __end_of_atan:
  7645                           	opt stack 0
  7646                           tblptru	equ	0xFF8
  7647                           tblptrh	equ	0xFF7
  7648                           tblptrl	equ	0xFF6
  7649                           tablat	equ	0xFF5
  7650                           postinc0	equ	0xFEE
  7651                           wreg	equ	0xFE8
  7652                           postdec1	equ	0xFE5
  7653                           fsr1l	equ	0xFE1
  7654                           indf2	equ	0xFDF
  7655                           postinc2	equ	0xFDE
  7656                           postdec2	equ	0xFDD
  7657                           fsr2h	equ	0xFDA
  7658                           fsr2l	equ	0xFD9
  7659                           status	equ	0xFD8
  7660                           
  7661 ;; *************** function _fabs *****************
  7662 ;; Defined at:
  7663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  d               4   77[BANK0 ] unsigned char 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  4   77[BANK0 ] unsigned char 
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7677 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;Total ram usage:        4 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:    5
  7684 ;; This function calls:
  7685 ;;		___flneg
  7686 ;; This function is called by:
  7687 ;;		_asin
  7688 ;;		_atan
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text19
  7693  005DA0                     __ptext19:
  7694                           	opt stack 0
  7695  005DA0                     _fabs:
  7696                           	opt stack 22
  7697                           
  7698                           ;incstack = 0
  7699  005DA0  0100               	movlb	0	; () banked
  7700  005DA2  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  7701  005DA4  D013               	goto	l1052
  7702                           
  7703                           ; BSR set to: 0
  7704  005DA6  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  7705  005DAA  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  7706  005DAE  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  7707  005DB2  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  7708  005DB6  EC0C  F02F         	call	___flneg	;wreg free
  7709  005DBA  C0A9  F0AD         	movff	?___flneg,?_fabs
  7710  005DBE  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  7711  005DC2  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  7712  005DC6  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  7713  005DCA  0012               	return	
  7714  005DCC                     l1052:
  7715                           
  7716                           ; BSR set to: 0
  7717  005DCC  C0AD  F0AD         	movff	fabs@d,?_fabs
  7718  005DD0  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  7719  005DD4  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  7720  005DD8  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  7721  005DDC  0012               	return		;funcret
  7722  005DDE                     __end_of_fabs:
  7723                           	opt stack 0
  7724                           tblptru	equ	0xFF8
  7725                           tblptrh	equ	0xFF7
  7726                           tblptrl	equ	0xFF6
  7727                           tablat	equ	0xFF5
  7728                           postinc0	equ	0xFEE
  7729                           wreg	equ	0xFE8
  7730                           postdec1	equ	0xFE5
  7731                           fsr1l	equ	0xFE1
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           postdec2	equ	0xFDD
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function ___flneg *****************
  7740 ;; Defined at:
  7741 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  f1              4   73[BANK0 ] unsigned char 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  4   73[BANK0 ] unsigned char 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;Total ram usage:        4 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    4
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_park_routine
  7766 ;;		_matematica
  7767 ;;		_asin
  7768 ;;		_atan
  7769 ;;		_fabs
  7770 ;;		_sin
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text20
  7775  005E18                     __ptext20:
  7776                           	opt stack 0
  7777  005E18                     ___flneg:
  7778                           	opt stack 22
  7779                           
  7780                           ;incstack = 0
  7781  005E18  0100               	movlb	0	; () banked
  7782  005E1A  51A9               	movf	___flneg@f1& (0+255),w,b
  7783  005E1C  0100               	movlb	0	; () banked
  7784  005E1E  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7785  005E20  0100               	movlb	0	; () banked
  7786  005E22  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7787  005E24  0100               	movlb	0	; () banked
  7788  005E26  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7789  005E28  B4D8               	btfsc	status,2,c
  7790  005E2A  D009               	goto	l6468
  7791                           
  7792                           ; BSR set to: 0
  7793  005E2C  0E00               	movlw	0
  7794  005E2E  0100               	movlb	0	; () banked
  7795  005E30  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  7796  005E32  0E00               	movlw	0
  7797  005E34  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7798  005E36  0E00               	movlw	0
  7799  005E38  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7800  005E3A  0E80               	movlw	128
  7801  005E3C  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7802  005E3E                     l6468:
  7803                           
  7804                           ; BSR set to: 0
  7805  005E3E  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  7806  005E42  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  7807  005E46  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  7808  005E4A  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  7809  005E4E  0012               	return	
  7810  005E50                     __end_of___flneg:
  7811                           	opt stack 0
  7812                           tblptru	equ	0xFF8
  7813                           tblptrh	equ	0xFF7
  7814                           tblptrl	equ	0xFF6
  7815                           tablat	equ	0xFF5
  7816                           postinc0	equ	0xFEE
  7817                           wreg	equ	0xFE8
  7818                           postdec1	equ	0xFE5
  7819                           fsr1l	equ	0xFE1
  7820                           indf2	equ	0xFDF
  7821                           postinc2	equ	0xFDE
  7822                           postdec2	equ	0xFDD
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function _eval_poly *****************
  7828 ;; Defined at:
  7829 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  x               4   97[BANK0 ] unsigned char 
  7832 ;;  d               2  101[BANK0 ] PTR const 
  7833 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  7834 ;;  n               2  103[BANK0 ] int 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  res             4  109[BANK0 ] int 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  4   97[BANK0 ] int 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7846 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;Total ram usage:       16 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    5
  7853 ;; This function calls:
  7854 ;;		___fladd
  7855 ;;		___flmul
  7856 ;; This function is called by:
  7857 ;;		_atan
  7858 ;;		_sin
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text21
  7863  0056F4                     __ptext21:
  7864                           	opt stack 0
  7865  0056F4                     _eval_poly:
  7866                           	opt stack 21
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;incstack = 0
  7870  0056F4  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  7871  0056F8  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  7872  0056FC  0100               	movlb	0	; () banked
  7873  0056FE  90D8               	bcf	status,0,c
  7874  005700  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7875  005702  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7876  005704  0100               	movlb	0	; () banked
  7877  005706  90D8               	bcf	status,0,c
  7878  005708  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7879  00570A  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7880  00570C  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  7881  005710  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  7882  005714  0100               	movlb	0	; () banked
  7883  005716  51C9               	movf	??_eval_poly& (0+255),w,b
  7884  005718  0100               	movlb	0	; () banked
  7885  00571A  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  7886  00571C  0100               	movlb	0	; () banked
  7887  00571E  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  7888  005720  0100               	movlb	0	; () banked
  7889  005722  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  7890  005724  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  7891  005728  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  7892  00572C                     	if	0	;tblptru may be non-zero
  7893  00572C                     	endif
  7894  00572C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7895  00572C  0E00               	movlw	low (__mediumconst shr (0+16))
  7896  00572E  6EF8               	movwf	tblptru,c
  7897  005730                     	endif
  7898  005730  0009               	tblrd		*+
  7899  005732  CFF5 F0CD          	movff	tablat,eval_poly@res
  7900  005736  0009               	tblrd		*+
  7901  005738  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  7902  00573C  0009               	tblrd		*+
  7903  00573E  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  7904  005742  000A               	tblrd		*-
  7905  005744  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  7906  005748  D052               	goto	l6726
  7907  00574A                     l6724:
  7908                           
  7909                           ; BSR set to: 0
  7910  00574A  C0CD  F094         	movff	eval_poly@res,___flmul@a
  7911  00574E  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  7912  005752  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  7913  005756  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  7914  00575A  C0C1  F090         	movff	eval_poly@x,___flmul@b
  7915  00575E  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  7916  005762  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  7917  005766  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  7918  00576A  EC91  F017         	call	___flmul	;wreg free
  7919  00576E  C090  F0AD         	movff	?___flmul,___fladd@b
  7920  005772  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  7921  005776  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  7922  00577A  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  7923  00577E  0100               	movlb	0	; () banked
  7924  005780  07C7               	decf	eval_poly@n& (0+255),f,b
  7925  005782  A0D8               	btfss	status,0,c
  7926  005784  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  7927  005786  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  7928  00578A  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  7929  00578E  0100               	movlb	0	; () banked
  7930  005790  90D8               	bcf	status,0,c
  7931  005792  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7932  005794  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7933  005796  0100               	movlb	0	; () banked
  7934  005798  90D8               	bcf	status,0,c
  7935  00579A  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7936  00579C  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7937  00579E  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  7938  0057A2  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  7939  0057A6  0100               	movlb	0	; () banked
  7940  0057A8  51C9               	movf	??_eval_poly& (0+255),w,b
  7941  0057AA  0100               	movlb	0	; () banked
  7942  0057AC  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  7943  0057AE  0100               	movlb	0	; () banked
  7944  0057B0  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  7945  0057B2  0100               	movlb	0	; () banked
  7946  0057B4  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  7947  0057B6  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  7948  0057BA  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  7949  0057BE                     	if	0	;tblptru may be non-zero
  7950  0057BE                     	endif
  7951  0057BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7952  0057BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7953  0057C0  6EF8               	movwf	tblptru,c
  7954  0057C2                     	endif
  7955  0057C2  0009               	tblrd		*+
  7956  0057C4  CFF5 F0B1          	movff	tablat,___fladd@a
  7957  0057C8  0009               	tblrd		*+
  7958  0057CA  CFF5 F0B2          	movff	tablat,___fladd@a+1
  7959  0057CE  0009               	tblrd		*+
  7960  0057D0  CFF5 F0B3          	movff	tablat,___fladd@a+2
  7961  0057D4  000A               	tblrd		*-
  7962  0057D6  CFF5 F0B4          	movff	tablat,___fladd@a+3
  7963  0057DA  EC3D  F015         	call	___fladd	;wreg free
  7964  0057DE  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  7965  0057E2  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  7966  0057E6  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  7967  0057EA  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  7968  0057EE                     l6726:
  7969  0057EE  0100               	movlb	0	; () banked
  7970  0057F0  51C7               	movf	eval_poly@n& (0+255),w,b
  7971  0057F2  0100               	movlb	0	; () banked
  7972  0057F4  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  7973  0057F6  A4D8               	btfss	status,2,c
  7974  0057F8  D7A8               	goto	l6724
  7975                           
  7976                           ; BSR set to: 0
  7977  0057FA  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  7978  0057FE  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  7979  005802  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  7980  005806  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  7981                           
  7982                           ; BSR set to: 0
  7983  00580A  0012               	return		;funcret
  7984  00580C                     __end_of_eval_poly:
  7985                           	opt stack 0
  7986                           tblptru	equ	0xFF8
  7987                           tblptrh	equ	0xFF7
  7988                           tblptrl	equ	0xFF6
  7989                           tablat	equ	0xFF5
  7990                           postinc0	equ	0xFEE
  7991                           wreg	equ	0xFE8
  7992                           postdec1	equ	0xFE5
  7993                           fsr1l	equ	0xFE1
  7994                           indf2	equ	0xFDF
  7995                           postinc2	equ	0xFDE
  7996                           postdec2	equ	0xFDD
  7997                           fsr2h	equ	0xFDA
  7998                           fsr2l	equ	0xFD9
  7999                           status	equ	0xFD8
  8000                           
  8001 ;; *************** function ___flmul *****************
  8002 ;; Defined at:
  8003 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  b               4   48[BANK0 ] int 
  8006 ;;  a               4   52[BANK0 ] int 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  prod            4   67[BANK0 ] struct .
  8009 ;;  grs             4   62[BANK0 ] unsigned long 
  8010 ;;  temp            2   71[BANK0 ] struct .
  8011 ;;  bexp            1   66[BANK0 ] unsigned char 
  8012 ;;  aexp            1   61[BANK0 ] unsigned char 
  8013 ;;  sign            1   60[BANK0 ] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  4   48[BANK0 ] unsigned char 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0, prodl, prodh
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;Total ram usage:       25 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    4
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_parallelo
  8034 ;;		_matematica
  8035 ;;		_asin
  8036 ;;		_atan
  8037 ;;		_eval_poly
  8038 ;;		_sin
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text22
  8043  002F22                     __ptext22:
  8044                           	opt stack 0
  8045  002F22                     ___flmul:
  8046                           	opt stack 21
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;incstack = 0
  8050  002F22  0100               	movlb	0	; () banked
  8051  002F24  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8052  002F26  0B80               	andlw	128
  8053  002F28  0100               	movlb	0	; () banked
  8054  002F2A  6F9C               	movwf	___flmul@sign& (0+255),b
  8055  002F2C  0100               	movlb	0	; () banked
  8056  002F2E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8057  002F30  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8058  002F32  0100               	movlb	0	; () banked
  8059  002F34  6FA2               	movwf	___flmul@bexp& (0+255),b
  8060                           
  8061                           ; BSR set to: 0
  8062  002F36  0100               	movlb	0	; () banked
  8063  002F38  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8064  002F3A  D002               	goto	l6318
  8065                           
  8066                           ; BSR set to: 0
  8067  002F3C  0100               	movlb	0	; () banked
  8068  002F3E  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8069  002F40                     l6318:
  8070                           
  8071                           ; BSR set to: 0
  8072  002F40  0100               	movlb	0	; () banked
  8073  002F42  51A2               	movf	___flmul@bexp& (0+255),w,b
  8074  002F44  0100               	movlb	0	; () banked
  8075  002F46  B4D8               	btfsc	status,2,c
  8076  002F48  D010               	goto	l6326
  8077                           
  8078                           ; BSR set to: 0
  8079  002F4A  0100               	movlb	0	; () banked
  8080  002F4C  29A2               	incf	___flmul@bexp& (0+255),w,b
  8081  002F4E  A4D8               	btfss	status,2,c
  8082  002F50  D009               	goto	l6324
  8083                           
  8084                           ; BSR set to: 0
  8085  002F52  0E00               	movlw	0
  8086  002F54  0100               	movlb	0	; () banked
  8087  002F56  6F90               	movwf	___flmul@b& (0+255),b
  8088  002F58  0E00               	movlw	0
  8089  002F5A  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8090  002F5C  0E00               	movlw	0
  8091  002F5E  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8092  002F60  0E00               	movlw	0
  8093  002F62  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8094  002F64                     l6324:
  8095                           
  8096                           ; BSR set to: 0
  8097  002F64  0100               	movlb	0	; () banked
  8098  002F66  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8099  002F68  D009               	goto	l6328
  8100  002F6A                     l6326:
  8101                           
  8102                           ; BSR set to: 0
  8103  002F6A  0E00               	movlw	0
  8104  002F6C  0100               	movlb	0	; () banked
  8105  002F6E  6F90               	movwf	___flmul@b& (0+255),b
  8106  002F70  0E00               	movlw	0
  8107  002F72  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8108  002F74  0E00               	movlw	0
  8109  002F76  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8110  002F78  0E00               	movlw	0
  8111  002F7A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8112  002F7C                     l6328:
  8113                           
  8114                           ; BSR set to: 0
  8115  002F7C  0100               	movlb	0	; () banked
  8116  002F7E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8117  002F80  0B80               	andlw	128
  8118  002F82  0100               	movlb	0	; () banked
  8119  002F84  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8120                           
  8121                           ; BSR set to: 0
  8122  002F86  0100               	movlb	0	; () banked
  8123  002F88  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8124  002F8A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8125  002F8C  0100               	movlb	0	; () banked
  8126  002F8E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8127                           
  8128                           ; BSR set to: 0
  8129  002F90  0100               	movlb	0	; () banked
  8130  002F92  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8131  002F94  D002               	goto	l6336
  8132                           
  8133                           ; BSR set to: 0
  8134  002F96  0100               	movlb	0	; () banked
  8135  002F98  819D               	bsf	___flmul@aexp& (0+255),0,b
  8136  002F9A                     l6336:
  8137                           
  8138                           ; BSR set to: 0
  8139  002F9A  0100               	movlb	0	; () banked
  8140  002F9C  519D               	movf	___flmul@aexp& (0+255),w,b
  8141  002F9E  0100               	movlb	0	; () banked
  8142  002FA0  B4D8               	btfsc	status,2,c
  8143  002FA2  D010               	goto	l6344
  8144                           
  8145                           ; BSR set to: 0
  8146  002FA4  0100               	movlb	0	; () banked
  8147  002FA6  299D               	incf	___flmul@aexp& (0+255),w,b
  8148  002FA8  A4D8               	btfss	status,2,c
  8149  002FAA  D009               	goto	l6342
  8150                           
  8151                           ; BSR set to: 0
  8152  002FAC  0E00               	movlw	0
  8153  002FAE  0100               	movlb	0	; () banked
  8154  002FB0  6F94               	movwf	___flmul@a& (0+255),b
  8155  002FB2  0E00               	movlw	0
  8156  002FB4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8157  002FB6  0E00               	movlw	0
  8158  002FB8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8159  002FBA  0E00               	movlw	0
  8160  002FBC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8161  002FBE                     l6342:
  8162                           
  8163                           ; BSR set to: 0
  8164  002FBE  0100               	movlb	0	; () banked
  8165  002FC0  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8166  002FC2  D009               	goto	l1397
  8167  002FC4                     l6344:
  8168                           
  8169                           ; BSR set to: 0
  8170  002FC4  0E00               	movlw	0
  8171  002FC6  0100               	movlb	0	; () banked
  8172  002FC8  6F94               	movwf	___flmul@a& (0+255),b
  8173  002FCA  0E00               	movlw	0
  8174  002FCC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8175  002FCE  0E00               	movlw	0
  8176  002FD0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8177  002FD2  0E00               	movlw	0
  8178  002FD4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8179  002FD6                     l1397:
  8180                           
  8181                           ; BSR set to: 0
  8182  002FD6  0100               	movlb	0	; () banked
  8183  002FD8  519D               	movf	___flmul@aexp& (0+255),w,b
  8184  002FDA  0100               	movlb	0	; () banked
  8185  002FDC  B4D8               	btfsc	status,2,c
  8186  002FDE  D005               	goto	l6348
  8187                           
  8188                           ; BSR set to: 0
  8189  002FE0  0100               	movlb	0	; () banked
  8190  002FE2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8191  002FE4  0100               	movlb	0	; () banked
  8192  002FE6  A4D8               	btfss	status,2,c
  8193  002FE8  D00A               	goto	l6352
  8194  002FEA                     l6348:
  8195                           
  8196                           ; BSR set to: 0
  8197  002FEA  0E00               	movlw	0
  8198  002FEC  0100               	movlb	0	; () banked
  8199  002FEE  6F90               	movwf	?___flmul& (0+255),b
  8200  002FF0  0E00               	movlw	0
  8201  002FF2  6F91               	movwf	(?___flmul+1)& (0+255),b
  8202  002FF4  0E00               	movlw	0
  8203  002FF6  6F92               	movwf	(?___flmul+2)& (0+255),b
  8204  002FF8  0E00               	movlw	0
  8205  002FFA  6F93               	movwf	(?___flmul+3)& (0+255),b
  8206                           
  8207                           ; BSR set to: 0
  8208  002FFC  0012               	return	
  8209  002FFE                     l6352:
  8210                           
  8211                           ; BSR set to: 0
  8212  002FFE  0100               	movlb	0	; () banked
  8213  003000  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8214  003002  0100               	movlb	0	; () banked
  8215  003004  0390               	mulwf	___flmul@b& (0+255),b
  8216  003006  CFF3 F0A7          	movff	prodl,___flmul@temp
  8217  00300A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8218                           
  8219                           ; BSR set to: 0
  8220  00300E  0100               	movlb	0	; () banked
  8221  003010  51A7               	movf	___flmul@temp& (0+255),w,b
  8222  003012  0100               	movlb	0	; () banked
  8223  003014  6F9E               	movwf	___flmul@grs& (0+255),b
  8224  003016  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8225  003018  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8226  00301A  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8227                           
  8228                           ; BSR set to: 0
  8229  00301C  0100               	movlb	0	; () banked
  8230  00301E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8231  003020  0100               	movlb	0	; () banked
  8232  003022  6FA3               	movwf	___flmul@prod& (0+255),b
  8233  003024  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8234  003026  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8235  003028  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8236  00302A  0100               	movlb	0	; () banked
  8237  00302C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8238  00302E  0100               	movlb	0	; () banked
  8239  003030  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8240  003032  CFF3 F0A7          	movff	prodl,___flmul@temp
  8241  003036  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8242                           
  8243                           ; BSR set to: 0
  8244  00303A  0100               	movlb	0	; () banked
  8245  00303C  51A7               	movf	___flmul@temp& (0+255),w,b
  8246  00303E  0100               	movlb	0	; () banked
  8247  003040  279E               	addwf	___flmul@grs& (0+255),f,b
  8248  003042  0E00               	movlw	0
  8249  003044  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8250  003046  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8251  003048  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8252                           
  8253                           ; BSR set to: 0
  8254  00304A  0100               	movlb	0	; () banked
  8255  00304C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8256  00304E  0100               	movlb	0	; () banked
  8257  003050  27A3               	addwf	___flmul@prod& (0+255),f,b
  8258  003052  0E00               	movlw	0
  8259  003054  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8260  003056  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8261  003058  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8262  00305A  0100               	movlb	0	; () banked
  8263  00305C  5194               	movf	___flmul@a& (0+255),w,b
  8264  00305E  0100               	movlb	0	; () banked
  8265  003060  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8266  003062  CFF3 F0A7          	movff	prodl,___flmul@temp
  8267  003066  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8268                           
  8269                           ; BSR set to: 0
  8270  00306A  0100               	movlb	0	; () banked
  8271  00306C  51A7               	movf	___flmul@temp& (0+255),w,b
  8272  00306E  0100               	movlb	0	; () banked
  8273  003070  279E               	addwf	___flmul@grs& (0+255),f,b
  8274  003072  0E00               	movlw	0
  8275  003074  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8276  003076  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8277  003078  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8278                           
  8279                           ; BSR set to: 0
  8280  00307A  0100               	movlb	0	; () banked
  8281  00307C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8282  00307E  0100               	movlb	0	; () banked
  8283  003080  27A3               	addwf	___flmul@prod& (0+255),f,b
  8284  003082  0E00               	movlw	0
  8285  003084  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8286  003086  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8287  003088  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8288                           
  8289                           ; BSR set to: 0
  8290  00308A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8291  00308E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8292  003092  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8293  003096  0100               	movlb	0	; () banked
  8294  003098  6B9E               	clrf	___flmul@grs& (0+255),b
  8295                           
  8296                           ; BSR set to: 0
  8297  00309A  0100               	movlb	0	; () banked
  8298  00309C  5194               	movf	___flmul@a& (0+255),w,b
  8299  00309E  0100               	movlb	0	; () banked
  8300  0030A0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8301  0030A2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8302  0030A6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8303                           
  8304                           ; BSR set to: 0
  8305  0030AA  0100               	movlb	0	; () banked
  8306  0030AC  51A7               	movf	___flmul@temp& (0+255),w,b
  8307  0030AE  0100               	movlb	0	; () banked
  8308  0030B0  279E               	addwf	___flmul@grs& (0+255),f,b
  8309  0030B2  0100               	movlb	0	; () banked
  8310  0030B4  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8311  0030B6  0100               	movlb	0	; () banked
  8312  0030B8  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8313  0030BA  0E00               	movlw	0
  8314  0030BC  0100               	movlb	0	; () banked
  8315  0030BE  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8316  0030C0  0E00               	movlw	0
  8317  0030C2  0100               	movlb	0	; () banked
  8318  0030C4  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8319                           
  8320                           ; BSR set to: 0
  8321  0030C6  0100               	movlb	0	; () banked
  8322  0030C8  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8323  0030CA  0100               	movlb	0	; () banked
  8324  0030CC  0390               	mulwf	___flmul@b& (0+255),b
  8325  0030CE  CFF3 F0A7          	movff	prodl,___flmul@temp
  8326  0030D2  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8327                           
  8328                           ; BSR set to: 0
  8329  0030D6  0100               	movlb	0	; () banked
  8330  0030D8  51A7               	movf	___flmul@temp& (0+255),w,b
  8331  0030DA  0100               	movlb	0	; () banked
  8332  0030DC  279E               	addwf	___flmul@grs& (0+255),f,b
  8333  0030DE  0100               	movlb	0	; () banked
  8334  0030E0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8335  0030E2  0100               	movlb	0	; () banked
  8336  0030E4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8337  0030E6  0E00               	movlw	0
  8338  0030E8  0100               	movlb	0	; () banked
  8339  0030EA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8340  0030EC  0E00               	movlw	0
  8341  0030EE  0100               	movlb	0	; () banked
  8342  0030F0  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8343                           
  8344                           ; BSR set to: 0
  8345  0030F2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8346  0030F6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8347  0030FA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8348  0030FE  0100               	movlb	0	; () banked
  8349  003100  6B9E               	clrf	___flmul@grs& (0+255),b
  8350  003102  0100               	movlb	0	; () banked
  8351  003104  5194               	movf	___flmul@a& (0+255),w,b
  8352  003106  0100               	movlb	0	; () banked
  8353  003108  0390               	mulwf	___flmul@b& (0+255),b
  8354  00310A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8355  00310E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8356                           
  8357                           ; BSR set to: 0
  8358  003112  0100               	movlb	0	; () banked
  8359  003114  51A7               	movf	___flmul@temp& (0+255),w,b
  8360  003116  0100               	movlb	0	; () banked
  8361  003118  279E               	addwf	___flmul@grs& (0+255),f,b
  8362  00311A  0100               	movlb	0	; () banked
  8363  00311C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8364  00311E  0100               	movlb	0	; () banked
  8365  003120  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8366  003122  0E00               	movlw	0
  8367  003124  0100               	movlb	0	; () banked
  8368  003126  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8369  003128  0E00               	movlw	0
  8370  00312A  0100               	movlb	0	; () banked
  8371  00312C  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8372                           
  8373                           ; BSR set to: 0
  8374  00312E  0100               	movlb	0	; () banked
  8375  003130  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8376  003132  0100               	movlb	0	; () banked
  8377  003134  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8378  003136  CFF3 F0A7          	movff	prodl,___flmul@temp
  8379  00313A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8380  00313E  0100               	movlb	0	; () banked
  8381  003140  51A7               	movf	___flmul@temp& (0+255),w,b
  8382  003142  0100               	movlb	0	; () banked
  8383  003144  27A3               	addwf	___flmul@prod& (0+255),f,b
  8384  003146  0100               	movlb	0	; () banked
  8385  003148  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8386  00314A  0100               	movlb	0	; () banked
  8387  00314C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8388  00314E  0E00               	movlw	0
  8389  003150  0100               	movlb	0	; () banked
  8390  003152  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8391  003154  0E00               	movlw	0
  8392  003156  0100               	movlb	0	; () banked
  8393  003158  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8394                           
  8395                           ; BSR set to: 0
  8396  00315A  0100               	movlb	0	; () banked
  8397  00315C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8398  00315E  0100               	movlb	0	; () banked
  8399  003160  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8400  003162  CFF3 F0A7          	movff	prodl,___flmul@temp
  8401  003166  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8402                           
  8403                           ; BSR set to: 0
  8404  00316A  0100               	movlb	0	; () banked
  8405  00316C  51A7               	movf	___flmul@temp& (0+255),w,b
  8406  00316E  0100               	movlb	0	; () banked
  8407  003170  27A3               	addwf	___flmul@prod& (0+255),f,b
  8408  003172  0100               	movlb	0	; () banked
  8409  003174  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8410  003176  0100               	movlb	0	; () banked
  8411  003178  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8412  00317A  0E00               	movlw	0
  8413  00317C  0100               	movlb	0	; () banked
  8414  00317E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8415  003180  0E00               	movlw	0
  8416  003182  0100               	movlb	0	; () banked
  8417  003184  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8418  003186  0100               	movlb	0	; () banked
  8419  003188  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8420  00318A  0100               	movlb	0	; () banked
  8421  00318C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8422  00318E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8423  003192  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8424                           
  8425                           ; BSR set to: 0
  8426  003196  0100               	movlb	0	; () banked
  8427  003198  51A7               	movf	___flmul@temp& (0+255),w,b
  8428  00319A  0100               	movlb	0	; () banked
  8429  00319C  6F98               	movwf	??___flmul& (0+255),b
  8430  00319E  0100               	movlb	0	; () banked
  8431  0031A0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8432  0031A2  0100               	movlb	0	; () banked
  8433  0031A4  6F99               	movwf	(??___flmul+1)& (0+255),b
  8434  0031A6  0100               	movlb	0	; () banked
  8435  0031A8  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8436  0031AA  0100               	movlb	0	; () banked
  8437  0031AC  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8438  0031AE  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8439  0031B2  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8440  0031B6  C098  F099         	movff	??___flmul,??___flmul+1
  8441  0031BA  0100               	movlb	0	; () banked
  8442  0031BC  6B98               	clrf	??___flmul& (0+255),b
  8443  0031BE  0100               	movlb	0	; () banked
  8444  0031C0  5198               	movf	??___flmul& (0+255),w,b
  8445  0031C2  0100               	movlb	0	; () banked
  8446  0031C4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8447  0031C6  0100               	movlb	0	; () banked
  8448  0031C8  5199               	movf	(??___flmul+1)& (0+255),w,b
  8449  0031CA  0100               	movlb	0	; () banked
  8450  0031CC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8451  0031CE  0100               	movlb	0	; () banked
  8452  0031D0  519A               	movf	(??___flmul+2)& (0+255),w,b
  8453  0031D2  0100               	movlb	0	; () banked
  8454  0031D4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8455  0031D6  0100               	movlb	0	; () banked
  8456  0031D8  519B               	movf	(??___flmul+3)& (0+255),w,b
  8457  0031DA  0100               	movlb	0	; () banked
  8458  0031DC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8459                           
  8460                           ; BSR set to: 0
  8461  0031DE  C09E  F098         	movff	___flmul@grs,??___flmul
  8462  0031E2  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8463  0031E6  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8464  0031EA  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8465  0031EE  0E19               	movlw	25
  8466  0031F0  D006               	goto	u7840
  8467  0031F2                     u7845:
  8468  0031F2  0100               	movlb	0	; () banked
  8469  0031F4  90D8               	bcf	status,0,c
  8470  0031F6  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8471  0031F8  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8472  0031FA  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8473  0031FC  3398               	rrcf	??___flmul& (0+255),f,b
  8474  0031FE                     u7840:
  8475  0031FE  2EE8               	decfsz	wreg,f,c
  8476  003200  D7F8               	goto	u7845
  8477  003202  0100               	movlb	0	; () banked
  8478  003204  5198               	movf	??___flmul& (0+255),w,b
  8479  003206  0100               	movlb	0	; () banked
  8480  003208  27A3               	addwf	___flmul@prod& (0+255),f,b
  8481  00320A  0100               	movlb	0	; () banked
  8482  00320C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8483  00320E  0100               	movlb	0	; () banked
  8484  003210  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8485  003212  0100               	movlb	0	; () banked
  8486  003214  519A               	movf	(??___flmul+2)& (0+255),w,b
  8487  003216  0100               	movlb	0	; () banked
  8488  003218  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8489  00321A  0100               	movlb	0	; () banked
  8490  00321C  519B               	movf	(??___flmul+3)& (0+255),w,b
  8491  00321E  0100               	movlb	0	; () banked
  8492  003220  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8493                           
  8494                           ; BSR set to: 0
  8495  003222  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8496  003226  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8497  00322A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8498  00322E  0100               	movlb	0	; () banked
  8499  003230  6B9E               	clrf	___flmul@grs& (0+255),b
  8500                           
  8501                           ; BSR set to: 0
  8502  003232  0100               	movlb	0	; () banked
  8503  003234  519D               	movf	___flmul@aexp& (0+255),w,b
  8504  003236  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8505  00323A  0100               	movlb	0	; () banked
  8506  00323C  6B99               	clrf	(??___flmul+1)& (0+255),b
  8507  00323E  0100               	movlb	0	; () banked
  8508  003240  2798               	addwf	??___flmul& (0+255),f,b
  8509  003242  0E00               	movlw	0
  8510  003244  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8511  003246  0E82               	movlw	130
  8512  003248  0100               	movlb	0	; () banked
  8513  00324A  2598               	addwf	??___flmul& (0+255),w,b
  8514  00324C  0100               	movlb	0	; () banked
  8515  00324E  6FA7               	movwf	___flmul@temp& (0+255),b
  8516  003250  0EFF               	movlw	255
  8517  003252  0100               	movlb	0	; () banked
  8518  003254  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8519  003256  0100               	movlb	0	; () banked
  8520  003258  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8521  00325A  D015               	goto	l6400
  8522  00325C                     l6394:
  8523                           
  8524                           ; BSR set to: 0
  8525  00325C  0100               	movlb	0	; () banked
  8526  00325E  90D8               	bcf	status,0,c
  8527  003260  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8528  003262  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8529  003264  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8530  003266  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8531                           
  8532                           ; BSR set to: 0
  8533  003268  0100               	movlb	0	; () banked
  8534  00326A  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8535  00326C  D002               	goto	l1404
  8536                           
  8537                           ; BSR set to: 0
  8538  00326E  0100               	movlb	0	; () banked
  8539  003270  81A3               	bsf	___flmul@prod& (0+255),0,b
  8540  003272                     l1404:
  8541                           
  8542                           ; BSR set to: 0
  8543  003272  0100               	movlb	0	; () banked
  8544  003274  90D8               	bcf	status,0,c
  8545  003276  379E               	rlcf	___flmul@grs& (0+255),f,b
  8546  003278  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8547  00327A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8548  00327C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8549  00327E  0100               	movlb	0	; () banked
  8550  003280  07A7               	decf	___flmul@temp& (0+255),f,b
  8551  003282  A0D8               	btfss	status,0,c
  8552  003284  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8553  003286                     l6400:
  8554                           
  8555                           ; BSR set to: 0
  8556  003286  0100               	movlb	0	; () banked
  8557  003288  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8558  00328A  D7E8               	goto	l6394
  8559                           
  8560                           ; BSR set to: 0
  8561                           
  8562                           ; BSR set to: 0
  8563  00328C  0E00               	movlw	0
  8564  00328E  0100               	movlb	0	; () banked
  8565  003290  6F9D               	movwf	___flmul@aexp& (0+255),b
  8566                           
  8567                           ; BSR set to: 0
  8568  003292  0100               	movlb	0	; () banked
  8569  003294  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8570  003296  D024               	goto	l1406
  8571                           
  8572                           ; BSR set to: 0
  8573  003298  0EFF               	movlw	255
  8574  00329A  0100               	movlb	0	; () banked
  8575  00329C  159E               	andwf	___flmul@grs& (0+255),w,b
  8576  00329E  0100               	movlb	0	; () banked
  8577  0032A0  6F98               	movwf	??___flmul& (0+255),b
  8578  0032A2  0EFF               	movlw	255
  8579  0032A4  0100               	movlb	0	; () banked
  8580  0032A6  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8581  0032A8  0100               	movlb	0	; () banked
  8582  0032AA  6F99               	movwf	(??___flmul+1)& (0+255),b
  8583  0032AC  0EFF               	movlw	255
  8584  0032AE  0100               	movlb	0	; () banked
  8585  0032B0  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8586  0032B2  0100               	movlb	0	; () banked
  8587  0032B4  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8588  0032B6  0E7F               	movlw	127
  8589  0032B8  0100               	movlb	0	; () banked
  8590  0032BA  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8591  0032BC  0100               	movlb	0	; () banked
  8592  0032BE  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8593  0032C0  0100               	movlb	0	; () banked
  8594  0032C2  5198               	movf	??___flmul& (0+255),w,b
  8595  0032C4  0100               	movlb	0	; () banked
  8596  0032C6  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8597  0032C8  0100               	movlb	0	; () banked
  8598  0032CA  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8599  0032CC  0100               	movlb	0	; () banked
  8600  0032CE  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8601  0032D0  A4D8               	btfss	status,2,c
  8602  0032D2  D003               	goto	l6410
  8603                           
  8604                           ; BSR set to: 0
  8605                           
  8606                           ; BSR set to: 0
  8607  0032D4  0100               	movlb	0	; () banked
  8608  0032D6  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8609  0032D8  D003               	goto	l1406
  8610  0032DA                     l6410:
  8611                           
  8612                           ; BSR set to: 0
  8613  0032DA  0E01               	movlw	1
  8614  0032DC  0100               	movlb	0	; () banked
  8615  0032DE  6F9D               	movwf	___flmul@aexp& (0+255),b
  8616  0032E0                     l1406:
  8617                           
  8618                           ; BSR set to: 0
  8619  0032E0  0100               	movlb	0	; () banked
  8620  0032E2  519D               	movf	___flmul@aexp& (0+255),w,b
  8621  0032E4  0100               	movlb	0	; () banked
  8622  0032E6  B4D8               	btfsc	status,2,c
  8623  0032E8  D023               	goto	l6420
  8624                           
  8625                           ; BSR set to: 0
  8626  0032EA  0E01               	movlw	1
  8627  0032EC  0100               	movlb	0	; () banked
  8628  0032EE  27A3               	addwf	___flmul@prod& (0+255),f,b
  8629  0032F0  0E00               	movlw	0
  8630  0032F2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8631  0032F4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8632  0032F6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8633                           
  8634                           ; BSR set to: 0
  8635  0032F8  0100               	movlb	0	; () banked
  8636  0032FA  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8637  0032FC  D019               	goto	l6420
  8638                           
  8639                           ; BSR set to: 0
  8640  0032FE  C0A3  F098         	movff	___flmul@prod,??___flmul
  8641  003302  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8642  003306  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8643  00330A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8644  00330E  0100               	movlb	0	; () banked
  8645  003310  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8646  003312  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8647  003314  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8648  003316  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8649  003318  3398               	rrcf	??___flmul& (0+255),f,b
  8650  00331A  C098  F0A3         	movff	??___flmul,___flmul@prod
  8651  00331E  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8652  003322  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8653  003326  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8654                           
  8655                           ; BSR set to: 0
  8656  00332A  0100               	movlb	0	; () banked
  8657  00332C  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8658  00332E  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8659  003330                     l6420:
  8660                           
  8661                           ; BSR set to: 0
  8662  003330  0100               	movlb	0	; () banked
  8663  003332  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8664  003334  D010               	goto	l6424
  8665  003336  0100               	movlb	0	; () banked
  8666  003338  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8667  00333A  E104               	bnz	u7920
  8668  00333C  0100               	movlb	0	; () banked
  8669  00333E  29A7               	incf	___flmul@temp& (0+255),w,b
  8670  003340  A0D8               	btfss	status,0,c
  8671  003342  D009               	goto	l6424
  8672  003344                     u7920:
  8673                           
  8674                           ; BSR set to: 0
  8675  003344  0E00               	movlw	0
  8676  003346  0100               	movlb	0	; () banked
  8677  003348  6FA3               	movwf	___flmul@prod& (0+255),b
  8678  00334A  0E00               	movlw	0
  8679  00334C  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8680  00334E  0E80               	movlw	128
  8681  003350  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8682  003352  0E7F               	movlw	127
  8683  003354  D02B               	goto	L2
  8684  003356                     l6424:
  8685                           
  8686                           ; BSR set to: 0
  8687  003356  0100               	movlb	0	; () banked
  8688  003358  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8689  00335A  D007               	goto	l6426
  8690  00335C  0100               	movlb	0	; () banked
  8691  00335E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8692  003360  E111               	bnz	l1414
  8693  003362  0100               	movlb	0	; () banked
  8694  003364  05A7               	decf	___flmul@temp& (0+255),w,b
  8695  003366  B0D8               	btfsc	status,0,c
  8696  003368  D00D               	goto	l1414
  8697  00336A                     l6426:
  8698                           
  8699                           ; BSR set to: 0
  8700  00336A  0E00               	movlw	0
  8701  00336C  0100               	movlb	0	; () banked
  8702  00336E  6FA3               	movwf	___flmul@prod& (0+255),b
  8703  003370  0E00               	movlw	0
  8704  003372  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8705  003374  0E00               	movlw	0
  8706  003376  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8707  003378  0E00               	movlw	0
  8708  00337A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8709  00337C  0E00               	movlw	0
  8710  00337E  0100               	movlb	0	; () banked
  8711  003380  6F9C               	movwf	___flmul@sign& (0+255),b
  8712  003382  D015               	goto	l6436
  8713  003384                     l1414:
  8714                           
  8715                           ; BSR set to: 0
  8716  003384  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8717                           
  8718                           ; BSR set to: 0
  8719  003388  0EFF               	movlw	255
  8720  00338A  0100               	movlb	0	; () banked
  8721  00338C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8722  00338E  0EFF               	movlw	255
  8723  003390  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8724  003392  0E7F               	movlw	127
  8725  003394  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8726  003396  0E00               	movlw	0
  8727  003398  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8728                           
  8729                           ; BSR set to: 0
  8730  00339A  0100               	movlb	0	; () banked
  8731  00339C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8732  00339E  D002               	goto	l6434
  8733                           
  8734                           ; BSR set to: 0
  8735  0033A0  0100               	movlb	0	; () banked
  8736  0033A2  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8737  0033A4                     l6434:
  8738                           
  8739                           ; BSR set to: 0
  8740  0033A4  0100               	movlb	0	; () banked
  8741  0033A6  90D8               	bcf	status,0,c
  8742  0033A8  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8743  0033AA  0100               	movlb	0	; () banked
  8744  0033AC                     L2:
  8745  0033AC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8746  0033AE                     l6436:
  8747                           
  8748                           ; BSR set to: 0
  8749  0033AE  0100               	movlb	0	; () banked
  8750  0033B0  519C               	movf	___flmul@sign& (0+255),w,b
  8751  0033B2  0100               	movlb	0	; () banked
  8752  0033B4  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8753                           
  8754                           ; BSR set to: 0
  8755  0033B6  C0A3  F090         	movff	___flmul@prod,?___flmul
  8756  0033BA  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8757  0033BE  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8758  0033C2  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8759  0033C6  0012               	return	
  8760  0033C8                     __end_of___flmul:
  8761                           	opt stack 0
  8762                           tblptru	equ	0xFF8
  8763                           tblptrh	equ	0xFF7
  8764                           tblptrl	equ	0xFF6
  8765                           tablat	equ	0xFF5
  8766                           prodh	equ	0xFF4
  8767                           prodl	equ	0xFF3
  8768                           postinc0	equ	0xFEE
  8769                           wreg	equ	0xFE8
  8770                           postdec1	equ	0xFE5
  8771                           fsr1l	equ	0xFE1
  8772                           indf2	equ	0xFDF
  8773                           postinc2	equ	0xFDE
  8774                           postdec2	equ	0xFDD
  8775                           fsr2h	equ	0xFDA
  8776                           fsr2l	equ	0xFD9
  8777                           status	equ	0xFD8
  8778                           
  8779 ;; *************** function ___fladd *****************
  8780 ;; Defined at:
  8781 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  b               4   77[BANK0 ] unsigned char 
  8784 ;;  a               4   81[BANK0 ] unsigned char 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  grs             1   96[BANK0 ] unsigned char 
  8787 ;;  bexp            1   95[BANK0 ] unsigned char 
  8788 ;;  aexp            1   94[BANK0 ] unsigned char 
  8789 ;;  signs           1   93[BANK0 ] unsigned char 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  4   77[BANK0 ] unsigned char 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8799 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;Total ram usage:       20 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    4
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_park_routine
  8810 ;;		_parallelo
  8811 ;;		_matematica
  8812 ;;		_asin
  8813 ;;		_atan
  8814 ;;		_cos
  8815 ;;		_eval_poly
  8816 ;;		_sin
  8817 ;;		___flsub
  8818 ;;		_floor
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text23
  8823  002A7A                     __ptext23:
  8824                           	opt stack 0
  8825  002A7A                     ___fladd:
  8826                           	opt stack 21
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;incstack = 0
  8830  002A7A  0100               	movlb	0	; () banked
  8831  002A7C  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  8832  002A7E  0B80               	andlw	128
  8833  002A80  0100               	movlb	0	; () banked
  8834  002A82  6FBD               	movwf	___fladd@signs& (0+255),b
  8835  002A84  0100               	movlb	0	; () banked
  8836  002A86  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  8837  002A88  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  8838  002A8A  0100               	movlb	0	; () banked
  8839  002A8C  6FBF               	movwf	___fladd@bexp& (0+255),b
  8840                           
  8841                           ; BSR set to: 0
  8842  002A8E  0100               	movlb	0	; () banked
  8843  002A90  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  8844  002A92  D002               	goto	l6116
  8845                           
  8846                           ; BSR set to: 0
  8847  002A94  0100               	movlb	0	; () banked
  8848  002A96  81BF               	bsf	___fladd@bexp& (0+255),0,b
  8849  002A98                     l6116:
  8850                           
  8851                           ; BSR set to: 0
  8852  002A98  0100               	movlb	0	; () banked
  8853  002A9A  51BF               	movf	___fladd@bexp& (0+255),w,b
  8854  002A9C  0100               	movlb	0	; () banked
  8855  002A9E  B4D8               	btfsc	status,2,c
  8856  002AA0  D012               	goto	l6126
  8857                           
  8858                           ; BSR set to: 0
  8859  002AA2  0100               	movlb	0	; () banked
  8860  002AA4  29BF               	incf	___fladd@bexp& (0+255),w,b
  8861  002AA6  A4D8               	btfss	status,2,c
  8862  002AA8  D009               	goto	l6122
  8863                           
  8864                           ; BSR set to: 0
  8865  002AAA  0E00               	movlw	0
  8866  002AAC  0100               	movlb	0	; () banked
  8867  002AAE  6FAD               	movwf	___fladd@b& (0+255),b
  8868  002AB0  0E00               	movlw	0
  8869  002AB2  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  8870  002AB4  0E00               	movlw	0
  8871  002AB6  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  8872  002AB8  0E00               	movlw	0
  8873  002ABA  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  8874  002ABC                     l6122:
  8875                           
  8876                           ; BSR set to: 0
  8877  002ABC  0100               	movlb	0	; () banked
  8878  002ABE  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  8879                           
  8880                           ; BSR set to: 0
  8881  002AC0  0E00               	movlw	0
  8882  002AC2  0100               	movlb	0	; () banked
  8883  002AC4  D008               	goto	L3
  8884  002AC6                     l6126:
  8885                           
  8886                           ; BSR set to: 0
  8887  002AC6  0E00               	movlw	0
  8888  002AC8  0100               	movlb	0	; () banked
  8889  002ACA  6FAD               	movwf	___fladd@b& (0+255),b
  8890  002ACC  0E00               	movlw	0
  8891  002ACE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  8892  002AD0  0E00               	movlw	0
  8893  002AD2  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  8894  002AD4  0E00               	movlw	0
  8895  002AD6                     L3:
  8896  002AD6  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  8897                           
  8898                           ; BSR set to: 0
  8899                           
  8900                           ; BSR set to: 0
  8901  002AD8  0100               	movlb	0	; () banked
  8902  002ADA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  8903  002ADC  0B80               	andlw	128
  8904  002ADE  0100               	movlb	0	; () banked
  8905  002AE0  6FBE               	movwf	___fladd@aexp& (0+255),b
  8906                           
  8907                           ; BSR set to: 0
  8908  002AE2  0100               	movlb	0	; () banked
  8909  002AE4  51BD               	movf	___fladd@signs& (0+255),w,b
  8910  002AE6  0100               	movlb	0	; () banked
  8911  002AE8  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  8912  002AEA  B4D8               	btfsc	status,2,c
  8913  002AEC  D002               	goto	l6134
  8914                           
  8915                           ; BSR set to: 0
  8916  002AEE  0100               	movlb	0	; () banked
  8917  002AF0  8DBD               	bsf	___fladd@signs& (0+255),6,b
  8918  002AF2                     l6134:
  8919                           
  8920                           ; BSR set to: 0
  8921  002AF2  0100               	movlb	0	; () banked
  8922  002AF4  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  8923  002AF6  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  8924  002AF8  0100               	movlb	0	; () banked
  8925  002AFA  6FBE               	movwf	___fladd@aexp& (0+255),b
  8926                           
  8927                           ; BSR set to: 0
  8928  002AFC  0100               	movlb	0	; () banked
  8929  002AFE  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  8930  002B00  D002               	goto	l6140
  8931                           
  8932                           ; BSR set to: 0
  8933  002B02  0100               	movlb	0	; () banked
  8934  002B04  81BE               	bsf	___fladd@aexp& (0+255),0,b
  8935  002B06                     l6140:
  8936                           
  8937                           ; BSR set to: 0
  8938  002B06  0100               	movlb	0	; () banked
  8939  002B08  51BE               	movf	___fladd@aexp& (0+255),w,b
  8940  002B0A  0100               	movlb	0	; () banked
  8941  002B0C  B4D8               	btfsc	status,2,c
  8942  002B0E  D012               	goto	l6150
  8943                           
  8944                           ; BSR set to: 0
  8945  002B10  0100               	movlb	0	; () banked
  8946  002B12  29BE               	incf	___fladd@aexp& (0+255),w,b
  8947  002B14  A4D8               	btfss	status,2,c
  8948  002B16  D009               	goto	l6146
  8949                           
  8950                           ; BSR set to: 0
  8951  002B18  0E00               	movlw	0
  8952  002B1A  0100               	movlb	0	; () banked
  8953  002B1C  6FB1               	movwf	___fladd@a& (0+255),b
  8954  002B1E  0E00               	movlw	0
  8955  002B20  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  8956  002B22  0E00               	movlw	0
  8957  002B24  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  8958  002B26  0E00               	movlw	0
  8959  002B28  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  8960  002B2A                     l6146:
  8961                           
  8962                           ; BSR set to: 0
  8963  002B2A  0100               	movlb	0	; () banked
  8964  002B2C  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  8965                           
  8966                           ; BSR set to: 0
  8967  002B2E  0E00               	movlw	0
  8968  002B30  0100               	movlb	0	; () banked
  8969  002B32  D008               	goto	L4
  8970  002B34                     l6150:
  8971                           
  8972                           ; BSR set to: 0
  8973  002B34  0E00               	movlw	0
  8974  002B36  0100               	movlb	0	; () banked
  8975  002B38  6FB1               	movwf	___fladd@a& (0+255),b
  8976  002B3A  0E00               	movlw	0
  8977  002B3C  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  8978  002B3E  0E00               	movlw	0
  8979  002B40  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  8980  002B42  0E00               	movlw	0
  8981  002B44                     L4:
  8982  002B44  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  8983                           
  8984                           ; BSR set to: 0
  8985                           
  8986                           ; BSR set to: 0
  8987  002B46  0100               	movlb	0	; () banked
  8988  002B48  51BF               	movf	___fladd@bexp& (0+255),w,b
  8989  002B4A  0100               	movlb	0	; () banked
  8990  002B4C  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  8991  002B4E  B0D8               	btfsc	status,0,c
  8992  002B50  D024               	goto	l6188
  8993                           
  8994                           ; BSR set to: 0
  8995  002B52  0100               	movlb	0	; () banked
  8996  002B54  ADBD               	btfss	___fladd@signs& (0+255),6,b
  8997  002B56  D003               	goto	l6158
  8998                           
  8999                           ; BSR set to: 0
  9000  002B58  0E80               	movlw	128
  9001  002B5A  0100               	movlb	0	; () banked
  9002  002B5C  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  9003  002B5E                     l6158:
  9004                           
  9005                           ; BSR set to: 0
  9006  002B5E  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  9007                           
  9008                           ; BSR set to: 0
  9009  002B62  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  9010                           
  9011                           ; BSR set to: 0
  9012  002B66  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  9013                           
  9014                           ; BSR set to: 0
  9015  002B6A  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  9016                           
  9017                           ; BSR set to: 0
  9018  002B6E  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  9019                           
  9020                           ; BSR set to: 0
  9021  002B72  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  9022                           
  9023                           ; BSR set to: 0
  9024  002B76  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  9025                           
  9026                           ; BSR set to: 0
  9027  002B7A  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  9028                           
  9029                           ; BSR set to: 0
  9030  002B7E  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  9031                           
  9032                           ; BSR set to: 0
  9033  002B82  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  9034                           
  9035                           ; BSR set to: 0
  9036  002B86  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  9037                           
  9038                           ; BSR set to: 0
  9039  002B8A  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  9040                           
  9041                           ; BSR set to: 0
  9042  002B8E  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  9043                           
  9044                           ; BSR set to: 0
  9045  002B92  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  9046                           
  9047                           ; BSR set to: 0
  9048  002B96  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  9049  002B9A                     l6188:
  9050                           
  9051                           ; BSR set to: 0
  9052  002B9A  0E00               	movlw	0
  9053  002B9C  0100               	movlb	0	; () banked
  9054  002B9E  6FC0               	movwf	___fladd@grs& (0+255),b
  9055                           
  9056                           ; BSR set to: 0
  9057  002BA0  0100               	movlb	0	; () banked
  9058  002BA2  51BF               	movf	___fladd@bexp& (0+255),w,b
  9059  002BA4  0100               	movlb	0	; () banked
  9060  002BA6  6FB5               	movwf	??___fladd& (0+255),b
  9061  002BA8  6BB6               	clrf	(??___fladd+1)& (0+255),b
  9062  002BAA  0100               	movlb	0	; () banked
  9063  002BAC  1FB5               	comf	??___fladd& (0+255),f,b
  9064  002BAE  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  9065  002BB0  4BB5               	infsnz	??___fladd& (0+255),f,b
  9066  002BB2  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  9067  002BB4  0100               	movlb	0	; () banked
  9068  002BB6  51BE               	movf	___fladd@aexp& (0+255),w,b
  9069  002BB8  0100               	movlb	0	; () banked
  9070  002BBA  6FB7               	movwf	(??___fladd+2)& (0+255),b
  9071  002BBC  6BB8               	clrf	(??___fladd+3)& (0+255),b
  9072  002BBE  0100               	movlb	0	; () banked
  9073  002BC0  51B5               	movf	??___fladd& (0+255),w,b
  9074  002BC2  0100               	movlb	0	; () banked
  9075  002BC4  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  9076  002BC6  0100               	movlb	0	; () banked
  9077  002BC8  51B6               	movf	(??___fladd+1)& (0+255),w,b
  9078  002BCA  0100               	movlb	0	; () banked
  9079  002BCC  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  9080  002BCE  0100               	movlb	0	; () banked
  9081  002BD0  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  9082  002BD2  D03D               	goto	l1312
  9083  002BD4  0100               	movlb	0	; () banked
  9084  002BD6  51B8               	movf	(??___fladd+3)& (0+255),w,b
  9085  002BD8  E105               	bnz	u7460
  9086  002BDA  0E1A               	movlw	26
  9087  002BDC  0100               	movlb	0	; () banked
  9088  002BDE  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  9089  002BE0  A0D8               	btfss	status,0,c
  9090  002BE2  D035               	goto	l1312
  9091  002BE4                     u7460:
  9092                           
  9093                           ; BSR set to: 0
  9094  002BE4  0100               	movlb	0	; () banked
  9095  002BE6  51AD               	movf	___fladd@b& (0+255),w,b
  9096  002BE8  0100               	movlb	0	; () banked
  9097  002BEA  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  9098  002BEC  0100               	movlb	0	; () banked
  9099  002BEE  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  9100  002BF0  0100               	movlb	0	; () banked
  9101  002BF2  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  9102  002BF4  B4D8               	btfsc	status,2,c
  9103  002BF6  D002               	goto	u7470
  9104  002BF8  0E01               	movlw	1
  9105  002BFA  D001               	goto	u7480
  9106  002BFC                     u7470:
  9107  002BFC  0E00               	movlw	0
  9108  002BFE                     u7480:
  9109  002BFE  0100               	movlb	0	; () banked
  9110  002C00  6FC0               	movwf	___fladd@grs& (0+255),b
  9111                           
  9112                           ; BSR set to: 0
  9113  002C02  0E00               	movlw	0
  9114  002C04  0100               	movlb	0	; () banked
  9115  002C06  6FAD               	movwf	___fladd@b& (0+255),b
  9116  002C08  0E00               	movlw	0
  9117  002C0A  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  9118  002C0C  0E00               	movlw	0
  9119  002C0E  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  9120  002C10  0E00               	movlw	0
  9121  002C12  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9122                           
  9123                           ; BSR set to: 0
  9124  002C14  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  9125  002C18  D020               	goto	l1311
  9126  002C1A                     l1313:
  9127                           
  9128                           ; BSR set to: 0
  9129  002C1A  0100               	movlb	0	; () banked
  9130  002C1C  A1C0               	btfss	___fladd@grs& (0+255),0,b
  9131  002C1E  D007               	goto	l6200
  9132                           
  9133                           ; BSR set to: 0
  9134  002C20  0100               	movlb	0	; () banked
  9135  002C22  90D8               	bcf	status,0,c
  9136  002C24  31C0               	rrcf	___fladd@grs& (0+255),w,b
  9137  002C26  0901               	iorlw	1
  9138  002C28  0100               	movlb	0	; () banked
  9139  002C2A  6FC0               	movwf	___fladd@grs& (0+255),b
  9140  002C2C  D003               	goto	l6202
  9141  002C2E                     l6200:
  9142                           
  9143                           ; BSR set to: 0
  9144  002C2E  0100               	movlb	0	; () banked
  9145  002C30  90D8               	bcf	status,0,c
  9146  002C32  33C0               	rrcf	___fladd@grs& (0+255),f,b
  9147  002C34                     l6202:
  9148                           
  9149                           ; BSR set to: 0
  9150  002C34  0100               	movlb	0	; () banked
  9151  002C36  A1AD               	btfss	___fladd@b& (0+255),0,b
  9152  002C38  D002               	goto	l6206
  9153                           
  9154                           ; BSR set to: 0
  9155  002C3A  0100               	movlb	0	; () banked
  9156  002C3C  8FC0               	bsf	___fladd@grs& (0+255),7,b
  9157  002C3E                     l6206:
  9158                           
  9159                           ; BSR set to: 0
  9160  002C3E  0100               	movlb	0	; () banked
  9161  002C40  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  9162  002C42  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  9163  002C44  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  9164  002C46  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  9165  002C48  33AD               	rrcf	___fladd@b& (0+255),f,b
  9166                           
  9167                           ; BSR set to: 0
  9168  002C4A  0100               	movlb	0	; () banked
  9169  002C4C  2BBF               	incf	___fladd@bexp& (0+255),f,b
  9170  002C4E                     l1312:
  9171                           
  9172                           ; BSR set to: 0
  9173  002C4E  0100               	movlb	0	; () banked
  9174  002C50  51BE               	movf	___fladd@aexp& (0+255),w,b
  9175  002C52  0100               	movlb	0	; () banked
  9176  002C54  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  9177  002C56  A0D8               	btfss	status,0,c
  9178  002C58  D7E0               	goto	l1313
  9179  002C5A                     l1311:
  9180                           
  9181                           ; BSR set to: 0
  9182  002C5A  0100               	movlb	0	; () banked
  9183  002C5C  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  9184  002C5E  D03F               	goto	l6234
  9185                           
  9186                           ; BSR set to: 0
  9187  002C60  0100               	movlb	0	; () banked
  9188  002C62  51BF               	movf	___fladd@bexp& (0+255),w,b
  9189  002C64  0100               	movlb	0	; () banked
  9190  002C66  A4D8               	btfss	status,2,c
  9191  002C68  D00A               	goto	l6216
  9192                           
  9193                           ; BSR set to: 0
  9194  002C6A  0E00               	movlw	0
  9195  002C6C  0100               	movlb	0	; () banked
  9196  002C6E  6FAD               	movwf	?___fladd& (0+255),b
  9197  002C70  0E00               	movlw	0
  9198  002C72  6FAE               	movwf	(?___fladd+1)& (0+255),b
  9199  002C74  0E00               	movlw	0
  9200  002C76  6FAF               	movwf	(?___fladd+2)& (0+255),b
  9201  002C78  0E00               	movlw	0
  9202  002C7A  6FB0               	movwf	(?___fladd+3)& (0+255),b
  9203                           
  9204                           ; BSR set to: 0
  9205  002C7C  0012               	return	
  9206  002C7E                     l6216:
  9207                           
  9208                           ; BSR set to: 0
  9209  002C7E  0100               	movlb	0	; () banked
  9210  002C80  51B1               	movf	___fladd@a& (0+255),w,b
  9211  002C82  0100               	movlb	0	; () banked
  9212  002C84  27AD               	addwf	___fladd@b& (0+255),f,b
  9213  002C86  0100               	movlb	0	; () banked
  9214  002C88  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9215  002C8A  0100               	movlb	0	; () banked
  9216  002C8C  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  9217  002C8E  0100               	movlb	0	; () banked
  9218  002C90  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9219  002C92  0100               	movlb	0	; () banked
  9220  002C94  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  9221  002C96  0100               	movlb	0	; () banked
  9222  002C98  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9223  002C9A  0100               	movlb	0	; () banked
  9224  002C9C  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  9225                           
  9226                           ; BSR set to: 0
  9227  002C9E  0100               	movlb	0	; () banked
  9228  002CA0  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  9229  002CA2  D0CC               	goto	l6270
  9230                           
  9231                           ; BSR set to: 0
  9232  002CA4  0100               	movlb	0	; () banked
  9233  002CA6  A1C0               	btfss	___fladd@grs& (0+255),0,b
  9234  002CA8  D009               	goto	l6224
  9235                           
  9236                           ; BSR set to: 0
  9237  002CAA  0100               	movlb	0	; () banked
  9238  002CAC  90D8               	bcf	status,0,c
  9239  002CAE  33C0               	rrcf	___fladd@grs& (0+255),f,b
  9240  002CB0  0100               	movlb	0	; () banked
  9241  002CB2  51C0               	movf	___fladd@grs& (0+255),w,b
  9242  002CB4  0901               	iorlw	1
  9243  002CB6  0100               	movlb	0	; () banked
  9244  002CB8  6FC0               	movwf	___fladd@grs& (0+255),b
  9245  002CBA  D003               	goto	l6226
  9246  002CBC                     l6224:
  9247                           
  9248                           ; BSR set to: 0
  9249  002CBC  0100               	movlb	0	; () banked
  9250  002CBE  90D8               	bcf	status,0,c
  9251  002CC0  33C0               	rrcf	___fladd@grs& (0+255),f,b
  9252  002CC2                     l6226:
  9253                           
  9254                           ; BSR set to: 0
  9255  002CC2  0100               	movlb	0	; () banked
  9256  002CC4  A1AD               	btfss	___fladd@b& (0+255),0,b
  9257  002CC6  D002               	goto	l6230
  9258                           
  9259                           ; BSR set to: 0
  9260  002CC8  0100               	movlb	0	; () banked
  9261  002CCA  8FC0               	bsf	___fladd@grs& (0+255),7,b
  9262  002CCC                     l6230:
  9263                           
  9264                           ; BSR set to: 0
  9265  002CCC  0100               	movlb	0	; () banked
  9266  002CCE  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  9267  002CD0  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  9268  002CD2  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  9269  002CD4  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  9270  002CD6  33AD               	rrcf	___fladd@b& (0+255),f,b
  9271                           
  9272                           ; BSR set to: 0
  9273  002CD8  0100               	movlb	0	; () banked
  9274  002CDA  2BBF               	incf	___fladd@bexp& (0+255),f,b
  9275                           
  9276                           ; BSR set to: 0
  9277  002CDC  D0AF               	goto	l6270
  9278  002CDE                     l6234:
  9279                           
  9280                           ; BSR set to: 0
  9281  002CDE  0100               	movlb	0	; () banked
  9282  002CE0  51B1               	movf	___fladd@a& (0+255),w,b
  9283  002CE2  0100               	movlb	0	; () banked
  9284  002CE4  5DAD               	subwf	___fladd@b& (0+255),w,b
  9285  002CE6  0100               	movlb	0	; () banked
  9286  002CE8  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9287  002CEA  0100               	movlb	0	; () banked
  9288  002CEC  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  9289  002CEE  0100               	movlb	0	; () banked
  9290  002CF0  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9291  002CF2  0100               	movlb	0	; () banked
  9292  002CF4  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  9293  002CF6  0100               	movlb	0	; () banked
  9294  002CF8  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  9295  002CFA  0A80               	xorlw	128
  9296  002CFC  0100               	movlb	0	; () banked
  9297  002CFE  6FB5               	movwf	??___fladd& (0+255),b
  9298  002D00  0100               	movlb	0	; () banked
  9299  002D02  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9300  002D04  0A80               	xorlw	128
  9301  002D06  0100               	movlb	0	; () banked
  9302  002D08  59B5               	subwfb	??___fladd& (0+255),w,b
  9303  002D0A  B0D8               	btfsc	status,0,c
  9304  002D0C  D050               	goto	l6244
  9305                           
  9306                           ; BSR set to: 0
  9307  002D0E  C0AD  F0B5         	movff	___fladd@b,??___fladd
  9308  002D12  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  9309  002D16  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  9310  002D1A  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  9311  002D1E  0100               	movlb	0	; () banked
  9312  002D20  1FB5               	comf	??___fladd& (0+255),f,b
  9313  002D22  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  9314  002D24  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  9315  002D26  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  9316  002D28  2BB5               	incf	??___fladd& (0+255),f,b
  9317  002D2A  0E00               	movlw	0
  9318  002D2C  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  9319  002D2E  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  9320  002D30  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  9321  002D32  0100               	movlb	0	; () banked
  9322  002D34  51B1               	movf	___fladd@a& (0+255),w,b
  9323  002D36  0100               	movlb	0	; () banked
  9324  002D38  25B5               	addwf	??___fladd& (0+255),w,b
  9325  002D3A  0100               	movlb	0	; () banked
  9326  002D3C  6FB9               	movwf	(??___fladd+4)& (0+255),b
  9327  002D3E  0100               	movlb	0	; () banked
  9328  002D40  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9329  002D42  0100               	movlb	0	; () banked
  9330  002D44  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  9331  002D46  0100               	movlb	0	; () banked
  9332  002D48  6FBA               	movwf	(??___fladd+5)& (0+255),b
  9333  002D4A  0100               	movlb	0	; () banked
  9334  002D4C  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9335  002D4E  0100               	movlb	0	; () banked
  9336  002D50  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  9337  002D52  0100               	movlb	0	; () banked
  9338  002D54  6FBB               	movwf	(??___fladd+6)& (0+255),b
  9339  002D56  0100               	movlb	0	; () banked
  9340  002D58  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9341  002D5A  0100               	movlb	0	; () banked
  9342  002D5C  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  9343  002D5E  0100               	movlb	0	; () banked
  9344  002D60  6FBC               	movwf	(??___fladd+7)& (0+255),b
  9345  002D62  0EFF               	movlw	255
  9346  002D64  0100               	movlb	0	; () banked
  9347  002D66  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  9348  002D68  0100               	movlb	0	; () banked
  9349  002D6A  6FAD               	movwf	___fladd@b& (0+255),b
  9350  002D6C  0EFF               	movlw	255
  9351  002D6E  0100               	movlb	0	; () banked
  9352  002D70  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  9353  002D72  0100               	movlb	0	; () banked
  9354  002D74  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  9355  002D76  0EFF               	movlw	255
  9356  002D78  0100               	movlb	0	; () banked
  9357  002D7A  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  9358  002D7C  0100               	movlb	0	; () banked
  9359  002D7E  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  9360  002D80  0EFF               	movlw	255
  9361  002D82  0100               	movlb	0	; () banked
  9362  002D84  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  9363  002D86  0100               	movlb	0	; () banked
  9364  002D88  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9365  002D8A  0E80               	movlw	128
  9366  002D8C  0100               	movlb	0	; () banked
  9367  002D8E  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  9368                           
  9369                           ; BSR set to: 0
  9370  002D90  0100               	movlb	0	; () banked
  9371  002D92  6DC0               	negf	___fladd@grs& (0+255),b
  9372                           
  9373                           ; BSR set to: 0
  9374  002D94  0100               	movlb	0	; () banked
  9375  002D96  51C0               	movf	___fladd@grs& (0+255),w,b
  9376  002D98  0100               	movlb	0	; () banked
  9377  002D9A  A4D8               	btfss	status,2,c
  9378  002D9C  D018               	goto	l1328
  9379                           
  9380                           ; BSR set to: 0
  9381  002D9E  0E01               	movlw	1
  9382  002DA0  0100               	movlb	0	; () banked
  9383  002DA2  27AD               	addwf	___fladd@b& (0+255),f,b
  9384  002DA4  0E00               	movlw	0
  9385  002DA6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  9386  002DA8  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  9387  002DAA  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390  002DAC  D010               	goto	l1328
  9391  002DAE                     l6244:
  9392                           
  9393                           ; BSR set to: 0
  9394  002DAE  0100               	movlb	0	; () banked
  9395  002DB0  51B1               	movf	___fladd@a& (0+255),w,b
  9396  002DB2  0100               	movlb	0	; () banked
  9397  002DB4  5FAD               	subwf	___fladd@b& (0+255),f,b
  9398  002DB6  0100               	movlb	0	; () banked
  9399  002DB8  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9400  002DBA  0100               	movlb	0	; () banked
  9401  002DBC  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  9402  002DBE  0100               	movlb	0	; () banked
  9403  002DC0  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9404  002DC2  0100               	movlb	0	; () banked
  9405  002DC4  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  9406  002DC6  0100               	movlb	0	; () banked
  9407  002DC8  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9408  002DCA  0100               	movlb	0	; () banked
  9409  002DCC  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  9410  002DCE                     l1328:
  9411                           
  9412                           ; BSR set to: 0
  9413  002DCE  0100               	movlb	0	; () banked
  9414  002DD0  51AD               	movf	___fladd@b& (0+255),w,b
  9415  002DD2  0100               	movlb	0	; () banked
  9416  002DD4  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  9417  002DD6  0100               	movlb	0	; () banked
  9418  002DD8  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  9419  002DDA  0100               	movlb	0	; () banked
  9420  002DDC  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  9421  002DDE  A4D8               	btfss	status,2,c
  9422  002DE0  D02A               	goto	l6268
  9423                           
  9424                           ; BSR set to: 0
  9425  002DE2  0100               	movlb	0	; () banked
  9426  002DE4  51C0               	movf	___fladd@grs& (0+255),w,b
  9427  002DE6  0100               	movlb	0	; () banked
  9428  002DE8  A4D8               	btfss	status,2,c
  9429  002DEA  D025               	goto	l6268
  9430                           
  9431                           ; BSR set to: 0
  9432  002DEC  0E00               	movlw	0
  9433  002DEE  0100               	movlb	0	; () banked
  9434  002DF0  6FAD               	movwf	?___fladd& (0+255),b
  9435  002DF2  0E00               	movlw	0
  9436  002DF4  6FAE               	movwf	(?___fladd+1)& (0+255),b
  9437  002DF6  0E00               	movlw	0
  9438  002DF8  6FAF               	movwf	(?___fladd+2)& (0+255),b
  9439  002DFA  0E00               	movlw	0
  9440  002DFC  6FB0               	movwf	(?___fladd+3)& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443  002DFE  0012               	return	
  9444  002E00                     l6252:
  9445                           
  9446                           ; BSR set to: 0
  9447  002E00  0100               	movlb	0	; () banked
  9448  002E02  90D8               	bcf	status,0,c
  9449  002E04  37AD               	rlcf	___fladd@b& (0+255),f,b
  9450  002E06  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  9451  002E08  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  9452  002E0A  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  9453                           
  9454                           ; BSR set to: 0
  9455  002E0C  0100               	movlb	0	; () banked
  9456  002E0E  AFC0               	btfss	___fladd@grs& (0+255),7,b
  9457  002E10  D002               	goto	l6258
  9458                           
  9459                           ; BSR set to: 0
  9460  002E12  0100               	movlb	0	; () banked
  9461  002E14  81AD               	bsf	___fladd@b& (0+255),0,b
  9462  002E16                     l6258:
  9463                           
  9464                           ; BSR set to: 0
  9465  002E16  0100               	movlb	0	; () banked
  9466  002E18  A1C0               	btfss	___fladd@grs& (0+255),0,b
  9467  002E1A  D003               	goto	l6262
  9468                           
  9469                           ; BSR set to: 0
  9470  002E1C  80D8               	bsf	status,0,c
  9471  002E1E  0100               	movlb	0	; () banked
  9472  002E20  D002               	goto	L5
  9473  002E22                     l6262:
  9474                           
  9475                           ; BSR set to: 0
  9476  002E22  0100               	movlb	0	; () banked
  9477  002E24  90D8               	bcf	status,0,c
  9478  002E26                     L5:
  9479  002E26  37C0               	rlcf	___fladd@grs& (0+255),f,b
  9480                           
  9481                           ; BSR set to: 0
  9482                           
  9483                           ; BSR set to: 0
  9484  002E28  0100               	movlb	0	; () banked
  9485  002E2A  51BF               	movf	___fladd@bexp& (0+255),w,b
  9486  002E2C  0100               	movlb	0	; () banked
  9487  002E2E  B4D8               	btfsc	status,2,c
  9488  002E30  D002               	goto	l6268
  9489                           
  9490                           ; BSR set to: 0
  9491  002E32  0100               	movlb	0	; () banked
  9492  002E34  07BF               	decf	___fladd@bexp& (0+255),f,b
  9493  002E36                     l6268:
  9494                           
  9495                           ; BSR set to: 0
  9496  002E36  0100               	movlb	0	; () banked
  9497  002E38  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  9498  002E3A  D7E2               	goto	l6252
  9499  002E3C                     l6270:
  9500                           
  9501                           ; BSR set to: 0
  9502  002E3C  0E00               	movlw	0
  9503  002E3E  0100               	movlb	0	; () banked
  9504  002E40  6FBE               	movwf	___fladd@aexp& (0+255),b
  9505                           
  9506                           ; BSR set to: 0
  9507  002E42  0100               	movlb	0	; () banked
  9508  002E44  AFC0               	btfss	___fladd@grs& (0+255),7,b
  9509  002E46  D00D               	goto	l1337
  9510                           
  9511                           ; BSR set to: 0
  9512  002E48  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  9513  002E4C  0E7F               	movlw	127
  9514  002E4E  0100               	movlb	0	; () banked
  9515  002E50  17B5               	andwf	??___fladd& (0+255),f,b
  9516  002E52  A4D8               	btfss	status,2,c
  9517  002E54  D003               	goto	l6278
  9518                           
  9519                           ; BSR set to: 0
  9520                           
  9521                           ; BSR set to: 0
  9522  002E56  0100               	movlb	0	; () banked
  9523  002E58  A1AD               	btfss	___fladd@b& (0+255),0,b
  9524  002E5A  D003               	goto	l1337
  9525  002E5C                     l6278:
  9526                           
  9527                           ; BSR set to: 0
  9528  002E5C  0E01               	movlw	1
  9529  002E5E  0100               	movlb	0	; () banked
  9530  002E60  6FBE               	movwf	___fladd@aexp& (0+255),b
  9531  002E62                     l1337:
  9532                           
  9533                           ; BSR set to: 0
  9534  002E62  0100               	movlb	0	; () banked
  9535  002E64  51BE               	movf	___fladd@aexp& (0+255),w,b
  9536  002E66  0100               	movlb	0	; () banked
  9537  002E68  B4D8               	btfsc	status,2,c
  9538  002E6A  D026               	goto	l6288
  9539                           
  9540                           ; BSR set to: 0
  9541  002E6C  0E01               	movlw	1
  9542  002E6E  0100               	movlb	0	; () banked
  9543  002E70  27AD               	addwf	___fladd@b& (0+255),f,b
  9544  002E72  0E00               	movlw	0
  9545  002E74  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  9546  002E76  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  9547  002E78  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  9548                           
  9549                           ; BSR set to: 0
  9550  002E7A  0100               	movlb	0	; () banked
  9551  002E7C  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  9552  002E7E  D01C               	goto	l6288
  9553                           
  9554                           ; BSR set to: 0
  9555  002E80  C0AD  F0B5         	movff	___fladd@b,??___fladd
  9556  002E84  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  9557  002E88  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  9558  002E8C  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  9559  002E90  0100               	movlb	0	; () banked
  9560  002E92  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  9561  002E94  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  9562  002E96  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  9563  002E98  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  9564  002E9A  33B5               	rrcf	??___fladd& (0+255),f,b
  9565  002E9C  C0B5  F0AD         	movff	??___fladd,___fladd@b
  9566  002EA0  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  9567  002EA4  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  9568  002EA8  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  9569  002EAC  0100               	movlb	0	; () banked
  9570  002EAE  29BF               	incf	___fladd@bexp& (0+255),w,b
  9571  002EB0  B4D8               	btfsc	status,2,c
  9572  002EB2  D002               	goto	l6288
  9573                           
  9574                           ; BSR set to: 0
  9575  002EB4  0100               	movlb	0	; () banked
  9576  002EB6  2BBF               	incf	___fladd@bexp& (0+255),f,b
  9577  002EB8                     l6288:
  9578                           
  9579                           ; BSR set to: 0
  9580  002EB8  0100               	movlb	0	; () banked
  9581  002EBA  29BF               	incf	___fladd@bexp& (0+255),w,b
  9582  002EBC  B4D8               	btfsc	status,2,c
  9583  002EBE  D005               	goto	l6292
  9584                           
  9585                           ; BSR set to: 0
  9586  002EC0  0100               	movlb	0	; () banked
  9587  002EC2  51BF               	movf	___fladd@bexp& (0+255),w,b
  9588  002EC4  0100               	movlb	0	; () banked
  9589  002EC6  A4D8               	btfss	status,2,c
  9590  002EC8  D011               	goto	l6296
  9591  002ECA                     l6292:
  9592                           
  9593                           ; BSR set to: 0
  9594  002ECA  0E00               	movlw	0
  9595  002ECC  0100               	movlb	0	; () banked
  9596  002ECE  6FAD               	movwf	___fladd@b& (0+255),b
  9597  002ED0  0E00               	movlw	0
  9598  002ED2  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  9599  002ED4  0E00               	movlw	0
  9600  002ED6  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  9601  002ED8  0E00               	movlw	0
  9602  002EDA  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9603  002EDC  0100               	movlb	0	; () banked
  9604  002EDE  51BF               	movf	___fladd@bexp& (0+255),w,b
  9605  002EE0  0100               	movlb	0	; () banked
  9606  002EE2  A4D8               	btfss	status,2,c
  9607  002EE4  D003               	goto	l6296
  9608                           
  9609                           ; BSR set to: 0
  9610  002EE6  0E00               	movlw	0
  9611  002EE8  0100               	movlb	0	; () banked
  9612  002EEA  6FBD               	movwf	___fladd@signs& (0+255),b
  9613  002EEC                     l6296:
  9614                           
  9615                           ; BSR set to: 0
  9616  002EEC  0100               	movlb	0	; () banked
  9617  002EEE  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  9618  002EF0  D003               	goto	l6300
  9619                           
  9620                           ; BSR set to: 0
  9621  002EF2  0100               	movlb	0	; () banked
  9622  002EF4  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  9623  002EF6  D002               	goto	l6302
  9624  002EF8                     l6300:
  9625                           
  9626                           ; BSR set to: 0
  9627  002EF8  0100               	movlb	0	; () banked
  9628  002EFA  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  9629  002EFC                     l6302:
  9630                           
  9631                           ; BSR set to: 0
  9632  002EFC  0100               	movlb	0	; () banked
  9633  002EFE  90D8               	bcf	status,0,c
  9634  002F00  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  9635  002F02  0100               	movlb	0	; () banked
  9636  002F04  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9637                           
  9638                           ; BSR set to: 0
  9639  002F06  0100               	movlb	0	; () banked
  9640  002F08  AFBD               	btfss	___fladd@signs& (0+255),7,b
  9641  002F0A  D002               	goto	l6308
  9642                           
  9643                           ; BSR set to: 0
  9644  002F0C  0100               	movlb	0	; () banked
  9645  002F0E  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  9646  002F10                     l6308:
  9647                           
  9648                           ; BSR set to: 0
  9649  002F10  C0AD  F0AD         	movff	___fladd@b,?___fladd
  9650  002F14  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  9651  002F18  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  9652  002F1C  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  9653  002F20  0012               	return	
  9654  002F22                     __end_of___fladd:
  9655                           	opt stack 0
  9656                           tblptru	equ	0xFF8
  9657                           tblptrh	equ	0xFF7
  9658                           tblptrl	equ	0xFF6
  9659                           tablat	equ	0xFF5
  9660                           prodh	equ	0xFF4
  9661                           prodl	equ	0xFF3
  9662                           postinc0	equ	0xFEE
  9663                           wreg	equ	0xFE8
  9664                           postdec1	equ	0xFE5
  9665                           fsr1l	equ	0xFE1
  9666                           indf2	equ	0xFDF
  9667                           postinc2	equ	0xFDE
  9668                           postdec2	equ	0xFDD
  9669                           fsr2h	equ	0xFDA
  9670                           fsr2l	equ	0xFD9
  9671                           status	equ	0xFD8
  9672                           
  9673 ;; *************** function ___flge *****************
  9674 ;; Defined at:
  9675 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  ff1             4   81[BANK0 ] unsigned char 
  9678 ;;  ff2             4   85[BANK0 ] unsigned char 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;		None               void
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9690 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;Total ram usage:       12 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:    4
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_parallelo
  9701 ;;		_asin
  9702 ;;		_atan
  9703 ;;		_cos
  9704 ;;		_sin
  9705 ;;		_floor
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text24
  9710  00530A                     __ptext24:
  9711                           	opt stack 0
  9712  00530A                     ___flge:
  9713                           	opt stack 22
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;incstack = 0
  9717  00530A  0E00               	movlw	0
  9718  00530C  0100               	movlb	0	; () banked
  9719  00530E  15B1               	andwf	___flge@ff1& (0+255),w,b
  9720  005310  0100               	movlb	0	; () banked
  9721  005312  6FB9               	movwf	??___flge& (0+255),b
  9722  005314  0E00               	movlw	0
  9723  005316  0100               	movlb	0	; () banked
  9724  005318  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  9725  00531A  0100               	movlb	0	; () banked
  9726  00531C  6FBA               	movwf	(??___flge+1)& (0+255),b
  9727  00531E  0E80               	movlw	128
  9728  005320  0100               	movlb	0	; () banked
  9729  005322  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  9730  005324  0100               	movlb	0	; () banked
  9731  005326  6FBB               	movwf	(??___flge+2)& (0+255),b
  9732  005328  0E7F               	movlw	127
  9733  00532A  0100               	movlb	0	; () banked
  9734  00532C  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  9735  00532E  0100               	movlb	0	; () banked
  9736  005330  6FBC               	movwf	(??___flge+3)& (0+255),b
  9737  005332  0100               	movlb	0	; () banked
  9738  005334  51B9               	movf	??___flge& (0+255),w,b
  9739  005336  0100               	movlb	0	; () banked
  9740  005338  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  9741  00533A  0100               	movlb	0	; () banked
  9742  00533C  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  9743  00533E  0100               	movlb	0	; () banked
  9744  005340  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  9745  005342  A4D8               	btfss	status,2,c
  9746  005344  D009               	goto	l6446
  9747                           
  9748                           ; BSR set to: 0
  9749  005346  0E00               	movlw	0
  9750  005348  0100               	movlb	0	; () banked
  9751  00534A  6FB1               	movwf	___flge@ff1& (0+255),b
  9752  00534C  0E00               	movlw	0
  9753  00534E  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  9754  005350  0E00               	movlw	0
  9755  005352  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  9756  005354  0E00               	movlw	0
  9757  005356  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  9758  005358                     l6446:
  9759                           
  9760                           ; BSR set to: 0
  9761  005358  0E00               	movlw	0
  9762  00535A  0100               	movlb	0	; () banked
  9763  00535C  15B5               	andwf	___flge@ff2& (0+255),w,b
  9764  00535E  0100               	movlb	0	; () banked
  9765  005360  6FB9               	movwf	??___flge& (0+255),b
  9766  005362  0E00               	movlw	0
  9767  005364  0100               	movlb	0	; () banked
  9768  005366  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  9769  005368  0100               	movlb	0	; () banked
  9770  00536A  6FBA               	movwf	(??___flge+1)& (0+255),b
  9771  00536C  0E80               	movlw	128
  9772  00536E  0100               	movlb	0	; () banked
  9773  005370  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  9774  005372  0100               	movlb	0	; () banked
  9775  005374  6FBB               	movwf	(??___flge+2)& (0+255),b
  9776  005376  0E7F               	movlw	127
  9777  005378  0100               	movlb	0	; () banked
  9778  00537A  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  9779  00537C  0100               	movlb	0	; () banked
  9780  00537E  6FBC               	movwf	(??___flge+3)& (0+255),b
  9781  005380  0100               	movlb	0	; () banked
  9782  005382  51B9               	movf	??___flge& (0+255),w,b
  9783  005384  0100               	movlb	0	; () banked
  9784  005386  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  9785  005388  0100               	movlb	0	; () banked
  9786  00538A  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  9787  00538C  0100               	movlb	0	; () banked
  9788  00538E  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  9789  005390  A4D8               	btfss	status,2,c
  9790  005392  D009               	goto	l6450
  9791                           
  9792                           ; BSR set to: 0
  9793  005394  0E00               	movlw	0
  9794  005396  0100               	movlb	0	; () banked
  9795  005398  6FB5               	movwf	___flge@ff2& (0+255),b
  9796  00539A  0E00               	movlw	0
  9797  00539C  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  9798  00539E  0E00               	movlw	0
  9799  0053A0  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  9800  0053A2  0E00               	movlw	0
  9801  0053A4  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  9802  0053A6                     l6450:
  9803                           
  9804                           ; BSR set to: 0
  9805  0053A6  0100               	movlb	0	; () banked
  9806  0053A8  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  9807  0053AA  D026               	goto	l6454
  9808                           
  9809                           ; BSR set to: 0
  9810  0053AC  C0B1  F0B9         	movff	___flge@ff1,??___flge
  9811  0053B0  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  9812  0053B4  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  9813  0053B8  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  9814  0053BC  0100               	movlb	0	; () banked
  9815  0053BE  1FB9               	comf	??___flge& (0+255),f,b
  9816  0053C0  1FBA               	comf	(??___flge+1)& (0+255),f,b
  9817  0053C2  1FBB               	comf	(??___flge+2)& (0+255),f,b
  9818  0053C4  1FBC               	comf	(??___flge+3)& (0+255),f,b
  9819  0053C6  2BB9               	incf	??___flge& (0+255),f,b
  9820  0053C8  0E00               	movlw	0
  9821  0053CA  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  9822  0053CC  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  9823  0053CE  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  9824  0053D0  0E00               	movlw	0
  9825  0053D2  0100               	movlb	0	; () banked
  9826  0053D4  25B9               	addwf	??___flge& (0+255),w,b
  9827  0053D6  0100               	movlb	0	; () banked
  9828  0053D8  6FB1               	movwf	___flge@ff1& (0+255),b
  9829  0053DA  0E00               	movlw	0
  9830  0053DC  0100               	movlb	0	; () banked
  9831  0053DE  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  9832  0053E0  0100               	movlb	0	; () banked
  9833  0053E2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  9834  0053E4  0E00               	movlw	0
  9835  0053E6  0100               	movlb	0	; () banked
  9836  0053E8  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  9837  0053EA  0100               	movlb	0	; () banked
  9838  0053EC  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  9839  0053EE  0E80               	movlw	128
  9840  0053F0  0100               	movlb	0	; () banked
  9841  0053F2  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  9842  0053F4  0100               	movlb	0	; () banked
  9843  0053F6  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  9844  0053F8                     l6454:
  9845                           
  9846                           ; BSR set to: 0
  9847  0053F8  0100               	movlb	0	; () banked
  9848  0053FA  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  9849  0053FC  D026               	goto	l1059
  9850                           
  9851                           ; BSR set to: 0
  9852  0053FE  C0B5  F0B9         	movff	___flge@ff2,??___flge
  9853  005402  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  9854  005406  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  9855  00540A  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  9856  00540E  0100               	movlb	0	; () banked
  9857  005410  1FB9               	comf	??___flge& (0+255),f,b
  9858  005412  1FBA               	comf	(??___flge+1)& (0+255),f,b
  9859  005414  1FBB               	comf	(??___flge+2)& (0+255),f,b
  9860  005416  1FBC               	comf	(??___flge+3)& (0+255),f,b
  9861  005418  2BB9               	incf	??___flge& (0+255),f,b
  9862  00541A  0E00               	movlw	0
  9863  00541C  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  9864  00541E  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  9865  005420  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  9866  005422  0E00               	movlw	0
  9867  005424  0100               	movlb	0	; () banked
  9868  005426  25B9               	addwf	??___flge& (0+255),w,b
  9869  005428  0100               	movlb	0	; () banked
  9870  00542A  6FB5               	movwf	___flge@ff2& (0+255),b
  9871  00542C  0E00               	movlw	0
  9872  00542E  0100               	movlb	0	; () banked
  9873  005430  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  9874  005432  0100               	movlb	0	; () banked
  9875  005434  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  9876  005436  0E00               	movlw	0
  9877  005438  0100               	movlb	0	; () banked
  9878  00543A  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  9879  00543C  0100               	movlb	0	; () banked
  9880  00543E  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  9881  005440  0E80               	movlw	128
  9882  005442  0100               	movlb	0	; () banked
  9883  005444  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  9884  005446  0100               	movlb	0	; () banked
  9885  005448  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  9886  00544A                     l1059:
  9887                           
  9888                           ; BSR set to: 0
  9889  00544A  0E00               	movlw	0
  9890  00544C  0100               	movlb	0	; () banked
  9891  00544E  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  9892  005450  0E00               	movlw	0
  9893  005452  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9894  005454  0E00               	movlw	0
  9895  005456  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9896  005458  0E80               	movlw	128
  9897  00545A  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9898  00545C  0E00               	movlw	0
  9899  00545E  0100               	movlb	0	; () banked
  9900  005460  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  9901  005462  0E00               	movlw	0
  9902  005464  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9903  005466  0E00               	movlw	0
  9904  005468  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9905  00546A  0E80               	movlw	128
  9906  00546C  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9907  00546E  0100               	movlb	0	; () banked
  9908  005470  51B5               	movf	___flge@ff2& (0+255),w,b
  9909  005472  0100               	movlb	0	; () banked
  9910  005474  5DB1               	subwf	___flge@ff1& (0+255),w,b
  9911  005476  0100               	movlb	0	; () banked
  9912  005478  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  9913  00547A  0100               	movlb	0	; () banked
  9914  00547C  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9915  00547E  0100               	movlb	0	; () banked
  9916  005480  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  9917  005482  0100               	movlb	0	; () banked
  9918  005484  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9919  005486  0100               	movlb	0	; () banked
  9920  005488  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  9921  00548A  0100               	movlb	0	; () banked
  9922  00548C  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9923  00548E  B0D8               	btfsc	status,0,c
  9924  005490  D002               	goto	l6460
  9925                           
  9926                           ; BSR set to: 0
  9927  005492  90D8               	bcf	status,0,c
  9928  005494  0012               	return	
  9929  005496                     l6460:
  9930                           
  9931                           ; BSR set to: 0
  9932  005496  80D8               	bsf	status,0,c
  9933                           
  9934                           ; BSR set to: 0
  9935  005498  0012               	return	
  9936  00549A                     __end_of___flge:
  9937                           	opt stack 0
  9938                           tblptru	equ	0xFF8
  9939                           tblptrh	equ	0xFF7
  9940                           tblptrl	equ	0xFF6
  9941                           tablat	equ	0xFF5
  9942                           prodh	equ	0xFF4
  9943                           prodl	equ	0xFF3
  9944                           postinc0	equ	0xFEE
  9945                           wreg	equ	0xFE8
  9946                           postdec1	equ	0xFE5
  9947                           fsr1l	equ	0xFE1
  9948                           indf2	equ	0xFDF
  9949                           postinc2	equ	0xFDE
  9950                           postdec2	equ	0xFDD
  9951                           fsr2h	equ	0xFDA
  9952                           fsr2l	equ	0xFD9
  9953                           status	equ	0xFD8
  9954                           
  9955 ;; *************** function ___fldiv *****************
  9956 ;; Defined at:
  9957 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  b               4   23[BANK0 ] unsigned char 
  9960 ;;  a               4   27[BANK0 ] unsigned char 
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  grs             4   42[BANK0 ] unsigned long 
  9963 ;;  rem             4   36[BANK0 ] unsigned long 
  9964 ;;  new_exp         2   40[BANK0 ] int 
  9965 ;;  aexp            1   47[BANK0 ] unsigned char 
  9966 ;;  bexp            1   46[BANK0 ] unsigned char 
  9967 ;;  sign            1   35[BANK0 ] unsigned char 
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  4   23[BANK0 ] unsigned char 
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9977 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;Total ram usage:       25 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    4
  9984 ;; This function calls:
  9985 ;;		Nothing
  9986 ;; This function is called by:
  9987 ;;		_parallelo
  9988 ;;		_matematica
  9989 ;;		_asin
  9990 ;;		_atan
  9991 ;;		_sin
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           	psect	text25
  9996  003B64                     __ptext25:
  9997                           	opt stack 0
  9998  003B64                     ___fldiv:
  9999                           	opt stack 22
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;incstack = 0
 10003  003B64  0100               	movlb	0	; () banked
 10004  003B66  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10005  003B68  0B80               	andlw	128
 10006  003B6A  0100               	movlb	0	; () banked
 10007  003B6C  6F83               	movwf	___fldiv@sign& (0+255),b
 10008  003B6E  0100               	movlb	0	; () banked
 10009  003B70  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10010  003B72  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10011  003B74  0100               	movlb	0	; () banked
 10012  003B76  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10013                           
 10014                           ; BSR set to: 0
 10015  003B78  0100               	movlb	0	; () banked
 10016  003B7A  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10017  003B7C  D002               	goto	l6580
 10018                           
 10019                           ; BSR set to: 0
 10020  003B7E  0100               	movlb	0	; () banked
 10021  003B80  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10022  003B82                     l6580:
 10023                           
 10024                           ; BSR set to: 0
 10025  003B82  0100               	movlb	0	; () banked
 10026  003B84  518E               	movf	___fldiv@bexp& (0+255),w,b
 10027  003B86  0100               	movlb	0	; () banked
 10028  003B88  B4D8               	btfsc	status,2,c
 10029  003B8A  D012               	goto	l6590
 10030                           
 10031                           ; BSR set to: 0
 10032  003B8C  0100               	movlb	0	; () banked
 10033  003B8E  298E               	incf	___fldiv@bexp& (0+255),w,b
 10034  003B90  A4D8               	btfss	status,2,c
 10035  003B92  D009               	goto	l6586
 10036                           
 10037                           ; BSR set to: 0
 10038  003B94  0E00               	movlw	0
 10039  003B96  0100               	movlb	0	; () banked
 10040  003B98  6F77               	movwf	___fldiv@b& (0+255),b
 10041  003B9A  0E00               	movlw	0
 10042  003B9C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10043  003B9E  0E00               	movlw	0
 10044  003BA0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10045  003BA2  0E00               	movlw	0
 10046  003BA4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10047  003BA6                     l6586:
 10048                           
 10049                           ; BSR set to: 0
 10050  003BA6  0100               	movlb	0	; () banked
 10051  003BA8  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10052                           
 10053                           ; BSR set to: 0
 10054  003BAA  0E00               	movlw	0
 10055  003BAC  0100               	movlb	0	; () banked
 10056  003BAE  D008               	goto	L6
 10057  003BB0                     l6590:
 10058                           
 10059                           ; BSR set to: 0
 10060  003BB0  0E00               	movlw	0
 10061  003BB2  0100               	movlb	0	; () banked
 10062  003BB4  6F77               	movwf	___fldiv@b& (0+255),b
 10063  003BB6  0E00               	movlw	0
 10064  003BB8  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10065  003BBA  0E00               	movlw	0
 10066  003BBC  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10067  003BBE  0E00               	movlw	0
 10068  003BC0                     L6:
 10069  003BC0  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10070                           
 10071                           ; BSR set to: 0
 10072                           
 10073                           ; BSR set to: 0
 10074  003BC2  0100               	movlb	0	; () banked
 10075  003BC4  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10076  003BC6  0B80               	andlw	128
 10077  003BC8  0100               	movlb	0	; () banked
 10078  003BCA  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10079                           
 10080                           ; BSR set to: 0
 10081  003BCC  0100               	movlb	0	; () banked
 10082  003BCE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10083  003BD0  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10084  003BD2  0100               	movlb	0	; () banked
 10085  003BD4  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10086                           
 10087                           ; BSR set to: 0
 10088  003BD6  0100               	movlb	0	; () banked
 10089  003BD8  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10090  003BDA  D002               	goto	l6600
 10091                           
 10092                           ; BSR set to: 0
 10093  003BDC  0100               	movlb	0	; () banked
 10094  003BDE  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10095  003BE0                     l6600:
 10096                           
 10097                           ; BSR set to: 0
 10098  003BE0  0100               	movlb	0	; () banked
 10099  003BE2  518F               	movf	___fldiv@aexp& (0+255),w,b
 10100  003BE4  0100               	movlb	0	; () banked
 10101  003BE6  B4D8               	btfsc	status,2,c
 10102  003BE8  D012               	goto	l6610
 10103                           
 10104                           ; BSR set to: 0
 10105  003BEA  0100               	movlb	0	; () banked
 10106  003BEC  298F               	incf	___fldiv@aexp& (0+255),w,b
 10107  003BEE  A4D8               	btfss	status,2,c
 10108  003BF0  D009               	goto	l6606
 10109                           
 10110                           ; BSR set to: 0
 10111  003BF2  0E00               	movlw	0
 10112  003BF4  0100               	movlb	0	; () banked
 10113  003BF6  6F7B               	movwf	___fldiv@a& (0+255),b
 10114  003BF8  0E00               	movlw	0
 10115  003BFA  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10116  003BFC  0E00               	movlw	0
 10117  003BFE  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10118  003C00  0E00               	movlw	0
 10119  003C02  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10120  003C04                     l6606:
 10121                           
 10122                           ; BSR set to: 0
 10123  003C04  0100               	movlb	0	; () banked
 10124  003C06  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10125                           
 10126                           ; BSR set to: 0
 10127  003C08  0E00               	movlw	0
 10128  003C0A  0100               	movlb	0	; () banked
 10129  003C0C  D008               	goto	L7
 10130  003C0E                     l6610:
 10131                           
 10132                           ; BSR set to: 0
 10133  003C0E  0E00               	movlw	0
 10134  003C10  0100               	movlb	0	; () banked
 10135  003C12  6F7B               	movwf	___fldiv@a& (0+255),b
 10136  003C14  0E00               	movlw	0
 10137  003C16  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10138  003C18  0E00               	movlw	0
 10139  003C1A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10140  003C1C  0E00               	movlw	0
 10141  003C1E                     L7:
 10142  003C1E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10143                           
 10144                           ; BSR set to: 0
 10145                           
 10146                           ; BSR set to: 0
 10147  003C20  0100               	movlb	0	; () banked
 10148  003C22  517B               	movf	___fldiv@a& (0+255),w,b
 10149  003C24  0100               	movlb	0	; () banked
 10150  003C26  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10151  003C28  0100               	movlb	0	; () banked
 10152  003C2A  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10153  003C2C  0100               	movlb	0	; () banked
 10154  003C2E  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10155  003C30  A4D8               	btfss	status,2,c
 10156  003C32  D017               	goto	l6622
 10157                           
 10158                           ; BSR set to: 0
 10159  003C34  0E00               	movlw	0
 10160  003C36  0100               	movlb	0	; () banked
 10161  003C38  6F77               	movwf	___fldiv@b& (0+255),b
 10162  003C3A  0E00               	movlw	0
 10163  003C3C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10164  003C3E  0E00               	movlw	0
 10165  003C40  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10166  003C42  0E00               	movlw	0
 10167  003C44  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10168                           
 10169                           ; BSR set to: 0
 10170  003C46  0100               	movlb	0	; () banked
 10171  003C48  0E80               	movlw	128
 10172  003C4A  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10173  003C4C  0E7F               	movlw	127
 10174  003C4E  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10175                           
 10176                           ; BSR set to: 0
 10177  003C50  C077  F077         	movff	___fldiv@b,?___fldiv
 10178  003C54  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10179  003C58  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10180  003C5C  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10181                           
 10182                           ; BSR set to: 0
 10183  003C60  0012               	return	
 10184  003C62                     l6622:
 10185                           
 10186                           ; BSR set to: 0
 10187  003C62  0100               	movlb	0	; () banked
 10188  003C64  518E               	movf	___fldiv@bexp& (0+255),w,b
 10189  003C66  0100               	movlb	0	; () banked
 10190  003C68  A4D8               	btfss	status,2,c
 10191  003C6A  D012               	goto	l6630
 10192                           
 10193                           ; BSR set to: 0
 10194  003C6C  0E00               	movlw	0
 10195  003C6E  0100               	movlb	0	; () banked
 10196  003C70  6F77               	movwf	___fldiv@b& (0+255),b
 10197  003C72  0E00               	movlw	0
 10198  003C74  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10199  003C76  0E00               	movlw	0
 10200  003C78  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10201  003C7A  0E00               	movlw	0
 10202  003C7C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10203                           
 10204                           ; BSR set to: 0
 10205  003C7E  C077  F077         	movff	___fldiv@b,?___fldiv
 10206  003C82  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10207  003C86  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10208  003C8A  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10209                           
 10210                           ; BSR set to: 0
 10211  003C8E  0012               	return	
 10212  003C90                     l6630:
 10213                           
 10214                           ; BSR set to: 0
 10215  003C90  0100               	movlb	0	; () banked
 10216  003C92  518F               	movf	___fldiv@aexp& (0+255),w,b
 10217  003C94  0100               	movlb	0	; () banked
 10218  003C96  6F7F               	movwf	??___fldiv& (0+255),b
 10219  003C98  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10220  003C9A  0100               	movlb	0	; () banked
 10221  003C9C  1F7F               	comf	??___fldiv& (0+255),f,b
 10222  003C9E  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10223  003CA0  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10224  003CA2  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10225  003CA4  0100               	movlb	0	; () banked
 10226  003CA6  518E               	movf	___fldiv@bexp& (0+255),w,b
 10227  003CA8  0100               	movlb	0	; () banked
 10228  003CAA  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10229  003CAC  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10230  003CAE  0100               	movlb	0	; () banked
 10231  003CB0  517F               	movf	??___fldiv& (0+255),w,b
 10232  003CB2  0100               	movlb	0	; () banked
 10233  003CB4  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10234  003CB6  0100               	movlb	0	; () banked
 10235  003CB8  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10236  003CBA  0100               	movlb	0	; () banked
 10237  003CBC  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10238  003CBE  0E7F               	movlw	127
 10239  003CC0  0100               	movlb	0	; () banked
 10240  003CC2  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10241  003CC4  0100               	movlb	0	; () banked
 10242  003CC6  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10243  003CC8  0E00               	movlw	0
 10244  003CCA  0100               	movlb	0	; () banked
 10245  003CCC  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10246  003CCE  0100               	movlb	0	; () banked
 10247  003CD0  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10248                           
 10249                           ; BSR set to: 0
 10250  003CD2  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10251  003CD6  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10252  003CDA  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10253  003CDE  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10254                           
 10255                           ; BSR set to: 0
 10256  003CE2  0E00               	movlw	0
 10257  003CE4  0100               	movlb	0	; () banked
 10258  003CE6  6F77               	movwf	___fldiv@b& (0+255),b
 10259  003CE8  0E00               	movlw	0
 10260  003CEA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10261  003CEC  0E00               	movlw	0
 10262  003CEE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10263  003CF0  0E00               	movlw	0
 10264  003CF2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10265                           
 10266                           ; BSR set to: 0
 10267  003CF4  0E00               	movlw	0
 10268  003CF6  0100               	movlb	0	; () banked
 10269  003CF8  6F8A               	movwf	___fldiv@grs& (0+255),b
 10270  003CFA  0E00               	movlw	0
 10271  003CFC  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10272  003CFE  0E00               	movlw	0
 10273  003D00  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10274  003D02  0E00               	movlw	0
 10275  003D04  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10276                           
 10277                           ; BSR set to: 0
 10278  003D06  0E00               	movlw	0
 10279  003D08  0100               	movlb	0	; () banked
 10280  003D0A  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10281  003D0C  D042               	goto	l1367
 10282  003D0E                     l6640:
 10283                           
 10284                           ; BSR set to: 0
 10285  003D0E  0100               	movlb	0	; () banked
 10286  003D10  518F               	movf	___fldiv@aexp& (0+255),w,b
 10287  003D12  0100               	movlb	0	; () banked
 10288  003D14  B4D8               	btfsc	status,2,c
 10289  003D16  D017               	goto	l6648
 10290                           
 10291                           ; BSR set to: 0
 10292  003D18  0100               	movlb	0	; () banked
 10293  003D1A  90D8               	bcf	status,0,c
 10294  003D1C  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10295  003D1E  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10296  003D20  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10297  003D22  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10298  003D24  0100               	movlb	0	; () banked
 10299  003D26  90D8               	bcf	status,0,c
 10300  003D28  3777               	rlcf	___fldiv@b& (0+255),f,b
 10301  003D2A  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10302  003D2C  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10303  003D2E  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10304                           
 10305                           ; BSR set to: 0
 10306  003D30  0100               	movlb	0	; () banked
 10307  003D32  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10308  003D34  D002               	goto	l1370
 10309                           
 10310                           ; BSR set to: 0
 10311  003D36  0100               	movlb	0	; () banked
 10312  003D38  8177               	bsf	___fldiv@b& (0+255),0,b
 10313  003D3A                     l1370:
 10314                           
 10315                           ; BSR set to: 0
 10316  003D3A  0100               	movlb	0	; () banked
 10317  003D3C  90D8               	bcf	status,0,c
 10318  003D3E  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10319  003D40  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10320  003D42  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10321  003D44  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10322  003D46                     l6648:
 10323                           
 10324                           ; BSR set to: 0
 10325  003D46  0100               	movlb	0	; () banked
 10326  003D48  517B               	movf	___fldiv@a& (0+255),w,b
 10327  003D4A  0100               	movlb	0	; () banked
 10328  003D4C  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10329  003D4E  0100               	movlb	0	; () banked
 10330  003D50  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10331  003D52  0100               	movlb	0	; () banked
 10332  003D54  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10333  003D56  0100               	movlb	0	; () banked
 10334  003D58  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10335  003D5A  0100               	movlb	0	; () banked
 10336  003D5C  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10337  003D5E  0100               	movlb	0	; () banked
 10338  003D60  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10339  003D62  0100               	movlb	0	; () banked
 10340  003D64  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10341  003D66  A0D8               	btfss	status,0,c
 10342  003D68  D012               	goto	l6654
 10343                           
 10344                           ; BSR set to: 0
 10345  003D6A  0100               	movlb	0	; () banked
 10346  003D6C  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10347                           
 10348                           ; BSR set to: 0
 10349  003D6E  0100               	movlb	0	; () banked
 10350  003D70  517B               	movf	___fldiv@a& (0+255),w,b
 10351  003D72  0100               	movlb	0	; () banked
 10352  003D74  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10353  003D76  0100               	movlb	0	; () banked
 10354  003D78  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10355  003D7A  0100               	movlb	0	; () banked
 10356  003D7C  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10357  003D7E  0100               	movlb	0	; () banked
 10358  003D80  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10359  003D82  0100               	movlb	0	; () banked
 10360  003D84  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10361  003D86  0100               	movlb	0	; () banked
 10362  003D88  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10363  003D8A  0100               	movlb	0	; () banked
 10364  003D8C  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10365  003D8E                     l6654:
 10366                           
 10367                           ; BSR set to: 0
 10368  003D8E  0100               	movlb	0	; () banked
 10369  003D90  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10370  003D92                     l1367:
 10371                           
 10372                           ; BSR set to: 0
 10373  003D92  0E19               	movlw	25
 10374  003D94  0100               	movlb	0	; () banked
 10375  003D96  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10376  003D98  D7BA               	goto	l6640
 10377                           
 10378                           ; BSR set to: 0
 10379                           
 10380                           ; BSR set to: 0
 10381  003D9A  0100               	movlb	0	; () banked
 10382  003D9C  5184               	movf	___fldiv@rem& (0+255),w,b
 10383  003D9E  0100               	movlb	0	; () banked
 10384  003DA0  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10385  003DA2  0100               	movlb	0	; () banked
 10386  003DA4  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10387  003DA6  0100               	movlb	0	; () banked
 10388  003DA8  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10389  003DAA  B4D8               	btfsc	status,2,c
 10390  003DAC  D018               	goto	l6666
 10391                           
 10392                           ; BSR set to: 0
 10393  003DAE  0100               	movlb	0	; () banked
 10394  003DB0  818A               	bsf	___fldiv@grs& (0+255),0,b
 10395                           
 10396                           ; BSR set to: 0
 10397  003DB2  D015               	goto	l6666
 10398  003DB4                     l6660:
 10399                           
 10400                           ; BSR set to: 0
 10401  003DB4  0100               	movlb	0	; () banked
 10402  003DB6  90D8               	bcf	status,0,c
 10403  003DB8  3777               	rlcf	___fldiv@b& (0+255),f,b
 10404  003DBA  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10405  003DBC  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10406  003DBE  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10407                           
 10408                           ; BSR set to: 0
 10409  003DC0  0100               	movlb	0	; () banked
 10410  003DC2  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10411  003DC4  D002               	goto	l1376
 10412                           
 10413                           ; BSR set to: 0
 10414  003DC6  0100               	movlb	0	; () banked
 10415  003DC8  8177               	bsf	___fldiv@b& (0+255),0,b
 10416  003DCA                     l1376:
 10417                           
 10418                           ; BSR set to: 0
 10419  003DCA  0100               	movlb	0	; () banked
 10420  003DCC  90D8               	bcf	status,0,c
 10421  003DCE  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10422  003DD0  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10423  003DD2  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10424  003DD4  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10425  003DD6  0100               	movlb	0	; () banked
 10426  003DD8  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10427  003DDA  A0D8               	btfss	status,0,c
 10428  003DDC  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10429  003DDE                     l6666:
 10430                           
 10431                           ; BSR set to: 0
 10432  003DDE  0100               	movlb	0	; () banked
 10433  003DE0  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10434  003DE2  D7E8               	goto	l6660
 10435                           
 10436                           ; BSR set to: 0
 10437                           
 10438                           ; BSR set to: 0
 10439  003DE4  0E00               	movlw	0
 10440  003DE6  0100               	movlb	0	; () banked
 10441  003DE8  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10442                           
 10443                           ; BSR set to: 0
 10444  003DEA  0100               	movlb	0	; () banked
 10445  003DEC  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10446  003DEE  D024               	goto	l1378
 10447                           
 10448                           ; BSR set to: 0
 10449  003DF0  0EFF               	movlw	255
 10450  003DF2  0100               	movlb	0	; () banked
 10451  003DF4  158A               	andwf	___fldiv@grs& (0+255),w,b
 10452  003DF6  0100               	movlb	0	; () banked
 10453  003DF8  6F7F               	movwf	??___fldiv& (0+255),b
 10454  003DFA  0EFF               	movlw	255
 10455  003DFC  0100               	movlb	0	; () banked
 10456  003DFE  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10457  003E00  0100               	movlb	0	; () banked
 10458  003E02  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10459  003E04  0EFF               	movlw	255
 10460  003E06  0100               	movlb	0	; () banked
 10461  003E08  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10462  003E0A  0100               	movlb	0	; () banked
 10463  003E0C  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10464  003E0E  0E7F               	movlw	127
 10465  003E10  0100               	movlb	0	; () banked
 10466  003E12  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10467  003E14  0100               	movlb	0	; () banked
 10468  003E16  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10469  003E18  0100               	movlb	0	; () banked
 10470  003E1A  517F               	movf	??___fldiv& (0+255),w,b
 10471  003E1C  0100               	movlb	0	; () banked
 10472  003E1E  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10473  003E20  0100               	movlb	0	; () banked
 10474  003E22  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10475  003E24  0100               	movlb	0	; () banked
 10476  003E26  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10477  003E28  A4D8               	btfss	status,2,c
 10478  003E2A  D003               	goto	l6676
 10479                           
 10480                           ; BSR set to: 0
 10481                           
 10482                           ; BSR set to: 0
 10483  003E2C  0100               	movlb	0	; () banked
 10484  003E2E  A177               	btfss	___fldiv@b& (0+255),0,b
 10485  003E30  D003               	goto	l1378
 10486  003E32                     l6676:
 10487                           
 10488                           ; BSR set to: 0
 10489  003E32  0E01               	movlw	1
 10490  003E34  0100               	movlb	0	; () banked
 10491  003E36  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10492  003E38                     l1378:
 10493                           
 10494                           ; BSR set to: 0
 10495  003E38  0100               	movlb	0	; () banked
 10496  003E3A  518F               	movf	___fldiv@aexp& (0+255),w,b
 10497  003E3C  0100               	movlb	0	; () banked
 10498  003E3E  B4D8               	btfsc	status,2,c
 10499  003E40  D023               	goto	l6686
 10500                           
 10501                           ; BSR set to: 0
 10502  003E42  0E01               	movlw	1
 10503  003E44  0100               	movlb	0	; () banked
 10504  003E46  2777               	addwf	___fldiv@b& (0+255),f,b
 10505  003E48  0E00               	movlw	0
 10506  003E4A  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10507  003E4C  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10508  003E4E  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10509                           
 10510                           ; BSR set to: 0
 10511  003E50  0100               	movlb	0	; () banked
 10512  003E52  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10513  003E54  D019               	goto	l6686
 10514                           
 10515                           ; BSR set to: 0
 10516  003E56  C077  F07F         	movff	___fldiv@b,??___fldiv
 10517  003E5A  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10518  003E5E  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10519  003E62  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10520  003E66  0100               	movlb	0	; () banked
 10521  003E68  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10522  003E6A  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10523  003E6C  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10524  003E6E  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10525  003E70  337F               	rrcf	??___fldiv& (0+255),f,b
 10526  003E72  C07F  F077         	movff	??___fldiv,___fldiv@b
 10527  003E76  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10528  003E7A  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10529  003E7E  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10530                           
 10531                           ; BSR set to: 0
 10532  003E82  0100               	movlb	0	; () banked
 10533  003E84  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10534  003E86  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10535  003E88                     l6686:
 10536                           
 10537                           ; BSR set to: 0
 10538  003E88  0100               	movlb	0	; () banked
 10539  003E8A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10540  003E8C  D014               	goto	l6690
 10541  003E8E  0100               	movlb	0	; () banked
 10542  003E90  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10543  003E92  E104               	bnz	u8400
 10544  003E94  0100               	movlb	0	; () banked
 10545  003E96  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10546  003E98  A0D8               	btfss	status,0,c
 10547  003E9A  D00D               	goto	l6690
 10548  003E9C                     u8400:
 10549                           
 10550                           ; BSR set to: 0
 10551  003E9C  0E00               	movlw	0
 10552  003E9E  0100               	movlb	0	; () banked
 10553  003EA0  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10554  003EA2  6988               	setf	___fldiv@new_exp& (0+255),b
 10555  003EA4  0E00               	movlw	0
 10556  003EA6  0100               	movlb	0	; () banked
 10557  003EA8  6F77               	movwf	___fldiv@b& (0+255),b
 10558  003EAA  0E00               	movlw	0
 10559  003EAC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10560  003EAE  0E00               	movlw	0
 10561  003EB0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10562  003EB2  0E00               	movlw	0
 10563  003EB4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10564  003EB6                     l6690:
 10565                           
 10566                           ; BSR set to: 0
 10567  003EB6  0100               	movlb	0	; () banked
 10568  003EB8  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10569  003EBA  D007               	goto	l6692
 10570  003EBC  0100               	movlb	0	; () banked
 10571  003EBE  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10572  003EC0  E115               	bnz	l6694
 10573  003EC2  0100               	movlb	0	; () banked
 10574  003EC4  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10575  003EC6  B0D8               	btfsc	status,0,c
 10576  003EC8  D011               	goto	l6694
 10577  003ECA                     l6692:
 10578                           
 10579                           ; BSR set to: 0
 10580  003ECA  0E00               	movlw	0
 10581  003ECC  0100               	movlb	0	; () banked
 10582  003ECE  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10583  003ED0  0E00               	movlw	0
 10584  003ED2  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10585  003ED4  0E00               	movlw	0
 10586  003ED6  0100               	movlb	0	; () banked
 10587  003ED8  6F77               	movwf	___fldiv@b& (0+255),b
 10588  003EDA  0E00               	movlw	0
 10589  003EDC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10590  003EDE  0E00               	movlw	0
 10591  003EE0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10592  003EE2  0E00               	movlw	0
 10593  003EE4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10594  003EE6  0E00               	movlw	0
 10595  003EE8  0100               	movlb	0	; () banked
 10596  003EEA  6F83               	movwf	___fldiv@sign& (0+255),b
 10597  003EEC                     l6694:
 10598                           
 10599                           ; BSR set to: 0
 10600  003EEC  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10601                           
 10602                           ; BSR set to: 0
 10603  003EF0  0100               	movlb	0	; () banked
 10604  003EF2  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10605  003EF4  D003               	goto	l6700
 10606                           
 10607                           ; BSR set to: 0
 10608  003EF6  0100               	movlb	0	; () banked
 10609  003EF8  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10610  003EFA  D002               	goto	l6702
 10611  003EFC                     l6700:
 10612                           
 10613                           ; BSR set to: 0
 10614  003EFC  0100               	movlb	0	; () banked
 10615  003EFE  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10616  003F00                     l6702:
 10617                           
 10618                           ; BSR set to: 0
 10619  003F00  0100               	movlb	0	; () banked
 10620  003F02  90D8               	bcf	status,0,c
 10621  003F04  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10622  003F06  0100               	movlb	0	; () banked
 10623  003F08  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10624                           
 10625                           ; BSR set to: 0
 10626  003F0A  0100               	movlb	0	; () banked
 10627  003F0C  5183               	movf	___fldiv@sign& (0+255),w,b
 10628  003F0E  0100               	movlb	0	; () banked
 10629  003F10  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10630                           
 10631                           ; BSR set to: 0
 10632  003F12  C077  F077         	movff	___fldiv@b,?___fldiv
 10633  003F16  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10634  003F1A  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10635  003F1E  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10636  003F22  0012               	return	
 10637  003F24                     __end_of___fldiv:
 10638                           	opt stack 0
 10639                           tblptru	equ	0xFF8
 10640                           tblptrh	equ	0xFF7
 10641                           tblptrl	equ	0xFF6
 10642                           tablat	equ	0xFF5
 10643                           prodh	equ	0xFF4
 10644                           prodl	equ	0xFF3
 10645                           postinc0	equ	0xFEE
 10646                           wreg	equ	0xFE8
 10647                           postdec1	equ	0xFE5
 10648                           fsr1l	equ	0xFE1
 10649                           indf2	equ	0xFDF
 10650                           postinc2	equ	0xFDE
 10651                           postdec2	equ	0xFDD
 10652                           fsr2h	equ	0xFDA
 10653                           fsr2l	equ	0xFD9
 10654                           status	equ	0xFD8
 10655                           
 10656 ;; *************** function _delay_s *****************
 10657 ;; Defined at:
 10658 ;;		line 102 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  value_s         1    wreg     unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  value_s         1   31[BANK0 ] unsigned char 
 10663 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;		None               void
 10666 ;; Registers used:
 10667 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;Total ram usage:        2 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:    6
 10680 ;; This function calls:
 10681 ;;		_delay_ms
 10682 ;; This function is called by:
 10683 ;;		_park_routine
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	text26
 10688  005EB2                     __ptext26:
 10689                           	opt stack 0
 10690  005EB2                     _delay_s:
 10691                           	opt stack 23
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;incstack = 0
 10695                           ;delay_s@value_s stored from wreg
 10696  005EB2  0100               	movlb	0	; () banked
 10697  005EB4  6F7F               	movwf	delay_s@value_s& (0+255),b
 10698                           
 10699                           ;src\delay.c: 104: unsigned char repeat_loop;
 10700                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10701  005EB6  0E00               	movlw	0
 10702  005EB8  0100               	movlb	0	; () banked
 10703  005EBA  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10704  005EBC  D009               	goto	l7266
 10705  005EBE                     l7262:
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;src\delay.c: 107: delay_ms (1000);
 10709  005EBE  0E03               	movlw	3
 10710  005EC0  0100               	movlb	0	; () banked
 10711  005EC2  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10712  005EC4  0EE8               	movlw	232
 10713  005EC6  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10714  005EC8  ECEF  F02E         	call	_delay_ms	;wreg free
 10715  005ECC  0100               	movlb	0	; () banked
 10716  005ECE  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10717  005ED0                     l7266:
 10718                           
 10719                           ; BSR set to: 0
 10720  005ED0  0100               	movlb	0	; () banked
 10721  005ED2  517F               	movf	delay_s@value_s& (0+255),w,b
 10722  005ED4  0100               	movlb	0	; () banked
 10723  005ED6  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10724  005ED8  B0D8               	btfsc	status,0,c
 10725  005EDA  0012               	return	
 10726  005EDC  D7F0               	goto	l7262
 10727  005EDE                     __end_of_delay_s:
 10728                           	opt stack 0
 10729                           tblptru	equ	0xFF8
 10730                           tblptrh	equ	0xFF7
 10731                           tblptrl	equ	0xFF6
 10732                           tablat	equ	0xFF5
 10733                           prodh	equ	0xFF4
 10734                           prodl	equ	0xFF3
 10735                           postinc0	equ	0xFEE
 10736                           wreg	equ	0xFE8
 10737                           postdec1	equ	0xFE5
 10738                           fsr1l	equ	0xFE1
 10739                           indf2	equ	0xFDF
 10740                           postinc2	equ	0xFDE
 10741                           postdec2	equ	0xFDD
 10742                           fsr2h	equ	0xFDA
 10743                           fsr2l	equ	0xFD9
 10744                           status	equ	0xFD8
 10745                           
 10746 ;; *************** function _delay_ms *****************
 10747 ;; Defined at:
 10748 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;		None               void
 10755 ;; Registers used:
 10756 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;Total ram usage:        2 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    5
 10769 ;; This function calls:
 10770 ;;		___wmul
 10771 ;; This function is called by:
 10772 ;;		_delay_s
 10773 ;;		_park_routine
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text27
 10778  005DDE                     __ptext27:
 10779                           	opt stack 0
 10780  005DDE                     _delay_ms:
 10781                           	opt stack 23
 10782                           
 10783                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;incstack = 0
 10787  005DDE  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10788  005DE2  0100               	movlb	0	; () banked
 10789  005DE4  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 10790  005DE6  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 10791  005DEA  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10792  005DEE  EC28  F02F         	call	___wmul	;wreg free
 10793  005DF2  C077  F0E4         	movff	?___wmul,_clock_counter_reference	;volatile
 10794  005DF6  C078  F0E5         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10795                           
 10796                           ;src\delay.c: 75: while (clock_counter_reference) {
 10797  005DFA  D007               	goto	l569
 10798  005DFC                     l7168:
 10799                           
 10800                           ;src\delay.c: 85: _delay(240);
 10801  005DFC  0E50               	movlw	80
 10802  005DFE                     u9647:
 10803  005DFE  2EE8               	decfsz	wreg,f,c
 10804  005E00  D7FE               	goto	u9647
 10805                           
 10806                           ;src\delay.c: 88: clock_counter_reference--;
 10807  005E02  0100               	movlb	0	; () banked
 10808  005E04  07E4               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 10809  005E06  A0D8               	btfss	status,0,c
 10810  005E08  07E5               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 10811  005E0A                     l569:
 10812  005E0A  0100               	movlb	0	; () banked
 10813  005E0C  51E4               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 10814  005E0E  0100               	movlb	0	; () banked
 10815  005E10  11E5               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 10816  005E12  B4D8               	btfsc	status,2,c
 10817  005E14  0012               	return	
 10818  005E16  D7F2               	goto	l7168
 10819  005E18                     __end_of_delay_ms:
 10820                           	opt stack 0
 10821                           tblptru	equ	0xFF8
 10822                           tblptrh	equ	0xFF7
 10823                           tblptrl	equ	0xFF6
 10824                           tablat	equ	0xFF5
 10825                           prodh	equ	0xFF4
 10826                           prodl	equ	0xFF3
 10827                           postinc0	equ	0xFEE
 10828                           wreg	equ	0xFE8
 10829                           postdec1	equ	0xFE5
 10830                           fsr1l	equ	0xFE1
 10831                           indf2	equ	0xFDF
 10832                           postinc2	equ	0xFDE
 10833                           postdec2	equ	0xFDD
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838 ;; *************** function ___wmul *****************
 10839 ;; Defined at:
 10840 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  multiplier      2   23[BANK0 ] unsigned int 
 10843 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  product         2   27[BANK0 ] unsigned int 
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  2   23[BANK0 ] unsigned int 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0, prodl, prodh
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10855 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;Total ram usage:        6 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:    4
 10862 ;; This function calls:
 10863 ;;		Nothing
 10864 ;; This function is called by:
 10865 ;;		_delay_ms
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text28
 10870  005E50                     __ptext28:
 10871                           	opt stack 0
 10872  005E50                     ___wmul:
 10873                           	opt stack 23
 10874                           
 10875                           ; BSR set to: 0
 10876                           ;incstack = 0
 10877  005E50  0100               	movlb	0	; () banked
 10878  005E52  5177               	movf	___wmul@multiplier& (0+255),w,b
 10879  005E54  0100               	movlb	0	; () banked
 10880  005E56  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10881  005E58  CFF3 F07B          	movff	prodl,___wmul@product
 10882  005E5C  CFF4 F07C          	movff	prodh,___wmul@product+1
 10883  005E60  0100               	movlb	0	; () banked
 10884  005E62  5177               	movf	___wmul@multiplier& (0+255),w,b
 10885  005E64  0100               	movlb	0	; () banked
 10886  005E66  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10887  005E68  50F3               	movf	prodl,w,c
 10888  005E6A  0100               	movlb	0	; () banked
 10889  005E6C  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 10890  005E6E  0100               	movlb	0	; () banked
 10891  005E70  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10892  005E72  0100               	movlb	0	; () banked
 10893  005E74  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10894  005E76  50F3               	movf	prodl,w,c
 10895  005E78  0100               	movlb	0	; () banked
 10896  005E7A  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 10897                           
 10898                           ; BSR set to: 0
 10899  005E7C  C07B  F077         	movff	___wmul@product,?___wmul
 10900  005E80  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 10901  005E84  0012               	return	
 10902  005E86                     __end_of___wmul:
 10903                           	opt stack 0
 10904                           tblptru	equ	0xFF8
 10905                           tblptrh	equ	0xFF7
 10906                           tblptrl	equ	0xFF6
 10907                           tablat	equ	0xFF5
 10908                           prodh	equ	0xFF4
 10909                           prodl	equ	0xFF3
 10910                           postinc0	equ	0xFEE
 10911                           wreg	equ	0xFE8
 10912                           postdec1	equ	0xFE5
 10913                           fsr1l	equ	0xFE1
 10914                           indf2	equ	0xFDF
 10915                           postinc2	equ	0xFDE
 10916                           postdec2	equ	0xFDD
 10917                           fsr2h	equ	0xFDA
 10918                           fsr2l	equ	0xFD9
 10919                           status	equ	0xFD8
 10920                           
 10921 ;; *************** function _configurazione *****************
 10922 ;; Defined at:
 10923 ;;		line 441 in file "parcheggio.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;		None
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;		None
 10928 ;; Return value:  Size  Location     Type
 10929 ;;		None               void
 10930 ;; Registers used:
 10931 ;;		wreg, status,2, status,0, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;Total ram usage:        0 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:    6
 10944 ;; This function calls:
 10945 ;;		_CANInitialize
 10946 ;; This function is called by:
 10947 ;;		_main
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text29
 10952  005BE8                     __ptext29:
 10953                           	opt stack 0
 10954  005BE8                     _configurazione:
 10955                           	opt stack 24
 10956                           
 10957                           ;parcheggio.c: 442: LATA = 0x00;
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;incstack = 0
 10961  005BE8  0E00               	movlw	0
 10962  005BEA  6E89               	movwf	3977,c	;volatile
 10963                           
 10964                           ;parcheggio.c: 443: TRISA = 0b11110000;
 10965  005BEC  0EF0               	movlw	240
 10966  005BEE  6E92               	movwf	3986,c	;volatile
 10967                           
 10968                           ;parcheggio.c: 445: LATB = 0x00;
 10969  005BF0  0E00               	movlw	0
 10970  005BF2  6E8A               	movwf	3978,c	;volatile
 10971                           
 10972                           ;parcheggio.c: 446: TRISB = 0b10001010;
 10973  005BF4  0E8A               	movlw	138
 10974  005BF6  6E93               	movwf	3987,c	;volatile
 10975                           
 10976                           ;parcheggio.c: 448: LATC = 0x00;
 10977  005BF8  0E00               	movlw	0
 10978  005BFA  6E8B               	movwf	3979,c	;volatile
 10979                           
 10980                           ;parcheggio.c: 449: TRISC = 0b11111111;
 10981  005BFC  6894               	setf	3988,c	;volatile
 10982                           
 10983                           ;parcheggio.c: 451: ADCON1 = 0xFF;
 10984  005BFE  68C1               	setf	4033,c	;volatile
 10985                           
 10986                           ;parcheggio.c: 452: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10987  005C00  0E06               	movlw	6
 10988  005C02  0100               	movlb	0	; () banked
 10989  005C04  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10990  005C06  0E05               	movlw	5
 10991  005C08  0100               	movlb	0	; () banked
 10992  005C0A  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10993  005C0C  0E01               	movlw	1
 10994  005C0E  0100               	movlb	0	; () banked
 10995  005C10  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10996  005C12  0E03               	movlw	3
 10997  005C14  0100               	movlb	0	; () banked
 10998  005C16  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10999  005C18  0E9D               	movlw	157
 11000  005C1A  0100               	movlb	0	; () banked
 11001  005C1C  6F89               	movwf	CANInitialize@flags& (0+255),b
 11002  005C1E  0E04               	movlw	4
 11003  005C20  ECCC  F027         	call	_CANInitialize
 11004                           
 11005                           ;parcheggio.c: 454: RCONbits.IPEN = 1;
 11006  005C24  8ED0               	bsf	4048,7,c	;volatile
 11007                           
 11008                           ;parcheggio.c: 455: PIR3bits.RXB1IF = 0;
 11009  005C26  92A4               	bcf	4004,1,c	;volatile
 11010                           
 11011                           ;parcheggio.c: 456: PIR3bits.RXB0IF = 0;
 11012  005C28  90A4               	bcf	4004,0,c	;volatile
 11013                           
 11014                           ;parcheggio.c: 457: IPR3bits.RXB1IP = 0;
 11015  005C2A  92A5               	bcf	4005,1,c	;volatile
 11016                           
 11017                           ;parcheggio.c: 458: IPR3bits.RXB0IP = 0;
 11018  005C2C  90A5               	bcf	4005,0,c	;volatile
 11019                           
 11020                           ;parcheggio.c: 459: PIE3bits.RXB1IE = 1;
 11021  005C2E  82A3               	bsf	4003,1,c	;volatile
 11022                           
 11023                           ;parcheggio.c: 460: PIE3bits.RXB0IE = 1;
 11024  005C30  80A3               	bsf	4003,0,c	;volatile
 11025                           
 11026                           ;parcheggio.c: 461: INTCON2bits.TMR0IP = 0;
 11027  005C32  94F1               	bcf	intcon2,2,c	;volatile
 11028                           
 11029                           ;parcheggio.c: 462: T0CON = 0x80;
 11030  005C34  0E80               	movlw	128
 11031  005C36  6ED5               	movwf	4053,c	;volatile
 11032                           
 11033                           ;parcheggio.c: 463: T3CON = 0x11;
 11034  005C38  0E11               	movlw	17
 11035  005C3A  6EB1               	movwf	4017,c	;volatile
 11036                           
 11037                           ;parcheggio.c: 464: TMR0H = 0x34;
 11038  005C3C  0E34               	movlw	52
 11039  005C3E  6ED7               	movwf	4055,c	;volatile
 11040                           
 11041                           ;parcheggio.c: 465: TMR0L = 0xE0;
 11042  005C40  0EE0               	movlw	224
 11043  005C42  6ED6               	movwf	4054,c	;volatile
 11044                           
 11045                           ;parcheggio.c: 466: INTCONbits.TMR0IF = 0;
 11046  005C44  94F2               	bcf	intcon,2,c	;volatile
 11047                           
 11048                           ;parcheggio.c: 467: INTCONbits.TMR0IE = 1;
 11049  005C46  8AF2               	bsf	intcon,5,c	;volatile
 11050                           
 11051                           ;parcheggio.c: 468: INTCON2bits.INTEDG0 = 1;
 11052  005C48  8CF1               	bsf	intcon2,6,c	;volatile
 11053                           
 11054                           ;parcheggio.c: 469: INTCONbits.INT0IF = 0;
 11055  005C4A  92F2               	bcf	intcon,1,c	;volatile
 11056                           
 11057                           ;parcheggio.c: 470: INTCONbits.INT0IE = 0;
 11058  005C4C  98F2               	bcf	intcon,4,c	;volatile
 11059                           
 11060                           ;parcheggio.c: 471: INTCONbits.GIEL = 1;
 11061  005C4E  8CF2               	bsf	intcon,6,c	;volatile
 11062                           
 11063                           ;parcheggio.c: 472: INTCONbits.GIEH = 1;
 11064  005C50  8EF2               	bsf	intcon,7,c	;volatile
 11065  005C52  0012               	return		;funcret
 11066  005C54                     __end_of_configurazione:
 11067                           	opt stack 0
 11068                           tblptru	equ	0xFF8
 11069                           tblptrh	equ	0xFF7
 11070                           tblptrl	equ	0xFF6
 11071                           tablat	equ	0xFF5
 11072                           prodh	equ	0xFF4
 11073                           prodl	equ	0xFF3
 11074                           intcon	equ	0xFF2
 11075                           intcon2	equ	0xFF1
 11076                           postinc0	equ	0xFEE
 11077                           wreg	equ	0xFE8
 11078                           postdec1	equ	0xFE5
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           fsr2h	equ	0xFDA
 11084                           fsr2l	equ	0xFD9
 11085                           status	equ	0xFD8
 11086                           
 11087 ;; *************** function _CANInitialize *****************
 11088 ;; Defined at:
 11089 ;;		line 218 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  propSeg         1    wreg     unsigned char 
 11092 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11093 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11094 ;;  SJW             1   39[BANK0 ] unsigned char 
 11095 ;;  BRP             1   40[BANK0 ] unsigned char 
 11096 ;;  flags           1   41[BANK0 ] enum E16313
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11099 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11100 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;		None               void
 11103 ;; Registers used:
 11104 ;;		wreg, status,2, status,0, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11110 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;Total ram usage:       12 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    5
 11117 ;; This function calls:
 11118 ;;		_CANOperationMode
 11119 ;;		_CANSetFilter
 11120 ;;		_CANSetMask
 11121 ;; This function is called by:
 11122 ;;		_configurazione
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           	psect	text30
 11127  004F98                     __ptext30:
 11128                           	opt stack 0
 11129  004F98                     _CANInitialize:
 11130                           	opt stack 24
 11131                           
 11132                           ;incstack = 0
 11133                           ;CANInitialize@propSeg stored from wreg
 11134  004F98  0100               	movlb	0	; () banked
 11135  004F9A  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11136                           
 11137                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11138                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11139                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11140  004F9C  0E80               	movlw	128
 11141  004F9E  EC81  F02F         	call	_CANOperationMode
 11142                           
 11143                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11144  004FA2  0E00               	movlw	0
 11145  004FA4  6E70               	movwf	3952,c	;volatile
 11146                           
 11147                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11148  004FA6  0E00               	movlw	0
 11149  004FA8  6E71               	movwf	3953,c	;volatile
 11150                           
 11151                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11152  004FAA  0E00               	movlw	0
 11153  004FAC  6E72               	movwf	3954,c	;volatile
 11154                           
 11155                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11156  004FAE  0100               	movlb	0	; () banked
 11157  004FB0  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11158  004FB2  42E8               	rrncf	wreg,f,c
 11159  004FB4  0BC0               	andlw	192
 11160  004FB6  0100               	movlb	0	; () banked
 11161  004FB8  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11165  004FBA  0100               	movlb	0	; () banked
 11166  004FBC  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11167  004FBE  1270               	iorwf	3952,f,c	;volatile
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11171  004FC0  0100               	movlb	0	; () banked
 11172  004FC2  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11173  004FC4  1270               	iorwf	3952,f,c	;volatile
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11177  004FC6  0100               	movlb	0	; () banked
 11178  004FC8  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11179  004FCA  1271               	iorwf	3953,f,c	;volatile
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11183  004FCC  0100               	movlb	0	; () banked
 11184  004FCE  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11185  004FD0  42E8               	rrncf	wreg,f,c
 11186  004FD2  0BF8               	andlw	248
 11187  004FD4  0100               	movlb	0	; () banked
 11188  004FD6  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11192  004FD8  0100               	movlb	0	; () banked
 11193  004FDA  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11194  004FDC  1271               	iorwf	3953,f,c	;volatile
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11198  004FDE  0100               	movlb	0	; () banked
 11199  004FE0  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11203  004FE2  8C71               	bsf	3953,6,c	;volatile
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11207  004FE4  0100               	movlb	0	; () banked
 11208  004FE6  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11212  004FE8  8E71               	bsf	3953,7,c	;volatile
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11216                           
 11217                           ; BSR set to: 0
 11218  004FEA  0100               	movlb	0	; () banked
 11219  004FEC  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11220  004FEE  1272               	iorwf	3954,f,c	;volatile
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11224  004FF0  0100               	movlb	0	; () banked
 11225  004FF2  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11229  004FF4  8C72               	bsf	3954,6,c	;volatile
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11233                           
 11234                           ; BSR set to: 0
 11235  004FF6  0100               	movlb	0	; () banked
 11236  004FF8  5189               	movf	CANInitialize@flags& (0+255),w,b
 11237  004FFA  0B60               	andlw	96
 11238  004FFC  6E60               	movwf	3936,c	;volatile
 11239                           
 11240                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11241  004FFE  0100               	movlb	0	; () banked
 11242  005000  5189               	movf	CANInitialize@flags& (0+255),w,b
 11243  005002  0B10               	andlw	16
 11244  005004  0AFF               	xorlw	255
 11245  005006  B4D8               	btfsc	status,2,c
 11246                           
 11247                           ; BSR set to: 0
 11248                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11249  005008  8460               	bsf	3936,2,c	;volatile
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11253  00500A  CF60 FF50          	movff	3936,3920	;volatile
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11257  00500E  0E00               	movlw	0
 11258  005010  0100               	movlb	0	; () banked
 11259  005012  6F77               	movwf	CANSetMask@mask& (0+255),b
 11260  005014  0E00               	movlw	0
 11261  005016  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11262  005018  0E00               	movlw	0
 11263  00501A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11264  00501C  0E00               	movlw	0
 11265  00501E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11266  005020  0EF7               	movlw	247
 11267  005022  0100               	movlb	0	; () banked
 11268  005024  6F7B               	movwf	CANSetMask@type& (0+255),b
 11269  005026  0E01               	movlw	1
 11270  005028  EC92  F01F         	call	_CANSetMask
 11271                           
 11272                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11273  00502C  0E00               	movlw	0
 11274  00502E  0100               	movlb	0	; () banked
 11275  005030  6F77               	movwf	CANSetMask@mask& (0+255),b
 11276  005032  0E00               	movlw	0
 11277  005034  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11278  005036  0E00               	movlw	0
 11279  005038  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11280  00503A  0E00               	movlw	0
 11281  00503C  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11282  00503E  0EF7               	movlw	247
 11283  005040  0100               	movlb	0	; () banked
 11284  005042  6F7B               	movwf	CANSetMask@type& (0+255),b
 11285  005044  0E02               	movlw	2
 11286  005046  EC92  F01F         	call	_CANSetMask
 11287                           
 11288                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11289  00504A  D00F               	goto	l5450
 11290  00504C                     l5444:
 11291                           
 11292                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11293  00504C  0EF7               	movlw	247
 11294  00504E  0100               	movlb	0	; () banked
 11295  005050  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11296  005052  D007               	goto	l5446
 11297  005054                     l358:
 11298                           
 11299                           ; BSR set to: 0
 11300                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11301  005054  0100               	movlb	0	; () banked
 11302  005056  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11303                           
 11304                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11305  005058  0100               	movlb	0	; () banked
 11306  00505A  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11307                           
 11308                           ;inc\CANlib.h: 273: break;
 11309  00505C  D028               	goto	l5452
 11310  00505E                     l359:
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11314  00505E  0100               	movlb	0	; () banked
 11315  005060  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11316  005062                     l5446:
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11320  005062  0EF7               	movlw	247
 11321  005064  0100               	movlb	0	; () banked
 11322  005066  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;inc\CANlib.h: 278: }
 11326                           
 11327                           ;inc\CANlib.h: 277: break;
 11328  005068  D022               	goto	l5452
 11329  00506A                     l5450:
 11330  00506A  0E9F               	movlw	159
 11331  00506C  0100               	movlb	0	; () banked
 11332  00506E  6F8A               	movwf	??_CANInitialize& (0+255),b
 11333  005070  0EFF               	movlw	255
 11334  005072  0100               	movlb	0	; () banked
 11335  005074  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11336  005076  0100               	movlb	0	; () banked
 11337  005078  5189               	movf	CANInitialize@flags& (0+255),w,b
 11338  00507A  0B60               	andlw	96
 11339  00507C  0100               	movlb	0	; () banked
 11340  00507E  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11341  005080  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11342  005082  0100               	movlb	0	; () banked
 11343  005084  518A               	movf	??_CANInitialize& (0+255),w,b
 11344  005086  0100               	movlb	0	; () banked
 11345  005088  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11346  00508A  0100               	movlb	0	; () banked
 11347  00508C  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11348  00508E  0100               	movlb	0	; () banked
 11349  005090  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11350                           
 11351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11352                           ; Switch size 1, requested type "space"
 11353                           ; Number of cases is 1, Range of values is 0 to 0
 11354                           ; switch strategies available:
 11355                           ; Name         Instructions Cycles
 11356                           ; simple_byte            4     3 (average)
 11357                           ;	Chosen strategy is simple_byte
 11358  005092  0100               	movlb	0	; () banked
 11359  005094  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11360  005096  0A00               	xorlw	0	; case 0
 11361  005098  A4D8               	btfss	status,2,c
 11362  00509A  D7E1               	goto	l359
 11363                           
 11364                           ; BSR set to: 0
 11365                           ; Switch size 1, requested type "space"
 11366                           ; Number of cases is 2, Range of values is 191 to 223
 11367                           ; switch strategies available:
 11368                           ; Name         Instructions Cycles
 11369                           ; simple_byte            7     4 (average)
 11370                           ;	Chosen strategy is simple_byte
 11371  00509C  0100               	movlb	0	; () banked
 11372  00509E  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11373  0050A0  0ABF               	xorlw	191	; case 191
 11374  0050A2  B4D8               	btfsc	status,2,c
 11375  0050A4  D7D7               	goto	l358
 11376  0050A6  0A60               	xorlw	96	; case 223
 11377  0050A8  B4D8               	btfsc	status,2,c
 11378  0050AA  D7D0               	goto	l5444
 11379  0050AC  D7D8               	goto	l359
 11380  0050AE                     l5452:
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11384  0050AE  0E00               	movlw	0
 11385  0050B0  0100               	movlb	0	; () banked
 11386  0050B2  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11387  0050B4  0E00               	movlw	0
 11388  0050B6  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11389  0050B8  0E00               	movlw	0
 11390  0050BA  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11391  0050BC  0E00               	movlw	0
 11392  0050BE  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11393  0050C0  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11394  0050C4  0E00               	movlw	0
 11395  0050C6  ECA9  F006         	call	_CANSetFilter
 11396                           
 11397                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11398  0050CA  0E00               	movlw	0
 11399  0050CC  0100               	movlb	0	; () banked
 11400  0050CE  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11401  0050D0  0E00               	movlw	0
 11402  0050D2  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11403  0050D4  0E00               	movlw	0
 11404  0050D6  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11405  0050D8  0E00               	movlw	0
 11406  0050DA  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11407  0050DC  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11408  0050E0  0E01               	movlw	1
 11409  0050E2  ECA9  F006         	call	_CANSetFilter
 11410                           
 11411                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11412  0050E6  0E00               	movlw	0
 11413  0050E8  0100               	movlb	0	; () banked
 11414  0050EA  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11415  0050EC  0E00               	movlw	0
 11416  0050EE  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11417  0050F0  0E00               	movlw	0
 11418  0050F2  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11419  0050F4  0E00               	movlw	0
 11420  0050F6  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11421  0050F8  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11422  0050FC  0E02               	movlw	2
 11423  0050FE  ECA9  F006         	call	_CANSetFilter
 11424                           
 11425                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11426  005102  0E00               	movlw	0
 11427  005104  0100               	movlb	0	; () banked
 11428  005106  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11429  005108  0E00               	movlw	0
 11430  00510A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11431  00510C  0E00               	movlw	0
 11432  00510E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11433  005110  0E00               	movlw	0
 11434  005112  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11435  005114  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11436  005118  0E03               	movlw	3
 11437  00511A  ECA9  F006         	call	_CANSetFilter
 11438                           
 11439                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11440  00511E  0E00               	movlw	0
 11441  005120  0100               	movlb	0	; () banked
 11442  005122  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11443  005124  0E00               	movlw	0
 11444  005126  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11445  005128  0E00               	movlw	0
 11446  00512A  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11447  00512C  0E00               	movlw	0
 11448  00512E  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11449  005130  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11450  005134  0E04               	movlw	4
 11451  005136  ECA9  F006         	call	_CANSetFilter
 11452                           
 11453                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11454  00513A  0E00               	movlw	0
 11455  00513C  0100               	movlb	0	; () banked
 11456  00513E  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11457  005140  0E00               	movlw	0
 11458  005142  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11459  005144  0E00               	movlw	0
 11460  005146  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11461  005148  0E00               	movlw	0
 11462  00514A  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11463  00514C  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11464  005150  0E05               	movlw	5
 11465  005152  ECA9  F006         	call	_CANSetFilter
 11466                           
 11467                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11468  005156  0E00               	movlw	0
 11469  005158  EC81  F02F         	call	_CANOperationMode
 11470  00515C  0012               	return		;funcret
 11471  00515E                     __end_of_CANInitialize:
 11472                           	opt stack 0
 11473                           tblptru	equ	0xFF8
 11474                           tblptrh	equ	0xFF7
 11475                           tblptrl	equ	0xFF6
 11476                           tablat	equ	0xFF5
 11477                           prodh	equ	0xFF4
 11478                           prodl	equ	0xFF3
 11479                           intcon	equ	0xFF2
 11480                           intcon2	equ	0xFF1
 11481                           postinc0	equ	0xFEE
 11482                           wreg	equ	0xFE8
 11483                           postdec1	equ	0xFE5
 11484                           fsr1l	equ	0xFE1
 11485                           indf2	equ	0xFDF
 11486                           postinc2	equ	0xFDE
 11487                           postdec2	equ	0xFDD
 11488                           fsr2h	equ	0xFDA
 11489                           fsr2l	equ	0xFD9
 11490                           status	equ	0xFD8
 11491                           
 11492 ;; *************** function _CANSetMask *****************
 11493 ;; Defined at:
 11494 ;;		line 640 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  numBuffer       1    wreg     enum E16347
 11497 ;;  mask            4   23[BANK0 ] unsigned long 
 11498 ;;  type            1   27[BANK0 ] enum E16313
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11501 ;;  tamp            4   33[BANK0 ] unsigned long 
 11502 ;; Return value:  Size  Location     Type
 11503 ;;		None               void
 11504 ;; Registers used:
 11505 ;;		wreg, status,2, status,0
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11511 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;Total ram usage:       14 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    4
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_CANInitialize
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text31
 11526  003F24                     __ptext31:
 11527                           	opt stack 0
 11528  003F24                     _CANSetMask:
 11529                           	opt stack 24
 11530                           
 11531                           ;incstack = 0
 11532                           ;CANSetMask@numBuffer stored from wreg
 11533  003F24  0100               	movlb	0	; () banked
 11534  003F26  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11535                           
 11536                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11537  003F28  0100               	movlb	0	; () banked
 11538  003F2A  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11539  003F2C  A4D8               	btfss	status,2,c
 11540  003F2E  D056               	goto	l4920
 11541                           
 11542                           ; BSR set to: 0
 11543  003F30  0100               	movlb	0	; () banked
 11544  003F32  297B               	incf	CANSetMask@type& (0+255),w,b
 11545  003F34  A4D8               	btfss	status,2,c
 11546  003F36  D052               	goto	l4920
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;inc\CANlib.h: 644: {
 11550                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11551  003F38  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11552  003F3C  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11553  003F40  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11554  003F44  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11555  003F48  0E04               	movlw	4
 11556  003F4A  D006               	goto	u5500
 11557  003F4C                     u5505:
 11558  003F4C  0100               	movlb	0	; () banked
 11559  003F4E  90D8               	bcf	status,0,c
 11560  003F50  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11561  003F52  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11562  003F54  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11563  003F56  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11564  003F58                     u5500:
 11565  003F58  2EE8               	decfsz	wreg,f,c
 11566  003F5A  D7F8               	goto	u5505
 11567  003F5C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11568  003F60  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11569  003F64  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11570  003F68  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11574  003F6C  0100               	movlb	0	; () banked
 11575  003F6E  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11576  003F70  0100               	movlb	0	; () banked
 11577  003F72  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11578  003F74  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11579  003F76  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11580  003F78  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11584  003F7A  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11588  003F7E  0E07               	movlw	7
 11589  003F80  0100               	movlb	0	; () banked
 11590  003F82  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11591  003F84  0100               	movlb	0	; () banked
 11592  003F86  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11593  003F88  0E00               	movlw	0
 11594  003F8A  0100               	movlb	0	; () banked
 11595  003F8C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11596  003F8E  0100               	movlb	0	; () banked
 11597  003F90  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11598  003F92  0E00               	movlw	0
 11599  003F94  0100               	movlb	0	; () banked
 11600  003F96  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11601  003F98  0100               	movlb	0	; () banked
 11602  003F9A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11603  003F9C  0E00               	movlw	0
 11604  003F9E  0100               	movlb	0	; () banked
 11605  003FA0  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11606  003FA2  0100               	movlb	0	; () banked
 11607  003FA4  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11611  003FA6  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11612  003FAA  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11613  003FAE  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11614  003FB2  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11615  003FB6  0E05               	movlw	5
 11616  003FB8                     u5515:
 11617  003FB8  90D8               	bcf	status,0,c
 11618  003FBA  0100               	movlb	0	; () banked
 11619  003FBC  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11620  003FBE  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11621  003FC0  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11622  003FC2  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11623  003FC4  2EE8               	decfsz	wreg,f,c
 11624  003FC6  D7F8               	goto	u5515
 11625  003FC8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11626  003FCC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11627  003FD0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11628  003FD4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11632  003FD8  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11633  003FDC                     l4920:
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;inc\CANlib.h: 652: }
 11637                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11638  003FDC  0E02               	movlw	2
 11639  003FDE  0100               	movlb	0	; () banked
 11640  003FE0  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11641  003FE2  A4D8               	btfss	status,2,c
 11642  003FE4  D056               	goto	l4936
 11643                           
 11644                           ; BSR set to: 0
 11645  003FE6  0100               	movlb	0	; () banked
 11646  003FE8  297B               	incf	CANSetMask@type& (0+255),w,b
 11647  003FEA  A4D8               	btfss	status,2,c
 11648  003FEC  D052               	goto	l4936
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;inc\CANlib.h: 655: {
 11652                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11653  003FEE  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11654  003FF2  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11655  003FF6  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11656  003FFA  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11657  003FFE  0E04               	movlw	4
 11658  004000  D006               	goto	u5540
 11659  004002                     u5545:
 11660  004002  0100               	movlb	0	; () banked
 11661  004004  90D8               	bcf	status,0,c
 11662  004006  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11663  004008  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11664  00400A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11665  00400C  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11666  00400E                     u5540:
 11667  00400E  2EE8               	decfsz	wreg,f,c
 11668  004010  D7F8               	goto	u5545
 11669  004012  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11670  004016  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11671  00401A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11672  00401E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11676  004022  0100               	movlb	0	; () banked
 11677  004024  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11678  004026  0100               	movlb	0	; () banked
 11679  004028  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11680  00402A  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11681  00402C  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11682  00402E  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11686  004030  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11690  004034  0E07               	movlw	7
 11691  004036  0100               	movlb	0	; () banked
 11692  004038  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11693  00403A  0100               	movlb	0	; () banked
 11694  00403C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11695  00403E  0E00               	movlw	0
 11696  004040  0100               	movlb	0	; () banked
 11697  004042  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11698  004044  0100               	movlb	0	; () banked
 11699  004046  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11700  004048  0E00               	movlw	0
 11701  00404A  0100               	movlb	0	; () banked
 11702  00404C  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11703  00404E  0100               	movlb	0	; () banked
 11704  004050  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11705  004052  0E00               	movlw	0
 11706  004054  0100               	movlb	0	; () banked
 11707  004056  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11708  004058  0100               	movlb	0	; () banked
 11709  00405A  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11713  00405C  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11714  004060  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11715  004064  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11716  004068  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11717  00406C  0E05               	movlw	5
 11718  00406E                     u5555:
 11719  00406E  90D8               	bcf	status,0,c
 11720  004070  0100               	movlb	0	; () banked
 11721  004072  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11722  004074  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11723  004076  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11724  004078  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11725  00407A  2EE8               	decfsz	wreg,f,c
 11726  00407C  D7F8               	goto	u5555
 11727  00407E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11728  004082  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11729  004086  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11730  00408A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11734  00408E  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11735  004092                     l4936:
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;inc\CANlib.h: 663: }
 11739                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11740  004092  0100               	movlb	0	; () banked
 11741  004094  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11742  004096  A4D8               	btfss	status,2,c
 11743  004098  D087               	goto	l4968
 11744                           
 11745                           ; BSR set to: 0
 11746  00409A  0EF7               	movlw	247
 11747  00409C  0100               	movlb	0	; () banked
 11748  00409E  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11749  0040A0  A4D8               	btfss	status,2,c
 11750  0040A2  D082               	goto	l4968
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;inc\CANlib.h: 666: {
 11754                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11755  0040A4  0100               	movlb	0	; () banked
 11756  0040A6  5177               	movf	CANSetMask@mask& (0+255),w,b
 11757  0040A8  0100               	movlb	0	; () banked
 11758  0040AA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11759  0040AC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11760  0040AE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11761  0040B0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11765  0040B2  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11769  0040B6  0E00               	movlw	0
 11770  0040B8  0100               	movlb	0	; () banked
 11771  0040BA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11772  0040BC  0100               	movlb	0	; () banked
 11773  0040BE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11774  0040C0  0EFF               	movlw	255
 11775  0040C2  0100               	movlb	0	; () banked
 11776  0040C4  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11777  0040C6  0100               	movlb	0	; () banked
 11778  0040C8  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11779  0040CA  0E00               	movlw	0
 11780  0040CC  0100               	movlb	0	; () banked
 11781  0040CE  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11782  0040D0  0100               	movlb	0	; () banked
 11783  0040D2  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11784  0040D4  0E00               	movlw	0
 11785  0040D6  0100               	movlb	0	; () banked
 11786  0040D8  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11787  0040DA  0100               	movlb	0	; () banked
 11788  0040DC  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11792  0040DE  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11793  0040E2  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11794  0040E6  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11795  0040EA  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11796  0040EE  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11797  0040F2  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11798  0040F6  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11799  0040FA  0100               	movlb	0	; () banked
 11800  0040FC  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11801  0040FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11802  004102  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11803  004106  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11804  00410A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11808  00410E  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11812  004112  0100               	movlb	0	; () banked
 11813  004114  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11814  004116  D003               	goto	l432
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11818  004118  010F               	movlb	15	; () banked
 11819  00411A  8119               	bsf	25,0,b	;volatile
 11820  00411C  D002               	goto	l433
 11821  00411E                     l432:
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;inc\CANlib.h: 676: else
 11825                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11826  00411E  010F               	movlb	15	; () banked
 11827  004120  9119               	bcf	25,0,b	;volatile
 11828  004122                     l433:
 11829                           
 11830                           ; BSR set to: 15
 11831                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11832  004122  0100               	movlb	0	; () banked
 11833  004124  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11834  004126  D003               	goto	l434
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11838  004128  010F               	movlb	15	; () banked
 11839  00412A  8319               	bsf	25,1,b	;volatile
 11840  00412C  D002               	goto	l435
 11841  00412E                     l434:
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;inc\CANlib.h: 681: else
 11845                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11846  00412E  010F               	movlb	15	; () banked
 11847  004130  9319               	bcf	25,1,b	;volatile
 11848  004132                     l435:
 11849                           
 11850                           ; BSR set to: 15
 11851                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11852  004132  0100               	movlb	0	; () banked
 11853  004134  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11854  004136  D003               	goto	l436
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11858  004138  010F               	movlb	15	; () banked
 11859  00413A  8B19               	bsf	25,5,b	;volatile
 11860  00413C  D002               	goto	l437
 11861  00413E                     l436:
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;inc\CANlib.h: 686: else
 11865                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11866  00413E  010F               	movlb	15	; () banked
 11867  004140  9B19               	bcf	25,5,b	;volatile
 11868  004142                     l437:
 11869                           
 11870                           ; BSR set to: 15
 11871                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11872  004142  0100               	movlb	0	; () banked
 11873  004144  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11874  004146  D003               	goto	l438
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11878  004148  010F               	movlb	15	; () banked
 11879  00414A  8D19               	bsf	25,6,b	;volatile
 11880  00414C  D002               	goto	l439
 11881  00414E                     l438:
 11882                           
 11883                           ; BSR set to: 0
 11884                           ;inc\CANlib.h: 691: else
 11885                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11886  00414E  010F               	movlb	15	; () banked
 11887  004150  9D19               	bcf	25,6,b	;volatile
 11888  004152                     l439:
 11889                           
 11890                           ; BSR set to: 15
 11891                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11892  004152  0100               	movlb	0	; () banked
 11893  004154  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11894  004156  D003               	goto	l440
 11895                           
 11896                           ; BSR set to: 0
 11897                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11898  004158  010F               	movlb	15	; () banked
 11899  00415A  8F19               	bsf	25,7,b	;volatile
 11900  00415C  D002               	goto	l4962
 11901  00415E                     l440:
 11902                           
 11903                           ; BSR set to: 0
 11904                           ;inc\CANlib.h: 696: else
 11905                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11906  00415E  010F               	movlb	15	; () banked
 11907  004160  9F19               	bcf	25,7,b	;volatile
 11908  004162                     l4962:
 11909                           
 11910                           ; BSR set to: 15
 11911                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11912  004162  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11913  004166  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11914  00416A  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11915  00416E  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11916  004172  0E16               	movlw	22
 11917  004174  D006               	goto	u5630
 11918  004176                     u5635:
 11919  004176  0100               	movlb	0	; () banked
 11920  004178  90D8               	bcf	status,0,c
 11921  00417A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11922  00417C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11923  00417E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11924  004180  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11925  004182                     u5630:
 11926  004182  2EE8               	decfsz	wreg,f,c
 11927  004184  D7F8               	goto	u5635
 11928  004186  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11929  00418A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11930  00418E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11931  004192  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11935  004196  0100               	movlb	0	; () banked
 11936  004198  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11937  00419A  0100               	movlb	0	; () banked
 11938  00419C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11939  00419E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11940  0041A0  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11941  0041A2  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11945  0041A4  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11946  0041A8                     l4968:
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;inc\CANlib.h: 702: }
 11950                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11951  0041A8  0E02               	movlw	2
 11952  0041AA  0100               	movlb	0	; () banked
 11953  0041AC  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11954  0041AE  A4D8               	btfss	status,2,c
 11955  0041B0  0012               	return	
 11956                           
 11957                           ; BSR set to: 0
 11958  0041B2  0EF7               	movlw	247
 11959  0041B4  0100               	movlb	0	; () banked
 11960  0041B6  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11961  0041B8  A4D8               	btfss	status,2,c
 11962  0041BA  0012               	return	
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;inc\CANlib.h: 705: {
 11966                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11967  0041BC  0100               	movlb	0	; () banked
 11968  0041BE  5177               	movf	CANSetMask@mask& (0+255),w,b
 11969  0041C0  0100               	movlb	0	; () banked
 11970  0041C2  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11971  0041C4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11972  0041C6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11973  0041C8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11977  0041CA  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11981  0041CE  0E00               	movlw	0
 11982  0041D0  0100               	movlb	0	; () banked
 11983  0041D2  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11984  0041D4  0100               	movlb	0	; () banked
 11985  0041D6  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11986  0041D8  0EFF               	movlw	255
 11987  0041DA  0100               	movlb	0	; () banked
 11988  0041DC  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11989  0041DE  0100               	movlb	0	; () banked
 11990  0041E0  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11991  0041E2  0E00               	movlw	0
 11992  0041E4  0100               	movlb	0	; () banked
 11993  0041E6  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11994  0041E8  0100               	movlb	0	; () banked
 11995  0041EA  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11996  0041EC  0E00               	movlw	0
 11997  0041EE  0100               	movlb	0	; () banked
 11998  0041F0  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11999  0041F2  0100               	movlb	0	; () banked
 12000  0041F4  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 12004  0041F6  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12005  0041FA  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12006  0041FE  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12007  004202  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12008  004206  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12009  00420A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12010  00420E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12011  004212  0100               	movlb	0	; () banked
 12012  004214  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12013  004216  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12014  00421A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12015  00421E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12016  004222  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 12020  004226  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12024  00422A  0100               	movlb	0	; () banked
 12025  00422C  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12026  00422E  D003               	goto	l443
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12030  004230  010F               	movlb	15	; () banked
 12031  004232  811D               	bsf	29,0,b	;volatile
 12032  004234  D002               	goto	l444
 12033  004236                     l443:
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;inc\CANlib.h: 715: else
 12037                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12038  004236  010F               	movlb	15	; () banked
 12039  004238  911D               	bcf	29,0,b	;volatile
 12040  00423A                     l444:
 12041                           
 12042                           ; BSR set to: 15
 12043                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12044  00423A  0100               	movlb	0	; () banked
 12045  00423C  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12046  00423E  D003               	goto	l445
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12050  004240  010F               	movlb	15	; () banked
 12051  004242  831D               	bsf	29,1,b	;volatile
 12052  004244  D002               	goto	l446
 12053  004246                     l445:
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;inc\CANlib.h: 720: else
 12057                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12058  004246  010F               	movlb	15	; () banked
 12059  004248  931D               	bcf	29,1,b	;volatile
 12060  00424A                     l446:
 12061                           
 12062                           ; BSR set to: 15
 12063                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12064  00424A  0100               	movlb	0	; () banked
 12065  00424C  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12066  00424E  D003               	goto	l447
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12070  004250  010F               	movlb	15	; () banked
 12071  004252  8B1D               	bsf	29,5,b	;volatile
 12072  004254  D002               	goto	l448
 12073  004256                     l447:
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;inc\CANlib.h: 725: else
 12077                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12078  004256  010F               	movlb	15	; () banked
 12079  004258  9B1D               	bcf	29,5,b	;volatile
 12080  00425A                     l448:
 12081                           
 12082                           ; BSR set to: 15
 12083                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12084  00425A  0100               	movlb	0	; () banked
 12085  00425C  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12086  00425E  D003               	goto	l449
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12090  004260  010F               	movlb	15	; () banked
 12091  004262  8D1D               	bsf	29,6,b	;volatile
 12092  004264  D002               	goto	l450
 12093  004266                     l449:
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;inc\CANlib.h: 730: else
 12097                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12098  004266  010F               	movlb	15	; () banked
 12099  004268  9D1D               	bcf	29,6,b	;volatile
 12100  00426A                     l450:
 12101                           
 12102                           ; BSR set to: 15
 12103                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12104  00426A  0100               	movlb	0	; () banked
 12105  00426C  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12106  00426E  D003               	goto	l451
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12110  004270  010F               	movlb	15	; () banked
 12111  004272  8F1D               	bsf	29,7,b	;volatile
 12112  004274  D002               	goto	l4994
 12113  004276                     l451:
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;inc\CANlib.h: 735: else
 12117                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12118  004276  010F               	movlb	15	; () banked
 12119  004278  9F1D               	bcf	29,7,b	;volatile
 12120  00427A                     l4994:
 12121                           
 12122                           ; BSR set to: 15
 12123                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12124  00427A  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12125  00427E  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12126  004282  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12127  004286  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12128  00428A  0E16               	movlw	22
 12129  00428C  D006               	goto	u5710
 12130  00428E                     u5715:
 12131  00428E  0100               	movlb	0	; () banked
 12132  004290  90D8               	bcf	status,0,c
 12133  004292  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12134  004294  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12135  004296  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12136  004298  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12137  00429A                     u5710:
 12138  00429A  2EE8               	decfsz	wreg,f,c
 12139  00429C  D7F8               	goto	u5715
 12140  00429E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12141  0042A2  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12142  0042A6  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12143  0042AA  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12147  0042AE  0100               	movlb	0	; () banked
 12148  0042B0  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12149  0042B2  0100               	movlb	0	; () banked
 12150  0042B4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12151  0042B6  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12152  0042B8  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12153  0042BA  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12157  0042BC  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12158  0042C0  0012               	return	
 12159  0042C2                     __end_of_CANSetMask:
 12160                           	opt stack 0
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodh	equ	0xFF4
 12166                           prodl	equ	0xFF3
 12167                           intcon	equ	0xFF2
 12168                           intcon2	equ	0xFF1
 12169                           postinc0	equ	0xFEE
 12170                           wreg	equ	0xFE8
 12171                           postdec1	equ	0xFE5
 12172                           fsr1l	equ	0xFE1
 12173                           indf2	equ	0xFDF
 12174                           postinc2	equ	0xFDE
 12175                           postdec2	equ	0xFDD
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function _CANSetFilter *****************
 12181 ;; Defined at:
 12182 ;;		line 748 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  numBuffer       1    wreg     enum E16350
 12185 ;;  filter          4   23[BANK0 ] unsigned long 
 12186 ;;  type            1   27[BANK0 ] enum E16313
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12189 ;;  tamp            4   33[BANK0 ] unsigned long 
 12190 ;; Return value:  Size  Location     Type
 12191 ;;		None               void
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12199 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;Total ram usage:       14 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:    4
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_CANInitialize
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           	psect	text32
 12214  000D52                     __ptext32:
 12215                           	opt stack 0
 12216  000D52                     _CANSetFilter:
 12217                           	opt stack 24
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;incstack = 0
 12221                           ;CANSetFilter@numBuffer stored from wreg
 12222  000D52  0100               	movlb	0	; () banked
 12223  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12224                           
 12225                           ;inc\CANlib.h: 750: unsigned long tamp;
 12226                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12227  000D56  0100               	movlb	0	; () banked
 12228  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12229  000D5A  0100               	movlb	0	; () banked
 12230  000D5C  A4D8               	btfss	status,2,c
 12231  000D5E  D058               	goto	l5018
 12232                           
 12233                           ; BSR set to: 0
 12234  000D60  0100               	movlb	0	; () banked
 12235  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12236  000D64  A4D8               	btfss	status,2,c
 12237  000D66  D054               	goto	l5018
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;inc\CANlib.h: 753: {
 12241                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12242  000D68  010F               	movlb	15	; () banked
 12243  000D6A  9701               	bcf	1,3,b	;volatile
 12244                           
 12245                           ; BSR set to: 15
 12246                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12247  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12248  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12249  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12250  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12251  000D7C  0E04               	movlw	4
 12252  000D7E  D006               	goto	u5740
 12253  000D80                     u5745:
 12254  000D80  0100               	movlb	0	; () banked
 12255  000D82  90D8               	bcf	status,0,c
 12256  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12257  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12258  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12259  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12260  000D8C                     u5740:
 12261  000D8C  2EE8               	decfsz	wreg,f,c
 12262  000D8E  D7F8               	goto	u5745
 12263  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12264  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12265  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12266  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12270  000DA0  0100               	movlb	0	; () banked
 12271  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12272  000DA4  0100               	movlb	0	; () banked
 12273  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12274  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12275  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12276  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12280  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12284  000DB2  0E07               	movlw	7
 12285  000DB4  0100               	movlb	0	; () banked
 12286  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12287  000DB8  0100               	movlb	0	; () banked
 12288  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12289  000DBC  0E00               	movlw	0
 12290  000DBE  0100               	movlb	0	; () banked
 12291  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12292  000DC2  0100               	movlb	0	; () banked
 12293  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12294  000DC6  0E00               	movlw	0
 12295  000DC8  0100               	movlb	0	; () banked
 12296  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12297  000DCC  0100               	movlb	0	; () banked
 12298  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12299  000DD0  0E00               	movlw	0
 12300  000DD2  0100               	movlb	0	; () banked
 12301  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12302  000DD6  0100               	movlb	0	; () banked
 12303  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12307  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12308  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12309  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12310  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12311  000DEA  0E05               	movlw	5
 12312  000DEC                     u5755:
 12313  000DEC  90D8               	bcf	status,0,c
 12314  000DEE  0100               	movlb	0	; () banked
 12315  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12316  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12317  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12318  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12319  000DF8  2EE8               	decfsz	wreg,f,c
 12320  000DFA  D7F8               	goto	u5755
 12321  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12322  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12323  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12324  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12328  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12329  000E10                     l5018:
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;inc\CANlib.h: 763: }
 12333                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12334  000E10  0100               	movlb	0	; () banked
 12335  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12336  000E14  A4D8               	btfss	status,2,c
 12337  000E16  D058               	goto	l5036
 12338                           
 12339                           ; BSR set to: 0
 12340  000E18  0100               	movlb	0	; () banked
 12341  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12342  000E1C  A4D8               	btfss	status,2,c
 12343  000E1E  D054               	goto	l5036
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;inc\CANlib.h: 766: {
 12347                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12348  000E20  010F               	movlb	15	; () banked
 12349  000E22  9705               	bcf	5,3,b	;volatile
 12350                           
 12351                           ; BSR set to: 15
 12352                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12353  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12354  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12355  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12356  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12357  000E34  0E04               	movlw	4
 12358  000E36  D006               	goto	u5780
 12359  000E38                     u5785:
 12360  000E38  0100               	movlb	0	; () banked
 12361  000E3A  90D8               	bcf	status,0,c
 12362  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12363  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12364  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12365  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12366  000E44                     u5780:
 12367  000E44  2EE8               	decfsz	wreg,f,c
 12368  000E46  D7F8               	goto	u5785
 12369  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12370  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12371  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12372  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12376  000E58  0100               	movlb	0	; () banked
 12377  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12378  000E5C  0100               	movlb	0	; () banked
 12379  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12380  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12381  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12382  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12386  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12390  000E6A  0E07               	movlw	7
 12391  000E6C  0100               	movlb	0	; () banked
 12392  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12393  000E70  0100               	movlb	0	; () banked
 12394  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12395  000E74  0E00               	movlw	0
 12396  000E76  0100               	movlb	0	; () banked
 12397  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12398  000E7A  0100               	movlb	0	; () banked
 12399  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12400  000E7E  0E00               	movlw	0
 12401  000E80  0100               	movlb	0	; () banked
 12402  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12403  000E84  0100               	movlb	0	; () banked
 12404  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12405  000E88  0E00               	movlw	0
 12406  000E8A  0100               	movlb	0	; () banked
 12407  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12408  000E8E  0100               	movlb	0	; () banked
 12409  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12410                           
 12411                           ; BSR set to: 0
 12412                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12413  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12414  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12415  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12416  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12417  000EA2  0E05               	movlw	5
 12418  000EA4                     u5795:
 12419  000EA4  90D8               	bcf	status,0,c
 12420  000EA6  0100               	movlb	0	; () banked
 12421  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12422  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12423  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12424  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12425  000EB0  2EE8               	decfsz	wreg,f,c
 12426  000EB2  D7F8               	goto	u5795
 12427  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12428  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12429  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12430  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12434  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12435  000EC8                     l5036:
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;inc\CANlib.h: 776: }
 12439                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12440  000EC8  0E02               	movlw	2
 12441  000ECA  0100               	movlb	0	; () banked
 12442  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12443  000ECE  A4D8               	btfss	status,2,c
 12444  000ED0  D058               	goto	l5054
 12445                           
 12446                           ; BSR set to: 0
 12447  000ED2  0100               	movlb	0	; () banked
 12448  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12449  000ED6  A4D8               	btfss	status,2,c
 12450  000ED8  D054               	goto	l5054
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;inc\CANlib.h: 779: {
 12454                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12455  000EDA  010F               	movlb	15	; () banked
 12456  000EDC  9709               	bcf	9,3,b	;volatile
 12457                           
 12458                           ; BSR set to: 15
 12459                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12460  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12461  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12462  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12463  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12464  000EEE  0E04               	movlw	4
 12465  000EF0  D006               	goto	u5820
 12466  000EF2                     u5825:
 12467  000EF2  0100               	movlb	0	; () banked
 12468  000EF4  90D8               	bcf	status,0,c
 12469  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12470  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12471  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12472  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12473  000EFE                     u5820:
 12474  000EFE  2EE8               	decfsz	wreg,f,c
 12475  000F00  D7F8               	goto	u5825
 12476  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12477  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12478  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12479  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12483  000F12  0100               	movlb	0	; () banked
 12484  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12485  000F16  0100               	movlb	0	; () banked
 12486  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12487  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12488  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12489  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12493  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12497  000F24  0E07               	movlw	7
 12498  000F26  0100               	movlb	0	; () banked
 12499  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12500  000F2A  0100               	movlb	0	; () banked
 12501  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12502  000F2E  0E00               	movlw	0
 12503  000F30  0100               	movlb	0	; () banked
 12504  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12505  000F34  0100               	movlb	0	; () banked
 12506  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12507  000F38  0E00               	movlw	0
 12508  000F3A  0100               	movlb	0	; () banked
 12509  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12510  000F3E  0100               	movlb	0	; () banked
 12511  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12512  000F42  0E00               	movlw	0
 12513  000F44  0100               	movlb	0	; () banked
 12514  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12515  000F48  0100               	movlb	0	; () banked
 12516  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12520  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12521  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12522  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12523  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12524  000F5C  0E05               	movlw	5
 12525  000F5E                     u5835:
 12526  000F5E  90D8               	bcf	status,0,c
 12527  000F60  0100               	movlb	0	; () banked
 12528  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12529  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12530  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12531  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12532  000F6A  2EE8               	decfsz	wreg,f,c
 12533  000F6C  D7F8               	goto	u5835
 12534  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12535  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12536  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12537  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12541  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12542  000F82                     l5054:
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;inc\CANlib.h: 789: }
 12546                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12547  000F82  0E03               	movlw	3
 12548  000F84  0100               	movlb	0	; () banked
 12549  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12550  000F88  A4D8               	btfss	status,2,c
 12551  000F8A  D058               	goto	l5072
 12552                           
 12553                           ; BSR set to: 0
 12554  000F8C  0100               	movlb	0	; () banked
 12555  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12556  000F90  A4D8               	btfss	status,2,c
 12557  000F92  D054               	goto	l5072
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;inc\CANlib.h: 792: {
 12561                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12562  000F94  010F               	movlb	15	; () banked
 12563  000F96  970D               	bcf	13,3,b	;volatile
 12564                           
 12565                           ; BSR set to: 15
 12566                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12567  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12568  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12569  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12570  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12571  000FA8  0E04               	movlw	4
 12572  000FAA  D006               	goto	u5860
 12573  000FAC                     u5865:
 12574  000FAC  0100               	movlb	0	; () banked
 12575  000FAE  90D8               	bcf	status,0,c
 12576  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12577  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12578  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12579  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12580  000FB8                     u5860:
 12581  000FB8  2EE8               	decfsz	wreg,f,c
 12582  000FBA  D7F8               	goto	u5865
 12583  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12584  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12585  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12586  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12590  000FCC  0100               	movlb	0	; () banked
 12591  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12592  000FD0  0100               	movlb	0	; () banked
 12593  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12594  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12595  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12596  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12600  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12604  000FDE  0E07               	movlw	7
 12605  000FE0  0100               	movlb	0	; () banked
 12606  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12607  000FE4  0100               	movlb	0	; () banked
 12608  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12609  000FE8  0E00               	movlw	0
 12610  000FEA  0100               	movlb	0	; () banked
 12611  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12612  000FEE  0100               	movlb	0	; () banked
 12613  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12614  000FF2  0E00               	movlw	0
 12615  000FF4  0100               	movlb	0	; () banked
 12616  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12617  000FF8  0100               	movlb	0	; () banked
 12618  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12619  000FFC  0E00               	movlw	0
 12620  000FFE  0100               	movlb	0	; () banked
 12621  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12622  001002  0100               	movlb	0	; () banked
 12623  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12627  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12628  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12629  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12630  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12631  001016  0E05               	movlw	5
 12632  001018                     u5875:
 12633  001018  90D8               	bcf	status,0,c
 12634  00101A  0100               	movlb	0	; () banked
 12635  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12636  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12637  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12638  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12639  001024  2EE8               	decfsz	wreg,f,c
 12640  001026  D7F8               	goto	u5875
 12641  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12642  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12643  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12644  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12648  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12649  00103C                     l5072:
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;inc\CANlib.h: 802: }
 12653                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12654  00103C  0E04               	movlw	4
 12655  00103E  0100               	movlb	0	; () banked
 12656  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12657  001042  A4D8               	btfss	status,2,c
 12658  001044  D058               	goto	l5090
 12659                           
 12660                           ; BSR set to: 0
 12661  001046  0100               	movlb	0	; () banked
 12662  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12663  00104A  A4D8               	btfss	status,2,c
 12664  00104C  D054               	goto	l5090
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;inc\CANlib.h: 805: {
 12668                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12669  00104E  010F               	movlb	15	; () banked
 12670  001050  9711               	bcf	17,3,b	;volatile
 12671                           
 12672                           ; BSR set to: 15
 12673                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12674  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12675  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12676  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12677  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12678  001062  0E04               	movlw	4
 12679  001064  D006               	goto	u5900
 12680  001066                     u5905:
 12681  001066  0100               	movlb	0	; () banked
 12682  001068  90D8               	bcf	status,0,c
 12683  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12684  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12685  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12686  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12687  001072                     u5900:
 12688  001072  2EE8               	decfsz	wreg,f,c
 12689  001074  D7F8               	goto	u5905
 12690  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12691  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12692  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12693  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12697  001086  0100               	movlb	0	; () banked
 12698  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12699  00108A  0100               	movlb	0	; () banked
 12700  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12701  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12702  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12703  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12707  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12711  001098  0E07               	movlw	7
 12712  00109A  0100               	movlb	0	; () banked
 12713  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12714  00109E  0100               	movlb	0	; () banked
 12715  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12716  0010A2  0E00               	movlw	0
 12717  0010A4  0100               	movlb	0	; () banked
 12718  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12719  0010A8  0100               	movlb	0	; () banked
 12720  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12721  0010AC  0E00               	movlw	0
 12722  0010AE  0100               	movlb	0	; () banked
 12723  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12724  0010B2  0100               	movlb	0	; () banked
 12725  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12726  0010B6  0E00               	movlw	0
 12727  0010B8  0100               	movlb	0	; () banked
 12728  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12729  0010BC  0100               	movlb	0	; () banked
 12730  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12734  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12735  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12736  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12737  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12738  0010D0  0E05               	movlw	5
 12739  0010D2                     u5915:
 12740  0010D2  90D8               	bcf	status,0,c
 12741  0010D4  0100               	movlb	0	; () banked
 12742  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12743  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12744  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12745  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12746  0010DE  2EE8               	decfsz	wreg,f,c
 12747  0010E0  D7F8               	goto	u5915
 12748  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12749  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12750  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12751  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12755  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12756  0010F6                     l5090:
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;inc\CANlib.h: 815: }
 12760                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12761  0010F6  0E05               	movlw	5
 12762  0010F8  0100               	movlb	0	; () banked
 12763  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12764  0010FC  A4D8               	btfss	status,2,c
 12765  0010FE  D058               	goto	l5108
 12766                           
 12767                           ; BSR set to: 0
 12768  001100  0100               	movlb	0	; () banked
 12769  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12770  001104  A4D8               	btfss	status,2,c
 12771  001106  D054               	goto	l5108
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;inc\CANlib.h: 818: {
 12775                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12776  001108  010F               	movlb	15	; () banked
 12777  00110A  9715               	bcf	21,3,b	;volatile
 12778                           
 12779                           ; BSR set to: 15
 12780                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12781  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12782  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12783  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12784  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12785  00111C  0E04               	movlw	4
 12786  00111E  D006               	goto	u5940
 12787  001120                     u5945:
 12788  001120  0100               	movlb	0	; () banked
 12789  001122  90D8               	bcf	status,0,c
 12790  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12791  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12792  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12793  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12794  00112C                     u5940:
 12795  00112C  2EE8               	decfsz	wreg,f,c
 12796  00112E  D7F8               	goto	u5945
 12797  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12798  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12799  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12800  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12804  001140  0100               	movlb	0	; () banked
 12805  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12806  001144  0100               	movlb	0	; () banked
 12807  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12808  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12809  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12810  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12814  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12818  001152  0E07               	movlw	7
 12819  001154  0100               	movlb	0	; () banked
 12820  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12821  001158  0100               	movlb	0	; () banked
 12822  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12823  00115C  0E00               	movlw	0
 12824  00115E  0100               	movlb	0	; () banked
 12825  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12826  001162  0100               	movlb	0	; () banked
 12827  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12828  001166  0E00               	movlw	0
 12829  001168  0100               	movlb	0	; () banked
 12830  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12831  00116C  0100               	movlb	0	; () banked
 12832  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12833  001170  0E00               	movlw	0
 12834  001172  0100               	movlb	0	; () banked
 12835  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12836  001176  0100               	movlb	0	; () banked
 12837  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12841  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12842  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12843  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12844  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12845  00118A  0E05               	movlw	5
 12846  00118C                     u5955:
 12847  00118C  90D8               	bcf	status,0,c
 12848  00118E  0100               	movlb	0	; () banked
 12849  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12850  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12851  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12852  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12853  001198  2EE8               	decfsz	wreg,f,c
 12854  00119A  D7F8               	goto	u5955
 12855  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12856  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12857  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12858  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12862  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12863  0011B0                     l5108:
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;inc\CANlib.h: 828: }
 12867                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12868  0011B0  0100               	movlb	0	; () banked
 12869  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12870  0011B4  0100               	movlb	0	; () banked
 12871  0011B6  A4D8               	btfss	status,2,c
 12872  0011B8  D089               	goto	l5142
 12873                           
 12874                           ; BSR set to: 0
 12875  0011BA  0EF7               	movlw	247
 12876  0011BC  0100               	movlb	0	; () banked
 12877  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12878  0011C0  A4D8               	btfss	status,2,c
 12879  0011C2  D084               	goto	l5142
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;inc\CANlib.h: 832: {
 12883                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12884  0011C4  010F               	movlb	15	; () banked
 12885  0011C6  8701               	bsf	1,3,b	;volatile
 12886                           
 12887                           ; BSR set to: 15
 12888                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12889  0011C8  0100               	movlb	0	; () banked
 12890  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12891  0011CC  0100               	movlb	0	; () banked
 12892  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12893  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12894  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12895  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12899  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12903  0011DA  0E00               	movlw	0
 12904  0011DC  0100               	movlb	0	; () banked
 12905  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12906  0011E0  0100               	movlb	0	; () banked
 12907  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12908  0011E4  0EFF               	movlw	255
 12909  0011E6  0100               	movlb	0	; () banked
 12910  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12911  0011EA  0100               	movlb	0	; () banked
 12912  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12913  0011EE  0E00               	movlw	0
 12914  0011F0  0100               	movlb	0	; () banked
 12915  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12916  0011F4  0100               	movlb	0	; () banked
 12917  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12918  0011F8  0E00               	movlw	0
 12919  0011FA  0100               	movlb	0	; () banked
 12920  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12921  0011FE  0100               	movlb	0	; () banked
 12922  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12926  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12927  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12928  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12929  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12930  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12931  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12932  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12933  00121E  0100               	movlb	0	; () banked
 12934  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12935  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12936  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12937  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12938  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12942  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12946  001236  0100               	movlb	0	; () banked
 12947  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12948  00123A  D003               	goto	l463
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12952  00123C  010F               	movlb	15	; () banked
 12953  00123E  8101               	bsf	1,0,b	;volatile
 12954  001240  D002               	goto	l464
 12955  001242                     l463:
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;inc\CANlib.h: 844: else
 12959                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12960  001242  010F               	movlb	15	; () banked
 12961  001244  9101               	bcf	1,0,b	;volatile
 12962  001246                     l464:
 12963                           
 12964                           ; BSR set to: 15
 12965                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12966  001246  0100               	movlb	0	; () banked
 12967  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12968  00124A  D003               	goto	l465
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12972  00124C  010F               	movlb	15	; () banked
 12973  00124E  8301               	bsf	1,1,b	;volatile
 12974  001250  D002               	goto	l466
 12975  001252                     l465:
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;inc\CANlib.h: 849: else
 12979                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12980  001252  010F               	movlb	15	; () banked
 12981  001254  9301               	bcf	1,1,b	;volatile
 12982  001256                     l466:
 12983                           
 12984                           ; BSR set to: 15
 12985                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12986  001256  0100               	movlb	0	; () banked
 12987  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12988  00125A  D003               	goto	l467
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12992  00125C  010F               	movlb	15	; () banked
 12993  00125E  8B01               	bsf	1,5,b	;volatile
 12994  001260  D002               	goto	l468
 12995  001262                     l467:
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;inc\CANlib.h: 854: else
 12999                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 13000  001262  010F               	movlb	15	; () banked
 13001  001264  9B01               	bcf	1,5,b	;volatile
 13002  001266                     l468:
 13003                           
 13004                           ; BSR set to: 15
 13005                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 13006  001266  0100               	movlb	0	; () banked
 13007  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13008  00126A  D003               	goto	l469
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 13012  00126C  010F               	movlb	15	; () banked
 13013  00126E  8D01               	bsf	1,6,b	;volatile
 13014  001270  D002               	goto	l470
 13015  001272                     l469:
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;inc\CANlib.h: 859: else
 13019                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 13020  001272  010F               	movlb	15	; () banked
 13021  001274  9D01               	bcf	1,6,b	;volatile
 13022  001276                     l470:
 13023                           
 13024                           ; BSR set to: 15
 13025                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13026  001276  0100               	movlb	0	; () banked
 13027  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13028  00127A  D003               	goto	l471
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13032  00127C  010F               	movlb	15	; () banked
 13033  00127E  8F01               	bsf	1,7,b	;volatile
 13034  001280  D002               	goto	l5136
 13035  001282                     l471:
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;inc\CANlib.h: 864: else
 13039                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13040  001282  010F               	movlb	15	; () banked
 13041  001284  9F01               	bcf	1,7,b	;volatile
 13042  001286                     l5136:
 13043                           
 13044                           ; BSR set to: 15
 13045                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13046  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13047  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13048  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13049  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13050  001296  0E16               	movlw	22
 13051  001298  D006               	goto	u6030
 13052  00129A                     u6035:
 13053  00129A  0100               	movlb	0	; () banked
 13054  00129C  90D8               	bcf	status,0,c
 13055  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13056  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13057  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13058  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13059  0012A6                     u6030:
 13060  0012A6  2EE8               	decfsz	wreg,f,c
 13061  0012A8  D7F8               	goto	u6035
 13062  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13063  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13064  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13065  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13069  0012BA  0100               	movlb	0	; () banked
 13070  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13071  0012BE  0100               	movlb	0	; () banked
 13072  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13073  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13074  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13075  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13079  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13080  0012CC                     l5142:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;inc\CANlib.h: 870: }
 13084                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13085  0012CC  0100               	movlb	0	; () banked
 13086  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13087  0012D0  A4D8               	btfss	status,2,c
 13088  0012D2  D089               	goto	l5176
 13089                           
 13090                           ; BSR set to: 0
 13091  0012D4  0EF7               	movlw	247
 13092  0012D6  0100               	movlb	0	; () banked
 13093  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13094  0012DA  A4D8               	btfss	status,2,c
 13095  0012DC  D084               	goto	l5176
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;inc\CANlib.h: 873: {
 13099                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13100  0012DE  010F               	movlb	15	; () banked
 13101  0012E0  8705               	bsf	5,3,b	;volatile
 13102                           
 13103                           ; BSR set to: 15
 13104                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13105  0012E2  0100               	movlb	0	; () banked
 13106  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13107  0012E6  0100               	movlb	0	; () banked
 13108  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13109  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13110  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13111  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13115  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13119  0012F4  0E00               	movlw	0
 13120  0012F6  0100               	movlb	0	; () banked
 13121  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13122  0012FA  0100               	movlb	0	; () banked
 13123  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13124  0012FE  0EFF               	movlw	255
 13125  001300  0100               	movlb	0	; () banked
 13126  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13127  001304  0100               	movlb	0	; () banked
 13128  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13129  001308  0E00               	movlw	0
 13130  00130A  0100               	movlb	0	; () banked
 13131  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13132  00130E  0100               	movlb	0	; () banked
 13133  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13134  001312  0E00               	movlw	0
 13135  001314  0100               	movlb	0	; () banked
 13136  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13137  001318  0100               	movlb	0	; () banked
 13138  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13142  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13143  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13144  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13145  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13146  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13147  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13148  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13149  001338  0100               	movlb	0	; () banked
 13150  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13151  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13152  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13153  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13154  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13158  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13162  001350  0100               	movlb	0	; () banked
 13163  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13164  001354  D003               	goto	l474
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13168  001356  010F               	movlb	15	; () banked
 13169  001358  8105               	bsf	5,0,b	;volatile
 13170  00135A  D002               	goto	l475
 13171  00135C                     l474:
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;inc\CANlib.h: 885: else
 13175                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13176  00135C  010F               	movlb	15	; () banked
 13177  00135E  9105               	bcf	5,0,b	;volatile
 13178  001360                     l475:
 13179                           
 13180                           ; BSR set to: 15
 13181                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13182  001360  0100               	movlb	0	; () banked
 13183  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13184  001364  D003               	goto	l476
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13188  001366  010F               	movlb	15	; () banked
 13189  001368  8305               	bsf	5,1,b	;volatile
 13190  00136A  D002               	goto	l477
 13191  00136C                     l476:
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;inc\CANlib.h: 890: else
 13195                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13196  00136C  010F               	movlb	15	; () banked
 13197  00136E  9305               	bcf	5,1,b	;volatile
 13198  001370                     l477:
 13199                           
 13200                           ; BSR set to: 15
 13201                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13202  001370  0100               	movlb	0	; () banked
 13203  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13204  001374  D003               	goto	l478
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13208  001376  010F               	movlb	15	; () banked
 13209  001378  8B05               	bsf	5,5,b	;volatile
 13210  00137A  D002               	goto	l479
 13211  00137C                     l478:
 13212                           
 13213                           ; BSR set to: 0
 13214                           ;inc\CANlib.h: 895: else
 13215                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13216  00137C  010F               	movlb	15	; () banked
 13217  00137E  9B05               	bcf	5,5,b	;volatile
 13218  001380                     l479:
 13219                           
 13220                           ; BSR set to: 15
 13221                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13222  001380  0100               	movlb	0	; () banked
 13223  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13224  001384  D003               	goto	l480
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13228  001386  010F               	movlb	15	; () banked
 13229  001388  8D05               	bsf	5,6,b	;volatile
 13230  00138A  D002               	goto	l481
 13231  00138C                     l480:
 13232                           
 13233                           ; BSR set to: 0
 13234                           ;inc\CANlib.h: 900: else
 13235                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13236  00138C  010F               	movlb	15	; () banked
 13237  00138E  9D05               	bcf	5,6,b	;volatile
 13238  001390                     l481:
 13239                           
 13240                           ; BSR set to: 15
 13241                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13242  001390  0100               	movlb	0	; () banked
 13243  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13244  001394  D003               	goto	l482
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13248  001396  010F               	movlb	15	; () banked
 13249  001398  8F05               	bsf	5,7,b	;volatile
 13250  00139A  D002               	goto	l5170
 13251  00139C                     l482:
 13252                           
 13253                           ; BSR set to: 0
 13254                           ;inc\CANlib.h: 905: else
 13255                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13256  00139C  010F               	movlb	15	; () banked
 13257  00139E  9F05               	bcf	5,7,b	;volatile
 13258  0013A0                     l5170:
 13259                           
 13260                           ; BSR set to: 15
 13261                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13262  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13263  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13264  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13265  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13266  0013B0  0E16               	movlw	22
 13267  0013B2  D006               	goto	u6110
 13268  0013B4                     u6115:
 13269  0013B4  0100               	movlb	0	; () banked
 13270  0013B6  90D8               	bcf	status,0,c
 13271  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13272  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13273  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13274  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13275  0013C0                     u6110:
 13276  0013C0  2EE8               	decfsz	wreg,f,c
 13277  0013C2  D7F8               	goto	u6115
 13278  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13279  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13280  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13281  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13285  0013D4  0100               	movlb	0	; () banked
 13286  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13287  0013D8  0100               	movlb	0	; () banked
 13288  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13289  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13290  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13291  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13295  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13296  0013E6                     l5176:
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;inc\CANlib.h: 911: }
 13300                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13301  0013E6  0E02               	movlw	2
 13302  0013E8  0100               	movlb	0	; () banked
 13303  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13304  0013EC  A4D8               	btfss	status,2,c
 13305  0013EE  D089               	goto	l5210
 13306                           
 13307                           ; BSR set to: 0
 13308  0013F0  0EF7               	movlw	247
 13309  0013F2  0100               	movlb	0	; () banked
 13310  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13311  0013F6  A4D8               	btfss	status,2,c
 13312  0013F8  D084               	goto	l5210
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;inc\CANlib.h: 915: {
 13316                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13317  0013FA  010F               	movlb	15	; () banked
 13318  0013FC  8709               	bsf	9,3,b	;volatile
 13319                           
 13320                           ; BSR set to: 15
 13321                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13322  0013FE  0100               	movlb	0	; () banked
 13323  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13324  001402  0100               	movlb	0	; () banked
 13325  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13326  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13327  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13328  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13332  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13336  001410  0E00               	movlw	0
 13337  001412  0100               	movlb	0	; () banked
 13338  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13339  001416  0100               	movlb	0	; () banked
 13340  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13341  00141A  0EFF               	movlw	255
 13342  00141C  0100               	movlb	0	; () banked
 13343  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13344  001420  0100               	movlb	0	; () banked
 13345  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13346  001424  0E00               	movlw	0
 13347  001426  0100               	movlb	0	; () banked
 13348  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13349  00142A  0100               	movlb	0	; () banked
 13350  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13351  00142E  0E00               	movlw	0
 13352  001430  0100               	movlb	0	; () banked
 13353  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13354  001434  0100               	movlb	0	; () banked
 13355  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13359  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13360  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13361  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13362  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13363  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13364  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13365  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13366  001454  0100               	movlb	0	; () banked
 13367  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13368  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13369  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13370  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13371  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13372                           
 13373                           ; BSR set to: 0
 13374                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13375  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13376                           
 13377                           ; BSR set to: 0
 13378                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13379  00146C  0100               	movlb	0	; () banked
 13380  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13381  001470  D003               	goto	l485
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13385  001472  010F               	movlb	15	; () banked
 13386  001474  8109               	bsf	9,0,b	;volatile
 13387  001476  D002               	goto	l486
 13388  001478                     l485:
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;inc\CANlib.h: 927: else
 13392                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13393  001478  010F               	movlb	15	; () banked
 13394  00147A  9109               	bcf	9,0,b	;volatile
 13395  00147C                     l486:
 13396                           
 13397                           ; BSR set to: 15
 13398                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13399  00147C  0100               	movlb	0	; () banked
 13400  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13401  001480  D003               	goto	l487
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13405  001482  010F               	movlb	15	; () banked
 13406  001484  8309               	bsf	9,1,b	;volatile
 13407  001486  D002               	goto	l488
 13408  001488                     l487:
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;inc\CANlib.h: 932: else
 13412                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13413  001488  010F               	movlb	15	; () banked
 13414  00148A  9309               	bcf	9,1,b	;volatile
 13415  00148C                     l488:
 13416                           
 13417                           ; BSR set to: 15
 13418                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13419  00148C  0100               	movlb	0	; () banked
 13420  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13421  001490  D003               	goto	l489
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13425  001492  010F               	movlb	15	; () banked
 13426  001494  8B09               	bsf	9,5,b	;volatile
 13427  001496  D002               	goto	l490
 13428  001498                     l489:
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;inc\CANlib.h: 937: else
 13432                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13433  001498  010F               	movlb	15	; () banked
 13434  00149A  9B09               	bcf	9,5,b	;volatile
 13435  00149C                     l490:
 13436                           
 13437                           ; BSR set to: 15
 13438                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13439  00149C  0100               	movlb	0	; () banked
 13440  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13441  0014A0  D003               	goto	l491
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13445  0014A2  010F               	movlb	15	; () banked
 13446  0014A4  8D09               	bsf	9,6,b	;volatile
 13447  0014A6  D002               	goto	l492
 13448  0014A8                     l491:
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;inc\CANlib.h: 942: else
 13452                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13453  0014A8  010F               	movlb	15	; () banked
 13454  0014AA  9D09               	bcf	9,6,b	;volatile
 13455  0014AC                     l492:
 13456                           
 13457                           ; BSR set to: 15
 13458                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13459  0014AC  0100               	movlb	0	; () banked
 13460  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13461  0014B0  D003               	goto	l493
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13465  0014B2  010F               	movlb	15	; () banked
 13466  0014B4  8F09               	bsf	9,7,b	;volatile
 13467  0014B6  D002               	goto	l5204
 13468  0014B8                     l493:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;inc\CANlib.h: 947: else
 13472                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13473  0014B8  010F               	movlb	15	; () banked
 13474  0014BA  9F09               	bcf	9,7,b	;volatile
 13475  0014BC                     l5204:
 13476                           
 13477                           ; BSR set to: 15
 13478                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13479  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13480  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13481  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13482  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13483  0014CC  0E16               	movlw	22
 13484  0014CE  D006               	goto	u6190
 13485  0014D0                     u6195:
 13486  0014D0  0100               	movlb	0	; () banked
 13487  0014D2  90D8               	bcf	status,0,c
 13488  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13489  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13490  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13491  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13492  0014DC                     u6190:
 13493  0014DC  2EE8               	decfsz	wreg,f,c
 13494  0014DE  D7F8               	goto	u6195
 13495  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13496  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13497  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13498  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13502  0014F0  0100               	movlb	0	; () banked
 13503  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13504  0014F4  0100               	movlb	0	; () banked
 13505  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13506  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13507  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13508  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13512  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13513  001502                     l5210:
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;inc\CANlib.h: 953: }
 13517                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13518  001502  0E03               	movlw	3
 13519  001504  0100               	movlb	0	; () banked
 13520  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13521  001508  A4D8               	btfss	status,2,c
 13522  00150A  D089               	goto	l5244
 13523                           
 13524                           ; BSR set to: 0
 13525  00150C  0EF7               	movlw	247
 13526  00150E  0100               	movlb	0	; () banked
 13527  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13528  001512  A4D8               	btfss	status,2,c
 13529  001514  D084               	goto	l5244
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;inc\CANlib.h: 956: {
 13533                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13534  001516  010F               	movlb	15	; () banked
 13535  001518  870D               	bsf	13,3,b	;volatile
 13536                           
 13537                           ; BSR set to: 15
 13538                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13539  00151A  0100               	movlb	0	; () banked
 13540  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13541  00151E  0100               	movlb	0	; () banked
 13542  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13543  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13544  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13545  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13549  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13553  00152C  0E00               	movlw	0
 13554  00152E  0100               	movlb	0	; () banked
 13555  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13556  001532  0100               	movlb	0	; () banked
 13557  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13558  001536  0EFF               	movlw	255
 13559  001538  0100               	movlb	0	; () banked
 13560  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13561  00153C  0100               	movlb	0	; () banked
 13562  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13563  001540  0E00               	movlw	0
 13564  001542  0100               	movlb	0	; () banked
 13565  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13566  001546  0100               	movlb	0	; () banked
 13567  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13568  00154A  0E00               	movlw	0
 13569  00154C  0100               	movlb	0	; () banked
 13570  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13571  001550  0100               	movlb	0	; () banked
 13572  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13573                           
 13574                           ; BSR set to: 0
 13575                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13576  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13577  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13578  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13579  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13580  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13581  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13582  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13583  001570  0100               	movlb	0	; () banked
 13584  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13585  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13586  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13587  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13588  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13592  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13596  001588  0100               	movlb	0	; () banked
 13597  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13598  00158C  D003               	goto	l496
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13602  00158E  010F               	movlb	15	; () banked
 13603  001590  810D               	bsf	13,0,b	;volatile
 13604  001592  D002               	goto	l497
 13605  001594                     l496:
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;inc\CANlib.h: 968: else
 13609                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13610  001594  010F               	movlb	15	; () banked
 13611  001596  910D               	bcf	13,0,b	;volatile
 13612  001598                     l497:
 13613                           
 13614                           ; BSR set to: 15
 13615                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13616  001598  0100               	movlb	0	; () banked
 13617  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13618  00159C  D003               	goto	l498
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13622  00159E  010F               	movlb	15	; () banked
 13623  0015A0  830D               	bsf	13,1,b	;volatile
 13624  0015A2  D002               	goto	l499
 13625  0015A4                     l498:
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;inc\CANlib.h: 973: else
 13629                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13630  0015A4  010F               	movlb	15	; () banked
 13631  0015A6  930D               	bcf	13,1,b	;volatile
 13632  0015A8                     l499:
 13633                           
 13634                           ; BSR set to: 15
 13635                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13636  0015A8  0100               	movlb	0	; () banked
 13637  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13638  0015AC  D003               	goto	l500
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13642  0015AE  010F               	movlb	15	; () banked
 13643  0015B0  8B0D               	bsf	13,5,b	;volatile
 13644  0015B2  D002               	goto	l501
 13645  0015B4                     l500:
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;inc\CANlib.h: 978: else
 13649                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13650  0015B4  010F               	movlb	15	; () banked
 13651  0015B6  9B0D               	bcf	13,5,b	;volatile
 13652  0015B8                     l501:
 13653                           
 13654                           ; BSR set to: 15
 13655                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13656  0015B8  0100               	movlb	0	; () banked
 13657  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13658  0015BC  D003               	goto	l502
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13662  0015BE  010F               	movlb	15	; () banked
 13663  0015C0  8D0D               	bsf	13,6,b	;volatile
 13664  0015C2  D002               	goto	l503
 13665  0015C4                     l502:
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;inc\CANlib.h: 983: else
 13669                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13670  0015C4  010F               	movlb	15	; () banked
 13671  0015C6  9D0D               	bcf	13,6,b	;volatile
 13672  0015C8                     l503:
 13673                           
 13674                           ; BSR set to: 15
 13675                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13676  0015C8  0100               	movlb	0	; () banked
 13677  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13678  0015CC  D003               	goto	l504
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13682  0015CE  010F               	movlb	15	; () banked
 13683  0015D0  8F0D               	bsf	13,7,b	;volatile
 13684  0015D2  D002               	goto	l5238
 13685  0015D4                     l504:
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;inc\CANlib.h: 988: else
 13689                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13690  0015D4  010F               	movlb	15	; () banked
 13691  0015D6  9F0D               	bcf	13,7,b	;volatile
 13692  0015D8                     l5238:
 13693                           
 13694                           ; BSR set to: 15
 13695                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13696  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13697  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13698  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13699  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13700  0015E8  0E16               	movlw	22
 13701  0015EA  D006               	goto	u6270
 13702  0015EC                     u6275:
 13703  0015EC  0100               	movlb	0	; () banked
 13704  0015EE  90D8               	bcf	status,0,c
 13705  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13706  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13707  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13708  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13709  0015F8                     u6270:
 13710  0015F8  2EE8               	decfsz	wreg,f,c
 13711  0015FA  D7F8               	goto	u6275
 13712  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13713  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13714  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13715  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13719  00160C  0100               	movlb	0	; () banked
 13720  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13721  001610  0100               	movlb	0	; () banked
 13722  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13723  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13724  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13725  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13729  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13730  00161E                     l5244:
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;inc\CANlib.h: 994: }
 13734                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13735  00161E  0E04               	movlw	4
 13736  001620  0100               	movlb	0	; () banked
 13737  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13738  001624  A4D8               	btfss	status,2,c
 13739  001626  D089               	goto	l5278
 13740                           
 13741                           ; BSR set to: 0
 13742  001628  0EF7               	movlw	247
 13743  00162A  0100               	movlb	0	; () banked
 13744  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13745  00162E  A4D8               	btfss	status,2,c
 13746  001630  D084               	goto	l5278
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;inc\CANlib.h: 997: {
 13750                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13751  001632  010F               	movlb	15	; () banked
 13752  001634  8711               	bsf	17,3,b	;volatile
 13753                           
 13754                           ; BSR set to: 15
 13755                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13756  001636  0100               	movlb	0	; () banked
 13757  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13758  00163A  0100               	movlb	0	; () banked
 13759  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13760  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13761  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13762  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13766  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13770  001648  0E00               	movlw	0
 13771  00164A  0100               	movlb	0	; () banked
 13772  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13773  00164E  0100               	movlb	0	; () banked
 13774  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13775  001652  0EFF               	movlw	255
 13776  001654  0100               	movlb	0	; () banked
 13777  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13778  001658  0100               	movlb	0	; () banked
 13779  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13780  00165C  0E00               	movlw	0
 13781  00165E  0100               	movlb	0	; () banked
 13782  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13783  001662  0100               	movlb	0	; () banked
 13784  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13785  001666  0E00               	movlw	0
 13786  001668  0100               	movlb	0	; () banked
 13787  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13788  00166C  0100               	movlb	0	; () banked
 13789  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13793  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13794  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13795  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13796  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13797  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13798  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13799  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13800  00168C  0100               	movlb	0	; () banked
 13801  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13802  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13803  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13804  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13805  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13809  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13813  0016A4  0100               	movlb	0	; () banked
 13814  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13815  0016A8  D003               	goto	l507
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13819  0016AA  010F               	movlb	15	; () banked
 13820  0016AC  8111               	bsf	17,0,b	;volatile
 13821  0016AE  D002               	goto	l508
 13822  0016B0                     l507:
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;inc\CANlib.h: 1009: else
 13826                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13827  0016B0  010F               	movlb	15	; () banked
 13828  0016B2  9111               	bcf	17,0,b	;volatile
 13829  0016B4                     l508:
 13830                           
 13831                           ; BSR set to: 15
 13832                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13833  0016B4  0100               	movlb	0	; () banked
 13834  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13835  0016B8  D003               	goto	l509
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13839  0016BA  010F               	movlb	15	; () banked
 13840  0016BC  8311               	bsf	17,1,b	;volatile
 13841  0016BE  D002               	goto	l510
 13842  0016C0                     l509:
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;inc\CANlib.h: 1014: else
 13846                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13847  0016C0  010F               	movlb	15	; () banked
 13848  0016C2  9311               	bcf	17,1,b	;volatile
 13849  0016C4                     l510:
 13850                           
 13851                           ; BSR set to: 15
 13852                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13853  0016C4  0100               	movlb	0	; () banked
 13854  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13855  0016C8  D003               	goto	l511
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13859  0016CA  010F               	movlb	15	; () banked
 13860  0016CC  8B11               	bsf	17,5,b	;volatile
 13861  0016CE  D002               	goto	l512
 13862  0016D0                     l511:
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;inc\CANlib.h: 1019: else
 13866                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13867  0016D0  010F               	movlb	15	; () banked
 13868  0016D2  9B11               	bcf	17,5,b	;volatile
 13869  0016D4                     l512:
 13870                           
 13871                           ; BSR set to: 15
 13872                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13873  0016D4  0100               	movlb	0	; () banked
 13874  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13875  0016D8  D003               	goto	l513
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13879  0016DA  010F               	movlb	15	; () banked
 13880  0016DC  8D11               	bsf	17,6,b	;volatile
 13881  0016DE  D002               	goto	l514
 13882  0016E0                     l513:
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;inc\CANlib.h: 1024: else
 13886                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13887  0016E0  010F               	movlb	15	; () banked
 13888  0016E2  9D11               	bcf	17,6,b	;volatile
 13889  0016E4                     l514:
 13890                           
 13891                           ; BSR set to: 15
 13892                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13893  0016E4  0100               	movlb	0	; () banked
 13894  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13895  0016E8  D003               	goto	l515
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13899  0016EA  010F               	movlb	15	; () banked
 13900  0016EC  8F11               	bsf	17,7,b	;volatile
 13901  0016EE  D002               	goto	l5272
 13902  0016F0                     l515:
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;inc\CANlib.h: 1029: else
 13906                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13907  0016F0  010F               	movlb	15	; () banked
 13908  0016F2  9F11               	bcf	17,7,b	;volatile
 13909  0016F4                     l5272:
 13910                           
 13911                           ; BSR set to: 15
 13912                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13913  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13914  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13915  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13916  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13917  001704  0E16               	movlw	22
 13918  001706  D006               	goto	u6350
 13919  001708                     u6355:
 13920  001708  0100               	movlb	0	; () banked
 13921  00170A  90D8               	bcf	status,0,c
 13922  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13923  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13924  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13925  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13926  001714                     u6350:
 13927  001714  2EE8               	decfsz	wreg,f,c
 13928  001716  D7F8               	goto	u6355
 13929  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13930  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13931  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13932  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13936  001728  0100               	movlb	0	; () banked
 13937  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13938  00172C  0100               	movlb	0	; () banked
 13939  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13940  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13941  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13942  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13946  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13947  00173A                     l5278:
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;inc\CANlib.h: 1035: }
 13951                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13952  00173A  0E05               	movlw	5
 13953  00173C  0100               	movlb	0	; () banked
 13954  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13955  001740  A4D8               	btfss	status,2,c
 13956  001742  0012               	return	
 13957                           
 13958                           ; BSR set to: 0
 13959  001744  0EF7               	movlw	247
 13960  001746  0100               	movlb	0	; () banked
 13961  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13962  00174A  A4D8               	btfss	status,2,c
 13963  00174C  0012               	return	
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;inc\CANlib.h: 1038: {
 13967                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13968  00174E  010F               	movlb	15	; () banked
 13969  001750  8715               	bsf	21,3,b	;volatile
 13970                           
 13971                           ; BSR set to: 15
 13972                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13973  001752  0100               	movlb	0	; () banked
 13974  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13975  001756  0100               	movlb	0	; () banked
 13976  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13977  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13978  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13979  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13983  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13987  001764  0E00               	movlw	0
 13988  001766  0100               	movlb	0	; () banked
 13989  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13990  00176A  0100               	movlb	0	; () banked
 13991  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13992  00176E  0EFF               	movlw	255
 13993  001770  0100               	movlb	0	; () banked
 13994  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13995  001774  0100               	movlb	0	; () banked
 13996  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13997  001778  0E00               	movlw	0
 13998  00177A  0100               	movlb	0	; () banked
 13999  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14000  00177E  0100               	movlb	0	; () banked
 14001  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14002  001782  0E00               	movlw	0
 14003  001784  0100               	movlb	0	; () banked
 14004  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14005  001788  0100               	movlb	0	; () banked
 14006  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 14010  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14011  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14012  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14013  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14014  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14015  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14016  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14017  0017A8  0100               	movlb	0	; () banked
 14018  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14019  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14020  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14021  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14022  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14026  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14030  0017C0  0100               	movlb	0	; () banked
 14031  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14032  0017C4  D003               	goto	l518
 14033                           
 14034                           ; BSR set to: 0
 14035                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14036  0017C6  010F               	movlb	15	; () banked
 14037  0017C8  8115               	bsf	21,0,b	;volatile
 14038  0017CA  D002               	goto	l519
 14039  0017CC                     l518:
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;inc\CANlib.h: 1050: else
 14043                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14044  0017CC  010F               	movlb	15	; () banked
 14045  0017CE  9115               	bcf	21,0,b	;volatile
 14046  0017D0                     l519:
 14047                           
 14048                           ; BSR set to: 15
 14049                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14050  0017D0  0100               	movlb	0	; () banked
 14051  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14052  0017D4  D003               	goto	l520
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14056  0017D6  010F               	movlb	15	; () banked
 14057  0017D8  8315               	bsf	21,1,b	;volatile
 14058  0017DA  D002               	goto	l521
 14059  0017DC                     l520:
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;inc\CANlib.h: 1055: else
 14063                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14064  0017DC  010F               	movlb	15	; () banked
 14065  0017DE  9315               	bcf	21,1,b	;volatile
 14066  0017E0                     l521:
 14067                           
 14068                           ; BSR set to: 15
 14069                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14070  0017E0  0100               	movlb	0	; () banked
 14071  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14072  0017E4  D003               	goto	l522
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14076  0017E6  010F               	movlb	15	; () banked
 14077  0017E8  8B15               	bsf	21,5,b	;volatile
 14078  0017EA  D002               	goto	l523
 14079  0017EC                     l522:
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;inc\CANlib.h: 1060: else
 14083                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14084  0017EC  010F               	movlb	15	; () banked
 14085  0017EE  9B15               	bcf	21,5,b	;volatile
 14086  0017F0                     l523:
 14087                           
 14088                           ; BSR set to: 15
 14089                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14090  0017F0  0100               	movlb	0	; () banked
 14091  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14092  0017F4  D003               	goto	l524
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14096  0017F6  010F               	movlb	15	; () banked
 14097  0017F8  8D15               	bsf	21,6,b	;volatile
 14098  0017FA  D002               	goto	l525
 14099  0017FC                     l524:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;inc\CANlib.h: 1065: else
 14103                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14104  0017FC  010F               	movlb	15	; () banked
 14105  0017FE  9D15               	bcf	21,6,b	;volatile
 14106  001800                     l525:
 14107                           
 14108                           ; BSR set to: 15
 14109                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14110  001800  0100               	movlb	0	; () banked
 14111  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14112  001804  D003               	goto	l526
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14116  001806  010F               	movlb	15	; () banked
 14117  001808  8F15               	bsf	21,7,b	;volatile
 14118  00180A  D002               	goto	l5306
 14119  00180C                     l526:
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;inc\CANlib.h: 1070: else
 14123                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14124  00180C  010F               	movlb	15	; () banked
 14125  00180E  9F15               	bcf	21,7,b	;volatile
 14126  001810                     l5306:
 14127                           
 14128                           ; BSR set to: 15
 14129                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14130  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14131  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14132  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14133  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14134  001820  0E16               	movlw	22
 14135  001822  D006               	goto	u6430
 14136  001824                     u6435:
 14137  001824  0100               	movlb	0	; () banked
 14138  001826  90D8               	bcf	status,0,c
 14139  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14140  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14141  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14142  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14143  001830                     u6430:
 14144  001830  2EE8               	decfsz	wreg,f,c
 14145  001832  D7F8               	goto	u6435
 14146  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14147  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14148  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14149  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14153  001844  0100               	movlb	0	; () banked
 14154  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14155  001848  0100               	movlb	0	; () banked
 14156  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14157  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14158  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14159  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14163  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14164  001856  0012               	return	
 14165  001858                     __end_of_CANSetFilter:
 14166                           	opt stack 0
 14167                           tblptru	equ	0xFF8
 14168                           tblptrh	equ	0xFF7
 14169                           tblptrl	equ	0xFF6
 14170                           tablat	equ	0xFF5
 14171                           prodh	equ	0xFF4
 14172                           prodl	equ	0xFF3
 14173                           intcon	equ	0xFF2
 14174                           intcon2	equ	0xFF1
 14175                           postinc0	equ	0xFEE
 14176                           wreg	equ	0xFE8
 14177                           postdec1	equ	0xFE5
 14178                           fsr1l	equ	0xFE1
 14179                           indf2	equ	0xFDF
 14180                           postinc2	equ	0xFDE
 14181                           postdec2	equ	0xFDD
 14182                           fsr2h	equ	0xFDA
 14183                           fsr2l	equ	0xFD9
 14184                           status	equ	0xFD8
 14185                           
 14186 ;; *************** function _CANOperationMode *****************
 14187 ;; Defined at:
 14188 ;;		line 206 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;  mode            1    wreg     enum E16307
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;  mode            1   23[BANK0 ] enum E16307
 14193 ;; Return value:  Size  Location     Type
 14194 ;;		None               void
 14195 ;; Registers used:
 14196 ;;		wreg, status,2, status,0
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;Total ram usage:        1 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    4
 14209 ;; This function calls:
 14210 ;;		Nothing
 14211 ;; This function is called by:
 14212 ;;		_CANInitialize
 14213 ;; This function uses a non-reentrant model
 14214 ;;
 14215                           
 14216                           	psect	text33
 14217  005F02                     __ptext33:
 14218                           	opt stack 0
 14219  005F02                     _CANOperationMode:
 14220                           	opt stack 24
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;incstack = 0
 14224                           ;CANOperationMode@mode stored from wreg
 14225  005F02  0100               	movlb	0	; () banked
 14226  005F04  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14227                           
 14228                           ;inc\CANlib.h: 208: CANCON = mode;
 14229  005F06  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14230  005F0A                     l4902:
 14231  005F0A  506E               	movf	3950,w,c	;volatile
 14232  005F0C  0BE0               	andlw	224
 14233  005F0E  0100               	movlb	0	; () banked
 14234  005F10  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14235  005F12  B4D8               	btfsc	status,2,c
 14236  005F14  0012               	return	
 14237  005F16  D7F9               	goto	l4902
 14238  005F18                     __end_of_CANOperationMode:
 14239                           	opt stack 0
 14240                           tblptru	equ	0xFF8
 14241                           tblptrh	equ	0xFF7
 14242                           tblptrl	equ	0xFF6
 14243                           tablat	equ	0xFF5
 14244                           prodh	equ	0xFF4
 14245                           prodl	equ	0xFF3
 14246                           intcon	equ	0xFF2
 14247                           intcon2	equ	0xFF1
 14248                           postinc0	equ	0xFEE
 14249                           wreg	equ	0xFE8
 14250                           postdec1	equ	0xFE5
 14251                           fsr1l	equ	0xFE1
 14252                           indf2	equ	0xFDF
 14253                           postinc2	equ	0xFDE
 14254                           postdec2	equ	0xFDD
 14255                           fsr2h	equ	0xFDA
 14256                           fsr2l	equ	0xFD9
 14257                           status	equ	0xFD8
 14258                           
 14259 ;; *************** function _can_interpreter *****************
 14260 ;; Defined at:
 14261 ;;		line 433 in file "parcheggio.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;		None
 14264 ;; Auto vars:     Size  Location     Type
 14265 ;;		None
 14266 ;; Return value:  Size  Location     Type
 14267 ;;		None               void
 14268 ;; Registers used:
 14269 ;;		wreg, status,2, status,0
 14270 ;; Tracked objects:
 14271 ;;		On entry : 0/0
 14272 ;;		On exit  : 0/0
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14277 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14278 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;Total ram usage:        4 bytes
 14280 ;; Hardware stack levels used:    1
 14281 ;; Hardware stack levels required when called:    4
 14282 ;; This function calls:
 14283 ;;		Nothing
 14284 ;; This function is called by:
 14285 ;;		_main
 14286 ;; This function uses a non-reentrant model
 14287 ;;
 14288                           
 14289                           	psect	text34
 14290  005CB8                     __ptext34:
 14291                           	opt stack 0
 14292  005CB8                     _can_interpreter:
 14293                           	opt stack 26
 14294                           
 14295                           ;parcheggio.c: 434: left_speed = data_speed_rx[1];
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;incstack = 0
 14299  005CB8  C109  F03A         	movff	_data_speed_rx+1,_left_speed
 14300  005CBC  6A3B               	clrf	_left_speed+1,c
 14301                           
 14302                           ;parcheggio.c: 435: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14303  005CBE  503A               	movf	_left_speed,w,c
 14304  005CC0  0100               	movlb	0	; () banked
 14305  005CC2  6F77               	movwf	??_can_interpreter& (0+255),b
 14306  005CC4  0101               	movlb	1	; () banked
 14307  005CC6  5108               	movf	_data_speed_rx& (0+255),w,b
 14308  005CC8  6E3A               	movwf	_left_speed,c
 14309  005CCA  C077  F03B         	movff	??_can_interpreter,_left_speed+1
 14310                           
 14311                           ; BSR set to: 1
 14312                           ;parcheggio.c: 436: right_speed = data_speed_rx[3];
 14313  005CCE  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 14314  005CD2  6A3F               	clrf	_right_speed+1,c
 14315                           
 14316                           ;parcheggio.c: 437: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14317  005CD4  503E               	movf	_right_speed,w,c
 14318  005CD6  0100               	movlb	0	; () banked
 14319  005CD8  6F77               	movwf	??_can_interpreter& (0+255),b
 14320  005CDA  0101               	movlb	1	; () banked
 14321  005CDC  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14322  005CDE  6E3E               	movwf	_right_speed,c
 14323  005CE0  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 14324                           
 14325                           ; BSR set to: 1
 14326                           ;parcheggio.c: 438: actual_speed = (right_speed + left_speed) / 2;
 14327  005CE4  503A               	movf	_left_speed,w,c
 14328  005CE6  243E               	addwf	_right_speed,w,c
 14329  005CE8  0100               	movlb	0	; () banked
 14330  005CEA  6F77               	movwf	??_can_interpreter& (0+255),b
 14331  005CEC  503B               	movf	_left_speed+1,w,c
 14332  005CEE  203F               	addwfc	_right_speed+1,w,c
 14333  005CF0  0100               	movlb	0	; () banked
 14334  005CF2  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14335  005CF4  90D8               	bcf	status,0,c
 14336  005CF6  0100               	movlb	0	; () banked
 14337  005CF8  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14338  005CFA  0100               	movlb	0	; () banked
 14339  005CFC  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14340  005CFE  0100               	movlb	0	; () banked
 14341  005D00  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14342  005D02  0101               	movlb	1	; () banked
 14343  005D04  6F44               	movwf	_actual_speed& (0+255),b
 14344  005D06  C079  F145         	movff	??_can_interpreter+2,_actual_speed+1
 14345                           
 14346                           ; BSR set to: 1
 14347  005D0A  0012               	return		;funcret
 14348  005D0C                     __end_of_can_interpreter:
 14349                           	opt stack 0
 14350                           tblptru	equ	0xFF8
 14351                           tblptrh	equ	0xFF7
 14352                           tblptrl	equ	0xFF6
 14353                           tablat	equ	0xFF5
 14354                           prodh	equ	0xFF4
 14355                           prodl	equ	0xFF3
 14356                           intcon	equ	0xFF2
 14357                           intcon2	equ	0xFF1
 14358                           postinc0	equ	0xFEE
 14359                           wreg	equ	0xFE8
 14360                           postdec1	equ	0xFE5
 14361                           fsr1l	equ	0xFE1
 14362                           indf2	equ	0xFDF
 14363                           postinc2	equ	0xFDE
 14364                           postdec2	equ	0xFDD
 14365                           fsr2h	equ	0xFDA
 14366                           fsr2l	equ	0xFD9
 14367                           status	equ	0xFD8
 14368                           
 14369 ;; *************** function _ISR_Bassa *****************
 14370 ;; Defined at:
 14371 ;;		line 110 in file "parcheggio.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;		None
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;  i               1   34[COMRAM] unsigned char 
 14376 ;;  gigi            1   33[COMRAM] unsigned char 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;		None               void
 14379 ;; Registers used:
 14380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;Total ram usage:       23 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:    3
 14393 ;; This function calls:
 14394 ;;		_CANreceiveMessage
 14395 ;; This function is called by:
 14396 ;;		Interrupt level 1
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	intcodelo
 14401  000018                     __pintcodelo:
 14402                           	opt stack 0
 14403  000018                     _ISR_Bassa:
 14404                           	opt stack 21
 14405                           
 14406                           ; BSR set to: 1
 14407                           ;incstack = 0
 14408  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14409  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14410  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14411  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14412  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14413  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14414  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14415  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14416  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14417  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14418  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14419  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14420  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14421  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14422  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14423  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14424  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14425  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14426                           
 14427                           ;parcheggio.c: 112: if (INTCONbits.TMR0IF == 1) {
 14428  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14429  000060  D036               	goto	i1l6012
 14430                           
 14431                           ;parcheggio.c: 113: INTCONbits.INT0IE = 0;
 14432  000062  98F2               	bcf	intcon,4,c	;volatile
 14433                           
 14434                           ;parcheggio.c: 114: T0CONbits.TMR0ON = 0;
 14435  000064  9ED5               	bcf	4053,7,c	;volatile
 14436                           
 14437                           ;parcheggio.c: 115: TMR0H = 0x34;
 14438  000066  0E34               	movlw	52
 14439  000068  6ED7               	movwf	4055,c	;volatile
 14440                           
 14441                           ;parcheggio.c: 116: TMR0L = 0xE0;
 14442  00006A  0EE0               	movlw	224
 14443  00006C  6ED6               	movwf	4054,c	;volatile
 14444                           
 14445                           ;parcheggio.c: 117: T0CONbits.TMR0ON = 1;
 14446  00006E  8ED5               	bsf	4053,7,c	;volatile
 14447                           
 14448                           ;parcheggio.c: 118: if (distance_error == 1) {
 14449  000070  A646               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14450  000072  D00C               	goto	i1l5982
 14451                           
 14452                           ;parcheggio.c: 119: sensor_distance[MUX_index] = 5000;
 14453  000074  5042               	movf	_MUX_index,w,c	;volatile
 14454  000076  0D02               	mullw	2
 14455  000078  0E24               	movlw	low _sensor_distance
 14456  00007A  24F3               	addwf	prodl,w,c
 14457  00007C  6ED9               	movwf	fsr2l,c
 14458  00007E  0E00               	movlw	high _sensor_distance
 14459  000080  20F4               	addwfc	prodh,w,c
 14460  000082  6EDA               	movwf	fsr2h,c
 14461  000084  0E88               	movlw	136
 14462  000086  6EDE               	movwf	postinc2,c
 14463  000088  0E13               	movlw	19
 14464  00008A  6EDD               	movwf	postdec2,c
 14465  00008C                     i1l5982:
 14466                           
 14467                           ;parcheggio.c: 120: }
 14468                           ;parcheggio.c: 121: MUX_index++;
 14469  00008C  2A42               	incf	_MUX_index,f,c	;volatile
 14470                           
 14471                           ;parcheggio.c: 122: if (MUX_index == 8) {
 14472  00008E  0E08               	movlw	8
 14473  000090  1842               	xorwf	_MUX_index,w,c	;volatile
 14474  000092  A4D8               	btfss	status,2,c
 14475  000094  D002               	goto	i1l695
 14476                           
 14477                           ;parcheggio.c: 123: MUX_index = 0;
 14478  000096  0E00               	movlw	0
 14479  000098  6E42               	movwf	_MUX_index,c	;volatile
 14480  00009A                     i1l695:
 14481                           
 14482                           ;parcheggio.c: 124: }
 14483                           ;parcheggio.c: 126: unsigned char gigi = 0;
 14484  00009A  0E00               	movlw	0
 14485  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14486                           
 14487                           ;parcheggio.c: 127: gigi = MUX_select[MUX_index];
 14488  00009E  5042               	movf	_MUX_index,w,c	;volatile
 14489  0000A0  0D01               	mullw	1
 14490  0000A2  0E00               	movlw	low _MUX_select
 14491  0000A4  24F3               	addwf	prodl,w,c
 14492  0000A6  6ED9               	movwf	fsr2l,c
 14493  0000A8  0E01               	movlw	high _MUX_select
 14494  0000AA  20F4               	addwfc	prodh,w,c
 14495  0000AC  6EDA               	movwf	fsr2h,c
 14496  0000AE  50DF               	movf	indf2,w,c
 14497  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14498                           
 14499                           ;parcheggio.c: 128: PORTA = gigi;
 14500  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14501                           
 14502                           ;parcheggio.c: 129: TRISBbits.RB0 = 0;
 14503  0000B6  9093               	bcf	3987,0,c	;volatile
 14504                           
 14505                           ;parcheggio.c: 130: LATBbits.LATB0 = 1;
 14506  0000B8  808A               	bsf	3978,0,c	;volatile
 14507                           
 14508                           ;parcheggio.c: 131: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14509  0000BA  0E14               	movlw	20
 14510  0000BC                     i1u965_27:
 14511  0000BC  2EE8               	decfsz	wreg,f,c
 14512  0000BE  D7FE               	goto	i1u965_27
 14513                           
 14514                           ;parcheggio.c: 132: distance_error = 1;
 14515  0000C0  8646               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14516                           
 14517                           ;parcheggio.c: 133: LATBbits.LATB0 = 0;
 14518  0000C2  908A               	bcf	3978,0,c	;volatile
 14519                           
 14520                           ;parcheggio.c: 134: TRISBbits.RB0 = 1;
 14521  0000C4  8093               	bsf	3987,0,c	;volatile
 14522                           
 14523                           ;parcheggio.c: 135: INTCONbits.INT0IF = 0;
 14524  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14525                           
 14526                           ;parcheggio.c: 136: INTCONbits.INT0IE = 1;
 14527  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14528                           
 14529                           ;parcheggio.c: 137: INTCONbits.TMR0IF = 0;
 14530  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14531                           
 14532                           ;parcheggio.c: 138: INTCON2bits.INTEDG0 = 1;
 14533  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14534  0000CE                     i1l6012:
 14535                           
 14536                           ;parcheggio.c: 139: }
 14537                           ;parcheggio.c: 141: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14538  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14539  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14540  0000D2  D001               	goto	i1l6016
 14541  0000D4  D09B               	goto	i1l709
 14542  0000D6                     i1l6016:
 14543                           
 14544                           ;parcheggio.c: 142: CANreceiveMessage(&msg);
 14545  0000D6  0E4A               	movlw	low _msg
 14546  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14547  0000DA  0E01               	movlw	high _msg
 14548  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14549  0000DE  ECB7  F012         	call	_CANreceiveMessage	;wreg free
 14550                           
 14551                           ;parcheggio.c: 143: if (msg.identifier == 0b00000001101) {
 14552  0000E2  0E0D               	movlw	13
 14553  0000E4  0101               	movlb	1	; () banked
 14554  0000E6  194A               	xorwf	_msg& (0+255),w,b
 14555  0000E8  0101               	movlb	1	; () banked
 14556  0000EA  114B               	iorwf	(_msg+1)& (0+255),w,b
 14557  0000EC  0101               	movlb	1	; () banked
 14558  0000EE  114C               	iorwf	(_msg+2)& (0+255),w,b
 14559  0000F0  0101               	movlb	1	; () banked
 14560  0000F2  114D               	iorwf	(_msg+3)& (0+255),w,b
 14561  0000F4  B4D8               	btfsc	status,2,c
 14562                           
 14563                           ; BSR set to: 1
 14564                           ;parcheggio.c: 144: asd = 0;
 14565  0000F6  9246               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14566                           
 14567                           ; BSR set to: 1
 14568                           ;parcheggio.c: 145: }
 14569                           ;parcheggio.c: 146: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14570                           
 14571                           ; BSR set to: 1
 14572  0000F8  0E07               	movlw	7
 14573  0000FA  0101               	movlb	1	; () banked
 14574  0000FC  194A               	xorwf	_msg& (0+255),w,b
 14575  0000FE  0101               	movlb	1	; () banked
 14576  000100  114B               	iorwf	(_msg+1)& (0+255),w,b
 14577  000102  0101               	movlb	1	; () banked
 14578  000104  114C               	iorwf	(_msg+2)& (0+255),w,b
 14579  000106  0101               	movlb	1	; () banked
 14580  000108  114D               	iorwf	(_msg+3)& (0+255),w,b
 14581  00010A  A4D8               	btfss	status,2,c
 14582  00010C  D02B               	goto	i1l6038
 14583                           
 14584                           ; BSR set to: 1
 14585  00010E  0101               	movlb	1	; () banked
 14586  000110  0558               	decf	(_msg+14)& (0+255),w,b
 14587  000112  B4D8               	btfsc	status,2,c
 14588  000114  D027               	goto	i1l6038
 14589                           
 14590                           ; BSR set to: 1
 14591                           ;parcheggio.c: 147: distance_average = 0;
 14592  000116  0E00               	movlw	0
 14593  000118  6E35               	movwf	_distance_average+1,c	;volatile
 14594  00011A  0E00               	movlw	0
 14595  00011C  6E34               	movwf	_distance_average,c	;volatile
 14596                           
 14597                           ; BSR set to: 1
 14598                           ;parcheggio.c: 148: distance_dx = msg.data[1];
 14599  00011E  C14F  F036         	movff	_msg+5,_distance_dx	;volatile
 14600  000122  6A37               	clrf	_distance_dx+1,c	;volatile
 14601                           
 14602                           ;parcheggio.c: 149: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14603  000124  5036               	movf	_distance_dx,w,c	;volatile
 14604  000126  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14605  000128  0101               	movlb	1	; () banked
 14606  00012A  514E               	movf	(_msg+4)& (0+255),w,b
 14607  00012C  6E36               	movwf	_distance_dx,c	;volatile
 14608  00012E  C00D  F037         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14609                           
 14610                           ; BSR set to: 1
 14611                           ;parcheggio.c: 150: distance_sx = msg.data[3];
 14612  000132  C151  F038         	movff	_msg+7,_distance_sx	;volatile
 14613  000136  6A39               	clrf	_distance_sx+1,c	;volatile
 14614                           
 14615                           ;parcheggio.c: 151: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14616  000138  5038               	movf	_distance_sx,w,c	;volatile
 14617  00013A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14618  00013C  0101               	movlb	1	; () banked
 14619  00013E  5150               	movf	(_msg+6)& (0+255),w,b
 14620  000140  6E38               	movwf	_distance_sx,c	;volatile
 14621  000142  C00D  F039         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14622                           
 14623                           ; BSR set to: 1
 14624                           ;parcheggio.c: 152: distance_average = (distance_sx + distance_dx) / 2;
 14625  000146  5036               	movf	_distance_dx,w,c	;volatile
 14626  000148  2438               	addwf	_distance_sx,w,c	;volatile
 14627  00014A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14628  00014C  5037               	movf	_distance_dx+1,w,c	;volatile
 14629  00014E  2039               	addwfc	_distance_sx+1,w,c	;volatile
 14630  000150  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14631  000152  90D8               	bcf	status,0,c
 14632  000154  300E               	rrcf	??_ISR_Bassa+1,w,c
 14633  000156  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14634  000158  300D               	rrcf	??_ISR_Bassa,w,c
 14635  00015A  6E34               	movwf	_distance_average,c	;volatile
 14636  00015C  C00F  F035         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14637                           
 14638                           ; BSR set to: 1
 14639                           ;parcheggio.c: 153: distance_received = 1;
 14640  000160  8846               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14641                           
 14642                           ; BSR set to: 1
 14643                           ;parcheggio.c: 154: distance_received1 = 1;
 14644  000162  8A46               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14645  000164                     i1l6038:
 14646                           
 14647                           ; BSR set to: 1
 14648                           ;parcheggio.c: 155: }
 14649                           ;parcheggio.c: 156: if (msg.identifier == 0b00000001010) {
 14650  000164  0E0A               	movlw	10
 14651  000166  0101               	movlb	1	; () banked
 14652  000168  194A               	xorwf	_msg& (0+255),w,b
 14653  00016A  0101               	movlb	1	; () banked
 14654  00016C  114B               	iorwf	(_msg+1)& (0+255),w,b
 14655  00016E  0101               	movlb	1	; () banked
 14656  000170  114C               	iorwf	(_msg+2)& (0+255),w,b
 14657  000172  0101               	movlb	1	; () banked
 14658  000174  114D               	iorwf	(_msg+3)& (0+255),w,b
 14659  000176  A4D8               	btfss	status,2,c
 14660  000178  D00C               	goto	i1l6044
 14661                           
 14662                           ; BSR set to: 1
 14663                           ;parcheggio.c: 157: if (msg.data[0] == 1) {
 14664  00017A  0101               	movlb	1	; () banked
 14665  00017C  054E               	decf	(_msg+4)& (0+255),w,b
 14666  00017E  A4D8               	btfss	status,2,c
 14667  000180  D003               	goto	i1l702
 14668                           
 14669                           ; BSR set to: 1
 14670                           ;parcheggio.c: 158: activation = 1;
 14671  000182  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14672                           
 14673                           ;parcheggio.c: 159: PORTBbits.RB6 = 1;
 14674  000184  8C81               	bsf	3969,6,c	;volatile
 14675                           
 14676                           ;parcheggio.c: 160: } else {
 14677  000186  D005               	goto	i1l6044
 14678  000188                     i1l702:
 14679                           
 14680                           ; BSR set to: 1
 14681                           ;parcheggio.c: 161: activation = 0;
 14682  000188  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14683                           
 14684                           ;parcheggio.c: 162: PORTBbits.RB4 = 0;
 14685  00018A  9881               	bcf	3969,4,c	;volatile
 14686                           
 14687                           ;parcheggio.c: 163: PORTBbits.RB5 = 0;
 14688  00018C  9A81               	bcf	3969,5,c	;volatile
 14689                           
 14690                           ;parcheggio.c: 164: PORTBbits.RB6 = 0;
 14691  00018E  9C81               	bcf	3969,6,c	;volatile
 14692                           
 14693                           ;parcheggio.c: 165: request_sent = 0;
 14694  000190  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14695  000192                     i1l6044:
 14696                           
 14697                           ; BSR set to: 1
 14698                           ;parcheggio.c: 166: }
 14699                           ;parcheggio.c: 167: }
 14700                           ;parcheggio.c: 168: if (msg.identifier == 0b00000001100) {
 14701  000192  0E0C               	movlw	12
 14702  000194  0101               	movlb	1	; () banked
 14703  000196  194A               	xorwf	_msg& (0+255),w,b
 14704  000198  0101               	movlb	1	; () banked
 14705  00019A  114B               	iorwf	(_msg+1)& (0+255),w,b
 14706  00019C  0101               	movlb	1	; () banked
 14707  00019E  114C               	iorwf	(_msg+2)& (0+255),w,b
 14708  0001A0  0101               	movlb	1	; () banked
 14709  0001A2  114D               	iorwf	(_msg+3)& (0+255),w,b
 14710  0001A4  B4D8               	btfsc	status,2,c
 14711                           
 14712                           ; BSR set to: 1
 14713                           ;parcheggio.c: 169: start_operation = 1;
 14714  0001A6  8447               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14715                           
 14716                           ; BSR set to: 1
 14717                           ;parcheggio.c: 170: }
 14718                           ;parcheggio.c: 171: if (msg.identifier == 0b00000000110) {
 14719                           
 14720                           ; BSR set to: 1
 14721  0001A8  0E06               	movlw	6
 14722  0001AA  0101               	movlb	1	; () banked
 14723  0001AC  194A               	xorwf	_msg& (0+255),w,b
 14724  0001AE  0101               	movlb	1	; () banked
 14725  0001B0  114B               	iorwf	(_msg+1)& (0+255),w,b
 14726  0001B2  0101               	movlb	1	; () banked
 14727  0001B4  114C               	iorwf	(_msg+2)& (0+255),w,b
 14728  0001B6  0101               	movlb	1	; () banked
 14729  0001B8  114D               	iorwf	(_msg+3)& (0+255),w,b
 14730  0001BA  A4D8               	btfss	status,2,c
 14731  0001BC  D025               	goto	i1l705
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;parcheggio.c: 172: for (unsigned char i = 0; i < 8; i++) {
 14735  0001BE  0E00               	movlw	0
 14736  0001C0  6E23               	movwf	ISR_Bassa@i,c
 14737  0001C2                     i1l6052:
 14738                           
 14739                           ; BSR set to: 1
 14740  0001C2  0E07               	movlw	7
 14741  0001C4  6423               	cpfsgt	ISR_Bassa@i,c
 14742  0001C6  D001               	goto	i1l6056
 14743  0001C8  D014               	goto	i1l6062
 14744  0001CA                     i1l6056:
 14745                           
 14746                           ;parcheggio.c: 173: data_speed_rx[i] = msg.data[i];
 14747  0001CA  5023               	movf	ISR_Bassa@i,w,c
 14748  0001CC  0D01               	mullw	1
 14749  0001CE  0E4E               	movlw	low (_msg+4)
 14750  0001D0  24F3               	addwf	prodl,w,c
 14751  0001D2  6ED9               	movwf	fsr2l,c
 14752  0001D4  0E01               	movlw	high (_msg+4)
 14753  0001D6  20F4               	addwfc	prodh,w,c
 14754  0001D8  6EDA               	movwf	fsr2h,c
 14755  0001DA  5023               	movf	ISR_Bassa@i,w,c
 14756  0001DC  0D01               	mullw	1
 14757  0001DE  0E08               	movlw	low _data_speed_rx
 14758  0001E0  24F3               	addwf	prodl,w,c
 14759  0001E2  6EE1               	movwf	fsr1l,c
 14760  0001E4  0E01               	movlw	high _data_speed_rx
 14761  0001E6  20F4               	addwfc	prodh,w,c
 14762  0001E8  6EE2               	movwf	fsr1h,c
 14763  0001EA  CFDF FFE7          	movff	indf2,indf1
 14764  0001EE  2A23               	incf	ISR_Bassa@i,f,c
 14765  0001F0  D7E8               	goto	i1l6052
 14766  0001F2                     i1l6062:
 14767                           
 14768                           ;parcheggio.c: 174: }
 14769                           ;parcheggio.c: 175: if (msg.identifier == 0b00000001101) {
 14770  0001F2  0E0D               	movlw	13
 14771  0001F4  0101               	movlb	1	; () banked
 14772  0001F6  194A               	xorwf	_msg& (0+255),w,b
 14773  0001F8  0101               	movlb	1	; () banked
 14774  0001FA  114B               	iorwf	(_msg+1)& (0+255),w,b
 14775  0001FC  0101               	movlb	1	; () banked
 14776  0001FE  114C               	iorwf	(_msg+2)& (0+255),w,b
 14777  000200  0101               	movlb	1	; () banked
 14778  000202  114D               	iorwf	(_msg+3)& (0+255),w,b
 14779  000204  B4D8               	btfsc	status,2,c
 14780                           
 14781                           ; BSR set to: 1
 14782                           ;parcheggio.c: 176: distance_wait = 0;
 14783  000206  9C46               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14784  000208                     i1l705:
 14785                           
 14786                           ; BSR set to: 1
 14787                           ;parcheggio.c: 177: }
 14788                           ;parcheggio.c: 179: }
 14789                           ;parcheggio.c: 181: PIR3bits.RXB0IF = 0;
 14790  000208  90A4               	bcf	4004,0,c	;volatile
 14791                           
 14792                           ;parcheggio.c: 182: PIR3bits.RXB1IF = 0;
 14793  00020A  92A4               	bcf	4004,1,c	;volatile
 14794  00020C                     i1l709:
 14795  00020C  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14796  000210  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14797  000214  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14798  000218  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14799  00021C  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14800  000220  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14801  000224  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14802  000228  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14803  00022C  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14804  000230  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14805  000234  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14806  000238  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14807  00023C  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14808  000240  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14809  000244  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14810  000248  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14811  00024C  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14812  000250  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14813  000252  0010               	retfie	
 14814  000254                     __end_of_ISR_Bassa:
 14815                           	opt stack 0
 14816                           pclatu	equ	0xFFB
 14817                           pclath	equ	0xFFA
 14818                           tblptru	equ	0xFF8
 14819                           tblptrh	equ	0xFF7
 14820                           tblptrl	equ	0xFF6
 14821                           tablat	equ	0xFF5
 14822                           prodh	equ	0xFF4
 14823                           prodl	equ	0xFF3
 14824                           intcon	equ	0xFF2
 14825                           intcon2	equ	0xFF1
 14826                           postinc0	equ	0xFEE
 14827                           fsr0h	equ	0xFEA
 14828                           fsr0l	equ	0xFE9
 14829                           wreg	equ	0xFE8
 14830                           indf1	equ	0xFE7
 14831                           postdec1	equ	0xFE5
 14832                           fsr1h	equ	0xFE2
 14833                           fsr1l	equ	0xFE1
 14834                           bsr	equ	0xFE0
 14835                           indf2	equ	0xFDF
 14836                           postinc2	equ	0xFDE
 14837                           postdec2	equ	0xFDD
 14838                           fsr2h	equ	0xFDA
 14839                           fsr2l	equ	0xFD9
 14840                           status	equ	0xFD8
 14841                           
 14842 ;; *************** function _CANreceiveMessage *****************
 14843 ;; Defined at:
 14844 ;;		line 528 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;  msg             2    0[COMRAM] PTR struct .
 14847 ;;		 -> msg(15), 
 14848 ;; Auto vars:     Size  Location     Type
 14849 ;;  tamp            1   11[COMRAM] unsigned char 
 14850 ;;  error           1   10[COMRAM] unsigned char 
 14851 ;; Return value:  Size  Location     Type
 14852 ;;                  1    wreg      unsigned char 
 14853 ;; Registers used:
 14854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14855 ;; Tracked objects:
 14856 ;;		On entry : 0/0
 14857 ;;		On exit  : 0/0
 14858 ;;		Unchanged: 0/0
 14859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14862 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14863 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;Total ram usage:       12 bytes
 14865 ;; Hardware stack levels used:    1
 14866 ;; Hardware stack levels required when called:    2
 14867 ;; This function calls:
 14868 ;;		Nothing
 14869 ;; This function is called by:
 14870 ;;		_ISR_Bassa
 14871 ;; This function uses a non-reentrant model
 14872 ;;
 14873                           
 14874                           	psect	text36
 14875  00256E                     __ptext36:
 14876                           	opt stack 0
 14877  00256E                     _CANreceiveMessage:
 14878                           	opt stack 21
 14879                           
 14880                           ;inc\CANlib.h: 530: BYTE tamp;
 14881                           ;inc\CANlib.h: 531: BYTE error = 0;
 14882                           
 14883                           ;incstack = 0
 14884  00256E  0E00               	movlw	0
 14885  002570  6E0B               	movwf	CANreceiveMessage@error,c
 14886                           
 14887                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14888  002572  BE74               	btfsc	3956,7,c	;volatile
 14889                           
 14890                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14891  002574  800B               	bsf	CANreceiveMessage@error,0,c
 14892                           
 14893                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14894  002576  BC74               	btfsc	3956,6,c	;volatile
 14895                           
 14896                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14897  002578  820B               	bsf	CANreceiveMessage@error,1,c
 14898                           
 14899                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14900  00257A  010F               	movlb	15	; () banked
 14901  00257C  AF50               	btfss	80,7,b	;volatile
 14902  00257E  D143               	goto	i1l410
 14903                           
 14904                           ; BSR set to: 15
 14905                           ;inc\CANlib.h: 541: {
 14906                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14907  002580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14908  002584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14909  002588  6ADE               	clrf	postinc2,c
 14910  00258A  6ADE               	clrf	postinc2,c
 14911  00258C  6ADE               	clrf	postinc2,c
 14912  00258E  6ADD               	clrf	postdec2,c
 14913                           
 14914                           ; BSR set to: 15
 14915                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14916  002590  EE20 F004          	lfsr	2,4
 14917  002594  5001               	movf	CANreceiveMessage@msg,w,c
 14918  002596  26D9               	addwf	fsr2l,f,c
 14919  002598  5002               	movf	CANreceiveMessage@msg+1,w,c
 14920  00259A  22DA               	addwfc	fsr2h,f,c
 14921  00259C  CF56 FFDF          	movff	3926,indf2	;volatile
 14922                           
 14923                           ; BSR set to: 15
 14924                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14925  0025A0  EE20 F005          	lfsr	2,5
 14926  0025A4  5001               	movf	CANreceiveMessage@msg,w,c
 14927  0025A6  26D9               	addwf	fsr2l,f,c
 14928  0025A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14929  0025AA  22DA               	addwfc	fsr2h,f,c
 14930  0025AC  CF57 FFDF          	movff	3927,indf2	;volatile
 14931                           
 14932                           ; BSR set to: 15
 14933                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14934  0025B0  EE20 F006          	lfsr	2,6
 14935  0025B4  5001               	movf	CANreceiveMessage@msg,w,c
 14936  0025B6  26D9               	addwf	fsr2l,f,c
 14937  0025B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14938  0025BA  22DA               	addwfc	fsr2h,f,c
 14939  0025BC  CF58 FFDF          	movff	3928,indf2	;volatile
 14940                           
 14941                           ; BSR set to: 15
 14942                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14943  0025C0  EE20 F007          	lfsr	2,7
 14944  0025C4  5001               	movf	CANreceiveMessage@msg,w,c
 14945  0025C6  26D9               	addwf	fsr2l,f,c
 14946  0025C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14947  0025CA  22DA               	addwfc	fsr2h,f,c
 14948  0025CC  CF59 FFDF          	movff	3929,indf2	;volatile
 14949                           
 14950                           ; BSR set to: 15
 14951                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14952  0025D0  EE20 F008          	lfsr	2,8
 14953  0025D4  5001               	movf	CANreceiveMessage@msg,w,c
 14954  0025D6  26D9               	addwf	fsr2l,f,c
 14955  0025D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14956  0025DA  22DA               	addwfc	fsr2h,f,c
 14957  0025DC  CF5A FFDF          	movff	3930,indf2	;volatile
 14958                           
 14959                           ; BSR set to: 15
 14960                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14961  0025E0  EE20 F009          	lfsr	2,9
 14962  0025E4  5001               	movf	CANreceiveMessage@msg,w,c
 14963  0025E6  26D9               	addwf	fsr2l,f,c
 14964  0025E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14965  0025EA  22DA               	addwfc	fsr2h,f,c
 14966  0025EC  CF5B FFDF          	movff	3931,indf2	;volatile
 14967                           
 14968                           ; BSR set to: 15
 14969                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14970  0025F0  EE20 F00A          	lfsr	2,10
 14971  0025F4  5001               	movf	CANreceiveMessage@msg,w,c
 14972  0025F6  26D9               	addwf	fsr2l,f,c
 14973  0025F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14974  0025FA  22DA               	addwfc	fsr2h,f,c
 14975  0025FC  CF5C FFDF          	movff	3932,indf2	;volatile
 14976                           
 14977                           ; BSR set to: 15
 14978                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14979  002600  EE20 F00B          	lfsr	2,11
 14980  002604  5001               	movf	CANreceiveMessage@msg,w,c
 14981  002606  26D9               	addwf	fsr2l,f,c
 14982  002608  5002               	movf	CANreceiveMessage@msg+1,w,c
 14983  00260A  22DA               	addwfc	fsr2h,f,c
 14984  00260C  CF5D FFDF          	movff	3933,indf2	;volatile
 14985                           
 14986                           ; BSR set to: 15
 14987                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14988  002610  EE20 F00E          	lfsr	2,14
 14989  002614  5001               	movf	CANreceiveMessage@msg,w,c
 14990  002616  26D9               	addwf	fsr2l,f,c
 14991  002618  5002               	movf	CANreceiveMessage@msg+1,w,c
 14992  00261A  22DA               	addwfc	fsr2h,f,c
 14993  00261C  010F               	movlb	15	; () banked
 14994  00261E  AD55               	btfss	85,6,b	;volatile
 14995  002620  D002               	goto	i1u672_20
 14996  002622  0E01               	movlw	1
 14997  002624  D001               	goto	i1u672_26
 14998  002626                     i1u672_20:
 14999  002626  0E00               	movlw	0
 15000  002628                     i1u672_26:
 15001  002628  6EDF               	movwf	indf2,c
 15002                           
 15003                           ; BSR set to: 15
 15004                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 15005  00262A  EE20 F00D          	lfsr	2,13
 15006  00262E  5001               	movf	CANreceiveMessage@msg,w,c
 15007  002630  26D9               	addwf	fsr2l,f,c
 15008  002632  5002               	movf	CANreceiveMessage@msg+1,w,c
 15009  002634  22DA               	addwfc	fsr2h,f,c
 15010  002636  010F               	movlb	15	; () banked
 15011  002638  5155               	movf	85,w,b	;volatile
 15012  00263A  0B0F               	andlw	15
 15013  00263C  6EDF               	movwf	indf2,c
 15014                           
 15015                           ; BSR set to: 15
 15016                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 15017  00263E  EE20 F00C          	lfsr	2,12
 15018  002642  5001               	movf	CANreceiveMessage@msg,w,c
 15019  002644  26D9               	addwf	fsr2l,f,c
 15020  002646  5002               	movf	CANreceiveMessage@msg+1,w,c
 15021  002648  22DA               	addwfc	fsr2h,f,c
 15022  00264A  010F               	movlb	15	; () banked
 15023  00264C  A752               	btfss	82,3,b	;volatile
 15024  00264E  D002               	goto	i1u673_20
 15025  002650  0E01               	movlw	1
 15026  002652  D001               	goto	i1u673_26
 15027  002654                     i1u673_20:
 15028  002654  0E00               	movlw	0
 15029  002656                     i1u673_26:
 15030  002656  6EDF               	movwf	indf2,c
 15031                           
 15032                           ; BSR set to: 15
 15033                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 15034  002658  010F               	movlb	15	; () banked
 15035  00265A  B752               	btfsc	82,3,b	;volatile
 15036  00265C  D044               	goto	i1l5590
 15037                           
 15038                           ; BSR set to: 15
 15039                           ;inc\CANlib.h: 559: {
 15040                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 15041  00265E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15042  002662  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15043  002664  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15044  002666  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15045  002668  0E03               	movlw	3
 15046  00266A                     i1u675_25:
 15047  00266A  90D8               	bcf	status,0,c
 15048  00266C  3603               	rlcf	??_CANreceiveMessage,f,c
 15049  00266E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15050  002670  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15051  002672  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15052  002674  2EE8               	decfsz	wreg,f,c
 15053  002676  D7F9               	goto	i1u675_25
 15054  002678  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15055  00267C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15056  002680  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15057  002684  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15058  002688  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15059  00268C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15060                           
 15061                           ; BSR set to: 15
 15062                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 15063  002690  010F               	movlb	15	; () banked
 15064  002692  3952               	swapf	82,w,b	;volatile
 15065  002694  42E8               	rrncf	wreg,f,c
 15066  002696  0B07               	andlw	7
 15067  002698  0B07               	andlw	7
 15068  00269A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15069                           
 15070                           ; BSR set to: 15
 15071                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 15072  00269C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15073  0026A0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15074  0026A4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15075  0026A8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15076  0026AC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15077  0026B0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15078  0026B4  500C               	movf	CANreceiveMessage@tamp,w,c
 15079  0026B6  2403               	addwf	??_CANreceiveMessage,w,c
 15080  0026B8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15081  0026BA  0E00               	movlw	0
 15082  0026BC  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15083  0026BE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15084  0026C0  0E00               	movlw	0
 15085  0026C2  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15086  0026C4  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15087  0026C6  0E00               	movlw	0
 15088  0026C8  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15089  0026CA  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15090  0026CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15091  0026D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15092  0026D4  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15093  0026D8  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15094  0026DC  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15095  0026E0  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15096                           
 15097                           ;inc\CANlib.h: 563: }
 15098  0026E4  D08D               	goto	i1l5616
 15099  0026E6                     i1l5590:
 15100                           
 15101                           ; BSR set to: 15
 15102                           ;inc\CANlib.h: 564: else
 15103                           ;inc\CANlib.h: 565: {
 15104                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 15105  0026E6  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 15106  0026EA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15107  0026EC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15108  0026EE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15109  0026F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15110  0026F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15111  0026F8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15112  0026FC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15113  002700  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15114  002704  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15115                           
 15116                           ; BSR set to: 15
 15117                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 15118  002708  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 15119  00270C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15120  00270E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15121  002710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15122  002712  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15123  002716  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15124  00271A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15125  00271E  6A03               	clrf	??_CANreceiveMessage,c
 15126  002720  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15127  002724  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15128  002728  5003               	movf	??_CANreceiveMessage,w,c
 15129  00272A  26DE               	addwf	postinc2,f,c
 15130  00272C  5004               	movf	??_CANreceiveMessage+1,w,c
 15131  00272E  22DE               	addwfc	postinc2,f,c
 15132  002730  5005               	movf	??_CANreceiveMessage+2,w,c
 15133  002732  22DE               	addwfc	postinc2,f,c
 15134  002734  5006               	movf	??_CANreceiveMessage+3,w,c
 15135  002736  22DE               	addwfc	postinc2,f,c
 15136                           
 15137                           ; BSR set to: 15
 15138                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 15139  002738  010F               	movlb	15	; () banked
 15140  00273A  A152               	btfss	82,0,b	;volatile
 15141  00273C  D00C               	goto	i1l5598
 15142                           
 15143                           ; BSR set to: 15
 15144                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 15145  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15146  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15147  002746  0E00               	movlw	0
 15148  002748  12DE               	iorwf	postinc2,f,c
 15149  00274A  0E00               	movlw	0
 15150  00274C  12DE               	iorwf	postinc2,f,c
 15151  00274E  0E01               	movlw	1
 15152  002750  12DE               	iorwf	postinc2,f,c
 15153  002752  0E00               	movlw	0
 15154  002754  12DE               	iorwf	postinc2,f,c
 15155  002756                     i1l5598:
 15156                           
 15157                           ; BSR set to: 15
 15158                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 15159  002756  010F               	movlb	15	; () banked
 15160  002758  A352               	btfss	82,1,b	;volatile
 15161  00275A  D00C               	goto	i1l5602
 15162                           
 15163                           ; BSR set to: 15
 15164                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 15165  00275C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15166  002760  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15167  002764  0E00               	movlw	0
 15168  002766  12DE               	iorwf	postinc2,f,c
 15169  002768  0E00               	movlw	0
 15170  00276A  12DE               	iorwf	postinc2,f,c
 15171  00276C  0E02               	movlw	2
 15172  00276E  12DE               	iorwf	postinc2,f,c
 15173  002770  0E00               	movlw	0
 15174  002772  12DE               	iorwf	postinc2,f,c
 15175  002774                     i1l5602:
 15176                           
 15177                           ; BSR set to: 15
 15178                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 15179  002774  010F               	movlb	15	; () banked
 15180  002776  AB52               	btfss	82,5,b	;volatile
 15181  002778  D00C               	goto	i1l5606
 15182                           
 15183                           ; BSR set to: 15
 15184                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 15185  00277A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15186  00277E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15187  002782  0E00               	movlw	0
 15188  002784  12DE               	iorwf	postinc2,f,c
 15189  002786  0E00               	movlw	0
 15190  002788  12DE               	iorwf	postinc2,f,c
 15191  00278A  0E04               	movlw	4
 15192  00278C  12DE               	iorwf	postinc2,f,c
 15193  00278E  0E00               	movlw	0
 15194  002790  12DE               	iorwf	postinc2,f,c
 15195  002792                     i1l5606:
 15196                           
 15197                           ; BSR set to: 15
 15198                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 15199  002792  010F               	movlb	15	; () banked
 15200  002794  AD52               	btfss	82,6,b	;volatile
 15201  002796  D00C               	goto	i1l5610
 15202                           
 15203                           ; BSR set to: 15
 15204                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 15205  002798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15206  00279C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15207  0027A0  0E00               	movlw	0
 15208  0027A2  12DE               	iorwf	postinc2,f,c
 15209  0027A4  0E00               	movlw	0
 15210  0027A6  12DE               	iorwf	postinc2,f,c
 15211  0027A8  0E08               	movlw	8
 15212  0027AA  12DE               	iorwf	postinc2,f,c
 15213  0027AC  0E00               	movlw	0
 15214  0027AE  12DE               	iorwf	postinc2,f,c
 15215  0027B0                     i1l5610:
 15216                           
 15217                           ; BSR set to: 15
 15218                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 15219  0027B0  010F               	movlb	15	; () banked
 15220  0027B2  AF52               	btfss	82,7,b	;volatile
 15221  0027B4  D00C               	goto	i1l5614
 15222                           
 15223                           ; BSR set to: 15
 15224                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 15225  0027B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15226  0027BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15227  0027BE  0E00               	movlw	0
 15228  0027C0  12DE               	iorwf	postinc2,f,c
 15229  0027C2  0E00               	movlw	0
 15230  0027C4  12DE               	iorwf	postinc2,f,c
 15231  0027C6  0E10               	movlw	16
 15232  0027C8  12DE               	iorwf	postinc2,f,c
 15233  0027CA  0E00               	movlw	0
 15234  0027CC  12DE               	iorwf	postinc2,f,c
 15235  0027CE                     i1l5614:
 15236                           
 15237                           ; BSR set to: 15
 15238                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15239  0027CE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15240  0027D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15241  0027D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15242  0027D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15243  0027D8  0E15               	movlw	21
 15244  0027DA                     i1u681_25:
 15245  0027DA  90D8               	bcf	status,0,c
 15246  0027DC  3603               	rlcf	??_CANreceiveMessage,f,c
 15247  0027DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15248  0027E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15249  0027E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15250  0027E4  2EE8               	decfsz	wreg,f,c
 15251  0027E6  D7F9               	goto	i1u681_25
 15252  0027E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15253  0027EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15254  0027F0  5003               	movf	??_CANreceiveMessage,w,c
 15255  0027F2  12DE               	iorwf	postinc2,f,c
 15256  0027F4  5004               	movf	??_CANreceiveMessage+1,w,c
 15257  0027F6  12DE               	iorwf	postinc2,f,c
 15258  0027F8  5005               	movf	??_CANreceiveMessage+2,w,c
 15259  0027FA  12DE               	iorwf	postinc2,f,c
 15260  0027FC  5006               	movf	??_CANreceiveMessage+3,w,c
 15261  0027FE  12DE               	iorwf	postinc2,f,c
 15262  002800                     i1l5616:
 15263                           
 15264                           ; BSR set to: 15
 15265                           ;inc\CANlib.h: 581: }
 15266                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 15267  002800  010F               	movlb	15	; () banked
 15268  002802  9F50               	bcf	80,7,b	;volatile
 15269                           
 15270                           ; BSR set to: 15
 15271                           ;inc\CANlib.h: 584: return (error);
 15272                           ;	Return value of _CANreceiveMessage is never used
 15273  002804  0012               	return	
 15274  002806                     i1l410:
 15275                           
 15276                           ; BSR set to: 15
 15277                           ;inc\CANlib.h: 585: }
 15278                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 15279  002806  AE60               	btfss	3936,7,c	;volatile
 15280  002808  0012               	return	
 15281                           
 15282                           ; BSR set to: 15
 15283                           ;inc\CANlib.h: 588: {
 15284                           ;inc\CANlib.h: 589: msg->identifier = 0;
 15285  00280A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15286  00280E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15287  002812  6ADE               	clrf	postinc2,c
 15288  002814  6ADE               	clrf	postinc2,c
 15289  002816  6ADE               	clrf	postinc2,c
 15290  002818  6ADD               	clrf	postdec2,c
 15291                           
 15292                           ; BSR set to: 15
 15293                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 15294  00281A  EE20 F004          	lfsr	2,4
 15295  00281E  5001               	movf	CANreceiveMessage@msg,w,c
 15296  002820  26D9               	addwf	fsr2l,f,c
 15297  002822  5002               	movf	CANreceiveMessage@msg+1,w,c
 15298  002824  22DA               	addwfc	fsr2h,f,c
 15299  002826  CF66 FFDF          	movff	3942,indf2	;volatile
 15300                           
 15301                           ; BSR set to: 15
 15302                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 15303  00282A  EE20 F005          	lfsr	2,5
 15304  00282E  5001               	movf	CANreceiveMessage@msg,w,c
 15305  002830  26D9               	addwf	fsr2l,f,c
 15306  002832  5002               	movf	CANreceiveMessage@msg+1,w,c
 15307  002834  22DA               	addwfc	fsr2h,f,c
 15308  002836  CF67 FFDF          	movff	3943,indf2	;volatile
 15309                           
 15310                           ; BSR set to: 15
 15311                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 15312  00283A  EE20 F006          	lfsr	2,6
 15313  00283E  5001               	movf	CANreceiveMessage@msg,w,c
 15314  002840  26D9               	addwf	fsr2l,f,c
 15315  002842  5002               	movf	CANreceiveMessage@msg+1,w,c
 15316  002844  22DA               	addwfc	fsr2h,f,c
 15317  002846  CF68 FFDF          	movff	3944,indf2	;volatile
 15318                           
 15319                           ; BSR set to: 15
 15320                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 15321  00284A  EE20 F007          	lfsr	2,7
 15322  00284E  5001               	movf	CANreceiveMessage@msg,w,c
 15323  002850  26D9               	addwf	fsr2l,f,c
 15324  002852  5002               	movf	CANreceiveMessage@msg+1,w,c
 15325  002854  22DA               	addwfc	fsr2h,f,c
 15326  002856  CF69 FFDF          	movff	3945,indf2	;volatile
 15327                           
 15328                           ; BSR set to: 15
 15329                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 15330  00285A  EE20 F008          	lfsr	2,8
 15331  00285E  5001               	movf	CANreceiveMessage@msg,w,c
 15332  002860  26D9               	addwf	fsr2l,f,c
 15333  002862  5002               	movf	CANreceiveMessage@msg+1,w,c
 15334  002864  22DA               	addwfc	fsr2h,f,c
 15335  002866  CF6A FFDF          	movff	3946,indf2	;volatile
 15336                           
 15337                           ; BSR set to: 15
 15338                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 15339  00286A  EE20 F009          	lfsr	2,9
 15340  00286E  5001               	movf	CANreceiveMessage@msg,w,c
 15341  002870  26D9               	addwf	fsr2l,f,c
 15342  002872  5002               	movf	CANreceiveMessage@msg+1,w,c
 15343  002874  22DA               	addwfc	fsr2h,f,c
 15344  002876  CF6B FFDF          	movff	3947,indf2	;volatile
 15345                           
 15346                           ; BSR set to: 15
 15347                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 15348  00287A  EE20 F00A          	lfsr	2,10
 15349  00287E  5001               	movf	CANreceiveMessage@msg,w,c
 15350  002880  26D9               	addwf	fsr2l,f,c
 15351  002882  5002               	movf	CANreceiveMessage@msg+1,w,c
 15352  002884  22DA               	addwfc	fsr2h,f,c
 15353  002886  CF6C FFDF          	movff	3948,indf2	;volatile
 15354                           
 15355                           ; BSR set to: 15
 15356                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 15357  00288A  EE20 F00B          	lfsr	2,11
 15358  00288E  5001               	movf	CANreceiveMessage@msg,w,c
 15359  002890  26D9               	addwf	fsr2l,f,c
 15360  002892  5002               	movf	CANreceiveMessage@msg+1,w,c
 15361  002894  22DA               	addwfc	fsr2h,f,c
 15362  002896  CF6D FFDF          	movff	3949,indf2	;volatile
 15363                           
 15364                           ; BSR set to: 15
 15365                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 15366  00289A  EE20 F00E          	lfsr	2,14
 15367  00289E  5001               	movf	CANreceiveMessage@msg,w,c
 15368  0028A0  26D9               	addwf	fsr2l,f,c
 15369  0028A2  5002               	movf	CANreceiveMessage@msg+1,w,c
 15370  0028A4  22DA               	addwfc	fsr2h,f,c
 15371  0028A6  AC65               	btfss	3941,6,c	;volatile
 15372  0028A8  D002               	goto	i1u683_20
 15373  0028AA  0E01               	movlw	1
 15374  0028AC  D001               	goto	i1u683_26
 15375  0028AE                     i1u683_20:
 15376  0028AE  0E00               	movlw	0
 15377  0028B0                     i1u683_26:
 15378  0028B0  6EDF               	movwf	indf2,c
 15379                           
 15380                           ; BSR set to: 15
 15381                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 15382  0028B2  EE20 F00D          	lfsr	2,13
 15383  0028B6  5001               	movf	CANreceiveMessage@msg,w,c
 15384  0028B8  26D9               	addwf	fsr2l,f,c
 15385  0028BA  5002               	movf	CANreceiveMessage@msg+1,w,c
 15386  0028BC  22DA               	addwfc	fsr2h,f,c
 15387  0028BE  5065               	movf	3941,w,c	;volatile
 15388  0028C0  0B0F               	andlw	15
 15389  0028C2  6EDF               	movwf	indf2,c
 15390                           
 15391                           ; BSR set to: 15
 15392                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 15393  0028C4  EE20 F00C          	lfsr	2,12
 15394  0028C8  5001               	movf	CANreceiveMessage@msg,w,c
 15395  0028CA  26D9               	addwf	fsr2l,f,c
 15396  0028CC  5002               	movf	CANreceiveMessage@msg+1,w,c
 15397  0028CE  22DA               	addwfc	fsr2h,f,c
 15398  0028D0  A662               	btfss	3938,3,c	;volatile
 15399  0028D2  D002               	goto	i1u684_20
 15400  0028D4  0E01               	movlw	1
 15401  0028D6  D001               	goto	i1u684_26
 15402  0028D8                     i1u684_20:
 15403  0028D8  0E00               	movlw	0
 15404  0028DA                     i1u684_26:
 15405  0028DA  6EDF               	movwf	indf2,c
 15406                           
 15407                           ; BSR set to: 15
 15408                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15409  0028DC  B662               	btfsc	3938,3,c	;volatile
 15410  0028DE  D043               	goto	i1l5652
 15411                           
 15412                           ; BSR set to: 15
 15413                           ;inc\CANlib.h: 606: {
 15414                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15415  0028E0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15416  0028E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15417  0028E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15418  0028E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15419  0028EA  0E03               	movlw	3
 15420  0028EC                     i1u686_25:
 15421  0028EC  90D8               	bcf	status,0,c
 15422  0028EE  3603               	rlcf	??_CANreceiveMessage,f,c
 15423  0028F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15424  0028F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15425  0028F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15426  0028F6  2EE8               	decfsz	wreg,f,c
 15427  0028F8  D7F9               	goto	i1u686_25
 15428  0028FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15429  0028FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15430  002902  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15431  002906  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15432  00290A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15433  00290E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15434                           
 15435                           ; BSR set to: 15
 15436                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15437  002912  3862               	swapf	3938,w,c	;volatile
 15438  002914  42E8               	rrncf	wreg,f,c
 15439  002916  0B07               	andlw	7
 15440  002918  0B07               	andlw	7
 15441  00291A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15442                           
 15443                           ; BSR set to: 15
 15444                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15445  00291C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15446  002920  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15447  002924  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15448  002928  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15449  00292C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15450  002930  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15451  002934  500C               	movf	CANreceiveMessage@tamp,w,c
 15452  002936  2403               	addwf	??_CANreceiveMessage,w,c
 15453  002938  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15454  00293A  0E00               	movlw	0
 15455  00293C  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15456  00293E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15457  002940  0E00               	movlw	0
 15458  002942  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15459  002944  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15460  002946  0E00               	movlw	0
 15461  002948  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15462  00294A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15463  00294C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15464  002950  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15465  002954  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15466  002958  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15467  00295C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15468  002960  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15469                           
 15470                           ;inc\CANlib.h: 610: }
 15471  002964  D088               	goto	i1l5678
 15472  002966                     i1l5652:
 15473                           
 15474                           ; BSR set to: 15
 15475                           ;inc\CANlib.h: 611: else
 15476                           ;inc\CANlib.h: 612: {
 15477                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15478  002966  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15479  00296A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15480  00296C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15481  00296E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15482  002970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15483  002974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15484  002978  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15485  00297C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15486  002980  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15487  002984  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15488                           
 15489                           ; BSR set to: 15
 15490                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15491  002988  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15492  00298C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15493  00298E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15494  002990  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15495  002992  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15496  002996  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15497  00299A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15498  00299E  6A03               	clrf	??_CANreceiveMessage,c
 15499  0029A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15500  0029A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15501  0029A8  5003               	movf	??_CANreceiveMessage,w,c
 15502  0029AA  26DE               	addwf	postinc2,f,c
 15503  0029AC  5004               	movf	??_CANreceiveMessage+1,w,c
 15504  0029AE  22DE               	addwfc	postinc2,f,c
 15505  0029B0  5005               	movf	??_CANreceiveMessage+2,w,c
 15506  0029B2  22DE               	addwfc	postinc2,f,c
 15507  0029B4  5006               	movf	??_CANreceiveMessage+3,w,c
 15508  0029B6  22DE               	addwfc	postinc2,f,c
 15509                           
 15510                           ; BSR set to: 15
 15511                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15512  0029B8  A062               	btfss	3938,0,c	;volatile
 15513  0029BA  D00C               	goto	i1l5660
 15514                           
 15515                           ; BSR set to: 15
 15516                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15517  0029BC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15518  0029C0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15519  0029C4  0E00               	movlw	0
 15520  0029C6  12DE               	iorwf	postinc2,f,c
 15521  0029C8  0E00               	movlw	0
 15522  0029CA  12DE               	iorwf	postinc2,f,c
 15523  0029CC  0E01               	movlw	1
 15524  0029CE  12DE               	iorwf	postinc2,f,c
 15525  0029D0  0E00               	movlw	0
 15526  0029D2  12DE               	iorwf	postinc2,f,c
 15527  0029D4                     i1l5660:
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15531  0029D4  A262               	btfss	3938,1,c	;volatile
 15532  0029D6  D00C               	goto	i1l5664
 15533                           
 15534                           ; BSR set to: 15
 15535                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15536  0029D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15537  0029DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15538  0029E0  0E00               	movlw	0
 15539  0029E2  12DE               	iorwf	postinc2,f,c
 15540  0029E4  0E00               	movlw	0
 15541  0029E6  12DE               	iorwf	postinc2,f,c
 15542  0029E8  0E02               	movlw	2
 15543  0029EA  12DE               	iorwf	postinc2,f,c
 15544  0029EC  0E00               	movlw	0
 15545  0029EE  12DE               	iorwf	postinc2,f,c
 15546  0029F0                     i1l5664:
 15547                           
 15548                           ; BSR set to: 15
 15549                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15550  0029F0  AA62               	btfss	3938,5,c	;volatile
 15551  0029F2  D00C               	goto	i1l5668
 15552                           
 15553                           ; BSR set to: 15
 15554                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15555  0029F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15556  0029F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15557  0029FC  0E00               	movlw	0
 15558  0029FE  12DE               	iorwf	postinc2,f,c
 15559  002A00  0E00               	movlw	0
 15560  002A02  12DE               	iorwf	postinc2,f,c
 15561  002A04  0E04               	movlw	4
 15562  002A06  12DE               	iorwf	postinc2,f,c
 15563  002A08  0E00               	movlw	0
 15564  002A0A  12DE               	iorwf	postinc2,f,c
 15565  002A0C                     i1l5668:
 15566                           
 15567                           ; BSR set to: 15
 15568                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15569  002A0C  AC62               	btfss	3938,6,c	;volatile
 15570  002A0E  D00C               	goto	i1l5672
 15571                           
 15572                           ; BSR set to: 15
 15573                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15574  002A10  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15575  002A14  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15576  002A18  0E00               	movlw	0
 15577  002A1A  12DE               	iorwf	postinc2,f,c
 15578  002A1C  0E00               	movlw	0
 15579  002A1E  12DE               	iorwf	postinc2,f,c
 15580  002A20  0E08               	movlw	8
 15581  002A22  12DE               	iorwf	postinc2,f,c
 15582  002A24  0E00               	movlw	0
 15583  002A26  12DE               	iorwf	postinc2,f,c
 15584  002A28                     i1l5672:
 15585                           
 15586                           ; BSR set to: 15
 15587                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15588  002A28  AE62               	btfss	3938,7,c	;volatile
 15589  002A2A  D00C               	goto	i1l5676
 15590                           
 15591                           ; BSR set to: 15
 15592                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15593  002A2C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15594  002A30  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15595  002A34  0E00               	movlw	0
 15596  002A36  12DE               	iorwf	postinc2,f,c
 15597  002A38  0E00               	movlw	0
 15598  002A3A  12DE               	iorwf	postinc2,f,c
 15599  002A3C  0E10               	movlw	16
 15600  002A3E  12DE               	iorwf	postinc2,f,c
 15601  002A40  0E00               	movlw	0
 15602  002A42  12DE               	iorwf	postinc2,f,c
 15603  002A44                     i1l5676:
 15604                           
 15605                           ; BSR set to: 15
 15606                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15607  002A44  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15608  002A48  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15609  002A4A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15610  002A4C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15611  002A4E  0E15               	movlw	21
 15612  002A50                     i1u692_25:
 15613  002A50  90D8               	bcf	status,0,c
 15614  002A52  3603               	rlcf	??_CANreceiveMessage,f,c
 15615  002A54  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15616  002A56  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15617  002A58  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15618  002A5A  2EE8               	decfsz	wreg,f,c
 15619  002A5C  D7F9               	goto	i1u692_25
 15620  002A5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15621  002A62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15622  002A66  5003               	movf	??_CANreceiveMessage,w,c
 15623  002A68  12DE               	iorwf	postinc2,f,c
 15624  002A6A  5004               	movf	??_CANreceiveMessage+1,w,c
 15625  002A6C  12DE               	iorwf	postinc2,f,c
 15626  002A6E  5005               	movf	??_CANreceiveMessage+2,w,c
 15627  002A70  12DE               	iorwf	postinc2,f,c
 15628  002A72  5006               	movf	??_CANreceiveMessage+3,w,c
 15629  002A74  12DE               	iorwf	postinc2,f,c
 15630  002A76                     i1l5678:
 15631                           
 15632                           ; BSR set to: 15
 15633                           ;inc\CANlib.h: 629: }
 15634                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15635  002A76  9E60               	bcf	3936,7,c	;volatile
 15636                           
 15637                           ; BSR set to: 15
 15638                           ;inc\CANlib.h: 632: return (error);
 15639                           ;	Return value of _CANreceiveMessage is never used
 15640  002A78  0012               	return	
 15641  002A7A                     __end_of_CANreceiveMessage:
 15642                           	opt stack 0
 15643                           pclatu	equ	0xFFB
 15644                           pclath	equ	0xFFA
 15645                           tblptru	equ	0xFF8
 15646                           tblptrh	equ	0xFF7
 15647                           tblptrl	equ	0xFF6
 15648                           tablat	equ	0xFF5
 15649                           prodh	equ	0xFF4
 15650                           prodl	equ	0xFF3
 15651                           intcon	equ	0xFF2
 15652                           intcon2	equ	0xFF1
 15653                           postinc0	equ	0xFEE
 15654                           fsr0h	equ	0xFEA
 15655                           fsr0l	equ	0xFE9
 15656                           wreg	equ	0xFE8
 15657                           indf1	equ	0xFE7
 15658                           postdec1	equ	0xFE5
 15659                           fsr1h	equ	0xFE2
 15660                           fsr1l	equ	0xFE1
 15661                           bsr	equ	0xFE0
 15662                           indf2	equ	0xFDF
 15663                           postinc2	equ	0xFDE
 15664                           postdec2	equ	0xFDD
 15665                           fsr2h	equ	0xFDA
 15666                           fsr2l	equ	0xFD9
 15667                           status	equ	0xFD8
 15668                           
 15669 ;; *************** function _ISR_Alta *****************
 15670 ;; Defined at:
 15671 ;;		line 92 in file "parcheggio.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;		None
 15676 ;; Return value:  Size  Location     Type
 15677 ;;		None               void
 15678 ;; Registers used:
 15679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15687 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15688 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15689 ;;Total ram usage:       16 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:    1
 15692 ;; This function calls:
 15693 ;;		___lwdiv
 15694 ;; This function is called by:
 15695 ;;		Interrupt level 2
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	intcode
 15700  000008                     __pintcode:
 15701                           	opt stack 0
 15702  000008                     _ISR_Alta:
 15703                           	opt stack 21
 15704                           
 15705                           ; BSR set to: 15
 15706                           ;incstack = 0
 15707  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15708  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15709  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15710  000012  EFFE  F02C         	goto	int_func
 15711                           pclatu	equ	0xFFB
 15712                           pclath	equ	0xFFA
 15713                           tblptru	equ	0xFF8
 15714                           tblptrh	equ	0xFF7
 15715                           tblptrl	equ	0xFF6
 15716                           tablat	equ	0xFF5
 15717                           prodh	equ	0xFF4
 15718                           prodl	equ	0xFF3
 15719                           intcon	equ	0xFF2
 15720                           intcon2	equ	0xFF1
 15721                           postinc0	equ	0xFEE
 15722                           fsr0h	equ	0xFEA
 15723                           fsr0l	equ	0xFE9
 15724                           wreg	equ	0xFE8
 15725                           indf1	equ	0xFE7
 15726                           postdec1	equ	0xFE5
 15727                           fsr1h	equ	0xFE2
 15728                           fsr1l	equ	0xFE1
 15729                           bsr	equ	0xFE0
 15730                           indf2	equ	0xFDF
 15731                           postinc2	equ	0xFDE
 15732                           postdec2	equ	0xFDD
 15733                           fsr2h	equ	0xFDA
 15734                           fsr2l	equ	0xFD9
 15735                           status	equ	0xFD8
 15736                           
 15737                           	psect	intcode_body
 15738  0059FC                     __pintcode_body:
 15739                           	opt stack 21
 15740  0059FC                     int_func:
 15741                           	opt stack 21
 15742  0059FC  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15743  005A00  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15744  005A04  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15745  005A08  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15746  005A0C  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15747  005A10  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15748  005A14  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15749  005A18  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15750  005A1C  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15751  005A20  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15752  005A24  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15753  005A28  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15754                           
 15755                           ;parcheggio.c: 93: if (INTCON2bits.INTEDG0 == 1) {
 15756  005A2C  ACF1               	btfss	intcon2,6,c	;volatile
 15757  005A2E  D007               	goto	i2l688
 15758                           
 15759                           ;parcheggio.c: 94: INTCON2bits.INTEDG0 = 0;
 15760  005A30  9CF1               	bcf	intcon2,6,c	;volatile
 15761                           
 15762                           ;parcheggio.c: 95: TMR3H = 0;
 15763  005A32  0E00               	movlw	0
 15764  005A34  6EB3               	movwf	4019,c	;volatile
 15765                           
 15766                           ;parcheggio.c: 96: TMR3L = 0;
 15767  005A36  0E00               	movlw	0
 15768  005A38  6EB2               	movwf	4018,c	;volatile
 15769                           
 15770                           ;parcheggio.c: 97: distance_error = 0;
 15771  005A3A  9646               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15772                           
 15773                           ;parcheggio.c: 98: } else {
 15774  005A3C  D030               	goto	i2l7578
 15775  005A3E                     i2l688:
 15776                           
 15777                           ;parcheggio.c: 99: gianni = TMR3H;
 15778  005A3E  CFB3 F044          	movff	4019,_gianni	;volatile
 15779                           
 15780                           ;parcheggio.c: 100: asus = TMR3L;
 15781  005A42  CFB2 F043          	movff	4018,_asus	;volatile
 15782                           
 15783                           ;parcheggio.c: 101: timerValue2 = gianni;
 15784  005A46  C044  F040         	movff	_gianni,_timerValue2	;volatile
 15785  005A4A  6A41               	clrf	_timerValue2+1,c	;volatile
 15786                           
 15787                           ;parcheggio.c: 102: timerValue2 = ((timerValue2 << 8) | (asus));
 15788  005A4C  5040               	movf	_timerValue2,w,c	;volatile
 15789  005A4E  0100               	movlb	0	; () banked
 15790  005A50  6F67               	movwf	??_ISR_Alta& (0+255),b
 15791  005A52  5043               	movf	_asus,w,c	;volatile
 15792  005A54  6E40               	movwf	_timerValue2,c	;volatile
 15793  005A56  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;parcheggio.c: 103: pulse_time = timerValue2 / 2;
 15797  005A5A  90D8               	bcf	status,0,c
 15798  005A5C  3041               	rrcf	_timerValue2+1,w,c	;volatile
 15799  005A5E  0100               	movlb	0	; () banked
 15800  005A60  6F67               	movwf	??_ISR_Alta& (0+255),b
 15801  005A62  3040               	rrcf	_timerValue2,w,c	;volatile
 15802  005A64  6E3C               	movwf	_pulse_time,c	;volatile
 15803  005A66  C067  F03D         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;parcheggio.c: 104: sensor_distance[MUX_index] = pulse_time / 58;
 15807  005A6A  C03C  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15808  005A6E  C03D  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15809  005A72  0E00               	movlw	0
 15810  005A74  0100               	movlb	0	; () banked
 15811  005A76  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15812  005A78  0E3A               	movlw	58
 15813  005A7A  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15814  005A7C  ECB8  F02D         	call	___lwdiv	;wreg free
 15815  005A80  5042               	movf	_MUX_index,w,c	;volatile
 15816  005A82  0D02               	mullw	2
 15817  005A84  0E24               	movlw	low _sensor_distance
 15818  005A86  24F3               	addwf	prodl,w,c
 15819  005A88  6ED9               	movwf	fsr2l,c
 15820  005A8A  0E00               	movlw	high _sensor_distance
 15821  005A8C  20F4               	addwfc	prodh,w,c
 15822  005A8E  6EDA               	movwf	fsr2h,c
 15823  005A90  0100               	movlb	0	; () banked
 15824  005A92  C060  FFDE         	movff	?___lwdiv,postinc2
 15825  005A96  0100               	movlb	0	; () banked
 15826  005A98  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15827                           
 15828                           ; BSR set to: 0
 15829                           ;parcheggio.c: 105: INTCON2bits.INTEDG0 = 1;
 15830  005A9C  8CF1               	bsf	intcon2,6,c	;volatile
 15831  005A9E                     i2l7578:
 15832                           
 15833                           ;parcheggio.c: 106: }
 15834                           ;parcheggio.c: 107: INTCONbits.INT0IF = 0;
 15835  005A9E  92F2               	bcf	intcon,1,c	;volatile
 15836  005AA0  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15837  005AA4  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15838  005AA8  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15839  005AAC  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15840  005AB0  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15841  005AB4  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15842  005AB8  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15843  005ABC  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15844  005AC0  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15845  005AC4  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15846  005AC8  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15847  005ACC  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15848  005AD0  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15849  005AD4  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15850  005AD8  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15851  005ADA  0011               	retfie		f
 15852  005ADC                     __end_of_ISR_Alta:
 15853                           	opt stack 0
 15854                           pclatu	equ	0xFFB
 15855                           pclath	equ	0xFFA
 15856                           tblptru	equ	0xFF8
 15857                           tblptrh	equ	0xFF7
 15858                           tblptrl	equ	0xFF6
 15859                           tablat	equ	0xFF5
 15860                           prodh	equ	0xFF4
 15861                           prodl	equ	0xFF3
 15862                           intcon	equ	0xFF2
 15863                           intcon2	equ	0xFF1
 15864                           postinc0	equ	0xFEE
 15865                           fsr0h	equ	0xFEA
 15866                           fsr0l	equ	0xFE9
 15867                           wreg	equ	0xFE8
 15868                           indf1	equ	0xFE7
 15869                           postdec1	equ	0xFE5
 15870                           fsr1h	equ	0xFE2
 15871                           fsr1l	equ	0xFE1
 15872                           bsr	equ	0xFE0
 15873                           indf2	equ	0xFDF
 15874                           postinc2	equ	0xFDE
 15875                           postdec2	equ	0xFDD
 15876                           fsr2h	equ	0xFDA
 15877                           fsr2l	equ	0xFD9
 15878                           status	equ	0xFD8
 15879                           
 15880 ;; *************** function ___lwdiv *****************
 15881 ;; Defined at:
 15882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15883 ;; Parameters:    Size  Location     Type
 15884 ;;  dividend        2    0[BANK0 ] unsigned int 
 15885 ;;  divisor         2    2[BANK0 ] unsigned int 
 15886 ;; Auto vars:     Size  Location     Type
 15887 ;;  quotient        2    5[BANK0 ] unsigned int 
 15888 ;;  counter         1    4[BANK0 ] unsigned char 
 15889 ;; Return value:  Size  Location     Type
 15890 ;;                  2    0[BANK0 ] unsigned int 
 15891 ;; Registers used:
 15892 ;;		wreg, status,2, status,0
 15893 ;; Tracked objects:
 15894 ;;		On entry : 0/0
 15895 ;;		On exit  : 0/0
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15898 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;Total ram usage:        7 bytes
 15903 ;; Hardware stack levels used:    1
 15904 ;; This function calls:
 15905 ;;		Nothing
 15906 ;; This function is called by:
 15907 ;;		_ISR_Alta
 15908 ;; This function uses a non-reentrant model
 15909 ;;
 15910                           
 15911                           	psect	text38
 15912  005B70                     __ptext38:
 15913                           	opt stack 0
 15914  005B70                     ___lwdiv:
 15915                           	opt stack 21
 15916                           
 15917                           ;incstack = 0
 15918  005B70  0E00               	movlw	0
 15919  005B72  0100               	movlb	0	; () banked
 15920  005B74  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15921  005B76  0E00               	movlw	0
 15922  005B78  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15923                           
 15924                           ; BSR set to: 0
 15925  005B7A  0100               	movlb	0	; () banked
 15926  005B7C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15927  005B7E  0100               	movlb	0	; () banked
 15928  005B80  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15929  005B82  B4D8               	btfsc	status,2,c
 15930  005B84  D02C               	goto	i2l1259
 15931                           
 15932                           ; BSR set to: 0
 15933  005B86  0E01               	movlw	1
 15934  005B88  0100               	movlb	0	; () banked
 15935  005B8A  6F64               	movwf	___lwdiv@counter& (0+255),b
 15936  005B8C  D006               	goto	i2l7548
 15937  005B8E                     i2l7546:
 15938                           
 15939                           ; BSR set to: 0
 15940  005B8E  0100               	movlb	0	; () banked
 15941  005B90  90D8               	bcf	status,0,c
 15942  005B92  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15943  005B94  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15944  005B96  0100               	movlb	0	; () banked
 15945  005B98  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15946  005B9A                     i2l7548:
 15947                           
 15948                           ; BSR set to: 0
 15949  005B9A  0100               	movlb	0	; () banked
 15950  005B9C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15951  005B9E  D7F7               	goto	i2l7546
 15952  005BA0                     i2l7550:
 15953                           
 15954                           ; BSR set to: 0
 15955  005BA0  0100               	movlb	0	; () banked
 15956  005BA2  90D8               	bcf	status,0,c
 15957  005BA4  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15958  005BA6  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15959                           
 15960                           ; BSR set to: 0
 15961  005BA8  0100               	movlb	0	; () banked
 15962  005BAA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15963  005BAC  0100               	movlb	0	; () banked
 15964  005BAE  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15965  005BB0  0100               	movlb	0	; () banked
 15966  005BB2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15967  005BB4  0100               	movlb	0	; () banked
 15968  005BB6  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15969  005BB8  A0D8               	btfss	status,0,c
 15970  005BBA  D00A               	goto	i2l7558
 15971                           
 15972                           ; BSR set to: 0
 15973  005BBC  0100               	movlb	0	; () banked
 15974  005BBE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15975  005BC0  0100               	movlb	0	; () banked
 15976  005BC2  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15977  005BC4  0100               	movlb	0	; () banked
 15978  005BC6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15979  005BC8  0100               	movlb	0	; () banked
 15980  005BCA  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15981                           
 15982                           ; BSR set to: 0
 15983  005BCC  0100               	movlb	0	; () banked
 15984  005BCE  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15985  005BD0                     i2l7558:
 15986                           
 15987                           ; BSR set to: 0
 15988  005BD0  0100               	movlb	0	; () banked
 15989  005BD2  90D8               	bcf	status,0,c
 15990  005BD4  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15991  005BD6  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15992                           
 15993                           ; BSR set to: 0
 15994  005BD8  0100               	movlb	0	; () banked
 15995  005BDA  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15996  005BDC  D7E1               	goto	i2l7550
 15997  005BDE                     i2l1259:
 15998                           
 15999                           ; BSR set to: 0
 16000  005BDE  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 16001  005BE2  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16002                           
 16003                           ; BSR set to: 0
 16004  005BE6  0012               	return		;funcret
 16005  005BE8                     __end_of___lwdiv:
 16006                           	opt stack 0
 16007                           pclatu	equ	0xFFB
 16008                           pclath	equ	0xFFA
 16009                           tblptru	equ	0xFF8
 16010                           tblptrh	equ	0xFF7
 16011                           tblptrl	equ	0xFF6
 16012                           tablat	equ	0xFF5
 16013                           prodh	equ	0xFF4
 16014                           prodl	equ	0xFF3
 16015                           intcon	equ	0xFF2
 16016                           intcon2	equ	0xFF1
 16017                           postinc0	equ	0xFEE
 16018                           fsr0h	equ	0xFEA
 16019                           fsr0l	equ	0xFE9
 16020                           wreg	equ	0xFE8
 16021                           indf1	equ	0xFE7
 16022                           postdec1	equ	0xFE5
 16023                           fsr1h	equ	0xFE2
 16024                           fsr1l	equ	0xFE1
 16025                           bsr	equ	0xFE0
 16026                           indf2	equ	0xFDF
 16027                           postinc2	equ	0xFDE
 16028                           postdec2	equ	0xFDD
 16029                           fsr2h	equ	0xFDA
 16030                           fsr2l	equ	0xFD9
 16031                           status	equ	0xFD8
 16032                           pclatu	equ	0xFFB
 16033                           pclath	equ	0xFFA
 16034                           tblptru	equ	0xFF8
 16035                           tblptrh	equ	0xFF7
 16036                           tblptrl	equ	0xFF6
 16037                           tablat	equ	0xFF5
 16038                           prodh	equ	0xFF4
 16039                           prodl	equ	0xFF3
 16040                           intcon	equ	0xFF2
 16041                           intcon2	equ	0xFF1
 16042                           postinc0	equ	0xFEE
 16043                           fsr0h	equ	0xFEA
 16044                           fsr0l	equ	0xFE9
 16045                           wreg	equ	0xFE8
 16046                           indf1	equ	0xFE7
 16047                           postdec1	equ	0xFE5
 16048                           fsr1h	equ	0xFE2
 16049                           fsr1l	equ	0xFE1
 16050                           bsr	equ	0xFE0
 16051                           indf2	equ	0xFDF
 16052                           postinc2	equ	0xFDE
 16053                           postdec2	equ	0xFDD
 16054                           fsr2h	equ	0xFDA
 16055                           fsr2l	equ	0xFD9
 16056                           status	equ	0xFD8
 16057                           
 16058                           	psect	param0
 16059  0000                     pclatu	equ	0xFFB
 16060                           pclath	equ	0xFFA
 16061                           tblptru	equ	0xFF8
 16062                           tblptrh	equ	0xFF7
 16063                           tblptrl	equ	0xFF6
 16064                           tablat	equ	0xFF5
 16065                           prodh	equ	0xFF4
 16066                           prodl	equ	0xFF3
 16067                           intcon	equ	0xFF2
 16068                           intcon2	equ	0xFF1
 16069                           postinc0	equ	0xFEE
 16070                           fsr0h	equ	0xFEA
 16071                           fsr0l	equ	0xFE9
 16072                           wreg	equ	0xFE8
 16073                           indf1	equ	0xFE7
 16074                           postdec1	equ	0xFE5
 16075                           fsr1h	equ	0xFE2
 16076                           fsr1l	equ	0xFE1
 16077                           bsr	equ	0xFE0
 16078                           indf2	equ	0xFDF
 16079                           postinc2	equ	0xFDE
 16080                           postdec2	equ	0xFDD
 16081                           fsr2h	equ	0xFDA
 16082                           fsr2l	equ	0xFD9
 16083                           status	equ	0xFD8
 16084                           
 16085                           	psect	temp
 16086  000048                     btemp:
 16087                           	opt stack 0
 16088  000048                     	ds	1
 16089  0000                     int$flags	set	btemp
 16090                           pclatu	equ	0xFFB
 16091                           pclath	equ	0xFFA
 16092                           tblptru	equ	0xFF8
 16093                           tblptrh	equ	0xFF7
 16094                           tblptrl	equ	0xFF6
 16095                           tablat	equ	0xFF5
 16096                           prodh	equ	0xFF4
 16097                           prodl	equ	0xFF3
 16098                           intcon	equ	0xFF2
 16099                           intcon2	equ	0xFF1
 16100                           postinc0	equ	0xFEE
 16101                           fsr0h	equ	0xFEA
 16102                           fsr0l	equ	0xFE9
 16103                           wreg	equ	0xFE8
 16104                           indf1	equ	0xFE7
 16105                           postdec1	equ	0xFE5
 16106                           fsr1h	equ	0xFE2
 16107                           fsr1l	equ	0xFE1
 16108                           bsr	equ	0xFE0
 16109                           indf2	equ	0xFDF
 16110                           postinc2	equ	0xFDE
 16111                           postdec2	equ	0xFDD
 16112                           fsr2h	equ	0xFDA
 16113                           fsr2l	equ	0xFD9
 16114                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    128     137
    BANK1           256     85     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_brake(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_sqrt
    _can_send->_CANsendMessage
    _abs->___fltol
    _sin->___flsub
    _floor->___fladd
    ___xxtofl->_abs
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _asin->_atan

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  341546
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   93473
                                             41 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         8     8      0  242139
                                             77 BANK1      8     8      0
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _abs
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   85190
                                            126 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7241
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7061
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     324
                                             33 BANK0      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  131986
                                             49 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57349
                                             41 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49332
                                            115 BANK0      4     0      4
                                              0 BANK1     13    13      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                             97 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     861
                                             37 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     799
                                             23 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6623
                                            107 BANK0      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   56976
                                             17 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34015
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12855
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6136
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     639
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     571
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     ___flneg
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     _abs
       ___fltol (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                     ___fltol (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
               ___fltol
               ___xxtofl
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
             ___fltol
             ___xxtofl
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs
         ___fltol (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     _abs
       ___fltol (ARG)
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs
         ___fltol (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      E8       7       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8      20        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu May 05 15:15:38 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 0140          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 415E  
                         l432 411E                           l521 17E0                           l513 16E0  
                         l433 4122                           l522 17EC                           l514 16E4  
                         l450 426A                           l434 412E                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 4276                           l443 4236                           l435 4132  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 423A                           l436 413E                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 4246                           l437 4142                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 424A  
                         l438 414E                           l358 5054                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 4256                           l439 4152                           l359 505E  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 425A  
                         l384 1B92                           l368 1904                           l720 51C4  
                         l481 1390                           l465 1252                           l449 4266  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 52FC  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5EFC                           l396 1E02                           l388 1CAC  
                         l493 14B8                           l485 1478                           l477 1370  
                         l469 1272                           l397 1E0C                           l389 1CB0  
                         l486 147C                           l478 137C                           l398 1E16  
                         l718 5300                           l487 1488                           l479 1380  
                         l399 1E20                           l496 1594                           l488 148C  
                         l752 3642                           l497 1598                           l489 1498  
                         l569 5E0A                           l498 15A4                           l499 15A8  
                         l755 36CC                           l852 5EA8                           l749 35AA  
                         l782 4B66                           l788 4B28                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 5E86                           _asd 0231  
                         _dir 0232                           _cos 5918                           _jjj 0128  
                         _kkk 012C                           _msg 014A                           _sin 42C2  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 0001                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 0080                  __CFG_WDT$OFF 000000                          ?_abs 0081  
                        l1052 5DCC                          l1311 2C5A                          l1312 2C4E  
                        l1313 2C1A                          l1059 544A                          l1404 3272  
                        l1414 3384                          l1406 32E0                          l1328 2DCE  
                        l1337 2E62                          l1370 3D3A                          l1453 4F1C  
                        l1454 4F34                          l1446 4EC0                          l1367 3D92  
                        l1439 4E14                          l1295 45C8                          l1376 3DCA  
                        l1464 56E2                          l1378 3E38                          l1397 2FD6  
                        l5210 1502                          l5018 0E10                          l5204 14BC  
                        l5108 11B0                          l5036 0EC8                          ?_cos 01B2  
                        l5142 12CC                          l5054 0F82                          l5136 1286  
                        l5072 103C                          l6200 2C2E                          l7000 37B8  
                        l5306 1810                          l5170 13A0                          l5090 10F6  
                        l6202 2C34                          l6122 2ABC                          l5244 161E  
                        l6300 2EF8                          l6140 2B06                          l6116 2A98  
                        l7020 3836                          l7012 3804                          l5238 15D8  
                        l6302 2EFC                          l6230 2CCC                          l6206 2C3E  
                        l6150 2B34                          l6134 2AF2                          l6126 2AC6  
                        l7014 3816                          l5272 16F4                          l5176 13E6  
                        l6224 2CBC                          l6216 2C7E                          l6400 3286  
                        l7120 4D8C                          l7104 4BC4                          l7040 38A8  
                        l7032 3878                          l7200 5564                          l5450 506A  
                        l6226 2CC2                          l6234 2CDE                          l6146 2B2A  
                        l6410 32DA                          l7050 392A                          l5452 50AE  
                        l5444 504C                          l6308 2F10                          l6252 2E00  
                        l6244 2DAE                          l6420 3330                          l6324 2F64  
                        l7124 4DA4                          l7108 4C38                          l7052 3932  
                        l7300 4B4A                          l4902 5F0A                          l5278 173A  
                        l5446 5062                          l6262 2E22                          l6270 2E3C  
                        l6158 2B5E                          l6342 2FBE                          l6326 2F6A  
                        l6318 2F40                          l7214 4638                          l4920 3FDC  
                        l6600 3BE0                          l6424 3356                          l6352 2FFE  
                        l6344 2FC4                          l6336 2F9A                          l6328 2F7C  
                        l7056 39B8                          l7064 3A2E                          l6512 5906  
                        l6504 58D0                          l7152 4498                          l7136 42F8  
                        l6610 3C0E                          l6450 53A6                          l6258 2E16  
                        l6434 33A4                          l6426 336A                          l7058 39F2  
                        l7226 4766                          l6506 58E0                          l6530 4E54  
                        l6522 4E24                          l6700 3EFC                          l6460 5496  
                        l6292 2ECA                          l6268 2E36                          l6188 2B9A  
                        l6436 33AE                          l6348 2FEA                          l7084 3B44  
                        l7076 3B0E                          l6508 58EA                          l6540 4EFE  
                        l6532 4E64                          l7148 4422                          l7180 549E  
                        l7262 5EBE                          l6702 3F00                          l6630 3C90  
                        l6622 3C62                          l6606 3C04                          l6454 53F8  
                        l6446 5358                          l6278 2E5C                          l7238 4848  
                        l6542 4F0E                          l6534 4EA2                          l7254 59A0  
                        l7190 54EC                          l7350 5160                          l4936 4092  
                        l7168 5DFC                          l6640 3D0E                          l6296 2EEC  
                        l6288 2EB8                          l6528 4E4C                          l7520 3730  
                        l7408 33CA                          l4962 4162                          l7266 5ED0  
                        l6394 325C                          l6554 4F86                          l6810 1A3C  
                        l7194 5524                          l7434 3414                          l7426 3406  
                        l7370 5222                          l6660 3DB4                          l6580 3B82  
                        l6724 574A                          l6468 5E3E                          l6564 5B02  
                        l6804 1A1C                          l7292 4AEA                          l7380 526A  
                        l6654 3D8E                          l6590 3BB0                          l6726 57EE  
                        l6494 58A0                          l6478 5832                          l6742 5624  
                        l7518 3724                          l7534 378C                          l7358 5174  
                        l4968 41A8                          l6648 3D46                          l7376 5232  
                        l4994 427A                          l6690 3EB6                          l6666 3DDE  
                        l6586 3BA6                          l6498 58B4                          l6746 5646  
                        l6738 5610                          l7298 4B44                          l6692 3ECA  
                        l6676 3E32                          l6860 1BA6                          l6694 3EEC  
                        l6686 3E88                          l6936 1E2A                          l6880 1CA0  
                        l6784 1922                          l6962 1F44                          l7594 5D4A  
                        l6956 1F24                          ?_sin 00D3                          l6886 1CC0  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6110 13C0                          u6030 12A6                          u6115 13B4  
                        u6035 129A                          u5500 3F58                          u5505 3F4C  
                        u5515 3FB8                          u5540 400E                          u8020 5852  
                        u6430 1830                          u6350 1714                          u6270 15F8  
                        u6190 14DC                          u5710 429A                          u5630 4182  
                        u5545 4002                          u8025 5846                          u6435 1824  
                        u6355 1708                          u6275 15EC                          u6195 14D0  
                        u5715 428E                          u5635 4176                          u5555 406E  
                        u5900 1072                          u5820 0EFE                          u5740 0D8C  
                        u9100 441C                          u9030 4BF4                          u9110 441E  
                        u8400 3E9C                          u9040 4BF6                          u5905 1066  
                        u5825 0EF2                          u5745 0D80                          u5915 10D2  
                        u5835 0F5E                          u5755 0DEC                          u5940 112C  
                        u5860 0FB8                          u5780 0E44                          u7460 2BE4  
                        u7470 2BFC                          u8190 5B34                          u9310 4B42  
                        u7480 2BFE                          u5945 1120                          u5865 0FAC  
                        u5785 0E38                          u5955 118C                          u5875 1018  
                        u5795 0EA4                          u8700 1BC6                          u9420 527A  
                        u9261 497E                          u8198 5B38                          u8470 5634  
                        u8710 1C12                          u9350 5170                          u9271 498A  
                        u7920 3344                          u7840 31FE                          u8705 1BBA  
                        u8570 1942                          u8715 1C06                          u8580 198E  
                        u7845 31F2                          u8725 1C72                          u8830 1E4A  
                        u9550 3702                          u8575 1936                          u8840 1E96  
                        u8585 1982                          u8835 1E3E                          u8595 19EE  
                        u8845 1E8A                          u9647 5DFE                          u8855 1EF6  
         __size_of_CANSetMask 039E                          abs@a 0081                          _alfa 011C  
                        _fabs 5DA0                          _data 0159                          _beta 0120  
                        _atan 4B78                          _asin 45DA                          _main 5D0C  
                        _asus 0043                          cos@f 01B2                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0048                          _sqrt 379A  
                        pclat 000FFA                          sin@f 00D3                          sin@y 0189  
                        prodh 000FF4                          prodl 000FF3                          start 0254  
               __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088                delay_s@value_s 007F  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _CANOperationMode 5F02  
                       ??_abs 0083                         ??_cos 00DE                         ??_sin 00D7  
  __size_of_CANreceiveMessage 050C                         ?_fabs 00AD                 ___fltol@sign1 007F  
                       ?_atan 00D1                         ?_asin 019A               __end_of___fladd 2F22  
                       ?_main 0001               __end_of___fldiv 3F24               __end_of___flneg 5E50  
             __end_of___flmul 33C8               __end_of___flsub 5DA0               __end_of___fltol 5918  
                       ?_sqrt 00C1                         _T0CON 000FD5                         _T3CON 000FB1  
          __size_of_ISR_Bassa 023C               __end_of___lwdiv 5BE8                         i1l410 2806  
                       i1l702 0188                         i1l705 0208                         i1l709 020C  
                       i1l695 009A                         i2l688 5A3E                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94            __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 5ADC               __end_of_delay_s 5EDE  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _bordo 0124  
                       fabs@d 00AD                         _floor 55D0                         _frexp 5ADC  
                       _errno 0148                         atan@f 00D1                         atan@x 018D  
                       atan@y 0189                         asin@x 019A                         asin@y 01AA  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0230                         sin@x2 0191  
                       tablat 000FF5          __end_of_CANisTxReady 5F02                         sqrt@a 00C1  
                       sqrt@i 00CA                         sqrt@p 00CF                         status 000FD8  
                ?_park_search 0001               __initialization 5C54                  __end_of_fabs 5DDE  
                __end_of_atan 4DCA                  __end_of_asin 48EC                  __end_of_main 5D58  
                __end_of_sqrt 3B64                        ??_fabs 00B1                        ??_atan 00D5  
                      ??_asin 00DE                        ??_main 00E0             _park_routine$3738 01DA  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 00C1                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 0235               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 01E2                        i1l6012 00CE                        i1l6016 00D6  
                      i1l6052 01C2                        i1l6044 0192                        i1l6062 01F2  
                      i1l6038 0164                        i1l6056 01CA                        i1l5610 27B0  
                      i1l5602 2774                        i2l1259 5BDE                        i1l5614 27CE  
                      i1l5606 2792                        i1l5616 2800                        i1l5660 29D4  
                      i1l5652 2966                        i1l5590 26E6                        i1l5672 2A28  
                      i1l5664 29F0                        i1l5676 2A44                        i1l5668 2A0C  
                      i1l5678 2A76                        i1l5598 2756                        i1l5982 008C  
                      i2l7550 5BA0                        i2l7546 5B8E                        i2l7548 5B9A  
                      i2l7558 5BD0                        i2l7578 5A9E                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 55D0            CANsendMessage@tamp 0083  
            __end_of___xxtofl 4F98             __end_of_ISR_Bassa 0254              __end_of_delay_ms 5E18  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 530A  
             _data_correction 0169                     ??___fladd 00B5                        ___wmul 5E50  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D3                     ??___fltol 007B  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0044  
                      _raggio 01E4                        clear_0 5C5A                        clear_1 5C66  
                      clear_2 5C76                     ??_delay_s 007F                        floor@i 00C5  
                      floor@x 00C1               __CFG_BOREN$BOHW 000000                        sin@sgn 0195  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00B1  
                  ___flge@ff2 00B5                  ___xxtofl@arg 008F                  ___xxtofl@exp 008E  
                ___xxtofl@val 0085                    __accesstop 0060       __end_of__initialization 5CAE  
          __end_of_CANSetMask 42C2               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9  
               ?_park_routine 0001                  eval_poly@res 00CD                 ___rparam_used 000000  
                  ___fltol@f1 0077                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 5F22                  __pidataBANK1 5F18                 __end_of_floor 56F4  
               __end_of_frexp 5B70              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 0144         __size_of_CANisTxReady 0024                       ??_floor 00C5  
                     ??_frexp 007D      __end_of_CANOperationMode 5F18                    __pbssBANK0 00E0  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0161                ??_park_routine 01D6                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0171                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 028C          __size_of_park_search 01AC  
           _old_alignment_gap 0134                    ??_ISR_Alta 0067                       ?___flge 00B1  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 5EDE  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 0085        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003A                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0118               __size_of___flge 0190  
                  _matematica 1FE4                       ___fladd 2A7A                       ___fldiv 3B64  
                     ___flneg 5E18                       ___flmul 2F22                       ___flsub 5D58  
                     ___fltol 580C               __size_of___wmul 0036                       ___lwdiv 5B70  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 5C54  
           __end_of_eval_poly 580C                       _delay_s 5EB2                       __ramtop 0D00  
                     __ptext0 5D0C                       __ptext1 515E                       __ptext2 33C8  
                     __ptext3 48EC                       __ptext4 549A                       __ptext5 1858  
                     __ptext6 5EDE                       __ptext7 5E86                       __ptext8 1FE4  
                     __ptext9 5918                     _T0CONbits 000FD5                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0192  
                __size_of_sin 0318                    ??___xxtofl 0089                       atan@val 0196  
           __end_of_parallelo 4B78                    ??_delay_ms 007F                       asin@sgn 019E  
      CANreceiveMessage@error 000B               _start_operation 023A                __pintcode_body 59FC  
        end_of_initialization 5CAE                       int_func 59FC                 _CANInitialize 4F98  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 00D0  
                     sqrt@exp 00D4             ??_can_interpreter 0077       _steering_correction_dir 023B  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 379A  
                 ___fladd@grs 00C0                 ___xxtofl@sign 008D                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0042  
                  _pulse_time 003C       _clock_counter_reference 00E4                   ___flmul@grs 009E  
              _CANsendMessage 1858              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085                    ?_ISR_Bassa 0001                   ?_matematica 0001  
              __end_of___flge 549A             __size_of_ISR_Alta 5AD4                __end_of___wmul 5E86  
                  floor@expon 00C9           start_initialization 5C54                    eval_poly@d 00C5  
                  eval_poly@n 00C7                    eval_poly@x 00C1                   __end_of_abs 5EB2  
                 __end_of_cos 59FC                   __end_of_sin 45DA           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001  
               _data_steering 0179                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 0234    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0045                      ??___flge 00B9                      ??___wmul 007B  
                 __pdataBANK0 00E8                   __pdataBANK1 01DE              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00B1                     ___fladd@b 00AD        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
                   ___flsub@a 00CF                     ___flsub@b 00CB                 __pcstackBANK0 0060  
               __pcstackBANK1 0189                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0136             __size_of___xxtofl 01CE             __size_of_delay_ms 003A  
             ?_CANsendMessage 0077           __size_of_matematica 058A               ??_CANInitialize 008A  
                   _asin$3746 01AE                     _asin$3747 01A6                     _asin$3748 01A2  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B2  
               _alignment_gap 00E0            CANSetFilter@filter 0077                     _data_test 0181  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00AD                      ?___fldiv 0077  
                    ?___flneg 00A9                      ?___flmul 0090                      ?___flsub 00CB  
                    ?___fltol 0077         __size_of_park_routine 03D2                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 56F4                     _larghezza 01DE  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 48EC         CANreceiveMessage@tamp 000C  
              _prima_sterzata 0138                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 5CB8                     atan@recip 0191                  _park_routine 33C8  
_delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u672_20 2626                      i1u672_26 2628                      i1u673_20 2654  
                    i1u681_25 27DA                      i1u673_26 2656                      i1u683_20 28AE  
                    i1u675_25 266A                      i1u683_26 28B0                      i1u684_20 28D8  
                    i1u692_25 2A50                      i1u684_26 28DA                      _PIR3bits 000FA4  
                    i1u686_25 28EC                      i1u965_27 00BC                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 00E6                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 530A                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0036  
                 _distance_sx 0038                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 5C90                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 0034                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
                ??_matematica 00DE                 _request_sent1 0239              __size_of___fladd 04A8  
                  _CANSetMask 3F24              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3749 01B6              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 549A                      ___xxtofl 4DCA                  _RXF0SIDLbits 000F01  
                    _delay_ms 5DDE               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 42C2  
                    __ptext11 55D0                      __ptext20 5E18                      __ptext12 5ADC  
                    __ptext21 56F4                      __ptext13 4DCA                      __ptext30 4F98  
                    __ptext22 2F22                      __ptext14 580C                      __ptext31 3F24  
                    __ptext23 2A7A                      __ptext15 5D58                      __ptext32 0D52  
                    __ptext24 530A                      __ptext16 45DA                      __ptext33 5F02  
                    __ptext25 3B64                      __ptext17 379A                      __ptext34 5CB8  
                    __ptext26 5EB2                      __ptext18 4B78                      __ptext27 5DDE  
                    __ptext19 5DA0                      __ptext36 256E                      __ptext28 5E50  
                    __ptext29 5BE8                      __ptext38 5B70                  _RXF2SIDLbits 000F09  
                    _sin$3750 018D       __end_of_can_interpreter 5D0C                  _RXF3SIDLbits 000F0D  
                    _distance 0146            __end_of_matematica 256E                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 004C  
               __size_of_sqrt 03CA                   _park_search 515E          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 256E                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C9              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0238                     sqrt@tfrac 00CB  
              _configurazione 5BE8      CANsendMessage@identifier 0077                   ??_parallelo 00DE  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0237  
                 _TXB0DLCbits 000F45                   _right_speed 003E                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0233               _matematica$3740 01BE  
             _matematica$3741 01C2               _matematica$3742 01C6               _matematica$3743 01D2  
             _matematica$3744 01CA               _matematica$3745 01CE               _matematica$3739 01BA  
   __end_of_CANreceiveMessage 2A7A                      sqrt@frac 00DA                      sqrt@sign 00C9  
                    sqrt@root 00D6                   _timerValue2 0040        __end_of_configurazione 5C54  
               ___fladd@signs 00BD                 _distance_wait 0236              ?_can_interpreter 0001  
                ___fladd@aexp 00BE                  ___fladd@bexp 00BF         __end_of_CANInitialize 515E  
