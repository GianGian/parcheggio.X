

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Apr 18 12:58:12 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	param0,global,class=BANK0,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  00488A                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _spazio_parcheggio
    58  00488A  0064               	dw	100
    59                           
    60                           ;initializer for _delay_quartz_frequency_value
    61  00488C  10                 	db	16
    62                           
    63                           	psect	smallconst
    64  000D00                     __psmallconst:
    65                           	opt stack 0
    66  000D00  00                 	db	0
    67  000D01                     atan@coeff_a:
    68                           	opt stack 0
    69  000D01  3C06               	dw	15366
    70  000D03  4204               	dw	16900
    71  000D05  9F7D               	dw	40829
    72  000D07  426A               	dw	17002
    73  000D09  905C               	dw	36956
    74  000D0B  4201               	dw	16897
    75  000D0D  4D60               	dw	19808
    76  000D0F  40BB               	dw	16571
    77  000D11  EC51               	dw	60497
    78  000D13  3E47               	dw	15943
    79  000D15  8DDE               	dw	36318
    80  000D17  BB1F               	dw	47903
    81  000D19                     __end_ofatan@coeff_a:
    82                           	opt stack 0
    83  000D19                     atan@coeff_b:
    84                           	opt stack 0
    85  000D19  3C06               	dw	15366
    86  000D1B  4204               	dw	16900
    87  000D1D  59C0               	dw	22976
    88  000D1F  428B               	dw	17035
    89  000D21  0474               	dw	1140
    90  000D23  4244               	dw	16964
    91  000D25  9BF9               	dw	39929
    92  000D27  414F               	dw	16719
    93  000D29  0000               	dw	0
    94  000D2B  3F80               	dw	16256
    95  000D2D                     __end_ofatan@coeff_b:
    96                           	opt stack 0
    97  0000                     _ADCON1	set	4033
    98  0000                     _BRGCON1	set	3952
    99  0000                     _BRGCON2	set	3953
   100  0000                     _BRGCON2bits	set	3953
   101  0000                     _BRGCON3	set	3954
   102  0000                     _BRGCON3bits	set	3954
   103  0000                     _CANCON	set	3951
   104  0000                     _CANCONbits	set	3951
   105  0000                     _CANSTAT	set	3950
   106  0000                     _COMSTATbits	set	3956
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _INTCONbits	set	4082
   109  0000                     _IPR3bits	set	4005
   110  0000                     _LATA	set	3977
   111  0000                     _LATB	set	3978
   112  0000                     _LATBbits	set	3978
   113  0000                     _LATC	set	3979
   114  0000                     _PIE3bits	set	4003
   115  0000                     _PIR3bits	set	4004
   116  0000                     _PORTA	set	3968
   117  0000                     _PORTBbits	set	3969
   118  0000                     _RCONbits	set	4048
   119  0000                     _RXB0CON	set	3936
   120  0000                     _RXB0CONbits	set	3936
   121  0000                     _RXB0D0	set	3942
   122  0000                     _RXB0D1	set	3943
   123  0000                     _RXB0D2	set	3944
   124  0000                     _RXB0D3	set	3945
   125  0000                     _RXB0D4	set	3946
   126  0000                     _RXB0D5	set	3947
   127  0000                     _RXB0D6	set	3948
   128  0000                     _RXB0D7	set	3949
   129  0000                     _RXB0DLC	set	3941
   130  0000                     _RXB0DLCbits	set	3941
   131  0000                     _RXB0EIDH	set	3939
   132  0000                     _RXB0EIDL	set	3940
   133  0000                     _RXB0SIDH	set	3937
   134  0000                     _RXB0SIDL	set	3938
   135  0000                     _RXB0SIDLbits	set	3938
   136  0000                     _RXB1CON	set	3920
   137  0000                     _RXB1CONbits	set	3920
   138  0000                     _RXB1D0	set	3926
   139  0000                     _RXB1D1	set	3927
   140  0000                     _RXB1D2	set	3928
   141  0000                     _RXB1D3	set	3929
   142  0000                     _RXB1D4	set	3930
   143  0000                     _RXB1D5	set	3931
   144  0000                     _RXB1D6	set	3932
   145  0000                     _RXB1D7	set	3933
   146  0000                     _RXB1DLC	set	3925
   147  0000                     _RXB1DLCbits	set	3925
   148  0000                     _RXB1EIDH	set	3923
   149  0000                     _RXB1EIDL	set	3924
   150  0000                     _RXB1SIDH	set	3921
   151  0000                     _RXB1SIDL	set	3922
   152  0000                     _RXB1SIDLbits	set	3922
   153  0000                     _RXERRCNT	set	3957
   154  0000                     _RXF0EIDH	set	3842
   155  0000                     _RXF0EIDL	set	3843
   156  0000                     _RXF0SIDH	set	3840
   157  0000                     _RXF0SIDL	set	3841
   158  0000                     _RXF0SIDLbits	set	3841
   159  0000                     _RXF1EIDH	set	3846
   160  0000                     _RXF1EIDL	set	3847
   161  0000                     _RXF1SIDH	set	3844
   162  0000                     _RXF1SIDL	set	3845
   163  0000                     _RXF1SIDLbits	set	3845
   164  0000                     _RXF2EIDH	set	3850
   165  0000                     _RXF2EIDL	set	3851
   166  0000                     _RXF2SIDH	set	3848
   167  0000                     _RXF2SIDL	set	3849
   168  0000                     _RXF2SIDLbits	set	3849
   169  0000                     _RXF3EIDH	set	3854
   170  0000                     _RXF3EIDL	set	3855
   171  0000                     _RXF3SIDH	set	3852
   172  0000                     _RXF3SIDL	set	3853
   173  0000                     _RXF3SIDLbits	set	3853
   174  0000                     _RXF4EIDH	set	3858
   175  0000                     _RXF4EIDL	set	3859
   176  0000                     _RXF4SIDH	set	3856
   177  0000                     _RXF4SIDL	set	3857
   178  0000                     _RXF4SIDLbits	set	3857
   179  0000                     _RXF5EIDH	set	3862
   180  0000                     _RXF5EIDL	set	3863
   181  0000                     _RXF5SIDH	set	3860
   182  0000                     _RXF5SIDL	set	3861
   183  0000                     _RXF5SIDLbits	set	3861
   184  0000                     _RXM0EIDH	set	3866
   185  0000                     _RXM0EIDL	set	3867
   186  0000                     _RXM0SIDH	set	3864
   187  0000                     _RXM0SIDL	set	3865
   188  0000                     _RXM0SIDLbits	set	3865
   189  0000                     _RXM1EIDH	set	3870
   190  0000                     _RXM1EIDL	set	3871
   191  0000                     _RXM1SIDH	set	3868
   192  0000                     _RXM1SIDL	set	3869
   193  0000                     _RXM1SIDLbits	set	3869
   194  0000                     _T0CON	set	4053
   195  0000                     _T3CON	set	4017
   196  0000                     _TMR0H	set	4055
   197  0000                     _TMR0L	set	4054
   198  0000                     _TMR3H	set	4019
   199  0000                     _TMR3L	set	4018
   200  0000                     _TRISA	set	3986
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISBbits	set	3987
   203  0000                     _TRISC	set	3988
   204  0000                     _TXB0CONbits	set	3904
   205  0000                     _TXB0D0	set	3910
   206  0000                     _TXB0D1	set	3911
   207  0000                     _TXB0D2	set	3912
   208  0000                     _TXB0D3	set	3913
   209  0000                     _TXB0D4	set	3914
   210  0000                     _TXB0D5	set	3915
   211  0000                     _TXB0D6	set	3916
   212  0000                     _TXB0D7	set	3917
   213  0000                     _TXB0DLC	set	3909
   214  0000                     _TXB0DLCbits	set	3909
   215  0000                     _TXB0EIDH	set	3907
   216  0000                     _TXB0EIDL	set	3908
   217  0000                     _TXB0SIDH	set	3905
   218  0000                     _TXB0SIDL	set	3906
   219  0000                     _TXB0SIDLbits	set	3906
   220  0000                     _TXB1CONbits	set	3888
   221  0000                     _TXB1D0	set	3894
   222  0000                     _TXB1D1	set	3895
   223  0000                     _TXB1D2	set	3896
   224  0000                     _TXB1D3	set	3897
   225  0000                     _TXB1D4	set	3898
   226  0000                     _TXB1D5	set	3899
   227  0000                     _TXB1D6	set	3900
   228  0000                     _TXB1D7	set	3901
   229  0000                     _TXB1DLC	set	3893
   230  0000                     _TXB1DLCbits	set	3893
   231  0000                     _TXB1EIDH	set	3891
   232  0000                     _TXB1EIDL	set	3892
   233  0000                     _TXB1SIDH	set	3889
   234  0000                     _TXB1SIDL	set	3890
   235  0000                     _TXB1SIDLbits	set	3890
   236  0000                     _TXB2CONbits	set	3872
   237  0000                     _TXB2D0	set	3878
   238  0000                     _TXB2D1	set	3879
   239  0000                     _TXB2D2	set	3880
   240  0000                     _TXB2D3	set	3881
   241  0000                     _TXB2D4	set	3882
   242  0000                     _TXB2D5	set	3883
   243  0000                     _TXB2D6	set	3884
   244  0000                     _TXB2D7	set	3885
   245  0000                     _TXB2DLC	set	3877
   246  0000                     _TXB2DLCbits	set	3877
   247  0000                     _TXB2EIDH	set	3875
   248  0000                     _TXB2EIDL	set	3876
   249  0000                     _TXB2SIDH	set	3873
   250  0000                     _TXB2SIDL	set	3874
   251  0000                     _TXB2SIDLbits	set	3874
   252  0000                     _TXERRCNT	set	3958
   253                           
   254                           ; #config settings
   255  000D2D  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	cinit
   258  0046A6                     __pcinit:
   259                           	opt stack 0
   260  0046A6                     start_initialization:
   261                           	opt stack 0
   262  0046A6                     __initialization:
   263                           	opt stack 0
   264                           
   265                           ; Clear objects allocated to BANK1 (63 bytes)
   266  0046A6  EE01  F000         	lfsr	0,__pbssBANK1
   267  0046AA  0E3F               	movlw	63
   268  0046AC                     clear_0:
   269  0046AC  6AEE               	clrf	postinc0,c
   270  0046AE  06E8               	decf	wreg,f,c
   271  0046B0  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to BANK0 (22 bytes)
   274  0046B2  EE00  F0D2         	lfsr	0,__pbssBANK0
   275  0046B6  0E16               	movlw	22
   276  0046B8                     clear_1:
   277  0046B8  6AEE               	clrf	postinc0,c
   278  0046BA  06E8               	decf	wreg,f,c
   279  0046BC  E1FD               	bnz	clear_1
   280                           
   281                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   282  0046BE  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   283                           
   284                           ; Clear objects allocated to COMRAM (37 bytes)
   285  0046C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   286  0046C4  0E25               	movlw	37
   287  0046C6                     clear_2:
   288  0046C6  6AEE               	clrf	postinc0,c
   289  0046C8  06E8               	decf	wreg,f,c
   290  0046CA  E1FD               	bnz	clear_2
   291                           
   292                           ; Initialize objects allocated to COMRAM (3 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294  0046CC  0E8A               	movlw	low __pidataCOMRAM
   295  0046CE  6EF6               	movwf	tblptrl,c
   296  0046D0  0E48               	movlw	high __pidataCOMRAM
   297  0046D2  6EF7               	movwf	tblptrh,c
   298  0046D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299  0046D6  6EF8               	movwf	tblptru,c
   300  0046D8  0009               	tblrd		*+	;fetch initializer
   301  0046DA  CFF5 F048          	movff	tablat,__pdataCOMRAM
   302  0046DE  0009               	tblrd		*+	;fetch initializer
   303  0046E0  CFF5 F049          	movff	tablat,__pdataCOMRAM+1
   304  0046E4  0009               	tblrd		*+	;fetch initializer
   305  0046E6  CFF5 F04A          	movff	tablat,__pdataCOMRAM+2
   306  0046EA                     end_of_initialization:
   307                           	opt stack 0
   308  0046EA                     __end_of__initialization:
   309                           	opt stack 0
   310  0046EA  0100               	movlb	0
   311  0046EC  EF04  F023         	goto	_main	;jump to C main() function
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319                           	psect	bitbssCOMRAM
   320  000238                     __pbitbssCOMRAM:
   321                           	opt stack 0
   322  000238                     _activation:
   323                           	opt stack 0
   324  000238                     	ds	1
   325  000239                     _dir:
   326                           	opt stack 0
   327  000239                     	ds	1
   328  00023A                     _distance_error:
   329                           	opt stack 0
   330  00023A                     	ds	1
   331  00023B                     _distance_received:
   332                           	opt stack 0
   333  00023B                     	ds	1
   334  00023C                     _distance_wait:
   335                           	opt stack 0
   336  00023C                     	ds	1
   337  00023D                     _request_sent:
   338                           	opt stack 0
   339  00023D                     	ds	1
   340  00023E                     _start_operation:
   341                           	opt stack 0
   342  00023E                     	ds	1
   343  00023F                     _steering_correction_dir:
   344                           	opt stack 0
   345  00023F                     	ds	1
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           
   353                           	psect	bssCOMRAM
   354  000001                     __pbssCOMRAM:
   355                           	opt stack 0
   356  000001                     _sensor_distance:
   357                           	opt stack 0
   358  000001                     	ds	16
   359  000011                     _actual_speed:
   360                           	opt stack 0
   361  000011                     	ds	2
   362  000013                     _clock_counter_reference:
   363                           	opt stack 0
   364  000013                     	ds	2
   365  000015                     _distance:
   366                           	opt stack 0
   367  000015                     	ds	2
   368  000017                     _distance_dx:
   369                           	opt stack 0
   370  000017                     	ds	2
   371  000019                     _distance_sx:
   372                           	opt stack 0
   373  000019                     	ds	2
   374  00001B                     _left_speed:
   375                           	opt stack 0
   376  00001B                     	ds	2
   377  00001D                     _pulse_time:
   378                           	opt stack 0
   379  00001D                     	ds	2
   380  00001F                     _right_speed:
   381                           	opt stack 0
   382  00001F                     	ds	2
   383  000021                     _timerValue2:
   384                           	opt stack 0
   385  000021                     	ds	2
   386  000023                     _MUX_index:
   387                           	opt stack 0
   388  000023                     	ds	1
   389  000024                     _asus:
   390                           	opt stack 0
   391  000024                     	ds	1
   392  000025                     _gianni:
   393                           	opt stack 0
   394  000025                     	ds	1
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           	psect	dataCOMRAM
   403  000048                     __pdataCOMRAM:
   404                           	opt stack 0
   405  000048                     _spazio_parcheggio:
   406                           	opt stack 0
   407  000048                     	ds	2
   408  00004A                     _delay_quartz_frequency_value:
   409                           	opt stack 0
   410  00004A                     	ds	1
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418                           	psect	bssBANK0
   419  0000D2                     __pbssBANK0:
   420                           	opt stack 0
   421  0000D2                     _MUX_select:
   422                           	opt stack 0
   423  0000D2                     	ds	8
   424  0000DA                     _z:
   425                           	opt stack 0
   426  0000DA                     	ds	4
   427  0000DE                     _distance_average:
   428                           	opt stack 0
   429  0000DE                     	ds	2
   430  0000E0                     _errno:
   431                           	opt stack 0
   432  0000E0                     	ds	2
   433  0000E2                     _set_speed:
   434                           	opt stack 0
   435  0000E2                     	ds	2
   436  0000E4                     _x:
   437                           	opt stack 0
   438  0000E4                     	ds	2
   439  0000E6                     _alignment_gap:
   440                           	opt stack 0
   441  0000E6                     	ds	1
   442  0000E7                     _steering_correction:
   443                           	opt stack 0
   444  0000E7                     	ds	1
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           
   452                           	psect	bssBANK1
   453  000100                     __pbssBANK1:
   454                           	opt stack 0
   455  000100                     _data_speed_rx:
   456                           	opt stack 0
   457  000100                     	ds	8
   458  000108                     _distance_set:
   459                           	opt stack 0
   460  000108                     	ds	8
   461  000110                     _msg:
   462                           	opt stack 0
   463  000110                     	ds	15
   464  00011F                     _data:
   465                           	opt stack 0
   466  00011F                     	ds	8
   467  000127                     _data_brake:
   468                           	opt stack 0
   469  000127                     	ds	8
   470  00012F                     _data_speed:
   471                           	opt stack 0
   472  00012F                     	ds	8
   473  000137                     _data_steering:
   474                           	opt stack 0
   475  000137                     	ds	8
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           
   483                           	psect	cstackBANK1
   484  00013F                     __pcstackBANK1:
   485                           	opt stack 0
   486  00013F                     atan@y:
   487                           	opt stack 0
   488  00013F                     sqrt@og:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492  00013F                     	ds	4
   493  000143                     atan@x:
   494                           	opt stack 0
   495  000143                     sqrt@z:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499  000143                     	ds	4
   500  000147                     atan@recip:
   501                           	opt stack 0
   502  000147                     sqrt@i:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x8
   506  000147                     	ds	1
   507  000148                     atan@val_squared:
   508                           	opt stack 0
   509  000148                     sqrt@q:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0x9
   513  000148                     	ds	4
   514  00014C                     atan@val:
   515                           	opt stack 0
   516  00014C                     sqrt@x:
   517                           	opt stack 0
   518                           
   519                           ; 4 bytes @ 0xD
   520  00014C                     	ds	4
   521  000150                     asin@sgn:
   522                           	opt stack 0
   523                           
   524                           ; 4 bytes @ 0x11
   525  000150                     	ds	4
   526  000154                     _asin$3543:
   527                           	opt stack 0
   528                           
   529                           ; 4 bytes @ 0x15
   530  000154                     	ds	4
   531  000158                     _asin$3546:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x19
   535  000158                     	ds	4
   536  00015C                     _asin$3545:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x1D
   540  00015C                     	ds	4
   541  000160                     asin@y:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x21
   545  000160                     	ds	4
   546  000164                     _asin$3544:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x25
   550  000164                     	ds	4
   551  000168                     ??_parallelo:
   552                           
   553                           ; 0 bytes @ 0x29
   554  000168                     	ds	4
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           
   562                           	psect	cstackBANK0
   563  000060                     __pcstackBANK0:
   564                           	opt stack 0
   565  000060                     ?___lwdiv:
   566                           	opt stack 0
   567  000060                     ___lwdiv@dividend:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x0
   571  000060                     	ds	2
   572  000062                     ___lwdiv@divisor:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x2
   576  000062                     	ds	2
   577  000064                     ___lwdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x4
   581  000064                     	ds	2
   582  000066                     ___lwdiv@counter:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x6
   586  000066                     	ds	1
   587  000067                     ??_ISR_Alta:
   588                           
   589                           ; 0 bytes @ 0x7
   590  000067                     	ds	14
   591  000075                     ??_can_interpreter:
   592  000075                     ?_abs:
   593                           	opt stack 0
   594  000075                     ?___flpack:
   595                           	opt stack 0
   596  000075                     CANOperationMode@mode:
   597                           	opt stack 0
   598  000075                     _CANisTxReady$2808:
   599                           	opt stack 0
   600  000075                     abs@a:
   601                           	opt stack 0
   602  000075                     CANsendMessage@identifier:
   603                           	opt stack 0
   604  000075                     CANSetMask@mask:
   605                           	opt stack 0
   606  000075                     CANSetFilter@filter:
   607                           	opt stack 0
   608  000075                     ___flpack@arg:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x15
   612  000075                     	ds	2
   613  000077                     ??_abs:
   614                           
   615                           ; 0 bytes @ 0x17
   616  000077                     	ds	2
   617  000079                     CANSetMask@type:
   618                           	opt stack 0
   619  000079                     CANSetFilter@type:
   620                           	opt stack 0
   621  000079                     ___flpack@exp:
   622                           	opt stack 0
   623  000079                     CANsendMessage@data:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x19
   627  000079                     	ds	1
   628  00007A                     ??_CANSetMask:
   629  00007A                     ??_CANSetFilter:
   630  00007A                     ___flpack@sign:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x1A
   634  00007A                     	ds	1
   635  00007B                     ??___flpack:
   636  00007B                     CANsendMessage@dataLength:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x1B
   640  00007B                     	ds	1
   641  00007C                     CANsendMessage@flags:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x1C
   645  00007C                     	ds	1
   646  00007D                     ??_CANsendMessage:
   647                           
   648                           ; 0 bytes @ 0x1D
   649  00007D                     	ds	1
   650  00007E                     CANSetMask@numBuffer:
   651                           	opt stack 0
   652  00007E                     CANSetFilter@numBuffer:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x1E
   656  00007E                     	ds	1
   657  00007F                     ?___flmul:
   658                           	opt stack 0
   659  00007F                     ?___awtofl:
   660                           	opt stack 0
   661  00007F                     ?___lbtofl:
   662                           	opt stack 0
   663  00007F                     ___awtofl@c:
   664                           	opt stack 0
   665  00007F                     CANSetMask@tamp:
   666                           	opt stack 0
   667  00007F                     CANSetFilter@tamp:
   668                           	opt stack 0
   669  00007F                     ___flmul@f1:
   670                           	opt stack 0
   671                           
   672                           ; 4 bytes @ 0x1F
   673  00007F                     	ds	2
   674  000081                     CANsendMessage@tamp:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x21
   678  000081                     	ds	2
   679  000083                     CANInitialize@phaseSeg1:
   680                           	opt stack 0
   681  000083                     ___awtofl@sign:
   682                           	opt stack 0
   683  000083                     ___lbtofl@c:
   684                           	opt stack 0
   685  000083                     ___flmul@f2:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0x23
   689  000083                     	ds	1
   690  000084                     CANInitialize@phaseSeg2:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x24
   694  000084                     	ds	1
   695  000085                     ??_park_search:
   696  000085                     ??_can_send:
   697  000085                     CANInitialize@SJW:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x25
   701  000085                     	ds	1
   702  000086                     CANInitialize@BRP:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x26
   706  000086                     	ds	1
   707  000087                     ??___flmul:
   708  000087                     CANInitialize@flags:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x27
   712  000087                     	ds	1
   713  000088                     ??_CANInitialize:
   714                           
   715                           ; 0 bytes @ 0x28
   716  000088                     	ds	3
   717  00008B                     ___flmul@exp:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x2B
   721  00008B                     	ds	1
   722  00008C                     CANInitialize@propSeg:
   723                           	opt stack 0
   724  00008C                     ___flmul@f3_as_product:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x2C
   728  00008C                     	ds	1
   729  00008D                     CANInitialize@FilterConfig1:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x2D
   733  00008D                     	ds	1
   734  00008E                     CANInitialize@FilterConfig2:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x2E
   738  00008E                     	ds	1
   739  00008F                     
   740                           ; 0 bytes @ 0x2F
   741  00008F                     	ds	1
   742  000090                     ___flmul@cntr:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x30
   746  000090                     	ds	1
   747  000091                     ___flmul@sign:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x31
   751  000091                     	ds	1
   752  000092                     ?___flneg:
   753                           	opt stack 0
   754  000092                     ___flneg@f1:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x32
   758  000092                     	ds	4
   759  000096                     ?___fldiv:
   760                           	opt stack 0
   761  000096                     ?_fabs:
   762                           	opt stack 0
   763  000096                     fabs@d:
   764                           	opt stack 0
   765  000096                     ___fldiv@f1:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x36
   769  000096                     	ds	4
   770  00009A                     ___fldiv@f2:
   771                           	opt stack 0
   772  00009A                     ___flge@ff1:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x3A
   776  00009A                     	ds	4
   777  00009E                     ??___fldiv:
   778  00009E                     ___flge@ff2:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x3E
   782  00009E                     	ds	4
   783  0000A2                     ??___flge:
   784  0000A2                     ___fldiv@f3:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x42
   788  0000A2                     	ds	4
   789  0000A6                     ___fldiv@cntr:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x46
   793  0000A6                     	ds	1
   794  0000A7                     ___fldiv@exp:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x47
   798  0000A7                     	ds	1
   799  0000A8                     ___fldiv@sign:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x48
   803  0000A8                     	ds	1
   804  0000A9                     ?___fladd:
   805                           	opt stack 0
   806  0000A9                     ___fladd@f1:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x49
   810  0000A9                     	ds	4
   811  0000AD                     ___fladd@f2:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x4D
   815  0000AD                     	ds	4
   816  0000B1                     ??___fladd:
   817                           
   818                           ; 0 bytes @ 0x51
   819  0000B1                     	ds	4
   820  0000B5                     ___fladd@sign:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x55
   824  0000B5                     	ds	1
   825  0000B6                     ___fladd@exp2:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x56
   829  0000B6                     	ds	1
   830  0000B7                     ___fladd@exp1:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x57
   834  0000B7                     	ds	1
   835  0000B8                     ?___flsub:
   836                           	opt stack 0
   837  0000B8                     ?_eval_poly:
   838                           	opt stack 0
   839  0000B8                     eval_poly@x:
   840                           	opt stack 0
   841  0000B8                     ___flsub@f1:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x58
   845  0000B8                     	ds	4
   846  0000BC                     eval_poly@d:
   847                           	opt stack 0
   848  0000BC                     ___flsub@f2:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x5C
   852  0000BC                     	ds	2
   853  0000BE                     eval_poly@n:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x5E
   857  0000BE                     	ds	2
   858  0000C0                     ??_eval_poly:
   859  0000C0                     ?_sqrt:
   860                           	opt stack 0
   861  0000C0                     sqrt@y:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x60
   865  0000C0                     	ds	4
   866  0000C4                     ??_sqrt:
   867  0000C4                     eval_poly@res:
   868                           	opt stack 0
   869                           
   870                           ; 4 bytes @ 0x64
   871  0000C4                     	ds	4
   872  0000C8                     ?_atan:
   873                           	opt stack 0
   874  0000C8                     ?___fltol:
   875                           	opt stack 0
   876  0000C8                     atan@f:
   877                           	opt stack 0
   878  0000C8                     ___fltol@f1:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x68
   882  0000C8                     	ds	4
   883  0000CC                     ??___fltol:
   884  0000CC                     ?_asin:
   885                           	opt stack 0
   886  0000CC                     asin@x:
   887                           	opt stack 0
   888                           
   889                           ; 4 bytes @ 0x6C
   890  0000CC                     	ds	4
   891  0000D0                     ___fltol@sign1:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x70
   895  0000D0                     	ds	1
   896  0000D1                     ___fltol@exp1:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x71
   900  0000D1                     	ds	1
   901  0000D2                     tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           
   908                           ; 0 bytes @ 0x72
   909                           
   910                           	psect	cstackCOMRAM
   911  000026                     __pcstackCOMRAM:
   912                           	opt stack 0
   913  000026                     CANreceiveMessage@msg:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x0
   917  000026                     	ds	2
   918  000028                     ??_CANreceiveMessage:
   919                           
   920                           ; 0 bytes @ 0x2
   921  000028                     	ds	8
   922  000030                     CANreceiveMessage@error:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0xA
   926  000030                     	ds	1
   927  000031                     CANreceiveMessage@tamp:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0xB
   931  000031                     	ds	1
   932  000032                     ??_ISR_Bassa:
   933                           
   934                           ; 0 bytes @ 0xC
   935  000032                     	ds	19
   936  000045                     ISR_Bassa@gigi:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x1F
   940  000045                     	ds	1
   941  000046                     ISR_Bassa@i:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x20
   945  000046                     	ds	1
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           
   953 ;;
   954 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   955 ;;
   956 ;; *************** function _main *****************
   957 ;; Defined at:
   958 ;;		line 159 in file "parcheggio.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;		None               void
   965 ;; Registers used:
   966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels required when called:   10
   978 ;; This function calls:
   979 ;;		_can_interpreter
   980 ;;		_configurazione
   981 ;;		_parallelo
   982 ;;		_park_routine
   983 ;;		_park_search
   984 ;; This function is called by:
   985 ;;		Startup code after reset
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text0
   990  004608                     __ptext0:
   991                           	opt stack 0
   992  004608                     _main:
   993                           	opt stack 21
   994                           
   995                           ;parcheggio.c: 160: configurazione();
   996                           
   997                           ; BSR set to: 15
   998                           ;incstack = 0
   999  004608  EC9E  F022         	call	_configurazione	;wreg free
  1000                           
  1001                           ;parcheggio.c: 161: MUX_select[0] = 0b00000000;
  1002  00460C  0E00               	movlw	0
  1003  00460E  0100               	movlb	0	; () banked
  1004  004610  6FD2               	movwf	_MUX_select& (0+255),b
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;parcheggio.c: 162: MUX_select[1] = 0b00000001;
  1008  004612  0E01               	movlw	1
  1009  004614  0100               	movlb	0	; () banked
  1010  004616  6FD3               	movwf	(_MUX_select+1)& (0+255),b
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;parcheggio.c: 163: MUX_select[2] = 0b00000010;
  1014  004618  0E02               	movlw	2
  1015  00461A  0100               	movlb	0	; () banked
  1016  00461C  6FD4               	movwf	(_MUX_select+2)& (0+255),b
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;parcheggio.c: 164: MUX_select[3] = 0b00000011;
  1020  00461E  0E03               	movlw	3
  1021  004620  0100               	movlb	0	; () banked
  1022  004622  6FD5               	movwf	(_MUX_select+3)& (0+255),b
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;parcheggio.c: 165: MUX_select[4] = 0b00000100;
  1026  004624  0E04               	movlw	4
  1027  004626  0100               	movlb	0	; () banked
  1028  004628  6FD6               	movwf	(_MUX_select+4)& (0+255),b
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;parcheggio.c: 166: MUX_select[5] = 0b00000101;
  1032  00462A  0E05               	movlw	5
  1033  00462C  0100               	movlb	0	; () banked
  1034  00462E  6FD7               	movwf	(_MUX_select+5)& (0+255),b
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;parcheggio.c: 167: MUX_select[6] = 0b00000110;
  1038  004630  0E06               	movlw	6
  1039  004632  0100               	movlb	0	; () banked
  1040  004634  6FD8               	movwf	(_MUX_select+6)& (0+255),b
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;parcheggio.c: 168: MUX_select[7] = 0b00000111;
  1044  004636  0E07               	movlw	7
  1045  004638  0100               	movlb	0	; () banked
  1046  00463A  6FD9               	movwf	(_MUX_select+7)& (0+255),b
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;parcheggio.c: 170: PORTBbits.RB4 = 0;
  1050  00463C  9881               	bcf	3969,4,c	;volatile
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;parcheggio.c: 171: PORTBbits.RB5 = 0;
  1054  00463E  9A81               	bcf	3969,5,c	;volatile
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;parcheggio.c: 172: PORTBbits.RB6 = 0;
  1058  004640  9C81               	bcf	3969,6,c	;volatile
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;parcheggio.c: 173: request_sent = 0;
  1062  004642  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1063  004644  9A47               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1064  004646                     l4954:
  1065                           
  1066                           ;parcheggio.c: 175: park_search();
  1067  004646  EC03  F01F         	call	_park_search	;wreg free
  1068                           
  1069                           ;parcheggio.c: 176: can_interpreter();
  1070  00464A  EC78  F023         	call	_can_interpreter	;wreg free
  1071                           
  1072                           ;parcheggio.c: 177: parallelo();
  1073  00464E  ECB3  F01F         	call	_parallelo	;wreg free
  1074                           
  1075                           ;parcheggio.c: 178: park_routine();
  1076  004652  EC16  F024         	call	_park_routine	;wreg free
  1077  004656  D7F7               	goto	l4954
  1078  004658                     __end_of_main:
  1079                           	opt stack 0
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           
  1087 ;; *************** function _park_search *****************
  1088 ;; Defined at:
  1089 ;;		line 182 in file "parcheggio.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;		None               void
  1096 ;; Registers used:
  1097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1105 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    5
  1110 ;; This function calls:
  1111 ;;		_CANisTxReady
  1112 ;;		_CANsendMessage
  1113 ;;		_abs
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text1
  1120  003E06                     __ptext1:
  1121                           	opt stack 0
  1122  003E06                     _park_search:
  1123                           	opt stack 25
  1124                           
  1125                           ;parcheggio.c: 183: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1126                           
  1127                           ;incstack = 0
  1128  003E06  D0A9               	goto	l677
  1129  003E08                     l4298:
  1130                           
  1131                           ;parcheggio.c: 184: if (sensor_distance[0] > 50) {
  1132  003E08  0E33               	movlw	51
  1133  003E0A  5C01               	subwf	_sensor_distance,w,c	;volatile
  1134  003E0C  0E00               	movlw	0
  1135  003E0E  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  1136  003E10  A0D8               	btfss	status,0,c
  1137  003E12  D02B               	goto	l4314
  1138                           
  1139                           ;parcheggio.c: 185: if (request_sent == 0) {
  1140  003E14  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1141  003E16  BA47               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1142  003E18  D043               	goto	l4316
  1143  003E1A                     l4304:
  1144  003E1A  EC28  F024         	call	_CANisTxReady	;wreg free
  1145  003E1E  0900               	iorlw	0
  1146  003E20  B4D8               	btfsc	status,2,c
  1147  003E22  D7FB               	goto	l4304
  1148                           
  1149                           ;parcheggio.c: 187: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1150  003E24  0E08               	movlw	8
  1151  003E26  0100               	movlb	0	; () banked
  1152  003E28  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1153  003E2A  0E00               	movlw	0
  1154  003E2C  0100               	movlb	0	; () banked
  1155  003E2E  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1156  003E30  0E00               	movlw	0
  1157  003E32  0100               	movlb	0	; () banked
  1158  003E34  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1159  003E36  0E00               	movlw	0
  1160  003E38  0100               	movlb	0	; () banked
  1161  003E3A  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1162  003E3C  0101               	movlb	1	; () banked
  1163  003E3E  0E01               	movlw	high _data
  1164  003E40  0100               	movlb	0	; () banked
  1165  003E42  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1166  003E44  0101               	movlb	1	; () banked
  1167  003E46  0E1F               	movlw	low _data
  1168  003E48  0100               	movlb	0	; () banked
  1169  003E4A  6F79               	movwf	CANsendMessage@data& (0+255),b
  1170  003E4C  0E08               	movlw	8
  1171  003E4E  0100               	movlb	0	; () banked
  1172  003E50  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1173  003E52  0EFC               	movlw	252
  1174  003E54  0100               	movlb	0	; () banked
  1175  003E56  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1176  003E58  ECAC  F00C         	call	_CANsendMessage	;wreg free
  1177                           
  1178                           ;parcheggio.c: 188: request_sent = 1;
  1179  003E5C  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1180  003E5E  8A47               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1181                           
  1182                           ;parcheggio.c: 189: alignment_gap = 0;
  1183  003E60  0E00               	movlw	0
  1184  003E62  0100               	movlb	0	; () banked
  1185  003E64  6FE6               	movwf	_alignment_gap& (0+255),b
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;parcheggio.c: 190: LATBbits.LATB4 = 1;
  1189  003E66  888A               	bsf	3978,4,c	;volatile
  1190  003E68  D01B               	goto	l4316
  1191  003E6A                     l4314:
  1192                           
  1193                           ;parcheggio.c: 193: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1194  003E6A  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1195  003E6E  CFDE F085          	movff	postinc2,??_park_search
  1196  003E72  CFDD F086          	movff	postdec2,??_park_search+1
  1197  003E76  0100               	movlb	0	; () banked
  1198  003E78  1F85               	comf	??_park_search& (0+255),f,b
  1199  003E7A  1F86               	comf	(??_park_search+1)& (0+255),f,b
  1200  003E7C  4B85               	infsnz	??_park_search& (0+255),f,b
  1201  003E7E  2B86               	incf	(??_park_search+1)& (0+255),f,b
  1202  003E80  5001               	movf	_sensor_distance,w,c	;volatile
  1203  003E82  0100               	movlb	0	; () banked
  1204  003E84  2585               	addwf	??_park_search& (0+255),w,b
  1205  003E86  0100               	movlb	0	; () banked
  1206  003E88  6F75               	movwf	abs@a& (0+255),b
  1207  003E8A  5002               	movf	_sensor_distance+1,w,c	;volatile
  1208  003E8C  0100               	movlb	0	; () banked
  1209  003E8E  2186               	addwfc	(??_park_search+1)& (0+255),w,b
  1210  003E90  0100               	movlb	0	; () banked
  1211  003E92  6F76               	movwf	(abs@a+1)& (0+255),b
  1212  003E94  EC9C  F023         	call	_abs	;wreg free
  1213  003E98  0100               	movlb	0	; () banked
  1214  003E9A  5175               	movf	?_abs& (0+255),w,b
  1215  003E9C  0100               	movlb	0	; () banked
  1216  003E9E  6FE6               	movwf	_alignment_gap& (0+255),b
  1217  003EA0                     l4316:
  1218                           
  1219                           ;parcheggio.c: 194: }
  1220                           ;parcheggio.c: 195: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1221  003EA0  0E32               	movlw	50
  1222  003EA2  5C01               	subwf	_sensor_distance,w,c	;volatile
  1223  003EA4  0E00               	movlw	0
  1224  003EA6  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  1225  003EA8  B0D8               	btfsc	status,0,c
  1226  003EAA  D026               	goto	l4326
  1227  003EAC  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1228  003EAE  AA47               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1229  003EB0  D023               	goto	l4326
  1230                           
  1231                           ;parcheggio.c: 196: request_sent = 0;
  1232  003EB2  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1233  003EB4  9A47               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1234  003EB6                     l4322:
  1235  003EB6  EC28  F024         	call	_CANisTxReady	;wreg free
  1236  003EBA  0900               	iorlw	0
  1237  003EBC  B4D8               	btfsc	status,2,c
  1238  003EBE  D7FB               	goto	l4322
  1239                           
  1240                           ;parcheggio.c: 198: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1241  003EC0  0E07               	movlw	7
  1242  003EC2  0100               	movlb	0	; () banked
  1243  003EC4  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1244  003EC6  0E00               	movlw	0
  1245  003EC8  0100               	movlb	0	; () banked
  1246  003ECA  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1247  003ECC  0E00               	movlw	0
  1248  003ECE  0100               	movlb	0	; () banked
  1249  003ED0  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1250  003ED2  0E00               	movlw	0
  1251  003ED4  0100               	movlb	0	; () banked
  1252  003ED6  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1253  003ED8  0101               	movlb	1	; () banked
  1254  003EDA  0E01               	movlw	high _data
  1255  003EDC  0100               	movlb	0	; () banked
  1256  003EDE  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1257  003EE0  0101               	movlb	1	; () banked
  1258  003EE2  0E1F               	movlw	low _data
  1259  003EE4  0100               	movlb	0	; () banked
  1260  003EE6  6F79               	movwf	CANsendMessage@data& (0+255),b
  1261  003EE8  0E08               	movlw	8
  1262  003EEA  0100               	movlb	0	; () banked
  1263  003EEC  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1264  003EEE  0EFC               	movlw	252
  1265  003EF0  0100               	movlb	0	; () banked
  1266  003EF2  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1267  003EF4  ECAC  F00C         	call	_CANsendMessage	;wreg free
  1268  003EF8                     l4326:
  1269                           
  1270                           ;parcheggio.c: 199: }
  1271                           ;parcheggio.c: 200: if (distance_received == 1) {
  1272  003EF8  0100               	movlb	(_distance_received/(0+8)) shr (0+8)
  1273  003EFA  A647               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1274  003EFC  D02E               	goto	l677
  1275                           
  1276                           ;parcheggio.c: 201: if (distance_average > 100) {
  1277  003EFE  0E65               	movlw	101
  1278  003F00  0100               	movlb	0	; () banked
  1279  003F02  5DDE               	subwf	_distance_average& (0+255),w,b	;volatile
  1280  003F04  0E00               	movlw	0
  1281  003F06  0100               	movlb	0	; () banked
  1282  003F08  59DF               	subwfb	(_distance_average+1)& (0+255),w,b	;volatile
  1283  003F0A  A0D8               	btfss	status,0,c
  1284  003F0C  D023               	goto	l690
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;parcheggio.c: 202: PORTBbits.RB5 = 1;
  1288  003F0E  8A81               	bsf	3969,5,c	;volatile
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;parcheggio.c: 203: data[0] = 1;
  1292  003F10  0E01               	movlw	1
  1293  003F12  0101               	movlb	1	; () banked
  1294  003F14  6F1F               	movwf	_data& (0+255),b
  1295                           
  1296                           ; BSR set to: 1
  1297                           ;parcheggio.c: 204: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1298  003F16  0E0B               	movlw	11
  1299  003F18  0100               	movlb	0	; () banked
  1300  003F1A  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1301  003F1C  0E00               	movlw	0
  1302  003F1E  0100               	movlb	0	; () banked
  1303  003F20  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1304  003F22  0E00               	movlw	0
  1305  003F24  0100               	movlb	0	; () banked
  1306  003F26  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1307  003F28  0E00               	movlw	0
  1308  003F2A  0100               	movlb	0	; () banked
  1309  003F2C  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1310  003F2E  0101               	movlb	1	; () banked
  1311  003F30  0E01               	movlw	high _data
  1312  003F32  0100               	movlb	0	; () banked
  1313  003F34  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1314  003F36  0101               	movlb	1	; () banked
  1315  003F38  0E1F               	movlw	low _data
  1316  003F3A  0100               	movlb	0	; () banked
  1317  003F3C  6F79               	movwf	CANsendMessage@data& (0+255),b
  1318  003F3E  0E01               	movlw	1
  1319  003F40  0100               	movlb	0	; () banked
  1320  003F42  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1321  003F44  0EBC               	movlw	188
  1322  003F46  0100               	movlb	0	; () banked
  1323  003F48  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1324  003F4A  ECAC  F00C         	call	_CANsendMessage	;wreg free
  1325                           
  1326                           ;parcheggio.c: 205: distance_received = 0;
  1327  003F4E  0100               	movlb	(_distance_received/(0+8)) shr (0+8)
  1328  003F50  9647               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1329                           
  1330                           ;parcheggio.c: 206: } else {
  1331  003F52  D003               	goto	l677
  1332  003F54                     l690:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;parcheggio.c: 207: distance_received = 0;
  1336  003F54  0100               	movlb	(_distance_received/(0+8)) shr (0+8)
  1337  003F56  9647               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1338                           
  1339                           ;parcheggio.c: 208: PORTBbits.RB5 = 0;
  1340  003F58  9A81               	bcf	3969,5,c	;volatile
  1341  003F5A                     l677:
  1342  003F5A  0100               	movlb	(_activation/(0+8)) shr (0+8)
  1343  003F5C  A047               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1344  003F5E  0012               	return	
  1345  003F60  BA81               	btfsc	3969,5,c	;volatile
  1346  003F62  0012               	return	
  1347  003F64  D751               	goto	l4298
  1348  003F66                     __end_of_park_search:
  1349                           	opt stack 0
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postinc2	equ	0xFDE
  1357                           postdec2	equ	0xFDD
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function _park_routine *****************
  1361 ;; Defined at:
  1362 ;;		line 214 in file "parcheggio.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;		None               void
  1369 ;; Registers used:
  1370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    6
  1383 ;; This function calls:
  1384 ;;		_can_send
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text2
  1391  00482C                     __ptext2:
  1392                           	opt stack 0
  1393  00482C                     _park_routine:
  1394                           	opt stack 24
  1395                           
  1396                           ;parcheggio.c: 215: while ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1397                           
  1398                           ;incstack = 0
  1399  00482C  D00B               	goto	l4376
  1400  00482E                     l4372:
  1401                           
  1402                           ;parcheggio.c: 216: set_speed = 0;
  1403  00482E  0E00               	movlw	0
  1404  004830  0100               	movlb	0	; () banked
  1405  004832  6FE3               	movwf	(_set_speed+1)& (0+255),b
  1406  004834  0E00               	movlw	0
  1407  004836  0100               	movlb	0	; () banked
  1408  004838  6FE2               	movwf	_set_speed& (0+255),b
  1409                           
  1410                           ;parcheggio.c: 217: data_brake[0] = 0;
  1411  00483A  0E00               	movlw	0
  1412  00483C  0101               	movlb	1	; () banked
  1413  00483E  6F27               	movwf	_data_brake& (0+255),b
  1414                           
  1415                           ; BSR set to: 1
  1416                           ;parcheggio.c: 218: can_send();
  1417  004840  EC79  F021         	call	_can_send	;wreg free
  1418  004844                     l4376:
  1419  004844  AA81               	btfss	3969,5,c	;volatile
  1420  004846  0012               	return	
  1421  004848  0100               	movlb	(_activation/(0+8)) shr (0+8)
  1422  00484A  A047               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1423  00484C  0012               	return	
  1424  00484E  D7EF               	goto	l4372
  1425  004850                     __end_of_park_routine:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           postinc2	equ	0xFDE
  1434                           postdec2	equ	0xFDD
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _can_send *****************
  1438 ;; Defined at:
  1439 ;;		line 223 in file "parcheggio.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    5
  1460 ;; This function calls:
  1461 ;;		_CANisTxReady
  1462 ;;		_CANsendMessage
  1463 ;; This function is called by:
  1464 ;;		_park_routine
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text3
  1469  0042F2                     __ptext3:
  1470                           	opt stack 0
  1471  0042F2                     _can_send:
  1472                           	opt stack 24
  1473  0042F2                     l4004:
  1474  0042F2  EC28  F024         	call	_CANisTxReady	;wreg free
  1475  0042F6  0100               	movlb	0	; () banked
  1476  0042F8  6F85               	movwf	??_can_send& (0+255),b
  1477  0042FA  0100               	movlb	0	; () banked
  1478  0042FC  0585               	decf	??_can_send& (0+255),w,b
  1479  0042FE  A4D8               	btfss	status,2,c
  1480  004300  D7F8               	goto	l4004
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;parcheggio.c: 225: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1484                           
  1485                           ; BSR set to: 0
  1486  004302  0E05               	movlw	5
  1487  004304  0100               	movlb	0	; () banked
  1488  004306  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1489  004308  0E00               	movlw	0
  1490  00430A  0100               	movlb	0	; () banked
  1491  00430C  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1492  00430E  0E00               	movlw	0
  1493  004310  0100               	movlb	0	; () banked
  1494  004312  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1495  004314  0E00               	movlw	0
  1496  004316  0100               	movlb	0	; () banked
  1497  004318  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1498  00431A  0101               	movlb	1	; () banked
  1499  00431C  0E01               	movlw	high _data_steering
  1500  00431E  0100               	movlb	0	; () banked
  1501  004320  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1502  004322  0101               	movlb	1	; () banked
  1503  004324  0E37               	movlw	low _data_steering
  1504  004326  0100               	movlb	0	; () banked
  1505  004328  6F79               	movwf	CANsendMessage@data& (0+255),b
  1506  00432A  0E08               	movlw	8
  1507  00432C  0100               	movlb	0	; () banked
  1508  00432E  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1509  004330  0EBC               	movlw	188
  1510  004332  0100               	movlb	0	; () banked
  1511  004334  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1512  004336  ECAC  F00C         	call	_CANsendMessage	;wreg free
  1513                           
  1514                           ;parcheggio.c: 226: data_speed[0] = set_speed;
  1515  00433A  C0E2  F12F         	movff	_set_speed,_data_speed
  1516                           
  1517                           ;parcheggio.c: 227: data_speed[1] = (set_speed >> 8);
  1518  00433E  0100               	movlb	0	; () banked
  1519  004340  C0E3  F085         	movff	_set_speed+1,??_can_send
  1520  004344  C085  F086         	movff	??_can_send,??_can_send+1
  1521  004348  0100               	movlb	0	; () banked
  1522  00434A  6B87               	clrf	(??_can_send+2)& (0+255),b
  1523  00434C  0100               	movlb	0	; () banked
  1524  00434E  5186               	movf	(??_can_send+1)& (0+255),w,b
  1525  004350  0101               	movlb	1	; () banked
  1526  004352  6F30               	movwf	(_data_speed+1)& (0+255),b
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;parcheggio.c: 228: data_speed[2] = dir;
  1530  004354  0100               	movlb	(_dir/(0+8)) shr (0+8)
  1531  004356  0E00               	movlw	0
  1532  004358  B247               	btfsc	_dir/(0+8),_dir& (0+7),c
  1533  00435A  0E01               	movlw	1
  1534  00435C  0101               	movlb	1	; () banked
  1535  00435E  6F31               	movwf	(_data_speed+2)& (0+255),b
  1536  004360                     l4014:
  1537  004360  EC28  F024         	call	_CANisTxReady	;wreg free
  1538  004364  0100               	movlb	0	; () banked
  1539  004366  6F85               	movwf	??_can_send& (0+255),b
  1540  004368  0100               	movlb	0	; () banked
  1541  00436A  0585               	decf	??_can_send& (0+255),w,b
  1542  00436C  A4D8               	btfss	status,2,c
  1543  00436E  D7F8               	goto	l4014
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;parcheggio.c: 230: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1547                           
  1548                           ; BSR set to: 0
  1549  004370  0E03               	movlw	3
  1550  004372  0100               	movlb	0	; () banked
  1551  004374  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1552  004376  0E00               	movlw	0
  1553  004378  0100               	movlb	0	; () banked
  1554  00437A  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1555  00437C  0E00               	movlw	0
  1556  00437E  0100               	movlb	0	; () banked
  1557  004380  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1558  004382  0E00               	movlw	0
  1559  004384  0100               	movlb	0	; () banked
  1560  004386  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1561  004388  0101               	movlb	1	; () banked
  1562  00438A  0E01               	movlw	high _data_speed
  1563  00438C  0100               	movlb	0	; () banked
  1564  00438E  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1565  004390  0101               	movlb	1	; () banked
  1566  004392  0E2F               	movlw	low _data_speed
  1567  004394  0100               	movlb	0	; () banked
  1568  004396  6F79               	movwf	CANsendMessage@data& (0+255),b
  1569  004398  0E08               	movlw	8
  1570  00439A  0100               	movlb	0	; () banked
  1571  00439C  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1572  00439E  0EBC               	movlw	188
  1573  0043A0  0100               	movlb	0	; () banked
  1574  0043A2  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1575  0043A4  ECAC  F00C         	call	_CANsendMessage	;wreg free
  1576  0043A8                     l4018:
  1577  0043A8  EC28  F024         	call	_CANisTxReady	;wreg free
  1578  0043AC  0100               	movlb	0	; () banked
  1579  0043AE  6F85               	movwf	??_can_send& (0+255),b
  1580  0043B0  0100               	movlb	0	; () banked
  1581  0043B2  0585               	decf	??_can_send& (0+255),w,b
  1582  0043B4  A4D8               	btfss	status,2,c
  1583  0043B6  D7F8               	goto	l4018
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;parcheggio.c: 232: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
  1587                           
  1588                           ; BSR set to: 0
  1589  0043B8  0E04               	movlw	4
  1590  0043BA  0100               	movlb	0	; () banked
  1591  0043BC  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1592  0043BE  0E00               	movlw	0
  1593  0043C0  0100               	movlb	0	; () banked
  1594  0043C2  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1595  0043C4  0E00               	movlw	0
  1596  0043C6  0100               	movlb	0	; () banked
  1597  0043C8  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1598  0043CA  0E00               	movlw	0
  1599  0043CC  0100               	movlb	0	; () banked
  1600  0043CE  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1601  0043D0  0101               	movlb	1	; () banked
  1602  0043D2  0E01               	movlw	high _data_brake
  1603  0043D4  0100               	movlb	0	; () banked
  1604  0043D6  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1605  0043D8  0101               	movlb	1	; () banked
  1606  0043DA  0E27               	movlw	low _data_brake
  1607  0043DC  0100               	movlb	0	; () banked
  1608  0043DE  6F79               	movwf	CANsendMessage@data& (0+255),b
  1609  0043E0  0E08               	movlw	8
  1610  0043E2  0100               	movlb	0	; () banked
  1611  0043E4  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1612  0043E6  0EBD               	movlw	189
  1613  0043E8  0100               	movlb	0	; () banked
  1614  0043EA  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1615  0043EC  ECAC  F00C         	call	_CANsendMessage	;wreg free
  1616  0043F0  0012               	return	
  1617  0043F2                     __end_of_can_send:
  1618                           	opt stack 0
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postinc2	equ	0xFDE
  1626                           postdec2	equ	0xFDD
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _CANsendMessage *****************
  1630 ;; Defined at:
  1631 ;;		line 294 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  identifier      4   21[BANK0 ] unsigned long 
  1634 ;;  data            2   25[BANK0 ] PTR unsigned char 
  1635 ;;		 -> data_speed(8), data_steering(8), data_brake(8), data(8), 
  1636 ;;  dataLength      1   27[BANK0 ] unsigned char 
  1637 ;;  flags           1   28[BANK0 ] enum E16376
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  tamp            4   33[BANK0 ] unsigned long 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;		None               void
  1642 ;; Registers used:
  1643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1650 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;Total ram usage:       16 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    4
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_park_search
  1660 ;;		_can_send
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text4
  1665  001958                     __ptext4:
  1666                           	opt stack 0
  1667  001958                     _CANsendMessage:
  1668                           	opt stack 25
  1669                           
  1670                           ;inc\CANlib.h: 296: unsigned long tamp;
  1671                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1672                           
  1673                           ;incstack = 0
  1674  001958  010F               	movlb	15	; () banked
  1675  00195A  B740               	btfsc	64,3,b	;volatile
  1676  00195C  D166               	goto	l357
  1677                           
  1678                           ; BSR set to: 15
  1679                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1680  00195E  C07B  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1681                           
  1682                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1683  001962  0100               	movlb	0	; () banked
  1684  001964  AD7C               	btfss	CANsendMessage@flags& (0+255),6,b
  1685  001966  D003               	goto	l358
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1689  001968  010F               	movlb	15	; () banked
  1690  00196A  8D45               	bsf	69,6,b	;volatile
  1691  00196C  D002               	goto	l359
  1692  00196E                     l358:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;inc\CANlib.h: 302: else
  1696                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1697  00196E  010F               	movlb	15	; () banked
  1698  001970  9D45               	bcf	69,6,b	;volatile
  1699  001972                     l359:
  1700                           
  1701                           ; BSR set to: 15
  1702                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1703  001972  0100               	movlb	0	; () banked
  1704  001974  A77C               	btfss	CANsendMessage@flags& (0+255),3,b
  1705  001976  D087               	goto	l360
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;inc\CANlib.h: 306: {
  1709                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1710  001978  0100               	movlb	0	; () banked
  1711  00197A  5175               	movf	CANsendMessage@identifier& (0+255),w,b
  1712  00197C  0100               	movlb	0	; () banked
  1713  00197E  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  1714  001980  0100               	movlb	0	; () banked
  1715  001982  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1716  001984  0100               	movlb	0	; () banked
  1717  001986  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1718  001988  0100               	movlb	0	; () banked
  1719  00198A  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1723  00198C  C081  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1727  001990  0E00               	movlw	0
  1728  001992  0100               	movlb	0	; () banked
  1729  001994  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  1730  001996  0100               	movlb	0	; () banked
  1731  001998  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  1732  00199A  0EFF               	movlw	255
  1733  00199C  0100               	movlb	0	; () banked
  1734  00199E  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1735  0019A0  0100               	movlb	0	; () banked
  1736  0019A2  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1737  0019A4  0E00               	movlw	0
  1738  0019A6  0100               	movlb	0	; () banked
  1739  0019A8  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1740  0019AA  0100               	movlb	0	; () banked
  1741  0019AC  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1742  0019AE  0E00               	movlw	0
  1743  0019B0  0100               	movlb	0	; () banked
  1744  0019B2  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1745  0019B4  0100               	movlb	0	; () banked
  1746  0019B6  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1750  0019B8  0100               	movlb	0	; () banked
  1751  0019BA  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  1752  0019BE  0100               	movlb	0	; () banked
  1753  0019C0  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1754  0019C4  0100               	movlb	0	; () banked
  1755  0019C6  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1756  0019CA  0100               	movlb	0	; () banked
  1757  0019CC  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1758  0019D0  C07E  F07D         	movff	??_CANsendMessage+1,??_CANsendMessage
  1759  0019D4  C07F  F07E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1760  0019D8  C080  F07F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1761  0019DC  0100               	movlb	0	; () banked
  1762  0019DE  6B80               	clrf	(??_CANsendMessage+3)& (0+255),b
  1763  0019E0  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  1764  0019E4  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1765  0019E8  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1766  0019EC  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1770  0019F0  C081  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1774  0019F4  0E00               	movlw	0
  1775  0019F6  010F               	movlb	15	; () banked
  1776  0019F8  6F42               	movwf	66,b	;volatile
  1777                           
  1778                           ; BSR set to: 15
  1779                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1780  0019FA  010F               	movlb	15	; () banked
  1781  0019FC  8742               	bsf	66,3,b	;volatile
  1782                           
  1783                           ; BSR set to: 15
  1784                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1785  0019FE  0100               	movlb	0	; () banked
  1786  001A00  A177               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1787  001A02  D002               	goto	l361
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1791  001A04  010F               	movlb	15	; () banked
  1792  001A06  8142               	bsf	66,0,b	;volatile
  1793  001A08                     l361:
  1794                           
  1795                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1796  001A08  0100               	movlb	0	; () banked
  1797  001A0A  A377               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1798  001A0C  D002               	goto	l362
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1802  001A0E  010F               	movlb	15	; () banked
  1803  001A10  8342               	bsf	66,1,b	;volatile
  1804  001A12                     l362:
  1805                           
  1806                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1807  001A12  0100               	movlb	0	; () banked
  1808  001A14  A577               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1809  001A16  D002               	goto	l363
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1813  001A18  010F               	movlb	15	; () banked
  1814  001A1A  8B42               	bsf	66,5,b	;volatile
  1815  001A1C                     l363:
  1816                           
  1817                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1818  001A1C  0100               	movlb	0	; () banked
  1819  001A1E  A777               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1820  001A20  D002               	goto	l364
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1824  001A22  010F               	movlb	15	; () banked
  1825  001A24  8D42               	bsf	66,6,b	;volatile
  1826  001A26                     l364:
  1827                           
  1828                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1829  001A26  0100               	movlb	0	; () banked
  1830  001A28  A977               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1831  001A2A  D002               	goto	l3676
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1835  001A2C  010F               	movlb	15	; () banked
  1836  001A2E  8F42               	bsf	66,7,b	;volatile
  1837  001A30                     l3676:
  1838                           
  1839                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1840  001A30  0100               	movlb	0	; () banked
  1841  001A32  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  1842  001A36  0100               	movlb	0	; () banked
  1843  001A38  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1844  001A3C  0100               	movlb	0	; () banked
  1845  001A3E  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1846  001A42  0100               	movlb	0	; () banked
  1847  001A44  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1848  001A48  0E16               	movlw	22
  1849  001A4A  D006               	goto	u4240
  1850  001A4C                     u4245:
  1851  001A4C  0100               	movlb	0	; () banked
  1852  001A4E  90D8               	bcf	status,0,c
  1853  001A50  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1854  001A52  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1855  001A54  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1856  001A56  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  1857  001A58                     u4240:
  1858  001A58  2EE8               	decfsz	wreg,f,c
  1859  001A5A  D7F8               	goto	u4245
  1860  001A5C  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  1861  001A60  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1862  001A64  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1863  001A68  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1867  001A6C  0100               	movlb	0	; () banked
  1868  001A6E  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  1869  001A70  0100               	movlb	0	; () banked
  1870  001A72  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  1871  001A74  0100               	movlb	0	; () banked
  1872  001A76  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1873  001A78  0100               	movlb	0	; () banked
  1874  001A7A  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1875  001A7C  0100               	movlb	0	; () banked
  1876  001A7E  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1880  001A80  C081  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1881                           
  1882                           ;inc\CANlib.h: 332: }
  1883  001A84  D064               	goto	l3696
  1884  001A86                     l360:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;inc\CANlib.h: 334: else
  1888                           ;inc\CANlib.h: 336: {
  1889                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1890  001A86  010F               	movlb	15	; () banked
  1891  001A88  9742               	bcf	66,3,b	;volatile
  1892                           
  1893                           ; BSR set to: 15
  1894                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1895  001A8A  0100               	movlb	0	; () banked
  1896  001A8C  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  1897  001A90  0100               	movlb	0	; () banked
  1898  001A92  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1899  001A96  0100               	movlb	0	; () banked
  1900  001A98  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1901  001A9C  0100               	movlb	0	; () banked
  1902  001A9E  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1903  001AA2  0E04               	movlw	4
  1904  001AA4  D006               	goto	u4250
  1905  001AA6                     u4255:
  1906  001AA6  0100               	movlb	0	; () banked
  1907  001AA8  90D8               	bcf	status,0,c
  1908  001AAA  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1909  001AAC  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1910  001AAE  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1911  001AB0  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  1912  001AB2                     u4250:
  1913  001AB2  2EE8               	decfsz	wreg,f,c
  1914  001AB4  D7F8               	goto	u4255
  1915  001AB6  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  1916  001ABA  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1917  001ABE  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1918  001AC2  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1922  001AC6  0100               	movlb	0	; () banked
  1923  001AC8  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  1924  001ACA  0100               	movlb	0	; () banked
  1925  001ACC  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  1926  001ACE  0100               	movlb	0	; () banked
  1927  001AD0  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1928  001AD2  0100               	movlb	0	; () banked
  1929  001AD4  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1930  001AD6  0100               	movlb	0	; () banked
  1931  001AD8  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1935  001ADA  C081  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1939  001ADE  0E07               	movlw	7
  1940  001AE0  0100               	movlb	0	; () banked
  1941  001AE2  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  1942  001AE4  0100               	movlb	0	; () banked
  1943  001AE6  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  1944  001AE8  0E00               	movlw	0
  1945  001AEA  0100               	movlb	0	; () banked
  1946  001AEC  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1947  001AEE  0100               	movlb	0	; () banked
  1948  001AF0  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1949  001AF2  0E00               	movlw	0
  1950  001AF4  0100               	movlb	0	; () banked
  1951  001AF6  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1952  001AF8  0100               	movlb	0	; () banked
  1953  001AFA  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1954  001AFC  0E00               	movlw	0
  1955  001AFE  0100               	movlb	0	; () banked
  1956  001B00  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1957  001B02  0100               	movlb	0	; () banked
  1958  001B04  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1962  001B06  0100               	movlb	0	; () banked
  1963  001B08  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  1964  001B0C  0100               	movlb	0	; () banked
  1965  001B0E  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1966  001B12  0100               	movlb	0	; () banked
  1967  001B14  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1968  001B18  0100               	movlb	0	; () banked
  1969  001B1A  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1970  001B1E  0E05               	movlw	5
  1971  001B20                     u4265:
  1972  001B20  90D8               	bcf	status,0,c
  1973  001B22  0100               	movlb	0	; () banked
  1974  001B24  377D               	rlcf	??_CANsendMessage& (0+255),f,b
  1975  001B26  377E               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1976  001B28  377F               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1977  001B2A  3780               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1978  001B2C  2EE8               	decfsz	wreg,f,c
  1979  001B2E  D7F8               	goto	u4265
  1980  001B30  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  1981  001B34  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1982  001B38  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1983  001B3C  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1987  001B40  010F               	movlb	15	; () banked
  1988  001B42  5142               	movf	66,w,b	;volatile
  1989  001B44  0B1F               	andlw	31
  1990  001B46  010F               	movlb	15	; () banked
  1991  001B48  6F42               	movwf	66,b	;volatile
  1992                           
  1993                           ; BSR set to: 15
  1994                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1995  001B4A  C081  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1996  001B4E                     l3696:
  1997                           
  1998                           ;inc\CANlib.h: 347: }
  1999                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  2000  001B4E  0100               	movlb	0	; () banked
  2001  001B50  A17C               	btfss	CANsendMessage@flags& (0+255),0,b
  2002  001B52  D003               	goto	l367
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2006  001B54  010F               	movlb	15	; () banked
  2007  001B56  8140               	bsf	64,0,b	;volatile
  2008  001B58  D002               	goto	l368
  2009  001B5A                     l367:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;inc\CANlib.h: 351: else
  2013                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2014  001B5A  010F               	movlb	15	; () banked
  2015  001B5C  9140               	bcf	64,0,b	;volatile
  2016  001B5E                     l368:
  2017                           
  2018                           ; BSR set to: 15
  2019                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2020  001B5E  0100               	movlb	0	; () banked
  2021  001B60  A37C               	btfss	CANsendMessage@flags& (0+255),1,b
  2022  001B62  D003               	goto	l369
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2026  001B64  010F               	movlb	15	; () banked
  2027  001B66  8340               	bsf	64,1,b	;volatile
  2028  001B68  D002               	goto	l3702
  2029  001B6A                     l369:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;inc\CANlib.h: 355: else
  2033                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2034  001B6A  010F               	movlb	15	; () banked
  2035  001B6C  9340               	bcf	64,1,b	;volatile
  2036  001B6E                     l3702:
  2037                           
  2038                           ; BSR set to: 15
  2039                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2040  001B6E  C079  FFD9         	movff	CANsendMessage@data,fsr2l
  2041  001B72  C07A  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2042  001B76  50DF               	movf	indf2,w,c
  2043  001B78  010F               	movlb	15	; () banked
  2044  001B7A  6F46               	movwf	70,b	;volatile
  2045                           
  2046                           ; BSR set to: 15
  2047                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2048  001B7C  0100               	movlb	0	; () banked
  2049  001B7E  EE20 F001          	lfsr	2,1
  2050  001B82  0100               	movlb	0	; () banked
  2051  001B84  5179               	movf	CANsendMessage@data& (0+255),w,b
  2052  001B86  26D9               	addwf	fsr2l,f,c
  2053  001B88  0100               	movlb	0	; () banked
  2054  001B8A  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2055  001B8C  22DA               	addwfc	fsr2h,f,c
  2056  001B8E  50DF               	movf	indf2,w,c
  2057  001B90  010F               	movlb	15	; () banked
  2058  001B92  6F47               	movwf	71,b	;volatile
  2059                           
  2060                           ; BSR set to: 15
  2061                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2062  001B94  0100               	movlb	0	; () banked
  2063  001B96  EE20 F002          	lfsr	2,2
  2064  001B9A  0100               	movlb	0	; () banked
  2065  001B9C  5179               	movf	CANsendMessage@data& (0+255),w,b
  2066  001B9E  26D9               	addwf	fsr2l,f,c
  2067  001BA0  0100               	movlb	0	; () banked
  2068  001BA2  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2069  001BA4  22DA               	addwfc	fsr2h,f,c
  2070  001BA6  50DF               	movf	indf2,w,c
  2071  001BA8  010F               	movlb	15	; () banked
  2072  001BAA  6F48               	movwf	72,b	;volatile
  2073                           
  2074                           ; BSR set to: 15
  2075                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2076  001BAC  0100               	movlb	0	; () banked
  2077  001BAE  EE20 F003          	lfsr	2,3
  2078  001BB2  0100               	movlb	0	; () banked
  2079  001BB4  5179               	movf	CANsendMessage@data& (0+255),w,b
  2080  001BB6  26D9               	addwf	fsr2l,f,c
  2081  001BB8  0100               	movlb	0	; () banked
  2082  001BBA  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2083  001BBC  22DA               	addwfc	fsr2h,f,c
  2084  001BBE  50DF               	movf	indf2,w,c
  2085  001BC0  010F               	movlb	15	; () banked
  2086  001BC2  6F49               	movwf	73,b	;volatile
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2090  001BC4  0100               	movlb	0	; () banked
  2091  001BC6  EE20 F004          	lfsr	2,4
  2092  001BCA  0100               	movlb	0	; () banked
  2093  001BCC  5179               	movf	CANsendMessage@data& (0+255),w,b
  2094  001BCE  26D9               	addwf	fsr2l,f,c
  2095  001BD0  0100               	movlb	0	; () banked
  2096  001BD2  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2097  001BD4  22DA               	addwfc	fsr2h,f,c
  2098  001BD6  50DF               	movf	indf2,w,c
  2099  001BD8  010F               	movlb	15	; () banked
  2100  001BDA  6F4A               	movwf	74,b	;volatile
  2101                           
  2102                           ; BSR set to: 15
  2103                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2104  001BDC  0100               	movlb	0	; () banked
  2105  001BDE  EE20 F005          	lfsr	2,5
  2106  001BE2  0100               	movlb	0	; () banked
  2107  001BE4  5179               	movf	CANsendMessage@data& (0+255),w,b
  2108  001BE6  26D9               	addwf	fsr2l,f,c
  2109  001BE8  0100               	movlb	0	; () banked
  2110  001BEA  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2111  001BEC  22DA               	addwfc	fsr2h,f,c
  2112  001BEE  50DF               	movf	indf2,w,c
  2113  001BF0  010F               	movlb	15	; () banked
  2114  001BF2  6F4B               	movwf	75,b	;volatile
  2115                           
  2116                           ; BSR set to: 15
  2117                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2118  001BF4  0100               	movlb	0	; () banked
  2119  001BF6  EE20 F006          	lfsr	2,6
  2120  001BFA  0100               	movlb	0	; () banked
  2121  001BFC  5179               	movf	CANsendMessage@data& (0+255),w,b
  2122  001BFE  26D9               	addwf	fsr2l,f,c
  2123  001C00  0100               	movlb	0	; () banked
  2124  001C02  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2125  001C04  22DA               	addwfc	fsr2h,f,c
  2126  001C06  50DF               	movf	indf2,w,c
  2127  001C08  010F               	movlb	15	; () banked
  2128  001C0A  6F4C               	movwf	76,b	;volatile
  2129                           
  2130                           ; BSR set to: 15
  2131                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2132  001C0C  0100               	movlb	0	; () banked
  2133  001C0E  EE20 F007          	lfsr	2,7
  2134  001C12  0100               	movlb	0	; () banked
  2135  001C14  5179               	movf	CANsendMessage@data& (0+255),w,b
  2136  001C16  26D9               	addwf	fsr2l,f,c
  2137  001C18  0100               	movlb	0	; () banked
  2138  001C1A  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2139  001C1C  22DA               	addwfc	fsr2h,f,c
  2140  001C1E  50DF               	movf	indf2,w,c
  2141  001C20  010F               	movlb	15	; () banked
  2142  001C22  6F4D               	movwf	77,b	;volatile
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2146  001C24  010F               	movlb	15	; () banked
  2147  001C26  8740               	bsf	64,3,b	;volatile
  2148  001C28  0012               	return	
  2149  001C2A                     l357:
  2150                           
  2151                           ; BSR set to: 15
  2152                           ;inc\CANlib.h: 369: }
  2153                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2154  001C2A  010F               	movlb	15	; () banked
  2155  001C2C  B730               	btfsc	48,3,b	;volatile
  2156  001C2E  D166               	goto	l372
  2157                           
  2158                           ; BSR set to: 15
  2159                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2160  001C30  C07B  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2161                           
  2162                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2163  001C34  0100               	movlb	0	; () banked
  2164  001C36  AD7C               	btfss	CANsendMessage@flags& (0+255),6,b
  2165  001C38  D003               	goto	l373
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2169  001C3A  010F               	movlb	15	; () banked
  2170  001C3C  8D35               	bsf	53,6,b	;volatile
  2171  001C3E  D002               	goto	l374
  2172  001C40                     l373:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;inc\CANlib.h: 378: else
  2176                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2177  001C40  010F               	movlb	15	; () banked
  2178  001C42  9D35               	bcf	53,6,b	;volatile
  2179  001C44                     l374:
  2180                           
  2181                           ; BSR set to: 15
  2182                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2183  001C44  0100               	movlb	0	; () banked
  2184  001C46  A77C               	btfss	CANsendMessage@flags& (0+255),3,b
  2185  001C48  D087               	goto	l375
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;inc\CANlib.h: 382: {
  2189                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2190  001C4A  0100               	movlb	0	; () banked
  2191  001C4C  5175               	movf	CANsendMessage@identifier& (0+255),w,b
  2192  001C4E  0100               	movlb	0	; () banked
  2193  001C50  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2194  001C52  0100               	movlb	0	; () banked
  2195  001C54  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2196  001C56  0100               	movlb	0	; () banked
  2197  001C58  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2198  001C5A  0100               	movlb	0	; () banked
  2199  001C5C  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2203  001C5E  C081  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2207  001C62  0E00               	movlw	0
  2208  001C64  0100               	movlb	0	; () banked
  2209  001C66  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  2210  001C68  0100               	movlb	0	; () banked
  2211  001C6A  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2212  001C6C  0EFF               	movlw	255
  2213  001C6E  0100               	movlb	0	; () banked
  2214  001C70  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2215  001C72  0100               	movlb	0	; () banked
  2216  001C74  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2217  001C76  0E00               	movlw	0
  2218  001C78  0100               	movlb	0	; () banked
  2219  001C7A  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2220  001C7C  0100               	movlb	0	; () banked
  2221  001C7E  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2222  001C80  0E00               	movlw	0
  2223  001C82  0100               	movlb	0	; () banked
  2224  001C84  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2225  001C86  0100               	movlb	0	; () banked
  2226  001C88  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2230  001C8A  0100               	movlb	0	; () banked
  2231  001C8C  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  2232  001C90  0100               	movlb	0	; () banked
  2233  001C92  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2234  001C96  0100               	movlb	0	; () banked
  2235  001C98  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2236  001C9C  0100               	movlb	0	; () banked
  2237  001C9E  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2238  001CA2  C07E  F07D         	movff	??_CANsendMessage+1,??_CANsendMessage
  2239  001CA6  C07F  F07E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2240  001CAA  C080  F07F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2241  001CAE  0100               	movlb	0	; () banked
  2242  001CB0  6B80               	clrf	(??_CANsendMessage+3)& (0+255),b
  2243  001CB2  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2244  001CB6  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2245  001CBA  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2246  001CBE  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2250  001CC2  C081  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2254  001CC6  0E00               	movlw	0
  2255  001CC8  010F               	movlb	15	; () banked
  2256  001CCA  6F32               	movwf	50,b	;volatile
  2257                           
  2258                           ; BSR set to: 15
  2259                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2260  001CCC  010F               	movlb	15	; () banked
  2261  001CCE  8732               	bsf	50,3,b	;volatile
  2262                           
  2263                           ; BSR set to: 15
  2264                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2265  001CD0  0100               	movlb	0	; () banked
  2266  001CD2  A177               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2267  001CD4  D002               	goto	l376
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2271  001CD6  010F               	movlb	15	; () banked
  2272  001CD8  8132               	bsf	50,0,b	;volatile
  2273  001CDA                     l376:
  2274                           
  2275                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2276  001CDA  0100               	movlb	0	; () banked
  2277  001CDC  A377               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2278  001CDE  D002               	goto	l377
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2282  001CE0  010F               	movlb	15	; () banked
  2283  001CE2  8332               	bsf	50,1,b	;volatile
  2284  001CE4                     l377:
  2285                           
  2286                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2287  001CE4  0100               	movlb	0	; () banked
  2288  001CE6  A577               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2289  001CE8  D002               	goto	l378
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2293  001CEA  010F               	movlb	15	; () banked
  2294  001CEC  8B32               	bsf	50,5,b	;volatile
  2295  001CEE                     l378:
  2296                           
  2297                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2298  001CEE  0100               	movlb	0	; () banked
  2299  001CF0  A777               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2300  001CF2  D002               	goto	l379
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2304  001CF4  010F               	movlb	15	; () banked
  2305  001CF6  8D32               	bsf	50,6,b	;volatile
  2306  001CF8                     l379:
  2307                           
  2308                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2309  001CF8  0100               	movlb	0	; () banked
  2310  001CFA  A977               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2311  001CFC  D002               	goto	l3752
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2315  001CFE  010F               	movlb	15	; () banked
  2316  001D00  8F32               	bsf	50,7,b	;volatile
  2317  001D02                     l3752:
  2318                           
  2319                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2320  001D02  0100               	movlb	0	; () banked
  2321  001D04  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  2322  001D08  0100               	movlb	0	; () banked
  2323  001D0A  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2324  001D0E  0100               	movlb	0	; () banked
  2325  001D10  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2326  001D14  0100               	movlb	0	; () banked
  2327  001D16  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2328  001D1A  0E16               	movlw	22
  2329  001D1C  D006               	goto	u4370
  2330  001D1E                     u4375:
  2331  001D1E  0100               	movlb	0	; () banked
  2332  001D20  90D8               	bcf	status,0,c
  2333  001D22  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2334  001D24  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2335  001D26  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2336  001D28  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  2337  001D2A                     u4370:
  2338  001D2A  2EE8               	decfsz	wreg,f,c
  2339  001D2C  D7F8               	goto	u4375
  2340  001D2E  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2341  001D32  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2342  001D36  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2343  001D3A  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2347  001D3E  0100               	movlb	0	; () banked
  2348  001D40  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  2349  001D42  0100               	movlb	0	; () banked
  2350  001D44  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2351  001D46  0100               	movlb	0	; () banked
  2352  001D48  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2353  001D4A  0100               	movlb	0	; () banked
  2354  001D4C  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2355  001D4E  0100               	movlb	0	; () banked
  2356  001D50  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2360  001D52  C081  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2361                           
  2362                           ;inc\CANlib.h: 407: }
  2363  001D56  D064               	goto	l3772
  2364  001D58                     l375:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;inc\CANlib.h: 409: else
  2368                           ;inc\CANlib.h: 411: {
  2369                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2370  001D58  010F               	movlb	15	; () banked
  2371  001D5A  9732               	bcf	50,3,b	;volatile
  2372                           
  2373                           ; BSR set to: 15
  2374                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2375  001D5C  0100               	movlb	0	; () banked
  2376  001D5E  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  2377  001D62  0100               	movlb	0	; () banked
  2378  001D64  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2379  001D68  0100               	movlb	0	; () banked
  2380  001D6A  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2381  001D6E  0100               	movlb	0	; () banked
  2382  001D70  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2383  001D74  0E04               	movlw	4
  2384  001D76  D006               	goto	u4380
  2385  001D78                     u4385:
  2386  001D78  0100               	movlb	0	; () banked
  2387  001D7A  90D8               	bcf	status,0,c
  2388  001D7C  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2389  001D7E  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2390  001D80  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2391  001D82  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  2392  001D84                     u4380:
  2393  001D84  2EE8               	decfsz	wreg,f,c
  2394  001D86  D7F8               	goto	u4385
  2395  001D88  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2396  001D8C  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2397  001D90  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2398  001D94  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2402  001D98  0100               	movlb	0	; () banked
  2403  001D9A  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  2404  001D9C  0100               	movlb	0	; () banked
  2405  001D9E  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2406  001DA0  0100               	movlb	0	; () banked
  2407  001DA2  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2408  001DA4  0100               	movlb	0	; () banked
  2409  001DA6  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2410  001DA8  0100               	movlb	0	; () banked
  2411  001DAA  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2415  001DAC  C081  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2419  001DB0  0E07               	movlw	7
  2420  001DB2  0100               	movlb	0	; () banked
  2421  001DB4  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  2422  001DB6  0100               	movlb	0	; () banked
  2423  001DB8  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2424  001DBA  0E00               	movlw	0
  2425  001DBC  0100               	movlb	0	; () banked
  2426  001DBE  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2427  001DC0  0100               	movlb	0	; () banked
  2428  001DC2  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2429  001DC4  0E00               	movlw	0
  2430  001DC6  0100               	movlb	0	; () banked
  2431  001DC8  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2432  001DCA  0100               	movlb	0	; () banked
  2433  001DCC  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2434  001DCE  0E00               	movlw	0
  2435  001DD0  0100               	movlb	0	; () banked
  2436  001DD2  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2437  001DD4  0100               	movlb	0	; () banked
  2438  001DD6  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2442  001DD8  0100               	movlb	0	; () banked
  2443  001DDA  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  2444  001DDE  0100               	movlb	0	; () banked
  2445  001DE0  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2446  001DE4  0100               	movlb	0	; () banked
  2447  001DE6  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2448  001DEA  0100               	movlb	0	; () banked
  2449  001DEC  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2450  001DF0  0E05               	movlw	5
  2451  001DF2                     u4395:
  2452  001DF2  90D8               	bcf	status,0,c
  2453  001DF4  0100               	movlb	0	; () banked
  2454  001DF6  377D               	rlcf	??_CANsendMessage& (0+255),f,b
  2455  001DF8  377E               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2456  001DFA  377F               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2457  001DFC  3780               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2458  001DFE  2EE8               	decfsz	wreg,f,c
  2459  001E00  D7F8               	goto	u4395
  2460  001E02  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2461  001E06  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2462  001E0A  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2463  001E0E  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2467  001E12  010F               	movlb	15	; () banked
  2468  001E14  5132               	movf	50,w,b	;volatile
  2469  001E16  0B1F               	andlw	31
  2470  001E18  010F               	movlb	15	; () banked
  2471  001E1A  6F32               	movwf	50,b	;volatile
  2472                           
  2473                           ; BSR set to: 15
  2474                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2475  001E1C  C081  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2476  001E20                     l3772:
  2477                           
  2478                           ;inc\CANlib.h: 422: }
  2479                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2480  001E20  0100               	movlb	0	; () banked
  2481  001E22  A17C               	btfss	CANsendMessage@flags& (0+255),0,b
  2482  001E24  D003               	goto	l382
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2486  001E26  010F               	movlb	15	; () banked
  2487  001E28  8130               	bsf	48,0,b	;volatile
  2488  001E2A  D002               	goto	l383
  2489  001E2C                     l382:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;inc\CANlib.h: 426: else
  2493                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2494  001E2C  010F               	movlb	15	; () banked
  2495  001E2E  9130               	bcf	48,0,b	;volatile
  2496  001E30                     l383:
  2497                           
  2498                           ; BSR set to: 15
  2499                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2500  001E30  0100               	movlb	0	; () banked
  2501  001E32  A37C               	btfss	CANsendMessage@flags& (0+255),1,b
  2502  001E34  D003               	goto	l384
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2506  001E36  010F               	movlb	15	; () banked
  2507  001E38  8330               	bsf	48,1,b	;volatile
  2508  001E3A  D002               	goto	l3778
  2509  001E3C                     l384:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;inc\CANlib.h: 430: else
  2513                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2514  001E3C  010F               	movlb	15	; () banked
  2515  001E3E  9330               	bcf	48,1,b	;volatile
  2516  001E40                     l3778:
  2517                           
  2518                           ; BSR set to: 15
  2519                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2520  001E40  C079  FFD9         	movff	CANsendMessage@data,fsr2l
  2521  001E44  C07A  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2522  001E48  50DF               	movf	indf2,w,c
  2523  001E4A  010F               	movlb	15	; () banked
  2524  001E4C  6F36               	movwf	54,b	;volatile
  2525                           
  2526                           ; BSR set to: 15
  2527                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2528  001E4E  0100               	movlb	0	; () banked
  2529  001E50  EE20 F001          	lfsr	2,1
  2530  001E54  0100               	movlb	0	; () banked
  2531  001E56  5179               	movf	CANsendMessage@data& (0+255),w,b
  2532  001E58  26D9               	addwf	fsr2l,f,c
  2533  001E5A  0100               	movlb	0	; () banked
  2534  001E5C  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2535  001E5E  22DA               	addwfc	fsr2h,f,c
  2536  001E60  50DF               	movf	indf2,w,c
  2537  001E62  010F               	movlb	15	; () banked
  2538  001E64  6F37               	movwf	55,b	;volatile
  2539                           
  2540                           ; BSR set to: 15
  2541                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2542  001E66  0100               	movlb	0	; () banked
  2543  001E68  EE20 F002          	lfsr	2,2
  2544  001E6C  0100               	movlb	0	; () banked
  2545  001E6E  5179               	movf	CANsendMessage@data& (0+255),w,b
  2546  001E70  26D9               	addwf	fsr2l,f,c
  2547  001E72  0100               	movlb	0	; () banked
  2548  001E74  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2549  001E76  22DA               	addwfc	fsr2h,f,c
  2550  001E78  50DF               	movf	indf2,w,c
  2551  001E7A  010F               	movlb	15	; () banked
  2552  001E7C  6F38               	movwf	56,b	;volatile
  2553                           
  2554                           ; BSR set to: 15
  2555                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2556  001E7E  0100               	movlb	0	; () banked
  2557  001E80  EE20 F003          	lfsr	2,3
  2558  001E84  0100               	movlb	0	; () banked
  2559  001E86  5179               	movf	CANsendMessage@data& (0+255),w,b
  2560  001E88  26D9               	addwf	fsr2l,f,c
  2561  001E8A  0100               	movlb	0	; () banked
  2562  001E8C  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2563  001E8E  22DA               	addwfc	fsr2h,f,c
  2564  001E90  50DF               	movf	indf2,w,c
  2565  001E92  010F               	movlb	15	; () banked
  2566  001E94  6F39               	movwf	57,b	;volatile
  2567                           
  2568                           ; BSR set to: 15
  2569                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2570  001E96  0100               	movlb	0	; () banked
  2571  001E98  EE20 F004          	lfsr	2,4
  2572  001E9C  0100               	movlb	0	; () banked
  2573  001E9E  5179               	movf	CANsendMessage@data& (0+255),w,b
  2574  001EA0  26D9               	addwf	fsr2l,f,c
  2575  001EA2  0100               	movlb	0	; () banked
  2576  001EA4  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2577  001EA6  22DA               	addwfc	fsr2h,f,c
  2578  001EA8  50DF               	movf	indf2,w,c
  2579  001EAA  010F               	movlb	15	; () banked
  2580  001EAC  6F3A               	movwf	58,b	;volatile
  2581                           
  2582                           ; BSR set to: 15
  2583                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2584  001EAE  0100               	movlb	0	; () banked
  2585  001EB0  EE20 F005          	lfsr	2,5
  2586  001EB4  0100               	movlb	0	; () banked
  2587  001EB6  5179               	movf	CANsendMessage@data& (0+255),w,b
  2588  001EB8  26D9               	addwf	fsr2l,f,c
  2589  001EBA  0100               	movlb	0	; () banked
  2590  001EBC  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2591  001EBE  22DA               	addwfc	fsr2h,f,c
  2592  001EC0  50DF               	movf	indf2,w,c
  2593  001EC2  010F               	movlb	15	; () banked
  2594  001EC4  6F3B               	movwf	59,b	;volatile
  2595                           
  2596                           ; BSR set to: 15
  2597                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2598  001EC6  0100               	movlb	0	; () banked
  2599  001EC8  EE20 F006          	lfsr	2,6
  2600  001ECC  0100               	movlb	0	; () banked
  2601  001ECE  5179               	movf	CANsendMessage@data& (0+255),w,b
  2602  001ED0  26D9               	addwf	fsr2l,f,c
  2603  001ED2  0100               	movlb	0	; () banked
  2604  001ED4  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2605  001ED6  22DA               	addwfc	fsr2h,f,c
  2606  001ED8  50DF               	movf	indf2,w,c
  2607  001EDA  010F               	movlb	15	; () banked
  2608  001EDC  6F3C               	movwf	60,b	;volatile
  2609                           
  2610                           ; BSR set to: 15
  2611                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2612  001EDE  0100               	movlb	0	; () banked
  2613  001EE0  EE20 F007          	lfsr	2,7
  2614  001EE4  0100               	movlb	0	; () banked
  2615  001EE6  5179               	movf	CANsendMessage@data& (0+255),w,b
  2616  001EE8  26D9               	addwf	fsr2l,f,c
  2617  001EEA  0100               	movlb	0	; () banked
  2618  001EEC  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2619  001EEE  22DA               	addwfc	fsr2h,f,c
  2620  001EF0  50DF               	movf	indf2,w,c
  2621  001EF2  010F               	movlb	15	; () banked
  2622  001EF4  6F3D               	movwf	61,b	;volatile
  2623                           
  2624                           ; BSR set to: 15
  2625                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2626  001EF6  010F               	movlb	15	; () banked
  2627  001EF8  8730               	bsf	48,3,b	;volatile
  2628  001EFA  0012               	return	
  2629  001EFC                     l372:
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;inc\CANlib.h: 445: }
  2633                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2634  001EFC  010F               	movlb	15	; () banked
  2635  001EFE  B720               	btfsc	32,3,b	;volatile
  2636  001F00  0012               	return	
  2637                           
  2638                           ; BSR set to: 15
  2639                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2640  001F02  C07B  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2641                           
  2642                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2643  001F06  0100               	movlb	0	; () banked
  2644  001F08  AD7C               	btfss	CANsendMessage@flags& (0+255),6,b
  2645  001F0A  D003               	goto	l387
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2649  001F0C  010F               	movlb	15	; () banked
  2650  001F0E  8D25               	bsf	37,6,b	;volatile
  2651  001F10  D002               	goto	l388
  2652  001F12                     l387:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;inc\CANlib.h: 454: else
  2656                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2657  001F12  010F               	movlb	15	; () banked
  2658  001F14  9D25               	bcf	37,6,b	;volatile
  2659  001F16                     l388:
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2663  001F16  0100               	movlb	0	; () banked
  2664  001F18  A77C               	btfss	CANsendMessage@flags& (0+255),3,b
  2665  001F1A  D087               	goto	l389
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;inc\CANlib.h: 458: {
  2669                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2670  001F1C  0100               	movlb	0	; () banked
  2671  001F1E  5175               	movf	CANsendMessage@identifier& (0+255),w,b
  2672  001F20  0100               	movlb	0	; () banked
  2673  001F22  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2674  001F24  0100               	movlb	0	; () banked
  2675  001F26  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2676  001F28  0100               	movlb	0	; () banked
  2677  001F2A  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2678  001F2C  0100               	movlb	0	; () banked
  2679  001F2E  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2683  001F30  C081  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2687  001F34  0E00               	movlw	0
  2688  001F36  0100               	movlb	0	; () banked
  2689  001F38  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  2690  001F3A  0100               	movlb	0	; () banked
  2691  001F3C  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2692  001F3E  0EFF               	movlw	255
  2693  001F40  0100               	movlb	0	; () banked
  2694  001F42  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2695  001F44  0100               	movlb	0	; () banked
  2696  001F46  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2697  001F48  0E00               	movlw	0
  2698  001F4A  0100               	movlb	0	; () banked
  2699  001F4C  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2700  001F4E  0100               	movlb	0	; () banked
  2701  001F50  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2702  001F52  0E00               	movlw	0
  2703  001F54  0100               	movlb	0	; () banked
  2704  001F56  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2705  001F58  0100               	movlb	0	; () banked
  2706  001F5A  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2710  001F5C  0100               	movlb	0	; () banked
  2711  001F5E  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  2712  001F62  0100               	movlb	0	; () banked
  2713  001F64  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2714  001F68  0100               	movlb	0	; () banked
  2715  001F6A  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2716  001F6E  0100               	movlb	0	; () banked
  2717  001F70  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2718  001F74  C07E  F07D         	movff	??_CANsendMessage+1,??_CANsendMessage
  2719  001F78  C07F  F07E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2720  001F7C  C080  F07F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2721  001F80  0100               	movlb	0	; () banked
  2722  001F82  6B80               	clrf	(??_CANsendMessage+3)& (0+255),b
  2723  001F84  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2724  001F88  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2725  001F8C  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2726  001F90  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2730  001F94  C081  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2734  001F98  0E00               	movlw	0
  2735  001F9A  010F               	movlb	15	; () banked
  2736  001F9C  6F22               	movwf	34,b	;volatile
  2737                           
  2738                           ; BSR set to: 15
  2739                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2740  001F9E  010F               	movlb	15	; () banked
  2741  001FA0  8722               	bsf	34,3,b	;volatile
  2742                           
  2743                           ; BSR set to: 15
  2744                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2745  001FA2  0100               	movlb	0	; () banked
  2746  001FA4  A177               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2747  001FA6  D002               	goto	l390
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2751  001FA8  010F               	movlb	15	; () banked
  2752  001FAA  8122               	bsf	34,0,b	;volatile
  2753  001FAC                     l390:
  2754                           
  2755                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2756  001FAC  0100               	movlb	0	; () banked
  2757  001FAE  A377               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2758  001FB0  D002               	goto	l391
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2762  001FB2  010F               	movlb	15	; () banked
  2763  001FB4  8322               	bsf	34,1,b	;volatile
  2764  001FB6                     l391:
  2765                           
  2766                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2767  001FB6  0100               	movlb	0	; () banked
  2768  001FB8  A577               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2769  001FBA  D002               	goto	l392
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2773  001FBC  010F               	movlb	15	; () banked
  2774  001FBE  8B22               	bsf	34,5,b	;volatile
  2775  001FC0                     l392:
  2776                           
  2777                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2778  001FC0  0100               	movlb	0	; () banked
  2779  001FC2  A777               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2780  001FC4  D002               	goto	l393
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2784  001FC6  010F               	movlb	15	; () banked
  2785  001FC8  8D22               	bsf	34,6,b	;volatile
  2786  001FCA                     l393:
  2787                           
  2788                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2789  001FCA  0100               	movlb	0	; () banked
  2790  001FCC  A977               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2791  001FCE  D002               	goto	l3828
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2795  001FD0  010F               	movlb	15	; () banked
  2796  001FD2  8F22               	bsf	34,7,b	;volatile
  2797  001FD4                     l3828:
  2798                           
  2799                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2800  001FD4  0100               	movlb	0	; () banked
  2801  001FD6  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  2802  001FDA  0100               	movlb	0	; () banked
  2803  001FDC  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2804  001FE0  0100               	movlb	0	; () banked
  2805  001FE2  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2806  001FE6  0100               	movlb	0	; () banked
  2807  001FE8  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2808  001FEC  0E16               	movlw	22
  2809  001FEE  D006               	goto	u4500
  2810  001FF0                     u4505:
  2811  001FF0  0100               	movlb	0	; () banked
  2812  001FF2  90D8               	bcf	status,0,c
  2813  001FF4  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2814  001FF6  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2815  001FF8  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2816  001FFA  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  2817  001FFC                     u4500:
  2818  001FFC  2EE8               	decfsz	wreg,f,c
  2819  001FFE  D7F8               	goto	u4505
  2820  002000  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2821  002004  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2822  002008  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2823  00200C  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2827  002010  0100               	movlb	0	; () banked
  2828  002012  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  2829  002014  0100               	movlb	0	; () banked
  2830  002016  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2831  002018  0100               	movlb	0	; () banked
  2832  00201A  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2833  00201C  0100               	movlb	0	; () banked
  2834  00201E  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2835  002020  0100               	movlb	0	; () banked
  2836  002022  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2840  002024  C081  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2841                           
  2842                           ;inc\CANlib.h: 483: }
  2843  002028  D064               	goto	l3848
  2844  00202A                     l389:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;inc\CANlib.h: 485: else
  2848                           ;inc\CANlib.h: 487: {
  2849                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2850  00202A  010F               	movlb	15	; () banked
  2851  00202C  9722               	bcf	34,3,b	;volatile
  2852                           
  2853                           ; BSR set to: 15
  2854                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2855  00202E  0100               	movlb	0	; () banked
  2856  002030  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  2857  002034  0100               	movlb	0	; () banked
  2858  002036  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2859  00203A  0100               	movlb	0	; () banked
  2860  00203C  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2861  002040  0100               	movlb	0	; () banked
  2862  002042  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2863  002046  0E04               	movlw	4
  2864  002048  D006               	goto	u4510
  2865  00204A                     u4515:
  2866  00204A  0100               	movlb	0	; () banked
  2867  00204C  90D8               	bcf	status,0,c
  2868  00204E  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2869  002050  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2870  002052  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2871  002054  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  2872  002056                     u4510:
  2873  002056  2EE8               	decfsz	wreg,f,c
  2874  002058  D7F8               	goto	u4515
  2875  00205A  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2876  00205E  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2877  002062  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2878  002066  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2882  00206A  0100               	movlb	0	; () banked
  2883  00206C  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  2884  00206E  0100               	movlb	0	; () banked
  2885  002070  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2886  002072  0100               	movlb	0	; () banked
  2887  002074  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2888  002076  0100               	movlb	0	; () banked
  2889  002078  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2890  00207A  0100               	movlb	0	; () banked
  2891  00207C  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2895  00207E  C081  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2899  002082  0E07               	movlw	7
  2900  002084  0100               	movlb	0	; () banked
  2901  002086  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  2902  002088  0100               	movlb	0	; () banked
  2903  00208A  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  2904  00208C  0E00               	movlw	0
  2905  00208E  0100               	movlb	0	; () banked
  2906  002090  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2907  002092  0100               	movlb	0	; () banked
  2908  002094  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2909  002096  0E00               	movlw	0
  2910  002098  0100               	movlb	0	; () banked
  2911  00209A  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2912  00209C  0100               	movlb	0	; () banked
  2913  00209E  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2914  0020A0  0E00               	movlw	0
  2915  0020A2  0100               	movlb	0	; () banked
  2916  0020A4  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2917  0020A6  0100               	movlb	0	; () banked
  2918  0020A8  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2922  0020AA  0100               	movlb	0	; () banked
  2923  0020AC  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  2924  0020B0  0100               	movlb	0	; () banked
  2925  0020B2  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2926  0020B6  0100               	movlb	0	; () banked
  2927  0020B8  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2928  0020BC  0100               	movlb	0	; () banked
  2929  0020BE  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2930  0020C2  0E05               	movlw	5
  2931  0020C4                     u4525:
  2932  0020C4  90D8               	bcf	status,0,c
  2933  0020C6  0100               	movlb	0	; () banked
  2934  0020C8  377D               	rlcf	??_CANsendMessage& (0+255),f,b
  2935  0020CA  377E               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2936  0020CC  377F               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2937  0020CE  3780               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2938  0020D0  2EE8               	decfsz	wreg,f,c
  2939  0020D2  D7F8               	goto	u4525
  2940  0020D4  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  2941  0020D8  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2942  0020DC  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2943  0020E0  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2947  0020E4  010F               	movlb	15	; () banked
  2948  0020E6  5122               	movf	34,w,b	;volatile
  2949  0020E8  0B1F               	andlw	31
  2950  0020EA  010F               	movlb	15	; () banked
  2951  0020EC  6F22               	movwf	34,b	;volatile
  2952                           
  2953                           ; BSR set to: 15
  2954                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2955  0020EE  C081  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2956  0020F2                     l3848:
  2957                           
  2958                           ;inc\CANlib.h: 498: }
  2959                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2960  0020F2  0100               	movlb	0	; () banked
  2961  0020F4  A17C               	btfss	CANsendMessage@flags& (0+255),0,b
  2962  0020F6  D003               	goto	l396
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2966  0020F8  010F               	movlb	15	; () banked
  2967  0020FA  8120               	bsf	32,0,b	;volatile
  2968  0020FC  D002               	goto	l397
  2969  0020FE                     l396:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;inc\CANlib.h: 502: else
  2973                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2974  0020FE  010F               	movlb	15	; () banked
  2975  002100  9120               	bcf	32,0,b	;volatile
  2976  002102                     l397:
  2977                           
  2978                           ; BSR set to: 15
  2979                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2980  002102  0100               	movlb	0	; () banked
  2981  002104  A37C               	btfss	CANsendMessage@flags& (0+255),1,b
  2982  002106  D003               	goto	l398
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2986  002108  010F               	movlb	15	; () banked
  2987  00210A  8320               	bsf	32,1,b	;volatile
  2988  00210C  D002               	goto	l3854
  2989  00210E                     l398:
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;inc\CANlib.h: 506: else
  2993                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2994  00210E  010F               	movlb	15	; () banked
  2995  002110  9320               	bcf	32,1,b	;volatile
  2996  002112                     l3854:
  2997                           
  2998                           ; BSR set to: 15
  2999                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  3000  002112  C079  FFD9         	movff	CANsendMessage@data,fsr2l
  3001  002116  C07A  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3002  00211A  50DF               	movf	indf2,w,c
  3003  00211C  010F               	movlb	15	; () banked
  3004  00211E  6F26               	movwf	38,b	;volatile
  3005                           
  3006                           ; BSR set to: 15
  3007                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  3008  002120  0100               	movlb	0	; () banked
  3009  002122  EE20 F001          	lfsr	2,1
  3010  002126  0100               	movlb	0	; () banked
  3011  002128  5179               	movf	CANsendMessage@data& (0+255),w,b
  3012  00212A  26D9               	addwf	fsr2l,f,c
  3013  00212C  0100               	movlb	0	; () banked
  3014  00212E  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3015  002130  22DA               	addwfc	fsr2h,f,c
  3016  002132  50DF               	movf	indf2,w,c
  3017  002134  010F               	movlb	15	; () banked
  3018  002136  6F27               	movwf	39,b	;volatile
  3019                           
  3020                           ; BSR set to: 15
  3021                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  3022  002138  0100               	movlb	0	; () banked
  3023  00213A  EE20 F002          	lfsr	2,2
  3024  00213E  0100               	movlb	0	; () banked
  3025  002140  5179               	movf	CANsendMessage@data& (0+255),w,b
  3026  002142  26D9               	addwf	fsr2l,f,c
  3027  002144  0100               	movlb	0	; () banked
  3028  002146  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3029  002148  22DA               	addwfc	fsr2h,f,c
  3030  00214A  50DF               	movf	indf2,w,c
  3031  00214C  010F               	movlb	15	; () banked
  3032  00214E  6F28               	movwf	40,b	;volatile
  3033                           
  3034                           ; BSR set to: 15
  3035                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  3036  002150  0100               	movlb	0	; () banked
  3037  002152  EE20 F003          	lfsr	2,3
  3038  002156  0100               	movlb	0	; () banked
  3039  002158  5179               	movf	CANsendMessage@data& (0+255),w,b
  3040  00215A  26D9               	addwf	fsr2l,f,c
  3041  00215C  0100               	movlb	0	; () banked
  3042  00215E  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3043  002160  22DA               	addwfc	fsr2h,f,c
  3044  002162  50DF               	movf	indf2,w,c
  3045  002164  010F               	movlb	15	; () banked
  3046  002166  6F29               	movwf	41,b	;volatile
  3047                           
  3048                           ; BSR set to: 15
  3049                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  3050  002168  0100               	movlb	0	; () banked
  3051  00216A  EE20 F004          	lfsr	2,4
  3052  00216E  0100               	movlb	0	; () banked
  3053  002170  5179               	movf	CANsendMessage@data& (0+255),w,b
  3054  002172  26D9               	addwf	fsr2l,f,c
  3055  002174  0100               	movlb	0	; () banked
  3056  002176  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3057  002178  22DA               	addwfc	fsr2h,f,c
  3058  00217A  50DF               	movf	indf2,w,c
  3059  00217C  010F               	movlb	15	; () banked
  3060  00217E  6F2A               	movwf	42,b	;volatile
  3061                           
  3062                           ; BSR set to: 15
  3063                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  3064  002180  0100               	movlb	0	; () banked
  3065  002182  EE20 F005          	lfsr	2,5
  3066  002186  0100               	movlb	0	; () banked
  3067  002188  5179               	movf	CANsendMessage@data& (0+255),w,b
  3068  00218A  26D9               	addwf	fsr2l,f,c
  3069  00218C  0100               	movlb	0	; () banked
  3070  00218E  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3071  002190  22DA               	addwfc	fsr2h,f,c
  3072  002192  50DF               	movf	indf2,w,c
  3073  002194  010F               	movlb	15	; () banked
  3074  002196  6F2B               	movwf	43,b	;volatile
  3075                           
  3076                           ; BSR set to: 15
  3077                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  3078  002198  0100               	movlb	0	; () banked
  3079  00219A  EE20 F006          	lfsr	2,6
  3080  00219E  0100               	movlb	0	; () banked
  3081  0021A0  5179               	movf	CANsendMessage@data& (0+255),w,b
  3082  0021A2  26D9               	addwf	fsr2l,f,c
  3083  0021A4  0100               	movlb	0	; () banked
  3084  0021A6  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3085  0021A8  22DA               	addwfc	fsr2h,f,c
  3086  0021AA  50DF               	movf	indf2,w,c
  3087  0021AC  010F               	movlb	15	; () banked
  3088  0021AE  6F2C               	movwf	44,b	;volatile
  3089                           
  3090                           ; BSR set to: 15
  3091                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  3092  0021B0  0100               	movlb	0	; () banked
  3093  0021B2  EE20 F007          	lfsr	2,7
  3094  0021B6  0100               	movlb	0	; () banked
  3095  0021B8  5179               	movf	CANsendMessage@data& (0+255),w,b
  3096  0021BA  26D9               	addwf	fsr2l,f,c
  3097  0021BC  0100               	movlb	0	; () banked
  3098  0021BE  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3099  0021C0  22DA               	addwfc	fsr2h,f,c
  3100  0021C2  50DF               	movf	indf2,w,c
  3101  0021C4  010F               	movlb	15	; () banked
  3102  0021C6  6F2D               	movwf	45,b	;volatile
  3103                           
  3104                           ; BSR set to: 15
  3105                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3106  0021C8  010F               	movlb	15	; () banked
  3107  0021CA  8720               	bsf	32,3,b	;volatile
  3108  0021CC  0012               	return	
  3109  0021CE                     __end_of_CANsendMessage:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           postinc0	equ	0xFEE
  3116                           wreg	equ	0xFE8
  3117                           indf2	equ	0xFDF
  3118                           postinc2	equ	0xFDE
  3119                           postdec2	equ	0xFDD
  3120                           fsr2h	equ	0xFDA
  3121                           fsr2l	equ	0xFD9
  3122                           status	equ	0xFD8
  3123                           
  3124 ;; *************** function _CANisTxReady *****************
  3125 ;; Defined at:
  3126 ;;		line 1154 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;Total ram usage:        1 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    4
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_park_search
  3151 ;;		_can_send
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text5
  3156  004850                     __ptext5:
  3157                           	opt stack 0
  3158  004850                     _CANisTxReady:
  3159                           	opt stack 25
  3160                           
  3161                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3162                           
  3163                           ; BSR set to: 15
  3164                           ;incstack = 0
  3165  004850  0E01               	movlw	1
  3166  004852  0100               	movlb	0	; () banked
  3167  004854  6F75               	movwf	_CANisTxReady$2808& (0+255),b
  3168                           
  3169                           ; BSR set to: 0
  3170  004856  010F               	movlb	15	; () banked
  3171  004858  A740               	btfss	64,3,b	;volatile
  3172  00485A  D009               	goto	l550
  3173                           
  3174                           ; BSR set to: 15
  3175  00485C  010F               	movlb	15	; () banked
  3176  00485E  A730               	btfss	48,3,b	;volatile
  3177  004860  D006               	goto	l550
  3178                           
  3179                           ; BSR set to: 15
  3180  004862  010F               	movlb	15	; () banked
  3181  004864  A720               	btfss	32,3,b	;volatile
  3182  004866  D003               	goto	l550
  3183                           
  3184                           ; BSR set to: 15
  3185  004868  0E00               	movlw	0
  3186  00486A  0100               	movlb	0	; () banked
  3187  00486C  6F75               	movwf	_CANisTxReady$2808& (0+255),b
  3188  00486E                     l550:
  3189  00486E  0100               	movlb	0	; () banked
  3190  004870  5175               	movf	_CANisTxReady$2808& (0+255),w,b
  3191  004872  0012               	return	
  3192  004874                     __end_of_CANisTxReady:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           postinc0	equ	0xFEE
  3199                           wreg	equ	0xFE8
  3200                           indf2	equ	0xFDF
  3201                           postinc2	equ	0xFDE
  3202                           postdec2	equ	0xFDD
  3203                           fsr2h	equ	0xFDA
  3204                           fsr2l	equ	0xFD9
  3205                           status	equ	0xFD8
  3206                           
  3207 ;; *************** function _parallelo *****************
  3208 ;; Defined at:
  3209 ;;		line 235 in file "parcheggio.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;		None               void
  3216 ;; Registers used:
  3217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;Total ram usage:        4 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    9
  3230 ;; This function calls:
  3231 ;;		___awtofl
  3232 ;;		___fldiv
  3233 ;;		___fltol
  3234 ;;		___lbtofl
  3235 ;;		_abs
  3236 ;;		_asin
  3237 ;;		_sqrt
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text6
  3244  003F66                     __ptext6:
  3245                           	opt stack 0
  3246  003F66                     _parallelo:
  3247                           	opt stack 21
  3248                           
  3249                           ;parcheggio.c: 236: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;incstack = 0
  3253  003F66  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  3254  003F6A  CFDE F168          	movff	postinc2,??_parallelo
  3255  003F6E  CFDD F169          	movff	postdec2,??_parallelo+1
  3256  003F72  0101               	movlb	1	; () banked
  3257  003F74  1F68               	comf	??_parallelo& (0+255),f,b
  3258  003F76  1F69               	comf	(??_parallelo+1)& (0+255),f,b
  3259  003F78  4B68               	infsnz	??_parallelo& (0+255),f,b
  3260  003F7A  2B69               	incf	(??_parallelo+1)& (0+255),f,b
  3261  003F7C  5001               	movf	_sensor_distance,w,c	;volatile
  3262  003F7E  0101               	movlb	1	; () banked
  3263  003F80  2568               	addwf	??_parallelo& (0+255),w,b
  3264  003F82  0100               	movlb	0	; () banked
  3265  003F84  6F75               	movwf	abs@a& (0+255),b
  3266  003F86  5002               	movf	_sensor_distance+1,w,c	;volatile
  3267  003F88  0101               	movlb	1	; () banked
  3268  003F8A  2169               	addwfc	(??_parallelo+1)& (0+255),w,b
  3269  003F8C  0100               	movlb	0	; () banked
  3270  003F8E  6F76               	movwf	(abs@a+1)& (0+255),b
  3271  003F90  EC9C  F023         	call	_abs	;wreg free
  3272  003F94  0100               	movlb	0	; () banked
  3273  003F96  5175               	movf	?_abs& (0+255),w,b
  3274  003F98  0100               	movlb	0	; () banked
  3275  003F9A  6FE6               	movwf	_alignment_gap& (0+255),b
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;parcheggio.c: 238: if (alignment_gap < 30) {
  3279  003F9C  0E1E               	movlw	30
  3280  003F9E  0100               	movlb	0	; () banked
  3281  003FA0  5DE6               	subwf	_alignment_gap& (0+255),w,b
  3282  003FA2  B0D8               	btfsc	status,0,c
  3283  003FA4  0012               	return	
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;parcheggio.c: 239: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  3287  003FA6  0E1E               	movlw	30
  3288  003FA8  5C01               	subwf	_sensor_distance,w,c	;volatile
  3289  003FAA  0E00               	movlw	0
  3290  003FAC  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  3291  003FAE  B0D8               	btfsc	status,0,c
  3292  003FB0  0012               	return	
  3293                           
  3294                           ; BSR set to: 0
  3295  003FB2  0E1E               	movlw	30
  3296  003FB4  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  3297  003FB6  0E00               	movlw	0
  3298  003FB8  5804               	subwfb	_sensor_distance+3,w,c	;volatile
  3299  003FBA  B0D8               	btfsc	status,0,c
  3300  003FBC  0012               	return	
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;parcheggio.c: 240: steering_correction = alignment_gap / 120389719028371984721;
  3304  003FBE  0E00               	movlw	0
  3305  003FC0  0100               	movlb	0	; () banked
  3306  003FC2  6FE7               	movwf	_steering_correction& (0+255),b
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;parcheggio.c: 242: x = ((1024) + (alignment_gap * alignment_gap));
  3310  003FC4  0100               	movlb	0	; () banked
  3311  003FC6  51E6               	movf	_alignment_gap& (0+255),w,b
  3312  003FC8  0100               	movlb	0	; () banked
  3313  003FCA  03E6               	mulwf	_alignment_gap& (0+255),b
  3314  003FCC  0E00               	movlw	0
  3315  003FCE  24F3               	addwf	prodl,w,c
  3316  003FD0  0100               	movlb	0	; () banked
  3317  003FD2  6FE4               	movwf	_x& (0+255),b
  3318  003FD4  0E04               	movlw	4
  3319  003FD6  20F4               	addwfc	prodh,w,c
  3320  003FD8  0100               	movlb	0	; () banked
  3321  003FDA  6FE5               	movwf	(_x+1)& (0+255),b
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;parcheggio.c: 243: x = sqrt(x);
  3325  003FDC  C0E4  F07F         	movff	_x,___awtofl@c
  3326  003FE0  C0E5  F080         	movff	_x+1,___awtofl@c+1
  3327  003FE4  ECD4  F022         	call	___awtofl	;wreg free
  3328  003FE8  C07F  F0C0         	movff	?___awtofl,sqrt@y
  3329  003FEC  C080  F0C1         	movff	?___awtofl+1,sqrt@y+1
  3330  003FF0  C081  F0C2         	movff	?___awtofl+2,sqrt@y+2
  3331  003FF4  C082  F0C3         	movff	?___awtofl+3,sqrt@y+3
  3332  003FF8  ECA5  F019         	call	_sqrt	;wreg free
  3333  003FFC  C0C0  F0C8         	movff	?_sqrt,___fltol@f1
  3334  004000  C0C1  F0C9         	movff	?_sqrt+1,___fltol@f1+1
  3335  004004  C0C2  F0CA         	movff	?_sqrt+2,___fltol@f1+2
  3336  004008  C0C3  F0CB         	movff	?_sqrt+3,___fltol@f1+3
  3337  00400C  EC49  F01E         	call	___fltol	;wreg free
  3338  004010  C0C8  F168         	movff	?___fltol,??_parallelo
  3339  004014  C0C9  F169         	movff	?___fltol+1,??_parallelo+1
  3340  004018  C0CA  F16A         	movff	?___fltol+2,??_parallelo+2
  3341  00401C  C0CB  F16B         	movff	?___fltol+3,??_parallelo+3
  3342  004020  C168  F0E4         	movff	??_parallelo,_x
  3343  004024  C169  F0E5         	movff	??_parallelo+1,_x+1
  3344                           
  3345                           ;parcheggio.c: 244: z = ((float)(alignment_gap) / x);
  3346  004028  0100               	movlb	0	; () banked
  3347  00402A  51E6               	movf	_alignment_gap& (0+255),w,b
  3348  00402C  ECF9  F023         	call	___lbtofl
  3349  004030  C07F  F096         	movff	?___lbtofl,___fldiv@f1
  3350  004034  C080  F097         	movff	?___lbtofl+1,___fldiv@f1+1
  3351  004038  C081  F098         	movff	?___lbtofl+2,___fldiv@f1+2
  3352  00403C  C082  F099         	movff	?___lbtofl+3,___fldiv@f1+3
  3353  004040  C0E4  F07F         	movff	_x,___awtofl@c
  3354  004044  C0E5  F080         	movff	_x+1,___awtofl@c+1
  3355  004048  ECD4  F022         	call	___awtofl	;wreg free
  3356  00404C  C07F  F09A         	movff	?___awtofl,___fldiv@f2
  3357  004050  C080  F09B         	movff	?___awtofl+1,___fldiv@f2+1
  3358  004054  C081  F09C         	movff	?___awtofl+2,___fldiv@f2+2
  3359  004058  C082  F09D         	movff	?___awtofl+3,___fldiv@f2+3
  3360  00405C  ECB7  F01C         	call	___fldiv	;wreg free
  3361  004060  C096  F0DA         	movff	?___fldiv,_z
  3362  004064  C097  F0DB         	movff	?___fldiv+1,_z+1
  3363  004068  C098  F0DC         	movff	?___fldiv+2,_z+2
  3364  00406C  C099  F0DD         	movff	?___fldiv+3,_z+3
  3365                           
  3366                           ;parcheggio.c: 245: z = asin(z);
  3367  004070  C0DA  F0CC         	movff	_z,asin@x
  3368  004074  C0DB  F0CD         	movff	_z+1,asin@x+1
  3369  004078  C0DC  F0CE         	movff	_z+2,asin@x+2
  3370  00407C  C0DD  F0CF         	movff	_z+3,asin@x+3
  3371  004080  EC52  F015         	call	_asin	;wreg free
  3372  004084  C0CC  F0DA         	movff	?_asin,_z
  3373  004088  C0CD  F0DB         	movff	?_asin+1,_z+1
  3374  00408C  C0CE  F0DC         	movff	?_asin+2,_z+2
  3375  004090  C0CF  F0DD         	movff	?_asin+3,_z+3
  3376                           
  3377                           ;parcheggio.c: 246: if (sensor_distance[0] > sensor_distance[1]) {
  3378  004094  5001               	movf	_sensor_distance,w,c	;volatile
  3379  004096  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  3380  004098  5002               	movf	_sensor_distance+1,w,c	;volatile
  3381  00409A  5804               	subwfb	_sensor_distance+3,w,c	;volatile
  3382  00409C  B0D8               	btfsc	status,0,c
  3383  00409E  D003               	goto	l720
  3384                           
  3385                           ;parcheggio.c: 247: steering_correction_dir = 0;
  3386  0040A0  0100               	movlb	(_steering_correction_dir/(0+8)) shr (0+8)
  3387  0040A2  9E47               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  3388                           
  3389                           ;parcheggio.c: 249: } else {
  3390  0040A4  0012               	return	
  3391  0040A6                     l720:
  3392                           
  3393                           ;parcheggio.c: 250: steering_correction_dir = 1;
  3394  0040A6  0100               	movlb	(_steering_correction_dir/(0+8)) shr (0+8)
  3395  0040A8  8E47               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  3396  0040AA  0012               	return	
  3397  0040AC                     __end_of_parallelo:
  3398                           	opt stack 0
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           prodh	equ	0xFF4
  3404                           prodl	equ	0xFF3
  3405                           postinc0	equ	0xFEE
  3406                           wreg	equ	0xFE8
  3407                           indf2	equ	0xFDF
  3408                           postinc2	equ	0xFDE
  3409                           postdec2	equ	0xFDD
  3410                           fsr2h	equ	0xFDA
  3411                           fsr2l	equ	0xFD9
  3412                           status	equ	0xFD8
  3413                           
  3414 ;; *************** function _asin *****************
  3415 ;; Defined at:
  3416 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\asin.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  x               4  108[BANK0 ] unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  y               4   33[BANK1 ] unsigned char 
  3421 ;;  sgn             4   17[BANK1 ] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  4  108[BANK0 ] unsigned char 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3431 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Totals:         0       4      24       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;Total ram usage:       28 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    8
  3438 ;; This function calls:
  3439 ;;		___fladd
  3440 ;;		___fldiv
  3441 ;;		___flge
  3442 ;;		___flmul
  3443 ;;		___flneg
  3444 ;;		_atan
  3445 ;;		_fabs
  3446 ;;		_sqrt
  3447 ;; This function is called by:
  3448 ;;		_parallelo
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text7
  3453  002AA4                     __ptext7:
  3454                           	opt stack 0
  3455  002AA4                     _asin:
  3456                           	opt stack 21
  3457                           
  3458                           ;incstack = 0
  3459  002AA4  0E00               	movlw	0
  3460  002AA6  0100               	movlb	0	; () banked
  3461  002AA8  6F9A               	movwf	___flge@ff1& (0+255),b
  3462  002AAA  0E00               	movlw	0
  3463  002AAC  0100               	movlb	0	; () banked
  3464  002AAE  6F9B               	movwf	(___flge@ff1+1)& (0+255),b
  3465  002AB0  0E80               	movlw	128
  3466  002AB2  0100               	movlb	0	; () banked
  3467  002AB4  6F9C               	movwf	(___flge@ff1+2)& (0+255),b
  3468  002AB6  0E3F               	movlw	63
  3469  002AB8  0100               	movlb	0	; () banked
  3470  002ABA  6F9D               	movwf	(___flge@ff1+3)& (0+255),b
  3471  002ABC  C0CC  F096         	movff	asin@x,fabs@d
  3472  002AC0  C0CD  F097         	movff	asin@x+1,fabs@d+1
  3473  002AC4  C0CE  F098         	movff	asin@x+2,fabs@d+2
  3474  002AC8  C0CF  F099         	movff	asin@x+3,fabs@d+3
  3475  002ACC  ECBC  F023         	call	_fabs	;wreg free
  3476  002AD0  C096  F09E         	movff	?_fabs,___flge@ff2
  3477  002AD4  C097  F09F         	movff	?_fabs+1,___flge@ff2+1
  3478  002AD8  C098  F0A0         	movff	?_fabs+2,___flge@ff2+2
  3479  002ADC  C099  F0A1         	movff	?_fabs+3,___flge@ff2+3
  3480  002AE0  ECF1  F020         	call	___flge	;wreg free
  3481  002AE4  B0D8               	btfsc	status,0,c
  3482  002AE6  D013               	goto	l4820
  3483  002AE8  0E00               	movlw	0
  3484  002AEA  0100               	movlb	0	; () banked
  3485  002AEC  6FE1               	movwf	(_errno+1)& (0+255),b
  3486  002AEE  0E21               	movlw	33
  3487  002AF0  0100               	movlb	0	; () banked
  3488  002AF2  6FE0               	movwf	_errno& (0+255),b
  3489  002AF4  0E00               	movlw	0
  3490  002AF6  0100               	movlb	0	; () banked
  3491  002AF8  6FCC               	movwf	?_asin& (0+255),b
  3492  002AFA  0E00               	movlw	0
  3493  002AFC  0100               	movlb	0	; () banked
  3494  002AFE  6FCD               	movwf	(?_asin+1)& (0+255),b
  3495  002B00  0E00               	movlw	0
  3496  002B02  0100               	movlb	0	; () banked
  3497  002B04  6FCE               	movwf	(?_asin+2)& (0+255),b
  3498  002B06  0E00               	movlw	0
  3499  002B08  0100               	movlb	0	; () banked
  3500  002B0A  6FCF               	movwf	(?_asin+3)& (0+255),b
  3501  002B0C  0012               	return	
  3502  002B0E                     l4820:
  3503  002B0E  0E00               	movlw	0
  3504  002B10  0101               	movlb	1	; () banked
  3505  002B12  6F50               	movwf	asin@sgn& (0+255),b
  3506  002B14  0E00               	movlw	0
  3507  002B16  0101               	movlb	1	; () banked
  3508  002B18  6F51               	movwf	(asin@sgn+1)& (0+255),b
  3509  002B1A  0E80               	movlw	128
  3510  002B1C  0101               	movlb	1	; () banked
  3511  002B1E  6F52               	movwf	(asin@sgn+2)& (0+255),b
  3512  002B20  0E3F               	movlw	63
  3513  002B22  0101               	movlb	1	; () banked
  3514  002B24  6F53               	movwf	(asin@sgn+3)& (0+255),b
  3515                           
  3516                           ; BSR set to: 1
  3517  002B26  C0CC  F083         	movff	asin@x,___flmul@f2
  3518  002B2A  C0CD  F084         	movff	asin@x+1,___flmul@f2+1
  3519  002B2E  C0CE  F085         	movff	asin@x+2,___flmul@f2+2
  3520  002B32  C0CF  F086         	movff	asin@x+3,___flmul@f2+3
  3521  002B36  C0CC  F07F         	movff	asin@x,___flmul@f1
  3522  002B3A  C0CD  F080         	movff	asin@x+1,___flmul@f1+1
  3523  002B3E  C0CE  F081         	movff	asin@x+2,___flmul@f1+2
  3524  002B42  C0CF  F082         	movff	asin@x+3,___flmul@f1+3
  3525  002B46  ECC8  F01B         	call	___flmul	;wreg free
  3526  002B4A  C07F  F092         	movff	?___flmul,___flneg@f1
  3527  002B4E  C080  F093         	movff	?___flmul+1,___flneg@f1+1
  3528  002B52  C081  F094         	movff	?___flmul+2,___flneg@f1+2
  3529  002B56  C082  F095         	movff	?___flmul+3,___flneg@f1+3
  3530  002B5A  ECDB  F023         	call	___flneg	;wreg free
  3531  002B5E  C092  F0A9         	movff	?___flneg,___fladd@f1
  3532  002B62  C093  F0AA         	movff	?___flneg+1,___fladd@f1+1
  3533  002B66  C094  F0AB         	movff	?___flneg+2,___fladd@f1+2
  3534  002B6A  C095  F0AC         	movff	?___flneg+3,___fladd@f1+3
  3535  002B6E  0E00               	movlw	0
  3536  002B70  0100               	movlb	0	; () banked
  3537  002B72  6FAD               	movwf	___fladd@f2& (0+255),b
  3538  002B74  0E00               	movlw	0
  3539  002B76  0100               	movlb	0	; () banked
  3540  002B78  6FAE               	movwf	(___fladd@f2+1)& (0+255),b
  3541  002B7A  0E80               	movlw	128
  3542  002B7C  0100               	movlb	0	; () banked
  3543  002B7E  6FAF               	movwf	(___fladd@f2+2)& (0+255),b
  3544  002B80  0E3F               	movlw	63
  3545  002B82  0100               	movlb	0	; () banked
  3546  002B84  6FB0               	movwf	(___fladd@f2+3)& (0+255),b
  3547  002B86  ECF7  F016         	call	___fladd	;wreg free
  3548  002B8A  C0A9  F154         	movff	?___fladd,_asin$3543
  3549  002B8E  C0AA  F155         	movff	?___fladd+1,_asin$3543+1
  3550  002B92  C0AB  F156         	movff	?___fladd+2,_asin$3543+2
  3551  002B96  C0AC  F157         	movff	?___fladd+3,_asin$3543+3
  3552  002B9A  C154  F0C0         	movff	_asin$3543,sqrt@y
  3553  002B9E  C155  F0C1         	movff	_asin$3543+1,sqrt@y+1
  3554  002BA2  C156  F0C2         	movff	_asin$3543+2,sqrt@y+2
  3555  002BA6  C157  F0C3         	movff	_asin$3543+3,sqrt@y+3
  3556  002BAA  ECA5  F019         	call	_sqrt	;wreg free
  3557  002BAE  C0C0  F160         	movff	?_sqrt,asin@y
  3558  002BB2  C0C1  F161         	movff	?_sqrt+1,asin@y+1
  3559  002BB6  C0C2  F162         	movff	?_sqrt+2,asin@y+2
  3560  002BBA  C0C3  F163         	movff	?_sqrt+3,asin@y+3
  3561  002BBE  C0CC  F096         	movff	asin@x,fabs@d
  3562  002BC2  C0CD  F097         	movff	asin@x+1,fabs@d+1
  3563  002BC6  C0CE  F098         	movff	asin@x+2,fabs@d+2
  3564  002BCA  C0CF  F099         	movff	asin@x+3,fabs@d+3
  3565  002BCE  ECBC  F023         	call	_fabs	;wreg free
  3566  002BD2  C096  F09A         	movff	?_fabs,___flge@ff1
  3567  002BD6  C097  F09B         	movff	?_fabs+1,___flge@ff1+1
  3568  002BDA  C098  F09C         	movff	?_fabs+2,___flge@ff1+2
  3569  002BDE  C099  F09D         	movff	?_fabs+3,___flge@ff1+3
  3570  002BE2  0E8F               	movlw	143
  3571  002BE4  0100               	movlb	0	; () banked
  3572  002BE6  6F9E               	movwf	___flge@ff2& (0+255),b
  3573  002BE8  0EC2               	movlw	194
  3574  002BEA  0100               	movlb	0	; () banked
  3575  002BEC  6F9F               	movwf	(___flge@ff2+1)& (0+255),b
  3576  002BEE  0E35               	movlw	53
  3577  002BF0  0100               	movlb	0	; () banked
  3578  002BF2  6FA0               	movwf	(___flge@ff2+2)& (0+255),b
  3579  002BF4  0E3F               	movlw	63
  3580  002BF6  0100               	movlb	0	; () banked
  3581  002BF8  6FA1               	movwf	(___flge@ff2+3)& (0+255),b
  3582  002BFA  ECF1  F020         	call	___flge	;wreg free
  3583  002BFE  B0D8               	btfsc	status,0,c
  3584  002C00  D02D               	goto	l886
  3585  002C02  C0CC  F096         	movff	asin@x,___fldiv@f1
  3586  002C06  C0CD  F097         	movff	asin@x+1,___fldiv@f1+1
  3587  002C0A  C0CE  F098         	movff	asin@x+2,___fldiv@f1+2
  3588  002C0E  C0CF  F099         	movff	asin@x+3,___fldiv@f1+3
  3589  002C12  C160  F09A         	movff	asin@y,___fldiv@f2
  3590  002C16  C161  F09B         	movff	asin@y+1,___fldiv@f2+1
  3591  002C1A  C162  F09C         	movff	asin@y+2,___fldiv@f2+2
  3592  002C1E  C163  F09D         	movff	asin@y+3,___fldiv@f2+3
  3593  002C22  ECB7  F01C         	call	___fldiv	;wreg free
  3594  002C26  C096  F164         	movff	?___fldiv,_asin$3544
  3595  002C2A  C097  F165         	movff	?___fldiv+1,_asin$3544+1
  3596  002C2E  C098  F166         	movff	?___fldiv+2,_asin$3544+2
  3597  002C32  C099  F167         	movff	?___fldiv+3,_asin$3544+3
  3598  002C36  C164  F0C8         	movff	_asin$3544,atan@f
  3599  002C3A  C165  F0C9         	movff	_asin$3544+1,atan@f+1
  3600  002C3E  C166  F0CA         	movff	_asin$3544+2,atan@f+2
  3601  002C42  C167  F0CB         	movff	_asin$3544+3,atan@f+3
  3602  002C46  EC71  F018         	call	_atan	;wreg free
  3603  002C4A  C0C8  F0CC         	movff	?_atan,?_asin
  3604  002C4E  C0C9  F0CD         	movff	?_atan+1,?_asin+1
  3605  002C52  C0CA  F0CE         	movff	?_atan+2,?_asin+2
  3606  002C56  C0CB  F0CF         	movff	?_atan+3,?_asin+3
  3607  002C5A  0012               	return	
  3608  002C5C                     l886:
  3609  002C5C  0100               	movlb	0	; () banked
  3610  002C5E  AFCF               	btfss	(asin@x+3)& (0+255),7,b
  3611  002C60  D071               	goto	l4844
  3612                           
  3613                           ; BSR set to: 0
  3614  002C62  C0CC  F09A         	movff	asin@x,___fldiv@f2
  3615  002C66  C0CD  F09B         	movff	asin@x+1,___fldiv@f2+1
  3616  002C6A  C0CE  F09C         	movff	asin@x+2,___fldiv@f2+2
  3617  002C6E  C0CF  F09D         	movff	asin@x+3,___fldiv@f2+3
  3618  002C72  C160  F092         	movff	asin@y,___flneg@f1
  3619  002C76  C161  F093         	movff	asin@y+1,___flneg@f1+1
  3620  002C7A  C162  F094         	movff	asin@y+2,___flneg@f1+2
  3621  002C7E  C163  F095         	movff	asin@y+3,___flneg@f1+3
  3622  002C82  ECDB  F023         	call	___flneg	;wreg free
  3623  002C86  C092  F096         	movff	?___flneg,___fldiv@f1
  3624  002C8A  C093  F097         	movff	?___flneg+1,___fldiv@f1+1
  3625  002C8E  C094  F098         	movff	?___flneg+2,___fldiv@f1+2
  3626  002C92  C095  F099         	movff	?___flneg+3,___fldiv@f1+3
  3627  002C96  ECB7  F01C         	call	___fldiv	;wreg free
  3628  002C9A  C096  F164         	movff	?___fldiv,_asin$3544
  3629  002C9E  C097  F165         	movff	?___fldiv+1,_asin$3544+1
  3630  002CA2  C098  F166         	movff	?___fldiv+2,_asin$3544+2
  3631  002CA6  C099  F167         	movff	?___fldiv+3,_asin$3544+3
  3632  002CAA  C164  F0C8         	movff	_asin$3544,atan@f
  3633  002CAE  C165  F0C9         	movff	_asin$3544+1,atan@f+1
  3634  002CB2  C166  F0CA         	movff	_asin$3544+2,atan@f+2
  3635  002CB6  C167  F0CB         	movff	_asin$3544+3,atan@f+3
  3636  002CBA  EC71  F018         	call	_atan	;wreg free
  3637  002CBE  C0C8  F15C         	movff	?_atan,_asin$3545
  3638  002CC2  C0C9  F15D         	movff	?_atan+1,_asin$3545+1
  3639  002CC6  C0CA  F15E         	movff	?_atan+2,_asin$3545+2
  3640  002CCA  C0CB  F15F         	movff	?_atan+3,_asin$3545+3
  3641  002CCE  0EDB               	movlw	219
  3642  002CD0  0100               	movlb	0	; () banked
  3643  002CD2  6FAD               	movwf	___fladd@f2& (0+255),b
  3644  002CD4  0E0F               	movlw	15
  3645  002CD6  0100               	movlb	0	; () banked
  3646  002CD8  6FAE               	movwf	(___fladd@f2+1)& (0+255),b
  3647  002CDA  0EC9               	movlw	201
  3648  002CDC  0100               	movlb	0	; () banked
  3649  002CDE  6FAF               	movwf	(___fladd@f2+2)& (0+255),b
  3650  002CE0  0E3F               	movlw	63
  3651  002CE2  0100               	movlb	0	; () banked
  3652  002CE4  6FB0               	movwf	(___fladd@f2+3)& (0+255),b
  3653  002CE6  C15C  F092         	movff	_asin$3545,___flneg@f1
  3654  002CEA  C15D  F093         	movff	_asin$3545+1,___flneg@f1+1
  3655  002CEE  C15E  F094         	movff	_asin$3545+2,___flneg@f1+2
  3656  002CF2  C15F  F095         	movff	_asin$3545+3,___flneg@f1+3
  3657  002CF6  ECDB  F023         	call	___flneg	;wreg free
  3658  002CFA  C092  F0A9         	movff	?___flneg,___fladd@f1
  3659  002CFE  C093  F0AA         	movff	?___flneg+1,___fladd@f1+1
  3660  002D02  C094  F0AB         	movff	?___flneg+2,___fladd@f1+2
  3661  002D06  C095  F0AC         	movff	?___flneg+3,___fladd@f1+3
  3662  002D0A  ECF7  F016         	call	___fladd	;wreg free
  3663  002D0E  C0A9  F158         	movff	?___fladd,_asin$3546
  3664  002D12  C0AA  F159         	movff	?___fladd+1,_asin$3546+1
  3665  002D16  C0AB  F15A         	movff	?___fladd+2,_asin$3546+2
  3666  002D1A  C0AC  F15B         	movff	?___fladd+3,_asin$3546+3
  3667  002D1E  C158  F092         	movff	_asin$3546,___flneg@f1
  3668  002D22  C159  F093         	movff	_asin$3546+1,___flneg@f1+1
  3669  002D26  C15A  F094         	movff	_asin$3546+2,___flneg@f1+2
  3670  002D2A  C15B  F095         	movff	_asin$3546+3,___flneg@f1+3
  3671  002D2E  ECDB  F023         	call	___flneg	;wreg free
  3672  002D32  C092  F0CC         	movff	?___flneg,?_asin
  3673  002D36  C093  F0CD         	movff	?___flneg+1,?_asin+1
  3674  002D3A  C094  F0CE         	movff	?___flneg+2,?_asin+2
  3675  002D3E  C095  F0CF         	movff	?___flneg+3,?_asin+3
  3676  002D42  0012               	return	
  3677  002D44                     l4844:
  3678  002D44  C0CC  F09A         	movff	asin@x,___fldiv@f2
  3679  002D48  C0CD  F09B         	movff	asin@x+1,___fldiv@f2+1
  3680  002D4C  C0CE  F09C         	movff	asin@x+2,___fldiv@f2+2
  3681  002D50  C0CF  F09D         	movff	asin@x+3,___fldiv@f2+3
  3682  002D54  C160  F096         	movff	asin@y,___fldiv@f1
  3683  002D58  C161  F097         	movff	asin@y+1,___fldiv@f1+1
  3684  002D5C  C162  F098         	movff	asin@y+2,___fldiv@f1+2
  3685  002D60  C163  F099         	movff	asin@y+3,___fldiv@f1+3
  3686  002D64  ECB7  F01C         	call	___fldiv	;wreg free
  3687  002D68  C096  F164         	movff	?___fldiv,_asin$3544
  3688  002D6C  C097  F165         	movff	?___fldiv+1,_asin$3544+1
  3689  002D70  C098  F166         	movff	?___fldiv+2,_asin$3544+2
  3690  002D74  C099  F167         	movff	?___fldiv+3,_asin$3544+3
  3691  002D78  C164  F0C8         	movff	_asin$3544,atan@f
  3692  002D7C  C165  F0C9         	movff	_asin$3544+1,atan@f+1
  3693  002D80  C166  F0CA         	movff	_asin$3544+2,atan@f+2
  3694  002D84  C167  F0CB         	movff	_asin$3544+3,atan@f+3
  3695  002D88  EC71  F018         	call	_atan	;wreg free
  3696  002D8C  C0C8  F15C         	movff	?_atan,_asin$3545
  3697  002D90  C0C9  F15D         	movff	?_atan+1,_asin$3545+1
  3698  002D94  C0CA  F15E         	movff	?_atan+2,_asin$3545+2
  3699  002D98  C0CB  F15F         	movff	?_atan+3,_asin$3545+3
  3700  002D9C  C15C  F092         	movff	_asin$3545,___flneg@f1
  3701  002DA0  C15D  F093         	movff	_asin$3545+1,___flneg@f1+1
  3702  002DA4  C15E  F094         	movff	_asin$3545+2,___flneg@f1+2
  3703  002DA8  C15F  F095         	movff	_asin$3545+3,___flneg@f1+3
  3704  002DAC  ECDB  F023         	call	___flneg	;wreg free
  3705  002DB0  C092  F0A9         	movff	?___flneg,___fladd@f1
  3706  002DB4  C093  F0AA         	movff	?___flneg+1,___fladd@f1+1
  3707  002DB8  C094  F0AB         	movff	?___flneg+2,___fladd@f1+2
  3708  002DBC  C095  F0AC         	movff	?___flneg+3,___fladd@f1+3
  3709  002DC0  0EDB               	movlw	219
  3710  002DC2  0100               	movlb	0	; () banked
  3711  002DC4  6FAD               	movwf	___fladd@f2& (0+255),b
  3712  002DC6  0E0F               	movlw	15
  3713  002DC8  0100               	movlb	0	; () banked
  3714  002DCA  6FAE               	movwf	(___fladd@f2+1)& (0+255),b
  3715  002DCC  0EC9               	movlw	201
  3716  002DCE  0100               	movlb	0	; () banked
  3717  002DD0  6FAF               	movwf	(___fladd@f2+2)& (0+255),b
  3718  002DD2  0E3F               	movlw	63
  3719  002DD4  0100               	movlb	0	; () banked
  3720  002DD6  6FB0               	movwf	(___fladd@f2+3)& (0+255),b
  3721  002DD8  ECF7  F016         	call	___fladd	;wreg free
  3722  002DDC  C0A9  F0CC         	movff	?___fladd,?_asin
  3723  002DE0  C0AA  F0CD         	movff	?___fladd+1,?_asin+1
  3724  002DE4  C0AB  F0CE         	movff	?___fladd+2,?_asin+2
  3725  002DE8  C0AC  F0CF         	movff	?___fladd+3,?_asin+3
  3726  002DEC  0012               	return	
  3727  002DEE                     __end_of_asin:
  3728                           	opt stack 0
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           indf2	equ	0xFDF
  3738                           postinc2	equ	0xFDE
  3739                           postdec2	equ	0xFDD
  3740                           fsr2h	equ	0xFDA
  3741                           fsr2l	equ	0xFD9
  3742                           status	equ	0xFD8
  3743                           
  3744 ;; *************** function _sqrt *****************
  3745 ;; Defined at:
  3746 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\sqrt.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  y               4   96[BANK0 ] unsigned char 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  x               4   13[BANK1 ] unsigned char 
  3751 ;;  q               4    9[BANK1 ] unsigned char 
  3752 ;;  z               4    4[BANK1 ] unsigned char 
  3753 ;;  og              4    0[BANK1 ] unsigned char 
  3754 ;;  i               1    8[BANK1 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  4   96[BANK0 ] unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3767 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;Total ram usage:       25 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    7
  3771 ;; This function calls:
  3772 ;;		___flge
  3773 ;;		___flmul
  3774 ;;		___flsub
  3775 ;; This function is called by:
  3776 ;;		_parallelo
  3777 ;;		_asin
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text8
  3782  00334A                     __ptext8:
  3783                           	opt stack 0
  3784  00334A                     _sqrt:
  3785                           	opt stack 22
  3786                           
  3787                           ;incstack = 0
  3788  00334A  0E00               	movlw	0
  3789  00334C  0100               	movlb	0	; () banked
  3790  00334E  6F9A               	movwf	___flge@ff1& (0+255),b
  3791  003350  0E00               	movlw	0
  3792  003352  0100               	movlb	0	; () banked
  3793  003354  6F9B               	movwf	(___flge@ff1+1)& (0+255),b
  3794  003356  0E00               	movlw	0
  3795  003358  0100               	movlb	0	; () banked
  3796  00335A  6F9C               	movwf	(___flge@ff1+2)& (0+255),b
  3797  00335C  0E00               	movlw	0
  3798  00335E  0100               	movlb	0	; () banked
  3799  003360  6F9D               	movwf	(___flge@ff1+3)& (0+255),b
  3800  003362  C0C0  F09E         	movff	sqrt@y,___flge@ff2
  3801  003366  C0C1  F09F         	movff	sqrt@y+1,___flge@ff2+1
  3802  00336A  C0C2  F0A0         	movff	sqrt@y+2,___flge@ff2+2
  3803  00336E  C0C3  F0A1         	movff	sqrt@y+3,___flge@ff2+3
  3804  003372  ECF1  F020         	call	___flge	;wreg free
  3805  003376  A0D8               	btfss	status,0,c
  3806  003378  D016               	goto	l1324
  3807  00337A  0100               	movlb	0	; () banked
  3808  00337C  AFC3               	btfss	(sqrt@y+3)& (0+255),7,b
  3809  00337E  D006               	goto	l1325
  3810                           
  3811                           ; BSR set to: 0
  3812  003380  0E00               	movlw	0
  3813  003382  0100               	movlb	0	; () banked
  3814  003384  6FE1               	movwf	(_errno+1)& (0+255),b
  3815  003386  0E21               	movlw	33
  3816  003388  0100               	movlb	0	; () banked
  3817  00338A  6FE0               	movwf	_errno& (0+255),b
  3818  00338C                     l1325:
  3819                           
  3820                           ; BSR set to: 0
  3821  00338C  0E00               	movlw	0
  3822  00338E  0100               	movlb	0	; () banked
  3823  003390  6FC0               	movwf	?_sqrt& (0+255),b
  3824  003392  0E00               	movlw	0
  3825  003394  0100               	movlb	0	; () banked
  3826  003396  6FC1               	movwf	(?_sqrt+1)& (0+255),b
  3827  003398  0E00               	movlw	0
  3828  00339A  0100               	movlb	0	; () banked
  3829  00339C  6FC2               	movwf	(?_sqrt+2)& (0+255),b
  3830  00339E  0E00               	movlw	0
  3831  0033A0  0100               	movlb	0	; () banked
  3832  0033A2  6FC3               	movwf	(?_sqrt+3)& (0+255),b
  3833  0033A4  0012               	return	
  3834  0033A6                     l1324:
  3835  0033A6  C0C0  F143         	movff	sqrt@y,sqrt@z
  3836  0033AA  C0C1  F144         	movff	sqrt@y+1,sqrt@z+1
  3837  0033AE  C0C2  F145         	movff	sqrt@y+2,sqrt@z+2
  3838  0033B2  C0C3  F146         	movff	sqrt@y+3,sqrt@z+3
  3839  0033B6  0100               	movlb	0	; () banked
  3840  0033B8  C0C0  F0C4         	movff	sqrt@y,??_sqrt
  3841  0033BC  0100               	movlb	0	; () banked
  3842  0033BE  C0C1  F0C5         	movff	sqrt@y+1,??_sqrt+1
  3843  0033C2  0100               	movlb	0	; () banked
  3844  0033C4  C0C2  F0C6         	movff	sqrt@y+2,??_sqrt+2
  3845  0033C8  0100               	movlb	0	; () banked
  3846  0033CA  C0C3  F0C7         	movff	sqrt@y+3,??_sqrt+3
  3847  0033CE  0100               	movlb	0	; () banked
  3848  0033D0  1FC4               	comf	??_sqrt& (0+255),f,b
  3849  0033D2  1FC5               	comf	(??_sqrt+1)& (0+255),f,b
  3850  0033D4  1FC6               	comf	(??_sqrt+2)& (0+255),f,b
  3851  0033D6  1FC7               	comf	(??_sqrt+3)& (0+255),f,b
  3852  0033D8  2BC4               	incf	??_sqrt& (0+255),f,b
  3853  0033DA  0E00               	movlw	0
  3854  0033DC  23C5               	addwfc	(??_sqrt+1)& (0+255),f,b
  3855  0033DE  23C6               	addwfc	(??_sqrt+2)& (0+255),f,b
  3856  0033E0  23C7               	addwfc	(??_sqrt+3)& (0+255),f,b
  3857  0033E2  0E5E               	movlw	94
  3858  0033E4  0100               	movlb	0	; () banked
  3859  0033E6  25C4               	addwf	??_sqrt& (0+255),w,b
  3860  0033E8  0101               	movlb	1	; () banked
  3861  0033EA  6F4C               	movwf	sqrt@x& (0+255),b
  3862  0033EC  0EC8               	movlw	200
  3863  0033EE  0100               	movlb	0	; () banked
  3864  0033F0  21C5               	addwfc	(??_sqrt+1)& (0+255),w,b
  3865  0033F2  0101               	movlb	1	; () banked
  3866  0033F4  6F4D               	movwf	(sqrt@x+1)& (0+255),b
  3867  0033F6  0E6E               	movlw	110
  3868  0033F8  0100               	movlb	0	; () banked
  3869  0033FA  21C6               	addwfc	(??_sqrt+2)& (0+255),w,b
  3870  0033FC  0101               	movlb	1	; () banked
  3871  0033FE  6F4E               	movwf	(sqrt@x+2)& (0+255),b
  3872  003400  0EBE               	movlw	190
  3873  003402  0100               	movlb	0	; () banked
  3874  003404  21C7               	addwfc	(??_sqrt+3)& (0+255),w,b
  3875  003406  0101               	movlb	1	; () banked
  3876  003408  6F4F               	movwf	(sqrt@x+3)& (0+255),b
  3877                           
  3878                           ; BSR set to: 1
  3879  00340A  0101               	movlb	1	; () banked
  3880  00340C  90D8               	bcf	status,0,c
  3881  00340E  0101               	movlb	1	; () banked
  3882  003410  334F               	rrcf	(sqrt@x+3)& (0+255),f,b
  3883  003412  0101               	movlb	1	; () banked
  3884  003414  334E               	rrcf	(sqrt@x+2)& (0+255),f,b
  3885  003416  0101               	movlb	1	; () banked
  3886  003418  334D               	rrcf	(sqrt@x+1)& (0+255),f,b
  3887  00341A  0101               	movlb	1	; () banked
  3888  00341C  334C               	rrcf	sqrt@x& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 1
  3891  00341E  0E00               	movlw	0
  3892  003420  0101               	movlb	1	; () banked
  3893  003422  5F43               	subwf	sqrt@z& (0+255),f,b
  3894  003424  0E00               	movlw	0
  3895  003426  0101               	movlb	1	; () banked
  3896  003428  5B44               	subwfb	(sqrt@z+1)& (0+255),f,b
  3897  00342A  0E80               	movlw	128
  3898  00342C  0101               	movlb	1	; () banked
  3899  00342E  5B45               	subwfb	(sqrt@z+2)& (0+255),f,b
  3900  003430  0E00               	movlw	0
  3901  003432  0101               	movlb	1	; () banked
  3902  003434  5B46               	subwfb	(sqrt@z+3)& (0+255),f,b
  3903                           
  3904                           ; BSR set to: 1
  3905  003436  0E04               	movlw	4
  3906  003438  0101               	movlb	1	; () banked
  3907  00343A  6F47               	movwf	sqrt@i& (0+255),b
  3908  00343C                     l4770:
  3909                           
  3910                           ; BSR set to: 1
  3911  00343C  C14C  F13F         	movff	sqrt@x,sqrt@og
  3912  003440  C14D  F140         	movff	sqrt@x+1,sqrt@og+1
  3913  003444  C14E  F141         	movff	sqrt@x+2,sqrt@og+2
  3914  003448  C14F  F142         	movff	sqrt@x+3,sqrt@og+3
  3915                           
  3916                           ; BSR set to: 1
  3917  00344C  C14C  F07F         	movff	sqrt@x,___flmul@f1
  3918  003450  C14D  F080         	movff	sqrt@x+1,___flmul@f1+1
  3919  003454  C14E  F081         	movff	sqrt@x+2,___flmul@f1+2
  3920  003458  C14F  F082         	movff	sqrt@x+3,___flmul@f1+3
  3921  00345C  C143  F083         	movff	sqrt@z,___flmul@f2
  3922  003460  C144  F084         	movff	sqrt@z+1,___flmul@f2+1
  3923  003464  C145  F085         	movff	sqrt@z+2,___flmul@f2+2
  3924  003468  C146  F086         	movff	sqrt@z+3,___flmul@f2+3
  3925  00346C  ECC8  F01B         	call	___flmul	;wreg free
  3926  003470  C07F  F148         	movff	?___flmul,sqrt@q
  3927  003474  C080  F149         	movff	?___flmul+1,sqrt@q+1
  3928  003478  C081  F14A         	movff	?___flmul+2,sqrt@q+2
  3929  00347C  C082  F14B         	movff	?___flmul+3,sqrt@q+3
  3930  003480  C148  F07F         	movff	sqrt@q,___flmul@f1
  3931  003484  C149  F080         	movff	sqrt@q+1,___flmul@f1+1
  3932  003488  C14A  F081         	movff	sqrt@q+2,___flmul@f1+2
  3933  00348C  C14B  F082         	movff	sqrt@q+3,___flmul@f1+3
  3934  003490  C14C  F083         	movff	sqrt@x,___flmul@f2
  3935  003494  C14D  F084         	movff	sqrt@x+1,___flmul@f2+1
  3936  003498  C14E  F085         	movff	sqrt@x+2,___flmul@f2+2
  3937  00349C  C14F  F086         	movff	sqrt@x+3,___flmul@f2+3
  3938  0034A0  ECC8  F01B         	call	___flmul	;wreg free
  3939  0034A4  C07F  F148         	movff	?___flmul,sqrt@q
  3940  0034A8  C080  F149         	movff	?___flmul+1,sqrt@q+1
  3941  0034AC  C081  F14A         	movff	?___flmul+2,sqrt@q+2
  3942  0034B0  C082  F14B         	movff	?___flmul+3,sqrt@q+3
  3943  0034B4  C148  F07F         	movff	sqrt@q,___flmul@f1
  3944  0034B8  C149  F080         	movff	sqrt@q+1,___flmul@f1+1
  3945  0034BC  C14A  F081         	movff	sqrt@q+2,___flmul@f1+2
  3946  0034C0  C14B  F082         	movff	sqrt@q+3,___flmul@f1+3
  3947  0034C4  C14C  F083         	movff	sqrt@x,___flmul@f2
  3948  0034C8  C14D  F084         	movff	sqrt@x+1,___flmul@f2+1
  3949  0034CC  C14E  F085         	movff	sqrt@x+2,___flmul@f2+2
  3950  0034D0  C14F  F086         	movff	sqrt@x+3,___flmul@f2+3
  3951  0034D4  ECC8  F01B         	call	___flmul	;wreg free
  3952  0034D8  C07F  F148         	movff	?___flmul,sqrt@q
  3953  0034DC  C080  F149         	movff	?___flmul+1,sqrt@q+1
  3954  0034E0  C081  F14A         	movff	?___flmul+2,sqrt@q+2
  3955  0034E4  C082  F14B         	movff	?___flmul+3,sqrt@q+3
  3956  0034E8  C14C  F07F         	movff	sqrt@x,___flmul@f1
  3957  0034EC  C14D  F080         	movff	sqrt@x+1,___flmul@f1+1
  3958  0034F0  C14E  F081         	movff	sqrt@x+2,___flmul@f1+2
  3959  0034F4  C14F  F082         	movff	sqrt@x+3,___flmul@f1+3
  3960  0034F8  0E00               	movlw	0
  3961  0034FA  0100               	movlb	0	; () banked
  3962  0034FC  6F83               	movwf	___flmul@f2& (0+255),b
  3963  0034FE  0E00               	movlw	0
  3964  003500  0100               	movlb	0	; () banked
  3965  003502  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  3966  003504  0EC0               	movlw	192
  3967  003506  0100               	movlb	0	; () banked
  3968  003508  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  3969  00350A  0E3F               	movlw	63
  3970  00350C  0100               	movlb	0	; () banked
  3971  00350E  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  3972  003510  ECC8  F01B         	call	___flmul	;wreg free
  3973  003514  C07F  F14C         	movff	?___flmul,sqrt@x
  3974  003518  C080  F14D         	movff	?___flmul+1,sqrt@x+1
  3975  00351C  C081  F14E         	movff	?___flmul+2,sqrt@x+2
  3976  003520  C082  F14F         	movff	?___flmul+3,sqrt@x+3
  3977  003524  C14C  F0B8         	movff	sqrt@x,___flsub@f1
  3978  003528  C14D  F0B9         	movff	sqrt@x+1,___flsub@f1+1
  3979  00352C  C14E  F0BA         	movff	sqrt@x+2,___flsub@f1+2
  3980  003530  C14F  F0BB         	movff	sqrt@x+3,___flsub@f1+3
  3981  003534  C148  F0BC         	movff	sqrt@q,___flsub@f2
  3982  003538  C149  F0BD         	movff	sqrt@q+1,___flsub@f2+1
  3983  00353C  C14A  F0BE         	movff	sqrt@q+2,___flsub@f2+2
  3984  003540  C14B  F0BF         	movff	sqrt@q+3,___flsub@f2+3
  3985  003544  EC2C  F023         	call	___flsub	;wreg free
  3986  003548  C0B8  F14C         	movff	?___flsub,sqrt@x
  3987  00354C  C0B9  F14D         	movff	?___flsub+1,sqrt@x+1
  3988  003550  C0BA  F14E         	movff	?___flsub+2,sqrt@x+2
  3989  003554  C0BB  F14F         	movff	?___flsub+3,sqrt@x+3
  3990  003558  0101               	movlb	1	; () banked
  3991  00355A  2F47               	decfsz	sqrt@i& (0+255),f,b
  3992  00355C  D76F               	goto	l4770
  3993                           
  3994                           ; BSR set to: 1
  3995                           
  3996                           ; BSR set to: 1
  3997  00355E  C14C  F07F         	movff	sqrt@x,___flmul@f1
  3998  003562  C14D  F080         	movff	sqrt@x+1,___flmul@f1+1
  3999  003566  C14E  F081         	movff	sqrt@x+2,___flmul@f1+2
  4000  00356A  C14F  F082         	movff	sqrt@x+3,___flmul@f1+3
  4001  00356E  C0C0  F083         	movff	sqrt@y,___flmul@f2
  4002  003572  C0C1  F084         	movff	sqrt@y+1,___flmul@f2+1
  4003  003576  C0C2  F085         	movff	sqrt@y+2,___flmul@f2+2
  4004  00357A  C0C3  F086         	movff	sqrt@y+3,___flmul@f2+3
  4005  00357E  ECC8  F01B         	call	___flmul	;wreg free
  4006  003582  C07F  F0C0         	movff	?___flmul,?_sqrt
  4007  003586  C080  F0C1         	movff	?___flmul+1,?_sqrt+1
  4008  00358A  C081  F0C2         	movff	?___flmul+2,?_sqrt+2
  4009  00358E  C082  F0C3         	movff	?___flmul+3,?_sqrt+3
  4010  003592  0012               	return	
  4011  003594                     __end_of_sqrt:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           prodh	equ	0xFF4
  4018                           prodl	equ	0xFF3
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           indf2	equ	0xFDF
  4022                           postinc2	equ	0xFDE
  4023                           postdec2	equ	0xFDD
  4024                           fsr2h	equ	0xFDA
  4025                           fsr2l	equ	0xFD9
  4026                           status	equ	0xFD8
  4027                           
  4028 ;; *************** function ___flsub *****************
  4029 ;; Defined at:
  4030 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flsub.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  f1              4   88[BANK0 ] unsigned char 
  4033 ;;  f2              4   92[BANK0 ] unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  4   88[BANK0 ] unsigned char 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4045 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;Total ram usage:        8 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    6
  4052 ;; This function calls:
  4053 ;;		___fladd
  4054 ;; This function is called by:
  4055 ;;		_sqrt
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text9
  4060  004658                     __ptext9:
  4061                           	opt stack 0
  4062  004658                     ___flsub:
  4063                           	opt stack 22
  4064                           
  4065                           ;incstack = 0
  4066  004658  0E00               	movlw	0
  4067  00465A  0100               	movlb	0	; () banked
  4068  00465C  1BBC               	xorwf	___flsub@f2& (0+255),f,b
  4069  00465E  0E00               	movlw	0
  4070  004660  0100               	movlb	0	; () banked
  4071  004662  1BBD               	xorwf	(___flsub@f2+1)& (0+255),f,b
  4072  004664  0E00               	movlw	0
  4073  004666  0100               	movlb	0	; () banked
  4074  004668  1BBE               	xorwf	(___flsub@f2+2)& (0+255),f,b
  4075  00466A  0E80               	movlw	128
  4076  00466C  0100               	movlb	0	; () banked
  4077  00466E  1BBF               	xorwf	(___flsub@f2+3)& (0+255),f,b
  4078                           
  4079                           ; BSR set to: 0
  4080  004670  C0B8  F0A9         	movff	___flsub@f1,___fladd@f1
  4081  004674  C0B9  F0AA         	movff	___flsub@f1+1,___fladd@f1+1
  4082  004678  C0BA  F0AB         	movff	___flsub@f1+2,___fladd@f1+2
  4083  00467C  C0BB  F0AC         	movff	___flsub@f1+3,___fladd@f1+3
  4084  004680  C0BC  F0AD         	movff	___flsub@f2,___fladd@f2
  4085  004684  C0BD  F0AE         	movff	___flsub@f2+1,___fladd@f2+1
  4086  004688  C0BE  F0AF         	movff	___flsub@f2+2,___fladd@f2+2
  4087  00468C  C0BF  F0B0         	movff	___flsub@f2+3,___fladd@f2+3
  4088  004690  ECF7  F016         	call	___fladd	;wreg free
  4089  004694  C0A9  F0B8         	movff	?___fladd,?___flsub
  4090  004698  C0AA  F0B9         	movff	?___fladd+1,?___flsub+1
  4091  00469C  C0AB  F0BA         	movff	?___fladd+2,?___flsub+2
  4092  0046A0  C0AC  F0BB         	movff	?___fladd+3,?___flsub+3
  4093  0046A4  0012               	return	
  4094  0046A6                     __end_of___flsub:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _atan *****************
  4112 ;; Defined at:
  4113 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atan.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  f               4  104[BANK0 ] unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  val             4   13[BANK1 ] unsigned char 
  4118 ;;  val_squared     4    9[BANK1 ] unsigned char 
  4119 ;;  x               4    4[BANK1 ] unsigned char 
  4120 ;;  y               4    0[BANK1 ] unsigned char 
  4121 ;;  recip           1    8[BANK1 ] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  4  104[BANK0 ] unsigned char 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;Total ram usage:       21 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    7
  4138 ;; This function calls:
  4139 ;;		___fladd
  4140 ;;		___fldiv
  4141 ;;		___flge
  4142 ;;		___flmul
  4143 ;;		___flneg
  4144 ;;		_eval_poly
  4145 ;;		_fabs
  4146 ;; This function is called by:
  4147 ;;		_asin
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text10
  4152  0030E2                     __ptext10:
  4153                           	opt stack 0
  4154  0030E2                     _atan:
  4155                           	opt stack 21
  4156                           
  4157                           ;incstack = 0
  4158  0030E2  C0C8  F096         	movff	atan@f,fabs@d
  4159  0030E6  C0C9  F097         	movff	atan@f+1,fabs@d+1
  4160  0030EA  C0CA  F098         	movff	atan@f+2,fabs@d+2
  4161  0030EE  C0CB  F099         	movff	atan@f+3,fabs@d+3
  4162  0030F2  ECBC  F023         	call	_fabs	;wreg free
  4163  0030F6  C096  F14C         	movff	?_fabs,atan@val
  4164  0030FA  C097  F14D         	movff	?_fabs+1,atan@val+1
  4165  0030FE  C098  F14E         	movff	?_fabs+2,atan@val+2
  4166  003102  C099  F14F         	movff	?_fabs+3,atan@val+3
  4167  003106  0101               	movlb	1	; () banked
  4168  003108  EE21  F04C         	lfsr	2,atan@val
  4169  00310C  50DE               	movf	postinc2,w,c
  4170  00310E  10DE               	iorwf	postinc2,w,c
  4171  003110  10DE               	iorwf	postinc2,w,c
  4172  003112  10DE               	iorwf	postinc2,w,c
  4173  003114  A4D8               	btfss	status,2,c
  4174  003116  D00D               	goto	l4794
  4175                           
  4176                           ; BSR set to: 1
  4177  003118  0E00               	movlw	0
  4178  00311A  0100               	movlb	0	; () banked
  4179  00311C  6FC8               	movwf	?_atan& (0+255),b
  4180  00311E  0E00               	movlw	0
  4181  003120  0100               	movlb	0	; () banked
  4182  003122  6FC9               	movwf	(?_atan+1)& (0+255),b
  4183  003124  0E00               	movlw	0
  4184  003126  0100               	movlb	0	; () banked
  4185  003128  6FCA               	movwf	(?_atan+2)& (0+255),b
  4186  00312A  0E00               	movlw	0
  4187  00312C  0100               	movlb	0	; () banked
  4188  00312E  6FCB               	movwf	(?_atan+3)& (0+255),b
  4189  003130  0012               	return	
  4190  003132                     l4794:
  4191  003132  0E00               	movlw	0
  4192  003134  0100               	movlb	0	; () banked
  4193  003136  6F9A               	movwf	___flge@ff1& (0+255),b
  4194  003138  0E00               	movlw	0
  4195  00313A  0100               	movlb	0	; () banked
  4196  00313C  6F9B               	movwf	(___flge@ff1+1)& (0+255),b
  4197  00313E  0E80               	movlw	128
  4198  003140  0100               	movlb	0	; () banked
  4199  003142  6F9C               	movwf	(___flge@ff1+2)& (0+255),b
  4200  003144  0E3F               	movlw	63
  4201  003146  0100               	movlb	0	; () banked
  4202  003148  6F9D               	movwf	(___flge@ff1+3)& (0+255),b
  4203  00314A  C14C  F09E         	movff	atan@val,___flge@ff2
  4204  00314E  C14D  F09F         	movff	atan@val+1,___flge@ff2+1
  4205  003152  C14E  F0A0         	movff	atan@val+2,___flge@ff2+2
  4206  003156  C14F  F0A1         	movff	atan@val+3,___flge@ff2+3
  4207  00315A  ECF1  F020         	call	___flge	;wreg free
  4208  00315E  B0D8               	btfsc	status,0,c
  4209  003160  D002               	goto	u5870
  4210  003162  0E01               	movlw	1
  4211  003164  D001               	goto	u5876
  4212  003166                     u5870:
  4213  003166  0E00               	movlw	0
  4214  003168                     u5876:
  4215  003168  0101               	movlb	1	; () banked
  4216  00316A  6F47               	movwf	atan@recip& (0+255),b
  4217  00316C  0101               	movlb	1	; () banked
  4218  00316E  5147               	movf	atan@recip& (0+255),w,b
  4219  003170  B4D8               	btfsc	status,2,c
  4220  003172  D01E               	goto	l905
  4221                           
  4222                           ; BSR set to: 1
  4223  003174  0E00               	movlw	0
  4224  003176  0100               	movlb	0	; () banked
  4225  003178  6F96               	movwf	___fldiv@f1& (0+255),b
  4226  00317A  0E00               	movlw	0
  4227  00317C  0100               	movlb	0	; () banked
  4228  00317E  6F97               	movwf	(___fldiv@f1+1)& (0+255),b
  4229  003180  0E80               	movlw	128
  4230  003182  0100               	movlb	0	; () banked
  4231  003184  6F98               	movwf	(___fldiv@f1+2)& (0+255),b
  4232  003186  0E3F               	movlw	63
  4233  003188  0100               	movlb	0	; () banked
  4234  00318A  6F99               	movwf	(___fldiv@f1+3)& (0+255),b
  4235  00318C  C14C  F09A         	movff	atan@val,___fldiv@f2
  4236  003190  C14D  F09B         	movff	atan@val+1,___fldiv@f2+1
  4237  003194  C14E  F09C         	movff	atan@val+2,___fldiv@f2+2
  4238  003198  C14F  F09D         	movff	atan@val+3,___fldiv@f2+3
  4239  00319C  ECB7  F01C         	call	___fldiv	;wreg free
  4240  0031A0  C096  F14C         	movff	?___fldiv,atan@val
  4241  0031A4  C097  F14D         	movff	?___fldiv+1,atan@val+1
  4242  0031A8  C098  F14E         	movff	?___fldiv+2,atan@val+2
  4243  0031AC  C099  F14F         	movff	?___fldiv+3,atan@val+3
  4244  0031B0                     l905:
  4245  0031B0  C14C  F07F         	movff	atan@val,___flmul@f1
  4246  0031B4  C14D  F080         	movff	atan@val+1,___flmul@f1+1
  4247  0031B8  C14E  F081         	movff	atan@val+2,___flmul@f1+2
  4248  0031BC  C14F  F082         	movff	atan@val+3,___flmul@f1+3
  4249  0031C0  C14C  F083         	movff	atan@val,___flmul@f2
  4250  0031C4  C14D  F084         	movff	atan@val+1,___flmul@f2+1
  4251  0031C8  C14E  F085         	movff	atan@val+2,___flmul@f2+2
  4252  0031CC  C14F  F086         	movff	atan@val+3,___flmul@f2+3
  4253  0031D0  ECC8  F01B         	call	___flmul	;wreg free
  4254  0031D4  C07F  F148         	movff	?___flmul,atan@val_squared
  4255  0031D8  C080  F149         	movff	?___flmul+1,atan@val_squared+1
  4256  0031DC  C081  F14A         	movff	?___flmul+2,atan@val_squared+2
  4257  0031E0  C082  F14B         	movff	?___flmul+3,atan@val_squared+3
  4258  0031E4  C148  F0B8         	movff	atan@val_squared,eval_poly@x
  4259  0031E8  C149  F0B9         	movff	atan@val_squared+1,eval_poly@x+1
  4260  0031EC  C14A  F0BA         	movff	atan@val_squared+2,eval_poly@x+2
  4261  0031F0  C14B  F0BB         	movff	atan@val_squared+3,eval_poly@x+3
  4262  0031F4  0E0D               	movlw	high atan@coeff_b
  4263  0031F6  0100               	movlb	0	; () banked
  4264  0031F8  6FBD               	movwf	(eval_poly@d+1)& (0+255),b
  4265  0031FA  0E19               	movlw	low atan@coeff_b
  4266  0031FC  0100               	movlb	0	; () banked
  4267  0031FE  6FBC               	movwf	eval_poly@d& (0+255),b
  4268  003200  0E00               	movlw	0
  4269  003202  0100               	movlb	0	; () banked
  4270  003204  6FBF               	movwf	(eval_poly@n+1)& (0+255),b
  4271  003206  0E04               	movlw	4
  4272  003208  0100               	movlb	0	; () banked
  4273  00320A  6FBE               	movwf	eval_poly@n& (0+255),b
  4274  00320C  EC56  F020         	call	_eval_poly	;wreg free
  4275  003210  C0B8  F13F         	movff	?_eval_poly,atan@y
  4276  003214  C0B9  F140         	movff	?_eval_poly+1,atan@y+1
  4277  003218  C0BA  F141         	movff	?_eval_poly+2,atan@y+2
  4278  00321C  C0BB  F142         	movff	?_eval_poly+3,atan@y+3
  4279  003220  C148  F0B8         	movff	atan@val_squared,eval_poly@x
  4280  003224  C149  F0B9         	movff	atan@val_squared+1,eval_poly@x+1
  4281  003228  C14A  F0BA         	movff	atan@val_squared+2,eval_poly@x+2
  4282  00322C  C14B  F0BB         	movff	atan@val_squared+3,eval_poly@x+3
  4283  003230  0E0D               	movlw	high atan@coeff_a
  4284  003232  0100               	movlb	0	; () banked
  4285  003234  6FBD               	movwf	(eval_poly@d+1)& (0+255),b
  4286  003236  0E01               	movlw	low atan@coeff_a
  4287  003238  0100               	movlb	0	; () banked
  4288  00323A  6FBC               	movwf	eval_poly@d& (0+255),b
  4289  00323C  0E00               	movlw	0
  4290  00323E  0100               	movlb	0	; () banked
  4291  003240  6FBF               	movwf	(eval_poly@n+1)& (0+255),b
  4292  003242  0E05               	movlw	5
  4293  003244  0100               	movlb	0	; () banked
  4294  003246  6FBE               	movwf	eval_poly@n& (0+255),b
  4295  003248  EC56  F020         	call	_eval_poly	;wreg free
  4296  00324C  C0B8  F143         	movff	?_eval_poly,atan@x
  4297  003250  C0B9  F144         	movff	?_eval_poly+1,atan@x+1
  4298  003254  C0BA  F145         	movff	?_eval_poly+2,atan@x+2
  4299  003258  C0BB  F146         	movff	?_eval_poly+3,atan@x+3
  4300  00325C  C14C  F07F         	movff	atan@val,___flmul@f1
  4301  003260  C14D  F080         	movff	atan@val+1,___flmul@f1+1
  4302  003264  C14E  F081         	movff	atan@val+2,___flmul@f1+2
  4303  003268  C14F  F082         	movff	atan@val+3,___flmul@f1+3
  4304  00326C  C13F  F09A         	movff	atan@y,___fldiv@f2
  4305  003270  C140  F09B         	movff	atan@y+1,___fldiv@f2+1
  4306  003274  C141  F09C         	movff	atan@y+2,___fldiv@f2+2
  4307  003278  C142  F09D         	movff	atan@y+3,___fldiv@f2+3
  4308  00327C  C143  F096         	movff	atan@x,___fldiv@f1
  4309  003280  C144  F097         	movff	atan@x+1,___fldiv@f1+1
  4310  003284  C145  F098         	movff	atan@x+2,___fldiv@f1+2
  4311  003288  C146  F099         	movff	atan@x+3,___fldiv@f1+3
  4312  00328C  ECB7  F01C         	call	___fldiv	;wreg free
  4313  003290  C096  F083         	movff	?___fldiv,___flmul@f2
  4314  003294  C097  F084         	movff	?___fldiv+1,___flmul@f2+1
  4315  003298  C098  F085         	movff	?___fldiv+2,___flmul@f2+2
  4316  00329C  C099  F086         	movff	?___fldiv+3,___flmul@f2+3
  4317  0032A0  ECC8  F01B         	call	___flmul	;wreg free
  4318  0032A4  C07F  F14C         	movff	?___flmul,atan@val
  4319  0032A8  C080  F14D         	movff	?___flmul+1,atan@val+1
  4320  0032AC  C081  F14E         	movff	?___flmul+2,atan@val+2
  4321  0032B0  C082  F14F         	movff	?___flmul+3,atan@val+3
  4322  0032B4  0101               	movlb	1	; () banked
  4323  0032B6  5147               	movf	atan@recip& (0+255),w,b
  4324  0032B8  B4D8               	btfsc	status,2,c
  4325  0032BA  D028               	goto	l4806
  4326                           
  4327                           ; BSR set to: 1
  4328  0032BC  C14C  F092         	movff	atan@val,___flneg@f1
  4329  0032C0  C14D  F093         	movff	atan@val+1,___flneg@f1+1
  4330  0032C4  C14E  F094         	movff	atan@val+2,___flneg@f1+2
  4331  0032C8  C14F  F095         	movff	atan@val+3,___flneg@f1+3
  4332  0032CC  ECDB  F023         	call	___flneg	;wreg free
  4333  0032D0  C092  F0A9         	movff	?___flneg,___fladd@f1
  4334  0032D4  C093  F0AA         	movff	?___flneg+1,___fladd@f1+1
  4335  0032D8  C094  F0AB         	movff	?___flneg+2,___fladd@f1+2
  4336  0032DC  C095  F0AC         	movff	?___flneg+3,___fladd@f1+3
  4337  0032E0  0EDB               	movlw	219
  4338  0032E2  0100               	movlb	0	; () banked
  4339  0032E4  6FAD               	movwf	___fladd@f2& (0+255),b
  4340  0032E6  0E0F               	movlw	15
  4341  0032E8  0100               	movlb	0	; () banked
  4342  0032EA  6FAE               	movwf	(___fladd@f2+1)& (0+255),b
  4343  0032EC  0EC9               	movlw	201
  4344  0032EE  0100               	movlb	0	; () banked
  4345  0032F0  6FAF               	movwf	(___fladd@f2+2)& (0+255),b
  4346  0032F2  0E3F               	movlw	63
  4347  0032F4  0100               	movlb	0	; () banked
  4348  0032F6  6FB0               	movwf	(___fladd@f2+3)& (0+255),b
  4349  0032F8  ECF7  F016         	call	___fladd	;wreg free
  4350  0032FC  C0A9  F14C         	movff	?___fladd,atan@val
  4351  003300  C0AA  F14D         	movff	?___fladd+1,atan@val+1
  4352  003304  C0AB  F14E         	movff	?___fladd+2,atan@val+2
  4353  003308  C0AC  F14F         	movff	?___fladd+3,atan@val+3
  4354  00330C                     l4806:
  4355  00330C  0100               	movlb	0	; () banked
  4356  00330E  BFCB               	btfsc	(atan@f+3)& (0+255),7,b
  4357  003310  D009               	goto	l4810
  4358                           
  4359                           ; BSR set to: 0
  4360  003312  C14C  F0C8         	movff	atan@val,?_atan
  4361  003316  C14D  F0C9         	movff	atan@val+1,?_atan+1
  4362  00331A  C14E  F0CA         	movff	atan@val+2,?_atan+2
  4363  00331E  C14F  F0CB         	movff	atan@val+3,?_atan+3
  4364  003322  0012               	return	
  4365  003324                     l4810:
  4366                           
  4367                           ; BSR set to: 0
  4368  003324  C14C  F092         	movff	atan@val,___flneg@f1
  4369  003328  C14D  F093         	movff	atan@val+1,___flneg@f1+1
  4370  00332C  C14E  F094         	movff	atan@val+2,___flneg@f1+2
  4371  003330  C14F  F095         	movff	atan@val+3,___flneg@f1+3
  4372  003334  ECDB  F023         	call	___flneg	;wreg free
  4373  003338  C092  F0C8         	movff	?___flneg,?_atan
  4374  00333C  C093  F0C9         	movff	?___flneg+1,?_atan+1
  4375  003340  C094  F0CA         	movff	?___flneg+2,?_atan+2
  4376  003344  C095  F0CB         	movff	?___flneg+3,?_atan+3
  4377  003348  0012               	return	
  4378  00334A                     __end_of_atan:
  4379                           	opt stack 0
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           prodh	equ	0xFF4
  4385                           prodl	equ	0xFF3
  4386                           postinc0	equ	0xFEE
  4387                           wreg	equ	0xFE8
  4388                           indf2	equ	0xFDF
  4389                           postinc2	equ	0xFDE
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _fabs *****************
  4396 ;; Defined at:
  4397 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fabs.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  d               4   54[BANK0 ] unsigned char 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  4   54[BANK0 ] unsigned char 
  4404 ;; Registers used:
  4405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;Total ram usage:        4 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    5
  4418 ;; This function calls:
  4419 ;;		___flneg
  4420 ;; This function is called by:
  4421 ;;		_asin
  4422 ;;		_atan
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text11
  4427  004778                     __ptext11:
  4428                           	opt stack 0
  4429  004778                     _fabs:
  4430                           	opt stack 23
  4431                           
  4432                           ;incstack = 0
  4433  004778  0100               	movlb	0	; () banked
  4434  00477A  AF99               	btfss	(fabs@d+3)& (0+255),7,b
  4435  00477C  D013               	goto	l1014
  4436                           
  4437                           ; BSR set to: 0
  4438  00477E  C096  F092         	movff	fabs@d,___flneg@f1
  4439  004782  C097  F093         	movff	fabs@d+1,___flneg@f1+1
  4440  004786  C098  F094         	movff	fabs@d+2,___flneg@f1+2
  4441  00478A  C099  F095         	movff	fabs@d+3,___flneg@f1+3
  4442  00478E  ECDB  F023         	call	___flneg	;wreg free
  4443  004792  C092  F096         	movff	?___flneg,?_fabs
  4444  004796  C093  F097         	movff	?___flneg+1,?_fabs+1
  4445  00479A  C094  F098         	movff	?___flneg+2,?_fabs+2
  4446  00479E  C095  F099         	movff	?___flneg+3,?_fabs+3
  4447  0047A2  0012               	return	
  4448  0047A4                     l1014:
  4449                           
  4450                           ; BSR set to: 0
  4451  0047A4  C096  F096         	movff	fabs@d,?_fabs
  4452  0047A8  C097  F097         	movff	fabs@d+1,?_fabs+1
  4453  0047AC  C098  F098         	movff	fabs@d+2,?_fabs+2
  4454  0047B0  C099  F099         	movff	fabs@d+3,?_fabs+3
  4455  0047B4  0012               	return	
  4456  0047B6                     __end_of_fabs:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           indf2	equ	0xFDF
  4467                           postinc2	equ	0xFDE
  4468                           postdec2	equ	0xFDD
  4469                           fsr2h	equ	0xFDA
  4470                           fsr2l	equ	0xFD9
  4471                           status	equ	0xFD8
  4472                           
  4473 ;; *************** function ___flneg *****************
  4474 ;; Defined at:
  4475 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flneg.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  f1              4   50[BANK0 ] unsigned char 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  4   50[BANK0 ] unsigned char 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;Total ram usage:        4 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    4
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_asin
  4500 ;;		_atan
  4501 ;;		_fabs
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text12
  4506  0047B6                     __ptext12:
  4507                           	opt stack 0
  4508  0047B6                     ___flneg:
  4509                           	opt stack 23
  4510                           
  4511                           ;incstack = 0
  4512  0047B6  0100               	movlb	0	; () banked
  4513  0047B8  EE20  F092         	lfsr	2,___flneg@f1
  4514  0047BC  50DE               	movf	postinc2,w,c
  4515  0047BE  10DE               	iorwf	postinc2,w,c
  4516  0047C0  10DE               	iorwf	postinc2,w,c
  4517  0047C2  10DE               	iorwf	postinc2,w,c
  4518  0047C4  B4D8               	btfsc	status,2,c
  4519  0047C6  D00C               	goto	l4678
  4520                           
  4521                           ; BSR set to: 0
  4522  0047C8  0E00               	movlw	0
  4523  0047CA  0100               	movlb	0	; () banked
  4524  0047CC  1B92               	xorwf	___flneg@f1& (0+255),f,b
  4525  0047CE  0E00               	movlw	0
  4526  0047D0  0100               	movlb	0	; () banked
  4527  0047D2  1B93               	xorwf	(___flneg@f1+1)& (0+255),f,b
  4528  0047D4  0E00               	movlw	0
  4529  0047D6  0100               	movlb	0	; () banked
  4530  0047D8  1B94               	xorwf	(___flneg@f1+2)& (0+255),f,b
  4531  0047DA  0E80               	movlw	128
  4532  0047DC  0100               	movlb	0	; () banked
  4533  0047DE  1B95               	xorwf	(___flneg@f1+3)& (0+255),f,b
  4534  0047E0                     l4678:
  4535                           
  4536                           ; BSR set to: 0
  4537  0047E0  C092  F092         	movff	___flneg@f1,?___flneg
  4538  0047E4  C093  F093         	movff	___flneg@f1+1,?___flneg+1
  4539  0047E8  C094  F094         	movff	___flneg@f1+2,?___flneg+2
  4540  0047EC  C095  F095         	movff	___flneg@f1+3,?___flneg+3
  4541  0047F0  0012               	return	
  4542  0047F2                     __end_of___flneg:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           prodh	equ	0xFF4
  4549                           prodl	equ	0xFF3
  4550                           postinc0	equ	0xFEE
  4551                           wreg	equ	0xFE8
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           postdec2	equ	0xFDD
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559 ;; *************** function _eval_poly *****************
  4560 ;; Defined at:
  4561 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  x               4   88[BANK0 ] unsigned char 
  4564 ;;  d               2   92[BANK0 ] PTR const 
  4565 ;;		 -> atan@coeff_a(24), atan@coeff_b(20), 
  4566 ;;  n               2   94[BANK0 ] int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  res             4  100[BANK0 ] int 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  4   88[BANK0 ] int 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4578 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;Total ram usage:       16 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    6
  4585 ;; This function calls:
  4586 ;;		___fladd
  4587 ;;		___flmul
  4588 ;; This function is called by:
  4589 ;;		_atan
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text13
  4594  0040AC                     __ptext13:
  4595                           	opt stack 0
  4596  0040AC                     _eval_poly:
  4597                           	opt stack 21
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;incstack = 0
  4601  0040AC  0100               	movlb	0	; () banked
  4602  0040AE  C0BE  F0C0         	movff	eval_poly@n,??_eval_poly
  4603  0040B2  0100               	movlb	0	; () banked
  4604  0040B4  C0BF  F0C1         	movff	eval_poly@n+1,??_eval_poly+1
  4605  0040B8  0100               	movlb	0	; () banked
  4606  0040BA  90D8               	bcf	status,0,c
  4607  0040BC  37C0               	rlcf	??_eval_poly& (0+255),f,b
  4608  0040BE  37C1               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4609  0040C0  0100               	movlb	0	; () banked
  4610  0040C2  90D8               	bcf	status,0,c
  4611  0040C4  37C0               	rlcf	??_eval_poly& (0+255),f,b
  4612  0040C6  37C1               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4613  0040C8  0100               	movlb	0	; () banked
  4614  0040CA  C0BC  F0C2         	movff	eval_poly@d,??_eval_poly+2
  4615  0040CE  0100               	movlb	0	; () banked
  4616  0040D0  C0BD  F0C3         	movff	eval_poly@d+1,??_eval_poly+3
  4617  0040D4  0100               	movlb	0	; () banked
  4618  0040D6  51C0               	movf	??_eval_poly& (0+255),w,b
  4619  0040D8  0100               	movlb	0	; () banked
  4620  0040DA  27C2               	addwf	(??_eval_poly+2)& (0+255),f,b
  4621  0040DC  0100               	movlb	0	; () banked
  4622  0040DE  51C1               	movf	(??_eval_poly+1)& (0+255),w,b
  4623  0040E0  0100               	movlb	0	; () banked
  4624  0040E2  23C3               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4625  0040E4  C0C2  FFF6         	movff	??_eval_poly+2,tblptrl
  4626  0040E8  C0C3  FFF7         	movff	??_eval_poly+3,tblptrh
  4627  0040EC                     	if	0	;tblptru may be non-zero
  4628  0040EC                     	endif
  4629  0040EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4630  0040EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4631  0040EE  6EF8               	movwf	tblptru,c
  4632  0040F0                     	endif
  4633  0040F0  0009               	tblrd		*+
  4634  0040F2  0100               	movlb	0	; () banked
  4635  0040F4  CFF5 F0C4          	movff	tablat,eval_poly@res
  4636  0040F8  0009               	tblrd		*+
  4637  0040FA  0100               	movlb	0	; () banked
  4638  0040FC  CFF5 F0C5          	movff	tablat,eval_poly@res+1
  4639  004100  0009               	tblrd		*+
  4640  004102  0100               	movlb	0	; () banked
  4641  004104  CFF5 F0C6          	movff	tablat,eval_poly@res+2
  4642  004108  000A               	tblrd		*-
  4643  00410A  0100               	movlb	0	; () banked
  4644  00410C  CFF5 F0C7          	movff	tablat,eval_poly@res+3
  4645  004110  D05A               	goto	l4738
  4646  004112                     l4736:
  4647                           
  4648                           ; BSR set to: 0
  4649  004112  C0C4  F083         	movff	eval_poly@res,___flmul@f2
  4650  004116  C0C5  F084         	movff	eval_poly@res+1,___flmul@f2+1
  4651  00411A  C0C6  F085         	movff	eval_poly@res+2,___flmul@f2+2
  4652  00411E  C0C7  F086         	movff	eval_poly@res+3,___flmul@f2+3
  4653  004122  C0B8  F07F         	movff	eval_poly@x,___flmul@f1
  4654  004126  C0B9  F080         	movff	eval_poly@x+1,___flmul@f1+1
  4655  00412A  C0BA  F081         	movff	eval_poly@x+2,___flmul@f1+2
  4656  00412E  C0BB  F082         	movff	eval_poly@x+3,___flmul@f1+3
  4657  004132  ECC8  F01B         	call	___flmul	;wreg free
  4658  004136  C07F  F0A9         	movff	?___flmul,___fladd@f1
  4659  00413A  C080  F0AA         	movff	?___flmul+1,___fladd@f1+1
  4660  00413E  C081  F0AB         	movff	?___flmul+2,___fladd@f1+2
  4661  004142  C082  F0AC         	movff	?___flmul+3,___fladd@f1+3
  4662  004146  0100               	movlb	0	; () banked
  4663  004148  EE20  F0BE         	lfsr	2,eval_poly@n
  4664  00414C  06DE               	decf	postinc2,f,c
  4665  00414E  0E00               	movlw	0
  4666  004150  5ADD               	subwfb	postdec2,f,c
  4667  004152  CFDE F0C0          	movff	postinc2,??_eval_poly
  4668  004156  CFDD F0C1          	movff	postdec2,??_eval_poly+1
  4669  00415A  0100               	movlb	0	; () banked
  4670  00415C  90D8               	bcf	status,0,c
  4671  00415E  37C0               	rlcf	??_eval_poly& (0+255),f,b
  4672  004160  37C1               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4673  004162  0100               	movlb	0	; () banked
  4674  004164  90D8               	bcf	status,0,c
  4675  004166  37C0               	rlcf	??_eval_poly& (0+255),f,b
  4676  004168  37C1               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4677  00416A  0100               	movlb	0	; () banked
  4678  00416C  C0BC  F0C2         	movff	eval_poly@d,??_eval_poly+2
  4679  004170  0100               	movlb	0	; () banked
  4680  004172  C0BD  F0C3         	movff	eval_poly@d+1,??_eval_poly+3
  4681  004176  0100               	movlb	0	; () banked
  4682  004178  51C0               	movf	??_eval_poly& (0+255),w,b
  4683  00417A  0100               	movlb	0	; () banked
  4684  00417C  27C2               	addwf	(??_eval_poly+2)& (0+255),f,b
  4685  00417E  0100               	movlb	0	; () banked
  4686  004180  51C1               	movf	(??_eval_poly+1)& (0+255),w,b
  4687  004182  0100               	movlb	0	; () banked
  4688  004184  23C3               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4689  004186  C0C2  FFF6         	movff	??_eval_poly+2,tblptrl
  4690  00418A  C0C3  FFF7         	movff	??_eval_poly+3,tblptrh
  4691  00418E                     	if	0	;tblptru may be non-zero
  4692  00418E                     	endif
  4693  00418E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4694  00418E  0E00               	movlw	low (__mediumconst shr (0+16))
  4695  004190  6EF8               	movwf	tblptru,c
  4696  004192                     	endif
  4697  004192  0009               	tblrd		*+
  4698  004194  0100               	movlb	0	; () banked
  4699  004196  CFF5 F0AD          	movff	tablat,___fladd@f2
  4700  00419A  0009               	tblrd		*+
  4701  00419C  0100               	movlb	0	; () banked
  4702  00419E  CFF5 F0AE          	movff	tablat,___fladd@f2+1
  4703  0041A2  0009               	tblrd		*+
  4704  0041A4  0100               	movlb	0	; () banked
  4705  0041A6  CFF5 F0AF          	movff	tablat,___fladd@f2+2
  4706  0041AA  000A               	tblrd		*-
  4707  0041AC  0100               	movlb	0	; () banked
  4708  0041AE  CFF5 F0B0          	movff	tablat,___fladd@f2+3
  4709  0041B2  ECF7  F016         	call	___fladd	;wreg free
  4710  0041B6  C0A9  F0C4         	movff	?___fladd,eval_poly@res
  4711  0041BA  C0AA  F0C5         	movff	?___fladd+1,eval_poly@res+1
  4712  0041BE  C0AB  F0C6         	movff	?___fladd+2,eval_poly@res+2
  4713  0041C2  C0AC  F0C7         	movff	?___fladd+3,eval_poly@res+3
  4714  0041C6                     l4738:
  4715  0041C6  0100               	movlb	0	; () banked
  4716  0041C8  51BF               	movf	(eval_poly@n+1)& (0+255),w,b
  4717  0041CA  11BE               	iorwf	eval_poly@n& (0+255),w,b
  4718  0041CC  A4D8               	btfss	status,2,c
  4719  0041CE  D7A1               	goto	l4736
  4720                           
  4721                           ; BSR set to: 0
  4722  0041D0  C0C4  F0B8         	movff	eval_poly@res,?_eval_poly
  4723  0041D4  C0C5  F0B9         	movff	eval_poly@res+1,?_eval_poly+1
  4724  0041D8  C0C6  F0BA         	movff	eval_poly@res+2,?_eval_poly+2
  4725  0041DC  C0C7  F0BB         	movff	eval_poly@res+3,?_eval_poly+3
  4726                           
  4727                           ; BSR set to: 0
  4728  0041E0  0012               	return	
  4729  0041E2                     __end_of_eval_poly:
  4730                           	opt stack 0
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           prodh	equ	0xFF4
  4736                           prodl	equ	0xFF3
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           indf2	equ	0xFDF
  4740                           postinc2	equ	0xFDE
  4741                           postdec2	equ	0xFDD
  4742                           fsr2h	equ	0xFDA
  4743                           fsr2l	equ	0xFD9
  4744                           status	equ	0xFD8
  4745                           
  4746 ;; *************** function ___flmul *****************
  4747 ;; Defined at:
  4748 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flmul.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  f1              4   31[BANK0 ] int 
  4751 ;;  f2              4   35[BANK0 ] int 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  f3_as_produc    4   44[BANK0 ] unsigned long 
  4754 ;;  sign            1   49[BANK0 ] unsigned char 
  4755 ;;  cntr            1   48[BANK0 ] unsigned char 
  4756 ;;  exp             1   43[BANK0 ] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  4   31[BANK0 ] unsigned char 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4766 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;Total ram usage:       19 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    5
  4773 ;; This function calls:
  4774 ;;		___flpack
  4775 ;; This function is called by:
  4776 ;;		_asin
  4777 ;;		_atan
  4778 ;;		_eval_poly
  4779 ;;		_sqrt
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text14
  4784  003790                     __ptext14:
  4785                           	opt stack 0
  4786  003790                     ___flmul:
  4787                           	opt stack 23
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;incstack = 0
  4791  003790  0100               	movlb	0	; () banked
  4792  003792  C07F  F087         	movff	___flmul@f1,??___flmul
  4793  003796  0100               	movlb	0	; () banked
  4794  003798  C080  F088         	movff	___flmul@f1+1,??___flmul+1
  4795  00379C  0100               	movlb	0	; () banked
  4796  00379E  C081  F089         	movff	___flmul@f1+2,??___flmul+2
  4797  0037A2  0100               	movlb	0	; () banked
  4798  0037A4  C082  F08A         	movff	___flmul@f1+3,??___flmul+3
  4799  0037A8  0E18               	movlw	24
  4800  0037AA  D006               	goto	u5670
  4801  0037AC                     u5675:
  4802  0037AC  0100               	movlb	0	; () banked
  4803  0037AE  90D8               	bcf	status,0,c
  4804  0037B0  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  4805  0037B2  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  4806  0037B4  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  4807  0037B6  3387               	rrcf	??___flmul& (0+255),f,b
  4808  0037B8                     u5670:
  4809  0037B8  2EE8               	decfsz	wreg,f,c
  4810  0037BA  D7F8               	goto	u5675
  4811  0037BC  0100               	movlb	0	; () banked
  4812  0037BE  5187               	movf	??___flmul& (0+255),w,b
  4813  0037C0  0100               	movlb	0	; () banked
  4814  0037C2  6F8B               	movwf	___flmul@exp& (0+255),b
  4815  0037C4  0100               	movlb	0	; () banked
  4816  0037C6  678B               	tstfsz	___flmul@exp& (0+255),b
  4817  0037C8  D00D               	goto	l4630
  4818                           
  4819                           ; BSR set to: 0
  4820  0037CA  0E00               	movlw	0
  4821  0037CC  0100               	movlb	0	; () banked
  4822  0037CE  6F7F               	movwf	?___flmul& (0+255),b
  4823  0037D0  0E00               	movlw	0
  4824  0037D2  0100               	movlb	0	; () banked
  4825  0037D4  6F80               	movwf	(?___flmul+1)& (0+255),b
  4826  0037D6  0E00               	movlw	0
  4827  0037D8  0100               	movlb	0	; () banked
  4828  0037DA  6F81               	movwf	(?___flmul+2)& (0+255),b
  4829  0037DC  0E00               	movlw	0
  4830  0037DE  0100               	movlb	0	; () banked
  4831  0037E0  6F82               	movwf	(?___flmul+3)& (0+255),b
  4832  0037E2  0012               	return	
  4833  0037E4                     l4630:
  4834                           
  4835                           ; BSR set to: 0
  4836  0037E4  0100               	movlb	0	; () banked
  4837  0037E6  C083  F087         	movff	___flmul@f2,??___flmul
  4838  0037EA  0100               	movlb	0	; () banked
  4839  0037EC  C084  F088         	movff	___flmul@f2+1,??___flmul+1
  4840  0037F0  0100               	movlb	0	; () banked
  4841  0037F2  C085  F089         	movff	___flmul@f2+2,??___flmul+2
  4842  0037F6  0100               	movlb	0	; () banked
  4843  0037F8  C086  F08A         	movff	___flmul@f2+3,??___flmul+3
  4844  0037FC  0E18               	movlw	24
  4845  0037FE  D006               	goto	u5690
  4846  003800                     u5695:
  4847  003800  0100               	movlb	0	; () banked
  4848  003802  90D8               	bcf	status,0,c
  4849  003804  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  4850  003806  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  4851  003808  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  4852  00380A  3387               	rrcf	??___flmul& (0+255),f,b
  4853  00380C                     u5690:
  4854  00380C  2EE8               	decfsz	wreg,f,c
  4855  00380E  D7F8               	goto	u5695
  4856  003810  0100               	movlb	0	; () banked
  4857  003812  5187               	movf	??___flmul& (0+255),w,b
  4858  003814  0100               	movlb	0	; () banked
  4859  003816  6F91               	movwf	___flmul@sign& (0+255),b
  4860  003818  0100               	movlb	0	; () banked
  4861  00381A  6791               	tstfsz	___flmul@sign& (0+255),b
  4862  00381C  D00D               	goto	l4636
  4863                           
  4864                           ; BSR set to: 0
  4865  00381E  0E00               	movlw	0
  4866  003820  0100               	movlb	0	; () banked
  4867  003822  6F7F               	movwf	?___flmul& (0+255),b
  4868  003824  0E00               	movlw	0
  4869  003826  0100               	movlb	0	; () banked
  4870  003828  6F80               	movwf	(?___flmul+1)& (0+255),b
  4871  00382A  0E00               	movlw	0
  4872  00382C  0100               	movlb	0	; () banked
  4873  00382E  6F81               	movwf	(?___flmul+2)& (0+255),b
  4874  003830  0E00               	movlw	0
  4875  003832  0100               	movlb	0	; () banked
  4876  003834  6F82               	movwf	(?___flmul+3)& (0+255),b
  4877  003836  0012               	return	
  4878  003838                     l4636:
  4879                           
  4880                           ; BSR set to: 0
  4881  003838  0100               	movlb	0	; () banked
  4882  00383A  5191               	movf	___flmul@sign& (0+255),w,b
  4883  00383C  0F7B               	addlw	123
  4884  00383E  0100               	movlb	0	; () banked
  4885  003840  278B               	addwf	___flmul@exp& (0+255),f,b
  4886                           
  4887                           ; BSR set to: 0
  4888  003842  C082  F091         	movff	___flmul@f1+3,___flmul@sign
  4889  003846  0100               	movlb	0	; () banked
  4890  003848  5186               	movf	(___flmul@f2+3)& (0+255),w,b
  4891  00384A  0100               	movlb	0	; () banked
  4892  00384C  1B91               	xorwf	___flmul@sign& (0+255),f,b
  4893  00384E  0E80               	movlw	128
  4894  003850  0100               	movlb	0	; () banked
  4895  003852  1791               	andwf	___flmul@sign& (0+255),f,b
  4896                           
  4897                           ; BSR set to: 0
  4898  003854  0100               	movlb	0	; () banked
  4899  003856  8F81               	bsf	(___flmul@f1+2)& (0+255),7,b
  4900                           
  4901                           ; BSR set to: 0
  4902  003858  0100               	movlb	0	; () banked
  4903  00385A  8F85               	bsf	(___flmul@f2+2)& (0+255),7,b
  4904  00385C  0EFF               	movlw	255
  4905  00385E  0100               	movlb	0	; () banked
  4906  003860  1783               	andwf	___flmul@f2& (0+255),f,b
  4907  003862  0EFF               	movlw	255
  4908  003864  0100               	movlb	0	; () banked
  4909  003866  1784               	andwf	(___flmul@f2+1)& (0+255),f,b
  4910  003868  0EFF               	movlw	255
  4911  00386A  0100               	movlb	0	; () banked
  4912  00386C  1785               	andwf	(___flmul@f2+2)& (0+255),f,b
  4913  00386E  0E00               	movlw	0
  4914  003870  0100               	movlb	0	; () banked
  4915  003872  1786               	andwf	(___flmul@f2+3)& (0+255),f,b
  4916                           
  4917                           ; BSR set to: 0
  4918  003874  0E00               	movlw	0
  4919  003876  0100               	movlb	0	; () banked
  4920  003878  6F8C               	movwf	___flmul@f3_as_product& (0+255),b
  4921  00387A  0E00               	movlw	0
  4922  00387C  0100               	movlb	0	; () banked
  4923  00387E  6F8D               	movwf	(___flmul@f3_as_product+1)& (0+255),b
  4924  003880  0E00               	movlw	0
  4925  003882  0100               	movlb	0	; () banked
  4926  003884  6F8E               	movwf	(___flmul@f3_as_product+2)& (0+255),b
  4927  003886  0E00               	movlw	0
  4928  003888  0100               	movlb	0	; () banked
  4929  00388A  6F8F               	movwf	(___flmul@f3_as_product+3)& (0+255),b
  4930                           
  4931                           ; BSR set to: 0
  4932  00388C  0E07               	movlw	7
  4933  00388E  0100               	movlb	0	; () banked
  4934  003890  6F90               	movwf	___flmul@cntr& (0+255),b
  4935  003892                     l4648:
  4936                           
  4937                           ; BSR set to: 0
  4938  003892  0100               	movlb	0	; () banked
  4939  003894  A17F               	btfss	___flmul@f1& (0+255),0,b
  4940  003896  D010               	goto	l4652
  4941                           
  4942                           ; BSR set to: 0
  4943  003898  0100               	movlb	0	; () banked
  4944  00389A  5183               	movf	___flmul@f2& (0+255),w,b
  4945  00389C  0100               	movlb	0	; () banked
  4946  00389E  278C               	addwf	___flmul@f3_as_product& (0+255),f,b
  4947  0038A0  0100               	movlb	0	; () banked
  4948  0038A2  5184               	movf	(___flmul@f2+1)& (0+255),w,b
  4949  0038A4  0100               	movlb	0	; () banked
  4950  0038A6  238D               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
  4951  0038A8  0100               	movlb	0	; () banked
  4952  0038AA  5185               	movf	(___flmul@f2+2)& (0+255),w,b
  4953  0038AC  0100               	movlb	0	; () banked
  4954  0038AE  238E               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
  4955  0038B0  0100               	movlb	0	; () banked
  4956  0038B2  5186               	movf	(___flmul@f2+3)& (0+255),w,b
  4957  0038B4  0100               	movlb	0	; () banked
  4958  0038B6  238F               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
  4959  0038B8                     l4652:
  4960                           
  4961                           ; BSR set to: 0
  4962  0038B8  0100               	movlb	0	; () banked
  4963  0038BA  90D8               	bcf	status,0,c
  4964  0038BC  0100               	movlb	0	; () banked
  4965  0038BE  3382               	rrcf	(___flmul@f1+3)& (0+255),f,b
  4966  0038C0  0100               	movlb	0	; () banked
  4967  0038C2  3381               	rrcf	(___flmul@f1+2)& (0+255),f,b
  4968  0038C4  0100               	movlb	0	; () banked
  4969  0038C6  3380               	rrcf	(___flmul@f1+1)& (0+255),f,b
  4970  0038C8  0100               	movlb	0	; () banked
  4971  0038CA  337F               	rrcf	___flmul@f1& (0+255),f,b
  4972                           
  4973                           ; BSR set to: 0
  4974  0038CC  0100               	movlb	0	; () banked
  4975  0038CE  90D8               	bcf	status,0,c
  4976  0038D0  0100               	movlb	0	; () banked
  4977  0038D2  3783               	rlcf	___flmul@f2& (0+255),f,b
  4978  0038D4  0100               	movlb	0	; () banked
  4979  0038D6  3784               	rlcf	(___flmul@f2+1)& (0+255),f,b
  4980  0038D8  0100               	movlb	0	; () banked
  4981  0038DA  3785               	rlcf	(___flmul@f2+2)& (0+255),f,b
  4982  0038DC  0100               	movlb	0	; () banked
  4983  0038DE  3786               	rlcf	(___flmul@f2+3)& (0+255),f,b
  4984                           
  4985                           ; BSR set to: 0
  4986  0038E0  0100               	movlb	0	; () banked
  4987  0038E2  2F90               	decfsz	___flmul@cntr& (0+255),f,b
  4988  0038E4  D7D6               	goto	l4648
  4989                           
  4990                           ; BSR set to: 0
  4991                           
  4992                           ; BSR set to: 0
  4993  0038E6  0E11               	movlw	17
  4994  0038E8  0100               	movlb	0	; () banked
  4995  0038EA  6F90               	movwf	___flmul@cntr& (0+255),b
  4996  0038EC                     l4660:
  4997                           
  4998                           ; BSR set to: 0
  4999  0038EC  0100               	movlb	0	; () banked
  5000  0038EE  A17F               	btfss	___flmul@f1& (0+255),0,b
  5001  0038F0  D010               	goto	l4664
  5002                           
  5003                           ; BSR set to: 0
  5004  0038F2  0100               	movlb	0	; () banked
  5005  0038F4  5183               	movf	___flmul@f2& (0+255),w,b
  5006  0038F6  0100               	movlb	0	; () banked
  5007  0038F8  278C               	addwf	___flmul@f3_as_product& (0+255),f,b
  5008  0038FA  0100               	movlb	0	; () banked
  5009  0038FC  5184               	movf	(___flmul@f2+1)& (0+255),w,b
  5010  0038FE  0100               	movlb	0	; () banked
  5011  003900  238D               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
  5012  003902  0100               	movlb	0	; () banked
  5013  003904  5185               	movf	(___flmul@f2+2)& (0+255),w,b
  5014  003906  0100               	movlb	0	; () banked
  5015  003908  238E               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
  5016  00390A  0100               	movlb	0	; () banked
  5017  00390C  5186               	movf	(___flmul@f2+3)& (0+255),w,b
  5018  00390E  0100               	movlb	0	; () banked
  5019  003910  238F               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
  5020  003912                     l4664:
  5021                           
  5022                           ; BSR set to: 0
  5023  003912  0100               	movlb	0	; () banked
  5024  003914  90D8               	bcf	status,0,c
  5025  003916  0100               	movlb	0	; () banked
  5026  003918  3382               	rrcf	(___flmul@f1+3)& (0+255),f,b
  5027  00391A  0100               	movlb	0	; () banked
  5028  00391C  3381               	rrcf	(___flmul@f1+2)& (0+255),f,b
  5029  00391E  0100               	movlb	0	; () banked
  5030  003920  3380               	rrcf	(___flmul@f1+1)& (0+255),f,b
  5031  003922  0100               	movlb	0	; () banked
  5032  003924  337F               	rrcf	___flmul@f1& (0+255),f,b
  5033                           
  5034                           ; BSR set to: 0
  5035  003926  0100               	movlb	0	; () banked
  5036  003928  90D8               	bcf	status,0,c
  5037  00392A  0100               	movlb	0	; () banked
  5038  00392C  338F               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
  5039  00392E  0100               	movlb	0	; () banked
  5040  003930  338E               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
  5041  003932  0100               	movlb	0	; () banked
  5042  003934  338D               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
  5043  003936  0100               	movlb	0	; () banked
  5044  003938  338C               	rrcf	___flmul@f3_as_product& (0+255),f,b
  5045                           
  5046                           ; BSR set to: 0
  5047  00393A  0100               	movlb	0	; () banked
  5048  00393C  2F90               	decfsz	___flmul@cntr& (0+255),f,b
  5049  00393E  D7D6               	goto	l4660
  5050                           
  5051                           ; BSR set to: 0
  5052                           
  5053                           ; BSR set to: 0
  5054  003940  C08C  F075         	movff	___flmul@f3_as_product,___flpack@arg
  5055  003944  C08D  F076         	movff	___flmul@f3_as_product+1,___flpack@arg+1
  5056  003948  C08E  F077         	movff	___flmul@f3_as_product+2,___flpack@arg+2
  5057  00394C  C08F  F078         	movff	___flmul@f3_as_product+3,___flpack@arg+3
  5058  003950  C08B  F079         	movff	___flmul@exp,___flpack@exp
  5059  003954  C091  F07A         	movff	___flmul@sign,___flpack@sign
  5060  003958  EC8A  F01D         	call	___flpack	;wreg free
  5061  00395C  C075  F07F         	movff	?___flpack,?___flmul
  5062  003960  C076  F080         	movff	?___flpack+1,?___flmul+1
  5063  003964  C077  F081         	movff	?___flpack+2,?___flmul+2
  5064  003968  C078  F082         	movff	?___flpack+3,?___flmul+3
  5065  00396C  0012               	return	
  5066  00396E                     __end_of___flmul:
  5067                           	opt stack 0
  5068                           tblptru	equ	0xFF8
  5069                           tblptrh	equ	0xFF7
  5070                           tblptrl	equ	0xFF6
  5071                           tablat	equ	0xFF5
  5072                           prodh	equ	0xFF4
  5073                           prodl	equ	0xFF3
  5074                           postinc0	equ	0xFEE
  5075                           wreg	equ	0xFE8
  5076                           indf2	equ	0xFDF
  5077                           postinc2	equ	0xFDE
  5078                           postdec2	equ	0xFDD
  5079                           fsr2h	equ	0xFDA
  5080                           fsr2l	equ	0xFD9
  5081                           status	equ	0xFD8
  5082                           
  5083 ;; *************** function ___fladd *****************
  5084 ;; Defined at:
  5085 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fladd.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  f1              4   73[BANK0 ] unsigned char 
  5088 ;;  f2              4   77[BANK0 ] unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  exp1            1   87[BANK0 ] unsigned char 
  5091 ;;  exp2            1   86[BANK0 ] unsigned char 
  5092 ;;  sign            1   85[BANK0 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  4   73[BANK0 ] unsigned char 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5102 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;Total ram usage:       15 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    5
  5109 ;; This function calls:
  5110 ;;		___flpack
  5111 ;; This function is called by:
  5112 ;;		_asin
  5113 ;;		_atan
  5114 ;;		_eval_poly
  5115 ;;		___flsub
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text15
  5120  002DEE                     __ptext15:
  5121                           	opt stack 0
  5122  002DEE                     ___fladd:
  5123                           	opt stack 22
  5124                           
  5125                           ;incstack = 0
  5126  002DEE  0100               	movlb	0	; () banked
  5127  002DF0  C0A9  F0B1         	movff	___fladd@f1,??___fladd
  5128  002DF4  0100               	movlb	0	; () banked
  5129  002DF6  C0AA  F0B2         	movff	___fladd@f1+1,??___fladd+1
  5130  002DFA  0100               	movlb	0	; () banked
  5131  002DFC  C0AB  F0B3         	movff	___fladd@f1+2,??___fladd+2
  5132  002E00  0100               	movlb	0	; () banked
  5133  002E02  C0AC  F0B4         	movff	___fladd@f1+3,??___fladd+3
  5134  002E06  0E18               	movlw	24
  5135  002E08  D006               	goto	u5460
  5136  002E0A                     u5465:
  5137  002E0A  0100               	movlb	0	; () banked
  5138  002E0C  90D8               	bcf	status,0,c
  5139  002E0E  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  5140  002E10  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  5141  002E12  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  5142  002E14  33B1               	rrcf	??___fladd& (0+255),f,b
  5143  002E16                     u5460:
  5144  002E16  2EE8               	decfsz	wreg,f,c
  5145  002E18  D7F8               	goto	u5465
  5146  002E1A  0100               	movlb	0	; () banked
  5147  002E1C  51B1               	movf	??___fladd& (0+255),w,b
  5148  002E1E  0100               	movlb	0	; () banked
  5149  002E20  6FB7               	movwf	___fladd@exp1& (0+255),b
  5150  002E22  0100               	movlb	0	; () banked
  5151  002E24  C0AD  F0B1         	movff	___fladd@f2,??___fladd
  5152  002E28  0100               	movlb	0	; () banked
  5153  002E2A  C0AE  F0B2         	movff	___fladd@f2+1,??___fladd+1
  5154  002E2E  0100               	movlb	0	; () banked
  5155  002E30  C0AF  F0B3         	movff	___fladd@f2+2,??___fladd+2
  5156  002E34  0100               	movlb	0	; () banked
  5157  002E36  C0B0  F0B4         	movff	___fladd@f2+3,??___fladd+3
  5158  002E3A  0E18               	movlw	24
  5159  002E3C  D006               	goto	u5470
  5160  002E3E                     u5475:
  5161  002E3E  0100               	movlb	0	; () banked
  5162  002E40  90D8               	bcf	status,0,c
  5163  002E42  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  5164  002E44  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  5165  002E46  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  5166  002E48  33B1               	rrcf	??___fladd& (0+255),f,b
  5167  002E4A                     u5470:
  5168  002E4A  2EE8               	decfsz	wreg,f,c
  5169  002E4C  D7F8               	goto	u5475
  5170  002E4E  0100               	movlb	0	; () banked
  5171  002E50  51B1               	movf	??___fladd& (0+255),w,b
  5172  002E52  0100               	movlb	0	; () banked
  5173  002E54  6FB6               	movwf	___fladd@exp2& (0+255),b
  5174                           
  5175                           ; BSR set to: 0
  5176  002E56  0100               	movlb	0	; () banked
  5177  002E58  51B7               	movf	___fladd@exp1& (0+255),w,b
  5178  002E5A  B4D8               	btfsc	status,2,c
  5179  002E5C  D012               	goto	l1022
  5180                           
  5181                           ; BSR set to: 0
  5182  002E5E  0100               	movlb	0	; () banked
  5183  002E60  51B6               	movf	___fladd@exp2& (0+255),w,b
  5184  002E62  0100               	movlb	0	; () banked
  5185  002E64  5DB7               	subwf	___fladd@exp1& (0+255),w,b
  5186  002E66  B0D8               	btfsc	status,0,c
  5187  002E68  D015               	goto	l4562
  5188                           
  5189                           ; BSR set to: 0
  5190  002E6A  0100               	movlb	0	; () banked
  5191  002E6C  51B7               	movf	___fladd@exp1& (0+255),w,b
  5192  002E6E  0800               	sublw	0
  5193  002E70  0100               	movlb	0	; () banked
  5194  002E72  25B6               	addwf	___fladd@exp2& (0+255),w,b
  5195  002E74  0100               	movlb	0	; () banked
  5196  002E76  6FB1               	movwf	??___fladd& (0+255),b
  5197  002E78  0E21               	movlw	33
  5198  002E7A  0100               	movlb	0	; () banked
  5199  002E7C  5DB1               	subwf	??___fladd& (0+255),w,b
  5200  002E7E  A0D8               	btfss	status,0,c
  5201  002E80  D009               	goto	l4562
  5202  002E82                     l1022:
  5203                           
  5204                           ; BSR set to: 0
  5205  002E82  C0AD  F0A9         	movff	___fladd@f2,?___fladd
  5206  002E86  C0AE  F0AA         	movff	___fladd@f2+1,?___fladd+1
  5207  002E8A  C0AF  F0AB         	movff	___fladd@f2+2,?___fladd+2
  5208  002E8E  C0B0  F0AC         	movff	___fladd@f2+3,?___fladd+3
  5209  002E92  0012               	return	
  5210  002E94                     l4562:
  5211                           
  5212                           ; BSR set to: 0
  5213  002E94  0100               	movlb	0	; () banked
  5214  002E96  51B6               	movf	___fladd@exp2& (0+255),w,b
  5215  002E98  B4D8               	btfsc	status,2,c
  5216  002E9A  D012               	goto	l1026
  5217                           
  5218                           ; BSR set to: 0
  5219  002E9C  0100               	movlb	0	; () banked
  5220  002E9E  51B7               	movf	___fladd@exp1& (0+255),w,b
  5221  002EA0  0100               	movlb	0	; () banked
  5222  002EA2  5DB6               	subwf	___fladd@exp2& (0+255),w,b
  5223  002EA4  B0D8               	btfsc	status,0,c
  5224  002EA6  D015               	goto	l4568
  5225                           
  5226                           ; BSR set to: 0
  5227  002EA8  0100               	movlb	0	; () banked
  5228  002EAA  51B6               	movf	___fladd@exp2& (0+255),w,b
  5229  002EAC  0800               	sublw	0
  5230  002EAE  0100               	movlb	0	; () banked
  5231  002EB0  25B7               	addwf	___fladd@exp1& (0+255),w,b
  5232  002EB2  0100               	movlb	0	; () banked
  5233  002EB4  6FB1               	movwf	??___fladd& (0+255),b
  5234  002EB6  0E21               	movlw	33
  5235  002EB8  0100               	movlb	0	; () banked
  5236  002EBA  5DB1               	subwf	??___fladd& (0+255),w,b
  5237  002EBC  A0D8               	btfss	status,0,c
  5238  002EBE  D009               	goto	l4568
  5239  002EC0                     l1026:
  5240                           
  5241                           ; BSR set to: 0
  5242  002EC0  C0A9  F0A9         	movff	___fladd@f1,?___fladd
  5243  002EC4  C0AA  F0AA         	movff	___fladd@f1+1,?___fladd+1
  5244  002EC8  C0AB  F0AB         	movff	___fladd@f1+2,?___fladd+2
  5245  002ECC  C0AC  F0AC         	movff	___fladd@f1+3,?___fladd+3
  5246  002ED0  0012               	return	
  5247  002ED2                     l4568:
  5248                           
  5249                           ; BSR set to: 0
  5250  002ED2  0E06               	movlw	6
  5251  002ED4  0100               	movlb	0	; () banked
  5252  002ED6  6FB5               	movwf	___fladd@sign& (0+255),b
  5253                           
  5254                           ; BSR set to: 0
  5255  002ED8  0100               	movlb	0	; () banked
  5256  002EDA  AFAC               	btfss	(___fladd@f1+3)& (0+255),7,b
  5257  002EDC  D002               	goto	l4574
  5258                           
  5259                           ; BSR set to: 0
  5260  002EDE  0100               	movlb	0	; () banked
  5261  002EE0  8FB5               	bsf	___fladd@sign& (0+255),7,b
  5262  002EE2                     l4574:
  5263                           
  5264                           ; BSR set to: 0
  5265  002EE2  0100               	movlb	0	; () banked
  5266  002EE4  AFB0               	btfss	(___fladd@f2+3)& (0+255),7,b
  5267  002EE6  D002               	goto	l1028
  5268                           
  5269                           ; BSR set to: 0
  5270  002EE8  0100               	movlb	0	; () banked
  5271  002EEA  8DB5               	bsf	___fladd@sign& (0+255),6,b
  5272  002EEC                     l1028:
  5273                           
  5274                           ; BSR set to: 0
  5275  002EEC  0100               	movlb	0	; () banked
  5276  002EEE  8FAB               	bsf	(___fladd@f1+2)& (0+255),7,b
  5277                           
  5278                           ; BSR set to: 0
  5279  002EF0  0EFF               	movlw	255
  5280  002EF2  0100               	movlb	0	; () banked
  5281  002EF4  17A9               	andwf	___fladd@f1& (0+255),f,b
  5282  002EF6  0EFF               	movlw	255
  5283  002EF8  0100               	movlb	0	; () banked
  5284  002EFA  17AA               	andwf	(___fladd@f1+1)& (0+255),f,b
  5285  002EFC  0EFF               	movlw	255
  5286  002EFE  0100               	movlb	0	; () banked
  5287  002F00  17AB               	andwf	(___fladd@f1+2)& (0+255),f,b
  5288  002F02  0E00               	movlw	0
  5289  002F04  0100               	movlb	0	; () banked
  5290  002F06  17AC               	andwf	(___fladd@f1+3)& (0+255),f,b
  5291                           
  5292                           ; BSR set to: 0
  5293  002F08  0100               	movlb	0	; () banked
  5294  002F0A  8FAF               	bsf	(___fladd@f2+2)& (0+255),7,b
  5295  002F0C  0EFF               	movlw	255
  5296  002F0E  0100               	movlb	0	; () banked
  5297  002F10  17AD               	andwf	___fladd@f2& (0+255),f,b
  5298  002F12  0EFF               	movlw	255
  5299  002F14  0100               	movlb	0	; () banked
  5300  002F16  17AE               	andwf	(___fladd@f2+1)& (0+255),f,b
  5301  002F18  0EFF               	movlw	255
  5302  002F1A  0100               	movlb	0	; () banked
  5303  002F1C  17AF               	andwf	(___fladd@f2+2)& (0+255),f,b
  5304  002F1E  0E00               	movlw	0
  5305  002F20  0100               	movlb	0	; () banked
  5306  002F22  17B0               	andwf	(___fladd@f2+3)& (0+255),f,b
  5307  002F24  0100               	movlb	0	; () banked
  5308  002F26  51B6               	movf	___fladd@exp2& (0+255),w,b
  5309  002F28  0100               	movlb	0	; () banked
  5310  002F2A  5DB7               	subwf	___fladd@exp1& (0+255),w,b
  5311  002F2C  B0D8               	btfsc	status,0,c
  5312  002F2E  D02E               	goto	l4592
  5313  002F30                     l4582:
  5314                           
  5315                           ; BSR set to: 0
  5316  002F30  0100               	movlb	0	; () banked
  5317  002F32  90D8               	bcf	status,0,c
  5318  002F34  0100               	movlb	0	; () banked
  5319  002F36  37AD               	rlcf	___fladd@f2& (0+255),f,b
  5320  002F38  0100               	movlb	0	; () banked
  5321  002F3A  37AE               	rlcf	(___fladd@f2+1)& (0+255),f,b
  5322  002F3C  0100               	movlb	0	; () banked
  5323  002F3E  37AF               	rlcf	(___fladd@f2+2)& (0+255),f,b
  5324  002F40  0100               	movlb	0	; () banked
  5325  002F42  37B0               	rlcf	(___fladd@f2+3)& (0+255),f,b
  5326  002F44  0100               	movlb	0	; () banked
  5327  002F46  07B6               	decf	___fladd@exp2& (0+255),f,b
  5328                           
  5329                           ; BSR set to: 0
  5330  002F48  0100               	movlb	0	; () banked
  5331  002F4A  51B6               	movf	___fladd@exp2& (0+255),w,b
  5332  002F4C  0100               	movlb	0	; () banked
  5333  002F4E  19B7               	xorwf	___fladd@exp1& (0+255),w,b
  5334  002F50  B4D8               	btfsc	status,2,c
  5335  002F52  D016               	goto	l4590
  5336                           
  5337                           ; BSR set to: 0
  5338  002F54  0100               	movlb	0	; () banked
  5339  002F56  07B5               	decf	___fladd@sign& (0+255),f,b
  5340  002F58  C0B5  F0B1         	movff	___fladd@sign,??___fladd
  5341  002F5C  0E07               	movlw	7
  5342  002F5E  0100               	movlb	0	; () banked
  5343  002F60  17B1               	andwf	??___fladd& (0+255),f,b
  5344  002F62  B4D8               	btfsc	status,2,c
  5345  002F64  D00D               	goto	l4590
  5346  002F66  D7E4               	goto	l4582
  5347  002F68                     l4588:
  5348                           
  5349                           ; BSR set to: 0
  5350  002F68  0100               	movlb	0	; () banked
  5351  002F6A  90D8               	bcf	status,0,c
  5352  002F6C  0100               	movlb	0	; () banked
  5353  002F6E  33AC               	rrcf	(___fladd@f1+3)& (0+255),f,b
  5354  002F70  0100               	movlb	0	; () banked
  5355  002F72  33AB               	rrcf	(___fladd@f1+2)& (0+255),f,b
  5356  002F74  0100               	movlb	0	; () banked
  5357  002F76  33AA               	rrcf	(___fladd@f1+1)& (0+255),f,b
  5358  002F78  0100               	movlb	0	; () banked
  5359  002F7A  33A9               	rrcf	___fladd@f1& (0+255),f,b
  5360  002F7C  0100               	movlb	0	; () banked
  5361  002F7E  2BB7               	incf	___fladd@exp1& (0+255),f,b
  5362  002F80                     l4590:
  5363                           
  5364                           ; BSR set to: 0
  5365  002F80  0100               	movlb	0	; () banked
  5366  002F82  51B6               	movf	___fladd@exp2& (0+255),w,b
  5367  002F84  0100               	movlb	0	; () banked
  5368  002F86  63B7               	cpfseq	___fladd@exp1& (0+255),b
  5369  002F88  D7EF               	goto	l4588
  5370  002F8A  D033               	goto	l1037
  5371  002F8C                     l4592:
  5372                           
  5373                           ; BSR set to: 0
  5374  002F8C  0100               	movlb	0	; () banked
  5375  002F8E  51B7               	movf	___fladd@exp1& (0+255),w,b
  5376  002F90  0100               	movlb	0	; () banked
  5377  002F92  5DB6               	subwf	___fladd@exp2& (0+255),w,b
  5378  002F94  B0D8               	btfsc	status,0,c
  5379  002F96  D02D               	goto	l1037
  5380  002F98                     l4594:
  5381                           
  5382                           ; BSR set to: 0
  5383  002F98  0100               	movlb	0	; () banked
  5384  002F9A  90D8               	bcf	status,0,c
  5385  002F9C  0100               	movlb	0	; () banked
  5386  002F9E  37A9               	rlcf	___fladd@f1& (0+255),f,b
  5387  002FA0  0100               	movlb	0	; () banked
  5388  002FA2  37AA               	rlcf	(___fladd@f1+1)& (0+255),f,b
  5389  002FA4  0100               	movlb	0	; () banked
  5390  002FA6  37AB               	rlcf	(___fladd@f1+2)& (0+255),f,b
  5391  002FA8  0100               	movlb	0	; () banked
  5392  002FAA  37AC               	rlcf	(___fladd@f1+3)& (0+255),f,b
  5393  002FAC  0100               	movlb	0	; () banked
  5394  002FAE  07B7               	decf	___fladd@exp1& (0+255),f,b
  5395                           
  5396                           ; BSR set to: 0
  5397  002FB0  0100               	movlb	0	; () banked
  5398  002FB2  51B6               	movf	___fladd@exp2& (0+255),w,b
  5399  002FB4  0100               	movlb	0	; () banked
  5400  002FB6  19B7               	xorwf	___fladd@exp1& (0+255),w,b
  5401  002FB8  B4D8               	btfsc	status,2,c
  5402  002FBA  D016               	goto	l4602
  5403                           
  5404                           ; BSR set to: 0
  5405  002FBC  0100               	movlb	0	; () banked
  5406  002FBE  07B5               	decf	___fladd@sign& (0+255),f,b
  5407  002FC0  C0B5  F0B1         	movff	___fladd@sign,??___fladd
  5408  002FC4  0E07               	movlw	7
  5409  002FC6  0100               	movlb	0	; () banked
  5410  002FC8  17B1               	andwf	??___fladd& (0+255),f,b
  5411  002FCA  B4D8               	btfsc	status,2,c
  5412  002FCC  D00D               	goto	l4602
  5413  002FCE  D7E4               	goto	l4594
  5414  002FD0                     l4600:
  5415                           
  5416                           ; BSR set to: 0
  5417  002FD0  0100               	movlb	0	; () banked
  5418  002FD2  90D8               	bcf	status,0,c
  5419  002FD4  0100               	movlb	0	; () banked
  5420  002FD6  33B0               	rrcf	(___fladd@f2+3)& (0+255),f,b
  5421  002FD8  0100               	movlb	0	; () banked
  5422  002FDA  33AF               	rrcf	(___fladd@f2+2)& (0+255),f,b
  5423  002FDC  0100               	movlb	0	; () banked
  5424  002FDE  33AE               	rrcf	(___fladd@f2+1)& (0+255),f,b
  5425  002FE0  0100               	movlb	0	; () banked
  5426  002FE2  33AD               	rrcf	___fladd@f2& (0+255),f,b
  5427  002FE4  0100               	movlb	0	; () banked
  5428  002FE6  2BB6               	incf	___fladd@exp2& (0+255),f,b
  5429  002FE8                     l4602:
  5430                           
  5431                           ; BSR set to: 0
  5432  002FE8  0100               	movlb	0	; () banked
  5433  002FEA  51B6               	movf	___fladd@exp2& (0+255),w,b
  5434  002FEC  0100               	movlb	0	; () banked
  5435  002FEE  63B7               	cpfseq	___fladd@exp1& (0+255),b
  5436  002FF0  D7EF               	goto	l4600
  5437  002FF2                     l1037:
  5438                           
  5439                           ; BSR set to: 0
  5440  002FF2  0100               	movlb	0	; () banked
  5441  002FF4  AFB5               	btfss	___fladd@sign& (0+255),7,b
  5442  002FF6  D016               	goto	l4606
  5443                           
  5444                           ; BSR set to: 0
  5445  002FF8  0EFF               	movlw	255
  5446  002FFA  0100               	movlb	0	; () banked
  5447  002FFC  1BA9               	xorwf	___fladd@f1& (0+255),f,b
  5448  002FFE  0EFF               	movlw	255
  5449  003000  0100               	movlb	0	; () banked
  5450  003002  1BAA               	xorwf	(___fladd@f1+1)& (0+255),f,b
  5451  003004  0EFF               	movlw	255
  5452  003006  0100               	movlb	0	; () banked
  5453  003008  1BAB               	xorwf	(___fladd@f1+2)& (0+255),f,b
  5454  00300A  0EFF               	movlw	255
  5455  00300C  0100               	movlb	0	; () banked
  5456  00300E  1BAC               	xorwf	(___fladd@f1+3)& (0+255),f,b
  5457  003010  0E01               	movlw	1
  5458  003012  0100               	movlb	0	; () banked
  5459  003014  27A9               	addwf	___fladd@f1& (0+255),f,b
  5460  003016  0E00               	movlw	0
  5461  003018  0100               	movlb	0	; () banked
  5462  00301A  23AA               	addwfc	(___fladd@f1+1)& (0+255),f,b
  5463  00301C  0100               	movlb	0	; () banked
  5464  00301E  23AB               	addwfc	(___fladd@f1+2)& (0+255),f,b
  5465  003020  0100               	movlb	0	; () banked
  5466  003022  23AC               	addwfc	(___fladd@f1+3)& (0+255),f,b
  5467  003024                     l4606:
  5468                           
  5469                           ; BSR set to: 0
  5470  003024  0100               	movlb	0	; () banked
  5471  003026  ADB5               	btfss	___fladd@sign& (0+255),6,b
  5472  003028  D016               	goto	l4610
  5473                           
  5474                           ; BSR set to: 0
  5475  00302A  0EFF               	movlw	255
  5476  00302C  0100               	movlb	0	; () banked
  5477  00302E  1BAD               	xorwf	___fladd@f2& (0+255),f,b
  5478  003030  0EFF               	movlw	255
  5479  003032  0100               	movlb	0	; () banked
  5480  003034  1BAE               	xorwf	(___fladd@f2+1)& (0+255),f,b
  5481  003036  0EFF               	movlw	255
  5482  003038  0100               	movlb	0	; () banked
  5483  00303A  1BAF               	xorwf	(___fladd@f2+2)& (0+255),f,b
  5484  00303C  0EFF               	movlw	255
  5485  00303E  0100               	movlb	0	; () banked
  5486  003040  1BB0               	xorwf	(___fladd@f2+3)& (0+255),f,b
  5487  003042  0E01               	movlw	1
  5488  003044  0100               	movlb	0	; () banked
  5489  003046  27AD               	addwf	___fladd@f2& (0+255),f,b
  5490  003048  0E00               	movlw	0
  5491  00304A  0100               	movlb	0	; () banked
  5492  00304C  23AE               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5493  00304E  0100               	movlb	0	; () banked
  5494  003050  23AF               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5495  003052  0100               	movlb	0	; () banked
  5496  003054  23B0               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5497  003056                     l4610:
  5498                           
  5499                           ; BSR set to: 0
  5500  003056  0E00               	movlw	0
  5501  003058  0100               	movlb	0	; () banked
  5502  00305A  6FB5               	movwf	___fladd@sign& (0+255),b
  5503                           
  5504                           ; BSR set to: 0
  5505  00305C  0100               	movlb	0	; () banked
  5506  00305E  51A9               	movf	___fladd@f1& (0+255),w,b
  5507  003060  0100               	movlb	0	; () banked
  5508  003062  27AD               	addwf	___fladd@f2& (0+255),f,b
  5509  003064  0100               	movlb	0	; () banked
  5510  003066  51AA               	movf	(___fladd@f1+1)& (0+255),w,b
  5511  003068  0100               	movlb	0	; () banked
  5512  00306A  23AE               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5513  00306C  0100               	movlb	0	; () banked
  5514  00306E  51AB               	movf	(___fladd@f1+2)& (0+255),w,b
  5515  003070  0100               	movlb	0	; () banked
  5516  003072  23AF               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5517  003074  0100               	movlb	0	; () banked
  5518  003076  51AC               	movf	(___fladd@f1+3)& (0+255),w,b
  5519  003078  0100               	movlb	0	; () banked
  5520  00307A  23B0               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5521                           
  5522                           ; BSR set to: 0
  5523  00307C  0100               	movlb	0	; () banked
  5524  00307E  AFB0               	btfss	(___fladd@f2+3)& (0+255),7,b
  5525  003080  D019               	goto	l4620
  5526                           
  5527                           ; BSR set to: 0
  5528  003082  0EFF               	movlw	255
  5529  003084  0100               	movlb	0	; () banked
  5530  003086  1BAD               	xorwf	___fladd@f2& (0+255),f,b
  5531  003088  0EFF               	movlw	255
  5532  00308A  0100               	movlb	0	; () banked
  5533  00308C  1BAE               	xorwf	(___fladd@f2+1)& (0+255),f,b
  5534  00308E  0EFF               	movlw	255
  5535  003090  0100               	movlb	0	; () banked
  5536  003092  1BAF               	xorwf	(___fladd@f2+2)& (0+255),f,b
  5537  003094  0EFF               	movlw	255
  5538  003096  0100               	movlb	0	; () banked
  5539  003098  1BB0               	xorwf	(___fladd@f2+3)& (0+255),f,b
  5540  00309A  0E01               	movlw	1
  5541  00309C  0100               	movlb	0	; () banked
  5542  00309E  27AD               	addwf	___fladd@f2& (0+255),f,b
  5543  0030A0  0E00               	movlw	0
  5544  0030A2  0100               	movlb	0	; () banked
  5545  0030A4  23AE               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5546  0030A6  0100               	movlb	0	; () banked
  5547  0030A8  23AF               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5548  0030AA  0100               	movlb	0	; () banked
  5549  0030AC  23B0               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5550                           
  5551                           ; BSR set to: 0
  5552  0030AE  0E01               	movlw	1
  5553  0030B0  0100               	movlb	0	; () banked
  5554  0030B2  6FB5               	movwf	___fladd@sign& (0+255),b
  5555  0030B4                     l4620:
  5556                           
  5557                           ; BSR set to: 0
  5558  0030B4  C0AD  F075         	movff	___fladd@f2,___flpack@arg
  5559  0030B8  C0AE  F076         	movff	___fladd@f2+1,___flpack@arg+1
  5560  0030BC  C0AF  F077         	movff	___fladd@f2+2,___flpack@arg+2
  5561  0030C0  C0B0  F078         	movff	___fladd@f2+3,___flpack@arg+3
  5562  0030C4  C0B7  F079         	movff	___fladd@exp1,___flpack@exp
  5563  0030C8  C0B5  F07A         	movff	___fladd@sign,___flpack@sign
  5564  0030CC  EC8A  F01D         	call	___flpack	;wreg free
  5565  0030D0  C075  F0A9         	movff	?___flpack,?___fladd
  5566  0030D4  C076  F0AA         	movff	?___flpack+1,?___fladd+1
  5567  0030D8  C077  F0AB         	movff	?___flpack+2,?___fladd+2
  5568  0030DC  C078  F0AC         	movff	?___flpack+3,?___fladd+3
  5569  0030E0  0012               	return	
  5570  0030E2                     __end_of___fladd:
  5571                           	opt stack 0
  5572                           tblptru	equ	0xFF8
  5573                           tblptrh	equ	0xFF7
  5574                           tblptrl	equ	0xFF6
  5575                           tablat	equ	0xFF5
  5576                           prodh	equ	0xFF4
  5577                           prodl	equ	0xFF3
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function ___flge *****************
  5588 ;; Defined at:
  5589 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flge.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  ff1             4   58[BANK0 ] unsigned char 
  5592 ;;  ff2             4   62[BANK0 ] unsigned char 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5604 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;Total ram usage:       12 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    4
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_asin
  5615 ;;		_atan
  5616 ;;		_sqrt
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text16
  5621  0041E2                     __ptext16:
  5622                           	opt stack 0
  5623  0041E2                     ___flge:
  5624                           	opt stack 24
  5625                           
  5626                           ;incstack = 0
  5627  0041E2  0100               	movlb	0	; () banked
  5628  0041E4  AF9D               	btfss	(___flge@ff1+3)& (0+255),7,b
  5629  0041E6  D02A               	goto	l4744
  5630                           
  5631                           ; BSR set to: 0
  5632  0041E8  0100               	movlb	0	; () banked
  5633  0041EA  C09A  F0A2         	movff	___flge@ff1,??___flge
  5634  0041EE  0100               	movlb	0	; () banked
  5635  0041F0  C09B  F0A3         	movff	___flge@ff1+1,??___flge+1
  5636  0041F4  0100               	movlb	0	; () banked
  5637  0041F6  C09C  F0A4         	movff	___flge@ff1+2,??___flge+2
  5638  0041FA  0100               	movlb	0	; () banked
  5639  0041FC  C09D  F0A5         	movff	___flge@ff1+3,??___flge+3
  5640  004200  0100               	movlb	0	; () banked
  5641  004202  1FA2               	comf	??___flge& (0+255),f,b
  5642  004204  1FA3               	comf	(??___flge+1)& (0+255),f,b
  5643  004206  1FA4               	comf	(??___flge+2)& (0+255),f,b
  5644  004208  1FA5               	comf	(??___flge+3)& (0+255),f,b
  5645  00420A  2BA2               	incf	??___flge& (0+255),f,b
  5646  00420C  0E00               	movlw	0
  5647  00420E  23A3               	addwfc	(??___flge+1)& (0+255),f,b
  5648  004210  23A4               	addwfc	(??___flge+2)& (0+255),f,b
  5649  004212  23A5               	addwfc	(??___flge+3)& (0+255),f,b
  5650  004214  0E00               	movlw	0
  5651  004216  0100               	movlb	0	; () banked
  5652  004218  25A2               	addwf	??___flge& (0+255),w,b
  5653  00421A  0100               	movlb	0	; () banked
  5654  00421C  6F9A               	movwf	___flge@ff1& (0+255),b
  5655  00421E  0E00               	movlw	0
  5656  004220  0100               	movlb	0	; () banked
  5657  004222  21A3               	addwfc	(??___flge+1)& (0+255),w,b
  5658  004224  0100               	movlb	0	; () banked
  5659  004226  6F9B               	movwf	(___flge@ff1+1)& (0+255),b
  5660  004228  0E00               	movlw	0
  5661  00422A  0100               	movlb	0	; () banked
  5662  00422C  21A4               	addwfc	(??___flge+2)& (0+255),w,b
  5663  00422E  0100               	movlb	0	; () banked
  5664  004230  6F9C               	movwf	(___flge@ff1+2)& (0+255),b
  5665  004232  0E80               	movlw	128
  5666  004234  0100               	movlb	0	; () banked
  5667  004236  21A5               	addwfc	(??___flge+3)& (0+255),w,b
  5668  004238  0100               	movlb	0	; () banked
  5669  00423A  6F9D               	movwf	(___flge@ff1+3)& (0+255),b
  5670  00423C                     l4744:
  5671                           
  5672                           ; BSR set to: 0
  5673  00423C  0100               	movlb	0	; () banked
  5674  00423E  AFA1               	btfss	(___flge@ff2+3)& (0+255),7,b
  5675  004240  D02A               	goto	l1062
  5676                           
  5677                           ; BSR set to: 0
  5678  004242  0100               	movlb	0	; () banked
  5679  004244  C09E  F0A2         	movff	___flge@ff2,??___flge
  5680  004248  0100               	movlb	0	; () banked
  5681  00424A  C09F  F0A3         	movff	___flge@ff2+1,??___flge+1
  5682  00424E  0100               	movlb	0	; () banked
  5683  004250  C0A0  F0A4         	movff	___flge@ff2+2,??___flge+2
  5684  004254  0100               	movlb	0	; () banked
  5685  004256  C0A1  F0A5         	movff	___flge@ff2+3,??___flge+3
  5686  00425A  0100               	movlb	0	; () banked
  5687  00425C  1FA2               	comf	??___flge& (0+255),f,b
  5688  00425E  1FA3               	comf	(??___flge+1)& (0+255),f,b
  5689  004260  1FA4               	comf	(??___flge+2)& (0+255),f,b
  5690  004262  1FA5               	comf	(??___flge+3)& (0+255),f,b
  5691  004264  2BA2               	incf	??___flge& (0+255),f,b
  5692  004266  0E00               	movlw	0
  5693  004268  23A3               	addwfc	(??___flge+1)& (0+255),f,b
  5694  00426A  23A4               	addwfc	(??___flge+2)& (0+255),f,b
  5695  00426C  23A5               	addwfc	(??___flge+3)& (0+255),f,b
  5696  00426E  0E00               	movlw	0
  5697  004270  0100               	movlb	0	; () banked
  5698  004272  25A2               	addwf	??___flge& (0+255),w,b
  5699  004274  0100               	movlb	0	; () banked
  5700  004276  6F9E               	movwf	___flge@ff2& (0+255),b
  5701  004278  0E00               	movlw	0
  5702  00427A  0100               	movlb	0	; () banked
  5703  00427C  21A3               	addwfc	(??___flge+1)& (0+255),w,b
  5704  00427E  0100               	movlb	0	; () banked
  5705  004280  6F9F               	movwf	(___flge@ff2+1)& (0+255),b
  5706  004282  0E00               	movlw	0
  5707  004284  0100               	movlb	0	; () banked
  5708  004286  21A4               	addwfc	(??___flge+2)& (0+255),w,b
  5709  004288  0100               	movlb	0	; () banked
  5710  00428A  6FA0               	movwf	(___flge@ff2+2)& (0+255),b
  5711  00428C  0E80               	movlw	128
  5712  00428E  0100               	movlb	0	; () banked
  5713  004290  21A5               	addwfc	(??___flge+3)& (0+255),w,b
  5714  004292  0100               	movlb	0	; () banked
  5715  004294  6FA1               	movwf	(___flge@ff2+3)& (0+255),b
  5716  004296                     l1062:
  5717                           
  5718                           ; BSR set to: 0
  5719  004296  0E00               	movlw	0
  5720  004298  0100               	movlb	0	; () banked
  5721  00429A  1B9A               	xorwf	___flge@ff1& (0+255),f,b
  5722  00429C  0E00               	movlw	0
  5723  00429E  0100               	movlb	0	; () banked
  5724  0042A0  1B9B               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5725  0042A2  0E00               	movlw	0
  5726  0042A4  0100               	movlb	0	; () banked
  5727  0042A6  1B9C               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5728  0042A8  0E80               	movlw	128
  5729  0042AA  0100               	movlb	0	; () banked
  5730  0042AC  1B9D               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5731  0042AE  0E00               	movlw	0
  5732  0042B0  0100               	movlb	0	; () banked
  5733  0042B2  1B9E               	xorwf	___flge@ff2& (0+255),f,b
  5734  0042B4  0E00               	movlw	0
  5735  0042B6  0100               	movlb	0	; () banked
  5736  0042B8  1B9F               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5737  0042BA  0E00               	movlw	0
  5738  0042BC  0100               	movlb	0	; () banked
  5739  0042BE  1BA0               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5740  0042C0  0E80               	movlw	128
  5741  0042C2  0100               	movlb	0	; () banked
  5742  0042C4  1BA1               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5743  0042C6  0100               	movlb	0	; () banked
  5744  0042C8  519E               	movf	___flge@ff2& (0+255),w,b
  5745  0042CA  0100               	movlb	0	; () banked
  5746  0042CC  5D9A               	subwf	___flge@ff1& (0+255),w,b
  5747  0042CE  0100               	movlb	0	; () banked
  5748  0042D0  519F               	movf	(___flge@ff2+1)& (0+255),w,b
  5749  0042D2  0100               	movlb	0	; () banked
  5750  0042D4  599B               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5751  0042D6  0100               	movlb	0	; () banked
  5752  0042D8  51A0               	movf	(___flge@ff2+2)& (0+255),w,b
  5753  0042DA  0100               	movlb	0	; () banked
  5754  0042DC  599C               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5755  0042DE  0100               	movlb	0	; () banked
  5756  0042E0  51A1               	movf	(___flge@ff2+3)& (0+255),w,b
  5757  0042E2  0100               	movlb	0	; () banked
  5758  0042E4  599D               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5759  0042E6  B0D8               	btfsc	status,0,c
  5760  0042E8  D002               	goto	l4750
  5761                           
  5762                           ; BSR set to: 0
  5763  0042EA  90D8               	bcf	status,0,c
  5764  0042EC  0012               	return	
  5765  0042EE                     l4750:
  5766                           
  5767                           ; BSR set to: 0
  5768  0042EE  80D8               	bsf	status,0,c
  5769  0042F0  0012               	return	
  5770  0042F2                     __end_of___flge:
  5771                           	opt stack 0
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           postinc0	equ	0xFEE
  5779                           wreg	equ	0xFE8
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function ___fldiv *****************
  5788 ;; Defined at:
  5789 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldiv.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  f1              4   54[BANK0 ] unsigned char 
  5792 ;;  f2              4   58[BANK0 ] unsigned char 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  f3              4   66[BANK0 ] unsigned char 
  5795 ;;  sign            1   72[BANK0 ] unsigned char 
  5796 ;;  exp             1   71[BANK0 ] unsigned char 
  5797 ;;  cntr            1   70[BANK0 ] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  4   54[BANK0 ] unsigned char 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5807 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;Total ram usage:       19 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    5
  5814 ;; This function calls:
  5815 ;;		___flpack
  5816 ;; This function is called by:
  5817 ;;		_parallelo
  5818 ;;		_asin
  5819 ;;		_atan
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text17
  5824  00396E                     __ptext17:
  5825                           	opt stack 0
  5826  00396E                     ___fldiv:
  5827                           	opt stack 22
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;incstack = 0
  5831  00396E  0100               	movlb	0	; () banked
  5832  003970  C096  F09E         	movff	___fldiv@f1,??___fldiv
  5833  003974  0100               	movlb	0	; () banked
  5834  003976  C097  F09F         	movff	___fldiv@f1+1,??___fldiv+1
  5835  00397A  0100               	movlb	0	; () banked
  5836  00397C  C098  F0A0         	movff	___fldiv@f1+2,??___fldiv+2
  5837  003980  0100               	movlb	0	; () banked
  5838  003982  C099  F0A1         	movff	___fldiv@f1+3,??___fldiv+3
  5839  003986  0E18               	movlw	24
  5840  003988  D006               	goto	u5740
  5841  00398A                     u5745:
  5842  00398A  0100               	movlb	0	; () banked
  5843  00398C  90D8               	bcf	status,0,c
  5844  00398E  33A1               	rrcf	(??___fldiv+3)& (0+255),f,b
  5845  003990  33A0               	rrcf	(??___fldiv+2)& (0+255),f,b
  5846  003992  339F               	rrcf	(??___fldiv+1)& (0+255),f,b
  5847  003994  339E               	rrcf	??___fldiv& (0+255),f,b
  5848  003996                     u5740:
  5849  003996  2EE8               	decfsz	wreg,f,c
  5850  003998  D7F8               	goto	u5745
  5851  00399A  0100               	movlb	0	; () banked
  5852  00399C  519E               	movf	??___fldiv& (0+255),w,b
  5853  00399E  0100               	movlb	0	; () banked
  5854  0039A0  6FA7               	movwf	___fldiv@exp& (0+255),b
  5855  0039A2  0100               	movlb	0	; () banked
  5856  0039A4  67A7               	tstfsz	___fldiv@exp& (0+255),b
  5857  0039A6  D00D               	goto	l4688
  5858                           
  5859                           ; BSR set to: 0
  5860  0039A8  0E00               	movlw	0
  5861  0039AA  0100               	movlb	0	; () banked
  5862  0039AC  6F96               	movwf	?___fldiv& (0+255),b
  5863  0039AE  0E00               	movlw	0
  5864  0039B0  0100               	movlb	0	; () banked
  5865  0039B2  6F97               	movwf	(?___fldiv+1)& (0+255),b
  5866  0039B4  0E00               	movlw	0
  5867  0039B6  0100               	movlb	0	; () banked
  5868  0039B8  6F98               	movwf	(?___fldiv+2)& (0+255),b
  5869  0039BA  0E00               	movlw	0
  5870  0039BC  0100               	movlb	0	; () banked
  5871  0039BE  6F99               	movwf	(?___fldiv+3)& (0+255),b
  5872  0039C0  0012               	return	
  5873  0039C2                     l4688:
  5874                           
  5875                           ; BSR set to: 0
  5876  0039C2  0100               	movlb	0	; () banked
  5877  0039C4  C09A  F09E         	movff	___fldiv@f2,??___fldiv
  5878  0039C8  0100               	movlb	0	; () banked
  5879  0039CA  C09B  F09F         	movff	___fldiv@f2+1,??___fldiv+1
  5880  0039CE  0100               	movlb	0	; () banked
  5881  0039D0  C09C  F0A0         	movff	___fldiv@f2+2,??___fldiv+2
  5882  0039D4  0100               	movlb	0	; () banked
  5883  0039D6  C09D  F0A1         	movff	___fldiv@f2+3,??___fldiv+3
  5884  0039DA  0E18               	movlw	24
  5885  0039DC  D006               	goto	u5760
  5886  0039DE                     u5765:
  5887  0039DE  0100               	movlb	0	; () banked
  5888  0039E0  90D8               	bcf	status,0,c
  5889  0039E2  33A1               	rrcf	(??___fldiv+3)& (0+255),f,b
  5890  0039E4  33A0               	rrcf	(??___fldiv+2)& (0+255),f,b
  5891  0039E6  339F               	rrcf	(??___fldiv+1)& (0+255),f,b
  5892  0039E8  339E               	rrcf	??___fldiv& (0+255),f,b
  5893  0039EA                     u5760:
  5894  0039EA  2EE8               	decfsz	wreg,f,c
  5895  0039EC  D7F8               	goto	u5765
  5896  0039EE  0100               	movlb	0	; () banked
  5897  0039F0  519E               	movf	??___fldiv& (0+255),w,b
  5898  0039F2  0100               	movlb	0	; () banked
  5899  0039F4  6FA8               	movwf	___fldiv@sign& (0+255),b
  5900  0039F6  0100               	movlb	0	; () banked
  5901  0039F8  67A8               	tstfsz	___fldiv@sign& (0+255),b
  5902  0039FA  D00D               	goto	l4694
  5903                           
  5904                           ; BSR set to: 0
  5905  0039FC  0E00               	movlw	0
  5906  0039FE  0100               	movlb	0	; () banked
  5907  003A00  6F96               	movwf	?___fldiv& (0+255),b
  5908  003A02  0E00               	movlw	0
  5909  003A04  0100               	movlb	0	; () banked
  5910  003A06  6F97               	movwf	(?___fldiv+1)& (0+255),b
  5911  003A08  0E00               	movlw	0
  5912  003A0A  0100               	movlb	0	; () banked
  5913  003A0C  6F98               	movwf	(?___fldiv+2)& (0+255),b
  5914  003A0E  0E00               	movlw	0
  5915  003A10  0100               	movlb	0	; () banked
  5916  003A12  6F99               	movwf	(?___fldiv+3)& (0+255),b
  5917  003A14  0012               	return	
  5918  003A16                     l4694:
  5919                           
  5920                           ; BSR set to: 0
  5921  003A16  0100               	movlb	0	; () banked
  5922  003A18  51A8               	movf	___fldiv@sign& (0+255),w,b
  5923  003A1A  0F89               	addlw	137
  5924  003A1C  0100               	movlb	0	; () banked
  5925  003A1E  5FA7               	subwf	___fldiv@exp& (0+255),f,b
  5926                           
  5927                           ; BSR set to: 0
  5928  003A20  C099  F0A8         	movff	___fldiv@f1+3,___fldiv@sign
  5929  003A24  0100               	movlb	0	; () banked
  5930  003A26  519D               	movf	(___fldiv@f2+3)& (0+255),w,b
  5931  003A28  0100               	movlb	0	; () banked
  5932  003A2A  1BA8               	xorwf	___fldiv@sign& (0+255),f,b
  5933  003A2C  0E80               	movlw	128
  5934  003A2E  0100               	movlb	0	; () banked
  5935  003A30  17A8               	andwf	___fldiv@sign& (0+255),f,b
  5936                           
  5937                           ; BSR set to: 0
  5938  003A32  0100               	movlb	0	; () banked
  5939  003A34  8F98               	bsf	(___fldiv@f1+2)& (0+255),7,b
  5940                           
  5941                           ; BSR set to: 0
  5942  003A36  0EFF               	movlw	255
  5943  003A38  0100               	movlb	0	; () banked
  5944  003A3A  1796               	andwf	___fldiv@f1& (0+255),f,b
  5945  003A3C  0EFF               	movlw	255
  5946  003A3E  0100               	movlb	0	; () banked
  5947  003A40  1797               	andwf	(___fldiv@f1+1)& (0+255),f,b
  5948  003A42  0EFF               	movlw	255
  5949  003A44  0100               	movlb	0	; () banked
  5950  003A46  1798               	andwf	(___fldiv@f1+2)& (0+255),f,b
  5951  003A48  0E00               	movlw	0
  5952  003A4A  0100               	movlb	0	; () banked
  5953  003A4C  1799               	andwf	(___fldiv@f1+3)& (0+255),f,b
  5954  003A4E  0100               	movlb	0	; () banked
  5955  003A50  8F9C               	bsf	(___fldiv@f2+2)& (0+255),7,b
  5956                           
  5957                           ; BSR set to: 0
  5958  003A52  0EFF               	movlw	255
  5959  003A54  0100               	movlb	0	; () banked
  5960  003A56  179A               	andwf	___fldiv@f2& (0+255),f,b
  5961  003A58  0EFF               	movlw	255
  5962  003A5A  0100               	movlb	0	; () banked
  5963  003A5C  179B               	andwf	(___fldiv@f2+1)& (0+255),f,b
  5964  003A5E  0EFF               	movlw	255
  5965  003A60  0100               	movlb	0	; () banked
  5966  003A62  179C               	andwf	(___fldiv@f2+2)& (0+255),f,b
  5967  003A64  0E00               	movlw	0
  5968  003A66  0100               	movlb	0	; () banked
  5969  003A68  179D               	andwf	(___fldiv@f2+3)& (0+255),f,b
  5970                           
  5971                           ; BSR set to: 0
  5972  003A6A  0E20               	movlw	32
  5973  003A6C  0100               	movlb	0	; () banked
  5974  003A6E  6FA6               	movwf	___fldiv@cntr& (0+255),b
  5975  003A70                     l4706:
  5976                           
  5977                           ; BSR set to: 0
  5978  003A70  0100               	movlb	0	; () banked
  5979  003A72  90D8               	bcf	status,0,c
  5980  003A74  0100               	movlb	0	; () banked
  5981  003A76  37A2               	rlcf	___fldiv@f3& (0+255),f,b
  5982  003A78  0100               	movlb	0	; () banked
  5983  003A7A  37A3               	rlcf	(___fldiv@f3+1)& (0+255),f,b
  5984  003A7C  0100               	movlb	0	; () banked
  5985  003A7E  37A4               	rlcf	(___fldiv@f3+2)& (0+255),f,b
  5986  003A80  0100               	movlb	0	; () banked
  5987  003A82  37A5               	rlcf	(___fldiv@f3+3)& (0+255),f,b
  5988                           
  5989                           ; BSR set to: 0
  5990  003A84  0100               	movlb	0	; () banked
  5991  003A86  519A               	movf	___fldiv@f2& (0+255),w,b
  5992  003A88  0100               	movlb	0	; () banked
  5993  003A8A  5D96               	subwf	___fldiv@f1& (0+255),w,b
  5994  003A8C  0100               	movlb	0	; () banked
  5995  003A8E  519B               	movf	(___fldiv@f2+1)& (0+255),w,b
  5996  003A90  0100               	movlb	0	; () banked
  5997  003A92  5997               	subwfb	(___fldiv@f1+1)& (0+255),w,b
  5998  003A94  0100               	movlb	0	; () banked
  5999  003A96  519C               	movf	(___fldiv@f2+2)& (0+255),w,b
  6000  003A98  0100               	movlb	0	; () banked
  6001  003A9A  5998               	subwfb	(___fldiv@f1+2)& (0+255),w,b
  6002  003A9C  0100               	movlb	0	; () banked
  6003  003A9E  519D               	movf	(___fldiv@f2+3)& (0+255),w,b
  6004  003AA0  0100               	movlb	0	; () banked
  6005  003AA2  5999               	subwfb	(___fldiv@f1+3)& (0+255),w,b
  6006  003AA4  A0D8               	btfss	status,0,c
  6007  003AA6  D012               	goto	l4714
  6008                           
  6009                           ; BSR set to: 0
  6010  003AA8  0100               	movlb	0	; () banked
  6011  003AAA  519A               	movf	___fldiv@f2& (0+255),w,b
  6012  003AAC  0100               	movlb	0	; () banked
  6013  003AAE  5F96               	subwf	___fldiv@f1& (0+255),f,b
  6014  003AB0  0100               	movlb	0	; () banked
  6015  003AB2  519B               	movf	(___fldiv@f2+1)& (0+255),w,b
  6016  003AB4  0100               	movlb	0	; () banked
  6017  003AB6  5B97               	subwfb	(___fldiv@f1+1)& (0+255),f,b
  6018  003AB8  0100               	movlb	0	; () banked
  6019  003ABA  519C               	movf	(___fldiv@f2+2)& (0+255),w,b
  6020  003ABC  0100               	movlb	0	; () banked
  6021  003ABE  5B98               	subwfb	(___fldiv@f1+2)& (0+255),f,b
  6022  003AC0  0100               	movlb	0	; () banked
  6023  003AC2  519D               	movf	(___fldiv@f2+3)& (0+255),w,b
  6024  003AC4  0100               	movlb	0	; () banked
  6025  003AC6  5B99               	subwfb	(___fldiv@f1+3)& (0+255),f,b
  6026                           
  6027                           ; BSR set to: 0
  6028  003AC8  0100               	movlb	0	; () banked
  6029  003ACA  81A2               	bsf	___fldiv@f3& (0+255),0,b
  6030  003ACC                     l4714:
  6031                           
  6032                           ; BSR set to: 0
  6033  003ACC  0100               	movlb	0	; () banked
  6034  003ACE  90D8               	bcf	status,0,c
  6035  003AD0  0100               	movlb	0	; () banked
  6036  003AD2  3796               	rlcf	___fldiv@f1& (0+255),f,b
  6037  003AD4  0100               	movlb	0	; () banked
  6038  003AD6  3797               	rlcf	(___fldiv@f1+1)& (0+255),f,b
  6039  003AD8  0100               	movlb	0	; () banked
  6040  003ADA  3798               	rlcf	(___fldiv@f1+2)& (0+255),f,b
  6041  003ADC  0100               	movlb	0	; () banked
  6042  003ADE  3799               	rlcf	(___fldiv@f1+3)& (0+255),f,b
  6043                           
  6044                           ; BSR set to: 0
  6045  003AE0  0100               	movlb	0	; () banked
  6046  003AE2  2FA6               	decfsz	___fldiv@cntr& (0+255),f,b
  6047  003AE4  D7C5               	goto	l4706
  6048                           
  6049                           ; BSR set to: 0
  6050                           
  6051                           ; BSR set to: 0
  6052  003AE6  C0A2  F075         	movff	___fldiv@f3,___flpack@arg
  6053  003AEA  C0A3  F076         	movff	___fldiv@f3+1,___flpack@arg+1
  6054  003AEE  C0A4  F077         	movff	___fldiv@f3+2,___flpack@arg+2
  6055  003AF2  C0A5  F078         	movff	___fldiv@f3+3,___flpack@arg+3
  6056  003AF6  C0A7  F079         	movff	___fldiv@exp,___flpack@exp
  6057  003AFA  C0A8  F07A         	movff	___fldiv@sign,___flpack@sign
  6058  003AFE  EC8A  F01D         	call	___flpack	;wreg free
  6059  003B02  C075  F096         	movff	?___flpack,?___fldiv
  6060  003B06  C076  F097         	movff	?___flpack+1,?___fldiv+1
  6061  003B0A  C077  F098         	movff	?___flpack+2,?___fldiv+2
  6062  003B0E  C078  F099         	movff	?___flpack+3,?___fldiv+3
  6063  003B12  0012               	return	
  6064  003B14                     __end_of___fldiv:
  6065                           	opt stack 0
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           prodh	equ	0xFF4
  6071                           prodl	equ	0xFF3
  6072                           postinc0	equ	0xFEE
  6073                           wreg	equ	0xFE8
  6074                           indf2	equ	0xFDF
  6075                           postinc2	equ	0xFDE
  6076                           postdec2	equ	0xFDD
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function _abs *****************
  6082 ;; Defined at:
  6083 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  a               2   21[BANK0 ] int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  2   21[BANK0 ] int 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, prodl
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;Total ram usage:        4 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    4
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_park_search
  6108 ;;		_parallelo
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text18
  6113  004738                     __ptext18:
  6114                           	opt stack 0
  6115  004738                     _abs:
  6116                           	opt stack 25
  6117                           
  6118                           ;incstack = 0
  6119  004738  0100               	movlb	0	; () banked
  6120  00473A  5176               	movf	(abs@a+1)& (0+255),w,b
  6121  00473C  0A80               	xorlw	128
  6122  00473E  6EF3               	movwf	prodl,c
  6123  004740  0E80               	movlw	128
  6124  004742  5CF3               	subwf	prodl,w,c
  6125  004744  0E00               	movlw	0
  6126  004746  B4D8               	btfsc	status,2,c
  6127  004748  5D75               	subwf	abs@a& (0+255),w,b
  6128  00474A  B0D8               	btfsc	status,0,c
  6129  00474C  D010               	goto	l779
  6130                           
  6131                           ; BSR set to: 0
  6132  00474E  0100               	movlb	0	; () banked
  6133  004750  C075  F077         	movff	abs@a,??_abs
  6134  004754  0100               	movlb	0	; () banked
  6135  004756  C076  F078         	movff	abs@a+1,??_abs+1
  6136  00475A  0100               	movlb	0	; () banked
  6137  00475C  1F77               	comf	??_abs& (0+255),f,b
  6138  00475E  1F78               	comf	(??_abs+1)& (0+255),f,b
  6139  004760  4B77               	infsnz	??_abs& (0+255),f,b
  6140  004762  2B78               	incf	(??_abs+1)& (0+255),f,b
  6141  004764  C077  F075         	movff	??_abs,?_abs
  6142  004768  C078  F076         	movff	??_abs+1,?_abs+1
  6143  00476C  0012               	return	
  6144  00476E                     l779:
  6145                           
  6146                           ; BSR set to: 0
  6147  00476E  C075  F075         	movff	abs@a,?_abs
  6148  004772  C076  F076         	movff	abs@a+1,?_abs+1
  6149                           
  6150                           ; BSR set to: 0
  6151  004776  0012               	return	
  6152  004778                     __end_of_abs:
  6153                           	opt stack 0
  6154                           tblptru	equ	0xFF8
  6155                           tblptrh	equ	0xFF7
  6156                           tblptrl	equ	0xFF6
  6157                           tablat	equ	0xFF5
  6158                           prodh	equ	0xFF4
  6159                           prodl	equ	0xFF3
  6160                           postinc0	equ	0xFEE
  6161                           wreg	equ	0xFE8
  6162                           indf2	equ	0xFDF
  6163                           postinc2	equ	0xFDE
  6164                           postdec2	equ	0xFDD
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function ___lbtofl *****************
  6170 ;; Defined at:
  6171 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtofl.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  c               1    wreg     unsigned char 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  c               1   35[BANK0 ] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  4   31[BANK0 ] unsigned char 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;Total ram usage:        5 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    5
  6192 ;; This function calls:
  6193 ;;		___flpack
  6194 ;; This function is called by:
  6195 ;;		_parallelo
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text19
  6200  0047F2                     __ptext19:
  6201                           	opt stack 0
  6202  0047F2                     ___lbtofl:
  6203                           	opt stack 24
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;incstack = 0
  6207                           ;___lbtofl@c stored from wreg
  6208  0047F2  0100               	movlb	0	; () banked
  6209  0047F4  6F83               	movwf	___lbtofl@c& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212  0047F6  0100               	movlb	0	; () banked
  6213  0047F8  5183               	movf	___lbtofl@c& (0+255),w,b
  6214  0047FA  0100               	movlb	0	; () banked
  6215  0047FC  6F75               	movwf	___flpack@arg& (0+255),b
  6216  0047FE  0100               	movlb	0	; () banked
  6217  004800  6B76               	clrf	(___flpack@arg+1)& (0+255),b
  6218  004802  0100               	movlb	0	; () banked
  6219  004804  6B77               	clrf	(___flpack@arg+2)& (0+255),b
  6220  004806  0100               	movlb	0	; () banked
  6221  004808  6B78               	clrf	(___flpack@arg+3)& (0+255),b
  6222  00480A  0E96               	movlw	150
  6223  00480C  0100               	movlb	0	; () banked
  6224  00480E  6F79               	movwf	___flpack@exp& (0+255),b
  6225  004810  0E00               	movlw	0
  6226  004812  0100               	movlb	0	; () banked
  6227  004814  6F7A               	movwf	___flpack@sign& (0+255),b
  6228  004816  EC8A  F01D         	call	___flpack	;wreg free
  6229  00481A  C075  F07F         	movff	?___flpack,?___lbtofl
  6230  00481E  C076  F080         	movff	?___flpack+1,?___lbtofl+1
  6231  004822  C077  F081         	movff	?___flpack+2,?___lbtofl+2
  6232  004826  C078  F082         	movff	?___flpack+3,?___lbtofl+3
  6233  00482A  0012               	return	
  6234  00482C                     __end_of___lbtofl:
  6235                           	opt stack 0
  6236                           tblptru	equ	0xFF8
  6237                           tblptrh	equ	0xFF7
  6238                           tblptrl	equ	0xFF6
  6239                           tablat	equ	0xFF5
  6240                           prodh	equ	0xFF4
  6241                           prodl	equ	0xFF3
  6242                           postinc0	equ	0xFEE
  6243                           wreg	equ	0xFE8
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251 ;; *************** function ___fltol *****************
  6252 ;; Defined at:
  6253 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fltol.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  f1              4  104[BANK0 ] unsigned char 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  exp1            1  113[BANK0 ] unsigned char 
  6258 ;;  sign1           1  112[BANK0 ] unsigned char 
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  4  104[BANK0 ] long 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;Total ram usage:       10 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    4
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_parallelo
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text20
  6283  003C92                     __ptext20:
  6284                           	opt stack 0
  6285  003C92                     ___fltol:
  6286                           	opt stack 25
  6287                           
  6288                           ;incstack = 0
  6289  003C92  0100               	movlb	0	; () banked
  6290  003C94  C0C8  F0CC         	movff	___fltol@f1,??___fltol
  6291  003C98  0100               	movlb	0	; () banked
  6292  003C9A  C0C9  F0CD         	movff	___fltol@f1+1,??___fltol+1
  6293  003C9E  0100               	movlb	0	; () banked
  6294  003CA0  C0CA  F0CE         	movff	___fltol@f1+2,??___fltol+2
  6295  003CA4  0100               	movlb	0	; () banked
  6296  003CA6  C0CB  F0CF         	movff	___fltol@f1+3,??___fltol+3
  6297  003CAA  0E18               	movlw	24
  6298  003CAC  D006               	goto	u4770
  6299  003CAE                     u4775:
  6300  003CAE  0100               	movlb	0	; () banked
  6301  003CB0  90D8               	bcf	status,0,c
  6302  003CB2  33CF               	rrcf	(??___fltol+3)& (0+255),f,b
  6303  003CB4  33CE               	rrcf	(??___fltol+2)& (0+255),f,b
  6304  003CB6  33CD               	rrcf	(??___fltol+1)& (0+255),f,b
  6305  003CB8  33CC               	rrcf	??___fltol& (0+255),f,b
  6306  003CBA                     u4770:
  6307  003CBA  2EE8               	decfsz	wreg,f,c
  6308  003CBC  D7F8               	goto	u4775
  6309  003CBE  0100               	movlb	0	; () banked
  6310  003CC0  51CC               	movf	??___fltol& (0+255),w,b
  6311  003CC2  0100               	movlb	0	; () banked
  6312  003CC4  6FD1               	movwf	___fltol@exp1& (0+255),b
  6313  003CC6  0100               	movlb	0	; () banked
  6314  003CC8  67D1               	tstfsz	___fltol@exp1& (0+255),b
  6315  003CCA  D00D               	goto	l4076
  6316                           
  6317                           ; BSR set to: 0
  6318  003CCC  0E00               	movlw	0
  6319  003CCE  0100               	movlb	0	; () banked
  6320  003CD0  6FC8               	movwf	?___fltol& (0+255),b
  6321  003CD2  0E00               	movlw	0
  6322  003CD4  0100               	movlb	0	; () banked
  6323  003CD6  6FC9               	movwf	(?___fltol+1)& (0+255),b
  6324  003CD8  0E00               	movlw	0
  6325  003CDA  0100               	movlb	0	; () banked
  6326  003CDC  6FCA               	movwf	(?___fltol+2)& (0+255),b
  6327  003CDE  0E00               	movlw	0
  6328  003CE0  0100               	movlb	0	; () banked
  6329  003CE2  6FCB               	movwf	(?___fltol+3)& (0+255),b
  6330  003CE4  0012               	return	
  6331  003CE6                     l4076:
  6332                           
  6333                           ; BSR set to: 0
  6334  003CE6  0100               	movlb	0	; () banked
  6335  003CE8  C0C8  F0CC         	movff	___fltol@f1,??___fltol
  6336  003CEC  0100               	movlb	0	; () banked
  6337  003CEE  C0C9  F0CD         	movff	___fltol@f1+1,??___fltol+1
  6338  003CF2  0100               	movlb	0	; () banked
  6339  003CF4  C0CA  F0CE         	movff	___fltol@f1+2,??___fltol+2
  6340  003CF8  0100               	movlb	0	; () banked
  6341  003CFA  C0CB  F0CF         	movff	___fltol@f1+3,??___fltol+3
  6342  003CFE  0E20               	movlw	32
  6343  003D00  D006               	goto	u4790
  6344  003D02                     u4795:
  6345  003D02  0100               	movlb	0	; () banked
  6346  003D04  90D8               	bcf	status,0,c
  6347  003D06  33CF               	rrcf	(??___fltol+3)& (0+255),f,b
  6348  003D08  33CE               	rrcf	(??___fltol+2)& (0+255),f,b
  6349  003D0A  33CD               	rrcf	(??___fltol+1)& (0+255),f,b
  6350  003D0C  33CC               	rrcf	??___fltol& (0+255),f,b
  6351  003D0E                     u4790:
  6352  003D0E  2EE8               	decfsz	wreg,f,c
  6353  003D10  D7F8               	goto	u4795
  6354  003D12  0100               	movlb	0	; () banked
  6355  003D14  51CC               	movf	??___fltol& (0+255),w,b
  6356  003D16  0100               	movlb	0	; () banked
  6357  003D18  6FD0               	movwf	___fltol@sign1& (0+255),b
  6358                           
  6359                           ; BSR set to: 0
  6360  003D1A  0100               	movlb	0	; () banked
  6361  003D1C  8FCA               	bsf	(___fltol@f1+2)& (0+255),7,b
  6362                           
  6363                           ; BSR set to: 0
  6364  003D1E  0EFF               	movlw	255
  6365  003D20  0100               	movlb	0	; () banked
  6366  003D22  17C8               	andwf	___fltol@f1& (0+255),f,b
  6367  003D24  0EFF               	movlw	255
  6368  003D26  0100               	movlb	0	; () banked
  6369  003D28  17C9               	andwf	(___fltol@f1+1)& (0+255),f,b
  6370  003D2A  0EFF               	movlw	255
  6371  003D2C  0100               	movlb	0	; () banked
  6372  003D2E  17CA               	andwf	(___fltol@f1+2)& (0+255),f,b
  6373  003D30  0E00               	movlw	0
  6374  003D32  0100               	movlb	0	; () banked
  6375  003D34  17CB               	andwf	(___fltol@f1+3)& (0+255),f,b
  6376                           
  6377                           ; BSR set to: 0
  6378  003D36  0E96               	movlw	150
  6379  003D38  0100               	movlb	0	; () banked
  6380  003D3A  5FD1               	subwf	___fltol@exp1& (0+255),f,b
  6381                           
  6382                           ; BSR set to: 0
  6383  003D3C  0100               	movlb	0	; () banked
  6384  003D3E  AFD1               	btfss	___fltol@exp1& (0+255),7,b
  6385  003D40  D026               	goto	l4096
  6386                           
  6387                           ; BSR set to: 0
  6388  003D42  0100               	movlb	0	; () banked
  6389  003D44  51D1               	movf	___fltol@exp1& (0+255),w,b
  6390  003D46  0A80               	xorlw	128
  6391  003D48  0100               	movlb	0	; () banked
  6392  003D4A  6FCC               	movwf	??___fltol& (0+255),b
  6393  003D4C  0EE9               	movlw	233
  6394  003D4E  0A80               	xorlw	128
  6395  003D50  0100               	movlb	0	; () banked
  6396  003D52  5DCC               	subwf	??___fltol& (0+255),w,b
  6397  003D54  B0D8               	btfsc	status,0,c
  6398  003D56  D00D               	goto	l4092
  6399                           
  6400                           ; BSR set to: 0
  6401  003D58  0E00               	movlw	0
  6402  003D5A  0100               	movlb	0	; () banked
  6403  003D5C  6FC8               	movwf	?___fltol& (0+255),b
  6404  003D5E  0E00               	movlw	0
  6405  003D60  0100               	movlb	0	; () banked
  6406  003D62  6FC9               	movwf	(?___fltol+1)& (0+255),b
  6407  003D64  0E00               	movlw	0
  6408  003D66  0100               	movlb	0	; () banked
  6409  003D68  6FCA               	movwf	(?___fltol+2)& (0+255),b
  6410  003D6A  0E00               	movlw	0
  6411  003D6C  0100               	movlb	0	; () banked
  6412  003D6E  6FCB               	movwf	(?___fltol+3)& (0+255),b
  6413  003D70  0012               	return	
  6414  003D72                     l4092:
  6415                           
  6416                           ; BSR set to: 0
  6417  003D72  0100               	movlb	0	; () banked
  6418  003D74  90D8               	bcf	status,0,c
  6419  003D76  0100               	movlb	0	; () banked
  6420  003D78  33CB               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6421  003D7A  0100               	movlb	0	; () banked
  6422  003D7C  33CA               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6423  003D7E  0100               	movlb	0	; () banked
  6424  003D80  33C9               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6425  003D82  0100               	movlb	0	; () banked
  6426  003D84  33C8               	rrcf	___fltol@f1& (0+255),f,b
  6427                           
  6428                           ; BSR set to: 0
  6429  003D86  0100               	movlb	0	; () banked
  6430  003D88  3FD1               	incfsz	___fltol@exp1& (0+255),f,b
  6431  003D8A  D7F3               	goto	l4092
  6432  003D8C  D020               	goto	l4106
  6433  003D8E                     l4096:
  6434                           
  6435                           ; BSR set to: 0
  6436  003D8E  0E1F               	movlw	31
  6437  003D90  0100               	movlb	0	; () banked
  6438  003D92  65D1               	cpfsgt	___fltol@exp1& (0+255),b
  6439  003D94  D019               	goto	l4104
  6440                           
  6441                           ; BSR set to: 0
  6442  003D96  0E00               	movlw	0
  6443  003D98  0100               	movlb	0	; () banked
  6444  003D9A  6FC8               	movwf	?___fltol& (0+255),b
  6445  003D9C  0E00               	movlw	0
  6446  003D9E  0100               	movlb	0	; () banked
  6447  003DA0  6FC9               	movwf	(?___fltol+1)& (0+255),b
  6448  003DA2  0E00               	movlw	0
  6449  003DA4  0100               	movlb	0	; () banked
  6450  003DA6  6FCA               	movwf	(?___fltol+2)& (0+255),b
  6451  003DA8  0E00               	movlw	0
  6452  003DAA  0100               	movlb	0	; () banked
  6453  003DAC  6FCB               	movwf	(?___fltol+3)& (0+255),b
  6454  003DAE  0012               	return	
  6455  003DB0                     l4102:
  6456                           
  6457                           ; BSR set to: 0
  6458  003DB0  0100               	movlb	0	; () banked
  6459  003DB2  90D8               	bcf	status,0,c
  6460  003DB4  0100               	movlb	0	; () banked
  6461  003DB6  37C8               	rlcf	___fltol@f1& (0+255),f,b
  6462  003DB8  0100               	movlb	0	; () banked
  6463  003DBA  37C9               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6464  003DBC  0100               	movlb	0	; () banked
  6465  003DBE  37CA               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6466  003DC0  0100               	movlb	0	; () banked
  6467  003DC2  37CB               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6468  003DC4  0100               	movlb	0	; () banked
  6469  003DC6  07D1               	decf	___fltol@exp1& (0+255),f,b
  6470  003DC8                     l4104:
  6471                           
  6472                           ; BSR set to: 0
  6473  003DC8  0100               	movlb	0	; () banked
  6474  003DCA  67D1               	tstfsz	___fltol@exp1& (0+255),b
  6475  003DCC  D7F1               	goto	l4102
  6476  003DCE                     l4106:
  6477                           
  6478                           ; BSR set to: 0
  6479  003DCE  0100               	movlb	0	; () banked
  6480  003DD0  51D0               	movf	___fltol@sign1& (0+255),w,b
  6481  003DD2  B4D8               	btfsc	status,2,c
  6482  003DD4  D00F               	goto	l4110
  6483                           
  6484                           ; BSR set to: 0
  6485  003DD6  0100               	movlb	0	; () banked
  6486  003DD8  1FCB               	comf	(___fltol@f1+3)& (0+255),f,b
  6487  003DDA  0100               	movlb	0	; () banked
  6488  003DDC  1FCA               	comf	(___fltol@f1+2)& (0+255),f,b
  6489  003DDE  0100               	movlb	0	; () banked
  6490  003DE0  1FC9               	comf	(___fltol@f1+1)& (0+255),f,b
  6491  003DE2  0100               	movlb	0	; () banked
  6492  003DE4  6DC8               	negf	___fltol@f1& (0+255),b
  6493  003DE6  0E00               	movlw	0
  6494  003DE8  0100               	movlb	0	; () banked
  6495  003DEA  23C9               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6496  003DEC  0100               	movlb	0	; () banked
  6497  003DEE  23CA               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6498  003DF0  0100               	movlb	0	; () banked
  6499  003DF2  23CB               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6500  003DF4                     l4110:
  6501                           
  6502                           ; BSR set to: 0
  6503  003DF4  C0C8  F0C8         	movff	___fltol@f1,?___fltol
  6504  003DF8  C0C9  F0C9         	movff	___fltol@f1+1,?___fltol+1
  6505  003DFC  C0CA  F0CA         	movff	___fltol@f1+2,?___fltol+2
  6506  003E00  C0CB  F0CB         	movff	___fltol@f1+3,?___fltol+3
  6507  003E04  0012               	return	
  6508  003E06                     __end_of___fltol:
  6509                           	opt stack 0
  6510                           tblptru	equ	0xFF8
  6511                           tblptrh	equ	0xFF7
  6512                           tblptrl	equ	0xFF6
  6513                           tablat	equ	0xFF5
  6514                           prodh	equ	0xFF4
  6515                           prodl	equ	0xFF3
  6516                           postinc0	equ	0xFEE
  6517                           wreg	equ	0xFE8
  6518                           indf2	equ	0xFDF
  6519                           postinc2	equ	0xFDE
  6520                           postdec2	equ	0xFDD
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function ___awtofl *****************
  6526 ;; Defined at:
  6527 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtofl.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  c               2   31[BANK0 ] int 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  f1              4    0        int 
  6532 ;;  sign            1   35[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  4   31[BANK0 ] unsigned char 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0, prodl, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6542 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;Total ram usage:        5 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    5
  6549 ;; This function calls:
  6550 ;;		___flpack
  6551 ;; This function is called by:
  6552 ;;		_parallelo
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text21
  6557  0045A8                     __ptext21:
  6558                           	opt stack 0
  6559  0045A8                     ___awtofl:
  6560                           	opt stack 24
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;incstack = 0
  6564  0045A8  0E00               	movlw	0
  6565  0045AA  0100               	movlb	0	; () banked
  6566  0045AC  6F83               	movwf	___awtofl@sign& (0+255),b
  6567                           
  6568                           ; BSR set to: 0
  6569  0045AE  0100               	movlb	0	; () banked
  6570  0045B0  5180               	movf	(___awtofl@c+1)& (0+255),w,b
  6571  0045B2  0A80               	xorlw	128
  6572  0045B4  6EF3               	movwf	prodl,c
  6573  0045B6  0E80               	movlw	128
  6574  0045B8  5CF3               	subwf	prodl,w,c
  6575  0045BA  0E00               	movlw	0
  6576  0045BC  B4D8               	btfsc	status,2,c
  6577  0045BE  5D7F               	subwf	___awtofl@c& (0+255),w,b
  6578  0045C0  B0D8               	btfsc	status,0,c
  6579  0045C2  D008               	goto	l4858
  6580                           
  6581                           ; BSR set to: 0
  6582  0045C4  0100               	movlb	0	; () banked
  6583  0045C6  6D7F               	negf	___awtofl@c& (0+255),b
  6584  0045C8  0100               	movlb	0	; () banked
  6585  0045CA  1F80               	comf	(___awtofl@c+1)& (0+255),f,b
  6586  0045CC  B0D8               	btfsc	status,0,c
  6587  0045CE  2B80               	incf	(___awtofl@c+1)& (0+255),f,b
  6588  0045D0  0100               	movlb	0	; () banked
  6589  0045D2  2B83               	incf	___awtofl@sign& (0+255),f,b
  6590  0045D4                     l4858:
  6591                           
  6592                           ; BSR set to: 0
  6593  0045D4  0100               	movlb	0	; () banked
  6594  0045D6  C07F  F075         	movff	___awtofl@c,___flpack@arg
  6595  0045DA  0100               	movlb	0	; () banked
  6596  0045DC  C080  F076         	movff	___awtofl@c+1,___flpack@arg+1
  6597  0045E0  0100               	movlb	0	; () banked
  6598  0045E2  6B77               	clrf	(___flpack@arg+2)& (0+255),b
  6599  0045E4  0100               	movlb	0	; () banked
  6600  0045E6  6B78               	clrf	(___flpack@arg+3)& (0+255),b
  6601  0045E8  0E96               	movlw	150
  6602  0045EA  0100               	movlb	0	; () banked
  6603  0045EC  6F79               	movwf	___flpack@exp& (0+255),b
  6604  0045EE  C083  F07A         	movff	___awtofl@sign,___flpack@sign
  6605  0045F2  EC8A  F01D         	call	___flpack	;wreg free
  6606  0045F6  C075  F07F         	movff	?___flpack,?___awtofl
  6607  0045FA  C076  F080         	movff	?___flpack+1,?___awtofl+1
  6608  0045FE  C077  F081         	movff	?___flpack+2,?___awtofl+2
  6609  004602  C078  F082         	movff	?___flpack+3,?___awtofl+3
  6610  004606  0012               	return	
  6611  004608                     __end_of___awtofl:
  6612                           	opt stack 0
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           postinc0	equ	0xFEE
  6620                           wreg	equ	0xFE8
  6621                           indf2	equ	0xFDF
  6622                           postinc2	equ	0xFDE
  6623                           postdec2	equ	0xFDD
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function ___flpack *****************
  6629 ;; Defined at:
  6630 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\double.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  arg             4   21[BANK0 ] unsigned long 
  6633 ;;  exp             1   25[BANK0 ] unsigned char 
  6634 ;;  sign            1   26[BANK0 ] unsigned char 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  4   21[BANK0 ] unsigned char 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6646 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;Total ram usage:       10 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    4
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		___awtofl
  6657 ;;		___fladd
  6658 ;;		___fldiv
  6659 ;;		___flmul
  6660 ;;		___lbtofl
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text22
  6665  003B14                     __ptext22:
  6666                           	opt stack 0
  6667  003B14                     ___flpack:
  6668                           	opt stack 22
  6669                           
  6670                           ;incstack = 0
  6671  003B14  0100               	movlb	0	; () banked
  6672  003B16  5179               	movf	___flpack@exp& (0+255),w,b
  6673  003B18  B4D8               	btfsc	status,2,c
  6674  003B1A  D007               	goto	l4526
  6675                           
  6676                           ; BSR set to: 0
  6677  003B1C  0100               	movlb	0	; () banked
  6678  003B1E  5178               	movf	(___flpack@arg+3)& (0+255),w,b
  6679  003B20  1175               	iorwf	___flpack@arg& (0+255),w,b
  6680  003B22  1176               	iorwf	(___flpack@arg+1)& (0+255),w,b
  6681  003B24  1177               	iorwf	(___flpack@arg+2)& (0+255),w,b
  6682  003B26  A4D8               	btfss	status,2,c
  6683  003B28  D019               	goto	l4532
  6684  003B2A                     l4526:
  6685                           
  6686                           ; BSR set to: 0
  6687  003B2A  0E00               	movlw	0
  6688  003B2C  0100               	movlb	0	; () banked
  6689  003B2E  6F75               	movwf	?___flpack& (0+255),b
  6690  003B30  0E00               	movlw	0
  6691  003B32  0100               	movlb	0	; () banked
  6692  003B34  6F76               	movwf	(?___flpack+1)& (0+255),b
  6693  003B36  0E00               	movlw	0
  6694  003B38  0100               	movlb	0	; () banked
  6695  003B3A  6F77               	movwf	(?___flpack+2)& (0+255),b
  6696  003B3C  0E00               	movlw	0
  6697  003B3E  0100               	movlb	0	; () banked
  6698  003B40  6F78               	movwf	(?___flpack+3)& (0+255),b
  6699  003B42  0012               	return	
  6700  003B44                     l4530:
  6701                           
  6702                           ; BSR set to: 0
  6703  003B44  0100               	movlb	0	; () banked
  6704  003B46  2B79               	incf	___flpack@exp& (0+255),f,b
  6705  003B48  0100               	movlb	0	; () banked
  6706  003B4A  90D8               	bcf	status,0,c
  6707  003B4C  0100               	movlb	0	; () banked
  6708  003B4E  3378               	rrcf	(___flpack@arg+3)& (0+255),f,b
  6709  003B50  0100               	movlb	0	; () banked
  6710  003B52  3377               	rrcf	(___flpack@arg+2)& (0+255),f,b
  6711  003B54  0100               	movlb	0	; () banked
  6712  003B56  3376               	rrcf	(___flpack@arg+1)& (0+255),f,b
  6713  003B58  0100               	movlb	0	; () banked
  6714  003B5A  3375               	rrcf	___flpack@arg& (0+255),f,b
  6715  003B5C                     l4532:
  6716                           
  6717                           ; BSR set to: 0
  6718  003B5C  0E00               	movlw	0
  6719  003B5E  0100               	movlb	0	; () banked
  6720  003B60  1575               	andwf	___flpack@arg& (0+255),w,b
  6721  003B62  0100               	movlb	0	; () banked
  6722  003B64  6F7B               	movwf	??___flpack& (0+255),b
  6723  003B66  0E00               	movlw	0
  6724  003B68  0100               	movlb	0	; () banked
  6725  003B6A  1576               	andwf	(___flpack@arg+1)& (0+255),w,b
  6726  003B6C  0100               	movlb	0	; () banked
  6727  003B6E  6F7C               	movwf	(??___flpack+1)& (0+255),b
  6728  003B70  0E00               	movlw	0
  6729  003B72  0100               	movlb	0	; () banked
  6730  003B74  1577               	andwf	(___flpack@arg+2)& (0+255),w,b
  6731  003B76  0100               	movlb	0	; () banked
  6732  003B78  6F7D               	movwf	(??___flpack+2)& (0+255),b
  6733  003B7A  0EFE               	movlw	254
  6734  003B7C  0100               	movlb	0	; () banked
  6735  003B7E  1578               	andwf	(___flpack@arg+3)& (0+255),w,b
  6736  003B80  0100               	movlb	0	; () banked
  6737  003B82  6F7E               	movwf	(??___flpack+3)& (0+255),b
  6738  003B84  0100               	movlb	0	; () banked
  6739  003B86  517E               	movf	(??___flpack+3)& (0+255),w,b
  6740  003B88  117B               	iorwf	??___flpack& (0+255),w,b
  6741  003B8A  117C               	iorwf	(??___flpack+1)& (0+255),w,b
  6742  003B8C  117D               	iorwf	(??___flpack+2)& (0+255),w,b
  6743  003B8E  B4D8               	btfsc	status,2,c
  6744  003B90  D017               	goto	l996
  6745  003B92  D7D8               	goto	l4530
  6746  003B94                     l4534:
  6747                           
  6748                           ; BSR set to: 0
  6749  003B94  0100               	movlb	0	; () banked
  6750  003B96  2B79               	incf	___flpack@exp& (0+255),f,b
  6751                           
  6752                           ; BSR set to: 0
  6753  003B98  0E01               	movlw	1
  6754  003B9A  0100               	movlb	0	; () banked
  6755  003B9C  2775               	addwf	___flpack@arg& (0+255),f,b
  6756  003B9E  0E00               	movlw	0
  6757  003BA0  0100               	movlb	0	; () banked
  6758  003BA2  2376               	addwfc	(___flpack@arg+1)& (0+255),f,b
  6759  003BA4  0100               	movlb	0	; () banked
  6760  003BA6  2377               	addwfc	(___flpack@arg+2)& (0+255),f,b
  6761  003BA8  0100               	movlb	0	; () banked
  6762  003BAA  2378               	addwfc	(___flpack@arg+3)& (0+255),f,b
  6763                           
  6764                           ; BSR set to: 0
  6765  003BAC  0100               	movlb	0	; () banked
  6766  003BAE  90D8               	bcf	status,0,c
  6767  003BB0  0100               	movlb	0	; () banked
  6768  003BB2  3378               	rrcf	(___flpack@arg+3)& (0+255),f,b
  6769  003BB4  0100               	movlb	0	; () banked
  6770  003BB6  3377               	rrcf	(___flpack@arg+2)& (0+255),f,b
  6771  003BB8  0100               	movlb	0	; () banked
  6772  003BBA  3376               	rrcf	(___flpack@arg+1)& (0+255),f,b
  6773  003BBC  0100               	movlb	0	; () banked
  6774  003BBE  3375               	rrcf	___flpack@arg& (0+255),f,b
  6775  003BC0                     l996:
  6776                           
  6777                           ; BSR set to: 0
  6778  003BC0  0E00               	movlw	0
  6779  003BC2  0100               	movlb	0	; () banked
  6780  003BC4  1575               	andwf	___flpack@arg& (0+255),w,b
  6781  003BC6  0100               	movlb	0	; () banked
  6782  003BC8  6F7B               	movwf	??___flpack& (0+255),b
  6783  003BCA  0E00               	movlw	0
  6784  003BCC  0100               	movlb	0	; () banked
  6785  003BCE  1576               	andwf	(___flpack@arg+1)& (0+255),w,b
  6786  003BD0  0100               	movlb	0	; () banked
  6787  003BD2  6F7C               	movwf	(??___flpack+1)& (0+255),b
  6788  003BD4  0E00               	movlw	0
  6789  003BD6  0100               	movlb	0	; () banked
  6790  003BD8  1577               	andwf	(___flpack@arg+2)& (0+255),w,b
  6791  003BDA  0100               	movlb	0	; () banked
  6792  003BDC  6F7D               	movwf	(??___flpack+2)& (0+255),b
  6793  003BDE  0EFF               	movlw	255
  6794  003BE0  0100               	movlb	0	; () banked
  6795  003BE2  1578               	andwf	(___flpack@arg+3)& (0+255),w,b
  6796  003BE4  0100               	movlb	0	; () banked
  6797  003BE6  6F7E               	movwf	(??___flpack+3)& (0+255),b
  6798  003BE8  0100               	movlb	0	; () banked
  6799  003BEA  517E               	movf	(??___flpack+3)& (0+255),w,b
  6800  003BEC  117B               	iorwf	??___flpack& (0+255),w,b
  6801  003BEE  117C               	iorwf	(??___flpack+1)& (0+255),w,b
  6802  003BF0  117D               	iorwf	(??___flpack+2)& (0+255),w,b
  6803  003BF2  B4D8               	btfsc	status,2,c
  6804  003BF4  D00D               	goto	l4542
  6805  003BF6  D7CE               	goto	l4534
  6806  003BF8                     l4540:
  6807                           
  6808                           ; BSR set to: 0
  6809  003BF8  0100               	movlb	0	; () banked
  6810  003BFA  0779               	decf	___flpack@exp& (0+255),f,b
  6811  003BFC  0100               	movlb	0	; () banked
  6812  003BFE  90D8               	bcf	status,0,c
  6813  003C00  0100               	movlb	0	; () banked
  6814  003C02  3775               	rlcf	___flpack@arg& (0+255),f,b
  6815  003C04  0100               	movlb	0	; () banked
  6816  003C06  3776               	rlcf	(___flpack@arg+1)& (0+255),f,b
  6817  003C08  0100               	movlb	0	; () banked
  6818  003C0A  3777               	rlcf	(___flpack@arg+2)& (0+255),f,b
  6819  003C0C  0100               	movlb	0	; () banked
  6820  003C0E  3778               	rlcf	(___flpack@arg+3)& (0+255),f,b
  6821  003C10                     l4542:
  6822                           
  6823                           ; BSR set to: 0
  6824  003C10  0100               	movlb	0	; () banked
  6825  003C12  AF77               	btfss	(___flpack@arg+2)& (0+255),7,b
  6826  003C14  D7F1               	goto	l4540
  6827                           
  6828                           ; BSR set to: 0
  6829  003C16  0100               	movlb	0	; () banked
  6830  003C18  B179               	btfsc	___flpack@exp& (0+255),0,b
  6831  003C1A  D00C               	goto	l1002
  6832                           
  6833                           ; BSR set to: 0
  6834  003C1C  0EFF               	movlw	255
  6835  003C1E  0100               	movlb	0	; () banked
  6836  003C20  1775               	andwf	___flpack@arg& (0+255),f,b
  6837  003C22  0EFF               	movlw	255
  6838  003C24  0100               	movlb	0	; () banked
  6839  003C26  1776               	andwf	(___flpack@arg+1)& (0+255),f,b
  6840  003C28  0E7F               	movlw	127
  6841  003C2A  0100               	movlb	0	; () banked
  6842  003C2C  1777               	andwf	(___flpack@arg+2)& (0+255),f,b
  6843  003C2E  0EFF               	movlw	255
  6844  003C30  0100               	movlb	0	; () banked
  6845  003C32  1778               	andwf	(___flpack@arg+3)& (0+255),f,b
  6846  003C34                     l1002:
  6847                           
  6848                           ; BSR set to: 0
  6849  003C34  0100               	movlb	0	; () banked
  6850  003C36  90D8               	bcf	status,0,c
  6851  003C38  3379               	rrcf	___flpack@exp& (0+255),f,b
  6852  003C3A  0100               	movlb	0	; () banked
  6853  003C3C  C079  F07B         	movff	___flpack@exp,??___flpack
  6854  003C40  0100               	movlb	0	; () banked
  6855  003C42  6B7C               	clrf	(??___flpack+1)& (0+255),b
  6856  003C44  6B7D               	clrf	(??___flpack+2)& (0+255),b
  6857  003C46  6B7E               	clrf	(??___flpack+3)& (0+255),b
  6858  003C48  C07B  F07E         	movff	??___flpack,??___flpack+3
  6859  003C4C  0100               	movlb	0	; () banked
  6860  003C4E  6B7D               	clrf	(??___flpack+2)& (0+255),b
  6861  003C50  6B7C               	clrf	(??___flpack+1)& (0+255),b
  6862  003C52  6B7B               	clrf	??___flpack& (0+255),b
  6863  003C54  0100               	movlb	0	; () banked
  6864  003C56  517B               	movf	??___flpack& (0+255),w,b
  6865  003C58  0100               	movlb	0	; () banked
  6866  003C5A  1375               	iorwf	___flpack@arg& (0+255),f,b
  6867  003C5C  0100               	movlb	0	; () banked
  6868  003C5E  517C               	movf	(??___flpack+1)& (0+255),w,b
  6869  003C60  0100               	movlb	0	; () banked
  6870  003C62  1376               	iorwf	(___flpack@arg+1)& (0+255),f,b
  6871  003C64  0100               	movlb	0	; () banked
  6872  003C66  517D               	movf	(??___flpack+2)& (0+255),w,b
  6873  003C68  0100               	movlb	0	; () banked
  6874  003C6A  1377               	iorwf	(___flpack@arg+2)& (0+255),f,b
  6875  003C6C  0100               	movlb	0	; () banked
  6876  003C6E  517E               	movf	(??___flpack+3)& (0+255),w,b
  6877  003C70  0100               	movlb	0	; () banked
  6878  003C72  1378               	iorwf	(___flpack@arg+3)& (0+255),f,b
  6879                           
  6880                           ; BSR set to: 0
  6881  003C74  0100               	movlb	0	; () banked
  6882  003C76  517A               	movf	___flpack@sign& (0+255),w,b
  6883  003C78  B4D8               	btfsc	status,2,c
  6884  003C7A  D002               	goto	l4550
  6885                           
  6886                           ; BSR set to: 0
  6887  003C7C  0100               	movlb	0	; () banked
  6888  003C7E  8F78               	bsf	(___flpack@arg+3)& (0+255),7,b
  6889  003C80                     l4550:
  6890                           
  6891                           ; BSR set to: 0
  6892  003C80  C075  F075         	movff	___flpack@arg,?___flpack
  6893  003C84  C076  F076         	movff	___flpack@arg+1,?___flpack+1
  6894  003C88  C077  F077         	movff	___flpack@arg+2,?___flpack+2
  6895  003C8C  C078  F078         	movff	___flpack@arg+3,?___flpack+3
  6896  003C90  0012               	return	
  6897  003C92                     __end_of___flpack:
  6898                           	opt stack 0
  6899                           tblptru	equ	0xFF8
  6900                           tblptrh	equ	0xFF7
  6901                           tblptrl	equ	0xFF6
  6902                           tablat	equ	0xFF5
  6903                           prodh	equ	0xFF4
  6904                           prodl	equ	0xFF3
  6905                           postinc0	equ	0xFEE
  6906                           wreg	equ	0xFE8
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           fsr2h	equ	0xFDA
  6911                           fsr2l	equ	0xFD9
  6912                           status	equ	0xFD8
  6913                           
  6914 ;; *************** function _configurazione *****************
  6915 ;; Defined at:
  6916 ;;		line 266 in file "parcheggio.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;		None               void
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;Total ram usage:        0 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    6
  6937 ;; This function calls:
  6938 ;;		_CANInitialize
  6939 ;; This function is called by:
  6940 ;;		_main
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text23
  6945  00453C                     __ptext23:
  6946                           	opt stack 0
  6947  00453C                     _configurazione:
  6948                           	opt stack 24
  6949                           
  6950                           ;parcheggio.c: 267: LATA = 0x00;
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;incstack = 0
  6954  00453C  0E00               	movlw	0
  6955  00453E  6E89               	movwf	3977,c	;volatile
  6956                           
  6957                           ;parcheggio.c: 268: TRISA = 0b11110000;
  6958  004540  0EF0               	movlw	240
  6959  004542  6E92               	movwf	3986,c	;volatile
  6960                           
  6961                           ;parcheggio.c: 270: LATB = 0x00;
  6962  004544  0E00               	movlw	0
  6963  004546  6E8A               	movwf	3978,c	;volatile
  6964                           
  6965                           ;parcheggio.c: 271: TRISB = 0b10001010;
  6966  004548  0E8A               	movlw	138
  6967  00454A  6E93               	movwf	3987,c	;volatile
  6968                           
  6969                           ;parcheggio.c: 273: LATC = 0x00;
  6970  00454C  0E00               	movlw	0
  6971  00454E  6E8B               	movwf	3979,c	;volatile
  6972                           
  6973                           ;parcheggio.c: 274: TRISC = 0b11111111;
  6974  004550  6894               	setf	3988,c	;volatile
  6975                           
  6976                           ;parcheggio.c: 276: ADCON1 = 0xFF;
  6977  004552  68C1               	setf	4033,c	;volatile
  6978                           
  6979                           ;parcheggio.c: 277: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  6980  004554  0E06               	movlw	6
  6981  004556  0100               	movlb	0	; () banked
  6982  004558  6F83               	movwf	CANInitialize@phaseSeg1& (0+255),b
  6983  00455A  0E05               	movlw	5
  6984  00455C  0100               	movlb	0	; () banked
  6985  00455E  6F84               	movwf	CANInitialize@phaseSeg2& (0+255),b
  6986  004560  0E01               	movlw	1
  6987  004562  0100               	movlb	0	; () banked
  6988  004564  6F85               	movwf	CANInitialize@SJW& (0+255),b
  6989  004566  0E03               	movlw	3
  6990  004568  0100               	movlb	0	; () banked
  6991  00456A  6F86               	movwf	CANInitialize@BRP& (0+255),b
  6992  00456C  0E9D               	movlw	157
  6993  00456E  0100               	movlb	0	; () banked
  6994  004570  6F87               	movwf	CANInitialize@flags& (0+255),b
  6995  004572  0E04               	movlw	4
  6996  004574  ECCA  F01A         	call	_CANInitialize
  6997                           
  6998                           ;parcheggio.c: 279: RCONbits.IPEN = 1;
  6999  004578  8ED0               	bsf	4048,7,c	;volatile
  7000                           
  7001                           ;parcheggio.c: 280: PIR3bits.RXB1IF = 0;
  7002  00457A  92A4               	bcf	4004,1,c	;volatile
  7003                           
  7004                           ;parcheggio.c: 281: PIR3bits.RXB0IF = 0;
  7005  00457C  90A4               	bcf	4004,0,c	;volatile
  7006                           
  7007                           ;parcheggio.c: 282: IPR3bits.RXB1IP = 0;
  7008  00457E  92A5               	bcf	4005,1,c	;volatile
  7009                           
  7010                           ;parcheggio.c: 283: IPR3bits.RXB0IP = 0;
  7011  004580  90A5               	bcf	4005,0,c	;volatile
  7012                           
  7013                           ;parcheggio.c: 284: PIE3bits.RXB1IE = 1;
  7014  004582  82A3               	bsf	4003,1,c	;volatile
  7015                           
  7016                           ;parcheggio.c: 285: PIE3bits.RXB0IE = 1;
  7017  004584  80A3               	bsf	4003,0,c	;volatile
  7018                           
  7019                           ;parcheggio.c: 286: INTCON2bits.TMR0IP = 0;
  7020  004586  94F1               	bcf	intcon2,2,c	;volatile
  7021                           
  7022                           ;parcheggio.c: 287: T0CON = 0x80;
  7023  004588  0E80               	movlw	128
  7024  00458A  6ED5               	movwf	4053,c	;volatile
  7025                           
  7026                           ;parcheggio.c: 288: T3CON = 0x11;
  7027  00458C  0E11               	movlw	17
  7028  00458E  6EB1               	movwf	4017,c	;volatile
  7029                           
  7030                           ;parcheggio.c: 289: TMR0H = 0x34;
  7031  004590  0E34               	movlw	52
  7032  004592  6ED7               	movwf	4055,c	;volatile
  7033                           
  7034                           ;parcheggio.c: 290: TMR0L = 0xE0;
  7035  004594  0EE0               	movlw	224
  7036  004596  6ED6               	movwf	4054,c	;volatile
  7037                           
  7038                           ;parcheggio.c: 291: INTCONbits.TMR0IF = 0;
  7039  004598  94F2               	bcf	intcon,2,c	;volatile
  7040                           
  7041                           ;parcheggio.c: 292: INTCONbits.TMR0IE = 1;
  7042  00459A  8AF2               	bsf	intcon,5,c	;volatile
  7043                           
  7044                           ;parcheggio.c: 293: INTCON2bits.INTEDG0 = 1;
  7045  00459C  8CF1               	bsf	intcon2,6,c	;volatile
  7046                           
  7047                           ;parcheggio.c: 294: INTCONbits.INT0IF = 0;
  7048  00459E  92F2               	bcf	intcon,1,c	;volatile
  7049                           
  7050                           ;parcheggio.c: 295: INTCONbits.INT0IE = 0;
  7051  0045A0  98F2               	bcf	intcon,4,c	;volatile
  7052                           
  7053                           ;parcheggio.c: 296: INTCONbits.GIEL = 1;
  7054  0045A2  8CF2               	bsf	intcon,6,c	;volatile
  7055                           
  7056                           ;parcheggio.c: 297: INTCONbits.GIEH = 1;
  7057  0045A4  8EF2               	bsf	intcon,7,c	;volatile
  7058  0045A6  0012               	return	
  7059  0045A8                     __end_of_configurazione:
  7060                           	opt stack 0
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           intcon2	equ	0xFF1
  7069                           postinc0	equ	0xFEE
  7070                           wreg	equ	0xFE8
  7071                           indf2	equ	0xFDF
  7072                           postinc2	equ	0xFDE
  7073                           postdec2	equ	0xFDD
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function _CANInitialize *****************
  7079 ;; Defined at:
  7080 ;;		line 218 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  propSeg         1    wreg     unsigned char 
  7083 ;;  phaseSeg1       1   35[BANK0 ] unsigned char 
  7084 ;;  phaseSeg2       1   36[BANK0 ] unsigned char 
  7085 ;;  SJW             1   37[BANK0 ] unsigned char 
  7086 ;;  BRP             1   38[BANK0 ] unsigned char 
  7087 ;;  flags           1   39[BANK0 ] enum E16354
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  propSeg         1   44[BANK0 ] unsigned char 
  7090 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  7091 ;;  FilterConfig    1   45[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;		None               void
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7101 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;Total ram usage:       12 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    5
  7108 ;; This function calls:
  7109 ;;		_CANOperationMode
  7110 ;;		_CANSetFilter
  7111 ;;		_CANSetMask
  7112 ;; This function is called by:
  7113 ;;		_configurazione
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text24
  7118  003594                     __ptext24:
  7119                           	opt stack 0
  7120  003594                     _CANInitialize:
  7121                           	opt stack 24
  7122                           
  7123                           ;incstack = 0
  7124                           ;CANInitialize@propSeg stored from wreg
  7125  003594  0100               	movlb	0	; () banked
  7126  003596  6F8C               	movwf	CANInitialize@propSeg& (0+255),b
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  7130                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  7131                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  7132  003598  0E80               	movlw	128
  7133  00359A  EC3A  F024         	call	_CANOperationMode
  7134                           
  7135                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  7136  00359E  0E00               	movlw	0
  7137  0035A0  6E70               	movwf	3952,c	;volatile
  7138                           
  7139                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  7140  0035A2  0E00               	movlw	0
  7141  0035A4  6E71               	movwf	3953,c	;volatile
  7142                           
  7143                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  7144  0035A6  0E00               	movlw	0
  7145  0035A8  6E72               	movwf	3954,c	;volatile
  7146                           
  7147                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  7148  0035AA  0100               	movlb	0	; () banked
  7149  0035AC  4185               	rrncf	CANInitialize@SJW& (0+255),w,b
  7150  0035AE  42E8               	rrncf	wreg,f,c
  7151  0035B0  0BC0               	andlw	192
  7152  0035B2  0100               	movlb	0	; () banked
  7153  0035B4  6F85               	movwf	CANInitialize@SJW& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  7157  0035B6  0100               	movlb	0	; () banked
  7158  0035B8  5185               	movf	CANInitialize@SJW& (0+255),w,b
  7159  0035BA  1270               	iorwf	3952,f,c	;volatile
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  7163  0035BC  0100               	movlb	0	; () banked
  7164  0035BE  5186               	movf	CANInitialize@BRP& (0+255),w,b
  7165  0035C0  1270               	iorwf	3952,f,c	;volatile
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  7169  0035C2  0100               	movlb	0	; () banked
  7170  0035C4  518C               	movf	CANInitialize@propSeg& (0+255),w,b
  7171  0035C6  1271               	iorwf	3953,f,c	;volatile
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  7175  0035C8  0100               	movlb	0	; () banked
  7176  0035CA  3983               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  7177  0035CC  42E8               	rrncf	wreg,f,c
  7178  0035CE  0BF8               	andlw	248
  7179  0035D0  0100               	movlb	0	; () banked
  7180  0035D2  6F83               	movwf	CANInitialize@phaseSeg1& (0+255),b
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  7184  0035D4  0100               	movlb	0	; () banked
  7185  0035D6  5183               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  7186  0035D8  1271               	iorwf	3953,f,c	;volatile
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  7190  0035DA  0100               	movlb	0	; () banked
  7191  0035DC  A587               	btfss	CANInitialize@flags& (0+255),2,b
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  7195  0035DE  8C71               	bsf	3953,6,c	;volatile
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  7199  0035E0  0100               	movlb	0	; () banked
  7200  0035E2  B187               	btfsc	CANInitialize@flags& (0+255),0,b
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  7204  0035E4  8E71               	bsf	3953,7,c	;volatile
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  7208                           
  7209                           ; BSR set to: 0
  7210  0035E6  0100               	movlb	0	; () banked
  7211  0035E8  5184               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  7212  0035EA  1272               	iorwf	3954,f,c	;volatile
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  7216  0035EC  0100               	movlb	0	; () banked
  7217  0035EE  B387               	btfsc	CANInitialize@flags& (0+255),1,b
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  7221  0035F0  8C72               	bsf	3954,6,c	;volatile
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  7225                           
  7226                           ; BSR set to: 0
  7227  0035F2  0100               	movlb	0	; () banked
  7228  0035F4  5187               	movf	CANInitialize@flags& (0+255),w,b
  7229  0035F6  0B60               	andlw	96
  7230  0035F8  6E60               	movwf	3936,c	;volatile
  7231                           
  7232                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  7233  0035FA  C087  F088         	movff	CANInitialize@flags,??_CANInitialize
  7234  0035FE  0E10               	movlw	16
  7235  003600  0100               	movlb	0	; () banked
  7236  003602  1788               	andwf	??_CANInitialize& (0+255),f,b
  7237  003604  0100               	movlb	0	; () banked
  7238  003606  5188               	movf	??_CANInitialize& (0+255),w,b
  7239  003608  0AFF               	xorlw	255
  7240  00360A  B4D8               	btfsc	status,2,c
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  7244  00360C  8460               	bsf	3936,2,c	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  7248  00360E  CF60 FF50          	movff	3936,3920	;volatile
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  7252  003612  0E00               	movlw	0
  7253  003614  0100               	movlb	0	; () banked
  7254  003616  6F75               	movwf	CANSetMask@mask& (0+255),b
  7255  003618  0E00               	movlw	0
  7256  00361A  0100               	movlb	0	; () banked
  7257  00361C  6F76               	movwf	(CANSetMask@mask+1)& (0+255),b
  7258  00361E  0E00               	movlw	0
  7259  003620  0100               	movlb	0	; () banked
  7260  003622  6F77               	movwf	(CANSetMask@mask+2)& (0+255),b
  7261  003624  0E00               	movlw	0
  7262  003626  0100               	movlb	0	; () banked
  7263  003628  6F78               	movwf	(CANSetMask@mask+3)& (0+255),b
  7264  00362A  0EF7               	movlw	247
  7265  00362C  0100               	movlb	0	; () banked
  7266  00362E  6F79               	movwf	CANSetMask@type& (0+255),b
  7267  003630  0E01               	movlw	1
  7268  003632  EC51  F013         	call	_CANSetMask
  7269                           
  7270                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  7271  003636  0E00               	movlw	0
  7272  003638  0100               	movlb	0	; () banked
  7273  00363A  6F75               	movwf	CANSetMask@mask& (0+255),b
  7274  00363C  0E00               	movlw	0
  7275  00363E  0100               	movlb	0	; () banked
  7276  003640  6F76               	movwf	(CANSetMask@mask+1)& (0+255),b
  7277  003642  0E00               	movlw	0
  7278  003644  0100               	movlb	0	; () banked
  7279  003646  6F77               	movwf	(CANSetMask@mask+2)& (0+255),b
  7280  003648  0E00               	movlw	0
  7281  00364A  0100               	movlb	0	; () banked
  7282  00364C  6F78               	movwf	(CANSetMask@mask+3)& (0+255),b
  7283  00364E  0EF7               	movlw	247
  7284  003650  0100               	movlb	0	; () banked
  7285  003652  6F79               	movwf	CANSetMask@type& (0+255),b
  7286  003654  0E02               	movlw	2
  7287  003656  EC51  F013         	call	_CANSetMask
  7288                           
  7289                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  7290  00365A  D00F               	goto	l3990
  7291  00365C                     l3984:
  7292                           
  7293                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  7294  00365C  0EF7               	movlw	247
  7295  00365E  0100               	movlb	0	; () banked
  7296  003660  6F8D               	movwf	CANInitialize@FilterConfig1& (0+255),b
  7297  003662  D007               	goto	L2
  7298  003664                     l352:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7302  003664  0100               	movlb	0	; () banked
  7303  003666  698D               	setf	CANInitialize@FilterConfig1& (0+255),b
  7304                           
  7305                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  7306  003668  0100               	movlb	0	; () banked
  7307  00366A  698E               	setf	CANInitialize@FilterConfig2& (0+255),b
  7308                           
  7309                           ;inc\CANlib.h: 273: break;
  7310  00366C  D027               	goto	l3992
  7311  00366E                     l353:
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7315  00366E  0100               	movlb	0	; () banked
  7316  003670  698D               	setf	CANInitialize@FilterConfig1& (0+255),b
  7317  003672                     L2:
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  7321  003672  0EF7               	movlw	247
  7322  003674  0100               	movlb	0	; () banked
  7323  003676  6F8E               	movwf	CANInitialize@FilterConfig2& (0+255),b
  7324                           
  7325                           ;inc\CANlib.h: 277: break;
  7326  003678  D021               	goto	l3992
  7327  00367A                     l3990:
  7328  00367A  0E9F               	movlw	159
  7329  00367C  0100               	movlb	0	; () banked
  7330  00367E  6F88               	movwf	??_CANInitialize& (0+255),b
  7331  003680  0EFF               	movlw	255
  7332  003682  6F89               	movwf	(??_CANInitialize+1)& (0+255),b
  7333  003684  0100               	movlb	0	; () banked
  7334  003686  5187               	movf	CANInitialize@flags& (0+255),w,b
  7335  003688  0B60               	andlw	96
  7336  00368A  0100               	movlb	0	; () banked
  7337  00368C  6F8A               	movwf	(??_CANInitialize+2)& (0+255),b
  7338  00368E  6B8B               	clrf	(??_CANInitialize+3)& (0+255),b
  7339  003690  0100               	movlb	0	; () banked
  7340  003692  5188               	movf	??_CANInitialize& (0+255),w,b
  7341  003694  0100               	movlb	0	; () banked
  7342  003696  138A               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  7343  003698  0100               	movlb	0	; () banked
  7344  00369A  5189               	movf	(??_CANInitialize+1)& (0+255),w,b
  7345  00369C  0100               	movlb	0	; () banked
  7346  00369E  138B               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  7347                           
  7348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7349                           ; Switch size 1, requested type "space"
  7350                           ; Number of cases is 1, Range of values is 0 to 0
  7351                           ; switch strategies available:
  7352                           ; Name         Instructions Cycles
  7353                           ; simple_byte            4     3 (average)
  7354                           ;	Chosen strategy is simple_byte
  7355  0036A0  0100               	movlb	0	; () banked
  7356  0036A2  518B               	movf	(??_CANInitialize+3)& (0+255),w,b
  7357  0036A4  0A00               	xorlw	0	; case 0
  7358  0036A6  A4D8               	btfss	status,2,c
  7359  0036A8  D7E2               	goto	l353
  7360                           
  7361                           ; BSR set to: 0
  7362                           ; Switch size 1, requested type "space"
  7363                           ; Number of cases is 2, Range of values is 191 to 223
  7364                           ; switch strategies available:
  7365                           ; Name         Instructions Cycles
  7366                           ; simple_byte            7     4 (average)
  7367                           ;	Chosen strategy is simple_byte
  7368  0036AA  0100               	movlb	0	; () banked
  7369  0036AC  518A               	movf	(??_CANInitialize+2)& (0+255),w,b
  7370  0036AE  0ABF               	xorlw	191	; case 191
  7371  0036B0  B4D8               	btfsc	status,2,c
  7372  0036B2  D7D8               	goto	l352
  7373  0036B4  0A60               	xorlw	96	; case 223
  7374  0036B6  B4D8               	btfsc	status,2,c
  7375  0036B8  D7D1               	goto	l3984
  7376  0036BA  D7D9               	goto	l353
  7377  0036BC                     l3992:
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  7381  0036BC  0E00               	movlw	0
  7382  0036BE  0100               	movlb	0	; () banked
  7383  0036C0  6F75               	movwf	CANSetFilter@filter& (0+255),b
  7384  0036C2  0E00               	movlw	0
  7385  0036C4  0100               	movlb	0	; () banked
  7386  0036C6  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7387  0036C8  0E00               	movlw	0
  7388  0036CA  0100               	movlb	0	; () banked
  7389  0036CC  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7390  0036CE  0E00               	movlw	0
  7391  0036D0  0100               	movlb	0	; () banked
  7392  0036D2  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7393  0036D4  C08D  F079         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  7394  0036D8  0E00               	movlw	0
  7395  0036DA  EC97  F006         	call	_CANSetFilter
  7396                           
  7397                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  7398  0036DE  0E00               	movlw	0
  7399  0036E0  0100               	movlb	0	; () banked
  7400  0036E2  6F75               	movwf	CANSetFilter@filter& (0+255),b
  7401  0036E4  0E00               	movlw	0
  7402  0036E6  0100               	movlb	0	; () banked
  7403  0036E8  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7404  0036EA  0E00               	movlw	0
  7405  0036EC  0100               	movlb	0	; () banked
  7406  0036EE  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7407  0036F0  0E00               	movlw	0
  7408  0036F2  0100               	movlb	0	; () banked
  7409  0036F4  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7410  0036F6  C08D  F079         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  7411  0036FA  0E01               	movlw	1
  7412  0036FC  EC97  F006         	call	_CANSetFilter
  7413                           
  7414                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  7415  003700  0E00               	movlw	0
  7416  003702  0100               	movlb	0	; () banked
  7417  003704  6F75               	movwf	CANSetFilter@filter& (0+255),b
  7418  003706  0E00               	movlw	0
  7419  003708  0100               	movlb	0	; () banked
  7420  00370A  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7421  00370C  0E00               	movlw	0
  7422  00370E  0100               	movlb	0	; () banked
  7423  003710  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7424  003712  0E00               	movlw	0
  7425  003714  0100               	movlb	0	; () banked
  7426  003716  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7427  003718  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7428  00371C  0E02               	movlw	2
  7429  00371E  EC97  F006         	call	_CANSetFilter
  7430                           
  7431                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  7432  003722  0E00               	movlw	0
  7433  003724  0100               	movlb	0	; () banked
  7434  003726  6F75               	movwf	CANSetFilter@filter& (0+255),b
  7435  003728  0E00               	movlw	0
  7436  00372A  0100               	movlb	0	; () banked
  7437  00372C  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7438  00372E  0E00               	movlw	0
  7439  003730  0100               	movlb	0	; () banked
  7440  003732  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7441  003734  0E00               	movlw	0
  7442  003736  0100               	movlb	0	; () banked
  7443  003738  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7444  00373A  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7445  00373E  0E03               	movlw	3
  7446  003740  EC97  F006         	call	_CANSetFilter
  7447                           
  7448                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  7449  003744  0E00               	movlw	0
  7450  003746  0100               	movlb	0	; () banked
  7451  003748  6F75               	movwf	CANSetFilter@filter& (0+255),b
  7452  00374A  0E00               	movlw	0
  7453  00374C  0100               	movlb	0	; () banked
  7454  00374E  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7455  003750  0E00               	movlw	0
  7456  003752  0100               	movlb	0	; () banked
  7457  003754  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7458  003756  0E00               	movlw	0
  7459  003758  0100               	movlb	0	; () banked
  7460  00375A  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7461  00375C  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7462  003760  0E04               	movlw	4
  7463  003762  EC97  F006         	call	_CANSetFilter
  7464                           
  7465                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  7466  003766  0E00               	movlw	0
  7467  003768  0100               	movlb	0	; () banked
  7468  00376A  6F75               	movwf	CANSetFilter@filter& (0+255),b
  7469  00376C  0E00               	movlw	0
  7470  00376E  0100               	movlb	0	; () banked
  7471  003770  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7472  003772  0E00               	movlw	0
  7473  003774  0100               	movlb	0	; () banked
  7474  003776  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7475  003778  0E00               	movlw	0
  7476  00377A  0100               	movlb	0	; () banked
  7477  00377C  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7478  00377E  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7479  003782  0E05               	movlw	5
  7480  003784  EC97  F006         	call	_CANSetFilter
  7481                           
  7482                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  7483  003788  0E00               	movlw	0
  7484  00378A  EC3A  F024         	call	_CANOperationMode
  7485  00378E  0012               	return	
  7486  003790                     __end_of_CANInitialize:
  7487                           	opt stack 0
  7488                           tblptru	equ	0xFF8
  7489                           tblptrh	equ	0xFF7
  7490                           tblptrl	equ	0xFF6
  7491                           tablat	equ	0xFF5
  7492                           prodh	equ	0xFF4
  7493                           prodl	equ	0xFF3
  7494                           intcon	equ	0xFF2
  7495                           intcon2	equ	0xFF1
  7496                           postinc0	equ	0xFEE
  7497                           wreg	equ	0xFE8
  7498                           indf2	equ	0xFDF
  7499                           postinc2	equ	0xFDE
  7500                           postdec2	equ	0xFDD
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function _CANSetMask *****************
  7506 ;; Defined at:
  7507 ;;		line 640 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  numBuffer       1    wreg     enum E16388
  7510 ;;  mask            4   21[BANK0 ] unsigned long 
  7511 ;;  type            1   25[BANK0 ] enum E16354
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  numBuffer       1   30[BANK0 ] enum E16388
  7514 ;;  tamp            4   31[BANK0 ] unsigned long 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7524 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;Total ram usage:       14 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    4
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_CANInitialize
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text25
  7539  0026A2                     __ptext25:
  7540                           	opt stack 0
  7541  0026A2                     _CANSetMask:
  7542                           	opt stack 24
  7543                           
  7544                           ;incstack = 0
  7545                           ;CANSetMask@numBuffer stored from wreg
  7546  0026A2  0100               	movlb	0	; () banked
  7547  0026A4  6F7E               	movwf	CANSetMask@numBuffer& (0+255),b
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  7551  0026A6  0100               	movlb	0	; () banked
  7552  0026A8  057E               	decf	CANSetMask@numBuffer& (0+255),w,b
  7553  0026AA  A4D8               	btfss	status,2,c
  7554  0026AC  D061               	goto	l3252
  7555                           
  7556                           ; BSR set to: 0
  7557  0026AE  0100               	movlb	0	; () banked
  7558  0026B0  2979               	incf	CANSetMask@type& (0+255),w,b
  7559  0026B2  A4D8               	btfss	status,2,c
  7560  0026B4  D05D               	goto	l3252
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;inc\CANlib.h: 644: {
  7564                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  7565  0026B6  0100               	movlb	0	; () banked
  7566  0026B8  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  7567  0026BC  0100               	movlb	0	; () banked
  7568  0026BE  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7569  0026C2  0100               	movlb	0	; () banked
  7570  0026C4  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7571  0026C8  0100               	movlb	0	; () banked
  7572  0026CA  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7573  0026CE  0E04               	movlw	4
  7574  0026D0  D006               	goto	u3220
  7575  0026D2                     u3225:
  7576  0026D2  0100               	movlb	0	; () banked
  7577  0026D4  90D8               	bcf	status,0,c
  7578  0026D6  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7579  0026D8  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7580  0026DA  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7581  0026DC  337A               	rrcf	??_CANSetMask& (0+255),f,b
  7582  0026DE                     u3220:
  7583  0026DE  2EE8               	decfsz	wreg,f,c
  7584  0026E0  D7F8               	goto	u3225
  7585  0026E2  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  7586  0026E6  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7587  0026EA  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7588  0026EE  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  7592  0026F2  0100               	movlb	0	; () banked
  7593  0026F4  517F               	movf	CANSetMask@tamp& (0+255),w,b
  7594  0026F6  0100               	movlb	0	; () banked
  7595  0026F8  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7596  0026FA  0100               	movlb	0	; () banked
  7597  0026FC  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7598  0026FE  0100               	movlb	0	; () banked
  7599  002700  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7600  002702  0100               	movlb	0	; () banked
  7601  002704  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  7605  002706  C07F  FF18         	movff	CANSetMask@tamp,3864	;volatile
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  7609  00270A  0E07               	movlw	7
  7610  00270C  0100               	movlb	0	; () banked
  7611  00270E  1575               	andwf	CANSetMask@mask& (0+255),w,b
  7612  002710  0100               	movlb	0	; () banked
  7613  002712  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7614  002714  0E00               	movlw	0
  7615  002716  0100               	movlb	0	; () banked
  7616  002718  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7617  00271A  0100               	movlb	0	; () banked
  7618  00271C  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7619  00271E  0E00               	movlw	0
  7620  002720  0100               	movlb	0	; () banked
  7621  002722  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7622  002724  0100               	movlb	0	; () banked
  7623  002726  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7624  002728  0E00               	movlw	0
  7625  00272A  0100               	movlb	0	; () banked
  7626  00272C  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7627  00272E  0100               	movlb	0	; () banked
  7628  002730  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  7632  002732  0100               	movlb	0	; () banked
  7633  002734  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  7634  002738  0100               	movlb	0	; () banked
  7635  00273A  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7636  00273E  0100               	movlb	0	; () banked
  7637  002740  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7638  002744  0100               	movlb	0	; () banked
  7639  002746  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7640  00274A  0E05               	movlw	5
  7641  00274C                     u3235:
  7642  00274C  90D8               	bcf	status,0,c
  7643  00274E  0100               	movlb	0	; () banked
  7644  002750  377A               	rlcf	??_CANSetMask& (0+255),f,b
  7645  002752  377B               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  7646  002754  377C               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  7647  002756  377D               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  7648  002758  2EE8               	decfsz	wreg,f,c
  7649  00275A  D7F8               	goto	u3235
  7650  00275C  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  7651  002760  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7652  002764  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7653  002768  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  7657  00276C  C07F  FF19         	movff	CANSetMask@tamp,3865	;volatile
  7658  002770                     l3252:
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;inc\CANlib.h: 652: }
  7662                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  7663  002770  0100               	movlb	0	; () banked
  7664  002772  517E               	movf	CANSetMask@numBuffer& (0+255),w,b
  7665  002774  0A02               	xorlw	2
  7666  002776  A4D8               	btfss	status,2,c
  7667  002778  D061               	goto	l3268
  7668                           
  7669                           ; BSR set to: 0
  7670  00277A  0100               	movlb	0	; () banked
  7671  00277C  2979               	incf	CANSetMask@type& (0+255),w,b
  7672  00277E  A4D8               	btfss	status,2,c
  7673  002780  D05D               	goto	l3268
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;inc\CANlib.h: 655: {
  7677                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  7678  002782  0100               	movlb	0	; () banked
  7679  002784  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  7680  002788  0100               	movlb	0	; () banked
  7681  00278A  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7682  00278E  0100               	movlb	0	; () banked
  7683  002790  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7684  002794  0100               	movlb	0	; () banked
  7685  002796  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7686  00279A  0E04               	movlw	4
  7687  00279C  D006               	goto	u3260
  7688  00279E                     u3265:
  7689  00279E  0100               	movlb	0	; () banked
  7690  0027A0  90D8               	bcf	status,0,c
  7691  0027A2  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7692  0027A4  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7693  0027A6  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7694  0027A8  337A               	rrcf	??_CANSetMask& (0+255),f,b
  7695  0027AA                     u3260:
  7696  0027AA  2EE8               	decfsz	wreg,f,c
  7697  0027AC  D7F8               	goto	u3265
  7698  0027AE  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  7699  0027B2  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7700  0027B6  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7701  0027BA  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  7705  0027BE  0100               	movlb	0	; () banked
  7706  0027C0  517F               	movf	CANSetMask@tamp& (0+255),w,b
  7707  0027C2  0100               	movlb	0	; () banked
  7708  0027C4  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7709  0027C6  0100               	movlb	0	; () banked
  7710  0027C8  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7711  0027CA  0100               	movlb	0	; () banked
  7712  0027CC  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7713  0027CE  0100               	movlb	0	; () banked
  7714  0027D0  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  7718  0027D2  C07F  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  7722  0027D6  0E07               	movlw	7
  7723  0027D8  0100               	movlb	0	; () banked
  7724  0027DA  1575               	andwf	CANSetMask@mask& (0+255),w,b
  7725  0027DC  0100               	movlb	0	; () banked
  7726  0027DE  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7727  0027E0  0E00               	movlw	0
  7728  0027E2  0100               	movlb	0	; () banked
  7729  0027E4  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7730  0027E6  0100               	movlb	0	; () banked
  7731  0027E8  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7732  0027EA  0E00               	movlw	0
  7733  0027EC  0100               	movlb	0	; () banked
  7734  0027EE  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7735  0027F0  0100               	movlb	0	; () banked
  7736  0027F2  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7737  0027F4  0E00               	movlw	0
  7738  0027F6  0100               	movlb	0	; () banked
  7739  0027F8  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7740  0027FA  0100               	movlb	0	; () banked
  7741  0027FC  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  7745  0027FE  0100               	movlb	0	; () banked
  7746  002800  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  7747  002804  0100               	movlb	0	; () banked
  7748  002806  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7749  00280A  0100               	movlb	0	; () banked
  7750  00280C  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7751  002810  0100               	movlb	0	; () banked
  7752  002812  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7753  002816  0E05               	movlw	5
  7754  002818                     u3275:
  7755  002818  90D8               	bcf	status,0,c
  7756  00281A  0100               	movlb	0	; () banked
  7757  00281C  377A               	rlcf	??_CANSetMask& (0+255),f,b
  7758  00281E  377B               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  7759  002820  377C               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  7760  002822  377D               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  7761  002824  2EE8               	decfsz	wreg,f,c
  7762  002826  D7F8               	goto	u3275
  7763  002828  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  7764  00282C  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7765  002830  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7766  002834  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  7770  002838  C07F  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  7771  00283C                     l3268:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;inc\CANlib.h: 663: }
  7775                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  7776  00283C  0100               	movlb	0	; () banked
  7777  00283E  057E               	decf	CANSetMask@numBuffer& (0+255),w,b
  7778  002840  A4D8               	btfss	status,2,c
  7779  002842  D095               	goto	l3300
  7780                           
  7781                           ; BSR set to: 0
  7782  002844  0100               	movlb	0	; () banked
  7783  002846  5179               	movf	CANSetMask@type& (0+255),w,b
  7784  002848  0AF7               	xorlw	247
  7785  00284A  A4D8               	btfss	status,2,c
  7786  00284C  D090               	goto	l3300
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;inc\CANlib.h: 666: {
  7790                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  7791  00284E  0100               	movlb	0	; () banked
  7792  002850  5175               	movf	CANSetMask@mask& (0+255),w,b
  7793  002852  0100               	movlb	0	; () banked
  7794  002854  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7795  002856  0100               	movlb	0	; () banked
  7796  002858  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7797  00285A  0100               	movlb	0	; () banked
  7798  00285C  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7799  00285E  0100               	movlb	0	; () banked
  7800  002860  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  7804  002862  C07F  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  7808  002866  0E00               	movlw	0
  7809  002868  0100               	movlb	0	; () banked
  7810  00286A  1575               	andwf	CANSetMask@mask& (0+255),w,b
  7811  00286C  0100               	movlb	0	; () banked
  7812  00286E  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7813  002870  0EFF               	movlw	255
  7814  002872  0100               	movlb	0	; () banked
  7815  002874  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7816  002876  0100               	movlb	0	; () banked
  7817  002878  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7818  00287A  0E00               	movlw	0
  7819  00287C  0100               	movlb	0	; () banked
  7820  00287E  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7821  002880  0100               	movlb	0	; () banked
  7822  002882  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7823  002884  0E00               	movlw	0
  7824  002886  0100               	movlb	0	; () banked
  7825  002888  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7826  00288A  0100               	movlb	0	; () banked
  7827  00288C  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  7831  00288E  0100               	movlb	0	; () banked
  7832  002890  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  7833  002894  0100               	movlb	0	; () banked
  7834  002896  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7835  00289A  0100               	movlb	0	; () banked
  7836  00289C  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7837  0028A0  0100               	movlb	0	; () banked
  7838  0028A2  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7839  0028A6  C07B  F07A         	movff	??_CANSetMask+1,??_CANSetMask
  7840  0028AA  C07C  F07B         	movff	??_CANSetMask+2,??_CANSetMask+1
  7841  0028AE  C07D  F07C         	movff	??_CANSetMask+3,??_CANSetMask+2
  7842  0028B2  0100               	movlb	0	; () banked
  7843  0028B4  6B7D               	clrf	(??_CANSetMask+3)& (0+255),b
  7844  0028B6  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  7845  0028BA  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7846  0028BE  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7847  0028C2  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  7851  0028C6  C07F  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  7855  0028CA  0100               	movlb	0	; () banked
  7856  0028CC  A177               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  7857  0028CE  D003               	goto	l426
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  7861  0028D0  010F               	movlb	15	; () banked
  7862  0028D2  8119               	bsf	25,0,b	;volatile
  7863  0028D4  D002               	goto	l427
  7864  0028D6                     l426:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;inc\CANlib.h: 676: else
  7868                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  7869  0028D6  010F               	movlb	15	; () banked
  7870  0028D8  9119               	bcf	25,0,b	;volatile
  7871  0028DA                     l427:
  7872                           
  7873                           ; BSR set to: 15
  7874                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  7875  0028DA  0100               	movlb	0	; () banked
  7876  0028DC  A377               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  7877  0028DE  D003               	goto	l428
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  7881  0028E0  010F               	movlb	15	; () banked
  7882  0028E2  8319               	bsf	25,1,b	;volatile
  7883  0028E4  D002               	goto	l429
  7884  0028E6                     l428:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;inc\CANlib.h: 681: else
  7888                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  7889  0028E6  010F               	movlb	15	; () banked
  7890  0028E8  9319               	bcf	25,1,b	;volatile
  7891  0028EA                     l429:
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  7895  0028EA  0100               	movlb	0	; () banked
  7896  0028EC  A577               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  7897  0028EE  D003               	goto	l430
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  7901  0028F0  010F               	movlb	15	; () banked
  7902  0028F2  8B19               	bsf	25,5,b	;volatile
  7903  0028F4  D002               	goto	l431
  7904  0028F6                     l430:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;inc\CANlib.h: 686: else
  7908                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  7909  0028F6  010F               	movlb	15	; () banked
  7910  0028F8  9B19               	bcf	25,5,b	;volatile
  7911  0028FA                     l431:
  7912                           
  7913                           ; BSR set to: 15
  7914                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  7915  0028FA  0100               	movlb	0	; () banked
  7916  0028FC  A777               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  7917  0028FE  D003               	goto	l432
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  7921  002900  010F               	movlb	15	; () banked
  7922  002902  8D19               	bsf	25,6,b	;volatile
  7923  002904  D002               	goto	l433
  7924  002906                     l432:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;inc\CANlib.h: 691: else
  7928                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  7929  002906  010F               	movlb	15	; () banked
  7930  002908  9D19               	bcf	25,6,b	;volatile
  7931  00290A                     l433:
  7932                           
  7933                           ; BSR set to: 15
  7934                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  7935  00290A  0100               	movlb	0	; () banked
  7936  00290C  A977               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  7937  00290E  D003               	goto	l434
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  7941  002910  010F               	movlb	15	; () banked
  7942  002912  8F19               	bsf	25,7,b	;volatile
  7943  002914  D002               	goto	l3294
  7944  002916                     l434:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;inc\CANlib.h: 696: else
  7948                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  7949  002916  010F               	movlb	15	; () banked
  7950  002918  9F19               	bcf	25,7,b	;volatile
  7951  00291A                     l3294:
  7952                           
  7953                           ; BSR set to: 15
  7954                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  7955  00291A  0100               	movlb	0	; () banked
  7956  00291C  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  7957  002920  0100               	movlb	0	; () banked
  7958  002922  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7959  002926  0100               	movlb	0	; () banked
  7960  002928  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7961  00292C  0100               	movlb	0	; () banked
  7962  00292E  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7963  002932  0E16               	movlw	22
  7964  002934  D006               	goto	u3350
  7965  002936                     u3355:
  7966  002936  0100               	movlb	0	; () banked
  7967  002938  90D8               	bcf	status,0,c
  7968  00293A  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7969  00293C  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7970  00293E  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7971  002940  337A               	rrcf	??_CANSetMask& (0+255),f,b
  7972  002942                     u3350:
  7973  002942  2EE8               	decfsz	wreg,f,c
  7974  002944  D7F8               	goto	u3355
  7975  002946  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  7976  00294A  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7977  00294E  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7978  002952  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  7982  002956  0100               	movlb	0	; () banked
  7983  002958  517F               	movf	CANSetMask@tamp& (0+255),w,b
  7984  00295A  0100               	movlb	0	; () banked
  7985  00295C  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  7986  00295E  0100               	movlb	0	; () banked
  7987  002960  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7988  002962  0100               	movlb	0	; () banked
  7989  002964  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7990  002966  0100               	movlb	0	; () banked
  7991  002968  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  7995  00296A  C07F  FF18         	movff	CANSetMask@tamp,3864	;volatile
  7996  00296E                     l3300:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;inc\CANlib.h: 702: }
  8000                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  8001  00296E  0100               	movlb	0	; () banked
  8002  002970  517E               	movf	CANSetMask@numBuffer& (0+255),w,b
  8003  002972  0A02               	xorlw	2
  8004  002974  A4D8               	btfss	status,2,c
  8005  002976  0012               	return	
  8006                           
  8007                           ; BSR set to: 0
  8008  002978  0100               	movlb	0	; () banked
  8009  00297A  5179               	movf	CANSetMask@type& (0+255),w,b
  8010  00297C  0AF7               	xorlw	247
  8011  00297E  A4D8               	btfss	status,2,c
  8012  002980  0012               	return	
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;inc\CANlib.h: 705: {
  8016                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  8017  002982  0100               	movlb	0	; () banked
  8018  002984  5175               	movf	CANSetMask@mask& (0+255),w,b
  8019  002986  0100               	movlb	0	; () banked
  8020  002988  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  8021  00298A  0100               	movlb	0	; () banked
  8022  00298C  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8023  00298E  0100               	movlb	0	; () banked
  8024  002990  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8025  002992  0100               	movlb	0	; () banked
  8026  002994  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  8030  002996  C07F  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  8034  00299A  0E00               	movlw	0
  8035  00299C  0100               	movlb	0	; () banked
  8036  00299E  1575               	andwf	CANSetMask@mask& (0+255),w,b
  8037  0029A0  0100               	movlb	0	; () banked
  8038  0029A2  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  8039  0029A4  0EFF               	movlw	255
  8040  0029A6  0100               	movlb	0	; () banked
  8041  0029A8  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8042  0029AA  0100               	movlb	0	; () banked
  8043  0029AC  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8044  0029AE  0E00               	movlw	0
  8045  0029B0  0100               	movlb	0	; () banked
  8046  0029B2  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8047  0029B4  0100               	movlb	0	; () banked
  8048  0029B6  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8049  0029B8  0E00               	movlw	0
  8050  0029BA  0100               	movlb	0	; () banked
  8051  0029BC  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8052  0029BE  0100               	movlb	0	; () banked
  8053  0029C0  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  8057  0029C2  0100               	movlb	0	; () banked
  8058  0029C4  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  8059  0029C8  0100               	movlb	0	; () banked
  8060  0029CA  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8061  0029CE  0100               	movlb	0	; () banked
  8062  0029D0  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8063  0029D4  0100               	movlb	0	; () banked
  8064  0029D6  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8065  0029DA  C07B  F07A         	movff	??_CANSetMask+1,??_CANSetMask
  8066  0029DE  C07C  F07B         	movff	??_CANSetMask+2,??_CANSetMask+1
  8067  0029E2  C07D  F07C         	movff	??_CANSetMask+3,??_CANSetMask+2
  8068  0029E6  0100               	movlb	0	; () banked
  8069  0029E8  6B7D               	clrf	(??_CANSetMask+3)& (0+255),b
  8070  0029EA  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  8071  0029EE  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8072  0029F2  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8073  0029F6  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  8077  0029FA  C07F  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  8081  0029FE  0100               	movlb	0	; () banked
  8082  002A00  A177               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8083  002A02  D003               	goto	l437
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  8087  002A04  010F               	movlb	15	; () banked
  8088  002A06  811D               	bsf	29,0,b	;volatile
  8089  002A08  D002               	goto	l438
  8090  002A0A                     l437:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;inc\CANlib.h: 715: else
  8094                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  8095  002A0A  010F               	movlb	15	; () banked
  8096  002A0C  911D               	bcf	29,0,b	;volatile
  8097  002A0E                     l438:
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  8101  002A0E  0100               	movlb	0	; () banked
  8102  002A10  A377               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8103  002A12  D003               	goto	l439
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  8107  002A14  010F               	movlb	15	; () banked
  8108  002A16  831D               	bsf	29,1,b	;volatile
  8109  002A18  D002               	goto	l440
  8110  002A1A                     l439:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;inc\CANlib.h: 720: else
  8114                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  8115  002A1A  010F               	movlb	15	; () banked
  8116  002A1C  931D               	bcf	29,1,b	;volatile
  8117  002A1E                     l440:
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  8121  002A1E  0100               	movlb	0	; () banked
  8122  002A20  A577               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8123  002A22  D003               	goto	l441
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  8127  002A24  010F               	movlb	15	; () banked
  8128  002A26  8B1D               	bsf	29,5,b	;volatile
  8129  002A28  D002               	goto	l442
  8130  002A2A                     l441:
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;inc\CANlib.h: 725: else
  8134                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  8135  002A2A  010F               	movlb	15	; () banked
  8136  002A2C  9B1D               	bcf	29,5,b	;volatile
  8137  002A2E                     l442:
  8138                           
  8139                           ; BSR set to: 15
  8140                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  8141  002A2E  0100               	movlb	0	; () banked
  8142  002A30  A777               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8143  002A32  D003               	goto	l443
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  8147  002A34  010F               	movlb	15	; () banked
  8148  002A36  8D1D               	bsf	29,6,b	;volatile
  8149  002A38  D002               	goto	l444
  8150  002A3A                     l443:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;inc\CANlib.h: 730: else
  8154                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  8155  002A3A  010F               	movlb	15	; () banked
  8156  002A3C  9D1D               	bcf	29,6,b	;volatile
  8157  002A3E                     l444:
  8158                           
  8159                           ; BSR set to: 15
  8160                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  8161  002A3E  0100               	movlb	0	; () banked
  8162  002A40  A977               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8163  002A42  D003               	goto	l445
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  8167  002A44  010F               	movlb	15	; () banked
  8168  002A46  8F1D               	bsf	29,7,b	;volatile
  8169  002A48  D002               	goto	l3326
  8170  002A4A                     l445:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;inc\CANlib.h: 735: else
  8174                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  8175  002A4A  010F               	movlb	15	; () banked
  8176  002A4C  9F1D               	bcf	29,7,b	;volatile
  8177  002A4E                     l3326:
  8178                           
  8179                           ; BSR set to: 15
  8180                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  8181  002A4E  0100               	movlb	0	; () banked
  8182  002A50  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  8183  002A54  0100               	movlb	0	; () banked
  8184  002A56  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8185  002A5A  0100               	movlb	0	; () banked
  8186  002A5C  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8187  002A60  0100               	movlb	0	; () banked
  8188  002A62  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8189  002A66  0E16               	movlw	22
  8190  002A68  D006               	goto	u3430
  8191  002A6A                     u3435:
  8192  002A6A  0100               	movlb	0	; () banked
  8193  002A6C  90D8               	bcf	status,0,c
  8194  002A6E  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8195  002A70  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8196  002A72  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8197  002A74  337A               	rrcf	??_CANSetMask& (0+255),f,b
  8198  002A76                     u3430:
  8199  002A76  2EE8               	decfsz	wreg,f,c
  8200  002A78  D7F8               	goto	u3435
  8201  002A7A  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  8202  002A7E  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8203  002A82  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8204  002A86  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  8208  002A8A  0100               	movlb	0	; () banked
  8209  002A8C  517F               	movf	CANSetMask@tamp& (0+255),w,b
  8210  002A8E  0100               	movlb	0	; () banked
  8211  002A90  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  8212  002A92  0100               	movlb	0	; () banked
  8213  002A94  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8214  002A96  0100               	movlb	0	; () banked
  8215  002A98  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8216  002A9A  0100               	movlb	0	; () banked
  8217  002A9C  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  8221  002A9E  C07F  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8222  002AA2  0012               	return	
  8223  002AA4                     __end_of_CANSetMask:
  8224                           	opt stack 0
  8225                           tblptru	equ	0xFF8
  8226                           tblptrh	equ	0xFF7
  8227                           tblptrl	equ	0xFF6
  8228                           tablat	equ	0xFF5
  8229                           prodh	equ	0xFF4
  8230                           prodl	equ	0xFF3
  8231                           intcon	equ	0xFF2
  8232                           intcon2	equ	0xFF1
  8233                           postinc0	equ	0xFEE
  8234                           wreg	equ	0xFE8
  8235                           indf2	equ	0xFDF
  8236                           postinc2	equ	0xFDE
  8237                           postdec2	equ	0xFDD
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function _CANSetFilter *****************
  8243 ;; Defined at:
  8244 ;;		line 748 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  numBuffer       1    wreg     enum E16391
  8247 ;;  filter          4   21[BANK0 ] unsigned long 
  8248 ;;  type            1   25[BANK0 ] enum E16354
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  numBuffer       1   30[BANK0 ] enum E16391
  8251 ;;  tamp            4   31[BANK0 ] unsigned long 
  8252 ;; Return value:  Size  Location     Type
  8253 ;;		None               void
  8254 ;; Registers used:
  8255 ;;		wreg, status,2, status,0
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8261 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;Total ram usage:       14 bytes
  8266 ;; Hardware stack levels used:    1
  8267 ;; Hardware stack levels required when called:    4
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_CANInitialize
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text26
  8276  000D2E                     __ptext26:
  8277                           	opt stack 0
  8278  000D2E                     _CANSetFilter:
  8279                           	opt stack 24
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;incstack = 0
  8283                           ;CANSetFilter@numBuffer stored from wreg
  8284  000D2E  0100               	movlb	0	; () banked
  8285  000D30  6F7E               	movwf	CANSetFilter@numBuffer& (0+255),b
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;inc\CANlib.h: 750: unsigned long tamp;
  8289                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  8290  000D32  0100               	movlb	0	; () banked
  8291  000D34  677E               	tstfsz	CANSetFilter@numBuffer& (0+255),b
  8292  000D36  D063               	goto	l3350
  8293                           
  8294                           ; BSR set to: 0
  8295  000D38  0100               	movlb	0	; () banked
  8296  000D3A  2979               	incf	CANSetFilter@type& (0+255),w,b
  8297  000D3C  A4D8               	btfss	status,2,c
  8298  000D3E  D05F               	goto	l3350
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;inc\CANlib.h: 753: {
  8302                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  8303  000D40  010F               	movlb	15	; () banked
  8304  000D42  9701               	bcf	1,3,b	;volatile
  8305                           
  8306                           ; BSR set to: 15
  8307                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  8308  000D44  0100               	movlb	0	; () banked
  8309  000D46  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  8310  000D4A  0100               	movlb	0	; () banked
  8311  000D4C  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8312  000D50  0100               	movlb	0	; () banked
  8313  000D52  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8314  000D56  0100               	movlb	0	; () banked
  8315  000D58  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8316  000D5C  0E04               	movlw	4
  8317  000D5E  D006               	goto	u3460
  8318  000D60                     u3465:
  8319  000D60  0100               	movlb	0	; () banked
  8320  000D62  90D8               	bcf	status,0,c
  8321  000D64  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8322  000D66  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8323  000D68  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8324  000D6A  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  8325  000D6C                     u3460:
  8326  000D6C  2EE8               	decfsz	wreg,f,c
  8327  000D6E  D7F8               	goto	u3465
  8328  000D70  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8329  000D74  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8330  000D78  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8331  000D7C  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  8335  000D80  0100               	movlb	0	; () banked
  8336  000D82  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  8337  000D84  0100               	movlb	0	; () banked
  8338  000D86  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8339  000D88  0100               	movlb	0	; () banked
  8340  000D8A  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8341  000D8C  0100               	movlb	0	; () banked
  8342  000D8E  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8343  000D90  0100               	movlb	0	; () banked
  8344  000D92  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  8348  000D94  C07F  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  8352  000D98  0E07               	movlw	7
  8353  000D9A  0100               	movlb	0	; () banked
  8354  000D9C  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  8355  000D9E  0100               	movlb	0	; () banked
  8356  000DA0  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8357  000DA2  0E00               	movlw	0
  8358  000DA4  0100               	movlb	0	; () banked
  8359  000DA6  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8360  000DA8  0100               	movlb	0	; () banked
  8361  000DAA  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8362  000DAC  0E00               	movlw	0
  8363  000DAE  0100               	movlb	0	; () banked
  8364  000DB0  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8365  000DB2  0100               	movlb	0	; () banked
  8366  000DB4  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8367  000DB6  0E00               	movlw	0
  8368  000DB8  0100               	movlb	0	; () banked
  8369  000DBA  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8370  000DBC  0100               	movlb	0	; () banked
  8371  000DBE  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  8375  000DC0  0100               	movlb	0	; () banked
  8376  000DC2  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  8377  000DC6  0100               	movlb	0	; () banked
  8378  000DC8  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8379  000DCC  0100               	movlb	0	; () banked
  8380  000DCE  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8381  000DD2  0100               	movlb	0	; () banked
  8382  000DD4  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8383  000DD8  0E05               	movlw	5
  8384  000DDA                     u3475:
  8385  000DDA  90D8               	bcf	status,0,c
  8386  000DDC  0100               	movlb	0	; () banked
  8387  000DDE  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  8388  000DE0  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8389  000DE2  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8390  000DE4  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8391  000DE6  2EE8               	decfsz	wreg,f,c
  8392  000DE8  D7F8               	goto	u3475
  8393  000DEA  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8394  000DEE  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8395  000DF2  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8396  000DF6  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  8400  000DFA  C07F  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  8401  000DFE                     l3350:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;inc\CANlib.h: 763: }
  8405                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  8406  000DFE  0100               	movlb	0	; () banked
  8407  000E00  057E               	decf	CANSetFilter@numBuffer& (0+255),w,b
  8408  000E02  A4D8               	btfss	status,2,c
  8409  000E04  D063               	goto	l3368
  8410                           
  8411                           ; BSR set to: 0
  8412  000E06  0100               	movlb	0	; () banked
  8413  000E08  2979               	incf	CANSetFilter@type& (0+255),w,b
  8414  000E0A  A4D8               	btfss	status,2,c
  8415  000E0C  D05F               	goto	l3368
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;inc\CANlib.h: 766: {
  8419                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  8420  000E0E  010F               	movlb	15	; () banked
  8421  000E10  9705               	bcf	5,3,b	;volatile
  8422                           
  8423                           ; BSR set to: 15
  8424                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  8425  000E12  0100               	movlb	0	; () banked
  8426  000E14  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  8427  000E18  0100               	movlb	0	; () banked
  8428  000E1A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8429  000E1E  0100               	movlb	0	; () banked
  8430  000E20  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8431  000E24  0100               	movlb	0	; () banked
  8432  000E26  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8433  000E2A  0E04               	movlw	4
  8434  000E2C  D006               	goto	u3500
  8435  000E2E                     u3505:
  8436  000E2E  0100               	movlb	0	; () banked
  8437  000E30  90D8               	bcf	status,0,c
  8438  000E32  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8439  000E34  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8440  000E36  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8441  000E38  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  8442  000E3A                     u3500:
  8443  000E3A  2EE8               	decfsz	wreg,f,c
  8444  000E3C  D7F8               	goto	u3505
  8445  000E3E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8446  000E42  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8447  000E46  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8448  000E4A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  8452  000E4E  0100               	movlb	0	; () banked
  8453  000E50  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  8454  000E52  0100               	movlb	0	; () banked
  8455  000E54  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8456  000E56  0100               	movlb	0	; () banked
  8457  000E58  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8458  000E5A  0100               	movlb	0	; () banked
  8459  000E5C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8460  000E5E  0100               	movlb	0	; () banked
  8461  000E60  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  8465  000E62  C07F  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  8469  000E66  0E07               	movlw	7
  8470  000E68  0100               	movlb	0	; () banked
  8471  000E6A  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  8472  000E6C  0100               	movlb	0	; () banked
  8473  000E6E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8474  000E70  0E00               	movlw	0
  8475  000E72  0100               	movlb	0	; () banked
  8476  000E74  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8477  000E76  0100               	movlb	0	; () banked
  8478  000E78  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8479  000E7A  0E00               	movlw	0
  8480  000E7C  0100               	movlb	0	; () banked
  8481  000E7E  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8482  000E80  0100               	movlb	0	; () banked
  8483  000E82  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8484  000E84  0E00               	movlw	0
  8485  000E86  0100               	movlb	0	; () banked
  8486  000E88  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8487  000E8A  0100               	movlb	0	; () banked
  8488  000E8C  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  8492  000E8E  0100               	movlb	0	; () banked
  8493  000E90  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  8494  000E94  0100               	movlb	0	; () banked
  8495  000E96  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8496  000E9A  0100               	movlb	0	; () banked
  8497  000E9C  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8498  000EA0  0100               	movlb	0	; () banked
  8499  000EA2  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8500  000EA6  0E05               	movlw	5
  8501  000EA8                     u3515:
  8502  000EA8  90D8               	bcf	status,0,c
  8503  000EAA  0100               	movlb	0	; () banked
  8504  000EAC  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  8505  000EAE  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8506  000EB0  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8507  000EB2  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8508  000EB4  2EE8               	decfsz	wreg,f,c
  8509  000EB6  D7F8               	goto	u3515
  8510  000EB8  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8511  000EBC  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8512  000EC0  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8513  000EC4  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  8517  000EC8  C07F  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  8518  000ECC                     l3368:
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;inc\CANlib.h: 776: }
  8522                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  8523  000ECC  0100               	movlb	0	; () banked
  8524  000ECE  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8525  000ED0  0A02               	xorlw	2
  8526  000ED2  A4D8               	btfss	status,2,c
  8527  000ED4  D063               	goto	l3386
  8528                           
  8529                           ; BSR set to: 0
  8530  000ED6  0100               	movlb	0	; () banked
  8531  000ED8  2979               	incf	CANSetFilter@type& (0+255),w,b
  8532  000EDA  A4D8               	btfss	status,2,c
  8533  000EDC  D05F               	goto	l3386
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;inc\CANlib.h: 779: {
  8537                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  8538  000EDE  010F               	movlb	15	; () banked
  8539  000EE0  9709               	bcf	9,3,b	;volatile
  8540                           
  8541                           ; BSR set to: 15
  8542                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  8543  000EE2  0100               	movlb	0	; () banked
  8544  000EE4  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  8545  000EE8  0100               	movlb	0	; () banked
  8546  000EEA  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8547  000EEE  0100               	movlb	0	; () banked
  8548  000EF0  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8549  000EF4  0100               	movlb	0	; () banked
  8550  000EF6  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8551  000EFA  0E04               	movlw	4
  8552  000EFC  D006               	goto	u3540
  8553  000EFE                     u3545:
  8554  000EFE  0100               	movlb	0	; () banked
  8555  000F00  90D8               	bcf	status,0,c
  8556  000F02  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8557  000F04  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8558  000F06  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8559  000F08  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  8560  000F0A                     u3540:
  8561  000F0A  2EE8               	decfsz	wreg,f,c
  8562  000F0C  D7F8               	goto	u3545
  8563  000F0E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8564  000F12  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8565  000F16  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8566  000F1A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  8570  000F1E  0100               	movlb	0	; () banked
  8571  000F20  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  8572  000F22  0100               	movlb	0	; () banked
  8573  000F24  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8574  000F26  0100               	movlb	0	; () banked
  8575  000F28  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8576  000F2A  0100               	movlb	0	; () banked
  8577  000F2C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8578  000F2E  0100               	movlb	0	; () banked
  8579  000F30  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  8583  000F32  C07F  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  8587  000F36  0E07               	movlw	7
  8588  000F38  0100               	movlb	0	; () banked
  8589  000F3A  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  8590  000F3C  0100               	movlb	0	; () banked
  8591  000F3E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8592  000F40  0E00               	movlw	0
  8593  000F42  0100               	movlb	0	; () banked
  8594  000F44  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8595  000F46  0100               	movlb	0	; () banked
  8596  000F48  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8597  000F4A  0E00               	movlw	0
  8598  000F4C  0100               	movlb	0	; () banked
  8599  000F4E  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8600  000F50  0100               	movlb	0	; () banked
  8601  000F52  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8602  000F54  0E00               	movlw	0
  8603  000F56  0100               	movlb	0	; () banked
  8604  000F58  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8605  000F5A  0100               	movlb	0	; () banked
  8606  000F5C  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  8610  000F5E  0100               	movlb	0	; () banked
  8611  000F60  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  8612  000F64  0100               	movlb	0	; () banked
  8613  000F66  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8614  000F6A  0100               	movlb	0	; () banked
  8615  000F6C  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8616  000F70  0100               	movlb	0	; () banked
  8617  000F72  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8618  000F76  0E05               	movlw	5
  8619  000F78                     u3555:
  8620  000F78  90D8               	bcf	status,0,c
  8621  000F7A  0100               	movlb	0	; () banked
  8622  000F7C  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  8623  000F7E  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8624  000F80  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8625  000F82  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8626  000F84  2EE8               	decfsz	wreg,f,c
  8627  000F86  D7F8               	goto	u3555
  8628  000F88  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8629  000F8C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8630  000F90  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8631  000F94  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  8635  000F98  C07F  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  8636  000F9C                     l3386:
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;inc\CANlib.h: 789: }
  8640                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  8641  000F9C  0100               	movlb	0	; () banked
  8642  000F9E  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8643  000FA0  0A03               	xorlw	3
  8644  000FA2  A4D8               	btfss	status,2,c
  8645  000FA4  D063               	goto	l3404
  8646                           
  8647                           ; BSR set to: 0
  8648  000FA6  0100               	movlb	0	; () banked
  8649  000FA8  2979               	incf	CANSetFilter@type& (0+255),w,b
  8650  000FAA  A4D8               	btfss	status,2,c
  8651  000FAC  D05F               	goto	l3404
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;inc\CANlib.h: 792: {
  8655                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  8656  000FAE  010F               	movlb	15	; () banked
  8657  000FB0  970D               	bcf	13,3,b	;volatile
  8658                           
  8659                           ; BSR set to: 15
  8660                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  8661  000FB2  0100               	movlb	0	; () banked
  8662  000FB4  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  8663  000FB8  0100               	movlb	0	; () banked
  8664  000FBA  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8665  000FBE  0100               	movlb	0	; () banked
  8666  000FC0  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8667  000FC4  0100               	movlb	0	; () banked
  8668  000FC6  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8669  000FCA  0E04               	movlw	4
  8670  000FCC  D006               	goto	u3580
  8671  000FCE                     u3585:
  8672  000FCE  0100               	movlb	0	; () banked
  8673  000FD0  90D8               	bcf	status,0,c
  8674  000FD2  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8675  000FD4  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8676  000FD6  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8677  000FD8  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  8678  000FDA                     u3580:
  8679  000FDA  2EE8               	decfsz	wreg,f,c
  8680  000FDC  D7F8               	goto	u3585
  8681  000FDE  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8682  000FE2  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8683  000FE6  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8684  000FEA  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  8688  000FEE  0100               	movlb	0	; () banked
  8689  000FF0  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  8690  000FF2  0100               	movlb	0	; () banked
  8691  000FF4  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8692  000FF6  0100               	movlb	0	; () banked
  8693  000FF8  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8694  000FFA  0100               	movlb	0	; () banked
  8695  000FFC  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8696  000FFE  0100               	movlb	0	; () banked
  8697  001000  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  8701  001002  C07F  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  8705  001006  0E07               	movlw	7
  8706  001008  0100               	movlb	0	; () banked
  8707  00100A  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  8708  00100C  0100               	movlb	0	; () banked
  8709  00100E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8710  001010  0E00               	movlw	0
  8711  001012  0100               	movlb	0	; () banked
  8712  001014  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8713  001016  0100               	movlb	0	; () banked
  8714  001018  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8715  00101A  0E00               	movlw	0
  8716  00101C  0100               	movlb	0	; () banked
  8717  00101E  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8718  001020  0100               	movlb	0	; () banked
  8719  001022  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8720  001024  0E00               	movlw	0
  8721  001026  0100               	movlb	0	; () banked
  8722  001028  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8723  00102A  0100               	movlb	0	; () banked
  8724  00102C  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  8728  00102E  0100               	movlb	0	; () banked
  8729  001030  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  8730  001034  0100               	movlb	0	; () banked
  8731  001036  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8732  00103A  0100               	movlb	0	; () banked
  8733  00103C  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8734  001040  0100               	movlb	0	; () banked
  8735  001042  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8736  001046  0E05               	movlw	5
  8737  001048                     u3595:
  8738  001048  90D8               	bcf	status,0,c
  8739  00104A  0100               	movlb	0	; () banked
  8740  00104C  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  8741  00104E  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8742  001050  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8743  001052  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8744  001054  2EE8               	decfsz	wreg,f,c
  8745  001056  D7F8               	goto	u3595
  8746  001058  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8747  00105C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8748  001060  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8749  001064  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  8753  001068  C07F  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  8754  00106C                     l3404:
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;inc\CANlib.h: 802: }
  8758                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  8759  00106C  0100               	movlb	0	; () banked
  8760  00106E  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8761  001070  0A04               	xorlw	4
  8762  001072  A4D8               	btfss	status,2,c
  8763  001074  D063               	goto	l3422
  8764                           
  8765                           ; BSR set to: 0
  8766  001076  0100               	movlb	0	; () banked
  8767  001078  2979               	incf	CANSetFilter@type& (0+255),w,b
  8768  00107A  A4D8               	btfss	status,2,c
  8769  00107C  D05F               	goto	l3422
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;inc\CANlib.h: 805: {
  8773                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  8774  00107E  010F               	movlb	15	; () banked
  8775  001080  9711               	bcf	17,3,b	;volatile
  8776                           
  8777                           ; BSR set to: 15
  8778                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  8779  001082  0100               	movlb	0	; () banked
  8780  001084  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  8781  001088  0100               	movlb	0	; () banked
  8782  00108A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8783  00108E  0100               	movlb	0	; () banked
  8784  001090  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8785  001094  0100               	movlb	0	; () banked
  8786  001096  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8787  00109A  0E04               	movlw	4
  8788  00109C  D006               	goto	u3620
  8789  00109E                     u3625:
  8790  00109E  0100               	movlb	0	; () banked
  8791  0010A0  90D8               	bcf	status,0,c
  8792  0010A2  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8793  0010A4  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8794  0010A6  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8795  0010A8  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  8796  0010AA                     u3620:
  8797  0010AA  2EE8               	decfsz	wreg,f,c
  8798  0010AC  D7F8               	goto	u3625
  8799  0010AE  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8800  0010B2  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8801  0010B6  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8802  0010BA  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  8806  0010BE  0100               	movlb	0	; () banked
  8807  0010C0  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  8808  0010C2  0100               	movlb	0	; () banked
  8809  0010C4  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8810  0010C6  0100               	movlb	0	; () banked
  8811  0010C8  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8812  0010CA  0100               	movlb	0	; () banked
  8813  0010CC  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8814  0010CE  0100               	movlb	0	; () banked
  8815  0010D0  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  8819  0010D2  C07F  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  8823  0010D6  0E07               	movlw	7
  8824  0010D8  0100               	movlb	0	; () banked
  8825  0010DA  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  8826  0010DC  0100               	movlb	0	; () banked
  8827  0010DE  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8828  0010E0  0E00               	movlw	0
  8829  0010E2  0100               	movlb	0	; () banked
  8830  0010E4  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8831  0010E6  0100               	movlb	0	; () banked
  8832  0010E8  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8833  0010EA  0E00               	movlw	0
  8834  0010EC  0100               	movlb	0	; () banked
  8835  0010EE  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8836  0010F0  0100               	movlb	0	; () banked
  8837  0010F2  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8838  0010F4  0E00               	movlw	0
  8839  0010F6  0100               	movlb	0	; () banked
  8840  0010F8  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8841  0010FA  0100               	movlb	0	; () banked
  8842  0010FC  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  8846  0010FE  0100               	movlb	0	; () banked
  8847  001100  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  8848  001104  0100               	movlb	0	; () banked
  8849  001106  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8850  00110A  0100               	movlb	0	; () banked
  8851  00110C  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8852  001110  0100               	movlb	0	; () banked
  8853  001112  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8854  001116  0E05               	movlw	5
  8855  001118                     u3635:
  8856  001118  90D8               	bcf	status,0,c
  8857  00111A  0100               	movlb	0	; () banked
  8858  00111C  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  8859  00111E  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8860  001120  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8861  001122  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8862  001124  2EE8               	decfsz	wreg,f,c
  8863  001126  D7F8               	goto	u3635
  8864  001128  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8865  00112C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8866  001130  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8867  001134  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  8871  001138  C07F  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  8872  00113C                     l3422:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;inc\CANlib.h: 815: }
  8876                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  8877  00113C  0100               	movlb	0	; () banked
  8878  00113E  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8879  001140  0A05               	xorlw	5
  8880  001142  A4D8               	btfss	status,2,c
  8881  001144  D063               	goto	l3440
  8882                           
  8883                           ; BSR set to: 0
  8884  001146  0100               	movlb	0	; () banked
  8885  001148  2979               	incf	CANSetFilter@type& (0+255),w,b
  8886  00114A  A4D8               	btfss	status,2,c
  8887  00114C  D05F               	goto	l3440
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;inc\CANlib.h: 818: {
  8891                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  8892  00114E  010F               	movlb	15	; () banked
  8893  001150  9715               	bcf	21,3,b	;volatile
  8894                           
  8895                           ; BSR set to: 15
  8896                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  8897  001152  0100               	movlb	0	; () banked
  8898  001154  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  8899  001158  0100               	movlb	0	; () banked
  8900  00115A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8901  00115E  0100               	movlb	0	; () banked
  8902  001160  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8903  001164  0100               	movlb	0	; () banked
  8904  001166  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8905  00116A  0E04               	movlw	4
  8906  00116C  D006               	goto	u3660
  8907  00116E                     u3665:
  8908  00116E  0100               	movlb	0	; () banked
  8909  001170  90D8               	bcf	status,0,c
  8910  001172  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8911  001174  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8912  001176  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8913  001178  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  8914  00117A                     u3660:
  8915  00117A  2EE8               	decfsz	wreg,f,c
  8916  00117C  D7F8               	goto	u3665
  8917  00117E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8918  001182  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8919  001186  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8920  00118A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  8924  00118E  0100               	movlb	0	; () banked
  8925  001190  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  8926  001192  0100               	movlb	0	; () banked
  8927  001194  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8928  001196  0100               	movlb	0	; () banked
  8929  001198  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8930  00119A  0100               	movlb	0	; () banked
  8931  00119C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8932  00119E  0100               	movlb	0	; () banked
  8933  0011A0  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  8937  0011A2  C07F  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  8941  0011A6  0E07               	movlw	7
  8942  0011A8  0100               	movlb	0	; () banked
  8943  0011AA  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  8944  0011AC  0100               	movlb	0	; () banked
  8945  0011AE  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  8946  0011B0  0E00               	movlw	0
  8947  0011B2  0100               	movlb	0	; () banked
  8948  0011B4  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8949  0011B6  0100               	movlb	0	; () banked
  8950  0011B8  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8951  0011BA  0E00               	movlw	0
  8952  0011BC  0100               	movlb	0	; () banked
  8953  0011BE  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8954  0011C0  0100               	movlb	0	; () banked
  8955  0011C2  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8956  0011C4  0E00               	movlw	0
  8957  0011C6  0100               	movlb	0	; () banked
  8958  0011C8  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8959  0011CA  0100               	movlb	0	; () banked
  8960  0011CC  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  8964  0011CE  0100               	movlb	0	; () banked
  8965  0011D0  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  8966  0011D4  0100               	movlb	0	; () banked
  8967  0011D6  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8968  0011DA  0100               	movlb	0	; () banked
  8969  0011DC  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8970  0011E0  0100               	movlb	0	; () banked
  8971  0011E2  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8972  0011E6  0E05               	movlw	5
  8973  0011E8                     u3675:
  8974  0011E8  90D8               	bcf	status,0,c
  8975  0011EA  0100               	movlb	0	; () banked
  8976  0011EC  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  8977  0011EE  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8978  0011F0  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8979  0011F2  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8980  0011F4  2EE8               	decfsz	wreg,f,c
  8981  0011F6  D7F8               	goto	u3675
  8982  0011F8  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  8983  0011FC  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8984  001200  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8985  001204  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  8989  001208  C07F  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  8990  00120C                     l3440:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;inc\CANlib.h: 828: }
  8994                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  8995  00120C  0100               	movlb	0	; () banked
  8996  00120E  677E               	tstfsz	CANSetFilter@numBuffer& (0+255),b
  8997  001210  D097               	goto	l3474
  8998                           
  8999                           ; BSR set to: 0
  9000  001212  0100               	movlb	0	; () banked
  9001  001214  5179               	movf	CANSetFilter@type& (0+255),w,b
  9002  001216  0AF7               	xorlw	247
  9003  001218  A4D8               	btfss	status,2,c
  9004  00121A  D092               	goto	l3474
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;inc\CANlib.h: 832: {
  9008                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  9009  00121C  010F               	movlb	15	; () banked
  9010  00121E  8701               	bsf	1,3,b	;volatile
  9011                           
  9012                           ; BSR set to: 15
  9013                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  9014  001220  0100               	movlb	0	; () banked
  9015  001222  5175               	movf	CANSetFilter@filter& (0+255),w,b
  9016  001224  0100               	movlb	0	; () banked
  9017  001226  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9018  001228  0100               	movlb	0	; () banked
  9019  00122A  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9020  00122C  0100               	movlb	0	; () banked
  9021  00122E  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9022  001230  0100               	movlb	0	; () banked
  9023  001232  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  9027  001234  C07F  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  9031  001238  0E00               	movlw	0
  9032  00123A  0100               	movlb	0	; () banked
  9033  00123C  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  9034  00123E  0100               	movlb	0	; () banked
  9035  001240  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9036  001242  0EFF               	movlw	255
  9037  001244  0100               	movlb	0	; () banked
  9038  001246  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9039  001248  0100               	movlb	0	; () banked
  9040  00124A  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9041  00124C  0E00               	movlw	0
  9042  00124E  0100               	movlb	0	; () banked
  9043  001250  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9044  001252  0100               	movlb	0	; () banked
  9045  001254  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9046  001256  0E00               	movlw	0
  9047  001258  0100               	movlb	0	; () banked
  9048  00125A  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9049  00125C  0100               	movlb	0	; () banked
  9050  00125E  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  9054  001260  0100               	movlb	0	; () banked
  9055  001262  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  9056  001266  0100               	movlb	0	; () banked
  9057  001268  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9058  00126C  0100               	movlb	0	; () banked
  9059  00126E  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9060  001272  0100               	movlb	0	; () banked
  9061  001274  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9062  001278  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  9063  00127C  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9064  001280  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9065  001284  0100               	movlb	0	; () banked
  9066  001286  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  9067  001288  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9068  00128C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9069  001290  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9070  001294  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  9074  001298  C07F  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  9078  00129C  0100               	movlb	0	; () banked
  9079  00129E  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9080  0012A0  D003               	goto	l457
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  9084  0012A2  010F               	movlb	15	; () banked
  9085  0012A4  8101               	bsf	1,0,b	;volatile
  9086  0012A6  D002               	goto	l458
  9087  0012A8                     l457:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;inc\CANlib.h: 844: else
  9091                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  9092  0012A8  010F               	movlb	15	; () banked
  9093  0012AA  9101               	bcf	1,0,b	;volatile
  9094  0012AC                     l458:
  9095                           
  9096                           ; BSR set to: 15
  9097                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  9098  0012AC  0100               	movlb	0	; () banked
  9099  0012AE  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9100  0012B0  D003               	goto	l459
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  9104  0012B2  010F               	movlb	15	; () banked
  9105  0012B4  8301               	bsf	1,1,b	;volatile
  9106  0012B6  D002               	goto	l460
  9107  0012B8                     l459:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;inc\CANlib.h: 849: else
  9111                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  9112  0012B8  010F               	movlb	15	; () banked
  9113  0012BA  9301               	bcf	1,1,b	;volatile
  9114  0012BC                     l460:
  9115                           
  9116                           ; BSR set to: 15
  9117                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  9118  0012BC  0100               	movlb	0	; () banked
  9119  0012BE  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9120  0012C0  D003               	goto	l461
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  9124  0012C2  010F               	movlb	15	; () banked
  9125  0012C4  8B01               	bsf	1,5,b	;volatile
  9126  0012C6  D002               	goto	l462
  9127  0012C8                     l461:
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;inc\CANlib.h: 854: else
  9131                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  9132  0012C8  010F               	movlb	15	; () banked
  9133  0012CA  9B01               	bcf	1,5,b	;volatile
  9134  0012CC                     l462:
  9135                           
  9136                           ; BSR set to: 15
  9137                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  9138  0012CC  0100               	movlb	0	; () banked
  9139  0012CE  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9140  0012D0  D003               	goto	l463
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  9144  0012D2  010F               	movlb	15	; () banked
  9145  0012D4  8D01               	bsf	1,6,b	;volatile
  9146  0012D6  D002               	goto	l464
  9147  0012D8                     l463:
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;inc\CANlib.h: 859: else
  9151                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  9152  0012D8  010F               	movlb	15	; () banked
  9153  0012DA  9D01               	bcf	1,6,b	;volatile
  9154  0012DC                     l464:
  9155                           
  9156                           ; BSR set to: 15
  9157                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  9158  0012DC  0100               	movlb	0	; () banked
  9159  0012DE  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9160  0012E0  D003               	goto	l465
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  9164  0012E2  010F               	movlb	15	; () banked
  9165  0012E4  8F01               	bsf	1,7,b	;volatile
  9166  0012E6  D002               	goto	l3468
  9167  0012E8                     l465:
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;inc\CANlib.h: 864: else
  9171                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  9172  0012E8  010F               	movlb	15	; () banked
  9173  0012EA  9F01               	bcf	1,7,b	;volatile
  9174  0012EC                     l3468:
  9175                           
  9176                           ; BSR set to: 15
  9177                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  9178  0012EC  0100               	movlb	0	; () banked
  9179  0012EE  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  9180  0012F2  0100               	movlb	0	; () banked
  9181  0012F4  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9182  0012F8  0100               	movlb	0	; () banked
  9183  0012FA  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9184  0012FE  0100               	movlb	0	; () banked
  9185  001300  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9186  001304  0E16               	movlw	22
  9187  001306  D006               	goto	u3750
  9188  001308                     u3755:
  9189  001308  0100               	movlb	0	; () banked
  9190  00130A  90D8               	bcf	status,0,c
  9191  00130C  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9192  00130E  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9193  001310  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9194  001312  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  9195  001314                     u3750:
  9196  001314  2EE8               	decfsz	wreg,f,c
  9197  001316  D7F8               	goto	u3755
  9198  001318  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9199  00131C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9200  001320  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9201  001324  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  9205  001328  0100               	movlb	0	; () banked
  9206  00132A  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  9207  00132C  0100               	movlb	0	; () banked
  9208  00132E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9209  001330  0100               	movlb	0	; () banked
  9210  001332  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9211  001334  0100               	movlb	0	; () banked
  9212  001336  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9213  001338  0100               	movlb	0	; () banked
  9214  00133A  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  9218  00133C  C07F  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9219  001340                     l3474:
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;inc\CANlib.h: 870: }
  9223                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  9224  001340  0100               	movlb	0	; () banked
  9225  001342  057E               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9226  001344  A4D8               	btfss	status,2,c
  9227  001346  D097               	goto	l3508
  9228                           
  9229                           ; BSR set to: 0
  9230  001348  0100               	movlb	0	; () banked
  9231  00134A  5179               	movf	CANSetFilter@type& (0+255),w,b
  9232  00134C  0AF7               	xorlw	247
  9233  00134E  A4D8               	btfss	status,2,c
  9234  001350  D092               	goto	l3508
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;inc\CANlib.h: 873: {
  9238                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  9239  001352  010F               	movlb	15	; () banked
  9240  001354  8705               	bsf	5,3,b	;volatile
  9241                           
  9242                           ; BSR set to: 15
  9243                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  9244  001356  0100               	movlb	0	; () banked
  9245  001358  5175               	movf	CANSetFilter@filter& (0+255),w,b
  9246  00135A  0100               	movlb	0	; () banked
  9247  00135C  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9248  00135E  0100               	movlb	0	; () banked
  9249  001360  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9250  001362  0100               	movlb	0	; () banked
  9251  001364  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9252  001366  0100               	movlb	0	; () banked
  9253  001368  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  9257  00136A  C07F  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  9261  00136E  0E00               	movlw	0
  9262  001370  0100               	movlb	0	; () banked
  9263  001372  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  9264  001374  0100               	movlb	0	; () banked
  9265  001376  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9266  001378  0EFF               	movlw	255
  9267  00137A  0100               	movlb	0	; () banked
  9268  00137C  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9269  00137E  0100               	movlb	0	; () banked
  9270  001380  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9271  001382  0E00               	movlw	0
  9272  001384  0100               	movlb	0	; () banked
  9273  001386  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9274  001388  0100               	movlb	0	; () banked
  9275  00138A  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9276  00138C  0E00               	movlw	0
  9277  00138E  0100               	movlb	0	; () banked
  9278  001390  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9279  001392  0100               	movlb	0	; () banked
  9280  001394  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  9284  001396  0100               	movlb	0	; () banked
  9285  001398  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  9286  00139C  0100               	movlb	0	; () banked
  9287  00139E  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9288  0013A2  0100               	movlb	0	; () banked
  9289  0013A4  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9290  0013A8  0100               	movlb	0	; () banked
  9291  0013AA  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9292  0013AE  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  9293  0013B2  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9294  0013B6  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9295  0013BA  0100               	movlb	0	; () banked
  9296  0013BC  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  9297  0013BE  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9298  0013C2  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9299  0013C6  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9300  0013CA  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  9304  0013CE  C07F  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  9308  0013D2  0100               	movlb	0	; () banked
  9309  0013D4  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9310  0013D6  D003               	goto	l468
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  9314  0013D8  010F               	movlb	15	; () banked
  9315  0013DA  8105               	bsf	5,0,b	;volatile
  9316  0013DC  D002               	goto	l469
  9317  0013DE                     l468:
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;inc\CANlib.h: 885: else
  9321                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  9322  0013DE  010F               	movlb	15	; () banked
  9323  0013E0  9105               	bcf	5,0,b	;volatile
  9324  0013E2                     l469:
  9325                           
  9326                           ; BSR set to: 15
  9327                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  9328  0013E2  0100               	movlb	0	; () banked
  9329  0013E4  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9330  0013E6  D003               	goto	l470
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  9334  0013E8  010F               	movlb	15	; () banked
  9335  0013EA  8305               	bsf	5,1,b	;volatile
  9336  0013EC  D002               	goto	l471
  9337  0013EE                     l470:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;inc\CANlib.h: 890: else
  9341                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  9342  0013EE  010F               	movlb	15	; () banked
  9343  0013F0  9305               	bcf	5,1,b	;volatile
  9344  0013F2                     l471:
  9345                           
  9346                           ; BSR set to: 15
  9347                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  9348  0013F2  0100               	movlb	0	; () banked
  9349  0013F4  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9350  0013F6  D003               	goto	l472
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  9354  0013F8  010F               	movlb	15	; () banked
  9355  0013FA  8B05               	bsf	5,5,b	;volatile
  9356  0013FC  D002               	goto	l473
  9357  0013FE                     l472:
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;inc\CANlib.h: 895: else
  9361                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  9362  0013FE  010F               	movlb	15	; () banked
  9363  001400  9B05               	bcf	5,5,b	;volatile
  9364  001402                     l473:
  9365                           
  9366                           ; BSR set to: 15
  9367                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  9368  001402  0100               	movlb	0	; () banked
  9369  001404  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9370  001406  D003               	goto	l474
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  9374  001408  010F               	movlb	15	; () banked
  9375  00140A  8D05               	bsf	5,6,b	;volatile
  9376  00140C  D002               	goto	l475
  9377  00140E                     l474:
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;inc\CANlib.h: 900: else
  9381                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  9382  00140E  010F               	movlb	15	; () banked
  9383  001410  9D05               	bcf	5,6,b	;volatile
  9384  001412                     l475:
  9385                           
  9386                           ; BSR set to: 15
  9387                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  9388  001412  0100               	movlb	0	; () banked
  9389  001414  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9390  001416  D003               	goto	l476
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  9394  001418  010F               	movlb	15	; () banked
  9395  00141A  8F05               	bsf	5,7,b	;volatile
  9396  00141C  D002               	goto	l3502
  9397  00141E                     l476:
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;inc\CANlib.h: 905: else
  9401                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  9402  00141E  010F               	movlb	15	; () banked
  9403  001420  9F05               	bcf	5,7,b	;volatile
  9404  001422                     l3502:
  9405                           
  9406                           ; BSR set to: 15
  9407                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  9408  001422  0100               	movlb	0	; () banked
  9409  001424  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  9410  001428  0100               	movlb	0	; () banked
  9411  00142A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9412  00142E  0100               	movlb	0	; () banked
  9413  001430  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9414  001434  0100               	movlb	0	; () banked
  9415  001436  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9416  00143A  0E16               	movlw	22
  9417  00143C  D006               	goto	u3830
  9418  00143E                     u3835:
  9419  00143E  0100               	movlb	0	; () banked
  9420  001440  90D8               	bcf	status,0,c
  9421  001442  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9422  001444  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9423  001446  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9424  001448  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  9425  00144A                     u3830:
  9426  00144A  2EE8               	decfsz	wreg,f,c
  9427  00144C  D7F8               	goto	u3835
  9428  00144E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9429  001452  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9430  001456  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9431  00145A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  9435  00145E  0100               	movlb	0	; () banked
  9436  001460  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  9437  001462  0100               	movlb	0	; () banked
  9438  001464  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9439  001466  0100               	movlb	0	; () banked
  9440  001468  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9441  00146A  0100               	movlb	0	; () banked
  9442  00146C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9443  00146E  0100               	movlb	0	; () banked
  9444  001470  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  9448  001472  C07F  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9449  001476                     l3508:
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;inc\CANlib.h: 911: }
  9453                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  9454  001476  0100               	movlb	0	; () banked
  9455  001478  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9456  00147A  0A02               	xorlw	2
  9457  00147C  A4D8               	btfss	status,2,c
  9458  00147E  D097               	goto	l3542
  9459                           
  9460                           ; BSR set to: 0
  9461  001480  0100               	movlb	0	; () banked
  9462  001482  5179               	movf	CANSetFilter@type& (0+255),w,b
  9463  001484  0AF7               	xorlw	247
  9464  001486  A4D8               	btfss	status,2,c
  9465  001488  D092               	goto	l3542
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;inc\CANlib.h: 915: {
  9469                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  9470  00148A  010F               	movlb	15	; () banked
  9471  00148C  8709               	bsf	9,3,b	;volatile
  9472                           
  9473                           ; BSR set to: 15
  9474                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  9475  00148E  0100               	movlb	0	; () banked
  9476  001490  5175               	movf	CANSetFilter@filter& (0+255),w,b
  9477  001492  0100               	movlb	0	; () banked
  9478  001494  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9479  001496  0100               	movlb	0	; () banked
  9480  001498  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9481  00149A  0100               	movlb	0	; () banked
  9482  00149C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9483  00149E  0100               	movlb	0	; () banked
  9484  0014A0  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  9488  0014A2  C07F  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  9492  0014A6  0E00               	movlw	0
  9493  0014A8  0100               	movlb	0	; () banked
  9494  0014AA  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  9495  0014AC  0100               	movlb	0	; () banked
  9496  0014AE  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9497  0014B0  0EFF               	movlw	255
  9498  0014B2  0100               	movlb	0	; () banked
  9499  0014B4  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9500  0014B6  0100               	movlb	0	; () banked
  9501  0014B8  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9502  0014BA  0E00               	movlw	0
  9503  0014BC  0100               	movlb	0	; () banked
  9504  0014BE  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9505  0014C0  0100               	movlb	0	; () banked
  9506  0014C2  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9507  0014C4  0E00               	movlw	0
  9508  0014C6  0100               	movlb	0	; () banked
  9509  0014C8  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9510  0014CA  0100               	movlb	0	; () banked
  9511  0014CC  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  9515  0014CE  0100               	movlb	0	; () banked
  9516  0014D0  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  9517  0014D4  0100               	movlb	0	; () banked
  9518  0014D6  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9519  0014DA  0100               	movlb	0	; () banked
  9520  0014DC  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9521  0014E0  0100               	movlb	0	; () banked
  9522  0014E2  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9523  0014E6  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  9524  0014EA  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9525  0014EE  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9526  0014F2  0100               	movlb	0	; () banked
  9527  0014F4  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  9528  0014F6  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9529  0014FA  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9530  0014FE  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9531  001502  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  9535  001506  C07F  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  9539  00150A  0100               	movlb	0	; () banked
  9540  00150C  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9541  00150E  D003               	goto	l479
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  9545  001510  010F               	movlb	15	; () banked
  9546  001512  8109               	bsf	9,0,b	;volatile
  9547  001514  D002               	goto	l480
  9548  001516                     l479:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;inc\CANlib.h: 927: else
  9552                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  9553  001516  010F               	movlb	15	; () banked
  9554  001518  9109               	bcf	9,0,b	;volatile
  9555  00151A                     l480:
  9556                           
  9557                           ; BSR set to: 15
  9558                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  9559  00151A  0100               	movlb	0	; () banked
  9560  00151C  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9561  00151E  D003               	goto	l481
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  9565  001520  010F               	movlb	15	; () banked
  9566  001522  8309               	bsf	9,1,b	;volatile
  9567  001524  D002               	goto	l482
  9568  001526                     l481:
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;inc\CANlib.h: 932: else
  9572                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  9573  001526  010F               	movlb	15	; () banked
  9574  001528  9309               	bcf	9,1,b	;volatile
  9575  00152A                     l482:
  9576                           
  9577                           ; BSR set to: 15
  9578                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  9579  00152A  0100               	movlb	0	; () banked
  9580  00152C  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9581  00152E  D003               	goto	l483
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  9585  001530  010F               	movlb	15	; () banked
  9586  001532  8B09               	bsf	9,5,b	;volatile
  9587  001534  D002               	goto	l484
  9588  001536                     l483:
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;inc\CANlib.h: 937: else
  9592                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  9593  001536  010F               	movlb	15	; () banked
  9594  001538  9B09               	bcf	9,5,b	;volatile
  9595  00153A                     l484:
  9596                           
  9597                           ; BSR set to: 15
  9598                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  9599  00153A  0100               	movlb	0	; () banked
  9600  00153C  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9601  00153E  D003               	goto	l485
  9602                           
  9603                           ; BSR set to: 0
  9604                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  9605  001540  010F               	movlb	15	; () banked
  9606  001542  8D09               	bsf	9,6,b	;volatile
  9607  001544  D002               	goto	l486
  9608  001546                     l485:
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;inc\CANlib.h: 942: else
  9612                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  9613  001546  010F               	movlb	15	; () banked
  9614  001548  9D09               	bcf	9,6,b	;volatile
  9615  00154A                     l486:
  9616                           
  9617                           ; BSR set to: 15
  9618                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  9619  00154A  0100               	movlb	0	; () banked
  9620  00154C  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9621  00154E  D003               	goto	l487
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  9625  001550  010F               	movlb	15	; () banked
  9626  001552  8F09               	bsf	9,7,b	;volatile
  9627  001554  D002               	goto	l3536
  9628  001556                     l487:
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;inc\CANlib.h: 947: else
  9632                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  9633  001556  010F               	movlb	15	; () banked
  9634  001558  9F09               	bcf	9,7,b	;volatile
  9635  00155A                     l3536:
  9636                           
  9637                           ; BSR set to: 15
  9638                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  9639  00155A  0100               	movlb	0	; () banked
  9640  00155C  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  9641  001560  0100               	movlb	0	; () banked
  9642  001562  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9643  001566  0100               	movlb	0	; () banked
  9644  001568  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9645  00156C  0100               	movlb	0	; () banked
  9646  00156E  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9647  001572  0E16               	movlw	22
  9648  001574  D006               	goto	u3910
  9649  001576                     u3915:
  9650  001576  0100               	movlb	0	; () banked
  9651  001578  90D8               	bcf	status,0,c
  9652  00157A  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9653  00157C  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9654  00157E  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9655  001580  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  9656  001582                     u3910:
  9657  001582  2EE8               	decfsz	wreg,f,c
  9658  001584  D7F8               	goto	u3915
  9659  001586  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9660  00158A  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9661  00158E  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9662  001592  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  9666  001596  0100               	movlb	0	; () banked
  9667  001598  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  9668  00159A  0100               	movlb	0	; () banked
  9669  00159C  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9670  00159E  0100               	movlb	0	; () banked
  9671  0015A0  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9672  0015A2  0100               	movlb	0	; () banked
  9673  0015A4  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9674  0015A6  0100               	movlb	0	; () banked
  9675  0015A8  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  9679  0015AA  C07F  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9680  0015AE                     l3542:
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;inc\CANlib.h: 953: }
  9684                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  9685  0015AE  0100               	movlb	0	; () banked
  9686  0015B0  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9687  0015B2  0A03               	xorlw	3
  9688  0015B4  A4D8               	btfss	status,2,c
  9689  0015B6  D097               	goto	l3576
  9690                           
  9691                           ; BSR set to: 0
  9692  0015B8  0100               	movlb	0	; () banked
  9693  0015BA  5179               	movf	CANSetFilter@type& (0+255),w,b
  9694  0015BC  0AF7               	xorlw	247
  9695  0015BE  A4D8               	btfss	status,2,c
  9696  0015C0  D092               	goto	l3576
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;inc\CANlib.h: 956: {
  9700                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  9701  0015C2  010F               	movlb	15	; () banked
  9702  0015C4  870D               	bsf	13,3,b	;volatile
  9703                           
  9704                           ; BSR set to: 15
  9705                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  9706  0015C6  0100               	movlb	0	; () banked
  9707  0015C8  5175               	movf	CANSetFilter@filter& (0+255),w,b
  9708  0015CA  0100               	movlb	0	; () banked
  9709  0015CC  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9710  0015CE  0100               	movlb	0	; () banked
  9711  0015D0  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9712  0015D2  0100               	movlb	0	; () banked
  9713  0015D4  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9714  0015D6  0100               	movlb	0	; () banked
  9715  0015D8  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  9719  0015DA  C07F  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  9723  0015DE  0E00               	movlw	0
  9724  0015E0  0100               	movlb	0	; () banked
  9725  0015E2  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  9726  0015E4  0100               	movlb	0	; () banked
  9727  0015E6  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9728  0015E8  0EFF               	movlw	255
  9729  0015EA  0100               	movlb	0	; () banked
  9730  0015EC  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9731  0015EE  0100               	movlb	0	; () banked
  9732  0015F0  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9733  0015F2  0E00               	movlw	0
  9734  0015F4  0100               	movlb	0	; () banked
  9735  0015F6  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9736  0015F8  0100               	movlb	0	; () banked
  9737  0015FA  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9738  0015FC  0E00               	movlw	0
  9739  0015FE  0100               	movlb	0	; () banked
  9740  001600  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9741  001602  0100               	movlb	0	; () banked
  9742  001604  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  9746  001606  0100               	movlb	0	; () banked
  9747  001608  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  9748  00160C  0100               	movlb	0	; () banked
  9749  00160E  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9750  001612  0100               	movlb	0	; () banked
  9751  001614  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9752  001618  0100               	movlb	0	; () banked
  9753  00161A  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9754  00161E  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  9755  001622  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9756  001626  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9757  00162A  0100               	movlb	0	; () banked
  9758  00162C  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  9759  00162E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9760  001632  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9761  001636  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9762  00163A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  9766  00163E  C07F  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  9770  001642  0100               	movlb	0	; () banked
  9771  001644  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9772  001646  D003               	goto	l490
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  9776  001648  010F               	movlb	15	; () banked
  9777  00164A  810D               	bsf	13,0,b	;volatile
  9778  00164C  D002               	goto	l491
  9779  00164E                     l490:
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;inc\CANlib.h: 968: else
  9783                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  9784  00164E  010F               	movlb	15	; () banked
  9785  001650  910D               	bcf	13,0,b	;volatile
  9786  001652                     l491:
  9787                           
  9788                           ; BSR set to: 15
  9789                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  9790  001652  0100               	movlb	0	; () banked
  9791  001654  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9792  001656  D003               	goto	l492
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  9796  001658  010F               	movlb	15	; () banked
  9797  00165A  830D               	bsf	13,1,b	;volatile
  9798  00165C  D002               	goto	l493
  9799  00165E                     l492:
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;inc\CANlib.h: 973: else
  9803                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  9804  00165E  010F               	movlb	15	; () banked
  9805  001660  930D               	bcf	13,1,b	;volatile
  9806  001662                     l493:
  9807                           
  9808                           ; BSR set to: 15
  9809                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  9810  001662  0100               	movlb	0	; () banked
  9811  001664  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9812  001666  D003               	goto	l494
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  9816  001668  010F               	movlb	15	; () banked
  9817  00166A  8B0D               	bsf	13,5,b	;volatile
  9818  00166C  D002               	goto	l495
  9819  00166E                     l494:
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;inc\CANlib.h: 978: else
  9823                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  9824  00166E  010F               	movlb	15	; () banked
  9825  001670  9B0D               	bcf	13,5,b	;volatile
  9826  001672                     l495:
  9827                           
  9828                           ; BSR set to: 15
  9829                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  9830  001672  0100               	movlb	0	; () banked
  9831  001674  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9832  001676  D003               	goto	l496
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  9836  001678  010F               	movlb	15	; () banked
  9837  00167A  8D0D               	bsf	13,6,b	;volatile
  9838  00167C  D002               	goto	l497
  9839  00167E                     l496:
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;inc\CANlib.h: 983: else
  9843                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  9844  00167E  010F               	movlb	15	; () banked
  9845  001680  9D0D               	bcf	13,6,b	;volatile
  9846  001682                     l497:
  9847                           
  9848                           ; BSR set to: 15
  9849                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  9850  001682  0100               	movlb	0	; () banked
  9851  001684  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9852  001686  D003               	goto	l498
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  9856  001688  010F               	movlb	15	; () banked
  9857  00168A  8F0D               	bsf	13,7,b	;volatile
  9858  00168C  D002               	goto	l3570
  9859  00168E                     l498:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;inc\CANlib.h: 988: else
  9863                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  9864  00168E  010F               	movlb	15	; () banked
  9865  001690  9F0D               	bcf	13,7,b	;volatile
  9866  001692                     l3570:
  9867                           
  9868                           ; BSR set to: 15
  9869                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  9870  001692  0100               	movlb	0	; () banked
  9871  001694  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  9872  001698  0100               	movlb	0	; () banked
  9873  00169A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9874  00169E  0100               	movlb	0	; () banked
  9875  0016A0  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9876  0016A4  0100               	movlb	0	; () banked
  9877  0016A6  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9878  0016AA  0E16               	movlw	22
  9879  0016AC  D006               	goto	u3990
  9880  0016AE                     u3995:
  9881  0016AE  0100               	movlb	0	; () banked
  9882  0016B0  90D8               	bcf	status,0,c
  9883  0016B2  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9884  0016B4  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9885  0016B6  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9886  0016B8  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  9887  0016BA                     u3990:
  9888  0016BA  2EE8               	decfsz	wreg,f,c
  9889  0016BC  D7F8               	goto	u3995
  9890  0016BE  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9891  0016C2  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9892  0016C6  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9893  0016CA  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  9897  0016CE  0100               	movlb	0	; () banked
  9898  0016D0  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  9899  0016D2  0100               	movlb	0	; () banked
  9900  0016D4  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9901  0016D6  0100               	movlb	0	; () banked
  9902  0016D8  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9903  0016DA  0100               	movlb	0	; () banked
  9904  0016DC  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9905  0016DE  0100               	movlb	0	; () banked
  9906  0016E0  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  9910  0016E2  C07F  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9911  0016E6                     l3576:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;inc\CANlib.h: 994: }
  9915                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  9916  0016E6  0100               	movlb	0	; () banked
  9917  0016E8  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9918  0016EA  0A04               	xorlw	4
  9919  0016EC  A4D8               	btfss	status,2,c
  9920  0016EE  D097               	goto	l3610
  9921                           
  9922                           ; BSR set to: 0
  9923  0016F0  0100               	movlb	0	; () banked
  9924  0016F2  5179               	movf	CANSetFilter@type& (0+255),w,b
  9925  0016F4  0AF7               	xorlw	247
  9926  0016F6  A4D8               	btfss	status,2,c
  9927  0016F8  D092               	goto	l3610
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;inc\CANlib.h: 997: {
  9931                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  9932  0016FA  010F               	movlb	15	; () banked
  9933  0016FC  8711               	bsf	17,3,b	;volatile
  9934                           
  9935                           ; BSR set to: 15
  9936                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  9937  0016FE  0100               	movlb	0	; () banked
  9938  001700  5175               	movf	CANSetFilter@filter& (0+255),w,b
  9939  001702  0100               	movlb	0	; () banked
  9940  001704  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9941  001706  0100               	movlb	0	; () banked
  9942  001708  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9943  00170A  0100               	movlb	0	; () banked
  9944  00170C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9945  00170E  0100               	movlb	0	; () banked
  9946  001710  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  9950  001712  C07F  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  9954  001716  0E00               	movlw	0
  9955  001718  0100               	movlb	0	; () banked
  9956  00171A  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  9957  00171C  0100               	movlb	0	; () banked
  9958  00171E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  9959  001720  0EFF               	movlw	255
  9960  001722  0100               	movlb	0	; () banked
  9961  001724  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9962  001726  0100               	movlb	0	; () banked
  9963  001728  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9964  00172A  0E00               	movlw	0
  9965  00172C  0100               	movlb	0	; () banked
  9966  00172E  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9967  001730  0100               	movlb	0	; () banked
  9968  001732  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9969  001734  0E00               	movlw	0
  9970  001736  0100               	movlb	0	; () banked
  9971  001738  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9972  00173A  0100               	movlb	0	; () banked
  9973  00173C  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  9977  00173E  0100               	movlb	0	; () banked
  9978  001740  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  9979  001744  0100               	movlb	0	; () banked
  9980  001746  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9981  00174A  0100               	movlb	0	; () banked
  9982  00174C  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9983  001750  0100               	movlb	0	; () banked
  9984  001752  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9985  001756  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  9986  00175A  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9987  00175E  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9988  001762  0100               	movlb	0	; () banked
  9989  001764  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  9990  001766  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  9991  00176A  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9992  00176E  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9993  001772  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  9997  001776  C07F  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 10001  00177A  0100               	movlb	0	; () banked
 10002  00177C  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10003  00177E  D003               	goto	l501
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 10007  001780  010F               	movlb	15	; () banked
 10008  001782  8111               	bsf	17,0,b	;volatile
 10009  001784  D002               	goto	l502
 10010  001786                     l501:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;inc\CANlib.h: 1009: else
 10014                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 10015  001786  010F               	movlb	15	; () banked
 10016  001788  9111               	bcf	17,0,b	;volatile
 10017  00178A                     l502:
 10018                           
 10019                           ; BSR set to: 15
 10020                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 10021  00178A  0100               	movlb	0	; () banked
 10022  00178C  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10023  00178E  D003               	goto	l503
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 10027  001790  010F               	movlb	15	; () banked
 10028  001792  8311               	bsf	17,1,b	;volatile
 10029  001794  D002               	goto	l504
 10030  001796                     l503:
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;inc\CANlib.h: 1014: else
 10034                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 10035  001796  010F               	movlb	15	; () banked
 10036  001798  9311               	bcf	17,1,b	;volatile
 10037  00179A                     l504:
 10038                           
 10039                           ; BSR set to: 15
 10040                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 10041  00179A  0100               	movlb	0	; () banked
 10042  00179C  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10043  00179E  D003               	goto	l505
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 10047  0017A0  010F               	movlb	15	; () banked
 10048  0017A2  8B11               	bsf	17,5,b	;volatile
 10049  0017A4  D002               	goto	l506
 10050  0017A6                     l505:
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;inc\CANlib.h: 1019: else
 10054                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 10055  0017A6  010F               	movlb	15	; () banked
 10056  0017A8  9B11               	bcf	17,5,b	;volatile
 10057  0017AA                     l506:
 10058                           
 10059                           ; BSR set to: 15
 10060                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 10061  0017AA  0100               	movlb	0	; () banked
 10062  0017AC  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10063  0017AE  D003               	goto	l507
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 10067  0017B0  010F               	movlb	15	; () banked
 10068  0017B2  8D11               	bsf	17,6,b	;volatile
 10069  0017B4  D002               	goto	l508
 10070  0017B6                     l507:
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;inc\CANlib.h: 1024: else
 10074                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 10075  0017B6  010F               	movlb	15	; () banked
 10076  0017B8  9D11               	bcf	17,6,b	;volatile
 10077  0017BA                     l508:
 10078                           
 10079                           ; BSR set to: 15
 10080                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 10081  0017BA  0100               	movlb	0	; () banked
 10082  0017BC  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10083  0017BE  D003               	goto	l509
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 10087  0017C0  010F               	movlb	15	; () banked
 10088  0017C2  8F11               	bsf	17,7,b	;volatile
 10089  0017C4  D002               	goto	l3604
 10090  0017C6                     l509:
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;inc\CANlib.h: 1029: else
 10094                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 10095  0017C6  010F               	movlb	15	; () banked
 10096  0017C8  9F11               	bcf	17,7,b	;volatile
 10097  0017CA                     l3604:
 10098                           
 10099                           ; BSR set to: 15
 10100                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 10101  0017CA  0100               	movlb	0	; () banked
 10102  0017CC  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
 10103  0017D0  0100               	movlb	0	; () banked
 10104  0017D2  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10105  0017D6  0100               	movlb	0	; () banked
 10106  0017D8  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10107  0017DC  0100               	movlb	0	; () banked
 10108  0017DE  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10109  0017E2  0E16               	movlw	22
 10110  0017E4  D006               	goto	u4070
 10111  0017E6                     u4075:
 10112  0017E6  0100               	movlb	0	; () banked
 10113  0017E8  90D8               	bcf	status,0,c
 10114  0017EA  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10115  0017EC  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10116  0017EE  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10117  0017F0  337A               	rrcf	??_CANSetFilter& (0+255),f,b
 10118  0017F2                     u4070:
 10119  0017F2  2EE8               	decfsz	wreg,f,c
 10120  0017F4  D7F8               	goto	u4075
 10121  0017F6  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
 10122  0017FA  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10123  0017FE  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10124  001802  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 10128  001806  0100               	movlb	0	; () banked
 10129  001808  517F               	movf	CANSetFilter@tamp& (0+255),w,b
 10130  00180A  0100               	movlb	0	; () banked
 10131  00180C  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
 10132  00180E  0100               	movlb	0	; () banked
 10133  001810  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10134  001812  0100               	movlb	0	; () banked
 10135  001814  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10136  001816  0100               	movlb	0	; () banked
 10137  001818  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 10141  00181A  C07F  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10142  00181E                     l3610:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;inc\CANlib.h: 1035: }
 10146                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 10147  00181E  0100               	movlb	0	; () banked
 10148  001820  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
 10149  001822  0A05               	xorlw	5
 10150  001824  A4D8               	btfss	status,2,c
 10151  001826  0012               	return	
 10152                           
 10153                           ; BSR set to: 0
 10154  001828  0100               	movlb	0	; () banked
 10155  00182A  5179               	movf	CANSetFilter@type& (0+255),w,b
 10156  00182C  0AF7               	xorlw	247
 10157  00182E  A4D8               	btfss	status,2,c
 10158  001830  0012               	return	
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;inc\CANlib.h: 1038: {
 10162                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 10163  001832  010F               	movlb	15	; () banked
 10164  001834  8715               	bsf	21,3,b	;volatile
 10165                           
 10166                           ; BSR set to: 15
 10167                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 10168  001836  0100               	movlb	0	; () banked
 10169  001838  5175               	movf	CANSetFilter@filter& (0+255),w,b
 10170  00183A  0100               	movlb	0	; () banked
 10171  00183C  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
 10172  00183E  0100               	movlb	0	; () banked
 10173  001840  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10174  001842  0100               	movlb	0	; () banked
 10175  001844  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10176  001846  0100               	movlb	0	; () banked
 10177  001848  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 10181  00184A  C07F  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 10185  00184E  0E00               	movlw	0
 10186  001850  0100               	movlb	0	; () banked
 10187  001852  1575               	andwf	CANSetFilter@filter& (0+255),w,b
 10188  001854  0100               	movlb	0	; () banked
 10189  001856  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
 10190  001858  0EFF               	movlw	255
 10191  00185A  0100               	movlb	0	; () banked
 10192  00185C  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10193  00185E  0100               	movlb	0	; () banked
 10194  001860  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10195  001862  0E00               	movlw	0
 10196  001864  0100               	movlb	0	; () banked
 10197  001866  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10198  001868  0100               	movlb	0	; () banked
 10199  00186A  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10200  00186C  0E00               	movlw	0
 10201  00186E  0100               	movlb	0	; () banked
 10202  001870  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10203  001872  0100               	movlb	0	; () banked
 10204  001874  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 10208  001876  0100               	movlb	0	; () banked
 10209  001878  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
 10210  00187C  0100               	movlb	0	; () banked
 10211  00187E  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10212  001882  0100               	movlb	0	; () banked
 10213  001884  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10214  001888  0100               	movlb	0	; () banked
 10215  00188A  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10216  00188E  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
 10217  001892  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10218  001896  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10219  00189A  0100               	movlb	0	; () banked
 10220  00189C  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
 10221  00189E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
 10222  0018A2  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10223  0018A6  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10224  0018AA  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 10228  0018AE  C07F  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 10232  0018B2  0100               	movlb	0	; () banked
 10233  0018B4  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10234  0018B6  D003               	goto	l512
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 10238  0018B8  010F               	movlb	15	; () banked
 10239  0018BA  8115               	bsf	21,0,b	;volatile
 10240  0018BC  D002               	goto	l513
 10241  0018BE                     l512:
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;inc\CANlib.h: 1050: else
 10245                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 10246  0018BE  010F               	movlb	15	; () banked
 10247  0018C0  9115               	bcf	21,0,b	;volatile
 10248  0018C2                     l513:
 10249                           
 10250                           ; BSR set to: 15
 10251                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 10252  0018C2  0100               	movlb	0	; () banked
 10253  0018C4  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10254  0018C6  D003               	goto	l514
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 10258  0018C8  010F               	movlb	15	; () banked
 10259  0018CA  8315               	bsf	21,1,b	;volatile
 10260  0018CC  D002               	goto	l515
 10261  0018CE                     l514:
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;inc\CANlib.h: 1055: else
 10265                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 10266  0018CE  010F               	movlb	15	; () banked
 10267  0018D0  9315               	bcf	21,1,b	;volatile
 10268  0018D2                     l515:
 10269                           
 10270                           ; BSR set to: 15
 10271                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 10272  0018D2  0100               	movlb	0	; () banked
 10273  0018D4  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10274  0018D6  D003               	goto	l516
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 10278  0018D8  010F               	movlb	15	; () banked
 10279  0018DA  8B15               	bsf	21,5,b	;volatile
 10280  0018DC  D002               	goto	l517
 10281  0018DE                     l516:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;inc\CANlib.h: 1060: else
 10285                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 10286  0018DE  010F               	movlb	15	; () banked
 10287  0018E0  9B15               	bcf	21,5,b	;volatile
 10288  0018E2                     l517:
 10289                           
 10290                           ; BSR set to: 15
 10291                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 10292  0018E2  0100               	movlb	0	; () banked
 10293  0018E4  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10294  0018E6  D003               	goto	l518
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 10298  0018E8  010F               	movlb	15	; () banked
 10299  0018EA  8D15               	bsf	21,6,b	;volatile
 10300  0018EC  D002               	goto	l519
 10301  0018EE                     l518:
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;inc\CANlib.h: 1065: else
 10305                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 10306  0018EE  010F               	movlb	15	; () banked
 10307  0018F0  9D15               	bcf	21,6,b	;volatile
 10308  0018F2                     l519:
 10309                           
 10310                           ; BSR set to: 15
 10311                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 10312  0018F2  0100               	movlb	0	; () banked
 10313  0018F4  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10314  0018F6  D003               	goto	l520
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 10318  0018F8  010F               	movlb	15	; () banked
 10319  0018FA  8F15               	bsf	21,7,b	;volatile
 10320  0018FC  D002               	goto	l3638
 10321  0018FE                     l520:
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;inc\CANlib.h: 1070: else
 10325                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 10326  0018FE  010F               	movlb	15	; () banked
 10327  001900  9F15               	bcf	21,7,b	;volatile
 10328  001902                     l3638:
 10329                           
 10330                           ; BSR set to: 15
 10331                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 10332  001902  0100               	movlb	0	; () banked
 10333  001904  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
 10334  001908  0100               	movlb	0	; () banked
 10335  00190A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10336  00190E  0100               	movlb	0	; () banked
 10337  001910  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10338  001914  0100               	movlb	0	; () banked
 10339  001916  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10340  00191A  0E16               	movlw	22
 10341  00191C  D006               	goto	u4150
 10342  00191E                     u4155:
 10343  00191E  0100               	movlb	0	; () banked
 10344  001920  90D8               	bcf	status,0,c
 10345  001922  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10346  001924  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10347  001926  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10348  001928  337A               	rrcf	??_CANSetFilter& (0+255),f,b
 10349  00192A                     u4150:
 10350  00192A  2EE8               	decfsz	wreg,f,c
 10351  00192C  D7F8               	goto	u4155
 10352  00192E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
 10353  001932  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10354  001936  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10355  00193A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 10359  00193E  0100               	movlb	0	; () banked
 10360  001940  517F               	movf	CANSetFilter@tamp& (0+255),w,b
 10361  001942  0100               	movlb	0	; () banked
 10362  001944  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
 10363  001946  0100               	movlb	0	; () banked
 10364  001948  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10365  00194A  0100               	movlb	0	; () banked
 10366  00194C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10367  00194E  0100               	movlb	0	; () banked
 10368  001950  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 10372  001952  C07F  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10373  001956  0012               	return	
 10374  001958                     __end_of_CANSetFilter:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           intcon2	equ	0xFF1
 10384                           postinc0	equ	0xFEE
 10385                           wreg	equ	0xFE8
 10386                           indf2	equ	0xFDF
 10387                           postinc2	equ	0xFDE
 10388                           postdec2	equ	0xFDD
 10389                           fsr2h	equ	0xFDA
 10390                           fsr2l	equ	0xFD9
 10391                           status	equ	0xFD8
 10392                           
 10393 ;; *************** function _CANOperationMode *****************
 10394 ;; Defined at:
 10395 ;;		line 206 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  mode            1    wreg     enum E16348
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  mode            1   21[BANK0 ] enum E16348
 10400 ;; Return value:  Size  Location     Type
 10401 ;;		None               void
 10402 ;; Registers used:
 10403 ;;		wreg, status,2, status,0
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;Total ram usage:        1 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    4
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_CANInitialize
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text27
 10424  004874                     __ptext27:
 10425                           	opt stack 0
 10426  004874                     _CANOperationMode:
 10427                           	opt stack 24
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;incstack = 0
 10431                           ;CANOperationMode@mode stored from wreg
 10432  004874  0100               	movlb	0	; () banked
 10433  004876  6F75               	movwf	CANOperationMode@mode& (0+255),b
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;inc\CANlib.h: 208: CANCON = mode;
 10437  004878  C075  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 10438  00487C                     l3234:
 10439                           
 10440                           ; BSR set to: 0
 10441  00487C  506E               	movf	3950,w,c	;volatile
 10442  00487E  0BE0               	andlw	224
 10443  004880  0100               	movlb	0	; () banked
 10444  004882  1975               	xorwf	CANOperationMode@mode& (0+255),w,b
 10445  004884  B4D8               	btfsc	status,2,c
 10446                           
 10447                           ; BSR set to: 0
 10448                           
 10449                           ; BSR set to: 0
 10450  004886  0012               	return	
 10451  004888  D7F9               	goto	l3234
 10452  00488A                     __end_of_CANOperationMode:
 10453                           	opt stack 0
 10454                           tblptru	equ	0xFF8
 10455                           tblptrh	equ	0xFF7
 10456                           tblptrl	equ	0xFF6
 10457                           tablat	equ	0xFF5
 10458                           prodh	equ	0xFF4
 10459                           prodl	equ	0xFF3
 10460                           intcon	equ	0xFF2
 10461                           intcon2	equ	0xFF1
 10462                           postinc0	equ	0xFEE
 10463                           wreg	equ	0xFE8
 10464                           indf2	equ	0xFDF
 10465                           postinc2	equ	0xFDE
 10466                           postdec2	equ	0xFDD
 10467                           fsr2h	equ	0xFDA
 10468                           fsr2l	equ	0xFD9
 10469                           status	equ	0xFD8
 10470                           
 10471 ;; *************** function _can_interpreter *****************
 10472 ;; Defined at:
 10473 ;;		line 258 in file "parcheggio.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;		None
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;		None               void
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10491 ;;Total ram usage:        2 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    4
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_main
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text28
 10502  0046F0                     __ptext28:
 10503                           	opt stack 0
 10504  0046F0                     _can_interpreter:
 10505                           	opt stack 26
 10506                           
 10507                           ;parcheggio.c: 259: left_speed = data_speed_rx[1];
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;incstack = 0
 10511  0046F0  0101               	movlb	1	; () banked
 10512  0046F2  C101  F01B         	movff	_data_speed_rx+1,_left_speed
 10513  0046F6  6A1C               	clrf	_left_speed+1,c
 10514                           
 10515                           ; BSR set to: 1
 10516                           ;parcheggio.c: 260: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 10517  0046F8  501B               	movf	_left_speed,w,c
 10518  0046FA  6E1C               	movwf	_left_speed+1,c
 10519  0046FC  0101               	movlb	1	; () banked
 10520  0046FE  5100               	movf	_data_speed_rx& (0+255),w,b
 10521  004700  6E1B               	movwf	_left_speed,c
 10522                           
 10523                           ; BSR set to: 1
 10524                           ;parcheggio.c: 261: right_speed = data_speed_rx[3];
 10525  004702  0101               	movlb	1	; () banked
 10526  004704  C103  F01F         	movff	_data_speed_rx+3,_right_speed
 10527  004708  6A20               	clrf	_right_speed+1,c
 10528                           
 10529                           ;parcheggio.c: 262: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 10530  00470A  501F               	movf	_right_speed,w,c
 10531  00470C  6E20               	movwf	_right_speed+1,c
 10532  00470E  0101               	movlb	1	; () banked
 10533  004710  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 10534  004712  6E1F               	movwf	_right_speed,c
 10535                           
 10536                           ; BSR set to: 1
 10537                           ;parcheggio.c: 263: actual_speed = (right_speed + left_speed) / 2;
 10538  004714  C01F  F075         	movff	_right_speed,??_can_interpreter
 10539  004718  C020  F076         	movff	_right_speed+1,??_can_interpreter+1
 10540  00471C  501B               	movf	_left_speed,w,c
 10541  00471E  0100               	movlb	0	; () banked
 10542  004720  2775               	addwf	??_can_interpreter& (0+255),f,b
 10543  004722  501C               	movf	_left_speed+1,w,c
 10544  004724  0100               	movlb	0	; () banked
 10545  004726  2376               	addwfc	(??_can_interpreter+1)& (0+255),f,b
 10546  004728  90D8               	bcf	status,0,c
 10547  00472A  0100               	movlb	0	; () banked
 10548  00472C  3176               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 10549  00472E  6E12               	movwf	_actual_speed+1,c
 10550  004730  0100               	movlb	0	; () banked
 10551  004732  3175               	rrcf	??_can_interpreter& (0+255),w,b
 10552  004734  6E11               	movwf	_actual_speed,c
 10553                           
 10554                           ; BSR set to: 0
 10555  004736  0012               	return	
 10556  004738                     __end_of_can_interpreter:
 10557                           	opt stack 0
 10558                           tblptru	equ	0xFF8
 10559                           tblptrh	equ	0xFF7
 10560                           tblptrl	equ	0xFF6
 10561                           tablat	equ	0xFF5
 10562                           prodh	equ	0xFF4
 10563                           prodl	equ	0xFF3
 10564                           intcon	equ	0xFF2
 10565                           intcon2	equ	0xFF1
 10566                           postinc0	equ	0xFEE
 10567                           wreg	equ	0xFE8
 10568                           indf2	equ	0xFDF
 10569                           postinc2	equ	0xFDE
 10570                           postdec2	equ	0xFDD
 10571                           fsr2h	equ	0xFDA
 10572                           fsr2l	equ	0xFD9
 10573                           status	equ	0xFD8
 10574                           
 10575 ;; *************** function _ISR_Bassa *****************
 10576 ;; Defined at:
 10577 ;;		line 90 in file "parcheggio.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;		None
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  i               1   32[COMRAM] unsigned char 
 10582 ;;  gigi            1   31[COMRAM] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;		None               void
 10585 ;; Registers used:
 10586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:       21 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    3
 10599 ;; This function calls:
 10600 ;;		_CANreceiveMessage
 10601 ;; This function is called by:
 10602 ;;		Interrupt level 1
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	intcodelo
 10607  000018                     __pintcodelo:
 10608                           	opt stack 0
 10609  000018                     _ISR_Bassa:
 10610                           	opt stack 21
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;incstack = 0
 10614  000018  CFD8 F034          	movff	status,??_ISR_Bassa+2
 10615  00001C  CFE8 F035          	movff	wreg,??_ISR_Bassa+3
 10616  000020  CFE0 F036          	movff	bsr,??_ISR_Bassa+4
 10617  000024  CFFA F037          	movff	pclath,??_ISR_Bassa+5
 10618  000028  CFFB F038          	movff	pclatu,??_ISR_Bassa+6
 10619  00002C  CFE9 F039          	movff	fsr0l,??_ISR_Bassa+7
 10620  000030  CFEA F03A          	movff	fsr0h,??_ISR_Bassa+8
 10621  000034  CFE1 F03B          	movff	fsr1l,??_ISR_Bassa+9
 10622  000038  CFE2 F03C          	movff	fsr1h,??_ISR_Bassa+10
 10623  00003C  CFD9 F03D          	movff	fsr2l,??_ISR_Bassa+11
 10624  000040  CFDA F03E          	movff	fsr2h,??_ISR_Bassa+12
 10625  000044  CFF3 F03F          	movff	prodl,??_ISR_Bassa+13
 10626  000048  CFF4 F040          	movff	prodh,??_ISR_Bassa+14
 10627  00004C  CFF6 F041          	movff	tblptrl,??_ISR_Bassa+15
 10628  000050  CFF7 F042          	movff	tblptrh,??_ISR_Bassa+16
 10629  000054  CFF8 F043          	movff	tblptru,??_ISR_Bassa+17
 10630  000058  CFF5 F044          	movff	tablat,??_ISR_Bassa+18
 10631                           
 10632                           ;parcheggio.c: 92: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 10633  00005C  B0A4               	btfsc	4004,0,c	;volatile
 10634  00005E  D002               	goto	i1l4384
 10635  000060  A2A4               	btfss	4004,1,c	;volatile
 10636  000062  D08D               	goto	i1l653
 10637  000064                     i1l4384:
 10638                           
 10639                           ;parcheggio.c: 93: CANreceiveMessage(&msg);
 10640  000064  0101               	movlb	1	; () banked
 10641  000066  0E01               	movlw	high _msg
 10642  000068  6E27               	movwf	CANreceiveMessage@msg+1,c
 10643  00006A  0101               	movlb	1	; () banked
 10644  00006C  0E10               	movlw	low _msg
 10645  00006E  6E26               	movwf	CANreceiveMessage@msg,c
 10646  000070  ECE7  F010         	call	_CANreceiveMessage	;wreg free
 10647                           
 10648                           ;parcheggio.c: 95: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 10649  000074  0101               	movlb	1	; () banked
 10650  000076  5110               	movf	_msg& (0+255),w,b
 10651  000078  0A07               	xorlw	7
 10652  00007A  1111               	iorwf	(_msg+1)& (0+255),w,b
 10653  00007C  1112               	iorwf	(_msg+2)& (0+255),w,b
 10654  00007E  1113               	iorwf	(_msg+3)& (0+255),w,b
 10655  000080  A4D8               	btfss	status,2,c
 10656  000082  D02D               	goto	i1l4400
 10657                           
 10658                           ; BSR set to: 1
 10659  000084  0101               	movlb	1	; () banked
 10660  000086  051E               	decf	(_msg+14)& (0+255),w,b
 10661  000088  B4D8               	btfsc	status,2,c
 10662  00008A  D029               	goto	i1l4400
 10663                           
 10664                           ; BSR set to: 1
 10665                           ;parcheggio.c: 96: distance_average = 0;
 10666  00008C  0E00               	movlw	0
 10667  00008E  0100               	movlb	0	; () banked
 10668  000090  6FDF               	movwf	(_distance_average+1)& (0+255),b	;volatile
 10669  000092  0E00               	movlw	0
 10670  000094  0100               	movlb	0	; () banked
 10671  000096  6FDE               	movwf	_distance_average& (0+255),b	;volatile
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;parcheggio.c: 97: distance_dx = msg.data[1];
 10675  000098  0101               	movlb	1	; () banked
 10676  00009A  C115  F017         	movff	_msg+5,_distance_dx	;volatile
 10677  00009E  6A18               	clrf	_distance_dx+1,c	;volatile
 10678                           
 10679                           ;parcheggio.c: 98: distance_dx = ((distance_dx << 8) | msg.data[0]);
 10680  0000A0  5017               	movf	_distance_dx,w,c	;volatile
 10681  0000A2  6E18               	movwf	_distance_dx+1,c	;volatile
 10682  0000A4  0101               	movlb	1	; () banked
 10683  0000A6  5114               	movf	(_msg+4)& (0+255),w,b
 10684  0000A8  6E17               	movwf	_distance_dx,c	;volatile
 10685                           
 10686                           ; BSR set to: 1
 10687                           ;parcheggio.c: 99: distance_sx = msg.data[3];
 10688  0000AA  0101               	movlb	1	; () banked
 10689  0000AC  C117  F019         	movff	_msg+7,_distance_sx	;volatile
 10690  0000B0  6A1A               	clrf	_distance_sx+1,c	;volatile
 10691                           
 10692                           ;parcheggio.c: 100: distance_sx = ((distance_sx << 8) | msg.data[2]);
 10693  0000B2  5019               	movf	_distance_sx,w,c	;volatile
 10694  0000B4  6E1A               	movwf	_distance_sx+1,c	;volatile
 10695  0000B6  0101               	movlb	1	; () banked
 10696  0000B8  5116               	movf	(_msg+6)& (0+255),w,b
 10697  0000BA  6E19               	movwf	_distance_sx,c	;volatile
 10698                           
 10699                           ; BSR set to: 1
 10700                           ;parcheggio.c: 101: distance_average = (distance_sx + distance_dx) / 2;
 10701  0000BC  C019  F032         	movff	_distance_sx,??_ISR_Bassa	;volatile
 10702  0000C0  C01A  F033         	movff	_distance_sx+1,??_ISR_Bassa+1	;volatile
 10703  0000C4  5017               	movf	_distance_dx,w,c	;volatile
 10704  0000C6  2632               	addwf	??_ISR_Bassa,f,c
 10705  0000C8  5018               	movf	_distance_dx+1,w,c	;volatile
 10706  0000CA  2233               	addwfc	??_ISR_Bassa+1,f,c
 10707  0000CC  90D8               	bcf	status,0,c
 10708  0000CE  3033               	rrcf	??_ISR_Bassa+1,w,c
 10709  0000D0  0100               	movlb	0	; () banked
 10710  0000D2  6FDF               	movwf	(_distance_average+1)& (0+255),b	;volatile
 10711  0000D4  3032               	rrcf	??_ISR_Bassa,w,c
 10712  0000D6  0100               	movlb	0	; () banked
 10713  0000D8  6FDE               	movwf	_distance_average& (0+255),b	;volatile
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;parcheggio.c: 102: distance_received = 1;
 10717  0000DA  0100               	movlb	(_distance_received/(0+8)) shr (0+8)
 10718  0000DC  8647               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 10719  0000DE                     i1l4400:
 10720                           
 10721                           ;parcheggio.c: 103: }
 10722                           ;parcheggio.c: 104: if (msg.identifier == 0b00000001010) {
 10723  0000DE  0101               	movlb	1	; () banked
 10724  0000E0  5110               	movf	_msg& (0+255),w,b
 10725  0000E2  0A0A               	xorlw	10
 10726  0000E4  1111               	iorwf	(_msg+1)& (0+255),w,b
 10727  0000E6  1112               	iorwf	(_msg+2)& (0+255),w,b
 10728  0000E8  1113               	iorwf	(_msg+3)& (0+255),w,b
 10729  0000EA  A4D8               	btfss	status,2,c
 10730  0000EC  D00D               	goto	i1l4406
 10731                           
 10732                           ; BSR set to: 1
 10733                           ;parcheggio.c: 105: if (msg.data[0] == 1) {
 10734  0000EE  0101               	movlb	1	; () banked
 10735  0000F0  0514               	decf	(_msg+4)& (0+255),w,b
 10736  0000F2  A4D8               	btfss	status,2,c
 10737  0000F4  D004               	goto	i1l658
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;parcheggio.c: 106: activation = 1;
 10741  0000F6  0100               	movlb	(_activation/(0+8)) shr (0+8)
 10742  0000F8  8047               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 10743                           
 10744                           ;parcheggio.c: 107: PORTBbits.RB6 = 1;
 10745  0000FA  8C81               	bsf	3969,6,c	;volatile
 10746                           
 10747                           ;parcheggio.c: 108: } else {
 10748  0000FC  D005               	goto	i1l4406
 10749  0000FE                     i1l658:
 10750                           
 10751                           ; BSR set to: 1
 10752                           ;parcheggio.c: 109: activation = 0;
 10753  0000FE  0100               	movlb	(_activation/(0+8)) shr (0+8)
 10754  000100  9047               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 10755                           
 10756                           ;parcheggio.c: 110: PORTBbits.RB4 = 0;
 10757  000102  9881               	bcf	3969,4,c	;volatile
 10758                           
 10759                           ;parcheggio.c: 111: PORTBbits.RB5 = 0;
 10760  000104  9A81               	bcf	3969,5,c	;volatile
 10761                           
 10762                           ;parcheggio.c: 112: PORTBbits.RB6 = 0;
 10763  000106  9C81               	bcf	3969,6,c	;volatile
 10764  000108                     i1l4406:
 10765                           
 10766                           ;parcheggio.c: 113: }
 10767                           ;parcheggio.c: 114: }
 10768                           ;parcheggio.c: 115: if (msg.identifier == 0b00000001100) {
 10769  000108  0101               	movlb	1	; () banked
 10770  00010A  5110               	movf	_msg& (0+255),w,b
 10771  00010C  0A0C               	xorlw	12
 10772  00010E  1111               	iorwf	(_msg+1)& (0+255),w,b
 10773  000110  1112               	iorwf	(_msg+2)& (0+255),w,b
 10774  000112  1113               	iorwf	(_msg+3)& (0+255),w,b
 10775  000114  A4D8               	btfss	status,2,c
 10776  000116  D002               	goto	i1l4410
 10777                           
 10778                           ; BSR set to: 1
 10779                           ;parcheggio.c: 116: start_operation = 1;
 10780  000118  0100               	movlb	(_start_operation/(0+8)) shr (0+8)
 10781  00011A  8C47               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 10782  00011C                     i1l4410:
 10783                           
 10784                           ;parcheggio.c: 117: }
 10785                           ;parcheggio.c: 118: if (msg.identifier == 0b00000000110) {
 10786  00011C  0101               	movlb	1	; () banked
 10787  00011E  5110               	movf	_msg& (0+255),w,b
 10788  000120  0A06               	xorlw	6
 10789  000122  1111               	iorwf	(_msg+1)& (0+255),w,b
 10790  000124  1112               	iorwf	(_msg+2)& (0+255),w,b
 10791  000126  1113               	iorwf	(_msg+3)& (0+255),w,b
 10792  000128  A4D8               	btfss	status,2,c
 10793  00012A  D027               	goto	i1l661
 10794                           
 10795                           ; BSR set to: 1
 10796                           ;parcheggio.c: 119: for (unsigned char i = 0; i < 8; i++) {
 10797  00012C  0E00               	movlw	0
 10798  00012E  6E46               	movwf	ISR_Bassa@i,c
 10799  000130  D017               	goto	L3
 10800  000132                     i1l4418:
 10801                           
 10802                           ; BSR set to: 1
 10803                           ;parcheggio.c: 120: data_speed_rx[i] = msg.data[i];
 10804  000132  5046               	movf	ISR_Bassa@i,w,c
 10805  000134  0D01               	mullw	1
 10806  000136  0101               	movlb	1	; () banked
 10807  000138  0E14               	movlw	low (_msg+4)
 10808  00013A  24F3               	addwf	prodl,w,c
 10809  00013C  6ED9               	movwf	fsr2l,c
 10810  00013E  0101               	movlb	1	; () banked
 10811  000140  0E01               	movlw	high (_msg+4)
 10812  000142  20F4               	addwfc	prodh,w,c
 10813  000144  6EDA               	movwf	fsr2h,c
 10814  000146  5046               	movf	ISR_Bassa@i,w,c
 10815  000148  0D01               	mullw	1
 10816  00014A  0101               	movlb	1	; () banked
 10817  00014C  0E00               	movlw	low _data_speed_rx
 10818  00014E  24F3               	addwf	prodl,w,c
 10819  000150  6EE1               	movwf	fsr1l,c
 10820  000152  0101               	movlb	1	; () banked
 10821  000154  0E01               	movlw	high _data_speed_rx
 10822  000156  20F4               	addwfc	prodh,w,c
 10823  000158  6EE2               	movwf	fsr1h,c
 10824  00015A  CFDF FFE7          	movff	indf2,indf1
 10825                           
 10826                           ; BSR set to: 1
 10827  00015E  2A46               	incf	ISR_Bassa@i,f,c
 10828  000160                     L3:
 10829                           
 10830                           ; BSR set to: 1
 10831  000160  0E07               	movlw	7
 10832  000162  6446               	cpfsgt	ISR_Bassa@i,c
 10833  000164  D7E6               	goto	i1l4418
 10834                           
 10835                           ; BSR set to: 1
 10836                           ;parcheggio.c: 121: }
 10837                           ;parcheggio.c: 122: if (msg.identifier == 0b00000001101) {
 10838                           
 10839                           ; BSR set to: 1
 10840  000166  0101               	movlb	1	; () banked
 10841  000168  5110               	movf	_msg& (0+255),w,b
 10842  00016A  0A0D               	xorlw	13
 10843  00016C  1111               	iorwf	(_msg+1)& (0+255),w,b
 10844  00016E  1112               	iorwf	(_msg+2)& (0+255),w,b
 10845  000170  1113               	iorwf	(_msg+3)& (0+255),w,b
 10846  000172  A4D8               	btfss	status,2,c
 10847  000174  D002               	goto	i1l661
 10848                           
 10849                           ; BSR set to: 1
 10850                           ;parcheggio.c: 123: distance_wait = 0;
 10851  000176  0100               	movlb	(_distance_wait/(0+8)) shr (0+8)
 10852  000178  9847               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 10853  00017A                     i1l661:
 10854                           
 10855                           ;parcheggio.c: 124: }
 10856                           ;parcheggio.c: 126: }
 10857                           ;parcheggio.c: 128: PIR3bits.RXB0IF = 0;
 10858  00017A  90A4               	bcf	4004,0,c	;volatile
 10859                           
 10860                           ;parcheggio.c: 129: PIR3bits.RXB1IF = 0;
 10861  00017C  92A4               	bcf	4004,1,c	;volatile
 10862  00017E                     i1l653:
 10863                           
 10864                           ;parcheggio.c: 130: }
 10865                           ;parcheggio.c: 132: if (INTCONbits.TMR0IF == 1) {
 10866  00017E  A4F2               	btfss	intcon,2,c	;volatile
 10867  000180  D037               	goto	i1l668
 10868                           
 10869                           ;parcheggio.c: 133: INTCONbits.INT0IE = 0;
 10870  000182  98F2               	bcf	intcon,4,c	;volatile
 10871                           
 10872                           ;parcheggio.c: 134: TMR0H = 0x34;
 10873  000184  0E34               	movlw	52
 10874  000186  6ED7               	movwf	4055,c	;volatile
 10875                           
 10876                           ;parcheggio.c: 135: TMR0L = 0xE0;
 10877  000188  0EE0               	movlw	224
 10878  00018A  6ED6               	movwf	4054,c	;volatile
 10879                           
 10880                           ;parcheggio.c: 136: if (distance_error == 1) {
 10881  00018C  0100               	movlb	(_distance_error/(0+8)) shr (0+8)
 10882  00018E  A447               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 10883  000190  D00C               	goto	i1l4436
 10884                           
 10885                           ;parcheggio.c: 137: sensor_distance[MUX_index] = 5000;
 10886  000192  5023               	movf	_MUX_index,w,c	;volatile
 10887  000194  0D02               	mullw	2
 10888  000196  0E01               	movlw	low _sensor_distance	;volatile
 10889  000198  24F3               	addwf	prodl,w,c
 10890  00019A  6ED9               	movwf	fsr2l,c
 10891  00019C  0E00               	movlw	high _sensor_distance	;volatile
 10892  00019E  20F4               	addwfc	prodh,w,c
 10893  0001A0  6EDA               	movwf	fsr2h,c
 10894  0001A2  0E88               	movlw	136
 10895  0001A4  6EDE               	movwf	postinc2,c
 10896  0001A6  0E13               	movlw	19
 10897  0001A8  6EDD               	movwf	postdec2,c
 10898  0001AA                     i1l4436:
 10899                           
 10900                           ;parcheggio.c: 138: }
 10901                           ;parcheggio.c: 139: MUX_index++;
 10902  0001AA  2A23               	incf	_MUX_index,f,c	;volatile
 10903                           
 10904                           ;parcheggio.c: 140: if (MUX_index == 8) {
 10905  0001AC  5023               	movf	_MUX_index,w,c	;volatile
 10906  0001AE  0A08               	xorlw	8
 10907  0001B0  A4D8               	btfss	status,2,c
 10908  0001B2  D002               	goto	i1l667
 10909                           
 10910                           ;parcheggio.c: 141: MUX_index = 0;
 10911  0001B4  0E00               	movlw	0
 10912  0001B6  6E23               	movwf	_MUX_index,c	;volatile
 10913  0001B8                     i1l667:
 10914                           
 10915                           ;parcheggio.c: 142: }
 10916                           ;parcheggio.c: 144: unsigned char gigi = 0;
 10917  0001B8  0E00               	movlw	0
 10918  0001BA  6E45               	movwf	ISR_Bassa@gigi,c
 10919                           
 10920                           ;parcheggio.c: 145: gigi = MUX_select[MUX_index];
 10921  0001BC  5023               	movf	_MUX_index,w,c	;volatile
 10922  0001BE  0D01               	mullw	1
 10923  0001C0  0100               	movlb	0	; () banked
 10924  0001C2  0ED2               	movlw	low _MUX_select
 10925  0001C4  24F3               	addwf	prodl,w,c
 10926  0001C6  6ED9               	movwf	fsr2l,c
 10927  0001C8  0100               	movlb	0	; () banked
 10928  0001CA  0E00               	movlw	high _MUX_select
 10929  0001CC  20F4               	addwfc	prodh,w,c
 10930  0001CE  6EDA               	movwf	fsr2h,c
 10931  0001D0  50DF               	movf	indf2,w,c
 10932  0001D2  6E45               	movwf	ISR_Bassa@gigi,c
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;parcheggio.c: 146: PORTA = gigi;
 10936  0001D4  C045  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;parcheggio.c: 147: TRISBbits.RB0 = 0;
 10940  0001D8  9093               	bcf	3987,0,c	;volatile
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;parcheggio.c: 148: LATBbits.LATB0 = 1;
 10944  0001DA  808A               	bsf	3978,0,c	;volatile
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;parcheggio.c: 149: _delay((unsigned long)((15)*(16000000/4000000.0)));
 10948  0001DC  0E14               	movlw	20
 10949  0001DE                     i1u603_27:
 10950  0001DE  2EE8               	decfsz	wreg,f,c
 10951  0001E0  D7FE               	goto	i1u603_27
 10952                           
 10953                           ;parcheggio.c: 150: distance_error = 1;
 10954  0001E2  0100               	movlb	(_distance_error/(0+8)) shr (0+8)
 10955  0001E4  8447               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 10956                           
 10957                           ;parcheggio.c: 151: LATBbits.LATB0 = 0;
 10958  0001E6  908A               	bcf	3978,0,c	;volatile
 10959                           
 10960                           ;parcheggio.c: 152: TRISBbits.RB0 = 1;
 10961  0001E8  8093               	bsf	3987,0,c	;volatile
 10962                           
 10963                           ;parcheggio.c: 153: INTCONbits.INT0IF = 0;
 10964  0001EA  92F2               	bcf	intcon,1,c	;volatile
 10965                           
 10966                           ;parcheggio.c: 154: INTCONbits.INT0IE = 1;
 10967  0001EC  88F2               	bsf	intcon,4,c	;volatile
 10968                           
 10969                           ;parcheggio.c: 155: INTCONbits.TMR0IF = 0;
 10970  0001EE  94F2               	bcf	intcon,2,c	;volatile
 10971  0001F0                     i1l668:
 10972  0001F0  C044  FFF5         	movff	??_ISR_Bassa+18,tablat
 10973  0001F4  C043  FFF8         	movff	??_ISR_Bassa+17,tblptru
 10974  0001F8  C042  FFF7         	movff	??_ISR_Bassa+16,tblptrh
 10975  0001FC  C041  FFF6         	movff	??_ISR_Bassa+15,tblptrl
 10976  000200  C040  FFF4         	movff	??_ISR_Bassa+14,prodh
 10977  000204  C03F  FFF3         	movff	??_ISR_Bassa+13,prodl
 10978  000208  C03E  FFDA         	movff	??_ISR_Bassa+12,fsr2h
 10979  00020C  C03D  FFD9         	movff	??_ISR_Bassa+11,fsr2l
 10980  000210  C03C  FFE2         	movff	??_ISR_Bassa+10,fsr1h
 10981  000214  C03B  FFE1         	movff	??_ISR_Bassa+9,fsr1l
 10982  000218  C03A  FFEA         	movff	??_ISR_Bassa+8,fsr0h
 10983  00021C  C039  FFE9         	movff	??_ISR_Bassa+7,fsr0l
 10984  000220  C038  FFFB         	movff	??_ISR_Bassa+6,pclatu
 10985  000224  C037  FFFA         	movff	??_ISR_Bassa+5,pclath
 10986  000228  C036  FFE0         	movff	??_ISR_Bassa+4,bsr
 10987  00022C  C035  FFE8         	movff	??_ISR_Bassa+3,wreg
 10988  000230  C034  FFD8         	movff	??_ISR_Bassa+2,status
 10989  000234  0010               	retfie	
 10990  000236                     __end_of_ISR_Bassa:
 10991                           	opt stack 0
 10992                           pclatu	equ	0xFFB
 10993                           pclath	equ	0xFFA
 10994                           tblptru	equ	0xFF8
 10995                           tblptrh	equ	0xFF7
 10996                           tblptrl	equ	0xFF6
 10997                           tablat	equ	0xFF5
 10998                           prodh	equ	0xFF4
 10999                           prodl	equ	0xFF3
 11000                           intcon	equ	0xFF2
 11001                           intcon2	equ	0xFF1
 11002                           postinc0	equ	0xFEE
 11003                           fsr0h	equ	0xFEA
 11004                           fsr0l	equ	0xFE9
 11005                           wreg	equ	0xFE8
 11006                           indf1	equ	0xFE7
 11007                           fsr1h	equ	0xFE2
 11008                           fsr1l	equ	0xFE1
 11009                           bsr	equ	0xFE0
 11010                           indf2	equ	0xFDF
 11011                           postinc2	equ	0xFDE
 11012                           postdec2	equ	0xFDD
 11013                           fsr2h	equ	0xFDA
 11014                           fsr2l	equ	0xFD9
 11015                           status	equ	0xFD8
 11016                           
 11017 ;; *************** function _CANreceiveMessage *****************
 11018 ;; Defined at:
 11019 ;;		line 528 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  msg             2    0[COMRAM] PTR struct .
 11022 ;;		 -> msg(15), 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  tamp            1   11[COMRAM] unsigned char 
 11025 ;;  error           1   10[COMRAM] unsigned char 
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      unsigned char 
 11028 ;; Registers used:
 11029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;Total ram usage:       12 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    2
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_ISR_Bassa
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text30
 11050  0021CE                     __ptext30:
 11051                           	opt stack 0
 11052  0021CE                     _CANreceiveMessage:
 11053                           	opt stack 21
 11054                           
 11055                           ;inc\CANlib.h: 530: BYTE tamp;
 11056                           ;inc\CANlib.h: 531: BYTE error = 0;
 11057                           
 11058                           ;incstack = 0
 11059  0021CE  0E00               	movlw	0
 11060  0021D0  6E30               	movwf	CANreceiveMessage@error,c
 11061                           
 11062                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 11063  0021D2  BE74               	btfsc	3956,7,c	;volatile
 11064                           
 11065                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 11066  0021D4  8030               	bsf	CANreceiveMessage@error,0,c
 11067                           
 11068                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 11069  0021D6  BC74               	btfsc	3956,6,c	;volatile
 11070                           
 11071                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 11072  0021D8  8230               	bsf	CANreceiveMessage@error,1,c
 11073                           
 11074                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 11075  0021DA  010F               	movlb	15	; () banked
 11076  0021DC  AF50               	btfss	80,7,b	;volatile
 11077  0021DE  D13B               	goto	i1l404
 11078                           
 11079                           ; BSR set to: 15
 11080                           ;inc\CANlib.h: 541: {
 11081                           ;inc\CANlib.h: 542: msg->identifier = 0;
 11082  0021E0  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11083  0021E4  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11084  0021E8  6ADE               	clrf	postinc2,c
 11085  0021EA  6ADE               	clrf	postinc2,c
 11086  0021EC  6ADE               	clrf	postinc2,c
 11087  0021EE  6ADD               	clrf	postdec2,c
 11088                           
 11089                           ; BSR set to: 15
 11090                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 11091  0021F0  EE20 F004          	lfsr	2,4
 11092  0021F4  5026               	movf	CANreceiveMessage@msg,w,c
 11093  0021F6  26D9               	addwf	fsr2l,f,c
 11094  0021F8  5027               	movf	CANreceiveMessage@msg+1,w,c
 11095  0021FA  22DA               	addwfc	fsr2h,f,c
 11096  0021FC  010F               	movlb	15	; () banked
 11097  0021FE  CF56 FFDF          	movff	3926,indf2	;volatile
 11098                           
 11099                           ; BSR set to: 15
 11100                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 11101  002202  EE20 F005          	lfsr	2,5
 11102  002206  5026               	movf	CANreceiveMessage@msg,w,c
 11103  002208  26D9               	addwf	fsr2l,f,c
 11104  00220A  5027               	movf	CANreceiveMessage@msg+1,w,c
 11105  00220C  22DA               	addwfc	fsr2h,f,c
 11106  00220E  010F               	movlb	15	; () banked
 11107  002210  CF57 FFDF          	movff	3927,indf2	;volatile
 11108                           
 11109                           ; BSR set to: 15
 11110                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 11111  002214  EE20 F006          	lfsr	2,6
 11112  002218  5026               	movf	CANreceiveMessage@msg,w,c
 11113  00221A  26D9               	addwf	fsr2l,f,c
 11114  00221C  5027               	movf	CANreceiveMessage@msg+1,w,c
 11115  00221E  22DA               	addwfc	fsr2h,f,c
 11116  002220  010F               	movlb	15	; () banked
 11117  002222  CF58 FFDF          	movff	3928,indf2	;volatile
 11118                           
 11119                           ; BSR set to: 15
 11120                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 11121  002226  EE20 F007          	lfsr	2,7
 11122  00222A  5026               	movf	CANreceiveMessage@msg,w,c
 11123  00222C  26D9               	addwf	fsr2l,f,c
 11124  00222E  5027               	movf	CANreceiveMessage@msg+1,w,c
 11125  002230  22DA               	addwfc	fsr2h,f,c
 11126  002232  010F               	movlb	15	; () banked
 11127  002234  CF59 FFDF          	movff	3929,indf2	;volatile
 11128                           
 11129                           ; BSR set to: 15
 11130                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 11131  002238  EE20 F008          	lfsr	2,8
 11132  00223C  5026               	movf	CANreceiveMessage@msg,w,c
 11133  00223E  26D9               	addwf	fsr2l,f,c
 11134  002240  5027               	movf	CANreceiveMessage@msg+1,w,c
 11135  002242  22DA               	addwfc	fsr2h,f,c
 11136  002244  010F               	movlb	15	; () banked
 11137  002246  CF5A FFDF          	movff	3930,indf2	;volatile
 11138                           
 11139                           ; BSR set to: 15
 11140                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 11141  00224A  EE20 F009          	lfsr	2,9
 11142  00224E  5026               	movf	CANreceiveMessage@msg,w,c
 11143  002250  26D9               	addwf	fsr2l,f,c
 11144  002252  5027               	movf	CANreceiveMessage@msg+1,w,c
 11145  002254  22DA               	addwfc	fsr2h,f,c
 11146  002256  010F               	movlb	15	; () banked
 11147  002258  CF5B FFDF          	movff	3931,indf2	;volatile
 11148                           
 11149                           ; BSR set to: 15
 11150                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 11151  00225C  EE20 F00A          	lfsr	2,10
 11152  002260  5026               	movf	CANreceiveMessage@msg,w,c
 11153  002262  26D9               	addwf	fsr2l,f,c
 11154  002264  5027               	movf	CANreceiveMessage@msg+1,w,c
 11155  002266  22DA               	addwfc	fsr2h,f,c
 11156  002268  010F               	movlb	15	; () banked
 11157  00226A  CF5C FFDF          	movff	3932,indf2	;volatile
 11158                           
 11159                           ; BSR set to: 15
 11160                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 11161  00226E  EE20 F00B          	lfsr	2,11
 11162  002272  5026               	movf	CANreceiveMessage@msg,w,c
 11163  002274  26D9               	addwf	fsr2l,f,c
 11164  002276  5027               	movf	CANreceiveMessage@msg+1,w,c
 11165  002278  22DA               	addwfc	fsr2h,f,c
 11166  00227A  010F               	movlb	15	; () banked
 11167  00227C  CF5D FFDF          	movff	3933,indf2	;volatile
 11168                           
 11169                           ; BSR set to: 15
 11170                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 11171  002280  EE20 F00E          	lfsr	2,14
 11172  002284  5026               	movf	CANreceiveMessage@msg,w,c
 11173  002286  26D9               	addwf	fsr2l,f,c
 11174  002288  5027               	movf	CANreceiveMessage@msg+1,w,c
 11175  00228A  22DA               	addwfc	fsr2h,f,c
 11176  00228C  010F               	movlb	15	; () banked
 11177  00228E  AD55               	btfss	85,6,b	;volatile
 11178  002290  D002               	goto	i1u488_20
 11179  002292  0E01               	movlw	1
 11180  002294  D001               	goto	i1u488_26
 11181  002296                     i1u488_20:
 11182  002296  0E00               	movlw	0
 11183  002298                     i1u488_26:
 11184  002298  6EDF               	movwf	indf2,c
 11185                           
 11186                           ; BSR set to: 15
 11187                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 11188  00229A  EE20 F00D          	lfsr	2,13
 11189  00229E  5026               	movf	CANreceiveMessage@msg,w,c
 11190  0022A0  26D9               	addwf	fsr2l,f,c
 11191  0022A2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11192  0022A4  22DA               	addwfc	fsr2h,f,c
 11193  0022A6  010F               	movlb	15	; () banked
 11194  0022A8  5155               	movf	85,w,b	;volatile
 11195  0022AA  0B0F               	andlw	15
 11196  0022AC  6EDF               	movwf	indf2,c
 11197                           
 11198                           ; BSR set to: 15
 11199                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 11200  0022AE  EE20 F00C          	lfsr	2,12
 11201  0022B2  5026               	movf	CANreceiveMessage@msg,w,c
 11202  0022B4  26D9               	addwf	fsr2l,f,c
 11203  0022B6  5027               	movf	CANreceiveMessage@msg+1,w,c
 11204  0022B8  22DA               	addwfc	fsr2h,f,c
 11205  0022BA  010F               	movlb	15	; () banked
 11206  0022BC  A752               	btfss	82,3,b	;volatile
 11207  0022BE  D002               	goto	i1u489_20
 11208  0022C0  0E01               	movlw	1
 11209  0022C2  D001               	goto	i1u489_26
 11210  0022C4                     i1u489_20:
 11211  0022C4  0E00               	movlw	0
 11212  0022C6                     i1u489_26:
 11213  0022C6  6EDF               	movwf	indf2,c
 11214                           
 11215                           ; BSR set to: 15
 11216                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 11217  0022C8  010F               	movlb	15	; () banked
 11218  0022CA  B752               	btfsc	82,3,b	;volatile
 11219  0022CC  D049               	goto	i1l4162
 11220                           
 11221                           ; BSR set to: 15
 11222                           ;inc\CANlib.h: 559: {
 11223                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 11224  0022CE  010F               	movlb	15	; () banked
 11225  0022D0  CF51 F028          	movff	3921,??_CANreceiveMessage	;volatile
 11226  0022D4  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11227  0022D6  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11228  0022D8  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11229  0022DA  0E03               	movlw	3
 11230  0022DC                     i1u491_25:
 11231  0022DC  90D8               	bcf	status,0,c
 11232  0022DE  3628               	rlcf	??_CANreceiveMessage,f,c
 11233  0022E0  3629               	rlcf	??_CANreceiveMessage+1,f,c
 11234  0022E2  362A               	rlcf	??_CANreceiveMessage+2,f,c
 11235  0022E4  362B               	rlcf	??_CANreceiveMessage+3,f,c
 11236  0022E6  2EE8               	decfsz	wreg,f,c
 11237  0022E8  D7F9               	goto	i1u491_25
 11238  0022EA  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11239  0022EE  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11240  0022F2  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 11241  0022F6  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11242  0022FA  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11243  0022FE  C02B  FFDD         	movff	??_CANreceiveMessage+3,postdec2
 11244  002302  06D9               	decf	fsr2l,f,c
 11245  002304  06D9               	decf	fsr2l,f,c
 11246                           
 11247                           ; BSR set to: 15
 11248                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 11249  002306  010F               	movlb	15	; () banked
 11250  002308  3952               	swapf	82,w,b	;volatile
 11251  00230A  42E8               	rrncf	wreg,f,c
 11252  00230C  0B07               	andlw	7
 11253  00230E  0B07               	andlw	7
 11254  002310  6E31               	movwf	CANreceiveMessage@tamp,c
 11255                           
 11256                           ; BSR set to: 15
 11257                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 11258  002312  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11259  002316  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11260  00231A  CFDE F028          	movff	postinc2,??_CANreceiveMessage
 11261  00231E  CFDE F029          	movff	postinc2,??_CANreceiveMessage+1
 11262  002322  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+2
 11263  002326  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+3
 11264  00232A  5031               	movf	CANreceiveMessage@tamp,w,c
 11265  00232C  2428               	addwf	??_CANreceiveMessage,w,c
 11266  00232E  6E2C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 11267  002330  0E00               	movlw	0
 11268  002332  2029               	addwfc	??_CANreceiveMessage+1,w,c
 11269  002334  6E2D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 11270  002336  0E00               	movlw	0
 11271  002338  202A               	addwfc	??_CANreceiveMessage+2,w,c
 11272  00233A  6E2E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 11273  00233C  0E00               	movlw	0
 11274  00233E  202B               	addwfc	??_CANreceiveMessage+3,w,c
 11275  002340  6E2F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 11276  002342  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11277  002346  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11278  00234A  C02C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 11279  00234E  C02D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 11280  002352  C02E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 11281  002356  C02F  FFDD         	movff	??_CANreceiveMessage+7,postdec2
 11282  00235A  06D9               	decf	fsr2l,f,c
 11283  00235C  06D9               	decf	fsr2l,f,c
 11284                           
 11285                           ;inc\CANlib.h: 563: }
 11286  00235E  D078               	goto	i1l4186
 11287  002360                     i1l4162:
 11288                           
 11289                           ; BSR set to: 15
 11290                           ;inc\CANlib.h: 564: else
 11291                           ;inc\CANlib.h: 565: {
 11292                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 11293  002360  010F               	movlb	15	; () banked
 11294  002362  CF54 F028          	movff	3924,??_CANreceiveMessage	;volatile
 11295  002366  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11296  002368  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11297  00236A  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11298  00236C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11299  002370  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11300  002374  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 11301  002378  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11302  00237C  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11303  002380  C02B  FFDD         	movff	??_CANreceiveMessage+3,postdec2
 11304  002384  06D9               	decf	fsr2l,f,c
 11305  002386  06D9               	decf	fsr2l,f,c
 11306                           
 11307                           ; BSR set to: 15
 11308                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 11309  002388  010F               	movlb	15	; () banked
 11310  00238A  CF53 F028          	movff	3923,??_CANreceiveMessage	;volatile
 11311  00238E  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11312  002390  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11313  002392  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11314  002394  C02A  F02B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 11315  002398  C029  F02A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 11316  00239C  C028  F029         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 11317  0023A0  6A28               	clrf	??_CANreceiveMessage,c
 11318  0023A2  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11319  0023A6  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11320  0023AA  5028               	movf	??_CANreceiveMessage,w,c
 11321  0023AC  26DE               	addwf	postinc2,f,c
 11322  0023AE  5029               	movf	??_CANreceiveMessage+1,w,c
 11323  0023B0  22DE               	addwfc	postinc2,f,c
 11324  0023B2  502A               	movf	??_CANreceiveMessage+2,w,c
 11325  0023B4  22DE               	addwfc	postinc2,f,c
 11326  0023B6  502B               	movf	??_CANreceiveMessage+3,w,c
 11327  0023B8  22DD               	addwfc	postdec2,f,c
 11328  0023BA  52DD               	movf	postdec2,f,c
 11329  0023BC  52DD               	movf	postdec2,f,c
 11330                           
 11331                           ; BSR set to: 15
 11332                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 11333  0023BE  010F               	movlb	15	; () banked
 11334  0023C0  A152               	btfss	82,0,b	;volatile
 11335  0023C2  D006               	goto	i1l4170
 11336                           
 11337                           ; BSR set to: 15
 11338                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 11339  0023C4  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11340  0023C8  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11341  0023CC  0E02               	movlw	2
 11342  0023CE  80DB               	bsf	plusw2,0,c
 11343  0023D0                     i1l4170:
 11344                           
 11345                           ; BSR set to: 15
 11346                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 11347  0023D0  010F               	movlb	15	; () banked
 11348  0023D2  A352               	btfss	82,1,b	;volatile
 11349  0023D4  D006               	goto	i1l4174
 11350                           
 11351                           ; BSR set to: 15
 11352                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 11353  0023D6  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11354  0023DA  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11355  0023DE  0E02               	movlw	2
 11356  0023E0  82DB               	bsf	plusw2,1,c
 11357  0023E2                     i1l4174:
 11358                           
 11359                           ; BSR set to: 15
 11360                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 11361  0023E2  010F               	movlb	15	; () banked
 11362  0023E4  AB52               	btfss	82,5,b	;volatile
 11363  0023E6  D006               	goto	i1l4178
 11364                           
 11365                           ; BSR set to: 15
 11366                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 11367  0023E8  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11368  0023EC  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11369  0023F0  0E02               	movlw	2
 11370  0023F2  84DB               	bsf	plusw2,2,c
 11371  0023F4                     i1l4178:
 11372                           
 11373                           ; BSR set to: 15
 11374                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 11375  0023F4  010F               	movlb	15	; () banked
 11376  0023F6  AD52               	btfss	82,6,b	;volatile
 11377  0023F8  D006               	goto	i1l4182
 11378                           
 11379                           ; BSR set to: 15
 11380                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 11381  0023FA  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11382  0023FE  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11383  002402  0E02               	movlw	2
 11384  002404  86DB               	bsf	plusw2,3,c
 11385  002406                     i1l4182:
 11386                           
 11387                           ; BSR set to: 15
 11388                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 11389  002406  010F               	movlb	15	; () banked
 11390  002408  AF52               	btfss	82,7,b	;volatile
 11391  00240A  D006               	goto	i1l411
 11392                           
 11393                           ; BSR set to: 15
 11394                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 11395  00240C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11396  002410  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11397  002414  0E02               	movlw	2
 11398  002416  88DB               	bsf	plusw2,4,c
 11399  002418                     i1l411:
 11400                           
 11401                           ; BSR set to: 15
 11402                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 11403  002418  010F               	movlb	15	; () banked
 11404  00241A  CF51 F028          	movff	3921,??_CANreceiveMessage	;volatile
 11405  00241E  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11406  002420  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11407  002422  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11408  002424  0E15               	movlw	21
 11409  002426                     i1u497_25:
 11410  002426  90D8               	bcf	status,0,c
 11411  002428  3628               	rlcf	??_CANreceiveMessage,f,c
 11412  00242A  3629               	rlcf	??_CANreceiveMessage+1,f,c
 11413  00242C  362A               	rlcf	??_CANreceiveMessage+2,f,c
 11414  00242E  362B               	rlcf	??_CANreceiveMessage+3,f,c
 11415  002430  2EE8               	decfsz	wreg,f,c
 11416  002432  D7F9               	goto	i1u497_25
 11417  002434  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11418  002438  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11419  00243C  5028               	movf	??_CANreceiveMessage,w,c
 11420  00243E  12DE               	iorwf	postinc2,f,c
 11421  002440  5029               	movf	??_CANreceiveMessage+1,w,c
 11422  002442  12DE               	iorwf	postinc2,f,c
 11423  002444  502A               	movf	??_CANreceiveMessage+2,w,c
 11424  002446  12DE               	iorwf	postinc2,f,c
 11425  002448  502B               	movf	??_CANreceiveMessage+3,w,c
 11426  00244A  12DD               	iorwf	postdec2,f,c
 11427  00244C  52DD               	movf	postdec2,f,c
 11428  00244E  52DD               	movf	postdec2,f,c
 11429  002450                     i1l4186:
 11430                           
 11431                           ; BSR set to: 15
 11432                           ;inc\CANlib.h: 581: }
 11433                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 11434  002450  010F               	movlb	15	; () banked
 11435  002452  9F50               	bcf	80,7,b	;volatile
 11436  002454  0012               	return	
 11437  002456                     i1l404:
 11438                           
 11439                           ; BSR set to: 15
 11440                           ;inc\CANlib.h: 585: }
 11441                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 11442  002456  AE60               	btfss	3936,7,c	;volatile
 11443  002458  0012               	return	
 11444                           
 11445                           ; BSR set to: 15
 11446                           ;inc\CANlib.h: 588: {
 11447                           ;inc\CANlib.h: 589: msg->identifier = 0;
 11448  00245A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11449  00245E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11450  002462  6ADE               	clrf	postinc2,c
 11451  002464  6ADE               	clrf	postinc2,c
 11452  002466  6ADE               	clrf	postinc2,c
 11453  002468  6ADD               	clrf	postdec2,c
 11454                           
 11455                           ; BSR set to: 15
 11456                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 11457  00246A  EE20 F004          	lfsr	2,4
 11458  00246E  5026               	movf	CANreceiveMessage@msg,w,c
 11459  002470  26D9               	addwf	fsr2l,f,c
 11460  002472  5027               	movf	CANreceiveMessage@msg+1,w,c
 11461  002474  22DA               	addwfc	fsr2h,f,c
 11462  002476  CF66 FFDF          	movff	3942,indf2	;volatile
 11463                           
 11464                           ; BSR set to: 15
 11465                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 11466  00247A  EE20 F005          	lfsr	2,5
 11467  00247E  5026               	movf	CANreceiveMessage@msg,w,c
 11468  002480  26D9               	addwf	fsr2l,f,c
 11469  002482  5027               	movf	CANreceiveMessage@msg+1,w,c
 11470  002484  22DA               	addwfc	fsr2h,f,c
 11471  002486  CF67 FFDF          	movff	3943,indf2	;volatile
 11472                           
 11473                           ; BSR set to: 15
 11474                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 11475  00248A  EE20 F006          	lfsr	2,6
 11476  00248E  5026               	movf	CANreceiveMessage@msg,w,c
 11477  002490  26D9               	addwf	fsr2l,f,c
 11478  002492  5027               	movf	CANreceiveMessage@msg+1,w,c
 11479  002494  22DA               	addwfc	fsr2h,f,c
 11480  002496  CF68 FFDF          	movff	3944,indf2	;volatile
 11481                           
 11482                           ; BSR set to: 15
 11483                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 11484  00249A  EE20 F007          	lfsr	2,7
 11485  00249E  5026               	movf	CANreceiveMessage@msg,w,c
 11486  0024A0  26D9               	addwf	fsr2l,f,c
 11487  0024A2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11488  0024A4  22DA               	addwfc	fsr2h,f,c
 11489  0024A6  CF69 FFDF          	movff	3945,indf2	;volatile
 11490                           
 11491                           ; BSR set to: 15
 11492                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 11493  0024AA  EE20 F008          	lfsr	2,8
 11494  0024AE  5026               	movf	CANreceiveMessage@msg,w,c
 11495  0024B0  26D9               	addwf	fsr2l,f,c
 11496  0024B2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11497  0024B4  22DA               	addwfc	fsr2h,f,c
 11498  0024B6  CF6A FFDF          	movff	3946,indf2	;volatile
 11499                           
 11500                           ; BSR set to: 15
 11501                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 11502  0024BA  EE20 F009          	lfsr	2,9
 11503  0024BE  5026               	movf	CANreceiveMessage@msg,w,c
 11504  0024C0  26D9               	addwf	fsr2l,f,c
 11505  0024C2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11506  0024C4  22DA               	addwfc	fsr2h,f,c
 11507  0024C6  CF6B FFDF          	movff	3947,indf2	;volatile
 11508                           
 11509                           ; BSR set to: 15
 11510                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 11511  0024CA  EE20 F00A          	lfsr	2,10
 11512  0024CE  5026               	movf	CANreceiveMessage@msg,w,c
 11513  0024D0  26D9               	addwf	fsr2l,f,c
 11514  0024D2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11515  0024D4  22DA               	addwfc	fsr2h,f,c
 11516  0024D6  CF6C FFDF          	movff	3948,indf2	;volatile
 11517                           
 11518                           ; BSR set to: 15
 11519                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 11520  0024DA  EE20 F00B          	lfsr	2,11
 11521  0024DE  5026               	movf	CANreceiveMessage@msg,w,c
 11522  0024E0  26D9               	addwf	fsr2l,f,c
 11523  0024E2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11524  0024E4  22DA               	addwfc	fsr2h,f,c
 11525  0024E6  CF6D FFDF          	movff	3949,indf2	;volatile
 11526                           
 11527                           ; BSR set to: 15
 11528                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 11529  0024EA  EE20 F00E          	lfsr	2,14
 11530  0024EE  5026               	movf	CANreceiveMessage@msg,w,c
 11531  0024F0  26D9               	addwf	fsr2l,f,c
 11532  0024F2  5027               	movf	CANreceiveMessage@msg+1,w,c
 11533  0024F4  22DA               	addwfc	fsr2h,f,c
 11534  0024F6  AC65               	btfss	3941,6,c	;volatile
 11535  0024F8  D002               	goto	i1u499_20
 11536  0024FA  0E01               	movlw	1
 11537  0024FC  D001               	goto	i1u499_26
 11538  0024FE                     i1u499_20:
 11539  0024FE  0E00               	movlw	0
 11540  002500                     i1u499_26:
 11541  002500  6EDF               	movwf	indf2,c
 11542                           
 11543                           ; BSR set to: 15
 11544                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 11545  002502  EE20 F00D          	lfsr	2,13
 11546  002506  5026               	movf	CANreceiveMessage@msg,w,c
 11547  002508  26D9               	addwf	fsr2l,f,c
 11548  00250A  5027               	movf	CANreceiveMessage@msg+1,w,c
 11549  00250C  22DA               	addwfc	fsr2h,f,c
 11550  00250E  5065               	movf	3941,w,c	;volatile
 11551  002510  0B0F               	andlw	15
 11552  002512  6EDF               	movwf	indf2,c
 11553                           
 11554                           ; BSR set to: 15
 11555                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 11556  002514  EE20 F00C          	lfsr	2,12
 11557  002518  5026               	movf	CANreceiveMessage@msg,w,c
 11558  00251A  26D9               	addwf	fsr2l,f,c
 11559  00251C  5027               	movf	CANreceiveMessage@msg+1,w,c
 11560  00251E  22DA               	addwfc	fsr2h,f,c
 11561  002520  A662               	btfss	3938,3,c	;volatile
 11562  002522  D002               	goto	i1u500_20
 11563  002524  0E01               	movlw	1
 11564  002526  D001               	goto	i1u500_26
 11565  002528                     i1u500_20:
 11566  002528  0E00               	movlw	0
 11567  00252A                     i1u500_26:
 11568  00252A  6EDF               	movwf	indf2,c
 11569                           
 11570                           ; BSR set to: 15
 11571                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 11572  00252C  B662               	btfsc	3938,3,c	;volatile
 11573  00252E  D047               	goto	i1l4222
 11574                           
 11575                           ; BSR set to: 15
 11576                           ;inc\CANlib.h: 606: {
 11577                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 11578  002530  CF61 F028          	movff	3937,??_CANreceiveMessage	;volatile
 11579  002534  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11580  002536  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11581  002538  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11582  00253A  0E03               	movlw	3
 11583  00253C                     i1u502_25:
 11584  00253C  90D8               	bcf	status,0,c
 11585  00253E  3628               	rlcf	??_CANreceiveMessage,f,c
 11586  002540  3629               	rlcf	??_CANreceiveMessage+1,f,c
 11587  002542  362A               	rlcf	??_CANreceiveMessage+2,f,c
 11588  002544  362B               	rlcf	??_CANreceiveMessage+3,f,c
 11589  002546  2EE8               	decfsz	wreg,f,c
 11590  002548  D7F9               	goto	i1u502_25
 11591  00254A  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11592  00254E  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11593  002552  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 11594  002556  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11595  00255A  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11596  00255E  C02B  FFDD         	movff	??_CANreceiveMessage+3,postdec2
 11597  002562  06D9               	decf	fsr2l,f,c
 11598  002564  06D9               	decf	fsr2l,f,c
 11599                           
 11600                           ; BSR set to: 15
 11601                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 11602  002566  3862               	swapf	3938,w,c	;volatile
 11603  002568  42E8               	rrncf	wreg,f,c
 11604  00256A  0B07               	andlw	7
 11605  00256C  0B07               	andlw	7
 11606  00256E  6E31               	movwf	CANreceiveMessage@tamp,c
 11607                           
 11608                           ; BSR set to: 15
 11609                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 11610  002570  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11611  002574  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11612  002578  CFDE F028          	movff	postinc2,??_CANreceiveMessage
 11613  00257C  CFDE F029          	movff	postinc2,??_CANreceiveMessage+1
 11614  002580  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+2
 11615  002584  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+3
 11616  002588  5031               	movf	CANreceiveMessage@tamp,w,c
 11617  00258A  2428               	addwf	??_CANreceiveMessage,w,c
 11618  00258C  6E2C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 11619  00258E  0E00               	movlw	0
 11620  002590  2029               	addwfc	??_CANreceiveMessage+1,w,c
 11621  002592  6E2D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 11622  002594  0E00               	movlw	0
 11623  002596  202A               	addwfc	??_CANreceiveMessage+2,w,c
 11624  002598  6E2E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 11625  00259A  0E00               	movlw	0
 11626  00259C  202B               	addwfc	??_CANreceiveMessage+3,w,c
 11627  00259E  6E2F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 11628  0025A0  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11629  0025A4  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11630  0025A8  C02C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 11631  0025AC  C02D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 11632  0025B0  C02E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 11633  0025B4  C02F  FFDD         	movff	??_CANreceiveMessage+7,postdec2
 11634  0025B8  06D9               	decf	fsr2l,f,c
 11635  0025BA  06D9               	decf	fsr2l,f,c
 11636                           
 11637                           ;inc\CANlib.h: 610: }
 11638  0025BC  D070               	goto	i1l4246
 11639  0025BE                     i1l4222:
 11640                           
 11641                           ; BSR set to: 15
 11642                           ;inc\CANlib.h: 611: else
 11643                           ;inc\CANlib.h: 612: {
 11644                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 11645  0025BE  CF64 F028          	movff	3940,??_CANreceiveMessage	;volatile
 11646  0025C2  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11647  0025C4  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11648  0025C6  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11649  0025C8  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11650  0025CC  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11651  0025D0  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 11652  0025D4  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11653  0025D8  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11654  0025DC  C02B  FFDD         	movff	??_CANreceiveMessage+3,postdec2
 11655  0025E0  06D9               	decf	fsr2l,f,c
 11656  0025E2  06D9               	decf	fsr2l,f,c
 11657                           
 11658                           ; BSR set to: 15
 11659                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 11660  0025E4  CF63 F028          	movff	3939,??_CANreceiveMessage	;volatile
 11661  0025E8  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11662  0025EA  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11663  0025EC  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11664  0025EE  C02A  F02B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 11665  0025F2  C029  F02A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 11666  0025F6  C028  F029         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 11667  0025FA  6A28               	clrf	??_CANreceiveMessage,c
 11668  0025FC  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11669  002600  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11670  002604  5028               	movf	??_CANreceiveMessage,w,c
 11671  002606  26DE               	addwf	postinc2,f,c
 11672  002608  5029               	movf	??_CANreceiveMessage+1,w,c
 11673  00260A  22DE               	addwfc	postinc2,f,c
 11674  00260C  502A               	movf	??_CANreceiveMessage+2,w,c
 11675  00260E  22DE               	addwfc	postinc2,f,c
 11676  002610  502B               	movf	??_CANreceiveMessage+3,w,c
 11677  002612  22DD               	addwfc	postdec2,f,c
 11678  002614  52DD               	movf	postdec2,f,c
 11679  002616  52DD               	movf	postdec2,f,c
 11680                           
 11681                           ; BSR set to: 15
 11682                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 11683  002618  A062               	btfss	3938,0,c	;volatile
 11684  00261A  D006               	goto	i1l4230
 11685                           
 11686                           ; BSR set to: 15
 11687                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 11688  00261C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11689  002620  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11690  002624  0E02               	movlw	2
 11691  002626  80DB               	bsf	plusw2,0,c
 11692  002628                     i1l4230:
 11693                           
 11694                           ; BSR set to: 15
 11695                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 11696  002628  A262               	btfss	3938,1,c	;volatile
 11697  00262A  D006               	goto	i1l4234
 11698                           
 11699                           ; BSR set to: 15
 11700                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 11701  00262C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11702  002630  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11703  002634  0E02               	movlw	2
 11704  002636  82DB               	bsf	plusw2,1,c
 11705  002638                     i1l4234:
 11706                           
 11707                           ; BSR set to: 15
 11708                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 11709  002638  AA62               	btfss	3938,5,c	;volatile
 11710  00263A  D006               	goto	i1l4238
 11711                           
 11712                           ; BSR set to: 15
 11713                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 11714  00263C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11715  002640  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11716  002644  0E02               	movlw	2
 11717  002646  84DB               	bsf	plusw2,2,c
 11718  002648                     i1l4238:
 11719                           
 11720                           ; BSR set to: 15
 11721                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 11722  002648  AC62               	btfss	3938,6,c	;volatile
 11723  00264A  D006               	goto	i1l4242
 11724                           
 11725                           ; BSR set to: 15
 11726                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 11727  00264C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11728  002650  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11729  002654  0E02               	movlw	2
 11730  002656  86DB               	bsf	plusw2,3,c
 11731  002658                     i1l4242:
 11732                           
 11733                           ; BSR set to: 15
 11734                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 11735  002658  AE62               	btfss	3938,7,c	;volatile
 11736  00265A  D006               	goto	i1l420
 11737                           
 11738                           ; BSR set to: 15
 11739                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 11740  00265C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11741  002660  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11742  002664  0E02               	movlw	2
 11743  002666  88DB               	bsf	plusw2,4,c
 11744  002668                     i1l420:
 11745                           
 11746                           ; BSR set to: 15
 11747                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 11748  002668  CF61 F028          	movff	3937,??_CANreceiveMessage	;volatile
 11749  00266C  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11750  00266E  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11751  002670  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11752  002672  0E15               	movlw	21
 11753  002674                     i1u508_25:
 11754  002674  90D8               	bcf	status,0,c
 11755  002676  3628               	rlcf	??_CANreceiveMessage,f,c
 11756  002678  3629               	rlcf	??_CANreceiveMessage+1,f,c
 11757  00267A  362A               	rlcf	??_CANreceiveMessage+2,f,c
 11758  00267C  362B               	rlcf	??_CANreceiveMessage+3,f,c
 11759  00267E  2EE8               	decfsz	wreg,f,c
 11760  002680  D7F9               	goto	i1u508_25
 11761  002682  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11762  002686  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11763  00268A  5028               	movf	??_CANreceiveMessage,w,c
 11764  00268C  12DE               	iorwf	postinc2,f,c
 11765  00268E  5029               	movf	??_CANreceiveMessage+1,w,c
 11766  002690  12DE               	iorwf	postinc2,f,c
 11767  002692  502A               	movf	??_CANreceiveMessage+2,w,c
 11768  002694  12DE               	iorwf	postinc2,f,c
 11769  002696  502B               	movf	??_CANreceiveMessage+3,w,c
 11770  002698  12DD               	iorwf	postdec2,f,c
 11771  00269A  52DD               	movf	postdec2,f,c
 11772  00269C  52DD               	movf	postdec2,f,c
 11773  00269E                     i1l4246:
 11774                           
 11775                           ; BSR set to: 15
 11776                           ;inc\CANlib.h: 629: }
 11777                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 11778  00269E  9E60               	bcf	3936,7,c	;volatile
 11779  0026A0  0012               	return	
 11780  0026A2                     __end_of_CANreceiveMessage:
 11781                           	opt stack 0
 11782                           pclatu	equ	0xFFB
 11783                           pclath	equ	0xFFA
 11784                           tblptru	equ	0xFF8
 11785                           tblptrh	equ	0xFF7
 11786                           tblptrl	equ	0xFF6
 11787                           tablat	equ	0xFF5
 11788                           prodh	equ	0xFF4
 11789                           prodl	equ	0xFF3
 11790                           intcon	equ	0xFF2
 11791                           intcon2	equ	0xFF1
 11792                           postinc0	equ	0xFEE
 11793                           fsr0h	equ	0xFEA
 11794                           fsr0l	equ	0xFE9
 11795                           wreg	equ	0xFE8
 11796                           indf1	equ	0xFE7
 11797                           fsr1h	equ	0xFE2
 11798                           fsr1l	equ	0xFE1
 11799                           bsr	equ	0xFE0
 11800                           indf2	equ	0xFDF
 11801                           postinc2	equ	0xFDE
 11802                           postdec2	equ	0xFDD
 11803                           plusw2	equ	0xFDB
 11804                           fsr2h	equ	0xFDA
 11805                           fsr2l	equ	0xFD9
 11806                           status	equ	0xFD8
 11807                           
 11808 ;; *************** function _ISR_Alta *****************
 11809 ;; Defined at:
 11810 ;;		line 71 in file "parcheggio.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;		None
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;		None
 11815 ;; Return value:  Size  Location     Type
 11816 ;;		None               void
 11817 ;; Registers used:
 11818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;Total ram usage:       14 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:    1
 11831 ;; This function calls:
 11832 ;;		___lwdiv
 11833 ;; This function is called by:
 11834 ;;		Interrupt level 2
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	intcode
 11839  000008                     __pintcode:
 11840                           	opt stack 0
 11841  000008                     _ISR_Alta:
 11842                           	opt stack 21
 11843                           
 11844                           ; BSR set to: 15
 11845                           ;incstack = 0
 11846  000008  CFFA F067          	movff	pclath,??_ISR_Alta
 11847  00000C  CFFB F068          	movff	pclatu,??_ISR_Alta+1
 11848  000010  CFE9 F069          	movff	fsr0l,??_ISR_Alta+2
 11849  000014  EFF9  F021         	goto	int_func
 11850                           pclatu	equ	0xFFB
 11851                           pclath	equ	0xFFA
 11852                           tblptru	equ	0xFF8
 11853                           tblptrh	equ	0xFF7
 11854                           tblptrl	equ	0xFF6
 11855                           tablat	equ	0xFF5
 11856                           prodh	equ	0xFF4
 11857                           prodl	equ	0xFF3
 11858                           intcon	equ	0xFF2
 11859                           intcon2	equ	0xFF1
 11860                           postinc0	equ	0xFEE
 11861                           fsr0h	equ	0xFEA
 11862                           fsr0l	equ	0xFE9
 11863                           wreg	equ	0xFE8
 11864                           indf1	equ	0xFE7
 11865                           fsr1h	equ	0xFE2
 11866                           fsr1l	equ	0xFE1
 11867                           bsr	equ	0xFE0
 11868                           indf2	equ	0xFDF
 11869                           postinc2	equ	0xFDE
 11870                           postdec2	equ	0xFDD
 11871                           plusw2	equ	0xFDB
 11872                           fsr2h	equ	0xFDA
 11873                           fsr2l	equ	0xFD9
 11874                           status	equ	0xFD8
 11875                           
 11876                           	psect	intcode_body
 11877  0043F2                     __pintcode_body:
 11878                           	opt stack 21
 11879  0043F2                     int_func:
 11880                           	opt stack 21
 11881  0043F2  CFEA F06A          	movff	fsr0h,??_ISR_Alta+3
 11882  0043F6  CFE1 F06B          	movff	fsr1l,??_ISR_Alta+4
 11883  0043FA  CFE2 F06C          	movff	fsr1h,??_ISR_Alta+5
 11884  0043FE  CFD9 F06D          	movff	fsr2l,??_ISR_Alta+6
 11885  004402  CFDA F06E          	movff	fsr2h,??_ISR_Alta+7
 11886  004406  CFF3 F06F          	movff	prodl,??_ISR_Alta+8
 11887  00440A  CFF4 F070          	movff	prodh,??_ISR_Alta+9
 11888  00440E  CFF6 F071          	movff	tblptrl,??_ISR_Alta+10
 11889  004412  CFF7 F072          	movff	tblptrh,??_ISR_Alta+11
 11890  004416  CFF8 F073          	movff	tblptru,??_ISR_Alta+12
 11891  00441A  CFF5 F074          	movff	tablat,??_ISR_Alta+13
 11892                           
 11893                           ;parcheggio.c: 73: if (INTCON2bits.INTEDG0 == 1) {
 11894  00441E  ACF1               	btfss	intcon2,6,c	;volatile
 11895  004420  D008               	goto	i2l648
 11896                           
 11897                           ;parcheggio.c: 74: INTCON2bits.INTEDG0 = 0;
 11898  004422  9CF1               	bcf	intcon2,6,c	;volatile
 11899                           
 11900                           ;parcheggio.c: 75: TMR3H = 0;
 11901  004424  0E00               	movlw	0
 11902  004426  6EB3               	movwf	4019,c	;volatile
 11903                           
 11904                           ;parcheggio.c: 76: TMR3L = 0;
 11905  004428  0E00               	movlw	0
 11906  00442A  6EB2               	movwf	4018,c	;volatile
 11907                           
 11908                           ;parcheggio.c: 77: distance_error = 0;
 11909  00442C  0100               	movlb	(_distance_error/(0+8)) shr (0+8)
 11910  00442E  9447               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 11911                           
 11912                           ;parcheggio.c: 78: } else {
 11913  004430  D02B               	goto	i2l4926
 11914  004432                     i2l648:
 11915                           
 11916                           ;parcheggio.c: 79: gianni = TMR3H;
 11917  004432  CFB3 F025          	movff	4019,_gianni	;volatile
 11918                           
 11919                           ;parcheggio.c: 80: asus = TMR3L;
 11920  004436  CFB2 F024          	movff	4018,_asus	;volatile
 11921                           
 11922                           ;parcheggio.c: 81: timerValue2 = gianni;
 11923  00443A  C025  F021         	movff	_gianni,_timerValue2	;volatile
 11924  00443E  6A22               	clrf	_timerValue2+1,c	;volatile
 11925                           
 11926                           ;parcheggio.c: 82: timerValue2 = ((timerValue2 << 8) | (asus));
 11927  004440  5021               	movf	_timerValue2,w,c	;volatile
 11928  004442  6E22               	movwf	_timerValue2+1,c	;volatile
 11929  004444  5024               	movf	_asus,w,c	;volatile
 11930  004446  6E21               	movwf	_timerValue2,c	;volatile
 11931                           
 11932                           ;parcheggio.c: 83: pulse_time = timerValue2 / 2;
 11933  004448  90D8               	bcf	status,0,c
 11934  00444A  3022               	rrcf	_timerValue2+1,w,c	;volatile
 11935  00444C  6E1E               	movwf	_pulse_time+1,c	;volatile
 11936  00444E  3021               	rrcf	_timerValue2,w,c	;volatile
 11937  004450  6E1D               	movwf	_pulse_time,c	;volatile
 11938                           
 11939                           ;parcheggio.c: 84: sensor_distance[MUX_index] = pulse_time / 58;
 11940  004452  C01D  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 11941  004456  C01E  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 11942  00445A  0E00               	movlw	0
 11943  00445C  0100               	movlb	0	; () banked
 11944  00445E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11945  004460  0E3A               	movlw	58
 11946  004462  0100               	movlb	0	; () banked
 11947  004464  6F62               	movwf	___lwdiv@divisor& (0+255),b
 11948  004466  EC62  F022         	call	___lwdiv	;wreg free
 11949  00446A  5023               	movf	_MUX_index,w,c	;volatile
 11950  00446C  0D02               	mullw	2
 11951  00446E  0E01               	movlw	low _sensor_distance	;volatile
 11952  004470  24F3               	addwf	prodl,w,c
 11953  004472  6ED9               	movwf	fsr2l,c
 11954  004474  0E00               	movlw	high _sensor_distance	;volatile
 11955  004476  20F4               	addwfc	prodh,w,c
 11956  004478  6EDA               	movwf	fsr2h,c
 11957  00447A  0100               	movlb	0	; () banked
 11958  00447C  C060  FFDE         	movff	?___lwdiv,postinc2
 11959  004480  0100               	movlb	0	; () banked
 11960  004482  C061  FFDD         	movff	?___lwdiv+1,postdec2
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;parcheggio.c: 85: INTCON2bits.INTEDG0 = 1;
 11964  004486  8CF1               	bsf	intcon2,6,c	;volatile
 11965  004488                     i2l4926:
 11966                           
 11967                           ;parcheggio.c: 86: }
 11968                           ;parcheggio.c: 87: INTCONbits.INT0IF = 0;
 11969  004488  92F2               	bcf	intcon,1,c	;volatile
 11970  00448A  C074  FFF5         	movff	??_ISR_Alta+13,tablat
 11971  00448E  C073  FFF8         	movff	??_ISR_Alta+12,tblptru
 11972  004492  C072  FFF7         	movff	??_ISR_Alta+11,tblptrh
 11973  004496  C071  FFF6         	movff	??_ISR_Alta+10,tblptrl
 11974  00449A  C070  FFF4         	movff	??_ISR_Alta+9,prodh
 11975  00449E  C06F  FFF3         	movff	??_ISR_Alta+8,prodl
 11976  0044A2  C06E  FFDA         	movff	??_ISR_Alta+7,fsr2h
 11977  0044A6  C06D  FFD9         	movff	??_ISR_Alta+6,fsr2l
 11978  0044AA  C06C  FFE2         	movff	??_ISR_Alta+5,fsr1h
 11979  0044AE  C06B  FFE1         	movff	??_ISR_Alta+4,fsr1l
 11980  0044B2  C06A  FFEA         	movff	??_ISR_Alta+3,fsr0h
 11981  0044B6  C069  FFE9         	movff	??_ISR_Alta+2,fsr0l
 11982  0044BA  C068  FFFB         	movff	??_ISR_Alta+1,pclatu
 11983  0044BE  C067  FFFA         	movff	??_ISR_Alta,pclath
 11984  0044C2  0011               	retfie		f
 11985  0044C4                     __end_of_ISR_Alta:
 11986                           	opt stack 0
 11987                           pclatu	equ	0xFFB
 11988                           pclath	equ	0xFFA
 11989                           tblptru	equ	0xFF8
 11990                           tblptrh	equ	0xFF7
 11991                           tblptrl	equ	0xFF6
 11992                           tablat	equ	0xFF5
 11993                           prodh	equ	0xFF4
 11994                           prodl	equ	0xFF3
 11995                           intcon	equ	0xFF2
 11996                           intcon2	equ	0xFF1
 11997                           postinc0	equ	0xFEE
 11998                           fsr0h	equ	0xFEA
 11999                           fsr0l	equ	0xFE9
 12000                           wreg	equ	0xFE8
 12001                           indf1	equ	0xFE7
 12002                           fsr1h	equ	0xFE2
 12003                           fsr1l	equ	0xFE1
 12004                           bsr	equ	0xFE0
 12005                           indf2	equ	0xFDF
 12006                           postinc2	equ	0xFDE
 12007                           postdec2	equ	0xFDD
 12008                           plusw2	equ	0xFDB
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013 ;; *************** function ___lwdiv *****************
 12014 ;; Defined at:
 12015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  dividend        2    0[BANK0 ] unsigned int 
 12018 ;;  divisor         2    2[BANK0 ] unsigned int 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  quotient        2    4[BANK0 ] unsigned int 
 12021 ;;  counter         1    6[BANK0 ] unsigned char 
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  2    0[BANK0 ] unsigned int 
 12024 ;; Registers used:
 12025 ;;		wreg, status,2, status,0
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 0/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;Total ram usage:        7 bytes
 12036 ;; Hardware stack levels used:    1
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_ISR_Alta
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text32
 12045  0044C4                     __ptext32:
 12046                           	opt stack 0
 12047  0044C4                     ___lwdiv:
 12048                           	opt stack 21
 12049                           
 12050                           ;incstack = 0
 12051  0044C4  0E00               	movlw	0
 12052  0044C6  0100               	movlb	0	; () banked
 12053  0044C8  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12054  0044CA  0E00               	movlw	0
 12055  0044CC  0100               	movlb	0	; () banked
 12056  0044CE  6F64               	movwf	___lwdiv@quotient& (0+255),b
 12057                           
 12058                           ; BSR set to: 0
 12059  0044D0  0100               	movlb	0	; () banked
 12060  0044D2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12061  0044D4  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
 12062  0044D6  B4D8               	btfsc	status,2,c
 12063  0044D8  D02C               	goto	i2l1292
 12064                           
 12065                           ; BSR set to: 0
 12066  0044DA  0E01               	movlw	1
 12067  0044DC  0100               	movlb	0	; () banked
 12068  0044DE  6F66               	movwf	___lwdiv@counter& (0+255),b
 12069  0044E0  D006               	goto	i2l4896
 12070  0044E2                     i2l4894:
 12071                           
 12072                           ; BSR set to: 0
 12073  0044E2  0100               	movlb	0	; () banked
 12074  0044E4  90D8               	bcf	status,0,c
 12075  0044E6  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 12076  0044E8  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12077  0044EA  0100               	movlb	0	; () banked
 12078  0044EC  2B66               	incf	___lwdiv@counter& (0+255),f,b
 12079  0044EE                     i2l4896:
 12080                           
 12081                           ; BSR set to: 0
 12082  0044EE  0100               	movlb	0	; () banked
 12083  0044F0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12084  0044F2  D7F7               	goto	i2l4894
 12085  0044F4                     i2l4898:
 12086                           
 12087                           ; BSR set to: 0
 12088  0044F4  0100               	movlb	0	; () banked
 12089  0044F6  90D8               	bcf	status,0,c
 12090  0044F8  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 12091  0044FA  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12092                           
 12093                           ; BSR set to: 0
 12094  0044FC  0100               	movlb	0	; () banked
 12095  0044FE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12096  004500  0100               	movlb	0	; () banked
 12097  004502  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 12098  004504  0100               	movlb	0	; () banked
 12099  004506  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12100  004508  0100               	movlb	0	; () banked
 12101  00450A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12102  00450C  A0D8               	btfss	status,0,c
 12103  00450E  D00A               	goto	i2l4906
 12104                           
 12105                           ; BSR set to: 0
 12106  004510  0100               	movlb	0	; () banked
 12107  004512  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12108  004514  0100               	movlb	0	; () banked
 12109  004516  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 12110  004518  0100               	movlb	0	; () banked
 12111  00451A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12112  00451C  0100               	movlb	0	; () banked
 12113  00451E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12114                           
 12115                           ; BSR set to: 0
 12116  004520  0100               	movlb	0	; () banked
 12117  004522  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 12118  004524                     i2l4906:
 12119                           
 12120                           ; BSR set to: 0
 12121  004524  0100               	movlb	0	; () banked
 12122  004526  90D8               	bcf	status,0,c
 12123  004528  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12124  00452A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127  00452C  0100               	movlb	0	; () banked
 12128  00452E  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 12129  004530  D7E1               	goto	i2l4898
 12130  004532                     i2l1292:
 12131                           
 12132                           ; BSR set to: 0
 12133  004532  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 12134  004536  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12135                           
 12136                           ; BSR set to: 0
 12137  00453A  0012               	return	
 12138  00453C                     __end_of___lwdiv:
 12139                           	opt stack 0
 12140                           pclatu	equ	0xFFB
 12141                           pclath	equ	0xFFA
 12142                           tblptru	equ	0xFF8
 12143                           tblptrh	equ	0xFF7
 12144                           tblptrl	equ	0xFF6
 12145                           tablat	equ	0xFF5
 12146                           prodh	equ	0xFF4
 12147                           prodl	equ	0xFF3
 12148                           intcon	equ	0xFF2
 12149                           intcon2	equ	0xFF1
 12150                           postinc0	equ	0xFEE
 12151                           fsr0h	equ	0xFEA
 12152                           fsr0l	equ	0xFE9
 12153                           wreg	equ	0xFE8
 12154                           indf1	equ	0xFE7
 12155                           fsr1h	equ	0xFE2
 12156                           fsr1l	equ	0xFE1
 12157                           bsr	equ	0xFE0
 12158                           indf2	equ	0xFDF
 12159                           postinc2	equ	0xFDE
 12160                           postdec2	equ	0xFDD
 12161                           plusw2	equ	0xFDB
 12162                           fsr2h	equ	0xFDA
 12163                           fsr2l	equ	0xFD9
 12164                           status	equ	0xFD8
 12165                           pclatu	equ	0xFFB
 12166                           pclath	equ	0xFFA
 12167                           tblptru	equ	0xFF8
 12168                           tblptrh	equ	0xFF7
 12169                           tblptrl	equ	0xFF6
 12170                           tablat	equ	0xFF5
 12171                           prodh	equ	0xFF4
 12172                           prodl	equ	0xFF3
 12173                           intcon	equ	0xFF2
 12174                           intcon2	equ	0xFF1
 12175                           postinc0	equ	0xFEE
 12176                           fsr0h	equ	0xFEA
 12177                           fsr0l	equ	0xFE9
 12178                           wreg	equ	0xFE8
 12179                           indf1	equ	0xFE7
 12180                           fsr1h	equ	0xFE2
 12181                           fsr1l	equ	0xFE1
 12182                           bsr	equ	0xFE0
 12183                           indf2	equ	0xFDF
 12184                           postinc2	equ	0xFDE
 12185                           postdec2	equ	0xFDD
 12186                           plusw2	equ	0xFDB
 12187                           fsr2h	equ	0xFDA
 12188                           fsr2l	equ	0xFD9
 12189                           status	equ	0xFD8
 12190                           
 12191                           	psect	param0
 12192  0000                     pclatu	equ	0xFFB
 12193                           pclath	equ	0xFFA
 12194                           tblptru	equ	0xFF8
 12195                           tblptrh	equ	0xFF7
 12196                           tblptrl	equ	0xFF6
 12197                           tablat	equ	0xFF5
 12198                           prodh	equ	0xFF4
 12199                           prodl	equ	0xFF3
 12200                           intcon	equ	0xFF2
 12201                           intcon2	equ	0xFF1
 12202                           postinc0	equ	0xFEE
 12203                           fsr0h	equ	0xFEA
 12204                           fsr0l	equ	0xFE9
 12205                           wreg	equ	0xFE8
 12206                           indf1	equ	0xFE7
 12207                           fsr1h	equ	0xFE2
 12208                           fsr1l	equ	0xFE1
 12209                           bsr	equ	0xFE0
 12210                           indf2	equ	0xFDF
 12211                           postinc2	equ	0xFDE
 12212                           postdec2	equ	0xFDD
 12213                           plusw2	equ	0xFDB
 12214                           fsr2h	equ	0xFDA
 12215                           fsr2l	equ	0xFD9
 12216                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    44
    Data        3
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      74
    BANK0           160    114     136
    BANK1           256     45     108
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_CANsendMessage
    _park_routine->_can_send
    _can_send->_CANsendMessage
    _parallelo->___fltol
    _asin->_atan
    _sqrt->___flsub
    ___flsub->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___flpack
    ___fladd->___fldiv
    ___flge->_fabs
    ___fldiv->___flneg
    ___lbtofl->___flpack
    ___fltol->_sqrt
    ___awtofl->___flpack
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_parallelo
    _parallelo->_asin
    _asin->_atan
    _asin->_sqrt
    ___fltol->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   77802
                    _can_interpreter
                     _configurazione
                          _parallelo
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0    3607
                                             37 BANK0      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                                _abs
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0    3435
                           _can_send
 ---------------------------------------------------------------------------------
 (2) _can_send                                             3     3      0    3435
                                             37 BANK0      3     3      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3411
                                             21 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _parallelo                                            4     4      0   65057
                                             41 BANK1      4     4      0
                           ___awtofl
                            ___fldiv
                            ___fltol
                           ___lbtofl
                                _abs
                               _asin
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _asin                                                40    36      4   47043
                                            108 BANK0      4     0      4
                                             17 BANK1     24    24      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                25    21      4    9688
                                             96 BANK0      8     4      4
                                              0 BANK1     17    17      0
                           ___awtofl (ARG)
                             ___flge
                            ___flmul
                            ___flneg (ARG)
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4435
                                             88 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) _atan                                                21    17      4   22878
                                            104 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 4     0      4     873
                                             54 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     585
                                             50 BANK0      4     0      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8639
                                             88 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             19    11      8    3845
                                             31 BANK0     19    11      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             15     7      8    4150
                                             73 BANK0     15     7      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     718
                                             58 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             19    11      8    3384
                                             54 BANK0     19    11      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     172
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lbtofl                                             5     1      4    2128
                                             31 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     282
                                            104 BANK0     10     6      4
                           ___awtofl (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtofl                                             9     5      4    2360
                                             31 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (5) ___flpack                                            10     4      6    2097
                                             21 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5703
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5703
                                             35 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1242
                                             21 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3726
                                             21 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      2     2      0       0
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           21    21      0    1240
                                             12 COMRAM    21    21      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1126
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            14    14      0     268
                                              7 BANK0     14    14      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     268
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _parallelo
     ___awtofl
       ___flpack
     ___fldiv
       ___awtofl (ARG)
         ___flpack
       ___flmul (ARG)
         ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___fltol
       ___awtofl (ARG)
         ___flpack
       _sqrt (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flge (ARG)
           _fabs (ARG)
             ___flneg
               ___flmul (ARG)
                 ___flpack
         ___flmul (ARG)
           ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___flpack
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___flpack
               ___flneg (ARG)
                 ___flmul (ARG)
                   ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___flmul (ARG)
               ___flpack
             ___flneg (ARG)
               ___flmul (ARG)
                 ___flpack
             ___flpack (ARG)
     ___lbtofl
       ___flpack
     _abs
     _asin
       ___fladd
         ___fldiv (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flmul (ARG)
           ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___flpack
         ___flpack (ARG)
       ___fldiv
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flge
         _fabs (ARG)
           ___flneg
             ___flmul (ARG)
               ___flpack
       ___flmul
         ___flpack
       ___flneg
         ___flmul (ARG)
           ___flpack
       _atan
         ___fladd
           ___fldiv (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___flpack
             ___flneg (ARG)
               ___flmul (ARG)
                 ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flmul (ARG)
             ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___flpack
           ___flpack (ARG)
         ___fldiv
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flge
           _fabs (ARG)
             ___flneg
               ___flmul (ARG)
                 ___flpack
         ___flmul
           ___flpack
         ___flneg
           ___flmul (ARG)
             ___flpack
         _eval_poly
           ___fladd
             ___fldiv (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___flpack
               ___flneg (ARG)
                 ___flmul (ARG)
                   ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___flmul (ARG)
               ___flpack
             ___flneg (ARG)
               ___flmul (ARG)
                 ___flpack
             ___flpack (ARG)
           ___flmul
             ___flpack
         _fabs
           ___flneg
             ___flmul (ARG)
               ___flpack
       _fabs
         ___flneg
           ___flmul (ARG)
             ___flpack
       _sqrt
         ___awtofl (ARG)
           ___flpack
         ___flge (ARG)
           _fabs (ARG)
             ___flneg
               ___flmul (ARG)
                 ___flpack
         ___flmul (ARG)
           ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___flpack
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___flpack
               ___flneg (ARG)
                 ___flmul (ARG)
                   ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___flmul (ARG)
               ___flpack
             ___flneg (ARG)
               ___flmul (ARG)
                 ___flpack
             ___flpack (ARG)
     _sqrt
       ___awtofl (ARG)
         ___flpack
       ___flge (ARG)
         _fabs (ARG)
           ___flneg
             ___flmul (ARG)
               ___flpack
       ___flmul (ARG)
         ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___flpack
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___flpack
             ___flneg (ARG)
               ___flmul (ARG)
                 ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flmul (ARG)
             ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___flpack
           ___flpack (ARG)
   _park_routine
     _can_send
       _CANisTxReady
       _CANsendMessage
   _park_search
     _CANisTxReady
     _CANsendMessage
     _abs

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2D      6C       7       42.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     72      88       5       85.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     21      4A       1       77.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      20        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Apr 18 12:58:12 2016

                           _x 00E4                             _z 00DA                  ___fldiv@cntr 00A6  
        __end_of_CANSetFilter 1958                  ___fldiv@sign 00A8                            bsr 000FE0  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_OSC$HS 000000  
                ___flpack@arg 0075                  ___flpack@exp 0079                    _MUX_select 00D2  
                         l501 1786                           l502 178A                           l430 28F6  
                         l503 1796                           l431 28FA                           l520 18FE  
                         l512 18BE                           l504 179A                           l440 2A1E  
                         l432 2906                           l352 3664                           l360 1A86  
                         l513 18C2                           l505 17A6                           l441 2A2A  
                         l433 290A                           l353 366E                           l361 1A08  
                         l514 18CE                           l506 17AA                           l442 2A2E  
                         l434 2916                           l426 28D6                           l362 1A12  
                         l515 18D2                           l507 17B6                           l443 2A3A  
                         l427 28DA                           l363 1A1C                           l516 18DE  
                         l508 17BA                           l460 12BC                           l444 2A3E  
                         l428 28E6                           l372 1EFC                           l364 1A26  
                         l517 18E2                           l509 17C6                           l461 12C8  
                         l445 2A4A                           l437 2A0A                           l429 28EA  
                         l373 1C40                           l357 1C2A                           l518 18EE  
                         l470 13EE                           l462 12CC                           l438 2A0E  
                         l550 486E                           l390 1FAC                           l382 1E2C  
                         l374 1C44                           l358 196E                           l519 18F2  
                         l471 13F2                           l463 12D8                           l439 2A1A  
                         l391 1FB6                           l383 1E30                           l375 1D58  
                         l367 1B5A                           l359 1972                           l480 151A  
                         l472 13FE                           l464 12DC                           l720 40A6  
                         l392 1FC0                           l384 1E3C                           l376 1CDA  
                         l368 1B5E                           l481 1526                           l473 1402  
                         l465 12E8                           l457 12A8                           l393 1FCA  
                         l377 1CE4                           l369 1B6A                           l490 164E  
                         l482 152A                           l474 140E                           l458 12AC  
                         l378 1CEE                           l491 1652                           l483 1536  
                         l475 1412                           l459 12B8                           l387 1F12  
                         l379 1CF8                           l492 165E                           l484 153A  
                         l476 141E                           l468 13DE                           l396 20FE  
                         l388 1F16                           l493 1662                           l485 1546  
                         l469 13E2                           l397 2102                           l389 202A  
                         l494 166E                           l486 154A                           l398 210E  
                         l495 1672                           l487 1556                           l479 1516  
                         l496 167E                           l497 1682                           l905 31B0  
                         l498 168E                           l690 3F54                           l677 3F5A  
                         l779 476E                           l886 2C5C                           l996 3BC0  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 4738  
                         _dir 0239                           _msg 0110                           fsr2 000FD9  
                         prod 000FF3                           wreg 000FE8                  ___flmul@cntr 0090  
             ?_configurazione 0026                  ___flmul@sign 0091                  __CFG_LVP$OFF 000000  
               ___flpack@sign 007A                  ___fltol@exp1 00D1                  __CFG_WDT$OFF 000000  
                        l1002 3C34                          l1022 2E82                          l1014 47A4  
                        l1026 2EC0                          ?_abs 0075                          l1028 2EEC  
                        l1037 2FF2                          l1062 4296                          l1324 33A6  
                        l1325 338C                          l3300 296E                          l4004 42F2  
                        l4110 3DF4                          l4102 3DB0                          l4014 4360  
                        l4104 3DC8                          l3234 487C                          l4106 3DCE  
                        l4018 43A8                          l3404 106C                          l3252 2770  
                        l3502 1422                          l3422 113C                          l3350 0DFE  
                        l3326 2A4E                          l3440 120C                          l4304 3E1A  
                        l3610 181E                          l4322 3EB6                          l4314 3E6A  
                        l3604 17CA                          l3508 1476                          l3268 283C  
                        l4092 3D72                          l4076 3CE6                          l4316 3EA0  
                        l3542 15AE                          l3294 291A                          l3702 1B6E  
                        l4326 3EF8                          l3536 155A                          l3368 0ECC  
                        l4096 3D8E                          l4600 2FD0                          l3570 1692  
                        l3474 1340                          l3386 0F9C                          l4530 3B44  
                        l4610 3056                          l4602 2FE8                          l3468 12EC  
                        l4540 3BF8                          l4532 3B5C                          l4620 30B4  
                        l4372 482E                          l3638 1902                          l4550 3C80  
                        l4542 3C10                          l4534 3B94                          l4526 3B2A  
                        l4606 3024                          l4630 37E4                          l3576 16E6  
                        l3752 1D02                          l4376 4844                          l4714 3ACC  
                        l4706 3A70                          l4562 2E94                          l4810 3324  
                        l4298 3E08                          l4660 38EC                          l4652 38B8  
                        l4636 3838                          l4820 2B0E                          l3828 1FD4  
                        l3772 1E20                          l3676 1A30                          l4750 42EE  
                        l4590 2F80                          l4582 2F30                          l4574 2EE2  
                        l4806 330C                          l3854 2112                          l4744 423C  
                        l4592 2F8C                          l4568 2ED2                          l4664 3912  
                        l4648 3892                          l4736 4112                          l3848 20F2  
                        l3696 1B4E                          l4594 2F98                          l4738 41C6  
                        l4770 343C                          l3778 1E40                          l4588 2F68  
                        l4844 2D44                          l3990 367A                          l4694 3A16  
                        l4678 47E0                          l3992 36BC                          l3984 365C  
                        l4688 39C2                          l4858 45D4                          l4794 3132  
                        l4954 4646                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u3220 26DE                          u3225 26D2  
                        u3235 274C                          u3500 0E3A                          u3260 27AA  
                        u4150 192A                          u4070 17F2                          u3430 2A76  
                        u3350 2942                          u4240 1A58                          u3505 0E2E  
                        u3265 279E                          u4250 1AB2                          u4155 191E  
                        u4075 17E6                          u3515 0EA8                          u3435 2A6A  
                        u3355 2936                          u3275 2818                          u3620 10AA  
                        u3540 0F0A                          u3460 0D6C                          u4500 1FFC  
                        u4245 1A4C                          u4510 2056                          u4255 1AA6  
                        u3625 109E                          u3545 0EFE                          u3465 0D60  
                        u4505 1FF0                          u4265 1B20                          u4370 1D2A  
                        u3635 1118                          u3555 0F78                          u3475 0DDA  
                        u4515 204A                          u3660 117A                          u3580 0FDA  
                        u4380 1D84                          u4525 20C4                          u3910 1582  
                        u3830 144A                          u3750 1314                          u4375 1D1E  
                        u3665 116E                          u3585 0FCE                          u4385 1D78  
                        u3915 1576                          u3835 143E                          u3755 1308  
                        u3675 11E8                          u3595 1048                          u4395 1DF2  
                        u5460 2E16                          u5470 2E4A                          u5465 2E0A  
                        u4770 3CBA                          u5475 2E3E                          u5740 3996  
                        u3990 16BA                          u4790 3D0E                          u5670 37B8  
                        u4775 3CAE                          u5760 39EA                          u5745 398A  
                        u5690 380C                          u3995 16AE                          u4795 3D02  
                        u5675 37AC                          u5765 39DE                          u5870 3166  
                        u5695 3800                          u5876 3168           __size_of_CANSetMask 0402  
                        abs@a 0075                          _fabs 4778                          _data 011F  
                        _atan 30E2                          _asin 2AA4                          _main 4608  
                        _asus 0024                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        _sqrt 334A                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0236                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000              _CANOperationMode 4874                         ??_abs 0077  
  __size_of_CANreceiveMessage 04D4                         ?_fabs 0096                 ___fltol@sign1 00D0  
                       ?_atan 00C8                         ?_asin 00CC               __end_of___fladd 30E2  
                       ?_main 0026               __end_of___fldiv 3B14               __end_of___flneg 47F2  
             __end_of___flmul 396E               __end_of___flsub 46A6               __end_of___fltol 3E06  
                       ?_sqrt 00C0                         _T0CON 000FD5                         _T3CON 000FB1  
          __size_of_ISR_Bassa 021E               __end_of___lwdiv 453C                         i1l411 2418  
                       i1l420 2668                         i1l404 2456                         i1l661 017A  
                       i1l653 017E                         i1l658 00FE                         i1l667 01B8  
                       i1l668 01F0                         i2l648 4432                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 44C4  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0087                __CFG_EBTR2$OFF 000000  
               ___awtofl@sign 0083                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       fabs@d 0096                         _errno 00E0                         atan@f 00C8  
                       atan@x 0143                         atan@y 013F                         asin@x 00CC  
                       asin@y 0160                __pbitbssCOMRAM 0238                         tablat 000FF5  
        __end_of_CANisTxReady 4874                         plusw2 000FDB                         sqrt@i 0147  
                       sqrt@q 0148                         sqrt@x 014C                         sqrt@y 00C0  
                       sqrt@z 0143                         status 000FD8                  ?_park_search 0026  
             __initialization 46A6                  __end_of_fabs 47B6                  __end_of_atan 334A  
                __end_of_asin 2DEE                  __end_of_main 4658                  __end_of_sqrt 3594  
                      ??_fabs 009A                        ??_atan 00CC                        ??_asin 00D0  
                      ??_main 00D2                        ??_sqrt 00C4                 __activetblptr 000003  
           _CANisTxReady$2808 0075                        _ADCON1 000FC1                        _CANCON 000F6F  
            __end_of___flpack 3C92              __end_of___awtofl 4608               __CFG_BBSIZ$1024 000000  
            __end_of___lbtofl 482C             _spazio_parcheggio 0048                        i1l4230 2628  
                      i1l4222 25BE                        i1l4400 00DE                        i1l4242 2658  
                      i1l4234 2638                        i1l4170 23D0                        i1l4162 2360  
                      i1l4410 011C                        i1l4238 2648                        i1l4246 269E  
                      i1l4182 2406                        i1l4174 23E2                        i1l4406 0108  
                      i1l4178 23F4                        i1l4186 2450                        i1l4418 0132  
                      i1l4436 01AA                        i1l4384 0064                        i2l1292 4532  
                      i2l4906 4524                        i2l4926 4488                        i2l4894 44E2  
                      i2l4896 44EE                        i2l4898 44F4                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB1D0 000F56                        _RXB0D4 000F6A                        _RXB1D1 000F57  
                      _RXB0D5 000F6B                        _RXB1D2 000F58                        _RXB0D6 000F6C  
                      _RXB1D3 000F59                        _RXB0D7 000F6D                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 0079              __end_of_can_send 43F2            CANsendMessage@tamp 0081  
           __end_of_ISR_Bassa 0236         __size_of_CANSetFilter 0C2A                __CFG_XINST$OFF 000000  
                      ___flge 41E2                     ??___fladd 00B1                     ??___fldiv 009E  
                   ??___flneg 0096                __CFG_STVREN$ON 000000                     ??___flmul 0087  
                   ??___flsub 00C0                     ??___fltol 00CC                     ??___lwdiv 0064  
                ??_CANSetMask 007A                        _gianni 0025                        clear_0 46AC  
                      clear_1 46B8                        clear_2 46C6               __CFG_BOREN$BOHW 000000  
                __pdataCOMRAM 0048                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        sqrt@og 013F  
                _CANSetFilter 0D2E                    ___fladd@f1 00A9                    ___fladd@f2 00AD  
                  ___flge@ff1 009A                    ___flge@ff2 009E                    ___fldiv@f1 0096  
                  ___fldiv@f2 009A                    ___fldiv@f3 00A2                    __accesstop 0060  
     __end_of__initialization 46EA            __end_of_CANSetMask 2AA4               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 0092                 ?_park_routine 0026                    ___flmul@f1 007F  
                  ___flmul@f2 0083                  eval_poly@res 00C4                    ___flsub@f1 00B8  
                  ___flsub@f2 00BC                    ___fltol@f1 00C8                    ___awtofl@c 007F  
                  ___lbtofl@c 0083                __pcstackCOMRAM 0026                     ?_ISR_Alta 0026  
            ??_configurazione 008F         CANSetFilter@numBuffer 007E                  _actual_speed 0011  
       __size_of_CANisTxReady 0024      __end_of_CANOperationMode 488A                    __pbssBANK0 00D2  
                  __pbssBANK1 0100               _sensor_distance 0001            __size_of_eval_poly 0136  
                  _data_brake 0127                ??_park_routine 0088                 ISR_Bassa@gigi 0045  
     __size_of_CANsendMessage 0876                    _data_speed 012F                    _activation 0238  
    __size_of_can_interpreter 0048            __size_of_parallelo 0146          __size_of_park_search 0160  
                  ??_ISR_Alta 0067                       ?___flge 009A                     ?___flpack 0075  
                     _CANSTAT 000F6E                     ?___awtofl 007F                     ?___lbtofl 007F  
                _CANisTxReady 4850                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 0026        __size_of_CANInitialize 01FC  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _RXB0CON 000F60  
                     _RXB1CON 000F50                       _TXB0DLC 000F45                       _TXB1DLC 000F35  
                     _TXB2DLC 000F25           CANsendMessage@flags 007C                       __Hparam 0000  
                  _left_speed 001B                       __Lparam 0000               __size_of___flge 0110  
                     ___fladd 2DEE                       ___fldiv 396E                       ___flneg 47B6  
                     ___flmul 3790                       ___flsub 4658                       ___fltol 3C92  
                     ___lwdiv 44C4                  __psmallconst 0D00                    ??___flpack 007B  
        CANInitialize@propSeg 008C                       __pcinit 46A6                    ??___awtofl 0083  
                  ??___lbtofl 0083             __end_of_eval_poly 41E2                       __ramtop 0D00  
                     __ptext0 4608                       __ptext1 3E06                       __ptext2 482C  
                     __ptext3 42F2                       __ptext4 1958                       __ptext5 4850  
                     __ptext6 3F66                       __ptext7 2AA4                       __ptext8 334A  
                     __ptext9 4658                    ??_can_send 0085                  __size_of_abs 0040  
             atan@val_squared 0148                       atan@val 014C             __end_of_parallelo 40AC  
                     asin@sgn 0150        CANreceiveMessage@error 0030               _start_operation 023E  
              __pintcode_body 43F2          end_of_initialization 46EA                       int_func 43F2  
               _CANInitialize 3594                     _ISR_Bassa 0018                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE             ??_can_interpreter 0075  
     _steering_correction_dir 023F                     _PORTBbits 000F81                CANSetMask@mask 0075  
              CANSetMask@tamp 007F                  _distance_set 0108                CANSetMask@type 0079  
        __end_of_park_routine 4850                     _TRISBbits 000F93                   ___fldiv@exp 00A7  
                   _MUX_index 0023                    _pulse_time 001D       _clock_counter_reference 0013  
                 ___flmul@exp 008B                _CANsendMessage 1958              CANInitialize@BRP 0086  
            CANInitialize@SJW 0085                ?_CANInitialize 0083                    ?_ISR_Bassa 0026  
              __end_of___flge 42F2             __size_of_ISR_Alta 44BC                 __pidataCOMRAM 488A  
         start_initialization 46A6                    eval_poly@d 00BC                    eval_poly@n 00BE  
                  eval_poly@x 00B8                   __end_of_abs 4778           CANSetMask@numBuffer 007E  
               _data_speed_rx 0100        __end_of_CANsendMessage 21CE             ?_CANOperationMode 0026  
               _data_steering 0137            ??_CANOperationMode 0075             _distance_received 023B  
  CANInitialize@FilterConfig1 008D    CANInitialize@FilterConfig2 008E           _steering_correction 00E7  
                    ??___flge 00A2              __CFG_LPT1OSC$OFF 000000             __size_of___flpack 017E  
      CANInitialize@phaseSeg1 0083        CANInitialize@phaseSeg2 0084             __size_of___awtofl 0060  
           __size_of___lbtofl 003A                   __pbssCOMRAM 0001                 __pcstackBANK0 0060  
               __pcstackBANK1 013F                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0100               ?_CANsendMessage 0075               ??_CANInitialize 0088  
                   _asin$3543 0154                     _asin$3544 0164                     _asin$3545 015C  
                   _asin$3546 0158                 ??_park_search 0085                 _alignment_gap 00E6  
          CANSetFilter@filter 0075              ___lwdiv@dividend 0060                    ISR_Bassa@i 0046  
                 ??_ISR_Bassa 0032                     __pintcode 0008                      ?___fladd 00A9  
                    ?___fldiv 0096                      ?___flneg 0092                      ?___flmul 007F  
                    ?___flsub 00B8                      ?___fltol 00C8         __size_of_park_routine 0024  
                    ?___lwdiv 0060                   __pintcodelo 0018                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 40AC              ___lwdiv@quotient 0064  
     __size_of_configurazione 006C                     _parallelo 3F66         CANreceiveMessage@tamp 0031  
                    _LATBbits 000F8A               _can_interpreter 46F0                     atan@recip 0147  
                _park_routine 482C  _delay_quartz_frequency_value 004A                      _IPR3bits 000FA5  
                    _PIE3bits 000FA3                      i1u500_20 2528                      i1u500_26 252A  
                    i1u502_25 253C                      i1u603_27 01DE                      i1u508_25 2674  
                    i1u491_25 22DC                      i1u488_20 2296                      i1u488_26 2298  
                    i1u489_20 22C4                      i1u497_25 2426                      i1u489_26 22C6  
                    i1u499_20 24FE                      i1u499_26 2500                      _PIR3bits 000FA4  
                    _RXB0EIDH 000F63                      _RXB0EIDL 000F64                      _RXB1EIDH 000F53  
                    _RXB1EIDL 000F54                      _ISR_Alta 0008                     _set_speed 00E2  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXF0EIDH 000F02                      _RXB1SIDH 000F51  
                    _RXF0EIDL 000F03                      _RXB1SIDL 000F52                      _RXF1EIDH 000F06  
                    _RXF1EIDL 000F07                      _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B  
                    _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F                      _RXF4EIDH 000F12  
                    _RXF4EIDL 000F13                      _RXF5EIDH 000F16                      _RXF5EIDL 000F17  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01           __end_of_park_search 3F66  
                    _TXB0EIDH 000F43                      _RXF1SIDH 000F04                      _TXB0EIDL 000F44  
                    _RXF1SIDL 000F05                      _TXB1EIDH 000F33                      _RXF2SIDH 000F08  
                    _TXB1EIDL 000F34                      _RXF2SIDL 000F09                      _TXB2EIDH 000F23  
                    _RXF3SIDH 000F0C                      _TXB2EIDL 000F24                      _RXF3SIDL 000F0D  
                    _RXF4SIDH 000F10                      _RXF4SIDL 000F11                      _RXF5SIDH 000F14  
                    _RXF5SIDL 000F15                      _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B  
                    _TXB0SIDH 000F41                      _RXM1EIDH 000F1E                      _TXB0SIDL 000F42  
                    _RXM1EIDL 000F1F                      _TXB1SIDH 000F31                      _TXB1SIDL 000F32  
                    _TXB2SIDH 000F21                      _TXB2SIDL 000F22                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19                      _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D  
                 _distance_dx 0017                   _distance_sx 0019                      _RXERRCNT 000F75  
                    _TXERRCNT 000F76                    ?_eval_poly 00B8           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0075                   _INTCON2bits 000FF1  
                  _CANCONbits 000F6F                    ?_parallelo 0026              _distance_average 00DE  
                    __Hparam0 0000                      __Lparam0 0000                  _RXB0SIDLbits 000F62  
                _RXB1SIDLbits 000F52              __size_of___fladd 02F4                    _CANSetMask 26A2  
            __size_of___fldiv 01A6              __size_of___flneg 003C              __size_of___flmul 01DE  
            __size_of___flsub 004E              __size_of___fltol 0174                      ___flpack 3B14  
            __size_of___lwdiv 0078                      ___awtofl 45A8                      ___lbtofl 47F2  
                    _can_send 42F2                  _RXF0SIDLbits 000F01               ___lwdiv@divisor 0062  
                _RXF1SIDLbits 000F05               ___lwdiv@counter 0066                ??_CANSetFilter 007A  
                    __ptext10 30E2                      __ptext11 4778                      __ptext20 3C92  
                    __ptext12 47B6                      __ptext21 45A8                      __ptext13 40AC  
                    __ptext30 21CE                      __ptext22 3B14                      __ptext14 3790  
                    __ptext23 453C                      __ptext15 2DEE                      __ptext32 44C4  
                    __ptext24 3594                      __ptext16 41E2                      __ptext25 26A2  
                    __ptext17 396E                      __ptext26 0D2E                      __ptext18 4738  
                    __ptext27 4874                      __ptext19 47F2                      __ptext28 46F0  
                _RXF2SIDLbits 000F09       __end_of_can_interpreter 4738                  _RXF3SIDLbits 000F0D  
                    _distance 0015                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007B                 __size_of_fabs 003E                 __size_of_atan 0268  
               __size_of_asin 034A                 __size_of_main 0050                 __size_of_sqrt 024A  
                 _park_search 3E06          CANreceiveMessage@msg 0026                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22     __size_of_CANOperationMode 0016  
               ?_CANisTxReady 0026                   atan@coeff_a 0D01                   atan@coeff_b 0D19  
                 _RXB0DLCbits 000F65         ___flmul@f3_as_product 008C                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 21CE                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C0              ??_CANsendMessage 007D            ?_CANreceiveMessage 0026  
                _request_sent 023D                _configurazione 453C      CANsendMessage@identifier 0075  
                 ??_parallelo 0168                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 007F              CANSetFilter@type 0079           ??_CANreceiveMessage 0028  
                 _TXB0DLCbits 000F45                   _right_speed 001F                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0075                   ?_CANSetMask 0075  
              ??_CANisTxReady 0075                _distance_error 023A     __end_of_CANreceiveMessage 26A2  
                 _timerValue2 0021        __end_of_configurazione 45A8                 _distance_wait 023C  
            ?_can_interpreter 0026                  ___fladd@exp1 00B7                  ___fladd@exp2 00B6  
                ___fladd@sign 00B5         __end_of_CANInitialize 3790  
