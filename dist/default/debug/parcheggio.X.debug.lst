

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 28 10:55:45 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	param0,global,class=BANK0,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  0066E2                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _spazio_parcheggio
    71  0066E2  0064               	dw	100
    72                           
    73                           	psect	idataBANK0
    74  0066E4                     __pidataBANK0:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _delay_quartz_frequency_value
    78  0066E4  10                 	db	16
    79                           
    80                           	psect	idataBANK1
    81  0066DA                     __pidataBANK1:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _larghezza
    85  0066DA  0000               	dw	0
    86  0066DC  4200               	dw	16896
    87                           
    88                           ;initializer for _raggio
    89  0066DE  0000               	dw	0
    90  0066E0  428C               	dw	17036
    91                           
    92                           	psect	smallconst
    93  000D00                     __psmallconst:
    94                           	opt stack 0
    95  000D00  00                 	db	0
    96  000D01                     atan@coeff_a:
    97                           	opt stack 0
    98  000D01  3C06               	dw	15366
    99  000D03  4204               	dw	16900
   100  000D05  9F7D               	dw	40829
   101  000D07  426A               	dw	17002
   102  000D09  905C               	dw	36956
   103  000D0B  4201               	dw	16897
   104  000D0D  4D60               	dw	19808
   105  000D0F  40BB               	dw	16571
   106  000D11  EC51               	dw	60497
   107  000D13  3E47               	dw	15943
   108  000D15  8DDE               	dw	36318
   109  000D17  BB1F               	dw	47903
   110  000D19                     __end_ofatan@coeff_a:
   111                           	opt stack 0
   112  000D19                     atan@coeff_b:
   113                           	opt stack 0
   114  000D19  3C06               	dw	15366
   115  000D1B  4204               	dw	16900
   116  000D1D  59C0               	dw	22976
   117  000D1F  428B               	dw	17035
   118  000D21  0474               	dw	1140
   119  000D23  4244               	dw	16964
   120  000D25  9BF9               	dw	39929
   121  000D27  414F               	dw	16719
   122  000D29  0000               	dw	0
   123  000D2B  3F80               	dw	16256
   124  000D2D                     __end_ofatan@coeff_b:
   125                           	opt stack 0
   126  000D2D                     sin@coeff_a:
   127                           	opt stack 0
   128  000D2D  F3EC               	dw	62444
   129  000D2F  484A               	dw	18506
   130  000D31  9535               	dw	38197
   131  000D33  C795               	dw	51093
   132  000D35  C117               	dw	49431
   133  000D37  45DC               	dw	17884
   134  000D39  DBFD               	dw	56317
   135  000D3B  C36D               	dw	50029
   136  000D3D  B372               	dw	45938
   137  000D3F  4033               	dw	16435
   138  000D41                     __end_ofsin@coeff_a:
   139                           	opt stack 0
   140  000D41                     sin@coeff_b:
   141                           	opt stack 0
   142  000D41  342B               	dw	13355
   143  000D43  4801               	dw	18433
   144  000D45  9D7F               	dw	40319
   145  000D47  45B0               	dw	17840
   146  000D49  FFE7               	dw	65511
   147  000D4B  42D9               	dw	17113
   148  000D4D  0000               	dw	0
   149  000D4F  3F80               	dw	16256
   150  000D51                     __end_ofsin@coeff_b:
   151                           	opt stack 0
   152  0000                     _RXB1CON	set	3920
   153  0000                     _RXB1CONbits	set	3920
   154  0000                     _RXB1D0	set	3926
   155  0000                     _RXB1D1	set	3927
   156  0000                     _RXB1D2	set	3928
   157  0000                     _RXB1D3	set	3929
   158  0000                     _RXB1D4	set	3930
   159  0000                     _RXB1D5	set	3931
   160  0000                     _RXB1D6	set	3932
   161  0000                     _RXB1D7	set	3933
   162  0000                     _RXB1DLC	set	3925
   163  0000                     _RXB1DLCbits	set	3925
   164  0000                     _RXB1EIDH	set	3923
   165  0000                     _RXB1EIDL	set	3924
   166  0000                     _RXB1SIDH	set	3921
   167  0000                     _RXB1SIDL	set	3922
   168  0000                     _RXB1SIDLbits	set	3922
   169  0000                     _RXF0EIDH	set	3842
   170  0000                     _RXF0EIDL	set	3843
   171  0000                     _RXF0SIDH	set	3840
   172  0000                     _RXF0SIDL	set	3841
   173  0000                     _RXF0SIDLbits	set	3841
   174  0000                     _RXF1EIDH	set	3846
   175  0000                     _RXF1EIDL	set	3847
   176  0000                     _RXF1SIDH	set	3844
   177  0000                     _RXF1SIDL	set	3845
   178  0000                     _RXF1SIDLbits	set	3845
   179  0000                     _RXF2EIDH	set	3850
   180  0000                     _RXF2EIDL	set	3851
   181  0000                     _RXF2SIDH	set	3848
   182  0000                     _RXF2SIDL	set	3849
   183  0000                     _RXF2SIDLbits	set	3849
   184  0000                     _RXF3EIDH	set	3854
   185  0000                     _RXF3EIDL	set	3855
   186  0000                     _RXF3SIDH	set	3852
   187  0000                     _RXF3SIDL	set	3853
   188  0000                     _RXF3SIDLbits	set	3853
   189  0000                     _RXF4EIDH	set	3858
   190  0000                     _RXF4EIDL	set	3859
   191  0000                     _RXF4SIDH	set	3856
   192  0000                     _RXF4SIDL	set	3857
   193  0000                     _RXF4SIDLbits	set	3857
   194  0000                     _RXF5EIDH	set	3862
   195  0000                     _RXF5EIDL	set	3863
   196  0000                     _RXF5SIDH	set	3860
   197  0000                     _RXF5SIDL	set	3861
   198  0000                     _RXF5SIDLbits	set	3861
   199  0000                     _RXM0EIDH	set	3866
   200  0000                     _RXM0EIDL	set	3867
   201  0000                     _RXM0SIDH	set	3864
   202  0000                     _RXM0SIDL	set	3865
   203  0000                     _RXM0SIDLbits	set	3865
   204  0000                     _RXM1EIDH	set	3870
   205  0000                     _RXM1EIDL	set	3871
   206  0000                     _RXM1SIDH	set	3868
   207  0000                     _RXM1SIDL	set	3869
   208  0000                     _RXM1SIDLbits	set	3869
   209  0000                     _TXB0CONbits	set	3904
   210  0000                     _TXB0D0	set	3910
   211  0000                     _TXB0D1	set	3911
   212  0000                     _TXB0D2	set	3912
   213  0000                     _TXB0D3	set	3913
   214  0000                     _TXB0D4	set	3914
   215  0000                     _TXB0D5	set	3915
   216  0000                     _TXB0D6	set	3916
   217  0000                     _TXB0D7	set	3917
   218  0000                     _TXB0DLC	set	3909
   219  0000                     _TXB0DLCbits	set	3909
   220  0000                     _TXB0EIDH	set	3907
   221  0000                     _TXB0EIDL	set	3908
   222  0000                     _TXB0SIDH	set	3905
   223  0000                     _TXB0SIDL	set	3906
   224  0000                     _TXB0SIDLbits	set	3906
   225  0000                     _TXB1CONbits	set	3888
   226  0000                     _TXB1D0	set	3894
   227  0000                     _TXB1D1	set	3895
   228  0000                     _TXB1D2	set	3896
   229  0000                     _TXB1D3	set	3897
   230  0000                     _TXB1D4	set	3898
   231  0000                     _TXB1D5	set	3899
   232  0000                     _TXB1D6	set	3900
   233  0000                     _TXB1D7	set	3901
   234  0000                     _TXB1DLC	set	3893
   235  0000                     _TXB1DLCbits	set	3893
   236  0000                     _TXB1EIDH	set	3891
   237  0000                     _TXB1EIDL	set	3892
   238  0000                     _TXB1SIDH	set	3889
   239  0000                     _TXB1SIDL	set	3890
   240  0000                     _TXB1SIDLbits	set	3890
   241  0000                     _TXB2CONbits	set	3872
   242  0000                     _TXB2D0	set	3878
   243  0000                     _TXB2D1	set	3879
   244  0000                     _TXB2D2	set	3880
   245  0000                     _TXB2D3	set	3881
   246  0000                     _TXB2D4	set	3882
   247  0000                     _TXB2D5	set	3883
   248  0000                     _TXB2D6	set	3884
   249  0000                     _TXB2D7	set	3885
   250  0000                     _TXB2DLC	set	3877
   251  0000                     _TXB2DLCbits	set	3877
   252  0000                     _TXB2EIDH	set	3875
   253  0000                     _TXB2EIDL	set	3876
   254  0000                     _TXB2SIDH	set	3873
   255  0000                     _TXB2SIDL	set	3874
   256  0000                     _TXB2SIDLbits	set	3874
   257  0000                     _ADCON1	set	4033
   258  0000                     _BRGCON1	set	3952
   259  0000                     _BRGCON2	set	3953
   260  0000                     _BRGCON2bits	set	3953
   261  0000                     _BRGCON3	set	3954
   262  0000                     _BRGCON3bits	set	3954
   263  0000                     _CANCON	set	3951
   264  0000                     _CANCONbits	set	3951
   265  0000                     _CANSTAT	set	3950
   266  0000                     _COMSTATbits	set	3956
   267  0000                     _INTCON2bits	set	4081
   268  0000                     _INTCONbits	set	4082
   269  0000                     _IPR3bits	set	4005
   270  0000                     _LATA	set	3977
   271  0000                     _LATB	set	3978
   272  0000                     _LATBbits	set	3978
   273  0000                     _LATC	set	3979
   274  0000                     _PIE3bits	set	4003
   275  0000                     _PIR3bits	set	4004
   276  0000                     _PORTA	set	3968
   277  0000                     _PORTBbits	set	3969
   278  0000                     _RCONbits	set	4048
   279  0000                     _RXB0CON	set	3936
   280  0000                     _RXB0CONbits	set	3936
   281  0000                     _RXB0D0	set	3942
   282  0000                     _RXB0D1	set	3943
   283  0000                     _RXB0D2	set	3944
   284  0000                     _RXB0D3	set	3945
   285  0000                     _RXB0D4	set	3946
   286  0000                     _RXB0D5	set	3947
   287  0000                     _RXB0D6	set	3948
   288  0000                     _RXB0D7	set	3949
   289  0000                     _RXB0DLC	set	3941
   290  0000                     _RXB0DLCbits	set	3941
   291  0000                     _RXB0EIDH	set	3939
   292  0000                     _RXB0EIDL	set	3940
   293  0000                     _RXB0SIDH	set	3937
   294  0000                     _RXB0SIDL	set	3938
   295  0000                     _RXB0SIDLbits	set	3938
   296  0000                     _RXERRCNT	set	3957
   297  0000                     _T0CON	set	4053
   298  0000                     _T0CONbits	set	4053
   299  0000                     _T3CON	set	4017
   300  0000                     _TMR0H	set	4055
   301  0000                     _TMR0L	set	4054
   302  0000                     _TMR3H	set	4019
   303  0000                     _TMR3L	set	4018
   304  0000                     _TRISA	set	3986
   305  0000                     _TRISB	set	3987
   306  0000                     _TRISBbits	set	3987
   307  0000                     _TRISC	set	3988
   308  0000                     _TXERRCNT	set	3958
   309                           
   310                           ; #config settings
   311  000D51  00                 	db	0	; dummy byte at the end
   312  0000                     
   313                           	psect	cinit
   314  00634A                     __pcinit:
   315                           	opt stack 0
   316  00634A                     start_initialization:
   317                           	opt stack 0
   318  00634A                     __initialization:
   319                           	opt stack 0
   320                           
   321                           ; Clear objects allocated to BANK1 (139 bytes)
   322  00634A  EE01  F000         	lfsr	0,__pbssBANK1
   323  00634E  0E8B               	movlw	139
   324  006350                     clear_0:
   325  006350  6AEE               	clrf	postinc0,c
   326  006352  06E8               	decf	wreg,f,c
   327  006354  E1FD               	bnz	clear_0
   328                           
   329                           ; Clear objects allocated to BANK0 (16 bytes)
   330  006356  EE00  F0D8         	lfsr	0,__pbssBANK0
   331  00635A  0E10               	movlw	16
   332  00635C                     clear_1:
   333  00635C  6AEE               	clrf	postinc0,c
   334  00635E  06E8               	decf	wreg,f,c
   335  006360  E1FD               	bnz	clear_1
   336                           
   337                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   338  006362  6A51               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   339  006364  6A50               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   340                           
   341                           ; Clear objects allocated to COMRAM (40 bytes)
   342  006366  EE00  F001         	lfsr	0,__pbssCOMRAM
   343  00636A  0E28               	movlw	40
   344  00636C                     clear_2:
   345  00636C  6AEE               	clrf	postinc0,c
   346  00636E  06E8               	decf	wreg,f,c
   347  006370  E1FD               	bnz	clear_2
   348                           
   349                           ; Initialize objects allocated to BANK1 (8 bytes)
   350                           ; load TBLPTR registers with __pidataBANK1
   351  006372  0EDA               	movlw	low __pidataBANK1
   352  006374  6EF6               	movwf	tblptrl,c
   353  006376  0E66               	movlw	high __pidataBANK1
   354  006378  6EF7               	movwf	tblptrh,c
   355  00637A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   356  00637C  6EF8               	movwf	tblptru,c
   357  00637E  EE01  F0E8         	lfsr	0,__pdataBANK1
   358  006382  EE10 F008          	lfsr	1,8
   359  006386                     copy_data0:
   360  006386  0009               	tblrd		*+
   361  006388  CFF5 FFEE          	movff	tablat,postinc0
   362  00638C  50E5               	movf	postdec1,w,c
   363  00638E  50E1               	movf	fsr1l,w,c
   364  006390  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to BANK0 (1 bytes)
   367                           ; load TBLPTR registers with __pidataBANK0
   368  006392  0EE4               	movlw	low __pidataBANK0
   369  006394  6EF6               	movwf	tblptrl,c
   370  006396  0E66               	movlw	high __pidataBANK0
   371  006398  6EF7               	movwf	tblptrh,c
   372  00639A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   373  00639C  6EF8               	movwf	tblptru,c
   374  00639E  0009               	tblrd		*+	;fetch initializer
   375  0063A0  CFF5 F0E8          	movff	tablat,__pdataBANK0
   376                           
   377                           ; Initialize objects allocated to COMRAM (2 bytes)
   378                           ; load TBLPTR registers with __pidataCOMRAM
   379  0063A4  0EE2               	movlw	low __pidataCOMRAM
   380  0063A6  6EF6               	movwf	tblptrl,c
   381  0063A8  0E66               	movlw	high __pidataCOMRAM
   382  0063AA  6EF7               	movwf	tblptrh,c
   383  0063AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   384  0063AE  6EF8               	movwf	tblptru,c
   385  0063B0  0009               	tblrd		*+	;fetch initializer
   386  0063B2  CFF5 F052          	movff	tablat,__pdataCOMRAM
   387  0063B6  0009               	tblrd		*+	;fetch initializer
   388  0063B8  CFF5 F053          	movff	tablat,__pdataCOMRAM+1
   389  0063BC                     end_of_initialization:
   390                           	opt stack 0
   391  0063BC                     __end_of__initialization:
   392                           	opt stack 0
   393  0063BC  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394  0063BE  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395  0063C0  0100               	movlb	0
   396  0063C2  EFF8  F030         	goto	_main	;jump to C main() function
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	bitbssCOMRAM
   407  000280                     __pbitbssCOMRAM:
   408                           	opt stack 0
   409  000280                     _activation:
   410                           	opt stack 0
   411  000280                     	ds	1
   412  000281                     _asd:
   413                           	opt stack 0
   414  000281                     	ds	1
   415  000282                     _avvicinamento:
   416                           	opt stack 0
   417  000282                     	ds	1
   418  000283                     _dir:
   419                           	opt stack 0
   420  000283                     	ds	1
   421  000284                     _distance_error:
   422                           	opt stack 0
   423  000284                     	ds	1
   424  000285                     _distance_received:
   425                           	opt stack 0
   426  000285                     	ds	1
   427  000286                     _distance_received1:
   428                           	opt stack 0
   429  000286                     	ds	1
   430  000287                     _distance_wait:
   431                           	opt stack 0
   432  000287                     	ds	1
   433  000288                     _first:
   434                           	opt stack 0
   435  000288                     	ds	1
   436  000289                     _new_distance:
   437                           	opt stack 0
   438  000289                     	ds	1
   439  00028A                     _old_dir_correction:
   440                           	opt stack 0
   441  00028A                     	ds	1
   442  00028B                     _request_sent:
   443                           	opt stack 0
   444  00028B                     	ds	1
   445  00028C                     _request_sent1:
   446                           	opt stack 0
   447  00028C                     	ds	1
   448  00028D                     _start_operation:
   449                           	opt stack 0
   450  00028D                     	ds	1
   451  00028E                     _steering_correction_dir:
   452                           	opt stack 0
   453  00028E                     	ds	1
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           
   463                           	psect	bssCOMRAM
   464  000001                     __pbssCOMRAM:
   465                           	opt stack 0
   466  000001                     _sensor_distance:
   467                           	opt stack 0
   468  000001                     	ds	16
   469  000011                     _x:
   470                           	opt stack 0
   471  000011                     	ds	4
   472  000015                     _actual_speed:
   473                           	opt stack 0
   474  000015                     	ds	2
   475  000017                     _distance:
   476                           	opt stack 0
   477  000017                     	ds	2
   478  000019                     _distance_dx:
   479                           	opt stack 0
   480  000019                     	ds	2
   481  00001B                     _distance_sx:
   482                           	opt stack 0
   483  00001B                     	ds	2
   484  00001D                     _left_speed:
   485                           	opt stack 0
   486  00001D                     	ds	2
   487  00001F                     _pulse_time:
   488                           	opt stack 0
   489  00001F                     	ds	2
   490  000021                     _right_speed:
   491                           	opt stack 0
   492  000021                     	ds	2
   493  000023                     _timerValue2:
   494                           	opt stack 0
   495  000023                     	ds	2
   496  000025                     _MUX_index:
   497                           	opt stack 0
   498  000025                     	ds	1
   499  000026                     _TMR3H_temp:
   500                           	opt stack 0
   501  000026                     	ds	1
   502  000027                     _TMR3L_temp:
   503                           	opt stack 0
   504  000027                     	ds	1
   505  000028                     _steering_correction:
   506                           	opt stack 0
   507  000028                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	dataCOMRAM
   518  000052                     __pdataCOMRAM:
   519                           	opt stack 0
   520  000052                     _spazio_parcheggio:
   521                           	opt stack 0
   522  000052                     	ds	2
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	bssBANK0
   533  0000D8                     __pbssBANK0:
   534                           	opt stack 0
   535  0000D8                     _alignment_gap:
   536                           	opt stack 0
   537  0000D8                     	ds	4
   538  0000DC                     _z:
   539                           	opt stack 0
   540  0000DC                     	ds	4
   541  0000E0                     _clock_counter_reference:
   542                           	opt stack 0
   543  0000E0                     	ds	2
   544  0000E2                     _distance_average:
   545                           	opt stack 0
   546  0000E2                     	ds	2
   547  0000E4                     _errno:
   548                           	opt stack 0
   549  0000E4                     	ds	2
   550  0000E6                     _set_speed:
   551                           	opt stack 0
   552  0000E6                     	ds	2
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	dataBANK0
   563  0000E8                     __pdataBANK0:
   564                           	opt stack 0
   565  0000E8                     _delay_quartz_frequency_value:
   566                           	opt stack 0
   567  0000E8                     	ds	1
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           postdec1	equ	0xFE5
   575                           fsr1l	equ	0xFE1
   576                           
   577                           	psect	bssBANK1
   578  000100                     __pbssBANK1:
   579                           	opt stack 0
   580  000100                     _MUX_select:
   581                           	opt stack 0
   582  000100                     	ds	8
   583  000108                     _data_speed_rx:
   584                           	opt stack 0
   585  000108                     	ds	8
   586  000110                     _distance_set:
   587                           	opt stack 0
   588  000110                     	ds	8
   589  000118                     _sensor_distance_old:
   590                           	opt stack 0
   591  000118                     	ds	8
   592  000120                     _J_var:
   593                           	opt stack 0
   594  000120                     	ds	4
   595  000124                     _K_var:
   596                           	opt stack 0
   597  000124                     	ds	4
   598  000128                     _Pmin:
   599                           	opt stack 0
   600  000128                     	ds	4
   601  00012C                     _alfa:
   602                           	opt stack 0
   603  00012C                     	ds	4
   604  000130                     _beta:
   605                           	opt stack 0
   606  000130                     	ds	4
   607  000134                     _bordo:
   608                           	opt stack 0
   609  000134                     	ds	4
   610  000138                     _n:
   611                           	opt stack 0
   612  000138                     	ds	4
   613  00013C                     _old_alignment_gap:
   614                           	opt stack 0
   615  00013C                     	ds	4
   616  000140                     _prima_sterzata:
   617                           	opt stack 0
   618  000140                     	ds	4
   619  000144                     _msg:
   620                           	opt stack 0
   621  000144                     	ds	15
   622  000153                     _data:
   623                           	opt stack 0
   624  000153                     	ds	8
   625  00015B                     _data_brake:
   626                           	opt stack 0
   627  00015B                     	ds	8
   628  000163                     _data_correction:
   629                           	opt stack 0
   630  000163                     	ds	8
   631  00016B                     _data_speed:
   632                           	opt stack 0
   633  00016B                     	ds	8
   634  000173                     _data_steering:
   635                           	opt stack 0
   636  000173                     	ds	8
   637  00017B                     _data_test:
   638                           	opt stack 0
   639  00017B                     	ds	8
   640  000183                     _sensor_distance_short:
   641                           	opt stack 0
   642  000183                     	ds	8
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	dataBANK1
   653  0001E8                     __pdataBANK1:
   654                           	opt stack 0
   655  0001E8                     _larghezza:
   656                           	opt stack 0
   657  0001E8                     	ds	4
   658  0001EC                     _raggio:
   659                           	opt stack 0
   660  0001EC                     	ds	4
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           
   670                           	psect	cstackBANK1
   671  00018B                     __pcstackBANK1:
   672                           	opt stack 0
   673  00018B                     sqrt@sign:
   674                           	opt stack 0
   675  00018B                     ___xxtofl@sign:
   676                           	opt stack 0
   677  00018B                     atan@y:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x0
   681  00018B                     	ds	1
   682  00018C                     sqrt@i:
   683                           	opt stack 0
   684  00018C                     ___xxtofl@exp:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x1
   688  00018C                     	ds	1
   689  00018D                     sqrt@tfrac:
   690                           	opt stack 0
   691  00018D                     ___xxtofl@arg:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x2
   695  00018D                     	ds	2
   696  00018F                     atan@x:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x4
   700  00018F                     	ds	2
   701  000191                     sqrt@p:
   702                           	opt stack 0
   703  000191                     floor@i:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x6
   707  000191                     	ds	1
   708  000192                     sqrt@grs:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x7
   712  000192                     	ds	1
   713  000193                     atan@recip:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x8
   717  000193                     	ds	1
   718  000194                     atan@val_squared:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x9
   722  000194                     	ds	1
   723  000195                     floor@expon:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0xA
   727  000195                     	ds	1
   728  000196                     sqrt@exp:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0xB
   732  000196                     	ds	1
   733  000197                     ?___flsub:
   734                           	opt stack 0
   735  000197                     ___flsub@b:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0xC
   739  000197                     	ds	1
   740  000198                     atan@val:
   741                           	opt stack 0
   742  000198                     sqrt@root:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0xD
   746  000198                     	ds	3
   747  00019B                     ___flsub@a:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x10
   751  00019B                     	ds	1
   752  00019C                     sqrt@frac:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x11
   756  00019C                     	ds	3
   757  00019F                     ?_sin:
   758                           	opt stack 0
   759  00019F                     sin@f:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x14
   763  00019F                     	ds	1
   764  0001A0                     ?_asin:
   765                           	opt stack 0
   766  0001A0                     asin@x:
   767                           	opt stack 0
   768                           
   769                           ; 4 bytes @ 0x15
   770  0001A0                     	ds	3
   771  0001A3                     sin@y:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x18
   775  0001A3                     	ds	1
   776  0001A4                     asin@sgn:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x19
   780  0001A4                     	ds	3
   781  0001A7                     _sin$3755:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x1C
   785  0001A7                     	ds	1
   786  0001A8                     _asin$3753:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x1D
   790  0001A8                     	ds	3
   791  0001AB                     sin@x2:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x20
   795  0001AB                     	ds	1
   796  0001AC                     _asin$3752:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x21
   800  0001AC                     	ds	3
   801  0001AF                     sin@sgn:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x24
   805  0001AF                     	ds	1
   806  0001B0                     asin@y:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x25
   810  0001B0                     	ds	4
   811  0001B4                     _asin$3751:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x29
   815  0001B4                     	ds	4
   816  0001B8                     ??_park_search:
   817  0001B8                     ?_cos:
   818                           	opt stack 0
   819  0001B8                     cos@f:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0x2D
   823  0001B8                     	ds	4
   824  0001BC                     _cos$3754:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x31
   828  0001BC                     	ds	4
   829  0001C0                     _matematica$3744:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x35
   833  0001C0                     	ds	4
   834  0001C4                     _matematica$3745:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x39
   838  0001C4                     	ds	4
   839  0001C8                     _matematica$3746:
   840                           	opt stack 0
   841                           
   842                           ; 4 bytes @ 0x3D
   843  0001C8                     	ds	4
   844  0001CC                     _matematica$3747:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x41
   848  0001CC                     	ds	4
   849  0001D0                     _matematica$3749:
   850                           	opt stack 0
   851                           
   852                           ; 4 bytes @ 0x45
   853  0001D0                     	ds	4
   854  0001D4                     _matematica$3750:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x49
   858  0001D4                     	ds	4
   859  0001D8                     _matematica$3748:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x4D
   863  0001D8                     	ds	4
   864  0001DC                     ??_park_routine:
   865                           
   866                           ; 0 bytes @ 0x51
   867  0001DC                     	ds	4
   868  0001E0                     _park_routine$3742:
   869                           	opt stack 0
   870                           
   871                           ; 4 bytes @ 0x55
   872  0001E0                     	ds	4
   873  0001E4                     _park_routine$3743:
   874                           	opt stack 0
   875                           
   876                           ; 4 bytes @ 0x59
   877  0001E4                     	ds	4
   878                           tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           tblptrl	equ	0xFF6
   881                           tablat	equ	0xFF5
   882                           postinc0	equ	0xFEE
   883                           wreg	equ	0xFE8
   884                           postdec1	equ	0xFE5
   885                           fsr1l	equ	0xFE1
   886                           
   887                           	psect	cstackBANK0
   888  000060                     __pcstackBANK0:
   889                           	opt stack 0
   890  000060                     ?___lwdiv:
   891                           	opt stack 0
   892  000060                     ___lwdiv@dividend:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x0
   896  000060                     	ds	2
   897  000062                     ___lwdiv@divisor:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x2
   901  000062                     	ds	2
   902  000064                     ___lwdiv@counter:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x4
   906  000064                     	ds	1
   907  000065                     ___lwdiv@quotient:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x5
   911  000065                     	ds	2
   912  000067                     ??_ISR_Alta:
   913                           
   914                           ; 0 bytes @ 0x7
   915  000067                     	ds	16
   916  000077                     ??_can_interpreter:
   917  000077                     ?_abs:
   918                           	opt stack 0
   919  000077                     ?___wmul:
   920                           	opt stack 0
   921  000077                     ?___fldiv:
   922                           	opt stack 0
   923  000077                     CANOperationMode@mode:
   924                           	opt stack 0
   925  000077                     _CANisTxReady$2845:
   926                           	opt stack 0
   927  000077                     ___wmul@multiplier:
   928                           	opt stack 0
   929  000077                     abs@a:
   930                           	opt stack 0
   931  000077                     CANsendMessage@identifier:
   932                           	opt stack 0
   933  000077                     CANSetMask@mask:
   934                           	opt stack 0
   935  000077                     CANSetFilter@filter:
   936                           	opt stack 0
   937  000077                     ___fldiv@b:
   938                           	opt stack 0
   939  000077                     frexp@value:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x17
   943  000077                     	ds	2
   944  000079                     ??_abs:
   945  000079                     ___wmul@multiplicand:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x19
   949  000079                     	ds	2
   950  00007B                     CANSetMask@type:
   951                           	opt stack 0
   952  00007B                     CANSetFilter@type:
   953                           	opt stack 0
   954  00007B                     CANsendMessage@data:
   955                           	opt stack 0
   956  00007B                     ___wmul@product:
   957                           	opt stack 0
   958  00007B                     frexp@eptr:
   959                           	opt stack 0
   960  00007B                     ___fldiv@a:
   961                           	opt stack 0
   962                           
   963                           ; 4 bytes @ 0x1B
   964  00007B                     	ds	1
   965  00007C                     ??_CANSetMask:
   966  00007C                     ??_CANSetFilter:
   967                           
   968                           ; 0 bytes @ 0x1C
   969  00007C                     	ds	1
   970  00007D                     ??_frexp:
   971  00007D                     CANsendMessage@dataLength:
   972                           	opt stack 0
   973  00007D                     delay_ms@value_ms:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x1D
   977  00007D                     	ds	1
   978  00007E                     CANsendMessage@flags:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x1E
   982  00007E                     	ds	1
   983  00007F                     ??___fldiv:
   984  00007F                     ??_CANsendMessage:
   985  00007F                     delay_s@value_s:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x1F
   989  00007F                     	ds	1
   990  000080                     CANSetMask@numBuffer:
   991                           	opt stack 0
   992  000080                     CANSetFilter@numBuffer:
   993                           	opt stack 0
   994  000080                     delay_s@repeat_loop:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x20
   998  000080                     	ds	1
   999  000081                     CANSetMask@tamp:
  1000                           	opt stack 0
  1001  000081                     CANSetFilter@tamp:
  1002                           	opt stack 0
  1003                           
  1004                           ; 4 bytes @ 0x21
  1005  000081                     	ds	2
  1006  000083                     ___fldiv@sign:
  1007                           	opt stack 0
  1008  000083                     CANsendMessage@tamp:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0x23
  1012  000083                     	ds	1
  1013  000084                     ___fldiv@rem:
  1014                           	opt stack 0
  1015                           
  1016                           ; 4 bytes @ 0x24
  1017  000084                     	ds	1
  1018  000085                     CANInitialize@phaseSeg1:
  1019                           	opt stack 0
  1020                           
  1021                           ; 1 bytes @ 0x25
  1022  000085                     	ds	1
  1023  000086                     CANInitialize@phaseSeg2:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x26
  1027  000086                     	ds	1
  1028  000087                     CANInitialize@SJW:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x27
  1032  000087                     	ds	1
  1033  000088                     CANInitialize@BRP:
  1034                           	opt stack 0
  1035  000088                     ___fldiv@new_exp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x28
  1039  000088                     	ds	1
  1040  000089                     CANInitialize@flags:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x29
  1044  000089                     	ds	1
  1045  00008A                     ??_CANInitialize:
  1046  00008A                     ___fldiv@grs:
  1047                           	opt stack 0
  1048                           
  1049                           ; 4 bytes @ 0x2A
  1050  00008A                     	ds	4
  1051  00008E                     CANInitialize@propSeg:
  1052                           	opt stack 0
  1053  00008E                     ___fldiv@bexp:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x2E
  1057  00008E                     	ds	1
  1058  00008F                     CANInitialize@FilterConfig1:
  1059                           	opt stack 0
  1060  00008F                     ___fldiv@aexp:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0x2F
  1064  00008F                     	ds	1
  1065  000090                     ?___flmul:
  1066                           	opt stack 0
  1067  000090                     CANInitialize@FilterConfig2:
  1068                           	opt stack 0
  1069  000090                     ___flmul@b:
  1070                           	opt stack 0
  1071                           
  1072                           ; 4 bytes @ 0x30
  1073  000090                     	ds	1
  1074  000091                     
  1075                           ; 0 bytes @ 0x31
  1076  000091                     	ds	3
  1077  000094                     ___flmul@a:
  1078                           	opt stack 0
  1079                           
  1080                           ; 4 bytes @ 0x34
  1081  000094                     	ds	4
  1082  000098                     ??___flmul:
  1083                           
  1084                           ; 0 bytes @ 0x38
  1085  000098                     	ds	4
  1086  00009C                     ___flmul@sign:
  1087                           	opt stack 0
  1088                           
  1089                           ; 1 bytes @ 0x3C
  1090  00009C                     	ds	1
  1091  00009D                     ___flmul@aexp:
  1092                           	opt stack 0
  1093                           
  1094                           ; 1 bytes @ 0x3D
  1095  00009D                     	ds	1
  1096  00009E                     ___flmul@grs:
  1097                           	opt stack 0
  1098                           
  1099                           ; 4 bytes @ 0x3E
  1100  00009E                     	ds	4
  1101  0000A2                     ___flmul@bexp:
  1102                           	opt stack 0
  1103                           
  1104                           ; 1 bytes @ 0x42
  1105  0000A2                     	ds	1
  1106  0000A3                     ___flmul@prod:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x43
  1110  0000A3                     	ds	4
  1111  0000A7                     ___flmul@temp:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x47
  1115  0000A7                     	ds	2
  1116  0000A9                     ?___fladd:
  1117                           	opt stack 0
  1118  0000A9                     ___fladd@b:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x49
  1122  0000A9                     	ds	4
  1123  0000AD                     ___fladd@a:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x4D
  1127  0000AD                     	ds	4
  1128  0000B1                     ??___fladd:
  1129                           
  1130                           ; 0 bytes @ 0x51
  1131  0000B1                     	ds	8
  1132  0000B9                     ___fladd@signs:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x59
  1136  0000B9                     	ds	1
  1137  0000BA                     ___fladd@aexp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x5A
  1141  0000BA                     	ds	1
  1142  0000BB                     ___fladd@bexp:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x5B
  1146  0000BB                     	ds	1
  1147  0000BC                     ___fladd@grs:
  1148                           	opt stack 0
  1149                           
  1150                           ; 1 bytes @ 0x5C
  1151  0000BC                     	ds	1
  1152  0000BD                     ?_eval_poly:
  1153                           	opt stack 0
  1154  0000BD                     ?___flneg:
  1155                           	opt stack 0
  1156  0000BD                     eval_poly@x:
  1157                           	opt stack 0
  1158  0000BD                     ___flneg@f1:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x5D
  1162  0000BD                     	ds	4
  1163  0000C1                     ?_sqrt:
  1164                           	opt stack 0
  1165  0000C1                     ?_fabs:
  1166                           	opt stack 0
  1167  0000C1                     ?___fltol:
  1168                           	opt stack 0
  1169  0000C1                     eval_poly@d:
  1170                           	opt stack 0
  1171  0000C1                     fabs@d:
  1172                           	opt stack 0
  1173  0000C1                     ___fltol@f1:
  1174                           	opt stack 0
  1175  0000C1                     sqrt@a:
  1176                           	opt stack 0
  1177                           
  1178                           ; 4 bytes @ 0x61
  1179  0000C1                     	ds	2
  1180  0000C3                     eval_poly@n:
  1181                           	opt stack 0
  1182                           
  1183                           ; 2 bytes @ 0x63
  1184  0000C3                     	ds	2
  1185  0000C5                     ??_sqrt:
  1186  0000C5                     ??_eval_poly:
  1187  0000C5                     ??___fltol:
  1188  0000C5                     ___flge@ff1:
  1189                           	opt stack 0
  1190                           
  1191                           ; 4 bytes @ 0x65
  1192  0000C5                     	ds	4
  1193  0000C9                     ___fltol@sign1:
  1194                           	opt stack 0
  1195  0000C9                     eval_poly@res:
  1196                           	opt stack 0
  1197  0000C9                     ___flge@ff2:
  1198                           	opt stack 0
  1199                           
  1200                           ; 4 bytes @ 0x69
  1201  0000C9                     	ds	1
  1202  0000CA                     ___fltol@exp1:
  1203                           	opt stack 0
  1204                           
  1205                           ; 1 bytes @ 0x6A
  1206  0000CA                     	ds	1
  1207  0000CB                     ?___xxtofl:
  1208                           	opt stack 0
  1209  0000CB                     ___xxtofl@val:
  1210                           	opt stack 0
  1211                           
  1212                           ; 4 bytes @ 0x6B
  1213  0000CB                     	ds	2
  1214  0000CD                     ??___flge:
  1215                           
  1216                           ; 0 bytes @ 0x6D
  1217  0000CD                     	ds	2
  1218  0000CF                     ??___xxtofl:
  1219                           
  1220                           ; 0 bytes @ 0x6F
  1221  0000CF                     	ds	2
  1222  0000D1                     ?_atan:
  1223                           	opt stack 0
  1224  0000D1                     atan@f:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0x71
  1228  0000D1                     	ds	2
  1229  0000D3                     ?_floor:
  1230                           	opt stack 0
  1231  0000D3                     floor@x:
  1232                           	opt stack 0
  1233                           
  1234                           ; 4 bytes @ 0x73
  1235  0000D3                     	ds	2
  1236  0000D5                     ??_parallelo:
  1237  0000D5                     
  1238                           ; 0 bytes @ 0x75
  1239  0000D5                     	ds	2
  1240  0000D7                     ??_main:
  1241                           
  1242                           ; 0 bytes @ 0x77
  1243  0000D7                     	ds	1
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           postdec1	equ	0xFE5
  1251                           fsr1l	equ	0xFE1
  1252                           
  1253                           	psect	cstackCOMRAM
  1254  000029                     __pcstackCOMRAM:
  1255                           	opt stack 0
  1256  000029                     i1_CANisTxReady$2845:
  1257                           	opt stack 0
  1258  000029                     CANreceiveMessage@msg:
  1259                           	opt stack 0
  1260  000029                     i1CANsendMessage@identifier:
  1261                           	opt stack 0
  1262                           
  1263                           ; 4 bytes @ 0x0
  1264  000029                     	ds	2
  1265  00002B                     ??_CANreceiveMessage:
  1266                           
  1267                           ; 0 bytes @ 0x2
  1268  00002B                     	ds	2
  1269  00002D                     i1CANsendMessage@data:
  1270                           	opt stack 0
  1271                           
  1272                           ; 2 bytes @ 0x4
  1273  00002D                     	ds	2
  1274  00002F                     i1CANsendMessage@dataLength:
  1275                           	opt stack 0
  1276                           
  1277                           ; 1 bytes @ 0x6
  1278  00002F                     	ds	1
  1279  000030                     i1CANsendMessage@flags:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x7
  1283  000030                     	ds	1
  1284  000031                     ??i1_CANsendMessage:
  1285                           
  1286                           ; 0 bytes @ 0x8
  1287  000031                     	ds	2
  1288  000033                     CANreceiveMessage@error:
  1289                           	opt stack 0
  1290                           
  1291                           ; 1 bytes @ 0xA
  1292  000033                     	ds	1
  1293  000034                     CANreceiveMessage@tamp:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0xB
  1297  000034                     	ds	1
  1298  000035                     i1CANsendMessage@tamp:
  1299                           	opt stack 0
  1300                           
  1301                           ; 4 bytes @ 0xC
  1302  000035                     	ds	4
  1303  000039                     ??_ISR_Bassa:
  1304                           
  1305                           ; 0 bytes @ 0x10
  1306  000039                     	ds	21
  1307  00004E                     ISR_Bassa@PORTA_temp:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x25
  1311  00004E                     	ds	1
  1312  00004F                     ISR_Bassa@i:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x26
  1316  00004F                     	ds	1
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1l	equ	0xFE1
  1325                           
  1326 ;;
  1327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1328 ;;
  1329 ;; *************** function _main *****************
  1330 ;; Defined at:
  1331 ;;		line 221 in file "parcheggio.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1348 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels required when called:   10
  1351 ;; This function calls:
  1352 ;;		_CANisTxReady
  1353 ;;		_CANsendMessage
  1354 ;;		_can_interpreter
  1355 ;;		_configurations
  1356 ;;		_delay_ms
  1357 ;;		_park_routine
  1358 ;;		_park_search
  1359 ;; This function is called by:
  1360 ;;		Startup code after reset
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text0
  1365  0061F0                     __ptext0:
  1366                           	opt stack 0
  1367  0061F0                     _main:
  1368                           	opt stack 21
  1369                           
  1370                           ;parcheggio.c: 222: MUX_select[0] = 0b00000000;
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;incstack = 0
  1374  0061F0  0E00               	movlw	0
  1375  0061F2  0101               	movlb	1	; () banked
  1376  0061F4  6F00               	movwf	_MUX_select& (0+255),b
  1377                           
  1378                           ;parcheggio.c: 223: MUX_select[1] = 0b00000001;
  1379  0061F6  0E01               	movlw	1
  1380  0061F8  0101               	movlb	1	; () banked
  1381  0061FA  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1382                           
  1383                           ;parcheggio.c: 224: MUX_select[2] = 0b00000010;
  1384  0061FC  0E02               	movlw	2
  1385  0061FE  0101               	movlb	1	; () banked
  1386  006200  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1387                           
  1388                           ;parcheggio.c: 225: MUX_select[3] = 0b00000011;
  1389  006202  0E03               	movlw	3
  1390  006204  0101               	movlb	1	; () banked
  1391  006206  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1392                           
  1393                           ;parcheggio.c: 226: MUX_select[4] = 0b00000100;
  1394  006208  0E04               	movlw	4
  1395  00620A  0101               	movlb	1	; () banked
  1396  00620C  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1397                           
  1398                           ;parcheggio.c: 227: MUX_select[5] = 0b00000101;
  1399  00620E  0E05               	movlw	5
  1400  006210  0101               	movlb	1	; () banked
  1401  006212  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1402                           
  1403                           ;parcheggio.c: 228: MUX_select[6] = 0b00000110;
  1404  006214  0E06               	movlw	6
  1405  006216  0101               	movlb	1	; () banked
  1406  006218  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1407                           
  1408                           ;parcheggio.c: 229: MUX_select[7] = 0b00000111;
  1409  00621A  0E07               	movlw	7
  1410  00621C  0101               	movlb	1	; () banked
  1411  00621E  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1412                           
  1413                           ; BSR set to: 1
  1414                           ;parcheggio.c: 231: configurations();
  1415  006220  EC1F  F032         	call	_configurations	;wreg free
  1416                           
  1417                           ;parcheggio.c: 233: PORTBbits.RB4 = 0;
  1418  006224  9881               	bcf	3969,4,c	;volatile
  1419                           
  1420                           ;parcheggio.c: 234: PORTBbits.RB5 = 0;
  1421  006226  9A81               	bcf	3969,5,c	;volatile
  1422                           
  1423                           ;parcheggio.c: 235: PORTBbits.RB6 = 0;
  1424  006228  9C81               	bcf	3969,6,c	;volatile
  1425                           
  1426                           ;parcheggio.c: 237: request_sent = 0;
  1427  00622A  9651               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1428                           
  1429                           ;parcheggio.c: 238: start_operation = 0;
  1430  00622C  9A51               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1431                           
  1432                           ;parcheggio.c: 239: delay_ms(500);
  1433  00622E  0E01               	movlw	1
  1434  006230  0100               	movlb	0	; () banked
  1435  006232  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1436  006234  0EF4               	movlw	244
  1437  006236  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1438  006238  ECC1  F032         	call	_delay_ms	;wreg free
  1439                           
  1440                           ;parcheggio.c: 242: while (activation != 1) {
  1441                           
  1442                           ;parcheggio.c: 241: while (1) {
  1443  00623C  D033               	goto	l8094
  1444  00623E                     l8086:
  1445                           
  1446                           ;parcheggio.c: 243: delay_ms(100);
  1447  00623E  0E00               	movlw	0
  1448  006240  0100               	movlb	0	; () banked
  1449  006242  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1450  006244  0E64               	movlw	100
  1451  006246  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1452  006248  ECC1  F032         	call	_delay_ms	;wreg free
  1453  00624C                     l8088:
  1454  00624C  EC41  F033         	call	_CANisTxReady	;wreg free
  1455  006250  0900               	iorlw	0
  1456  006252  B4D8               	btfsc	status,2,c
  1457  006254  D7FB               	goto	l8088
  1458                           
  1459                           ;parcheggio.c: 245: PORTBbits.RB4 = ~PORTBbits.RB4;
  1460  006256  A881               	btfss	3969,4,c	;volatile
  1461  006258  D002               	goto	u10610
  1462  00625A  0E01               	movlw	1
  1463  00625C  D001               	goto	u10616
  1464  00625E                     u10610:
  1465  00625E  0E00               	movlw	0
  1466  006260                     u10616:
  1467  006260  0AFF               	xorlw	255
  1468  006262  0100               	movlb	0	; () banked
  1469  006264  6FD7               	movwf	??_main& (0+255),b
  1470  006266  0100               	movlb	0	; () banked
  1471  006268  3BD7               	swapf	??_main& (0+255),f,b
  1472  00626A  5081               	movf	3969,w,c	;volatile
  1473  00626C  0100               	movlb	0	; () banked
  1474  00626E  19D7               	xorwf	??_main& (0+255),w,b
  1475  006270  0BEF               	andlw	-17
  1476  006272  19D7               	xorwf	??_main& (0+255),w,b
  1477  006274  6E81               	movwf	3969,c	;volatile
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;parcheggio.c: 246: CANsendMessage(0xAA, sensor_distance_short, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1481  006276  0EAA               	movlw	170
  1482  006278  0100               	movlb	0	; () banked
  1483  00627A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1484  00627C  0E00               	movlw	0
  1485  00627E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1486  006280  0E00               	movlw	0
  1487  006282  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1488  006284  0E00               	movlw	0
  1489  006286  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1490  006288  0E83               	movlw	low _sensor_distance_short
  1491  00628A  0100               	movlb	0	; () banked
  1492  00628C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1493  00628E  0E01               	movlw	high _sensor_distance_short
  1494  006290  0100               	movlb	0	; () banked
  1495  006292  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1496  006294  0E08               	movlw	8
  1497  006296  0100               	movlb	0	; () banked
  1498  006298  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1499  00629A  0EFC               	movlw	252
  1500  00629C  0100               	movlb	0	; () banked
  1501  00629E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1502  0062A0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1503  0062A4                     l8094:
  1504  0062A4  A050               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1505  0062A6  D7CB               	goto	l8086
  1506                           
  1507                           ;parcheggio.c: 262: }
  1508                           ;parcheggio.c: 264: park_search();
  1509  0062A8  EC62  F02B         	call	_park_search	;wreg free
  1510                           
  1511                           ;parcheggio.c: 265: can_interpreter();
  1512  0062AC  EC55  F032         	call	_can_interpreter	;wreg free
  1513                           
  1514                           ;parcheggio.c: 266: park_routine();
  1515  0062B0  EC2C  F01D         	call	_park_routine	;wreg free
  1516  0062B4  D7F7               	goto	l8094
  1517  0062B6                     __end_of_main:
  1518                           	opt stack 0
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           postinc0	equ	0xFEE
  1524                           wreg	equ	0xFE8
  1525                           postdec1	equ	0xFE5
  1526                           fsr1l	equ	0xFE1
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _park_search *****************
  1530 ;; Defined at:
  1531 ;;		line 270 in file "parcheggio.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;		None               void
  1538 ;; Registers used:
  1539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;Total ram usage:        2 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    9
  1552 ;; This function calls:
  1553 ;;		_CANisTxReady
  1554 ;;		_CANsendMessage
  1555 ;;		___xxtofl
  1556 ;;		_abs
  1557 ;;		_parallelo
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text1
  1564  0056C4                     __ptext1:
  1565                           	opt stack 0
  1566  0056C4                     _park_search:
  1567                           	opt stack 21
  1568                           
  1569                           ;parcheggio.c: 271: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1570                           
  1571                           ;incstack = 0
  1572  0056C4  D0DD               	goto	l741
  1573  0056C6                     l7814:
  1574                           
  1575                           ;parcheggio.c: 272: parallelo();
  1576  0056C6  EC1D  F028         	call	_parallelo	;wreg free
  1577                           
  1578                           ;parcheggio.c: 274: if (sensor_distance[0] > 50) {
  1579  0056CA  5002               	movf	_sensor_distance+1,w,c	;volatile
  1580  0056CC  E104               	bnz	u10220
  1581  0056CE  0E33               	movlw	51
  1582  0056D0  5C01               	subwf	_sensor_distance,w,c	;volatile
  1583  0056D2  A0D8               	btfss	status,0,c
  1584  0056D4  D02A               	goto	l743
  1585  0056D6                     u10220:
  1586                           
  1587                           ;parcheggio.c: 275: if (request_sent == 0) {
  1588  0056D6  B651               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1589  0056D8  D026               	goto	l7830
  1590  0056DA                     l7822:
  1591  0056DA  EC41  F033         	call	_CANisTxReady	;wreg free
  1592  0056DE  0900               	iorlw	0
  1593  0056E0  B4D8               	btfsc	status,2,c
  1594  0056E2  D7FB               	goto	l7822
  1595                           
  1596                           ;parcheggio.c: 277: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1597  0056E4  0E08               	movlw	8
  1598  0056E6  0100               	movlb	0	; () banked
  1599  0056E8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1600  0056EA  0E00               	movlw	0
  1601  0056EC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1602  0056EE  0E00               	movlw	0
  1603  0056F0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1604  0056F2  0E00               	movlw	0
  1605  0056F4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1606  0056F6  0E53               	movlw	low _data
  1607  0056F8  0100               	movlb	0	; () banked
  1608  0056FA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1609  0056FC  0E01               	movlw	high _data
  1610  0056FE  0100               	movlb	0	; () banked
  1611  005700  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1612  005702  0E08               	movlw	8
  1613  005704  0100               	movlb	0	; () banked
  1614  005706  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1615  005708  0EFC               	movlw	252
  1616  00570A  0100               	movlb	0	; () banked
  1617  00570C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1618  00570E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1619                           
  1620                           ;parcheggio.c: 278: request_sent = 1;
  1621  005712  8651               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1622                           
  1623                           ;parcheggio.c: 279: alignment_gap = 0;
  1624  005714  0E00               	movlw	0
  1625  005716  0100               	movlb	0	; () banked
  1626  005718  6FD8               	movwf	_alignment_gap& (0+255),b
  1627  00571A  0E00               	movlw	0
  1628  00571C  6FD9               	movwf	(_alignment_gap+1)& (0+255),b
  1629  00571E  0E00               	movlw	0
  1630  005720  6FDA               	movwf	(_alignment_gap+2)& (0+255),b
  1631  005722  0E00               	movlw	0
  1632  005724  6FDB               	movwf	(_alignment_gap+3)& (0+255),b
  1633  005726                     l7830:
  1634                           
  1635                           ;parcheggio.c: 280: }
  1636                           ;parcheggio.c: 281: LATBbits.LATB4 = 1;
  1637  005726  888A               	bsf	3978,4,c	;volatile
  1638                           
  1639                           ;parcheggio.c: 282: } else {
  1640  005728  D02F               	goto	l7834
  1641  00572A                     l743:
  1642                           
  1643                           ;parcheggio.c: 283: LATBbits.LATB4 = 0;
  1644  00572A  988A               	bcf	3978,4,c	;volatile
  1645                           
  1646                           ;parcheggio.c: 284: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1647  00572C  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1648  005730  CFDE F1B8          	movff	postinc2,??_park_search
  1649  005734  CFDD F1B9          	movff	postdec2,??_park_search+1
  1650  005738  0101               	movlb	1	; () banked
  1651  00573A  1FB8               	comf	??_park_search& (0+255),f,b
  1652  00573C  1FB9               	comf	(??_park_search+1)& (0+255),f,b
  1653  00573E  4BB8               	infsnz	??_park_search& (0+255),f,b
  1654  005740  2BB9               	incf	(??_park_search+1)& (0+255),f,b
  1655  005742  5001               	movf	_sensor_distance,w,c	;volatile
  1656  005744  0101               	movlb	1	; () banked
  1657  005746  25B8               	addwf	??_park_search& (0+255),w,b
  1658  005748  0100               	movlb	0	; () banked
  1659  00574A  6F77               	movwf	abs@a& (0+255),b
  1660  00574C  5002               	movf	_sensor_distance+1,w,c	;volatile
  1661  00574E  0101               	movlb	1	; () banked
  1662  005750  21B9               	addwfc	(??_park_search+1)& (0+255),w,b
  1663  005752  0100               	movlb	0	; () banked
  1664  005754  6F78               	movwf	(abs@a+1)& (0+255),b
  1665  005756  EC15  F033         	call	_abs	;wreg free
  1666  00575A  0100               	movlb	0	; () banked
  1667  00575C  C077  F0CB         	movff	?_abs,___xxtofl@val
  1668  005760  0100               	movlb	0	; () banked
  1669  005762  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1670  005766  0100               	movlb	0	; () banked
  1671  005768  0E00               	movlw	0
  1672  00576A  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1673  00576C  0EFF               	movlw	-1
  1674  00576E  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1675  005770  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1676  005772  0E01               	movlw	1
  1677  005774  EC7B  F02A         	call	___xxtofl
  1678  005778  C0CB  F0D8         	movff	?___xxtofl,_alignment_gap
  1679  00577C  C0CC  F0D9         	movff	?___xxtofl+1,_alignment_gap+1
  1680  005780  C0CD  F0DA         	movff	?___xxtofl+2,_alignment_gap+2
  1681  005784  C0CE  F0DB         	movff	?___xxtofl+3,_alignment_gap+3
  1682  005788                     l7834:
  1683                           
  1684                           ;parcheggio.c: 285: }
  1685                           ;parcheggio.c: 287: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1686  005788  5002               	movf	_sensor_distance+1,w,c	;volatile
  1687  00578A  E128               	bnz	l7846
  1688  00578C  0E32               	movlw	50
  1689  00578E  5C01               	subwf	_sensor_distance,w,c	;volatile
  1690  005790  A0D8               	btfss	status,0,c
  1691  005792  A651               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1692  005794  D023               	goto	l7846
  1693  005796  5004               	movf	_sensor_distance+3,w,c	;volatile
  1694  005798  E121               	bnz	l7846
  1695  00579A  0E32               	movlw	50
  1696  00579C  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  1697  00579E  B0D8               	btfsc	status,0,c
  1698  0057A0  D01D               	goto	l7846
  1699                           
  1700                           ;parcheggio.c: 288: request_sent = 0;
  1701  0057A2  9651               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1702  0057A4                     l7842:
  1703  0057A4  EC41  F033         	call	_CANisTxReady	;wreg free
  1704  0057A8  0900               	iorlw	0
  1705  0057AA  B4D8               	btfsc	status,2,c
  1706  0057AC  D7FB               	goto	l7842
  1707                           
  1708                           ;parcheggio.c: 290: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1709  0057AE  0E07               	movlw	7
  1710  0057B0  0100               	movlb	0	; () banked
  1711  0057B2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1712  0057B4  0E00               	movlw	0
  1713  0057B6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1714  0057B8  0E00               	movlw	0
  1715  0057BA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1716  0057BC  0E00               	movlw	0
  1717  0057BE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1718  0057C0  0E53               	movlw	low _data
  1719  0057C2  0100               	movlb	0	; () banked
  1720  0057C4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1721  0057C6  0E01               	movlw	high _data
  1722  0057C8  0100               	movlb	0	; () banked
  1723  0057CA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1724  0057CC  0E08               	movlw	8
  1725  0057CE  0100               	movlb	0	; () banked
  1726  0057D0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1727  0057D2  0EFC               	movlw	252
  1728  0057D4  0100               	movlb	0	; () banked
  1729  0057D6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1730  0057D8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1731  0057DC                     l7846:
  1732                           
  1733                           ;parcheggio.c: 291: }
  1734                           ;parcheggio.c: 293: if (distance_received == 1) {
  1735  0057DC  AA50               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1736  0057DE  D050               	goto	l741
  1737                           
  1738                           ;parcheggio.c: 294: if (distance_average > 65) {
  1739  0057E0  0100               	movlb	0	; () banked
  1740  0057E2  51E3               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1741  0057E4  E105               	bnz	u10300
  1742  0057E6  0E42               	movlw	66
  1743  0057E8  0100               	movlb	0	; () banked
  1744  0057EA  5DE2               	subwf	_distance_average& (0+255),w,b	;volatile
  1745  0057EC  A0D8               	btfss	status,0,c
  1746  0057EE  D046               	goto	l754
  1747  0057F0                     u10300:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;parcheggio.c: 295: PORTBbits.RB5 = 1;
  1751  0057F0  8A81               	bsf	3969,5,c	;volatile
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;parcheggio.c: 296: data[0] = 1;
  1755  0057F2  0E01               	movlw	1
  1756  0057F4  0101               	movlb	1	; () banked
  1757  0057F6  6F53               	movwf	_data& (0+255),b
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;parcheggio.c: 297: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1761  0057F8  0E0B               	movlw	11
  1762  0057FA  0100               	movlb	0	; () banked
  1763  0057FC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1764  0057FE  0E00               	movlw	0
  1765  005800  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1766  005802  0E00               	movlw	0
  1767  005804  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1768  005806  0E00               	movlw	0
  1769  005808  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1770  00580A  0E53               	movlw	low _data
  1771  00580C  0100               	movlb	0	; () banked
  1772  00580E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1773  005810  0E01               	movlw	high _data
  1774  005812  0100               	movlb	0	; () banked
  1775  005814  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1776  005816  0E01               	movlw	1
  1777  005818  0100               	movlb	0	; () banked
  1778  00581A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1779  00581C  0EBC               	movlw	188
  1780  00581E  0100               	movlb	0	; () banked
  1781  005820  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1782  005822  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1783                           
  1784                           ;parcheggio.c: 298: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1785  005826  B851               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1786  005828  D02B               	goto	l741
  1787  00582A  5002               	movf	_sensor_distance+1,w,c	;volatile
  1788  00582C  E129               	bnz	l741
  1789  00582E  0E28               	movlw	40
  1790  005830  5C01               	subwf	_sensor_distance,w,c	;volatile
  1791  005832  B0D8               	btfsc	status,0,c
  1792  005834  D025               	goto	l741
  1793                           
  1794                           ;parcheggio.c: 299: data_test[0] = 50;
  1795  005836  0E32               	movlw	50
  1796  005838  0101               	movlb	1	; () banked
  1797  00583A  6F7B               	movwf	_data_test& (0+255),b
  1798                           
  1799                           ; BSR set to: 1
  1800                           ;parcheggio.c: 300: asd = 1;
  1801  00583C  8250               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1802  00583E                     l7864:
  1803  00583E  EC41  F033         	call	_CANisTxReady	;wreg free
  1804  005842  0900               	iorlw	0
  1805  005844  B4D8               	btfsc	status,2,c
  1806  005846  D7FB               	goto	l7864
  1807                           
  1808                           ;parcheggio.c: 302: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1809  005848  0E0D               	movlw	13
  1810  00584A  0100               	movlb	0	; () banked
  1811  00584C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1812  00584E  0E00               	movlw	0
  1813  005850  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1814  005852  0E00               	movlw	0
  1815  005854  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1816  005856  0E00               	movlw	0
  1817  005858  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1818  00585A  0E7B               	movlw	low _data_test
  1819  00585C  0100               	movlb	0	; () banked
  1820  00585E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1821  005860  0E01               	movlw	high _data_test
  1822  005862  0100               	movlb	0	; () banked
  1823  005864  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1824  005866  0E08               	movlw	8
  1825  005868  0100               	movlb	0	; () banked
  1826  00586A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1827  00586C  0EBC               	movlw	188
  1828  00586E  0100               	movlb	0	; () banked
  1829  005870  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1830  005872  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1831                           
  1832                           ;parcheggio.c: 304: distance_received1 = 0;
  1833  005876  9C50               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1834                           
  1835                           ;parcheggio.c: 305: request_sent1 = 1;
  1836  005878  8851               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1837                           
  1838                           ;parcheggio.c: 306: }
  1839                           ;parcheggio.c: 307: } else {
  1840  00587A  D002               	goto	l741
  1841  00587C                     l754:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;parcheggio.c: 308: distance_received = 0;
  1845  00587C  9A50               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1846                           
  1847                           ;parcheggio.c: 309: PORTBbits.RB5 = 0;
  1848  00587E  9A81               	bcf	3969,5,c	;volatile
  1849  005880                     l741:
  1850  005880  A050               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1851  005882  0012               	return	
  1852  005884  BA81               	btfsc	3969,5,c	;volatile
  1853  005886  0012               	return	
  1854  005888  D71E               	goto	l7814
  1855  00588A                     __end_of_park_search:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postdec1	equ	0xFE5
  1864                           fsr1l	equ	0xFE1
  1865                           postinc2	equ	0xFDE
  1866                           postdec2	equ	0xFDD
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function _park_routine *****************
  1870 ;; Defined at:
  1871 ;;		line 315 in file "parcheggio.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;		None               void
  1878 ;; Registers used:
  1879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;Total ram usage:       12 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    9
  1892 ;; This function calls:
  1893 ;;		_CANisTxReady
  1894 ;;		_CANsendMessage
  1895 ;;		___fladd
  1896 ;;		___flneg
  1897 ;;		___fltol
  1898 ;;		___xxtofl
  1899 ;;		_can_send
  1900 ;;		_delay_ms
  1901 ;;		_delay_s
  1902 ;;		_matematica
  1903 ;;		_parallelo
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text2
  1910  003A58                     __ptext2:
  1911                           	opt stack 0
  1912  003A58                     _park_routine:
  1913                           	opt stack 21
  1914                           
  1915                           ;parcheggio.c: 316: avvicinamento = 0;
  1916                           
  1917                           ;incstack = 0
  1918  003A58  9450               	bcf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  1919                           
  1920                           ;parcheggio.c: 317: data_correction[0] = 0;
  1921  003A5A  0E00               	movlw	0
  1922  003A5C  0101               	movlb	1	; () banked
  1923  003A5E  6F63               	movwf	_data_correction& (0+255),b
  1924                           
  1925                           ; BSR set to: 1
  1926                           ;parcheggio.c: 318: parallelo();
  1927  003A60  EC1D  F028         	call	_parallelo	;wreg free
  1928                           
  1929                           ;parcheggio.c: 320: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1930  003A64  D03E               	goto	l7894
  1931  003A66                     l7880:
  1932                           
  1933                           ;parcheggio.c: 321: delay_ms(200);
  1934  003A66  0E00               	movlw	0
  1935  003A68  0100               	movlb	0	; () banked
  1936  003A6A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1937  003A6C  0EC8               	movlw	200
  1938  003A6E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1939  003A70  ECC1  F032         	call	_delay_ms	;wreg free
  1940                           
  1941                           ;parcheggio.c: 322: PORTBbits.RB6 = ~PORTBbits.RB6;
  1942  003A74  AC81               	btfss	3969,6,c	;volatile
  1943  003A76  D002               	goto	u10360
  1944  003A78  0E01               	movlw	1
  1945  003A7A  D001               	goto	u10366
  1946  003A7C                     u10360:
  1947  003A7C  0E00               	movlw	0
  1948  003A7E                     u10366:
  1949  003A7E  0AFF               	xorlw	255
  1950  003A80  0101               	movlb	1	; () banked
  1951  003A82  6FDC               	movwf	??_park_routine& (0+255),b
  1952  003A84  0101               	movlb	1	; () banked
  1953  003A86  3BDC               	swapf	??_park_routine& (0+255),f,b
  1954  003A88  47DC               	rlncf	??_park_routine& (0+255),f,b
  1955  003A8A  47DC               	rlncf	??_park_routine& (0+255),f,b
  1956  003A8C  5081               	movf	3969,w,c	;volatile
  1957  003A8E  0101               	movlb	1	; () banked
  1958  003A90  19DC               	xorwf	??_park_routine& (0+255),w,b
  1959  003A92  0BBF               	andlw	-65
  1960  003A94  19DC               	xorwf	??_park_routine& (0+255),w,b
  1961  003A96  6E81               	movwf	3969,c	;volatile
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;parcheggio.c: 323: parallelo();
  1965  003A98  EC1D  F028         	call	_parallelo	;wreg free
  1966                           
  1967                           ;parcheggio.c: 324: if (data_correction[0] > 30) {
  1968  003A9C  0E1E               	movlw	30
  1969  003A9E  0101               	movlb	1	; () banked
  1970  003AA0  6563               	cpfsgt	_data_correction& (0+255),b
  1971  003AA2  D003               	goto	l7890
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;parcheggio.c: 325: data_correction[0] = 0;
  1975  003AA4  0E00               	movlw	0
  1976  003AA6  0101               	movlb	1	; () banked
  1977  003AA8  6F63               	movwf	_data_correction& (0+255),b
  1978  003AAA                     l7890:
  1979  003AAA  EC41  F033         	call	_CANisTxReady	;wreg free
  1980  003AAE  0900               	iorlw	0
  1981  003AB0  B4D8               	btfsc	status,2,c
  1982  003AB2  D7FB               	goto	l7890
  1983                           
  1984                           ;parcheggio.c: 328: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1985  003AB4  0E0E               	movlw	14
  1986  003AB6  0100               	movlb	0	; () banked
  1987  003AB8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1988  003ABA  0E00               	movlw	0
  1989  003ABC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1990  003ABE  0E00               	movlw	0
  1991  003AC0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1992  003AC2  0E00               	movlw	0
  1993  003AC4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1994  003AC6  0E63               	movlw	low _data_correction
  1995  003AC8  0100               	movlb	0	; () banked
  1996  003ACA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1997  003ACC  0E01               	movlw	high _data_correction
  1998  003ACE  0100               	movlb	0	; () banked
  1999  003AD0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2000  003AD2  0E08               	movlw	8
  2001  003AD4  0100               	movlb	0	; () banked
  2002  003AD6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2003  003AD8  0EBC               	movlw	188
  2004  003ADA  0100               	movlb	0	; () banked
  2005  003ADC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2006  003ADE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2007  003AE2                     l7894:
  2008  003AE2  B250               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2009  003AE4  AA81               	btfss	3969,5,c	;volatile
  2010  003AE6  D002               	goto	l774
  2011  003AE8  B050               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  2012  003AEA  D7BD               	goto	l7880
  2013  003AEC                     l774:
  2014                           
  2015                           ;parcheggio.c: 329: }
  2016                           ;parcheggio.c: 331: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  2017  003AEC  BA81               	btfsc	3969,5,c	;volatile
  2018  003AEE  A050               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2019  003AF0  D02F               	goto	l7914
  2020                           
  2021                           ;parcheggio.c: 332: PORTBbits.RB6 = 0;
  2022  003AF2  9C81               	bcf	3969,6,c	;volatile
  2023                           
  2024                           ;parcheggio.c: 333: data[0] = 2;
  2025  003AF4  0E02               	movlw	2
  2026  003AF6  0101               	movlb	1	; () banked
  2027  003AF8  6F53               	movwf	_data& (0+255),b
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;parcheggio.c: 334: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2031  003AFA  0E0B               	movlw	11
  2032  003AFC  0100               	movlb	0	; () banked
  2033  003AFE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2034  003B00  0E00               	movlw	0
  2035  003B02  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2036  003B04  0E00               	movlw	0
  2037  003B06  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2038  003B08  0E00               	movlw	0
  2039  003B0A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2040  003B0C  0E53               	movlw	low _data
  2041  003B0E  0100               	movlb	0	; () banked
  2042  003B10  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2043  003B12  0E01               	movlw	high _data
  2044  003B14  0100               	movlb	0	; () banked
  2045  003B16  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2046  003B18  0E01               	movlw	1
  2047  003B1A  0100               	movlb	0	; () banked
  2048  003B1C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2049  003B1E  0EBC               	movlw	188
  2050  003B20  0100               	movlb	0	; () banked
  2051  003B22  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2052  003B24  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2053                           
  2054                           ;parcheggio.c: 335: }
  2055                           ;parcheggio.c: 337: while ((start_operation != 1)&&(activation == 1)) {
  2056  003B28  D013               	goto	l7914
  2057  003B2A                     l777:
  2058                           
  2059                           ;parcheggio.c: 338: if (first == 0) {
  2060  003B2A  B051               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2061  003B2C  D011               	goto	l7914
  2062                           
  2063                           ;parcheggio.c: 339: set_speed = 0;
  2064  003B2E  0E00               	movlw	0
  2065  003B30  0100               	movlb	0	; () banked
  2066  003B32  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2067  003B34  0E00               	movlw	0
  2068  003B36  6FE6               	movwf	_set_speed& (0+255),b
  2069                           
  2070                           ;parcheggio.c: 340: data_steering[0] = 90;
  2071  003B38  0E5A               	movlw	90
  2072  003B3A  0101               	movlb	1	; () banked
  2073  003B3C  6F73               	movwf	_data_steering& (0+255),b
  2074                           
  2075                           ;parcheggio.c: 341: data_brake [0] = 0;
  2076  003B3E  0E00               	movlw	0
  2077  003B40  0101               	movlb	1	; () banked
  2078  003B42  6F5B               	movwf	_data_brake& (0+255),b
  2079                           
  2080                           ;parcheggio.c: 342: data_brake [1] = 1;
  2081  003B44  0E01               	movlw	1
  2082  003B46  0101               	movlb	1	; () banked
  2083  003B48  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2084                           
  2085                           ; BSR set to: 1
  2086                           ;parcheggio.c: 343: can_send();
  2087  003B4A  EC94  F02F         	call	_can_send	;wreg free
  2088                           
  2089                           ;parcheggio.c: 344: first = 1;
  2090  003B4E  8051               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2091  003B50                     l7914:
  2092  003B50  AA51               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2093  003B52  A050               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2094  003B54  D1C2               	goto	l8024
  2095  003B56  D7E9               	goto	l777
  2096  003B58                     l783:
  2097                           
  2098                           ;parcheggio.c: 349: LATBbits.LATB4 = 1;
  2099  003B58  888A               	bsf	3978,4,c	;volatile
  2100                           
  2101                           ;parcheggio.c: 351: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2102  003B5A  5001               	movf	_sensor_distance,w,c	;volatile
  2103  003B5C  2403               	addwf	_sensor_distance+2,w,c	;volatile
  2104  003B5E  0101               	movlb	1	; () banked
  2105  003B60  6FDC               	movwf	??_park_routine& (0+255),b
  2106  003B62  5002               	movf	_sensor_distance+1,w,c	;volatile
  2107  003B64  2004               	addwfc	_sensor_distance+3,w,c	;volatile
  2108  003B66  0101               	movlb	1	; () banked
  2109  003B68  6FDD               	movwf	(??_park_routine+1)& (0+255),b
  2110  003B6A  90D8               	bcf	status,0,c
  2111  003B6C  0101               	movlb	1	; () banked
  2112  003B6E  31DD               	rrcf	(??_park_routine+1)& (0+255),w,b
  2113  003B70  0101               	movlb	1	; () banked
  2114  003B72  6FDF               	movwf	(??_park_routine+3)& (0+255),b
  2115  003B74  0101               	movlb	1	; () banked
  2116  003B76  31DC               	rrcf	??_park_routine& (0+255),w,b
  2117  003B78  0101               	movlb	1	; () banked
  2118  003B7A  6FDE               	movwf	(??_park_routine+2)& (0+255),b
  2119  003B7C  C1DE  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2120  003B80  C1DF  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2121  003B84  0100               	movlb	0	; () banked
  2122  003B86  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2123  003B88  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2124  003B8A  0E00               	movlw	0
  2125  003B8C  EC7B  F02A         	call	___xxtofl
  2126  003B90  C0CB  F134         	movff	?___xxtofl,_bordo	;volatile
  2127  003B94  C0CC  F135         	movff	?___xxtofl+1,_bordo+1	;volatile
  2128  003B98  C0CD  F136         	movff	?___xxtofl+2,_bordo+2	;volatile
  2129  003B9C  C0CE  F137         	movff	?___xxtofl+3,_bordo+3	;volatile
  2130                           
  2131                           ;parcheggio.c: 352: matematica();
  2132  003BA0  EC3A  F013         	call	_matematica	;wreg free
  2133                           
  2134                           ;parcheggio.c: 353: set_speed = 0;
  2135  003BA4  0E00               	movlw	0
  2136  003BA6  0100               	movlb	0	; () banked
  2137  003BA8  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2138  003BAA  0E00               	movlw	0
  2139  003BAC  6FE6               	movwf	_set_speed& (0+255),b
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;parcheggio.c: 354: data_steering[0] = 90;
  2143  003BAE  0E5A               	movlw	90
  2144  003BB0  0101               	movlb	1	; () banked
  2145  003BB2  6F73               	movwf	_data_steering& (0+255),b
  2146                           
  2147                           ; BSR set to: 1
  2148                           ;parcheggio.c: 355: data_brake [0] = 0;
  2149  003BB4  0E00               	movlw	0
  2150  003BB6  0101               	movlb	1	; () banked
  2151  003BB8  6F5B               	movwf	_data_brake& (0+255),b
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;parcheggio.c: 356: data_brake [1] = 1;
  2155  003BBA  0E01               	movlw	1
  2156  003BBC  0101               	movlb	1	; () banked
  2157  003BBE  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;parcheggio.c: 357: can_send();
  2161  003BC0  EC94  F02F         	call	_can_send	;wreg free
  2162                           
  2163                           ;parcheggio.c: 358: delay_s(1);
  2164  003BC4  0E01               	movlw	1
  2165  003BC6  EC2B  F033         	call	_delay_s
  2166                           
  2167                           ;parcheggio.c: 360: data_brake [0] = 3;
  2168  003BCA  0E03               	movlw	3
  2169  003BCC  0101               	movlb	1	; () banked
  2170  003BCE  6F5B               	movwf	_data_brake& (0+255),b
  2171                           
  2172                           ; BSR set to: 1
  2173                           ;parcheggio.c: 361: data_brake [1] = 1;
  2174  003BD0  0E01               	movlw	1
  2175  003BD2  0101               	movlb	1	; () banked
  2176  003BD4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2177                           
  2178                           ; BSR set to: 1
  2179                           ;parcheggio.c: 363: set_speed = 1000;
  2180  003BD6  0E03               	movlw	3
  2181  003BD8  0100               	movlb	0	; () banked
  2182  003BDA  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2183  003BDC  0EE8               	movlw	232
  2184  003BDE  6FE6               	movwf	_set_speed& (0+255),b
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;parcheggio.c: 364: dir = 0;
  2188  003BE0  9650               	bcf	_dir/(0+8),_dir& (0+7),c
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;parcheggio.c: 365: data_steering[0] = 90;
  2192  003BE2  0E5A               	movlw	90
  2193  003BE4  0101               	movlb	1	; () banked
  2194  003BE6  6F73               	movwf	_data_steering& (0+255),b
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;parcheggio.c: 366: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2198  003BE8  0E00               	movlw	0
  2199  003BEA  0100               	movlb	0	; () banked
  2200  003BEC  6FAD               	movwf	___fladd@a& (0+255),b
  2201  003BEE  0E00               	movlw	0
  2202  003BF0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2203  003BF2  0E70               	movlw	112
  2204  003BF4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2205  003BF6  0E41               	movlw	65
  2206  003BF8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2207  003BFA  C138  F0A9         	movff	_n,___fladd@b
  2208  003BFE  C139  F0AA         	movff	_n+1,___fladd@b+1
  2209  003C02  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2210  003C06  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2211  003C0A  EC85  F018         	call	___fladd	;wreg free
  2212  003C0E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2213  003C12  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2214  003C16  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2215  003C1A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2216  003C1E  ECDE  F032         	call	___flneg	;wreg free
  2217  003C22  C0BD  F1E0         	movff	?___flneg,_park_routine$3742
  2218  003C26  C0BE  F1E1         	movff	?___flneg+1,_park_routine$3742+1
  2219  003C2A  C0BF  F1E2         	movff	?___flneg+2,_park_routine$3742+2
  2220  003C2E  C0C0  F1E3         	movff	?___flneg+3,_park_routine$3742+3
  2221                           
  2222                           ;parcheggio.c: 366: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2223  003C32  C128  F0AD         	movff	_Pmin,___fladd@a
  2224  003C36  C129  F0AE         	movff	_Pmin+1,___fladd@a+1
  2225  003C3A  C12A  F0AF         	movff	_Pmin+2,___fladd@a+2
  2226  003C3E  C12B  F0B0         	movff	_Pmin+3,___fladd@a+3
  2227  003C42  C1E0  F0A9         	movff	_park_routine$3742,___fladd@b
  2228  003C46  C1E1  F0AA         	movff	_park_routine$3742+1,___fladd@b+1
  2229  003C4A  C1E2  F0AB         	movff	_park_routine$3742+2,___fladd@b+2
  2230  003C4E  C1E3  F0AC         	movff	_park_routine$3742+3,___fladd@b+3
  2231  003C52  EC85  F018         	call	___fladd	;wreg free
  2232  003C56  C0A9  F1E4         	movff	?___fladd,_park_routine$3743
  2233  003C5A  C0AA  F1E5         	movff	?___fladd+1,_park_routine$3743+1
  2234  003C5E  C0AB  F1E6         	movff	?___fladd+2,_park_routine$3743+2
  2235  003C62  C0AC  F1E7         	movff	?___fladd+3,_park_routine$3743+3
  2236                           
  2237                           ;parcheggio.c: 366: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2238  003C66  0E00               	movlw	0
  2239  003C68  0100               	movlb	0	; () banked
  2240  003C6A  6FAD               	movwf	___fladd@a& (0+255),b
  2241  003C6C  0E00               	movlw	0
  2242  003C6E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2243  003C70  0E5C               	movlw	92
  2244  003C72  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2245  003C74  0E42               	movlw	66
  2246  003C76  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2247  003C78  C1E4  F0A9         	movff	_park_routine$3743,___fladd@b
  2248  003C7C  C1E5  F0AA         	movff	_park_routine$3743+1,___fladd@b+1
  2249  003C80  C1E6  F0AB         	movff	_park_routine$3743+2,___fladd@b+2
  2250  003C84  C1E7  F0AC         	movff	_park_routine$3743+3,___fladd@b+3
  2251  003C88  EC85  F018         	call	___fladd	;wreg free
  2252  003C8C  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2253  003C90  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2254  003C94  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2255  003C98  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2256  003C9C  EC0E  F02F         	call	___fltol	;wreg free
  2257  003CA0  0100               	movlb	0	; () banked
  2258  003CA2  51C1               	movf	?___fltol& (0+255),w,b
  2259  003CA4  0101               	movlb	1	; () banked
  2260  003CA6  6F7B               	movwf	_data_test& (0+255),b
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;parcheggio.c: 367: asd = 1;
  2264  003CA8  8250               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;parcheggio.c: 368: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2268  003CAA  0E0D               	movlw	13
  2269  003CAC  0100               	movlb	0	; () banked
  2270  003CAE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2271  003CB0  0E00               	movlw	0
  2272  003CB2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2273  003CB4  0E00               	movlw	0
  2274  003CB6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2275  003CB8  0E00               	movlw	0
  2276  003CBA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2277  003CBC  0E7B               	movlw	low _data_test
  2278  003CBE  0100               	movlb	0	; () banked
  2279  003CC0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2280  003CC2  0E01               	movlw	high _data_test
  2281  003CC4  0100               	movlb	0	; () banked
  2282  003CC6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2283  003CC8  0E08               	movlw	8
  2284  003CCA  0100               	movlb	0	; () banked
  2285  003CCC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2286  003CCE  0EBC               	movlw	188
  2287  003CD0  0100               	movlb	0	; () banked
  2288  003CD2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2289  003CD4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2290                           
  2291                           ;parcheggio.c: 369: can_send();
  2292  003CD8  EC94  F02F         	call	_can_send	;wreg free
  2293  003CDC                     l784:
  2294  003CDC  B250               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2295  003CDE  D7FE               	goto	l784
  2296                           
  2297                           ;parcheggio.c: 372: set_speed = 0;
  2298  003CE0  0E00               	movlw	0
  2299  003CE2  0100               	movlb	0	; () banked
  2300  003CE4  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2301  003CE6  0E00               	movlw	0
  2302  003CE8  6FE6               	movwf	_set_speed& (0+255),b
  2303                           
  2304                           ;parcheggio.c: 373: data_steering[0] = 90;
  2305  003CEA  0E5A               	movlw	90
  2306  003CEC  0101               	movlb	1	; () banked
  2307  003CEE  6F73               	movwf	_data_steering& (0+255),b
  2308                           
  2309                           ;parcheggio.c: 374: data_brake [0] = 0;
  2310  003CF0  0E00               	movlw	0
  2311  003CF2  0101               	movlb	1	; () banked
  2312  003CF4  6F5B               	movwf	_data_brake& (0+255),b
  2313                           
  2314                           ;parcheggio.c: 375: data_brake [1] = 1;
  2315  003CF6  0E01               	movlw	1
  2316  003CF8  0101               	movlb	1	; () banked
  2317  003CFA  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;parcheggio.c: 376: can_send();
  2321  003CFC  EC94  F02F         	call	_can_send	;wreg free
  2322                           
  2323                           ;parcheggio.c: 377: delay_s(1);
  2324  003D00  0E01               	movlw	1
  2325  003D02  EC2B  F033         	call	_delay_s
  2326                           
  2327                           ;parcheggio.c: 379: data_brake [0] = 3;
  2328  003D06  0E03               	movlw	3
  2329  003D08  0101               	movlb	1	; () banked
  2330  003D0A  6F5B               	movwf	_data_brake& (0+255),b
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;parcheggio.c: 380: data_brake [1] = 1;
  2334  003D0C  0E01               	movlw	1
  2335  003D0E  0101               	movlb	1	; () banked
  2336  003D10  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;parcheggio.c: 381: set_speed = 1000;
  2340  003D12  0E03               	movlw	3
  2341  003D14  0100               	movlb	0	; () banked
  2342  003D16  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2343  003D18  0EE8               	movlw	232
  2344  003D1A  6FE6               	movwf	_set_speed& (0+255),b
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;parcheggio.c: 382: dir = 0;
  2348  003D1C  9650               	bcf	_dir/(0+8),_dir& (0+7),c
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;parcheggio.c: 383: data_steering[0] = 180;
  2352  003D1E  0EB4               	movlw	180
  2353  003D20  0101               	movlb	1	; () banked
  2354  003D22  6F73               	movwf	_data_steering& (0+255),b
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;parcheggio.c: 384: data_test[0] = prima_sterzata;
  2358  003D24  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2359  003D28  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2360  003D2C  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2361  003D30  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2362  003D34  EC0E  F02F         	call	___fltol	;wreg free
  2363  003D38  0100               	movlb	0	; () banked
  2364  003D3A  51C1               	movf	?___fltol& (0+255),w,b
  2365  003D3C  0101               	movlb	1	; () banked
  2366  003D3E  6F7B               	movwf	_data_test& (0+255),b
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;parcheggio.c: 385: asd = 1;
  2370  003D40  8250               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2371                           
  2372                           ; BSR set to: 1
  2373                           ;parcheggio.c: 386: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2374  003D42  0E0D               	movlw	13
  2375  003D44  0100               	movlb	0	; () banked
  2376  003D46  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2377  003D48  0E00               	movlw	0
  2378  003D4A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2379  003D4C  0E00               	movlw	0
  2380  003D4E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2381  003D50  0E00               	movlw	0
  2382  003D52  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2383  003D54  0E7B               	movlw	low _data_test
  2384  003D56  0100               	movlb	0	; () banked
  2385  003D58  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2386  003D5A  0E01               	movlw	high _data_test
  2387  003D5C  0100               	movlb	0	; () banked
  2388  003D5E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2389  003D60  0E08               	movlw	8
  2390  003D62  0100               	movlb	0	; () banked
  2391  003D64  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2392  003D66  0EBC               	movlw	188
  2393  003D68  0100               	movlb	0	; () banked
  2394  003D6A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2395  003D6C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2396                           
  2397                           ;parcheggio.c: 387: can_send();
  2398  003D70  EC94  F02F         	call	_can_send	;wreg free
  2399  003D74                     l787:
  2400  003D74  B250               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2401  003D76  D7FE               	goto	l787
  2402                           
  2403                           ;parcheggio.c: 389: set_speed = 1000;
  2404  003D78  0E03               	movlw	3
  2405  003D7A  0100               	movlb	0	; () banked
  2406  003D7C  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2407  003D7E  0EE8               	movlw	232
  2408  003D80  6FE6               	movwf	_set_speed& (0+255),b
  2409                           
  2410                           ;parcheggio.c: 390: data_steering[0] = 0;
  2411  003D82  0E00               	movlw	0
  2412  003D84  0101               	movlb	1	; () banked
  2413  003D86  6F73               	movwf	_data_steering& (0+255),b
  2414                           
  2415                           ; BSR set to: 1
  2416                           ;parcheggio.c: 391: asd = 1;
  2417  003D88  8250               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2418                           
  2419                           ; BSR set to: 1
  2420                           ;parcheggio.c: 392: data_test[0] = prima_sterzata + 9;
  2421  003D8A  0E00               	movlw	0
  2422  003D8C  0100               	movlb	0	; () banked
  2423  003D8E  6FAD               	movwf	___fladd@a& (0+255),b
  2424  003D90  0E00               	movlw	0
  2425  003D92  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2426  003D94  0E10               	movlw	16
  2427  003D96  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2428  003D98  0E41               	movlw	65
  2429  003D9A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2430  003D9C  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2431  003DA0  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2432  003DA4  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2433  003DA8  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2434  003DAC  EC85  F018         	call	___fladd	;wreg free
  2435  003DB0  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2436  003DB4  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2437  003DB8  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2438  003DBC  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2439  003DC0  EC0E  F02F         	call	___fltol	;wreg free
  2440  003DC4  0100               	movlb	0	; () banked
  2441  003DC6  51C1               	movf	?___fltol& (0+255),w,b
  2442  003DC8  0101               	movlb	1	; () banked
  2443  003DCA  6F7B               	movwf	_data_test& (0+255),b
  2444                           
  2445                           ; BSR set to: 1
  2446                           ;parcheggio.c: 393: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2447  003DCC  0E0D               	movlw	13
  2448  003DCE  0100               	movlb	0	; () banked
  2449  003DD0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2450  003DD2  0E00               	movlw	0
  2451  003DD4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2452  003DD6  0E00               	movlw	0
  2453  003DD8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2454  003DDA  0E00               	movlw	0
  2455  003DDC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2456  003DDE  0E7B               	movlw	low _data_test
  2457  003DE0  0100               	movlb	0	; () banked
  2458  003DE2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2459  003DE4  0E01               	movlw	high _data_test
  2460  003DE6  0100               	movlb	0	; () banked
  2461  003DE8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2462  003DEA  0E08               	movlw	8
  2463  003DEC  0100               	movlb	0	; () banked
  2464  003DEE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2465  003DF0  0EBC               	movlw	188
  2466  003DF2  0100               	movlb	0	; () banked
  2467  003DF4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2468  003DF6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2469                           
  2470                           ;parcheggio.c: 394: can_send();
  2471  003DFA  EC94  F02F         	call	_can_send	;wreg free
  2472  003DFE                     l790:
  2473  003DFE  B250               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2474  003E00  D7FE               	goto	l790
  2475                           
  2476                           ;parcheggio.c: 396: data_brake [0] = 0;
  2477  003E02  0E00               	movlw	0
  2478  003E04  0101               	movlb	1	; () banked
  2479  003E06  6F5B               	movwf	_data_brake& (0+255),b
  2480                           
  2481                           ;parcheggio.c: 397: data_brake [1] = 1;
  2482  003E08  0E01               	movlw	1
  2483  003E0A  0101               	movlb	1	; () banked
  2484  003E0C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2485                           
  2486                           ;parcheggio.c: 398: set_speed = 0;
  2487  003E0E  0E00               	movlw	0
  2488  003E10  0100               	movlb	0	; () banked
  2489  003E12  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2490  003E14  0E00               	movlw	0
  2491  003E16  6FE6               	movwf	_set_speed& (0+255),b
  2492                           
  2493                           ;parcheggio.c: 399: data_steering[0] = 90;
  2494  003E18  0E5A               	movlw	90
  2495  003E1A  0101               	movlb	1	; () banked
  2496  003E1C  6F73               	movwf	_data_steering& (0+255),b
  2497                           
  2498                           ; BSR set to: 1
  2499                           ;parcheggio.c: 400: can_send();
  2500  003E1E  EC94  F02F         	call	_can_send	;wreg free
  2501                           
  2502                           ;parcheggio.c: 401: delay_s(1);
  2503  003E22  0E01               	movlw	1
  2504  003E24  EC2B  F033         	call	_delay_s
  2505                           
  2506                           ;parcheggio.c: 402: avvicinamento = 1;
  2507  003E28  8450               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2508                           
  2509                           ;parcheggio.c: 403: if (sensor_distance [2] > 20) {
  2510  003E2A  5006               	movf	_sensor_distance+5,w,c	;volatile
  2511  003E2C  E104               	bnz	u10500
  2512  003E2E  0E15               	movlw	21
  2513  003E30  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2514  003E32  A0D8               	btfss	status,0,c
  2515  003E34  D017               	goto	l8008
  2516  003E36                     u10500:
  2517                           
  2518                           ;parcheggio.c: 404: data_brake [0] = 3;
  2519  003E36  0E03               	movlw	3
  2520  003E38  0101               	movlb	1	; () banked
  2521  003E3A  6F5B               	movwf	_data_brake& (0+255),b
  2522                           
  2523                           ;parcheggio.c: 405: data_brake [1] = 1;
  2524  003E3C  0E01               	movlw	1
  2525  003E3E  0101               	movlb	1	; () banked
  2526  003E40  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2527                           
  2528                           ;parcheggio.c: 406: set_speed = 500;
  2529  003E42  0E01               	movlw	1
  2530  003E44  0100               	movlb	0	; () banked
  2531  003E46  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2532  003E48  0EF4               	movlw	244
  2533  003E4A  6FE6               	movwf	_set_speed& (0+255),b
  2534                           
  2535                           ;parcheggio.c: 407: data_steering[0] = 90;
  2536  003E4C  0E5A               	movlw	90
  2537  003E4E  0101               	movlb	1	; () banked
  2538  003E50  6F73               	movwf	_data_steering& (0+255),b
  2539                           
  2540                           ; BSR set to: 1
  2541                           ;parcheggio.c: 408: dir = 1;
  2542  003E52  8650               	bsf	_dir/(0+8),_dir& (0+7),c
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;parcheggio.c: 409: can_send();
  2546  003E54  EC94  F02F         	call	_can_send	;wreg free
  2547  003E58                     l8006:
  2548  003E58  5006               	movf	_sensor_distance+5,w,c	;volatile
  2549  003E5A  E1FE               	bnz	l8006
  2550  003E5C  0E15               	movlw	21
  2551  003E5E  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2552  003E60  B0D8               	btfsc	status,0,c
  2553  003E62  D7FA               	goto	l8006
  2554  003E64                     l8008:
  2555                           
  2556                           ;parcheggio.c: 411: }
  2557                           ;parcheggio.c: 412: data_brake [0] = 0;
  2558  003E64  0E00               	movlw	0
  2559  003E66  0101               	movlb	1	; () banked
  2560  003E68  6F5B               	movwf	_data_brake& (0+255),b
  2561                           
  2562                           ;parcheggio.c: 413: data_brake [1] = 1;
  2563  003E6A  0E01               	movlw	1
  2564  003E6C  0101               	movlb	1	; () banked
  2565  003E6E  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2566                           
  2567                           ;parcheggio.c: 414: set_speed = 0;
  2568  003E70  0E00               	movlw	0
  2569  003E72  0100               	movlb	0	; () banked
  2570  003E74  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2571  003E76  0E00               	movlw	0
  2572  003E78  6FE6               	movwf	_set_speed& (0+255),b
  2573                           
  2574                           ;parcheggio.c: 415: data_steering[0] = 90;
  2575  003E7A  0E5A               	movlw	90
  2576  003E7C  0101               	movlb	1	; () banked
  2577  003E7E  6F73               	movwf	_data_steering& (0+255),b
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;parcheggio.c: 416: dir = 0;
  2581  003E80  9650               	bcf	_dir/(0+8),_dir& (0+7),c
  2582                           
  2583                           ; BSR set to: 1
  2584                           ;parcheggio.c: 417: can_send();
  2585  003E82  EC94  F02F         	call	_can_send	;wreg free
  2586                           
  2587                           ;parcheggio.c: 418: delay_s(1);
  2588  003E86  0E01               	movlw	1
  2589  003E88  EC2B  F033         	call	_delay_s
  2590                           
  2591                           ;parcheggio.c: 419: data[0] = 3;
  2592  003E8C  0E03               	movlw	3
  2593  003E8E  0101               	movlb	1	; () banked
  2594  003E90  6F53               	movwf	_data& (0+255),b
  2595  003E92                     l8018:
  2596  003E92  EC41  F033         	call	_CANisTxReady	;wreg free
  2597  003E96  0900               	iorlw	0
  2598  003E98  B4D8               	btfsc	status,2,c
  2599  003E9A  D7FB               	goto	l8018
  2600                           
  2601                           ;parcheggio.c: 421: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2602  003E9C  0E0B               	movlw	11
  2603  003E9E  0100               	movlb	0	; () banked
  2604  003EA0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2605  003EA2  0E00               	movlw	0
  2606  003EA4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2607  003EA6  0E00               	movlw	0
  2608  003EA8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2609  003EAA  0E00               	movlw	0
  2610  003EAC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2611  003EAE  0E53               	movlw	low _data
  2612  003EB0  0100               	movlb	0	; () banked
  2613  003EB2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2614  003EB4  0E01               	movlw	high _data
  2615  003EB6  0100               	movlb	0	; () banked
  2616  003EB8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2617  003EBA  0E08               	movlw	8
  2618  003EBC  0100               	movlb	0	; () banked
  2619  003EBE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2620  003EC0  0EBC               	movlw	188
  2621  003EC2  0100               	movlb	0	; () banked
  2622  003EC4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2623  003EC6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2624                           
  2625                           ;parcheggio.c: 422: delay_ms(100);
  2626  003ECA  0E00               	movlw	0
  2627  003ECC  0100               	movlb	0	; () banked
  2628  003ECE  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2629  003ED0  0E64               	movlw	100
  2630  003ED2  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2631  003ED4  ECC1  F032         	call	_delay_ms	;wreg free
  2632  003ED8  00FF               	reset		;# 
  2633  003EDA                     l8024:
  2634  003EDA  AA81               	btfss	3969,5,c	;volatile
  2635  003EDC  0012               	return	
  2636  003EDE  A050               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2637  003EE0  0012               	return	
  2638  003EE2  AA51               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2639  003EE4  0012               	return	
  2640  003EE6  D638               	goto	l783
  2641  003EE8                     __end_of_park_routine:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec1	equ	0xFE5
  2650                           fsr1l	equ	0xFE1
  2651                           postinc2	equ	0xFDE
  2652                           postdec2	equ	0xFDD
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _parallelo *****************
  2656 ;; Defined at:
  2657 ;;		line 450 in file "parcheggio.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2674 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2675 ;;Total ram usage:        2 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    8
  2678 ;; This function calls:
  2679 ;;		___fladd
  2680 ;;		___fldiv
  2681 ;;		___flge
  2682 ;;		___flmul
  2683 ;;		___fltol
  2684 ;;		___xxtofl
  2685 ;;		_abs
  2686 ;;		_asin
  2687 ;;		_can_send
  2688 ;;		_sqrt
  2689 ;; This function is called by:
  2690 ;;		_park_search
  2691 ;;		_park_routine
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text3
  2696  00503A                     __ptext3:
  2697                           	opt stack 0
  2698  00503A                     _parallelo:
  2699                           	opt stack 21
  2700                           
  2701                           ;parcheggio.c: 451: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2702                           
  2703                           ;incstack = 0
  2704  00503A  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  2705  00503E  CFDE F0D5          	movff	postinc2,??_parallelo
  2706  005042  CFDD F0D6          	movff	postdec2,??_parallelo+1
  2707  005046  0100               	movlb	0	; () banked
  2708  005048  1FD5               	comf	??_parallelo& (0+255),f,b
  2709  00504A  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  2710  00504C  4BD5               	infsnz	??_parallelo& (0+255),f,b
  2711  00504E  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  2712  005050  5001               	movf	_sensor_distance,w,c	;volatile
  2713  005052  0100               	movlb	0	; () banked
  2714  005054  25D5               	addwf	??_parallelo& (0+255),w,b
  2715  005056  0100               	movlb	0	; () banked
  2716  005058  6F77               	movwf	abs@a& (0+255),b
  2717  00505A  5002               	movf	_sensor_distance+1,w,c	;volatile
  2718  00505C  0100               	movlb	0	; () banked
  2719  00505E  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  2720  005060  0100               	movlb	0	; () banked
  2721  005062  6F78               	movwf	(abs@a+1)& (0+255),b
  2722  005064  EC15  F033         	call	_abs	;wreg free
  2723  005068  0100               	movlb	0	; () banked
  2724  00506A  C077  F0CB         	movff	?_abs,___xxtofl@val
  2725  00506E  0100               	movlb	0	; () banked
  2726  005070  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2727  005074  0100               	movlb	0	; () banked
  2728  005076  0E00               	movlw	0
  2729  005078  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2730  00507A  0EFF               	movlw	-1
  2731  00507C  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2732  00507E  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2733  005080  0E01               	movlw	1
  2734  005082  EC7B  F02A         	call	___xxtofl
  2735  005086  C0CB  F0D8         	movff	?___xxtofl,_alignment_gap
  2736  00508A  C0CC  F0D9         	movff	?___xxtofl+1,_alignment_gap+1
  2737  00508E  C0CD  F0DA         	movff	?___xxtofl+2,_alignment_gap+2
  2738  005092  C0CE  F0DB         	movff	?___xxtofl+3,_alignment_gap+3
  2739                           
  2740                           ;parcheggio.c: 452: if (alignment_gap < 20) {
  2741  005096  C0D8  F0C5         	movff	_alignment_gap,___flge@ff1
  2742  00509A  C0D9  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2743  00509E  C0DA  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2744  0050A2  C0DB  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2745  0050A6  0E00               	movlw	0
  2746  0050A8  0100               	movlb	0	; () banked
  2747  0050AA  6FC9               	movwf	___flge@ff2& (0+255),b
  2748  0050AC  0E00               	movlw	0
  2749  0050AE  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2750  0050B0  0EA0               	movlw	160
  2751  0050B2  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2752  0050B4  0E41               	movlw	65
  2753  0050B6  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2754  0050B8  EC28  F02D         	call	___flge	;wreg free
  2755  0050BC  0100               	movlb	0	; () banked
  2756  0050BE  B0D8               	btfsc	status,0,c
  2757  0050C0  D0EB               	goto	l7728
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;parcheggio.c: 453: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2761  0050C2  5002               	movf	_sensor_distance+1,w,c	;volatile
  2762  0050C4  E103               	bnz	u10151
  2763  0050C6  0E1E               	movlw	30
  2764  0050C8  5C01               	subwf	_sensor_distance,w,c	;volatile
  2765  0050CA  B0D8               	btfsc	status,0,c
  2766  0050CC                     u10151:
  2767  0050CC  0012               	return	
  2768                           
  2769                           ; BSR set to: 0
  2770  0050CE  5004               	movf	_sensor_distance+3,w,c	;volatile
  2771  0050D0  E103               	bnz	u10161
  2772  0050D2  0E1E               	movlw	30
  2773  0050D4  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  2774  0050D6  B0D8               	btfsc	status,0,c
  2775  0050D8                     u10161:
  2776  0050D8  0012               	return	
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;parcheggio.c: 454: x = ((10)*(10) + (alignment_gap * alignment_gap));
  2780  0050DA  C0D8  F094         	movff	_alignment_gap,___flmul@a
  2781  0050DE  C0D9  F095         	movff	_alignment_gap+1,___flmul@a+1
  2782  0050E2  C0DA  F096         	movff	_alignment_gap+2,___flmul@a+2
  2783  0050E6  C0DB  F097         	movff	_alignment_gap+3,___flmul@a+3
  2784  0050EA  C0D8  F090         	movff	_alignment_gap,___flmul@b
  2785  0050EE  C0D9  F091         	movff	_alignment_gap+1,___flmul@b+1
  2786  0050F2  C0DA  F092         	movff	_alignment_gap+2,___flmul@b+2
  2787  0050F6  C0DB  F093         	movff	_alignment_gap+3,___flmul@b+3
  2788  0050FA  ECD9  F01A         	call	___flmul	;wreg free
  2789  0050FE  C090  F0A9         	movff	?___flmul,___fladd@b
  2790  005102  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2791  005106  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2792  00510A  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2793  00510E  0E00               	movlw	0
  2794  005110  0100               	movlb	0	; () banked
  2795  005112  6FAD               	movwf	___fladd@a& (0+255),b
  2796  005114  0E00               	movlw	0
  2797  005116  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2798  005118  0EC8               	movlw	200
  2799  00511A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2800  00511C  0E42               	movlw	66
  2801  00511E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2802  005120  EC85  F018         	call	___fladd	;wreg free
  2803  005124  C0A9  F011         	movff	?___fladd,_x
  2804  005128  C0AA  F012         	movff	?___fladd+1,_x+1
  2805  00512C  C0AB  F013         	movff	?___fladd+2,_x+2
  2806  005130  C0AC  F014         	movff	?___fladd+3,_x+3
  2807                           
  2808                           ;parcheggio.c: 455: x = sqrt(x);
  2809  005134  C011  F0C1         	movff	_x,sqrt@a
  2810  005138  C012  F0C2         	movff	_x+1,sqrt@a+1
  2811  00513C  C013  F0C3         	movff	_x+2,sqrt@a+2
  2812  005140  C014  F0C4         	movff	_x+3,sqrt@a+3
  2813  005144  EC74  F01F         	call	_sqrt	;wreg free
  2814  005148  C0C1  F011         	movff	?_sqrt,_x
  2815  00514C  C0C2  F012         	movff	?_sqrt+1,_x+1
  2816  005150  C0C3  F013         	movff	?_sqrt+2,_x+2
  2817  005154  C0C4  F014         	movff	?_sqrt+3,_x+3
  2818                           
  2819                           ;parcheggio.c: 456: z = alignment_gap / x;
  2820  005158  C0D8  F077         	movff	_alignment_gap,___fldiv@b
  2821  00515C  C0D9  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2822  005160  C0DA  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2823  005164  C0DB  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2824  005168  C011  F07B         	movff	_x,___fldiv@a
  2825  00516C  C012  F07C         	movff	_x+1,___fldiv@a+1
  2826  005170  C013  F07D         	movff	_x+2,___fldiv@a+2
  2827  005174  C014  F07E         	movff	_x+3,___fldiv@a+3
  2828  005178  EC59  F021         	call	___fldiv	;wreg free
  2829  00517C  C077  F0DC         	movff	?___fldiv,_z
  2830  005180  C078  F0DD         	movff	?___fldiv+1,_z+1
  2831  005184  C079  F0DE         	movff	?___fldiv+2,_z+2
  2832  005188  C07A  F0DF         	movff	?___fldiv+3,_z+3
  2833                           
  2834                           ;parcheggio.c: 457: z = asin(z);
  2835  00518C  C0DC  F1A0         	movff	_z,asin@x
  2836  005190  C0DD  F1A1         	movff	_z+1,asin@x+1
  2837  005194  C0DE  F1A2         	movff	_z+2,asin@x+2
  2838  005198  C0DF  F1A3         	movff	_z+3,asin@x+3
  2839  00519C  EC94  F026         	call	_asin	;wreg free
  2840  0051A0  C1A0  F0DC         	movff	?_asin,_z
  2841  0051A4  C1A1  F0DD         	movff	?_asin+1,_z+1
  2842  0051A8  C1A2  F0DE         	movff	?_asin+2,_z+2
  2843  0051AC  C1A3  F0DF         	movff	?_asin+3,_z+3
  2844                           
  2845                           ;parcheggio.c: 458: z = z / 3.14159265358979323846 * 180;
  2846  0051B0  0EDB               	movlw	219
  2847  0051B2  0100               	movlb	0	; () banked
  2848  0051B4  6F7B               	movwf	___fldiv@a& (0+255),b
  2849  0051B6  0E0F               	movlw	15
  2850  0051B8  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2851  0051BA  0E49               	movlw	73
  2852  0051BC  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2853  0051BE  0E40               	movlw	64
  2854  0051C0  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2855  0051C2  C0DC  F077         	movff	_z,___fldiv@b
  2856  0051C6  C0DD  F078         	movff	_z+1,___fldiv@b+1
  2857  0051CA  C0DE  F079         	movff	_z+2,___fldiv@b+2
  2858  0051CE  C0DF  F07A         	movff	_z+3,___fldiv@b+3
  2859  0051D2  EC59  F021         	call	___fldiv	;wreg free
  2860  0051D6  C077  F090         	movff	?___fldiv,___flmul@b
  2861  0051DA  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2862  0051DE  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2863  0051E2  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2864  0051E6  0E00               	movlw	0
  2865  0051E8  0100               	movlb	0	; () banked
  2866  0051EA  6F94               	movwf	___flmul@a& (0+255),b
  2867  0051EC  0E00               	movlw	0
  2868  0051EE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2869  0051F0  0E34               	movlw	52
  2870  0051F2  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2871  0051F4  0E43               	movlw	67
  2872  0051F6  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2873  0051F8  ECD9  F01A         	call	___flmul	;wreg free
  2874  0051FC  C090  F0DC         	movff	?___flmul,_z
  2875  005200  C091  F0DD         	movff	?___flmul+1,_z+1
  2876  005204  C092  F0DE         	movff	?___flmul+2,_z+2
  2877  005208  C093  F0DF         	movff	?___flmul+3,_z+3
  2878                           
  2879                           ;parcheggio.c: 459: data_correction[0] = z;
  2880  00520C  C0DC  F0C1         	movff	_z,___fltol@f1
  2881  005210  C0DD  F0C2         	movff	_z+1,___fltol@f1+1
  2882  005214  C0DE  F0C3         	movff	_z+2,___fltol@f1+2
  2883  005218  C0DF  F0C4         	movff	_z+3,___fltol@f1+3
  2884  00521C  EC0E  F02F         	call	___fltol	;wreg free
  2885  005220  0100               	movlb	0	; () banked
  2886  005222  51C1               	movf	?___fltol& (0+255),w,b
  2887  005224  0101               	movlb	1	; () banked
  2888  005226  6F63               	movwf	_data_correction& (0+255),b
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;parcheggio.c: 461: if (sensor_distance[0] < sensor_distance[1]) {
  2892  005228  5003               	movf	_sensor_distance+2,w,c	;volatile
  2893  00522A  5C01               	subwf	_sensor_distance,w,c	;volatile
  2894  00522C  5004               	movf	_sensor_distance+3,w,c	;volatile
  2895  00522E  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  2896  005230  B0D8               	btfsc	status,0,c
  2897  005232  D002               	goto	l7720
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;parcheggio.c: 462: data_correction[1] = 0;
  2901  005234  0E00               	movlw	0
  2902  005236  D001               	goto	L1
  2903  005238                     l7720:
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;parcheggio.c: 464: data_correction[1] = 1;
  2907  005238  0E01               	movlw	1
  2908  00523A                     L1:
  2909  00523A  0101               	movlb	1	; () banked
  2910  00523C  6F64               	movwf	(_data_correction+1)& (0+255),b
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;parcheggio.c: 465: }
  2914                           ;parcheggio.c: 466: if ((old_alignment_gap != alignment_gap) || (old_dir_correction != d
      +                          ata_correction[1])) {
  2915                           
  2916                           ; BSR set to: 1
  2917  00523E  0100               	movlb	0	; () banked
  2918  005240  51D8               	movf	_alignment_gap& (0+255),w,b
  2919  005242  0101               	movlb	1	; () banked
  2920  005244  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2921  005246  E117               	bnz	l829
  2922  005248  0100               	movlb	0	; () banked
  2923  00524A  51D9               	movf	(_alignment_gap+1)& (0+255),w,b
  2924  00524C  0101               	movlb	1	; () banked
  2925  00524E  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2926  005250  E112               	bnz	l829
  2927  005252  0100               	movlb	0	; () banked
  2928  005254  51DA               	movf	(_alignment_gap+2)& (0+255),w,b
  2929  005256  0101               	movlb	1	; () banked
  2930  005258  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2931  00525A  E10D               	bnz	l829
  2932  00525C  0100               	movlb	0	; () banked
  2933  00525E  51DB               	movf	(_alignment_gap+3)& (0+255),w,b
  2934  005260  0101               	movlb	1	; () banked
  2935  005262  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2936  005264  A4D8               	btfss	status,2,c
  2937  005266  D007               	goto	l829
  2938                           
  2939                           ; BSR set to: 1
  2940  005268  0E00               	movlw	0
  2941  00526A  B451               	btfsc	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2942  00526C  0E01               	movlw	1
  2943  00526E  0101               	movlb	1	; () banked
  2944  005270  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2945  005272  B4D8               	btfsc	status,2,c
  2946  005274  0012               	return	
  2947  005276                     l829:
  2948                           
  2949                           ; BSR set to: 1
  2950                           ;parcheggio.c: 467: old_alignment_gap = alignment_gap;
  2951  005276  C0D8  F13C         	movff	_alignment_gap,_old_alignment_gap
  2952  00527A  C0D9  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2953  00527E  C0DA  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2954  005282  C0DB  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2955                           
  2956                           ;parcheggio.c: 468: old_dir_correction = data_correction[1];
  2957  005286  0101               	movlb	1	; () banked
  2958  005288  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2959  00528A  D002               	goto	u10200
  2960  00528C  8451               	bsf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2961  00528E  D001               	goto	l7726
  2962  005290                     u10200:
  2963  005290  9451               	bcf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2964  005292                     l7726:
  2965                           
  2966                           ;parcheggio.c: 469: can_send();
  2967  005292  EC94  F02F         	call	_can_send	;wreg free
  2968                           
  2969                           ;parcheggio.c: 470: }
  2970                           ;parcheggio.c: 471: }
  2971                           ;parcheggio.c: 472: } else {
  2972  005296  0012               	return	
  2973  005298                     l7728:
  2974                           
  2975                           ;parcheggio.c: 473: data_correction[0] = 0;
  2976  005298  0E00               	movlw	0
  2977  00529A  0101               	movlb	1	; () banked
  2978  00529C  6F63               	movwf	_data_correction& (0+255),b
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;parcheggio.c: 474: can_send();
  2982  00529E  EC94  F02F         	call	_can_send	;wreg free
  2983  0052A2  0012               	return	
  2984  0052A4                     __end_of_parallelo:
  2985                           	opt stack 0
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           postdec1	equ	0xFE5
  2993                           fsr1l	equ	0xFE1
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           status	equ	0xFD8
  2997                           
  2998 ;; *************** function _can_send *****************
  2999 ;; Defined at:
  3000 ;;		line 427 in file "parcheggio.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;		None               void
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    5
  3021 ;; This function calls:
  3022 ;;		_CANisTxReady
  3023 ;;		_CANsendMessage
  3024 ;; This function is called by:
  3025 ;;		_park_routine
  3026 ;;		_parallelo
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text4
  3031  005F28                     __ptext4:
  3032                           	opt stack 0
  3033  005F28                     _can_send:
  3034                           	opt stack 23
  3035                           
  3036                           ;parcheggio.c: 428: if (start_operation == 1) {
  3037                           
  3038                           ;incstack = 0
  3039  005F28  AA51               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  3040  005F2A  D063               	goto	l7580
  3041  005F2C                     l7560:
  3042  005F2C  EC41  F033         	call	_CANisTxReady	;wreg free
  3043  005F30  06E8               	decf	wreg,f,c
  3044  005F32  A4D8               	btfss	status,2,c
  3045  005F34  D7FB               	goto	l7560
  3046                           
  3047                           ;parcheggio.c: 431: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3048  005F36  0E05               	movlw	5
  3049  005F38  0100               	movlb	0	; () banked
  3050  005F3A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3051  005F3C  0E00               	movlw	0
  3052  005F3E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3053  005F40  0E00               	movlw	0
  3054  005F42  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3055  005F44  0E00               	movlw	0
  3056  005F46  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3057  005F48  0E73               	movlw	low _data_steering
  3058  005F4A  0100               	movlb	0	; () banked
  3059  005F4C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3060  005F4E  0E01               	movlw	high _data_steering
  3061  005F50  0100               	movlb	0	; () banked
  3062  005F52  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3063  005F54  0E08               	movlw	8
  3064  005F56  0100               	movlb	0	; () banked
  3065  005F58  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3066  005F5A  0EBC               	movlw	188
  3067  005F5C  0100               	movlb	0	; () banked
  3068  005F5E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3069  005F60  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3070                           
  3071                           ;parcheggio.c: 434: data_speed[0] = set_speed;
  3072  005F64  C0E6  F16B         	movff	_set_speed,_data_speed
  3073                           
  3074                           ;parcheggio.c: 435: data_speed[1] = (set_speed >> 8);
  3075  005F68  0100               	movlb	0	; () banked
  3076  005F6A  51E7               	movf	(_set_speed+1)& (0+255),w,b
  3077  005F6C  0101               	movlb	1	; () banked
  3078  005F6E  6F6C               	movwf	(_data_speed+1)& (0+255),b
  3079                           
  3080                           ; BSR set to: 1
  3081                           ;parcheggio.c: 436: data_speed[2] = dir;
  3082  005F70  0E00               	movlw	0
  3083  005F72  B650               	btfsc	_dir/(0+8),_dir& (0+7),c
  3084  005F74  0E01               	movlw	1
  3085  005F76  0101               	movlb	1	; () banked
  3086  005F78  6F6D               	movwf	(_data_speed+2)& (0+255),b
  3087  005F7A                     l7570:
  3088  005F7A  EC41  F033         	call	_CANisTxReady	;wreg free
  3089  005F7E  06E8               	decf	wreg,f,c
  3090  005F80  A4D8               	btfss	status,2,c
  3091  005F82  D7FB               	goto	l7570
  3092                           
  3093                           ;parcheggio.c: 438: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3094  005F84  0E03               	movlw	3
  3095  005F86  0100               	movlb	0	; () banked
  3096  005F88  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3097  005F8A  0E00               	movlw	0
  3098  005F8C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3099  005F8E  0E00               	movlw	0
  3100  005F90  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3101  005F92  0E00               	movlw	0
  3102  005F94  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3103  005F96  0E6B               	movlw	low _data_speed
  3104  005F98  0100               	movlb	0	; () banked
  3105  005F9A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3106  005F9C  0E01               	movlw	high _data_speed
  3107  005F9E  0100               	movlb	0	; () banked
  3108  005FA0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3109  005FA2  0E08               	movlw	8
  3110  005FA4  0100               	movlb	0	; () banked
  3111  005FA6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3112  005FA8  0EBC               	movlw	188
  3113  005FAA  0100               	movlb	0	; () banked
  3114  005FAC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3115  005FAE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3116                           
  3117                           ;parcheggio.c: 441: data_brake[1] = 0;
  3118  005FB2  0E00               	movlw	0
  3119  005FB4  0101               	movlb	1	; () banked
  3120  005FB6  6F5C               	movwf	(_data_brake+1)& (0+255),b
  3121  005FB8                     l7576:
  3122  005FB8  EC41  F033         	call	_CANisTxReady	;wreg free
  3123  005FBC  06E8               	decf	wreg,f,c
  3124  005FBE  A4D8               	btfss	status,2,c
  3125  005FC0  D7FB               	goto	l7576
  3126                           
  3127                           ;parcheggio.c: 443: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3128  005FC2  0E04               	movlw	4
  3129  005FC4  0100               	movlb	0	; () banked
  3130  005FC6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3131  005FC8  0E00               	movlw	0
  3132  005FCA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3133  005FCC  0E00               	movlw	0
  3134  005FCE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3135  005FD0  0E00               	movlw	0
  3136  005FD2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3137  005FD4  0E5B               	movlw	low _data_brake
  3138  005FD6  0100               	movlb	0	; () banked
  3139  005FD8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3140  005FDA  0E01               	movlw	high _data_brake
  3141  005FDC  0100               	movlb	0	; () banked
  3142  005FDE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3143  005FE0  0E08               	movlw	8
  3144  005FE2  0100               	movlb	0	; () banked
  3145  005FE4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3146  005FE6  0EBC               	movlw	188
  3147  005FE8  0100               	movlb	0	; () banked
  3148  005FEA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3149  005FEC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3150                           
  3151                           ;parcheggio.c: 444: } else {
  3152  005FF0  0012               	return	
  3153  005FF2                     l7580:
  3154  005FF2  EC41  F033         	call	_CANisTxReady	;wreg free
  3155  005FF6  06E8               	decf	wreg,f,c
  3156  005FF8  A4D8               	btfss	status,2,c
  3157  005FFA  D7FB               	goto	l7580
  3158                           
  3159                           ;parcheggio.c: 446: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3160  005FFC  0E0E               	movlw	14
  3161  005FFE  0100               	movlb	0	; () banked
  3162  006000  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3163  006002  0E00               	movlw	0
  3164  006004  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3165  006006  0E00               	movlw	0
  3166  006008  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3167  00600A  0E00               	movlw	0
  3168  00600C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3169  00600E  0E63               	movlw	low _data_correction
  3170  006010  0100               	movlb	0	; () banked
  3171  006012  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3172  006014  0E01               	movlw	high _data_correction
  3173  006016  0100               	movlb	0	; () banked
  3174  006018  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3175  00601A  0E08               	movlw	8
  3176  00601C  0100               	movlb	0	; () banked
  3177  00601E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3178  006020  0EBC               	movlw	188
  3179  006022  0100               	movlb	0	; () banked
  3180  006024  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3181  006026  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3182  00602A  0012               	return	
  3183  00602C                     __end_of_can_send:
  3184                           	opt stack 0
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           postdec1	equ	0xFE5
  3192                           fsr1l	equ	0xFE1
  3193                           postinc2	equ	0xFDE
  3194                           postdec2	equ	0xFDD
  3195                           status	equ	0xFD8
  3196                           
  3197 ;; *************** function _CANsendMessage *****************
  3198 ;; Defined at:
  3199 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  identifier      4   23[BANK0 ] unsigned long 
  3202 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3203 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
  3204 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
  3205 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3206 ;;  flags           1   30[BANK0 ] enum E16335
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  tamp            4   35[BANK0 ] unsigned long 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;		None               void
  3211 ;; Registers used:
  3212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3218 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;Total ram usage:       16 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    4
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;;		_park_search
  3230 ;;		_park_routine
  3231 ;;		_can_send
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text5
  3236  001858                     __ptext5:
  3237                           	opt stack 0
  3238  001858                     _CANsendMessage:
  3239                           	opt stack 23
  3240                           
  3241                           ;inc\CANlib.h: 296: unsigned long tamp;
  3242                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3243                           
  3244                           ;incstack = 0
  3245  001858  010F               	movlb	15	; () banked
  3246  00185A  B740               	btfsc	64,3,b	;volatile
  3247  00185C  D13F               	goto	l363
  3248                           
  3249                           ; BSR set to: 15
  3250                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3251  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3252                           
  3253                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3254  001862  0100               	movlb	0	; () banked
  3255  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3256  001866  D003               	goto	l364
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3260  001868  010F               	movlb	15	; () banked
  3261  00186A  8D45               	bsf	69,6,b	;volatile
  3262  00186C  D002               	goto	l365
  3263  00186E                     l364:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;inc\CANlib.h: 302: else
  3267                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3268  00186E  010F               	movlb	15	; () banked
  3269  001870  9D45               	bcf	69,6,b	;volatile
  3270  001872                     l365:
  3271                           
  3272                           ; BSR set to: 15
  3273                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3274  001872  0100               	movlb	0	; () banked
  3275  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3276  001876  D079               	goto	l366
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;inc\CANlib.h: 306: {
  3280                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3281  001878  0100               	movlb	0	; () banked
  3282  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3283  00187C  0100               	movlb	0	; () banked
  3284  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3285  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3286  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3287  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3291  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3295  00188A  0E00               	movlw	0
  3296  00188C  0100               	movlb	0	; () banked
  3297  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3298  001890  0100               	movlb	0	; () banked
  3299  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3300  001894  0EFF               	movlw	255
  3301  001896  0100               	movlb	0	; () banked
  3302  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3303  00189A  0100               	movlb	0	; () banked
  3304  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3305  00189E  0E00               	movlw	0
  3306  0018A0  0100               	movlb	0	; () banked
  3307  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3308  0018A4  0100               	movlb	0	; () banked
  3309  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3310  0018A8  0E00               	movlw	0
  3311  0018AA  0100               	movlb	0	; () banked
  3312  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3313  0018AE  0100               	movlb	0	; () banked
  3314  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3318  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3319  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3320  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3321  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3322  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3323  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3324  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3325  0018CE  0100               	movlb	0	; () banked
  3326  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3327  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3328  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3329  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3330  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3334  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3338  0018E6  0E00               	movlw	0
  3339  0018E8  010F               	movlb	15	; () banked
  3340  0018EA  6F42               	movwf	66,b	;volatile
  3341                           
  3342                           ; BSR set to: 15
  3343                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3344  0018EC  010F               	movlb	15	; () banked
  3345  0018EE  8742               	bsf	66,3,b	;volatile
  3346                           
  3347                           ; BSR set to: 15
  3348                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3349  0018F0  0100               	movlb	0	; () banked
  3350  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3351  0018F4  D002               	goto	l367
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3355  0018F6  010F               	movlb	15	; () banked
  3356  0018F8  8142               	bsf	66,0,b	;volatile
  3357  0018FA                     l367:
  3358                           
  3359                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3360  0018FA  0100               	movlb	0	; () banked
  3361  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3362  0018FE  D002               	goto	l368
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3366  001900  010F               	movlb	15	; () banked
  3367  001902  8342               	bsf	66,1,b	;volatile
  3368  001904                     l368:
  3369                           
  3370                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3371  001904  0100               	movlb	0	; () banked
  3372  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3373  001908  D002               	goto	l369
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3377  00190A  010F               	movlb	15	; () banked
  3378  00190C  8B42               	bsf	66,5,b	;volatile
  3379  00190E                     l369:
  3380                           
  3381                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3382  00190E  0100               	movlb	0	; () banked
  3383  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3384  001912  D002               	goto	l370
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3388  001914  010F               	movlb	15	; () banked
  3389  001916  8D42               	bsf	66,6,b	;volatile
  3390  001918                     l370:
  3391                           
  3392                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3393  001918  0100               	movlb	0	; () banked
  3394  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3395  00191C  D002               	goto	l4840
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3399  00191E  010F               	movlb	15	; () banked
  3400  001920  8F42               	bsf	66,7,b	;volatile
  3401  001922                     l4840:
  3402                           
  3403                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3404  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3405  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3406  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3407  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3408  001932  0E16               	movlw	22
  3409  001934  D006               	goto	u5510
  3410  001936                     u5515:
  3411  001936  0100               	movlb	0	; () banked
  3412  001938  90D8               	bcf	status,0,c
  3413  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3414  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3415  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3416  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3417  001942                     u5510:
  3418  001942  2EE8               	decfsz	wreg,f,c
  3419  001944  D7F8               	goto	u5515
  3420  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3421  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3422  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3423  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3427  001956  0100               	movlb	0	; () banked
  3428  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3429  00195A  0100               	movlb	0	; () banked
  3430  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3431  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3432  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3433  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3437  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3438                           
  3439                           ;inc\CANlib.h: 332: }
  3440  001968  D059               	goto	l4860
  3441  00196A                     l366:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;inc\CANlib.h: 334: else
  3445                           ;inc\CANlib.h: 336: {
  3446                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3447  00196A  010F               	movlb	15	; () banked
  3448  00196C  9742               	bcf	66,3,b	;volatile
  3449                           
  3450                           ; BSR set to: 15
  3451                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3452  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3453  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3454  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3455  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3456  00197E  0E04               	movlw	4
  3457  001980  D006               	goto	u5520
  3458  001982                     u5525:
  3459  001982  0100               	movlb	0	; () banked
  3460  001984  90D8               	bcf	status,0,c
  3461  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3462  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3463  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3464  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3465  00198E                     u5520:
  3466  00198E  2EE8               	decfsz	wreg,f,c
  3467  001990  D7F8               	goto	u5525
  3468  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3469  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3470  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3471  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3475  0019A2  0100               	movlb	0	; () banked
  3476  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3477  0019A6  0100               	movlb	0	; () banked
  3478  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3479  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3480  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3481  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3485  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3489  0019B4  0E07               	movlw	7
  3490  0019B6  0100               	movlb	0	; () banked
  3491  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3492  0019BA  0100               	movlb	0	; () banked
  3493  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3494  0019BE  0E00               	movlw	0
  3495  0019C0  0100               	movlb	0	; () banked
  3496  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3497  0019C4  0100               	movlb	0	; () banked
  3498  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3499  0019C8  0E00               	movlw	0
  3500  0019CA  0100               	movlb	0	; () banked
  3501  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3502  0019CE  0100               	movlb	0	; () banked
  3503  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3504  0019D2  0E00               	movlw	0
  3505  0019D4  0100               	movlb	0	; () banked
  3506  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3507  0019D8  0100               	movlb	0	; () banked
  3508  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3512  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3513  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3514  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3515  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3516  0019EC  0E05               	movlw	5
  3517  0019EE                     u5535:
  3518  0019EE  90D8               	bcf	status,0,c
  3519  0019F0  0100               	movlb	0	; () banked
  3520  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3521  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3522  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3523  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3524  0019FA  2EE8               	decfsz	wreg,f,c
  3525  0019FC  D7F8               	goto	u5535
  3526  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3527  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3528  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3529  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3533  001A0E  010F               	movlb	15	; () banked
  3534  001A10  5142               	movf	66,w,b	;volatile
  3535  001A12  0B1F               	andlw	31
  3536  001A14  010F               	movlb	15	; () banked
  3537  001A16  6F42               	movwf	66,b	;volatile
  3538                           
  3539                           ; BSR set to: 15
  3540                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3541  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3542  001A1C                     l4860:
  3543                           
  3544                           ;inc\CANlib.h: 347: }
  3545                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3546  001A1C  0100               	movlb	0	; () banked
  3547  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3548  001A20  D003               	goto	l373
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3552  001A22  010F               	movlb	15	; () banked
  3553  001A24  8140               	bsf	64,0,b	;volatile
  3554  001A26  D002               	goto	l374
  3555  001A28                     l373:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 351: else
  3559                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3560  001A28  010F               	movlb	15	; () banked
  3561  001A2A  9140               	bcf	64,0,b	;volatile
  3562  001A2C                     l374:
  3563                           
  3564                           ; BSR set to: 15
  3565                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3566  001A2C  0100               	movlb	0	; () banked
  3567  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3568  001A30  D003               	goto	l375
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3572  001A32  010F               	movlb	15	; () banked
  3573  001A34  8340               	bsf	64,1,b	;volatile
  3574  001A36  D002               	goto	l4866
  3575  001A38                     l375:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 355: else
  3579                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3580  001A38  010F               	movlb	15	; () banked
  3581  001A3A  9340               	bcf	64,1,b	;volatile
  3582  001A3C                     l4866:
  3583                           
  3584                           ; BSR set to: 15
  3585                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3586  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3587  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3588  001A44  50DF               	movf	indf2,w,c
  3589  001A46  010F               	movlb	15	; () banked
  3590  001A48  6F46               	movwf	70,b	;volatile
  3591                           
  3592                           ; BSR set to: 15
  3593                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3594  001A4A  0100               	movlb	0	; () banked
  3595  001A4C  EE20 F001          	lfsr	2,1
  3596  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3597  001A52  26D9               	addwf	fsr2l,f,c
  3598  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3599  001A56  22DA               	addwfc	fsr2h,f,c
  3600  001A58  50DF               	movf	indf2,w,c
  3601  001A5A  010F               	movlb	15	; () banked
  3602  001A5C  6F47               	movwf	71,b	;volatile
  3603                           
  3604                           ; BSR set to: 15
  3605                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3606  001A5E  0100               	movlb	0	; () banked
  3607  001A60  EE20 F002          	lfsr	2,2
  3608  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3609  001A66  26D9               	addwf	fsr2l,f,c
  3610  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3611  001A6A  22DA               	addwfc	fsr2h,f,c
  3612  001A6C  50DF               	movf	indf2,w,c
  3613  001A6E  010F               	movlb	15	; () banked
  3614  001A70  6F48               	movwf	72,b	;volatile
  3615                           
  3616                           ; BSR set to: 15
  3617                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3618  001A72  0100               	movlb	0	; () banked
  3619  001A74  EE20 F003          	lfsr	2,3
  3620  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3621  001A7A  26D9               	addwf	fsr2l,f,c
  3622  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3623  001A7E  22DA               	addwfc	fsr2h,f,c
  3624  001A80  50DF               	movf	indf2,w,c
  3625  001A82  010F               	movlb	15	; () banked
  3626  001A84  6F49               	movwf	73,b	;volatile
  3627                           
  3628                           ; BSR set to: 15
  3629                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3630  001A86  0100               	movlb	0	; () banked
  3631  001A88  EE20 F004          	lfsr	2,4
  3632  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3633  001A8E  26D9               	addwf	fsr2l,f,c
  3634  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3635  001A92  22DA               	addwfc	fsr2h,f,c
  3636  001A94  50DF               	movf	indf2,w,c
  3637  001A96  010F               	movlb	15	; () banked
  3638  001A98  6F4A               	movwf	74,b	;volatile
  3639                           
  3640                           ; BSR set to: 15
  3641                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3642  001A9A  0100               	movlb	0	; () banked
  3643  001A9C  EE20 F005          	lfsr	2,5
  3644  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3645  001AA2  26D9               	addwf	fsr2l,f,c
  3646  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3647  001AA6  22DA               	addwfc	fsr2h,f,c
  3648  001AA8  50DF               	movf	indf2,w,c
  3649  001AAA  010F               	movlb	15	; () banked
  3650  001AAC  6F4B               	movwf	75,b	;volatile
  3651                           
  3652                           ; BSR set to: 15
  3653                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3654  001AAE  0100               	movlb	0	; () banked
  3655  001AB0  EE20 F006          	lfsr	2,6
  3656  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3657  001AB6  26D9               	addwf	fsr2l,f,c
  3658  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3659  001ABA  22DA               	addwfc	fsr2h,f,c
  3660  001ABC  50DF               	movf	indf2,w,c
  3661  001ABE  010F               	movlb	15	; () banked
  3662  001AC0  6F4C               	movwf	76,b	;volatile
  3663                           
  3664                           ; BSR set to: 15
  3665                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3666  001AC2  0100               	movlb	0	; () banked
  3667  001AC4  EE20 F007          	lfsr	2,7
  3668  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3669  001ACA  26D9               	addwf	fsr2l,f,c
  3670  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3671  001ACE  22DA               	addwfc	fsr2h,f,c
  3672  001AD0  50DF               	movf	indf2,w,c
  3673  001AD2  010F               	movlb	15	; () banked
  3674  001AD4  6F4D               	movwf	77,b	;volatile
  3675                           
  3676                           ; BSR set to: 15
  3677                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3678  001AD6  010F               	movlb	15	; () banked
  3679  001AD8  8740               	bsf	64,3,b	;volatile
  3680                           
  3681                           ; BSR set to: 15
  3682                           ;inc\CANlib.h: 368: return;
  3683  001ADA  0012               	return	
  3684  001ADC                     l363:
  3685                           
  3686                           ; BSR set to: 15
  3687                           ;inc\CANlib.h: 369: }
  3688                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3689  001ADC  010F               	movlb	15	; () banked
  3690  001ADE  B730               	btfsc	48,3,b	;volatile
  3691  001AE0  D13F               	goto	l378
  3692                           
  3693                           ; BSR set to: 15
  3694                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3695  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3696                           
  3697                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3698  001AE6  0100               	movlb	0	; () banked
  3699  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3700  001AEA  D003               	goto	l379
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3704  001AEC  010F               	movlb	15	; () banked
  3705  001AEE  8D35               	bsf	53,6,b	;volatile
  3706  001AF0  D002               	goto	l380
  3707  001AF2                     l379:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;inc\CANlib.h: 378: else
  3711                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3712  001AF2  010F               	movlb	15	; () banked
  3713  001AF4  9D35               	bcf	53,6,b	;volatile
  3714  001AF6                     l380:
  3715                           
  3716                           ; BSR set to: 15
  3717                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3718  001AF6  0100               	movlb	0	; () banked
  3719  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3720  001AFA  D079               	goto	l381
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 382: {
  3724                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3725  001AFC  0100               	movlb	0	; () banked
  3726  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3727  001B00  0100               	movlb	0	; () banked
  3728  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3729  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3730  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3731  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3735  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3739  001B0E  0E00               	movlw	0
  3740  001B10  0100               	movlb	0	; () banked
  3741  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3742  001B14  0100               	movlb	0	; () banked
  3743  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3744  001B18  0EFF               	movlw	255
  3745  001B1A  0100               	movlb	0	; () banked
  3746  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3747  001B1E  0100               	movlb	0	; () banked
  3748  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3749  001B22  0E00               	movlw	0
  3750  001B24  0100               	movlb	0	; () banked
  3751  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3752  001B28  0100               	movlb	0	; () banked
  3753  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3754  001B2C  0E00               	movlw	0
  3755  001B2E  0100               	movlb	0	; () banked
  3756  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3757  001B32  0100               	movlb	0	; () banked
  3758  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3762  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3763  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3764  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3765  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3766  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3767  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3768  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3769  001B52  0100               	movlb	0	; () banked
  3770  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3771  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3772  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3773  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3774  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3778  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3782  001B6A  0E00               	movlw	0
  3783  001B6C  010F               	movlb	15	; () banked
  3784  001B6E  6F32               	movwf	50,b	;volatile
  3785                           
  3786                           ; BSR set to: 15
  3787                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3788  001B70  010F               	movlb	15	; () banked
  3789  001B72  8732               	bsf	50,3,b	;volatile
  3790                           
  3791                           ; BSR set to: 15
  3792                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3793  001B74  0100               	movlb	0	; () banked
  3794  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3795  001B78  D002               	goto	l382
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3799  001B7A  010F               	movlb	15	; () banked
  3800  001B7C  8132               	bsf	50,0,b	;volatile
  3801  001B7E                     l382:
  3802                           
  3803                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3804  001B7E  0100               	movlb	0	; () banked
  3805  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3806  001B82  D002               	goto	l383
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3810  001B84  010F               	movlb	15	; () banked
  3811  001B86  8332               	bsf	50,1,b	;volatile
  3812  001B88                     l383:
  3813                           
  3814                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3815  001B88  0100               	movlb	0	; () banked
  3816  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3817  001B8C  D002               	goto	l384
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3821  001B8E  010F               	movlb	15	; () banked
  3822  001B90  8B32               	bsf	50,5,b	;volatile
  3823  001B92                     l384:
  3824                           
  3825                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3826  001B92  0100               	movlb	0	; () banked
  3827  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3828  001B96  D002               	goto	l385
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3832  001B98  010F               	movlb	15	; () banked
  3833  001B9A  8D32               	bsf	50,6,b	;volatile
  3834  001B9C                     l385:
  3835                           
  3836                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3837  001B9C  0100               	movlb	0	; () banked
  3838  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3839  001BA0  D002               	goto	l4916
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3843  001BA2  010F               	movlb	15	; () banked
  3844  001BA4  8F32               	bsf	50,7,b	;volatile
  3845  001BA6                     l4916:
  3846                           
  3847                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3848  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3849  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3850  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3851  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3852  001BB6  0E16               	movlw	22
  3853  001BB8  D006               	goto	u5640
  3854  001BBA                     u5645:
  3855  001BBA  0100               	movlb	0	; () banked
  3856  001BBC  90D8               	bcf	status,0,c
  3857  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3858  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3859  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3860  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3861  001BC6                     u5640:
  3862  001BC6  2EE8               	decfsz	wreg,f,c
  3863  001BC8  D7F8               	goto	u5645
  3864  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3865  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3866  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3867  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3871  001BDA  0100               	movlb	0	; () banked
  3872  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3873  001BDE  0100               	movlb	0	; () banked
  3874  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3875  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3876  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3877  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3881  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3882                           
  3883                           ;inc\CANlib.h: 407: }
  3884  001BEC  D059               	goto	l4936
  3885  001BEE                     l381:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;inc\CANlib.h: 409: else
  3889                           ;inc\CANlib.h: 411: {
  3890                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3891  001BEE  010F               	movlb	15	; () banked
  3892  001BF0  9732               	bcf	50,3,b	;volatile
  3893                           
  3894                           ; BSR set to: 15
  3895                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3896  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3897  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3898  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3899  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3900  001C02  0E04               	movlw	4
  3901  001C04  D006               	goto	u5650
  3902  001C06                     u5655:
  3903  001C06  0100               	movlb	0	; () banked
  3904  001C08  90D8               	bcf	status,0,c
  3905  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3906  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3907  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3908  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3909  001C12                     u5650:
  3910  001C12  2EE8               	decfsz	wreg,f,c
  3911  001C14  D7F8               	goto	u5655
  3912  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3913  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3914  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3915  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3919  001C26  0100               	movlb	0	; () banked
  3920  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3921  001C2A  0100               	movlb	0	; () banked
  3922  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3923  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3924  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3925  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3929  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3933  001C38  0E07               	movlw	7
  3934  001C3A  0100               	movlb	0	; () banked
  3935  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3936  001C3E  0100               	movlb	0	; () banked
  3937  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3938  001C42  0E00               	movlw	0
  3939  001C44  0100               	movlb	0	; () banked
  3940  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3941  001C48  0100               	movlb	0	; () banked
  3942  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3943  001C4C  0E00               	movlw	0
  3944  001C4E  0100               	movlb	0	; () banked
  3945  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3946  001C52  0100               	movlb	0	; () banked
  3947  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3948  001C56  0E00               	movlw	0
  3949  001C58  0100               	movlb	0	; () banked
  3950  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3951  001C5C  0100               	movlb	0	; () banked
  3952  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  3956  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3957  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3958  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3959  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3960  001C70  0E05               	movlw	5
  3961  001C72                     u5665:
  3962  001C72  90D8               	bcf	status,0,c
  3963  001C74  0100               	movlb	0	; () banked
  3964  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3965  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3966  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3967  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3968  001C7E  2EE8               	decfsz	wreg,f,c
  3969  001C80  D7F8               	goto	u5665
  3970  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3971  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3972  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3973  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  3977  001C92  010F               	movlb	15	; () banked
  3978  001C94  5132               	movf	50,w,b	;volatile
  3979  001C96  0B1F               	andlw	31
  3980  001C98  010F               	movlb	15	; () banked
  3981  001C9A  6F32               	movwf	50,b	;volatile
  3982                           
  3983                           ; BSR set to: 15
  3984                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  3985  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3986  001CA0                     l4936:
  3987                           
  3988                           ;inc\CANlib.h: 422: }
  3989                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  3990  001CA0  0100               	movlb	0	; () banked
  3991  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3992  001CA4  D003               	goto	l388
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  3996  001CA6  010F               	movlb	15	; () banked
  3997  001CA8  8130               	bsf	48,0,b	;volatile
  3998  001CAA  D002               	goto	l389
  3999  001CAC                     l388:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;inc\CANlib.h: 426: else
  4003                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  4004  001CAC  010F               	movlb	15	; () banked
  4005  001CAE  9130               	bcf	48,0,b	;volatile
  4006  001CB0                     l389:
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  4010  001CB0  0100               	movlb	0	; () banked
  4011  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4012  001CB4  D003               	goto	l390
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  4016  001CB6  010F               	movlb	15	; () banked
  4017  001CB8  8330               	bsf	48,1,b	;volatile
  4018  001CBA  D002               	goto	l4942
  4019  001CBC                     l390:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;inc\CANlib.h: 430: else
  4023                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  4024  001CBC  010F               	movlb	15	; () banked
  4025  001CBE  9330               	bcf	48,1,b	;volatile
  4026  001CC0                     l4942:
  4027                           
  4028                           ; BSR set to: 15
  4029                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  4030  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4031  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4032  001CC8  50DF               	movf	indf2,w,c
  4033  001CCA  010F               	movlb	15	; () banked
  4034  001CCC  6F36               	movwf	54,b	;volatile
  4035                           
  4036                           ; BSR set to: 15
  4037                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  4038  001CCE  0100               	movlb	0	; () banked
  4039  001CD0  EE20 F001          	lfsr	2,1
  4040  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4041  001CD6  26D9               	addwf	fsr2l,f,c
  4042  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4043  001CDA  22DA               	addwfc	fsr2h,f,c
  4044  001CDC  50DF               	movf	indf2,w,c
  4045  001CDE  010F               	movlb	15	; () banked
  4046  001CE0  6F37               	movwf	55,b	;volatile
  4047                           
  4048                           ; BSR set to: 15
  4049                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  4050  001CE2  0100               	movlb	0	; () banked
  4051  001CE4  EE20 F002          	lfsr	2,2
  4052  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4053  001CEA  26D9               	addwf	fsr2l,f,c
  4054  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4055  001CEE  22DA               	addwfc	fsr2h,f,c
  4056  001CF0  50DF               	movf	indf2,w,c
  4057  001CF2  010F               	movlb	15	; () banked
  4058  001CF4  6F38               	movwf	56,b	;volatile
  4059                           
  4060                           ; BSR set to: 15
  4061                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  4062  001CF6  0100               	movlb	0	; () banked
  4063  001CF8  EE20 F003          	lfsr	2,3
  4064  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4065  001CFE  26D9               	addwf	fsr2l,f,c
  4066  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4067  001D02  22DA               	addwfc	fsr2h,f,c
  4068  001D04  50DF               	movf	indf2,w,c
  4069  001D06  010F               	movlb	15	; () banked
  4070  001D08  6F39               	movwf	57,b	;volatile
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  4074  001D0A  0100               	movlb	0	; () banked
  4075  001D0C  EE20 F004          	lfsr	2,4
  4076  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4077  001D12  26D9               	addwf	fsr2l,f,c
  4078  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4079  001D16  22DA               	addwfc	fsr2h,f,c
  4080  001D18  50DF               	movf	indf2,w,c
  4081  001D1A  010F               	movlb	15	; () banked
  4082  001D1C  6F3A               	movwf	58,b	;volatile
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  4086  001D1E  0100               	movlb	0	; () banked
  4087  001D20  EE20 F005          	lfsr	2,5
  4088  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4089  001D26  26D9               	addwf	fsr2l,f,c
  4090  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4091  001D2A  22DA               	addwfc	fsr2h,f,c
  4092  001D2C  50DF               	movf	indf2,w,c
  4093  001D2E  010F               	movlb	15	; () banked
  4094  001D30  6F3B               	movwf	59,b	;volatile
  4095                           
  4096                           ; BSR set to: 15
  4097                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  4098  001D32  0100               	movlb	0	; () banked
  4099  001D34  EE20 F006          	lfsr	2,6
  4100  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4101  001D3A  26D9               	addwf	fsr2l,f,c
  4102  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4103  001D3E  22DA               	addwfc	fsr2h,f,c
  4104  001D40  50DF               	movf	indf2,w,c
  4105  001D42  010F               	movlb	15	; () banked
  4106  001D44  6F3C               	movwf	60,b	;volatile
  4107                           
  4108                           ; BSR set to: 15
  4109                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  4110  001D46  0100               	movlb	0	; () banked
  4111  001D48  EE20 F007          	lfsr	2,7
  4112  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4113  001D4E  26D9               	addwf	fsr2l,f,c
  4114  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4115  001D52  22DA               	addwfc	fsr2h,f,c
  4116  001D54  50DF               	movf	indf2,w,c
  4117  001D56  010F               	movlb	15	; () banked
  4118  001D58  6F3D               	movwf	61,b	;volatile
  4119                           
  4120                           ; BSR set to: 15
  4121                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  4122  001D5A  010F               	movlb	15	; () banked
  4123  001D5C  8730               	bsf	48,3,b	;volatile
  4124                           
  4125                           ; BSR set to: 15
  4126                           ;inc\CANlib.h: 444: return;
  4127  001D5E  0012               	return	
  4128  001D60                     l378:
  4129                           
  4130                           ; BSR set to: 15
  4131                           ;inc\CANlib.h: 445: }
  4132                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  4133  001D60  010F               	movlb	15	; () banked
  4134  001D62  B720               	btfsc	32,3,b	;volatile
  4135  001D64  0012               	return	
  4136                           
  4137                           ; BSR set to: 15
  4138                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  4139  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4140                           
  4141                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  4142  001D6A  0100               	movlb	0	; () banked
  4143  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4144  001D6E  D003               	goto	l393
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  4148  001D70  010F               	movlb	15	; () banked
  4149  001D72  8D25               	bsf	37,6,b	;volatile
  4150  001D74  D002               	goto	l394
  4151  001D76                     l393:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;inc\CANlib.h: 454: else
  4155                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  4156  001D76  010F               	movlb	15	; () banked
  4157  001D78  9D25               	bcf	37,6,b	;volatile
  4158  001D7A                     l394:
  4159                           
  4160                           ; BSR set to: 15
  4161                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  4162  001D7A  0100               	movlb	0	; () banked
  4163  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4164  001D7E  D079               	goto	l395
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 458: {
  4168                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  4169  001D80  0100               	movlb	0	; () banked
  4170  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4171  001D84  0100               	movlb	0	; () banked
  4172  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4173  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4174  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4175  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  4179  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  4183  001D92  0E00               	movlw	0
  4184  001D94  0100               	movlb	0	; () banked
  4185  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4186  001D98  0100               	movlb	0	; () banked
  4187  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4188  001D9C  0EFF               	movlw	255
  4189  001D9E  0100               	movlb	0	; () banked
  4190  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4191  001DA2  0100               	movlb	0	; () banked
  4192  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4193  001DA6  0E00               	movlw	0
  4194  001DA8  0100               	movlb	0	; () banked
  4195  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4196  001DAC  0100               	movlb	0	; () banked
  4197  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4198  001DB0  0E00               	movlw	0
  4199  001DB2  0100               	movlb	0	; () banked
  4200  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4201  001DB6  0100               	movlb	0	; () banked
  4202  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  4206  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4207  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4208  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4209  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4210  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4211  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4212  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4213  001DD6  0100               	movlb	0	; () banked
  4214  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4215  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4216  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4217  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4218  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  4222  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  4226  001DEE  0E00               	movlw	0
  4227  001DF0  010F               	movlb	15	; () banked
  4228  001DF2  6F22               	movwf	34,b	;volatile
  4229                           
  4230                           ; BSR set to: 15
  4231                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  4232  001DF4  010F               	movlb	15	; () banked
  4233  001DF6  8722               	bsf	34,3,b	;volatile
  4234                           
  4235                           ; BSR set to: 15
  4236                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  4237  001DF8  0100               	movlb	0	; () banked
  4238  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4239  001DFC  D002               	goto	l396
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4243  001DFE  010F               	movlb	15	; () banked
  4244  001E00  8122               	bsf	34,0,b	;volatile
  4245  001E02                     l396:
  4246                           
  4247                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4248  001E02  0100               	movlb	0	; () banked
  4249  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4250  001E06  D002               	goto	l397
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4254  001E08  010F               	movlb	15	; () banked
  4255  001E0A  8322               	bsf	34,1,b	;volatile
  4256  001E0C                     l397:
  4257                           
  4258                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4259  001E0C  0100               	movlb	0	; () banked
  4260  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4261  001E10  D002               	goto	l398
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4265  001E12  010F               	movlb	15	; () banked
  4266  001E14  8B22               	bsf	34,5,b	;volatile
  4267  001E16                     l398:
  4268                           
  4269                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4270  001E16  0100               	movlb	0	; () banked
  4271  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4272  001E1A  D002               	goto	l399
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4276  001E1C  010F               	movlb	15	; () banked
  4277  001E1E  8D22               	bsf	34,6,b	;volatile
  4278  001E20                     l399:
  4279                           
  4280                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4281  001E20  0100               	movlb	0	; () banked
  4282  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4283  001E24  D002               	goto	l4992
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4287  001E26  010F               	movlb	15	; () banked
  4288  001E28  8F22               	bsf	34,7,b	;volatile
  4289  001E2A                     l4992:
  4290                           
  4291                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4292  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4293  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4294  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4295  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4296  001E3A  0E16               	movlw	22
  4297  001E3C  D006               	goto	u5770
  4298  001E3E                     u5775:
  4299  001E3E  0100               	movlb	0	; () banked
  4300  001E40  90D8               	bcf	status,0,c
  4301  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4302  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4303  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4304  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4305  001E4A                     u5770:
  4306  001E4A  2EE8               	decfsz	wreg,f,c
  4307  001E4C  D7F8               	goto	u5775
  4308  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4309  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4310  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4311  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4315  001E5E  0100               	movlb	0	; () banked
  4316  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4317  001E62  0100               	movlb	0	; () banked
  4318  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4319  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4320  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4321  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4325  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4326                           
  4327                           ;inc\CANlib.h: 483: }
  4328  001E70  D059               	goto	l5012
  4329  001E72                     l395:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 485: else
  4333                           ;inc\CANlib.h: 487: {
  4334                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4335  001E72  010F               	movlb	15	; () banked
  4336  001E74  9722               	bcf	34,3,b	;volatile
  4337                           
  4338                           ; BSR set to: 15
  4339                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4340  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4341  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4342  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4343  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4344  001E86  0E04               	movlw	4
  4345  001E88  D006               	goto	u5780
  4346  001E8A                     u5785:
  4347  001E8A  0100               	movlb	0	; () banked
  4348  001E8C  90D8               	bcf	status,0,c
  4349  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4350  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4351  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4352  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4353  001E96                     u5780:
  4354  001E96  2EE8               	decfsz	wreg,f,c
  4355  001E98  D7F8               	goto	u5785
  4356  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4357  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4358  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4359  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4363  001EAA  0100               	movlb	0	; () banked
  4364  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4365  001EAE  0100               	movlb	0	; () banked
  4366  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4367  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4368  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4369  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4373  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4377  001EBC  0E07               	movlw	7
  4378  001EBE  0100               	movlb	0	; () banked
  4379  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4380  001EC2  0100               	movlb	0	; () banked
  4381  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4382  001EC6  0E00               	movlw	0
  4383  001EC8  0100               	movlb	0	; () banked
  4384  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4385  001ECC  0100               	movlb	0	; () banked
  4386  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4387  001ED0  0E00               	movlw	0
  4388  001ED2  0100               	movlb	0	; () banked
  4389  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4390  001ED6  0100               	movlb	0	; () banked
  4391  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4392  001EDA  0E00               	movlw	0
  4393  001EDC  0100               	movlb	0	; () banked
  4394  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4395  001EE0  0100               	movlb	0	; () banked
  4396  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4400  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4401  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4402  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4403  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4404  001EF4  0E05               	movlw	5
  4405  001EF6                     u5795:
  4406  001EF6  90D8               	bcf	status,0,c
  4407  001EF8  0100               	movlb	0	; () banked
  4408  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4409  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4410  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4411  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4412  001F02  2EE8               	decfsz	wreg,f,c
  4413  001F04  D7F8               	goto	u5795
  4414  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4415  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4416  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4417  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4421  001F16  010F               	movlb	15	; () banked
  4422  001F18  5122               	movf	34,w,b	;volatile
  4423  001F1A  0B1F               	andlw	31
  4424  001F1C  010F               	movlb	15	; () banked
  4425  001F1E  6F22               	movwf	34,b	;volatile
  4426                           
  4427                           ; BSR set to: 15
  4428                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4429  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4430  001F24                     l5012:
  4431                           
  4432                           ;inc\CANlib.h: 498: }
  4433                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4434  001F24  0100               	movlb	0	; () banked
  4435  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4436  001F28  D003               	goto	l402
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4440  001F2A  010F               	movlb	15	; () banked
  4441  001F2C  8120               	bsf	32,0,b	;volatile
  4442  001F2E  D002               	goto	l403
  4443  001F30                     l402:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 502: else
  4447                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4448  001F30  010F               	movlb	15	; () banked
  4449  001F32  9120               	bcf	32,0,b	;volatile
  4450  001F34                     l403:
  4451                           
  4452                           ; BSR set to: 15
  4453                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4454  001F34  0100               	movlb	0	; () banked
  4455  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4456  001F38  D003               	goto	l404
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4460  001F3A  010F               	movlb	15	; () banked
  4461  001F3C  8320               	bsf	32,1,b	;volatile
  4462  001F3E  D002               	goto	l5018
  4463  001F40                     l404:
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;inc\CANlib.h: 506: else
  4467                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4468  001F40  010F               	movlb	15	; () banked
  4469  001F42  9320               	bcf	32,1,b	;volatile
  4470  001F44                     l5018:
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4474  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4475  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4476  001F4C  50DF               	movf	indf2,w,c
  4477  001F4E  010F               	movlb	15	; () banked
  4478  001F50  6F26               	movwf	38,b	;volatile
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4482  001F52  0100               	movlb	0	; () banked
  4483  001F54  EE20 F001          	lfsr	2,1
  4484  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4485  001F5A  26D9               	addwf	fsr2l,f,c
  4486  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4487  001F5E  22DA               	addwfc	fsr2h,f,c
  4488  001F60  50DF               	movf	indf2,w,c
  4489  001F62  010F               	movlb	15	; () banked
  4490  001F64  6F27               	movwf	39,b	;volatile
  4491                           
  4492                           ; BSR set to: 15
  4493                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4494  001F66  0100               	movlb	0	; () banked
  4495  001F68  EE20 F002          	lfsr	2,2
  4496  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4497  001F6E  26D9               	addwf	fsr2l,f,c
  4498  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4499  001F72  22DA               	addwfc	fsr2h,f,c
  4500  001F74  50DF               	movf	indf2,w,c
  4501  001F76  010F               	movlb	15	; () banked
  4502  001F78  6F28               	movwf	40,b	;volatile
  4503                           
  4504                           ; BSR set to: 15
  4505                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4506  001F7A  0100               	movlb	0	; () banked
  4507  001F7C  EE20 F003          	lfsr	2,3
  4508  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4509  001F82  26D9               	addwf	fsr2l,f,c
  4510  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4511  001F86  22DA               	addwfc	fsr2h,f,c
  4512  001F88  50DF               	movf	indf2,w,c
  4513  001F8A  010F               	movlb	15	; () banked
  4514  001F8C  6F29               	movwf	41,b	;volatile
  4515                           
  4516                           ; BSR set to: 15
  4517                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4518  001F8E  0100               	movlb	0	; () banked
  4519  001F90  EE20 F004          	lfsr	2,4
  4520  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4521  001F96  26D9               	addwf	fsr2l,f,c
  4522  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4523  001F9A  22DA               	addwfc	fsr2h,f,c
  4524  001F9C  50DF               	movf	indf2,w,c
  4525  001F9E  010F               	movlb	15	; () banked
  4526  001FA0  6F2A               	movwf	42,b	;volatile
  4527                           
  4528                           ; BSR set to: 15
  4529                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4530  001FA2  0100               	movlb	0	; () banked
  4531  001FA4  EE20 F005          	lfsr	2,5
  4532  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4533  001FAA  26D9               	addwf	fsr2l,f,c
  4534  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4535  001FAE  22DA               	addwfc	fsr2h,f,c
  4536  001FB0  50DF               	movf	indf2,w,c
  4537  001FB2  010F               	movlb	15	; () banked
  4538  001FB4  6F2B               	movwf	43,b	;volatile
  4539                           
  4540                           ; BSR set to: 15
  4541                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4542  001FB6  0100               	movlb	0	; () banked
  4543  001FB8  EE20 F006          	lfsr	2,6
  4544  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4545  001FBE  26D9               	addwf	fsr2l,f,c
  4546  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4547  001FC2  22DA               	addwfc	fsr2h,f,c
  4548  001FC4  50DF               	movf	indf2,w,c
  4549  001FC6  010F               	movlb	15	; () banked
  4550  001FC8  6F2C               	movwf	44,b	;volatile
  4551                           
  4552                           ; BSR set to: 15
  4553                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4554  001FCA  0100               	movlb	0	; () banked
  4555  001FCC  EE20 F007          	lfsr	2,7
  4556  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4557  001FD2  26D9               	addwf	fsr2l,f,c
  4558  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4559  001FD6  22DA               	addwfc	fsr2h,f,c
  4560  001FD8  50DF               	movf	indf2,w,c
  4561  001FDA  010F               	movlb	15	; () banked
  4562  001FDC  6F2D               	movwf	45,b	;volatile
  4563                           
  4564                           ; BSR set to: 15
  4565                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4566  001FDE  010F               	movlb	15	; () banked
  4567  001FE0  8720               	bsf	32,3,b	;volatile
  4568                           
  4569                           ; BSR set to: 15
  4570                           ;inc\CANlib.h: 520: return;
  4571  001FE2  0012               	return	
  4572  001FE4                     __end_of_CANsendMessage:
  4573                           	opt stack 0
  4574                           tblptru	equ	0xFF8
  4575                           tblptrh	equ	0xFF7
  4576                           tblptrl	equ	0xFF6
  4577                           tablat	equ	0xFF5
  4578                           postinc0	equ	0xFEE
  4579                           wreg	equ	0xFE8
  4580                           postdec1	equ	0xFE5
  4581                           fsr1l	equ	0xFE1
  4582                           indf2	equ	0xFDF
  4583                           postinc2	equ	0xFDE
  4584                           postdec2	equ	0xFDD
  4585                           fsr2h	equ	0xFDA
  4586                           fsr2l	equ	0xFD9
  4587                           status	equ	0xFD8
  4588                           
  4589 ;; *************** function _CANisTxReady *****************
  4590 ;; Defined at:
  4591 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      unsigned char 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;Total ram usage:        1 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    4
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;;		_park_search
  4617 ;;		_park_routine
  4618 ;;		_can_send
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text6
  4623  006682                     __ptext6:
  4624                           	opt stack 0
  4625  006682                     _CANisTxReady:
  4626                           	opt stack 23
  4627                           
  4628                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4629                           
  4630                           ; BSR set to: 15
  4631                           ;incstack = 0
  4632  006682  0E01               	movlw	1
  4633  006684  0100               	movlb	0	; () banked
  4634  006686  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4635                           
  4636                           ; BSR set to: 0
  4637  006688  010F               	movlb	15	; () banked
  4638  00668A  A740               	btfss	64,3,b	;volatile
  4639  00668C  D009               	goto	l556
  4640                           
  4641                           ; BSR set to: 15
  4642  00668E  010F               	movlb	15	; () banked
  4643  006690  A730               	btfss	48,3,b	;volatile
  4644  006692  D006               	goto	l556
  4645                           
  4646                           ; BSR set to: 15
  4647  006694  010F               	movlb	15	; () banked
  4648  006696  A720               	btfss	32,3,b	;volatile
  4649  006698  D003               	goto	l556
  4650                           
  4651                           ; BSR set to: 15
  4652  00669A  0E00               	movlw	0
  4653  00669C  0100               	movlb	0	; () banked
  4654  00669E  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4655  0066A0                     l556:
  4656  0066A0  0100               	movlb	0	; () banked
  4657  0066A2  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4658  0066A4  0012               	return	
  4659  0066A6                     __end_of_CANisTxReady:
  4660                           	opt stack 0
  4661                           tblptru	equ	0xFF8
  4662                           tblptrh	equ	0xFF7
  4663                           tblptrl	equ	0xFF6
  4664                           tablat	equ	0xFF5
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           postdec1	equ	0xFE5
  4668                           fsr1l	equ	0xFE1
  4669                           indf2	equ	0xFDF
  4670                           postinc2	equ	0xFDE
  4671                           postdec2	equ	0xFDD
  4672                           fsr2h	equ	0xFDA
  4673                           fsr2l	equ	0xFD9
  4674                           status	equ	0xFD8
  4675                           
  4676 ;; *************** function _abs *****************
  4677 ;; Defined at:
  4678 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  a               2   23[BANK0 ] int 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  2   23[BANK0 ] int 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;Total ram usage:        4 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    4
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_park_search
  4703 ;;		_parallelo
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text7
  4708  00662A                     __ptext7:
  4709                           	opt stack 0
  4710  00662A                     _abs:
  4711                           	opt stack 24
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;incstack = 0
  4715  00662A  0100               	movlb	0	; () banked
  4716  00662C  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4717  00662E  D00E               	goto	l890
  4718                           
  4719                           ; BSR set to: 0
  4720  006630  C077  F079         	movff	abs@a,??_abs
  4721  006634  C078  F07A         	movff	abs@a+1,??_abs+1
  4722  006638  0100               	movlb	0	; () banked
  4723  00663A  1F79               	comf	??_abs& (0+255),f,b
  4724  00663C  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4725  00663E  4B79               	infsnz	??_abs& (0+255),f,b
  4726  006640  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4727  006642  C079  F077         	movff	??_abs,?_abs
  4728  006646  C07A  F078         	movff	??_abs+1,?_abs+1
  4729  00664A  0012               	return	
  4730  00664C                     l890:
  4731                           
  4732                           ; BSR set to: 0
  4733  00664C  C077  F077         	movff	abs@a,?_abs
  4734  006650  C078  F078         	movff	abs@a+1,?_abs+1
  4735                           
  4736                           ; BSR set to: 0
  4737  006654  0012               	return		;funcret
  4738  006656                     __end_of_abs:
  4739                           	opt stack 0
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           postinc0	equ	0xFEE
  4745                           wreg	equ	0xFE8
  4746                           postdec1	equ	0xFE5
  4747                           fsr1l	equ	0xFE1
  4748                           indf2	equ	0xFDF
  4749                           postinc2	equ	0xFDE
  4750                           postdec2	equ	0xFDD
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function _matematica *****************
  4756 ;; Defined at:
  4757 ;;		line 478 in file "parcheggio.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;Total ram usage:       28 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    8
  4778 ;; This function calls:
  4779 ;;		___fladd
  4780 ;;		___fldiv
  4781 ;;		___flmul
  4782 ;;		___flneg
  4783 ;;		_asin
  4784 ;;		_cos
  4785 ;; This function is called by:
  4786 ;;		_park_routine
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text8
  4791  002674                     __ptext8:
  4792                           	opt stack 0
  4793  002674                     _matematica:
  4794                           	opt stack 21
  4795                           
  4796                           ;parcheggio.c: 479: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;incstack = 0
  4800  002674  C134  F0AD         	movff	_bordo,___fladd@a	;volatile
  4801  002678  C135  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4802  00267C  C136  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4803  002680  C137  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4804  002684  0E00               	movlw	0
  4805  002686  0100               	movlb	0	; () banked
  4806  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4807  00268A  0E00               	movlw	0
  4808  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4809  00268E  0E00               	movlw	0
  4810  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4811  002692  0E40               	movlw	64
  4812  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4813  002696  C1E8  F077         	movff	_larghezza,___fldiv@b
  4814  00269A  C1E9  F078         	movff	_larghezza+1,___fldiv@b+1
  4815  00269E  C1EA  F079         	movff	_larghezza+2,___fldiv@b+2
  4816  0026A2  C1EB  F07A         	movff	_larghezza+3,___fldiv@b+3
  4817  0026A6  EC59  F021         	call	___fldiv	;wreg free
  4818  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4819  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4820  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4821  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4822  0026BA  EC85  F018         	call	___fladd	;wreg free
  4823  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4824  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4825  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4826  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4827  0026CE  ECDE  F032         	call	___flneg	;wreg free
  4828  0026D2  C0BD  F1C0         	movff	?___flneg,_matematica$3744
  4829  0026D6  C0BE  F1C1         	movff	?___flneg+1,_matematica$3744+1
  4830  0026DA  C0BF  F1C2         	movff	?___flneg+2,_matematica$3744+2
  4831  0026DE  C0C0  F1C3         	movff	?___flneg+3,_matematica$3744+3
  4832                           
  4833                           ;parcheggio.c: 479: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4834  0026E2  C1C0  F0AD         	movff	_matematica$3744,___fladd@a
  4835  0026E6  C1C1  F0AE         	movff	_matematica$3744+1,___fladd@a+1
  4836  0026EA  C1C2  F0AF         	movff	_matematica$3744+2,___fladd@a+2
  4837  0026EE  C1C3  F0B0         	movff	_matematica$3744+3,___fladd@a+3
  4838  0026F2  0E00               	movlw	0
  4839  0026F4  0100               	movlb	0	; () banked
  4840  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4841  0026F8  0E00               	movlw	0
  4842  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4843  0026FC  0E00               	movlw	0
  4844  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4845  002700  0E40               	movlw	64
  4846  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4847  002704  C1EC  F090         	movff	_raggio,___flmul@b
  4848  002708  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4849  00270C  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4850  002710  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4851  002714  ECD9  F01A         	call	___flmul	;wreg free
  4852  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4853  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4854  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4855  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4856  002728  EC85  F018         	call	___fladd	;wreg free
  4857  00272C  C0A9  F1C4         	movff	?___fladd,_matematica$3745
  4858  002730  C0AA  F1C5         	movff	?___fladd+1,_matematica$3745+1
  4859  002734  C0AB  F1C6         	movff	?___fladd+2,_matematica$3745+2
  4860  002738  C0AC  F1C7         	movff	?___fladd+3,_matematica$3745+3
  4861                           
  4862                           ;parcheggio.c: 479: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4863  00273C  0E00               	movlw	0
  4864  00273E  0100               	movlb	0	; () banked
  4865  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4866  002742  0E00               	movlw	0
  4867  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4868  002746  0E00               	movlw	0
  4869  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4870  00274A  0E40               	movlw	64
  4871  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4872  00274E  C1E8  F077         	movff	_larghezza,___fldiv@b
  4873  002752  C1E9  F078         	movff	_larghezza+1,___fldiv@b+1
  4874  002756  C1EA  F079         	movff	_larghezza+2,___fldiv@b+2
  4875  00275A  C1EB  F07A         	movff	_larghezza+3,___fldiv@b+3
  4876  00275E  EC59  F021         	call	___fldiv	;wreg free
  4877  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4878  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4879  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4880  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4881  002772  ECDE  F032         	call	___flneg	;wreg free
  4882  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4883  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4884  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4885  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4886  002786  C1C4  F0A9         	movff	_matematica$3745,___fladd@b
  4887  00278A  C1C5  F0AA         	movff	_matematica$3745+1,___fladd@b+1
  4888  00278E  C1C6  F0AB         	movff	_matematica$3745+2,___fladd@b+2
  4889  002792  C1C7  F0AC         	movff	_matematica$3745+3,___fladd@b+3
  4890  002796  EC85  F018         	call	___fladd	;wreg free
  4891  00279A  C0A9  F1C8         	movff	?___fladd,_matematica$3746
  4892  00279E  C0AA  F1C9         	movff	?___fladd+1,_matematica$3746+1
  4893  0027A2  C0AB  F1CA         	movff	?___fladd+2,_matematica$3746+2
  4894  0027A6  C0AC  F1CB         	movff	?___fladd+3,_matematica$3746+3
  4895                           
  4896                           ;parcheggio.c: 479: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4897  0027AA  C1C8  F077         	movff	_matematica$3746,___fldiv@b
  4898  0027AE  C1C9  F078         	movff	_matematica$3746+1,___fldiv@b+1
  4899  0027B2  C1CA  F079         	movff	_matematica$3746+2,___fldiv@b+2
  4900  0027B6  C1CB  F07A         	movff	_matematica$3746+3,___fldiv@b+3
  4901  0027BA  0E00               	movlw	0
  4902  0027BC  0100               	movlb	0	; () banked
  4903  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4904  0027C0  0E00               	movlw	0
  4905  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4906  0027C4  0E00               	movlw	0
  4907  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4908  0027C8  0E40               	movlw	64
  4909  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4910  0027CC  C1EC  F090         	movff	_raggio,___flmul@b
  4911  0027D0  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4912  0027D4  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4913  0027D8  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4914  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4915  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4916  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4917  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4918  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4919  0027F0  EC59  F021         	call	___fldiv	;wreg free
  4920  0027F4  C077  F1CC         	movff	?___fldiv,_matematica$3747
  4921  0027F8  C078  F1CD         	movff	?___fldiv+1,_matematica$3747+1
  4922  0027FC  C079  F1CE         	movff	?___fldiv+2,_matematica$3747+2
  4923  002800  C07A  F1CF         	movff	?___fldiv+3,_matematica$3747+3
  4924                           
  4925                           ;parcheggio.c: 479: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4926  002804  C1CC  F1A0         	movff	_matematica$3747,asin@x
  4927  002808  C1CD  F1A1         	movff	_matematica$3747+1,asin@x+1
  4928  00280C  C1CE  F1A2         	movff	_matematica$3747+2,asin@x+2
  4929  002810  C1CF  F1A3         	movff	_matematica$3747+3,asin@x+3
  4930  002814  EC94  F026         	call	_asin	;wreg free
  4931  002818  C1A0  F12C         	movff	?_asin,_alfa
  4932  00281C  C1A1  F12D         	movff	?_asin+1,_alfa+1
  4933  002820  C1A2  F12E         	movff	?_asin+2,_alfa+2
  4934  002824  C1A3  F12F         	movff	?_asin+3,_alfa+3
  4935                           
  4936                           ;parcheggio.c: 480: alfa = alfa / 3.14159265358979323846 * 180;
  4937  002828  0EDB               	movlw	219
  4938  00282A  0100               	movlb	0	; () banked
  4939  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4940  00282E  0E0F               	movlw	15
  4941  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4942  002832  0E49               	movlw	73
  4943  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4944  002836  0E40               	movlw	64
  4945  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4946  00283A  C12C  F077         	movff	_alfa,___fldiv@b
  4947  00283E  C12D  F078         	movff	_alfa+1,___fldiv@b+1
  4948  002842  C12E  F079         	movff	_alfa+2,___fldiv@b+2
  4949  002846  C12F  F07A         	movff	_alfa+3,___fldiv@b+3
  4950  00284A  EC59  F021         	call	___fldiv	;wreg free
  4951  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4952  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4953  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4954  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4955  00285E  0E00               	movlw	0
  4956  002860  0100               	movlb	0	; () banked
  4957  002862  6F94               	movwf	___flmul@a& (0+255),b
  4958  002864  0E00               	movlw	0
  4959  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4960  002868  0E34               	movlw	52
  4961  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4962  00286C  0E43               	movlw	67
  4963  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4964  002870  ECD9  F01A         	call	___flmul	;wreg free
  4965  002874  C090  F12C         	movff	?___flmul,_alfa
  4966  002878  C091  F12D         	movff	?___flmul+1,_alfa+1
  4967  00287C  C092  F12E         	movff	?___flmul+2,_alfa+2
  4968  002880  C093  F12F         	movff	?___flmul+3,_alfa+3
  4969                           
  4970                           ;parcheggio.c: 481: beta = 90 - alfa;
  4971  002884  C12C  F0BD         	movff	_alfa,___flneg@f1
  4972  002888  C12D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4973  00288C  C12E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4974  002890  C12F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4975  002894  ECDE  F032         	call	___flneg	;wreg free
  4976  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4977  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4978  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4979  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4980  0028A8  0E00               	movlw	0
  4981  0028AA  0100               	movlb	0	; () banked
  4982  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  4983  0028AE  0E00               	movlw	0
  4984  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4985  0028B2  0EB4               	movlw	180
  4986  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4987  0028B6  0E42               	movlw	66
  4988  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4989  0028BA  EC85  F018         	call	___fladd	;wreg free
  4990  0028BE  C0A9  F130         	movff	?___fladd,_beta
  4991  0028C2  C0AA  F131         	movff	?___fladd+1,_beta+1
  4992  0028C6  C0AB  F132         	movff	?___fladd+2,_beta+2
  4993  0028CA  C0AC  F133         	movff	?___fladd+3,_beta+3
  4994                           
  4995                           ;parcheggio.c: 482: alfa = (alfa * 3.14159265358979323846) / 180;
  4996  0028CE  0EDB               	movlw	219
  4997  0028D0  0100               	movlb	0	; () banked
  4998  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  4999  0028D4  0E0F               	movlw	15
  5000  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5001  0028D8  0E49               	movlw	73
  5002  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5003  0028DC  0E40               	movlw	64
  5004  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5005  0028E0  C12C  F090         	movff	_alfa,___flmul@b
  5006  0028E4  C12D  F091         	movff	_alfa+1,___flmul@b+1
  5007  0028E8  C12E  F092         	movff	_alfa+2,___flmul@b+2
  5008  0028EC  C12F  F093         	movff	_alfa+3,___flmul@b+3
  5009  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5010  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  5011  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5012  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5013  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5014  002904  0E00               	movlw	0
  5015  002906  0100               	movlb	0	; () banked
  5016  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  5017  00290A  0E00               	movlw	0
  5018  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5019  00290E  0E34               	movlw	52
  5020  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5021  002912  0E43               	movlw	67
  5022  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5023  002916  EC59  F021         	call	___fldiv	;wreg free
  5024  00291A  C077  F12C         	movff	?___fldiv,_alfa
  5025  00291E  C078  F12D         	movff	?___fldiv+1,_alfa+1
  5026  002922  C079  F12E         	movff	?___fldiv+2,_alfa+2
  5027  002926  C07A  F12F         	movff	?___fldiv+3,_alfa+3
  5028                           
  5029                           ;parcheggio.c: 483: n = cos(alfa);
  5030  00292A  C12C  F1B8         	movff	_alfa,cos@f
  5031  00292E  C12D  F1B9         	movff	_alfa+1,cos@f+1
  5032  002932  C12E  F1BA         	movff	_alfa+2,cos@f+2
  5033  002936  C12F  F1BB         	movff	_alfa+3,cos@f+3
  5034  00293A  EC16  F030         	call	_cos	;wreg free
  5035  00293E  C1B8  F138         	movff	?_cos,_n
  5036  002942  C1B9  F139         	movff	?_cos+1,_n+1
  5037  002946  C1BA  F13A         	movff	?_cos+2,_n+2
  5038  00294A  C1BB  F13B         	movff	?_cos+3,_n+3
  5039                           
  5040                           ;parcheggio.c: 484: n = 2 * raggio *n;
  5041  00294E  C138  F094         	movff	_n,___flmul@a
  5042  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5043  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5044  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5045  00295E  C1EC  F090         	movff	_raggio,___flmul@b
  5046  002962  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  5047  002966  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  5048  00296A  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  5049  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5050  002972  C090  F1D8         	movff	?___flmul,_matematica$3748
  5051  002976  C091  F1D9         	movff	?___flmul+1,_matematica$3748+1
  5052  00297A  C092  F1DA         	movff	?___flmul+2,_matematica$3748+2
  5053  00297E  C093  F1DB         	movff	?___flmul+3,_matematica$3748+3
  5054                           
  5055                           ;parcheggio.c: 484: n = 2 * raggio *n;
  5056  002982  C1D8  F090         	movff	_matematica$3748,___flmul@b
  5057  002986  C1D9  F091         	movff	_matematica$3748+1,___flmul@b+1
  5058  00298A  C1DA  F092         	movff	_matematica$3748+2,___flmul@b+2
  5059  00298E  C1DB  F093         	movff	_matematica$3748+3,___flmul@b+3
  5060  002992  0E00               	movlw	0
  5061  002994  0100               	movlb	0	; () banked
  5062  002996  6F94               	movwf	___flmul@a& (0+255),b
  5063  002998  0E00               	movlw	0
  5064  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5065  00299C  0E00               	movlw	0
  5066  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5067  0029A0  0E40               	movlw	64
  5068  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5069  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5070  0029A8  C090  F138         	movff	?___flmul,_n
  5071  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5072  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5073  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5074                           
  5075                           ;parcheggio.c: 485: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5076  0029B8  C130  F094         	movff	_beta,___flmul@a
  5077  0029BC  C131  F095         	movff	_beta+1,___flmul@a+1
  5078  0029C0  C132  F096         	movff	_beta+2,___flmul@a+2
  5079  0029C4  C133  F097         	movff	_beta+3,___flmul@a+3
  5080  0029C8  C1EC  F090         	movff	_raggio,___flmul@b
  5081  0029CC  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  5082  0029D0  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  5083  0029D4  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  5084  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5085  0029DC  C090  F1D8         	movff	?___flmul,_matematica$3748
  5086  0029E0  C091  F1D9         	movff	?___flmul+1,_matematica$3748+1
  5087  0029E4  C092  F1DA         	movff	?___flmul+2,_matematica$3748+2
  5088  0029E8  C093  F1DB         	movff	?___flmul+3,_matematica$3748+3
  5089                           
  5090                           ;parcheggio.c: 485: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5091  0029EC  0EDB               	movlw	219
  5092  0029EE  0100               	movlb	0	; () banked
  5093  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5094  0029F2  0E0F               	movlw	15
  5095  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5096  0029F6  0EC9               	movlw	201
  5097  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5098  0029FA  0E40               	movlw	64
  5099  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5100  0029FE  C1D8  F090         	movff	_matematica$3748,___flmul@b
  5101  002A02  C1D9  F091         	movff	_matematica$3748+1,___flmul@b+1
  5102  002A06  C1DA  F092         	movff	_matematica$3748+2,___flmul@b+2
  5103  002A0A  C1DB  F093         	movff	_matematica$3748+3,___flmul@b+3
  5104  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5105  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5106  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5107  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5108  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5109  002A22  0E00               	movlw	0
  5110  002A24  0100               	movlb	0	; () banked
  5111  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5112  002A28  0E00               	movlw	0
  5113  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5114  002A2C  0EB4               	movlw	180
  5115  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5116  002A30  0E43               	movlw	67
  5117  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5118  002A34  EC59  F021         	call	___fldiv	;wreg free
  5119  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5120  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5121  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5122  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5123                           
  5124                           ;parcheggio.c: 486: K_var = raggio + (2 * larghezza / 3);
  5125  002A48  0E00               	movlw	0
  5126  002A4A  0100               	movlb	0	; () banked
  5127  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5128  002A4E  0E00               	movlw	0
  5129  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5130  002A52  0E40               	movlw	64
  5131  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5132  002A56  0E40               	movlw	64
  5133  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5134  002A5A  0E00               	movlw	0
  5135  002A5C  0100               	movlb	0	; () banked
  5136  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5137  002A60  0E00               	movlw	0
  5138  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5139  002A64  0E00               	movlw	0
  5140  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5141  002A68  0E40               	movlw	64
  5142  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5143  002A6C  C1E8  F090         	movff	_larghezza,___flmul@b
  5144  002A70  C1E9  F091         	movff	_larghezza+1,___flmul@b+1
  5145  002A74  C1EA  F092         	movff	_larghezza+2,___flmul@b+2
  5146  002A78  C1EB  F093         	movff	_larghezza+3,___flmul@b+3
  5147  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5148  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5149  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5150  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5151  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5152  002A90  EC59  F021         	call	___fldiv	;wreg free
  5153  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5154  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5155  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5156  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5157  002AA4  C1EC  F0AD         	movff	_raggio,___fladd@a
  5158  002AA8  C1ED  F0AE         	movff	_raggio+1,___fladd@a+1
  5159  002AAC  C1EE  F0AF         	movff	_raggio+2,___fladd@a+2
  5160  002AB0  C1EF  F0B0         	movff	_raggio+3,___fladd@a+3
  5161  002AB4  EC85  F018         	call	___fladd	;wreg free
  5162  002AB8  C0A9  F124         	movff	?___fladd,_K_var
  5163  002ABC  C0AA  F125         	movff	?___fladd+1,_K_var+1
  5164  002AC0  C0AB  F126         	movff	?___fladd+2,_K_var+2
  5165  002AC4  C0AC  F127         	movff	?___fladd+3,_K_var+3
  5166                           
  5167                           ;parcheggio.c: 487: J_var = raggio - (2 * larghezza / 3);
  5168  002AC8  0E00               	movlw	0
  5169  002ACA  0100               	movlb	0	; () banked
  5170  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5171  002ACE  0E00               	movlw	0
  5172  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5173  002AD2  0E40               	movlw	64
  5174  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5175  002AD6  0E40               	movlw	64
  5176  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5177  002ADA  0E00               	movlw	0
  5178  002ADC  0100               	movlb	0	; () banked
  5179  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5180  002AE0  0E00               	movlw	0
  5181  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5182  002AE4  0E00               	movlw	0
  5183  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5184  002AE8  0E40               	movlw	64
  5185  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5186  002AEC  C1E8  F090         	movff	_larghezza,___flmul@b
  5187  002AF0  C1E9  F091         	movff	_larghezza+1,___flmul@b+1
  5188  002AF4  C1EA  F092         	movff	_larghezza+2,___flmul@b+2
  5189  002AF8  C1EB  F093         	movff	_larghezza+3,___flmul@b+3
  5190  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5191  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5192  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5193  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5194  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5195  002B10  EC59  F021         	call	___fldiv	;wreg free
  5196  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5197  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5198  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5199  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5200  002B24  ECDE  F032         	call	___flneg	;wreg free
  5201  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5202  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5203  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5204  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5205  002B38  C1EC  F0AD         	movff	_raggio,___fladd@a
  5206  002B3C  C1ED  F0AE         	movff	_raggio+1,___fladd@a+1
  5207  002B40  C1EE  F0AF         	movff	_raggio+2,___fladd@a+2
  5208  002B44  C1EF  F0B0         	movff	_raggio+3,___fladd@a+3
  5209  002B48  EC85  F018         	call	___fladd	;wreg free
  5210  002B4C  C0A9  F120         	movff	?___fladd,_J_var
  5211  002B50  C0AA  F121         	movff	?___fladd+1,_J_var+1
  5212  002B54  C0AB  F122         	movff	?___fladd+2,_J_var+2
  5213  002B58  C0AC  F123         	movff	?___fladd+3,_J_var+3
  5214                           
  5215                           ;parcheggio.c: 488: Pmin = K_var * cos(asin((J_var / K_var)));
  5216  002B5C  C124  F07B         	movff	_K_var,___fldiv@a
  5217  002B60  C125  F07C         	movff	_K_var+1,___fldiv@a+1
  5218  002B64  C126  F07D         	movff	_K_var+2,___fldiv@a+2
  5219  002B68  C127  F07E         	movff	_K_var+3,___fldiv@a+3
  5220  002B6C  C120  F077         	movff	_J_var,___fldiv@b
  5221  002B70  C121  F078         	movff	_J_var+1,___fldiv@b+1
  5222  002B74  C122  F079         	movff	_J_var+2,___fldiv@b+2
  5223  002B78  C123  F07A         	movff	_J_var+3,___fldiv@b+3
  5224  002B7C  EC59  F021         	call	___fldiv	;wreg free
  5225  002B80  C077  F1D0         	movff	?___fldiv,_matematica$3749
  5226  002B84  C078  F1D1         	movff	?___fldiv+1,_matematica$3749+1
  5227  002B88  C079  F1D2         	movff	?___fldiv+2,_matematica$3749+2
  5228  002B8C  C07A  F1D3         	movff	?___fldiv+3,_matematica$3749+3
  5229                           
  5230                           ;parcheggio.c: 488: Pmin = K_var * cos(asin((J_var / K_var)));
  5231  002B90  C1D0  F1A0         	movff	_matematica$3749,asin@x
  5232  002B94  C1D1  F1A1         	movff	_matematica$3749+1,asin@x+1
  5233  002B98  C1D2  F1A2         	movff	_matematica$3749+2,asin@x+2
  5234  002B9C  C1D3  F1A3         	movff	_matematica$3749+3,asin@x+3
  5235  002BA0  EC94  F026         	call	_asin	;wreg free
  5236  002BA4  C1A0  F1B8         	movff	?_asin,cos@f
  5237  002BA8  C1A1  F1B9         	movff	?_asin+1,cos@f+1
  5238  002BAC  C1A2  F1BA         	movff	?_asin+2,cos@f+2
  5239  002BB0  C1A3  F1BB         	movff	?_asin+3,cos@f+3
  5240  002BB4  EC16  F030         	call	_cos	;wreg free
  5241  002BB8  C1B8  F1D4         	movff	?_cos,_matematica$3750
  5242  002BBC  C1B9  F1D5         	movff	?_cos+1,_matematica$3750+1
  5243  002BC0  C1BA  F1D6         	movff	?_cos+2,_matematica$3750+2
  5244  002BC4  C1BB  F1D7         	movff	?_cos+3,_matematica$3750+3
  5245                           
  5246                           ;parcheggio.c: 488: Pmin = K_var * cos(asin((J_var / K_var)));
  5247  002BC8  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5248  002BCC  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5249  002BD0  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5250  002BD4  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5251  002BD8  C124  F094         	movff	_K_var,___flmul@a
  5252  002BDC  C125  F095         	movff	_K_var+1,___flmul@a+1
  5253  002BE0  C126  F096         	movff	_K_var+2,___flmul@a+2
  5254  002BE4  C127  F097         	movff	_K_var+3,___flmul@a+3
  5255  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5256  002BEC  C090  F128         	movff	?___flmul,_Pmin
  5257  002BF0  C091  F129         	movff	?___flmul+1,_Pmin+1
  5258  002BF4  C092  F12A         	movff	?___flmul+2,_Pmin+2
  5259  002BF8  C093  F12B         	movff	?___flmul+3,_Pmin+3
  5260  002BFC  0012               	return		;funcret
  5261  002BFE                     __end_of_matematica:
  5262                           	opt stack 0
  5263                           tblptru	equ	0xFF8
  5264                           tblptrh	equ	0xFF7
  5265                           tblptrl	equ	0xFF6
  5266                           tablat	equ	0xFF5
  5267                           postinc0	equ	0xFEE
  5268                           wreg	equ	0xFE8
  5269                           postdec1	equ	0xFE5
  5270                           fsr1l	equ	0xFE1
  5271                           indf2	equ	0xFDF
  5272                           postinc2	equ	0xFDE
  5273                           postdec2	equ	0xFDD
  5274                           fsr2h	equ	0xFDA
  5275                           fsr2l	equ	0xFD9
  5276                           status	equ	0xFD8
  5277                           
  5278 ;; *************** function _cos *****************
  5279 ;; Defined at:
  5280 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  f               4   45[BANK1 ] int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  4   45[BANK1 ] int 
  5287 ;; Registers used:
  5288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5294 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;Total ram usage:        8 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    7
  5301 ;; This function calls:
  5302 ;;		___fladd
  5303 ;;		___flge
  5304 ;;		_sin
  5305 ;; This function is called by:
  5306 ;;		_matematica
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text9
  5311  00602C                     __ptext9:
  5312                           	opt stack 0
  5313  00602C                     _cos:
  5314                           	opt stack 21
  5315                           
  5316                           ;incstack = 0
  5317  00602C  0EDB               	movlw	219
  5318  00602E  0100               	movlb	0	; () banked
  5319  006030  6FC5               	movwf	___flge@ff1& (0+255),b
  5320  006032  0E0F               	movlw	15
  5321  006034  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5322  006036  0E49               	movlw	73
  5323  006038  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5324  00603A  0E40               	movlw	64
  5325  00603C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5326  00603E  C1B8  F0C9         	movff	cos@f,___flge@ff2
  5327  006042  C1B9  F0CA         	movff	cos@f+1,___flge@ff2+1
  5328  006046  C1BA  F0CB         	movff	cos@f+2,___flge@ff2+2
  5329  00604A  C1BB  F0CC         	movff	cos@f+3,___flge@ff2+3
  5330  00604E  EC28  F02D         	call	___flge	;wreg free
  5331  006052  0100               	movlb	0	; () banked
  5332  006054  B0D8               	btfsc	status,0,c
  5333  006056  D02E               	goto	l7630
  5334                           
  5335                           ; BSR set to: 0
  5336  006058  C1B8  F0A9         	movff	cos@f,___fladd@b
  5337  00605C  C1B9  F0AA         	movff	cos@f+1,___fladd@b+1
  5338  006060  C1BA  F0AB         	movff	cos@f+2,___fladd@b+2
  5339  006064  C1BB  F0AC         	movff	cos@f+3,___fladd@b+3
  5340  006068  0EE4               	movlw	228
  5341  00606A  0100               	movlb	0	; () banked
  5342  00606C  6FAD               	movwf	___fladd@a& (0+255),b
  5343  00606E  0ECB               	movlw	203
  5344  006070  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5345  006072  0E96               	movlw	150
  5346  006074  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5347  006076  0EC0               	movlw	192
  5348  006078  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5349  00607A  EC85  F018         	call	___fladd	;wreg free
  5350  00607E  C0A9  F1BC         	movff	?___fladd,_cos$3754
  5351  006082  C0AA  F1BD         	movff	?___fladd+1,_cos$3754+1
  5352  006086  C0AB  F1BE         	movff	?___fladd+2,_cos$3754+2
  5353  00608A  C0AC  F1BF         	movff	?___fladd+3,_cos$3754+3
  5354  00608E  C1BC  F19F         	movff	_cos$3754,sin@f
  5355  006092  C1BD  F1A0         	movff	_cos$3754+1,sin@f+1
  5356  006096  C1BE  F1A1         	movff	_cos$3754+2,sin@f+2
  5357  00609A  C1BF  F1A2         	movff	_cos$3754+3,sin@f+3
  5358  00609E  EC08  F025         	call	_sin	;wreg free
  5359  0060A2  C19F  F1B8         	movff	?_sin,?_cos
  5360  0060A6  C1A0  F1B9         	movff	?_sin+1,?_cos+1
  5361  0060AA  C1A1  F1BA         	movff	?_sin+2,?_cos+2
  5362  0060AE  C1A2  F1BB         	movff	?_sin+3,?_cos+3
  5363  0060B2  0012               	return	
  5364  0060B4                     l7630:
  5365  0060B4  C1B8  F0A9         	movff	cos@f,___fladd@b
  5366  0060B8  C1B9  F0AA         	movff	cos@f+1,___fladd@b+1
  5367  0060BC  C1BA  F0AB         	movff	cos@f+2,___fladd@b+2
  5368  0060C0  C1BB  F0AC         	movff	cos@f+3,___fladd@b+3
  5369  0060C4  0EDB               	movlw	219
  5370  0060C6  0100               	movlb	0	; () banked
  5371  0060C8  6FAD               	movwf	___fladd@a& (0+255),b
  5372  0060CA  0E0F               	movlw	15
  5373  0060CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5374  0060CE  0EC9               	movlw	201
  5375  0060D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5376  0060D2  0E3F               	movlw	63
  5377  0060D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5378  0060D6  EC85  F018         	call	___fladd	;wreg free
  5379  0060DA  C0A9  F1BC         	movff	?___fladd,_cos$3754
  5380  0060DE  C0AA  F1BD         	movff	?___fladd+1,_cos$3754+1
  5381  0060E2  C0AB  F1BE         	movff	?___fladd+2,_cos$3754+2
  5382  0060E6  C0AC  F1BF         	movff	?___fladd+3,_cos$3754+3
  5383  0060EA  C1BC  F19F         	movff	_cos$3754,sin@f
  5384  0060EE  C1BD  F1A0         	movff	_cos$3754+1,sin@f+1
  5385  0060F2  C1BE  F1A1         	movff	_cos$3754+2,sin@f+2
  5386  0060F6  C1BF  F1A2         	movff	_cos$3754+3,sin@f+3
  5387  0060FA  EC08  F025         	call	_sin	;wreg free
  5388  0060FE  C19F  F1B8         	movff	?_sin,?_cos
  5389  006102  C1A0  F1B9         	movff	?_sin+1,?_cos+1
  5390  006106  C1A1  F1BA         	movff	?_sin+2,?_cos+2
  5391  00610A  C1A2  F1BB         	movff	?_sin+3,?_cos+3
  5392  00610E  0012               	return	
  5393  006110                     __end_of_cos:
  5394                           	opt stack 0
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           postinc0	equ	0xFEE
  5400                           wreg	equ	0xFE8
  5401                           postdec1	equ	0xFE5
  5402                           fsr1l	equ	0xFE1
  5403                           indf2	equ	0xFDF
  5404                           postinc2	equ	0xFDE
  5405                           postdec2	equ	0xFDD
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function _sin *****************
  5411 ;; Defined at:
  5412 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  f               4   20[BANK1 ] int 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  x2              4   32[BANK1 ] int 
  5417 ;;  y               4   24[BANK1 ] int 
  5418 ;;  sgn             1   36[BANK1 ] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  4   20[BANK1 ] unsigned char 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5428 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;Total ram usage:       17 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    6
  5435 ;; This function calls:
  5436 ;;		___fladd
  5437 ;;		___fldiv
  5438 ;;		___flge
  5439 ;;		___flmul
  5440 ;;		___flneg
  5441 ;;		___flsub
  5442 ;;		_eval_poly
  5443 ;;		_floor
  5444 ;; This function is called by:
  5445 ;;		_cos
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text10
  5450  004A10                     __ptext10:
  5451                           	opt stack 0
  5452  004A10                     _sin:
  5453                           	opt stack 21
  5454                           
  5455                           ;incstack = 0
  5456  004A10  0E00               	movlw	0
  5457  004A12  0101               	movlb	1	; () banked
  5458  004A14  6FAF               	movwf	sin@sgn& (0+255),b
  5459                           
  5460                           ; BSR set to: 1
  5461  004A16  0101               	movlb	1	; () banked
  5462  004A18  AFA2               	btfss	(sin@f+3)& (0+255),7,b
  5463  004A1A  D015               	goto	l7512
  5464                           
  5465                           ; BSR set to: 1
  5466  004A1C  C19F  F0BD         	movff	sin@f,___flneg@f1
  5467  004A20  C1A0  F0BE         	movff	sin@f+1,___flneg@f1+1
  5468  004A24  C1A1  F0BF         	movff	sin@f+2,___flneg@f1+2
  5469  004A28  C1A2  F0C0         	movff	sin@f+3,___flneg@f1+3
  5470  004A2C  ECDE  F032         	call	___flneg	;wreg free
  5471  004A30  C0BD  F19F         	movff	?___flneg,sin@f
  5472  004A34  C0BE  F1A0         	movff	?___flneg+1,sin@f+1
  5473  004A38  C0BF  F1A1         	movff	?___flneg+2,sin@f+2
  5474  004A3C  C0C0  F1A2         	movff	?___flneg+3,sin@f+3
  5475  004A40  0E01               	movlw	1
  5476  004A42  0101               	movlb	1	; () banked
  5477  004A44  6FAF               	movwf	sin@sgn& (0+255),b
  5478  004A46                     l7512:
  5479                           
  5480                           ; BSR set to: 1
  5481  004A46  C19F  F090         	movff	sin@f,___flmul@b
  5482  004A4A  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5483  004A4E  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5484  004A52  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5485  004A56  0E83               	movlw	131
  5486  004A58  0100               	movlb	0	; () banked
  5487  004A5A  6F94               	movwf	___flmul@a& (0+255),b
  5488  004A5C  0EF9               	movlw	249
  5489  004A5E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5490  004A60  0E22               	movlw	34
  5491  004A62  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5492  004A64  0E3E               	movlw	62
  5493  004A66  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5494  004A68  ECD9  F01A         	call	___flmul	;wreg free
  5495  004A6C  C090  F19F         	movff	?___flmul,sin@f
  5496  004A70  C091  F1A0         	movff	?___flmul+1,sin@f+1
  5497  004A74  C092  F1A1         	movff	?___flmul+2,sin@f+2
  5498  004A78  C093  F1A2         	movff	?___flmul+3,sin@f+3
  5499  004A7C  C19F  F197         	movff	sin@f,___flsub@b
  5500  004A80  C1A0  F198         	movff	sin@f+1,___flsub@b+1
  5501  004A84  C1A1  F199         	movff	sin@f+2,___flsub@b+2
  5502  004A88  C1A2  F19A         	movff	sin@f+3,___flsub@b+3
  5503  004A8C  C19F  F0D3         	movff	sin@f,floor@x
  5504  004A90  C1A0  F0D4         	movff	sin@f+1,floor@x+1
  5505  004A94  C1A1  F0D5         	movff	sin@f+2,floor@x+2
  5506  004A98  C1A2  F0D6         	movff	sin@f+3,floor@x+3
  5507  004A9C  ECF0  F02D         	call	_floor	;wreg free
  5508  004AA0  C0D3  F19B         	movff	?_floor,___flsub@a
  5509  004AA4  C0D4  F19C         	movff	?_floor+1,___flsub@a+1
  5510  004AA8  C0D5  F19D         	movff	?_floor+2,___flsub@a+2
  5511  004AAC  C0D6  F19E         	movff	?_floor+3,___flsub@a+3
  5512  004AB0  EC7E  F032         	call	___flsub	;wreg free
  5513  004AB4  C197  F19F         	movff	?___flsub,sin@f
  5514  004AB8  C198  F1A0         	movff	?___flsub+1,sin@f+1
  5515  004ABC  C199  F1A1         	movff	?___flsub+2,sin@f+2
  5516  004AC0  C19A  F1A2         	movff	?___flsub+3,sin@f+3
  5517  004AC4  C19F  F090         	movff	sin@f,___flmul@b
  5518  004AC8  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5519  004ACC  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5520  004AD0  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5521  004AD4  0E00               	movlw	0
  5522  004AD6  0100               	movlb	0	; () banked
  5523  004AD8  6F94               	movwf	___flmul@a& (0+255),b
  5524  004ADA  0E00               	movlw	0
  5525  004ADC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5526  004ADE  0E80               	movlw	128
  5527  004AE0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5528  004AE2  0E40               	movlw	64
  5529  004AE4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5530  004AE6  ECD9  F01A         	call	___flmul	;wreg free
  5531  004AEA  C090  F19F         	movff	?___flmul,sin@f
  5532  004AEE  C091  F1A0         	movff	?___flmul+1,sin@f+1
  5533  004AF2  C092  F1A1         	movff	?___flmul+2,sin@f+2
  5534  004AF6  C093  F1A2         	movff	?___flmul+3,sin@f+3
  5535  004AFA  0E00               	movlw	0
  5536  004AFC  0100               	movlb	0	; () banked
  5537  004AFE  6FC5               	movwf	___flge@ff1& (0+255),b
  5538  004B00  0E00               	movlw	0
  5539  004B02  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5540  004B04  0E00               	movlw	0
  5541  004B06  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5542  004B08  0E40               	movlw	64
  5543  004B0A  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5544  004B0C  C19F  F0C9         	movff	sin@f,___flge@ff2
  5545  004B10  C1A0  F0CA         	movff	sin@f+1,___flge@ff2+1
  5546  004B14  C1A1  F0CB         	movff	sin@f+2,___flge@ff2+2
  5547  004B18  C1A2  F0CC         	movff	sin@f+3,___flge@ff2+3
  5548  004B1C  EC28  F02D         	call	___flge	;wreg free
  5549  004B20  0100               	movlb	0	; () banked
  5550  004B22  B0D8               	btfsc	status,0,c
  5551  004B24  D025               	goto	l7524
  5552                           
  5553                           ; BSR set to: 0
  5554  004B26  C19F  F197         	movff	sin@f,___flsub@b
  5555  004B2A  C1A0  F198         	movff	sin@f+1,___flsub@b+1
  5556  004B2E  C1A1  F199         	movff	sin@f+2,___flsub@b+2
  5557  004B32  C1A2  F19A         	movff	sin@f+3,___flsub@b+3
  5558  004B36  0E00               	movlw	0
  5559  004B38  0101               	movlb	1	; () banked
  5560  004B3A  6F9B               	movwf	___flsub@a& (0+255),b
  5561  004B3C  0E00               	movlw	0
  5562  004B3E  6F9C               	movwf	(___flsub@a+1)& (0+255),b
  5563  004B40  0E00               	movlw	0
  5564  004B42  6F9D               	movwf	(___flsub@a+2)& (0+255),b
  5565  004B44  0E40               	movlw	64
  5566  004B46  6F9E               	movwf	(___flsub@a+3)& (0+255),b
  5567  004B48  EC7E  F032         	call	___flsub	;wreg free
  5568  004B4C  C197  F19F         	movff	?___flsub,sin@f
  5569  004B50  C198  F1A0         	movff	?___flsub+1,sin@f+1
  5570  004B54  C199  F1A1         	movff	?___flsub+2,sin@f+2
  5571  004B58  C19A  F1A2         	movff	?___flsub+3,sin@f+3
  5572  004B5C  0101               	movlb	1	; () banked
  5573  004B5E  51AF               	movf	sin@sgn& (0+255),w,b
  5574  004B60  0101               	movlb	1	; () banked
  5575  004B62  A4D8               	btfss	status,2,c
  5576  004B64  D002               	goto	u9930
  5577  004B66  0E01               	movlw	1
  5578  004B68  D001               	goto	u9940
  5579  004B6A                     u9930:
  5580  004B6A  0E00               	movlw	0
  5581  004B6C                     u9940:
  5582  004B6C  0101               	movlb	1	; () banked
  5583  004B6E  6FAF               	movwf	sin@sgn& (0+255),b
  5584  004B70                     l7524:
  5585  004B70  0E00               	movlw	0
  5586  004B72  0100               	movlb	0	; () banked
  5587  004B74  6FC5               	movwf	___flge@ff1& (0+255),b
  5588  004B76  0E00               	movlw	0
  5589  004B78  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5590  004B7A  0E80               	movlw	128
  5591  004B7C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5592  004B7E  0E3F               	movlw	63
  5593  004B80  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5594  004B82  C19F  F0C9         	movff	sin@f,___flge@ff2
  5595  004B86  C1A0  F0CA         	movff	sin@f+1,___flge@ff2+1
  5596  004B8A  C1A1  F0CB         	movff	sin@f+2,___flge@ff2+2
  5597  004B8E  C1A2  F0CC         	movff	sin@f+3,___flge@ff2+3
  5598  004B92  EC28  F02D         	call	___flge	;wreg free
  5599  004B96  0100               	movlb	0	; () banked
  5600  004B98  B0D8               	btfsc	status,0,c
  5601  004B9A  D025               	goto	l7528
  5602                           
  5603                           ; BSR set to: 0
  5604  004B9C  C19F  F0BD         	movff	sin@f,___flneg@f1
  5605  004BA0  C1A0  F0BE         	movff	sin@f+1,___flneg@f1+1
  5606  004BA4  C1A1  F0BF         	movff	sin@f+2,___flneg@f1+2
  5607  004BA8  C1A2  F0C0         	movff	sin@f+3,___flneg@f1+3
  5608  004BAC  ECDE  F032         	call	___flneg	;wreg free
  5609  004BB0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5610  004BB4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5611  004BB8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5612  004BBC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5613  004BC0  0E00               	movlw	0
  5614  004BC2  0100               	movlb	0	; () banked
  5615  004BC4  6FAD               	movwf	___fladd@a& (0+255),b
  5616  004BC6  0E00               	movlw	0
  5617  004BC8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5618  004BCA  0E00               	movlw	0
  5619  004BCC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5620  004BCE  0E40               	movlw	64
  5621  004BD0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5622  004BD2  EC85  F018         	call	___fladd	;wreg free
  5623  004BD6  C0A9  F19F         	movff	?___fladd,sin@f
  5624  004BDA  C0AA  F1A0         	movff	?___fladd+1,sin@f+1
  5625  004BDE  C0AB  F1A1         	movff	?___fladd+2,sin@f+2
  5626  004BE2  C0AC  F1A2         	movff	?___fladd+3,sin@f+3
  5627  004BE6                     l7528:
  5628  004BE6  C19F  F090         	movff	sin@f,___flmul@b
  5629  004BEA  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5630  004BEE  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5631  004BF2  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5632  004BF6  C19F  F094         	movff	sin@f,___flmul@a
  5633  004BFA  C1A0  F095         	movff	sin@f+1,___flmul@a+1
  5634  004BFE  C1A1  F096         	movff	sin@f+2,___flmul@a+2
  5635  004C02  C1A2  F097         	movff	sin@f+3,___flmul@a+3
  5636  004C06  ECD9  F01A         	call	___flmul	;wreg free
  5637  004C0A  C090  F1AB         	movff	?___flmul,sin@x2
  5638  004C0E  C091  F1AC         	movff	?___flmul+1,sin@x2+1
  5639  004C12  C092  F1AD         	movff	?___flmul+2,sin@x2+2
  5640  004C16  C093  F1AE         	movff	?___flmul+3,sin@x2+3
  5641  004C1A  C1AB  F0BD         	movff	sin@x2,eval_poly@x
  5642  004C1E  C1AC  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5643  004C22  C1AD  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5644  004C26  C1AE  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5645  004C2A  0E41               	movlw	low sin@coeff_b
  5646  004C2C  0100               	movlb	0	; () banked
  5647  004C2E  6FC1               	movwf	eval_poly@d& (0+255),b
  5648  004C30  0E0D               	movlw	high sin@coeff_b
  5649  004C32  0100               	movlb	0	; () banked
  5650  004C34  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5651  004C36  0E00               	movlw	0
  5652  004C38  0100               	movlb	0	; () banked
  5653  004C3A  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5654  004C3C  0E03               	movlw	3
  5655  004C3E  6FC3               	movwf	eval_poly@n& (0+255),b
  5656  004C40  EC82  F02E         	call	_eval_poly	;wreg free
  5657  004C44  C0BD  F1A3         	movff	?_eval_poly,sin@y
  5658  004C48  C0BE  F1A4         	movff	?_eval_poly+1,sin@y+1
  5659  004C4C  C0BF  F1A5         	movff	?_eval_poly+2,sin@y+2
  5660  004C50  C0C0  F1A6         	movff	?_eval_poly+3,sin@y+3
  5661  004C54  C1A3  F07B         	movff	sin@y,___fldiv@a
  5662  004C58  C1A4  F07C         	movff	sin@y+1,___fldiv@a+1
  5663  004C5C  C1A5  F07D         	movff	sin@y+2,___fldiv@a+2
  5664  004C60  C1A6  F07E         	movff	sin@y+3,___fldiv@a+3
  5665  004C64  0E00               	movlw	0
  5666  004C66  0100               	movlb	0	; () banked
  5667  004C68  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5668  004C6A  0E04               	movlw	4
  5669  004C6C  6FC3               	movwf	eval_poly@n& (0+255),b
  5670  004C6E  0E2D               	movlw	low sin@coeff_a
  5671  004C70  0100               	movlb	0	; () banked
  5672  004C72  6FC1               	movwf	eval_poly@d& (0+255),b
  5673  004C74  0E0D               	movlw	high sin@coeff_a
  5674  004C76  0100               	movlb	0	; () banked
  5675  004C78  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5676  004C7A  C1AB  F0BD         	movff	sin@x2,eval_poly@x
  5677  004C7E  C1AC  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5678  004C82  C1AD  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5679  004C86  C1AE  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5680  004C8A  EC82  F02E         	call	_eval_poly	;wreg free
  5681  004C8E  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5682  004C92  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5683  004C96  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5684  004C9A  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5685  004C9E  EC59  F021         	call	___fldiv	;wreg free
  5686  004CA2  C077  F1A7         	movff	?___fldiv,_sin$3755
  5687  004CA6  C078  F1A8         	movff	?___fldiv+1,_sin$3755+1
  5688  004CAA  C079  F1A9         	movff	?___fldiv+2,_sin$3755+2
  5689  004CAE  C07A  F1AA         	movff	?___fldiv+3,_sin$3755+3
  5690  004CB2  C19F  F090         	movff	sin@f,___flmul@b
  5691  004CB6  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5692  004CBA  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5693  004CBE  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5694  004CC2  C1A7  F094         	movff	_sin$3755,___flmul@a
  5695  004CC6  C1A8  F095         	movff	_sin$3755+1,___flmul@a+1
  5696  004CCA  C1A9  F096         	movff	_sin$3755+2,___flmul@a+2
  5697  004CCE  C1AA  F097         	movff	_sin$3755+3,___flmul@a+3
  5698  004CD2  ECD9  F01A         	call	___flmul	;wreg free
  5699  004CD6  C090  F19F         	movff	?___flmul,sin@f
  5700  004CDA  C091  F1A0         	movff	?___flmul+1,sin@f+1
  5701  004CDE  C092  F1A1         	movff	?___flmul+2,sin@f+2
  5702  004CE2  C093  F1A2         	movff	?___flmul+3,sin@f+3
  5703  004CE6  0101               	movlb	1	; () banked
  5704  004CE8  51AF               	movf	sin@sgn& (0+255),w,b
  5705  004CEA  0101               	movlb	1	; () banked
  5706  004CEC  B4D8               	btfsc	status,2,c
  5707  004CEE  D013               	goto	l1333
  5708                           
  5709                           ; BSR set to: 1
  5710  004CF0  C19F  F0BD         	movff	sin@f,___flneg@f1
  5711  004CF4  C1A0  F0BE         	movff	sin@f+1,___flneg@f1+1
  5712  004CF8  C1A1  F0BF         	movff	sin@f+2,___flneg@f1+2
  5713  004CFC  C1A2  F0C0         	movff	sin@f+3,___flneg@f1+3
  5714  004D00  ECDE  F032         	call	___flneg	;wreg free
  5715  004D04  C0BD  F19F         	movff	?___flneg,?_sin
  5716  004D08  C0BE  F1A0         	movff	?___flneg+1,?_sin+1
  5717  004D0C  C0BF  F1A1         	movff	?___flneg+2,?_sin+2
  5718  004D10  C0C0  F1A2         	movff	?___flneg+3,?_sin+3
  5719  004D14  0012               	return	
  5720  004D16                     l1333:
  5721                           
  5722                           ; BSR set to: 1
  5723  004D16  C19F  F19F         	movff	sin@f,?_sin
  5724  004D1A  C1A0  F1A0         	movff	sin@f+1,?_sin+1
  5725  004D1E  C1A1  F1A1         	movff	sin@f+2,?_sin+2
  5726  004D22  C1A2  F1A2         	movff	sin@f+3,?_sin+3
  5727  004D26  0012               	return		;funcret
  5728  004D28                     __end_of_sin:
  5729                           	opt stack 0
  5730                           tblptru	equ	0xFF8
  5731                           tblptrh	equ	0xFF7
  5732                           tblptrl	equ	0xFF6
  5733                           tablat	equ	0xFF5
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           postdec1	equ	0xFE5
  5737                           fsr1l	equ	0xFE1
  5738                           indf2	equ	0xFDF
  5739                           postinc2	equ	0xFDE
  5740                           postdec2	equ	0xFDD
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function _floor *****************
  5746 ;; Defined at:
  5747 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  x               4  115[BANK0 ] unsigned char 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  i               4    6[BANK1 ] unsigned char 
  5752 ;;  expon           2   10[BANK1 ] int 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  4  115[BANK0 ] int 
  5755 ;; Registers used:
  5756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;Total ram usage:       10 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    5
  5769 ;; This function calls:
  5770 ;;		___fladd
  5771 ;;		___flge
  5772 ;;		___fltol
  5773 ;;		___xxtofl
  5774 ;;		_frexp
  5775 ;; This function is called by:
  5776 ;;		_sin
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text11
  5781  005BE0                     __ptext11:
  5782                           	opt stack 0
  5783  005BE0                     _floor:
  5784                           	opt stack 21
  5785                           
  5786                           ;incstack = 0
  5787  005BE0  C0D3  F077         	movff	floor@x,frexp@value
  5788  005BE4  C0D4  F078         	movff	floor@x+1,frexp@value+1
  5789  005BE8  C0D5  F079         	movff	floor@x+2,frexp@value+2
  5790  005BEC  C0D6  F07A         	movff	floor@x+3,frexp@value+3
  5791  005BF0  0E95               	movlw	low floor@expon
  5792  005BF2  0100               	movlb	0	; () banked
  5793  005BF4  6F7B               	movwf	frexp@eptr& (0+255),b
  5794  005BF6  0E01               	movlw	high floor@expon
  5795  005BF8  0100               	movlb	0	; () banked
  5796  005BFA  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5797  005BFC  EC5B  F031         	call	_frexp	;wreg free
  5798  005C00  0101               	movlb	1	; () banked
  5799  005C02  AF96               	btfss	(floor@expon+1)& (0+255),7,b
  5800  005C04  D017               	goto	l7348
  5801                           
  5802                           ; BSR set to: 1
  5803  005C06  0100               	movlb	0	; () banked
  5804  005C08  AFD6               	btfss	(floor@x+3)& (0+255),7,b
  5805  005C0A  D00A               	goto	l7344
  5806                           
  5807                           ; BSR set to: 0
  5808  005C0C  0E00               	movlw	0
  5809  005C0E  0100               	movlb	0	; () banked
  5810  005C10  6FD3               	movwf	?_floor& (0+255),b
  5811  005C12  0E00               	movlw	0
  5812  005C14  6FD4               	movwf	(?_floor+1)& (0+255),b
  5813  005C16  0E80               	movlw	128
  5814  005C18  6FD5               	movwf	(?_floor+2)& (0+255),b
  5815  005C1A  0EBF               	movlw	191
  5816  005C1C  6FD6               	movwf	(?_floor+3)& (0+255),b
  5817                           
  5818                           ; BSR set to: 0
  5819  005C1E  0012               	return	
  5820  005C20                     l7344:
  5821                           
  5822                           ; BSR set to: 0
  5823  005C20  0E00               	movlw	0
  5824  005C22  0100               	movlb	0	; () banked
  5825  005C24  6FD3               	movwf	?_floor& (0+255),b
  5826  005C26  0E00               	movlw	0
  5827  005C28  6FD4               	movwf	(?_floor+1)& (0+255),b
  5828  005C2A  0E00               	movlw	0
  5829  005C2C  6FD5               	movwf	(?_floor+2)& (0+255),b
  5830  005C2E  0E00               	movlw	0
  5831  005C30  6FD6               	movwf	(?_floor+3)& (0+255),b
  5832                           
  5833                           ; BSR set to: 0
  5834  005C32  0012               	return	
  5835  005C34                     l7348:
  5836  005C34  0101               	movlb	1	; () banked
  5837  005C36  5196               	movf	(floor@expon+1)& (0+255),w,b
  5838  005C38  E105               	bnz	u9690
  5839  005C3A  0E1D               	movlw	29
  5840  005C3C  0101               	movlb	1	; () banked
  5841  005C3E  5D95               	subwf	floor@expon& (0+255),w,b
  5842  005C40  A0D8               	btfss	status,0,c
  5843  005C42  D009               	goto	l7352
  5844  005C44                     u9690:
  5845                           
  5846                           ; BSR set to: 1
  5847  005C44  C0D3  F0D3         	movff	floor@x,?_floor
  5848  005C48  C0D4  F0D4         	movff	floor@x+1,?_floor+1
  5849  005C4C  C0D5  F0D5         	movff	floor@x+2,?_floor+2
  5850  005C50  C0D6  F0D6         	movff	floor@x+3,?_floor+3
  5851  005C54  0012               	return	
  5852  005C56                     l7352:
  5853                           
  5854                           ; BSR set to: 1
  5855  005C56  C0D3  F0C1         	movff	floor@x,___fltol@f1
  5856  005C5A  C0D4  F0C2         	movff	floor@x+1,___fltol@f1+1
  5857  005C5E  C0D5  F0C3         	movff	floor@x+2,___fltol@f1+2
  5858  005C62  C0D6  F0C4         	movff	floor@x+3,___fltol@f1+3
  5859  005C66  EC0E  F02F         	call	___fltol	;wreg free
  5860  005C6A  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5861  005C6E  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5862  005C72  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5863  005C76  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5864  005C7A  0E01               	movlw	1
  5865  005C7C  EC7B  F02A         	call	___xxtofl
  5866  005C80  C0CB  F191         	movff	?___xxtofl,floor@i
  5867  005C84  C0CC  F192         	movff	?___xxtofl+1,floor@i+1
  5868  005C88  C0CD  F193         	movff	?___xxtofl+2,floor@i+2
  5869  005C8C  C0CE  F194         	movff	?___xxtofl+3,floor@i+3
  5870  005C90  C0D3  F0C5         	movff	floor@x,___flge@ff1
  5871  005C94  C0D4  F0C6         	movff	floor@x+1,___flge@ff1+1
  5872  005C98  C0D5  F0C7         	movff	floor@x+2,___flge@ff1+2
  5873  005C9C  C0D6  F0C8         	movff	floor@x+3,___flge@ff1+3
  5874  005CA0  C191  F0C9         	movff	floor@i,___flge@ff2
  5875  005CA4  C192  F0CA         	movff	floor@i+1,___flge@ff2+1
  5876  005CA8  C193  F0CB         	movff	floor@i+2,___flge@ff2+2
  5877  005CAC  C194  F0CC         	movff	floor@i+3,___flge@ff2+3
  5878  005CB0  EC28  F02D         	call	___flge	;wreg free
  5879  005CB4  0100               	movlb	0	; () banked
  5880  005CB6  B0D8               	btfsc	status,0,c
  5881  005CB8  D01C               	goto	l1502
  5882                           
  5883                           ; BSR set to: 0
  5884  005CBA  C191  F0A9         	movff	floor@i,___fladd@b
  5885  005CBE  C192  F0AA         	movff	floor@i+1,___fladd@b+1
  5886  005CC2  C193  F0AB         	movff	floor@i+2,___fladd@b+2
  5887  005CC6  C194  F0AC         	movff	floor@i+3,___fladd@b+3
  5888  005CCA  0E00               	movlw	0
  5889  005CCC  0100               	movlb	0	; () banked
  5890  005CCE  6FAD               	movwf	___fladd@a& (0+255),b
  5891  005CD0  0E00               	movlw	0
  5892  005CD2  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5893  005CD4  0E80               	movlw	128
  5894  005CD6  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5895  005CD8  0EBF               	movlw	191
  5896  005CDA  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5897  005CDC  EC85  F018         	call	___fladd	;wreg free
  5898  005CE0  C0A9  F0D3         	movff	?___fladd,?_floor
  5899  005CE4  C0AA  F0D4         	movff	?___fladd+1,?_floor+1
  5900  005CE8  C0AB  F0D5         	movff	?___fladd+2,?_floor+2
  5901  005CEC  C0AC  F0D6         	movff	?___fladd+3,?_floor+3
  5902  005CF0  0012               	return	
  5903  005CF2                     l1502:
  5904                           
  5905                           ; BSR set to: 0
  5906  005CF2  C191  F0D3         	movff	floor@i,?_floor
  5907  005CF6  C192  F0D4         	movff	floor@i+1,?_floor+1
  5908  005CFA  C193  F0D5         	movff	floor@i+2,?_floor+2
  5909  005CFE  C194  F0D6         	movff	floor@i+3,?_floor+3
  5910  005D02  0012               	return		;funcret
  5911  005D04                     __end_of_floor:
  5912                           	opt stack 0
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           postinc0	equ	0xFEE
  5918                           wreg	equ	0xFE8
  5919                           postdec1	equ	0xFE5
  5920                           fsr1l	equ	0xFE1
  5921                           indf2	equ	0xFDF
  5922                           postinc2	equ	0xFDE
  5923                           postdec2	equ	0xFDD
  5924                           fsr2h	equ	0xFDA
  5925                           fsr2l	equ	0xFD9
  5926                           status	equ	0xFD8
  5927                           
  5928 ;; *************** function _frexp *****************
  5929 ;; Defined at:
  5930 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  value           4   23[BANK0 ] int 
  5933 ;;  eptr            2   27[BANK0 ] PTR int 
  5934 ;;		 -> floor@expon(2), 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  4   23[BANK0 ] PTR int 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5946 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;Total ram usage:        8 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    4
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_floor
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text12
  5961  0062B6                     __ptext12:
  5962                           	opt stack 0
  5963  0062B6                     _frexp:
  5964                           	opt stack 21
  5965                           
  5966                           ;incstack = 0
  5967  0062B6  0100               	movlb	0	; () banked
  5968  0062B8  5177               	movf	frexp@value& (0+255),w,b
  5969  0062BA  0100               	movlb	0	; () banked
  5970  0062BC  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5971  0062BE  0100               	movlb	0	; () banked
  5972  0062C0  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5973  0062C2  0100               	movlb	0	; () banked
  5974  0062C4  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5975  0062C6  A4D8               	btfss	status,2,c
  5976  0062C8  D009               	goto	l7170
  5977                           
  5978                           ; BSR set to: 0
  5979  0062CA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5980  0062CE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5981  0062D2  0E00               	movlw	0
  5982  0062D4  6EDE               	movwf	postinc2,c
  5983  0062D6  0E00               	movlw	0
  5984  0062D8  6EDD               	movwf	postdec2,c
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;	Return value of _frexp is never used
  5988  0062DA  0012               	return	
  5989  0062DC                     l7170:
  5990                           
  5991                           ; BSR set to: 0
  5992  0062DC  0100               	movlb	0	; () banked
  5993  0062DE  517A               	movf	(frexp@value+3)& (0+255),w,b
  5994  0062E0  0B7F               	andlw	127
  5995  0062E2  0100               	movlb	0	; () banked
  5996  0062E4  6F7D               	movwf	??_frexp& (0+255),b
  5997  0062E6  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5998  0062E8  90D8               	bcf	status,0,c
  5999  0062EA  0100               	movlb	0	; () banked
  6000  0062EC  377D               	rlcf	??_frexp& (0+255),f,b
  6001  0062EE  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  6002  0062F0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6003  0062F4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6004  0062F8  C07D  FFDE         	movff	??_frexp,postinc2
  6005  0062FC  C07E  FFDD         	movff	??_frexp+1,postdec2
  6006  006300  0100               	movlb	0	; () banked
  6007  006302  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  6008  006304  D004               	goto	u9410
  6009  006306  0100               	movlb	0	; () banked
  6010  006308  6B7D               	clrf	??_frexp& (0+255),b
  6011  00630A  2B7D               	incf	??_frexp& (0+255),f,b
  6012  00630C  D002               	goto	u9418
  6013  00630E                     u9410:
  6014  00630E  0100               	movlb	0	; () banked
  6015  006310  6B7D               	clrf	??_frexp& (0+255),b
  6016  006312                     u9418:
  6017  006312  0100               	movlb	0	; () banked
  6018  006314  517D               	movf	??_frexp& (0+255),w,b
  6019  006316  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6020  00631A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6021  00631E  12DE               	iorwf	postinc2,f,c
  6022  006320  0E00               	movlw	0
  6023  006322  12DD               	iorwf	postdec2,f,c
  6024                           
  6025                           ; BSR set to: 0
  6026  006324  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6027  006328  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6028  00632C  0E82               	movlw	130
  6029  00632E  26DE               	addwf	postinc2,f,c
  6030  006330  0EFF               	movlw	255
  6031  006332  22DD               	addwfc	postdec2,f,c
  6032                           
  6033                           ; BSR set to: 0
  6034  006334  0100               	movlb	0	; () banked
  6035  006336  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6036  006338  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6037  00633A  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6038  00633C  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6039  00633E  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6040  006340  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6041  006342  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6042                           
  6043                           ; BSR set to: 0
  6044  006344  0100               	movlb	0	; () banked
  6045  006346  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6046  006348  0012               	return	
  6047  00634A                     __end_of_frexp:
  6048                           	opt stack 0
  6049                           tblptru	equ	0xFF8
  6050                           tblptrh	equ	0xFF7
  6051                           tblptrl	equ	0xFF6
  6052                           tablat	equ	0xFF5
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           postdec1	equ	0xFE5
  6056                           fsr1l	equ	0xFE1
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function ___xxtofl *****************
  6065 ;; Defined at:
  6066 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  sign            1    wreg     unsigned char 
  6069 ;;  val             4  107[BANK0 ] long 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  sign            1    0[BANK1 ] unsigned char 
  6072 ;;  arg             4    2[BANK1 ] unsigned long 
  6073 ;;  exp             1    1[BANK1 ] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  4  107[BANK0 ] unsigned char 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;Total ram usage:       14 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    4
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_park_search
  6094 ;;		_park_routine
  6095 ;;		_parallelo
  6096 ;;		_floor
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text13
  6101  0054F6                     __ptext13:
  6102                           	opt stack 0
  6103  0054F6                     ___xxtofl:
  6104                           	opt stack 24
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;incstack = 0
  6108                           ;___xxtofl@sign stored from wreg
  6109  0054F6  0101               	movlb	1	; () banked
  6110  0054F8  6F8B               	movwf	___xxtofl@sign& (0+255),b
  6111  0054FA  0101               	movlb	1	; () banked
  6112  0054FC  518B               	movf	___xxtofl@sign& (0+255),w,b
  6113  0054FE  0101               	movlb	1	; () banked
  6114  005500  B4D8               	btfsc	status,2,c
  6115  005502  D01E               	goto	l1477
  6116                           
  6117                           ; BSR set to: 1
  6118  005504  0100               	movlb	0	; () banked
  6119  005506  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6120  005508  D01B               	goto	l1477
  6121                           
  6122                           ; BSR set to: 0
  6123  00550A  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6124  00550E  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6125  005512  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6126  005516  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6127  00551A  0100               	movlb	0	; () banked
  6128  00551C  1FCF               	comf	??___xxtofl& (0+255),f,b
  6129  00551E  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6130  005520  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6131  005522  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6132  005524  2BCF               	incf	??___xxtofl& (0+255),f,b
  6133  005526  0E00               	movlw	0
  6134  005528  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6135  00552A  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6136  00552C  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6137  00552E  C0CF  F18D         	movff	??___xxtofl,___xxtofl@arg
  6138  005532  C0D0  F18E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6139  005536  C0D1  F18F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6140  00553A  C0D2  F190         	movff	??___xxtofl+3,___xxtofl@arg+3
  6141  00553E  D008               	goto	l7128
  6142  005540                     l1477:
  6143  005540  C0CB  F18D         	movff	___xxtofl@val,___xxtofl@arg
  6144  005544  C0CC  F18E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6145  005548  C0CD  F18F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6146  00554C  C0CE  F190         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6147  005550                     l7128:
  6148  005550  0100               	movlb	0	; () banked
  6149  005552  51CB               	movf	___xxtofl@val& (0+255),w,b
  6150  005554  0100               	movlb	0	; () banked
  6151  005556  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6152  005558  0100               	movlb	0	; () banked
  6153  00555A  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6154  00555C  0100               	movlb	0	; () banked
  6155  00555E  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6156  005560  A4D8               	btfss	status,2,c
  6157  005562  D00A               	goto	l7134
  6158                           
  6159                           ; BSR set to: 0
  6160  005564  0E00               	movlw	0
  6161  005566  0100               	movlb	0	; () banked
  6162  005568  6FCB               	movwf	?___xxtofl& (0+255),b
  6163  00556A  0E00               	movlw	0
  6164  00556C  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6165  00556E  0E00               	movlw	0
  6166  005570  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6167  005572  0E00               	movlw	0
  6168  005574  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6169                           
  6170                           ; BSR set to: 0
  6171  005576  0012               	return	
  6172  005578                     l7134:
  6173                           
  6174                           ; BSR set to: 0
  6175  005578  0E96               	movlw	150
  6176  00557A  0101               	movlb	1	; () banked
  6177  00557C  6F8C               	movwf	___xxtofl@exp& (0+255),b
  6178  00557E  D008               	goto	l7138
  6179  005580                     l7136:
  6180  005580  0101               	movlb	1	; () banked
  6181  005582  2B8C               	incf	___xxtofl@exp& (0+255),f,b
  6182  005584  0101               	movlb	1	; () banked
  6183  005586  90D8               	bcf	status,0,c
  6184  005588  3390               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6185  00558A  338F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6186  00558C  338E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6187  00558E  338D               	rrcf	___xxtofl@arg& (0+255),f,b
  6188  005590                     l7138:
  6189                           
  6190                           ; BSR set to: 1
  6191  005590  0E00               	movlw	0
  6192  005592  0101               	movlb	1	; () banked
  6193  005594  158D               	andwf	___xxtofl@arg& (0+255),w,b
  6194  005596  0100               	movlb	0	; () banked
  6195  005598  6FCF               	movwf	??___xxtofl& (0+255),b
  6196  00559A  0E00               	movlw	0
  6197  00559C  0101               	movlb	1	; () banked
  6198  00559E  158E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6199  0055A0  0100               	movlb	0	; () banked
  6200  0055A2  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6201  0055A4  0E00               	movlw	0
  6202  0055A6  0101               	movlb	1	; () banked
  6203  0055A8  158F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6204  0055AA  0100               	movlb	0	; () banked
  6205  0055AC  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6206  0055AE  0EFE               	movlw	254
  6207  0055B0  0101               	movlb	1	; () banked
  6208  0055B2  1590               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6209  0055B4  0100               	movlb	0	; () banked
  6210  0055B6  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6211  0055B8  0100               	movlb	0	; () banked
  6212  0055BA  51CF               	movf	??___xxtofl& (0+255),w,b
  6213  0055BC  0100               	movlb	0	; () banked
  6214  0055BE  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6215  0055C0  0100               	movlb	0	; () banked
  6216  0055C2  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6217  0055C4  0100               	movlb	0	; () banked
  6218  0055C6  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6219  0055C8  B4D8               	btfsc	status,2,c
  6220  0055CA  D010               	goto	l1484
  6221  0055CC  D7D9               	goto	l7136
  6222  0055CE                     l7140:
  6223                           
  6224                           ; BSR set to: 0
  6225  0055CE  0101               	movlb	1	; () banked
  6226  0055D0  2B8C               	incf	___xxtofl@exp& (0+255),f,b
  6227                           
  6228                           ; BSR set to: 1
  6229  0055D2  0E01               	movlw	1
  6230  0055D4  0101               	movlb	1	; () banked
  6231  0055D6  278D               	addwf	___xxtofl@arg& (0+255),f,b
  6232  0055D8  0E00               	movlw	0
  6233  0055DA  238E               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6234  0055DC  238F               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6235  0055DE  2390               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6236                           
  6237                           ; BSR set to: 1
  6238  0055E0  0101               	movlb	1	; () banked
  6239  0055E2  90D8               	bcf	status,0,c
  6240  0055E4  3390               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6241  0055E6  338F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6242  0055E8  338E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6243  0055EA  338D               	rrcf	___xxtofl@arg& (0+255),f,b
  6244  0055EC                     l1484:
  6245  0055EC  0E00               	movlw	0
  6246  0055EE  0101               	movlb	1	; () banked
  6247  0055F0  158D               	andwf	___xxtofl@arg& (0+255),w,b
  6248  0055F2  0100               	movlb	0	; () banked
  6249  0055F4  6FCF               	movwf	??___xxtofl& (0+255),b
  6250  0055F6  0E00               	movlw	0
  6251  0055F8  0101               	movlb	1	; () banked
  6252  0055FA  158E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6253  0055FC  0100               	movlb	0	; () banked
  6254  0055FE  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6255  005600  0E00               	movlw	0
  6256  005602  0101               	movlb	1	; () banked
  6257  005604  158F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6258  005606  0100               	movlb	0	; () banked
  6259  005608  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6260  00560A  0EFF               	movlw	255
  6261  00560C  0101               	movlb	1	; () banked
  6262  00560E  1590               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6263  005610  0100               	movlb	0	; () banked
  6264  005612  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6265  005614  0100               	movlb	0	; () banked
  6266  005616  51CF               	movf	??___xxtofl& (0+255),w,b
  6267  005618  0100               	movlb	0	; () banked
  6268  00561A  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6269  00561C  0100               	movlb	0	; () banked
  6270  00561E  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6271  005620  0100               	movlb	0	; () banked
  6272  005622  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6273  005624  B4D8               	btfsc	status,2,c
  6274  005626  D009               	goto	l7148
  6275  005628  D7D2               	goto	l7140
  6276  00562A                     l7146:
  6277  00562A  0101               	movlb	1	; () banked
  6278  00562C  078C               	decf	___xxtofl@exp& (0+255),f,b
  6279  00562E  0101               	movlb	1	; () banked
  6280  005630  90D8               	bcf	status,0,c
  6281  005632  378D               	rlcf	___xxtofl@arg& (0+255),f,b
  6282  005634  378E               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6283  005636  378F               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6284  005638  3790               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6285  00563A                     l7148:
  6286  00563A  0101               	movlb	1	; () banked
  6287  00563C  BF8F               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6288  00563E  D004               	goto	l1491
  6289                           
  6290                           ; BSR set to: 1
  6291  005640  0E02               	movlw	2
  6292  005642  0101               	movlb	1	; () banked
  6293  005644  618C               	cpfslt	___xxtofl@exp& (0+255),b
  6294  005646  D7F1               	goto	l7146
  6295  005648                     l1491:
  6296                           
  6297                           ; BSR set to: 1
  6298  005648  0101               	movlb	1	; () banked
  6299  00564A  B18C               	btfsc	___xxtofl@exp& (0+255),0,b
  6300  00564C  D009               	goto	l1492
  6301                           
  6302                           ; BSR set to: 1
  6303  00564E  0EFF               	movlw	255
  6304  005650  0101               	movlb	1	; () banked
  6305  005652  178D               	andwf	___xxtofl@arg& (0+255),f,b
  6306  005654  0EFF               	movlw	255
  6307  005656  178E               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6308  005658  0E7F               	movlw	127
  6309  00565A  178F               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6310  00565C  0EFF               	movlw	255
  6311  00565E  1790               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6312  005660                     l1492:
  6313                           
  6314                           ; BSR set to: 1
  6315  005660  0101               	movlb	1	; () banked
  6316  005662  90D8               	bcf	status,0,c
  6317  005664  338C               	rrcf	___xxtofl@exp& (0+255),f,b
  6318  005666  C18C  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6319  00566A  0100               	movlb	0	; () banked
  6320  00566C  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6321  00566E  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6322  005670  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6323  005672  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6324  005676  0100               	movlb	0	; () banked
  6325  005678  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6326  00567A  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6327  00567C  6BCF               	clrf	??___xxtofl& (0+255),b
  6328  00567E  0100               	movlb	0	; () banked
  6329  005680  51CF               	movf	??___xxtofl& (0+255),w,b
  6330  005682  0101               	movlb	1	; () banked
  6331  005684  138D               	iorwf	___xxtofl@arg& (0+255),f,b
  6332  005686  0100               	movlb	0	; () banked
  6333  005688  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6334  00568A  0101               	movlb	1	; () banked
  6335  00568C  138E               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6336  00568E  0100               	movlb	0	; () banked
  6337  005690  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6338  005692  0101               	movlb	1	; () banked
  6339  005694  138F               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6340  005696  0100               	movlb	0	; () banked
  6341  005698  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6342  00569A  0101               	movlb	1	; () banked
  6343  00569C  1390               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6344                           
  6345                           ; BSR set to: 1
  6346  00569E  0101               	movlb	1	; () banked
  6347  0056A0  518B               	movf	___xxtofl@sign& (0+255),w,b
  6348  0056A2  0101               	movlb	1	; () banked
  6349  0056A4  B4D8               	btfsc	status,2,c
  6350  0056A6  D005               	goto	l7160
  6351                           
  6352                           ; BSR set to: 1
  6353  0056A8  0100               	movlb	0	; () banked
  6354  0056AA  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6355  0056AC  D002               	goto	l7160
  6356                           
  6357                           ; BSR set to: 0
  6358  0056AE  0101               	movlb	1	; () banked
  6359  0056B0  8F90               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6360  0056B2                     l7160:
  6361  0056B2  C18D  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6362  0056B6  C18E  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6363  0056BA  C18F  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6364  0056BE  C190  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6365  0056C2  0012               	return	
  6366  0056C4                     __end_of___xxtofl:
  6367                           	opt stack 0
  6368                           tblptru	equ	0xFF8
  6369                           tblptrh	equ	0xFF7
  6370                           tblptrl	equ	0xFF6
  6371                           tablat	equ	0xFF5
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           postdec1	equ	0xFE5
  6375                           fsr1l	equ	0xFE1
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function ___fltol *****************
  6384 ;; Defined at:
  6385 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  f1              4   97[BANK0 ] unsigned char 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  exp1            1  106[BANK0 ] unsigned char 
  6390 ;;  sign1           1  105[BANK0 ] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  4   97[BANK0 ] long 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;Total ram usage:       10 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    4
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_park_routine
  6411 ;;		_parallelo
  6412 ;;		_floor
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text14
  6417  005E1C                     __ptext14:
  6418                           	opt stack 0
  6419  005E1C                     ___fltol:
  6420                           	opt stack 24
  6421                           
  6422                           ;incstack = 0
  6423  005E1C  0100               	movlb	0	; () banked
  6424  005E1E  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6425  005E20  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6426  005E22  0100               	movlb	0	; () banked
  6427  005E24  6FCA               	movwf	___fltol@exp1& (0+255),b
  6428  005E26  0100               	movlb	0	; () banked
  6429  005E28  51CA               	movf	___fltol@exp1& (0+255),w,b
  6430  005E2A  A4D8               	btfss	status,2,c
  6431  005E2C  D00A               	goto	l7084
  6432                           
  6433                           ; BSR set to: 0
  6434  005E2E  0E00               	movlw	0
  6435  005E30  0100               	movlb	0	; () banked
  6436  005E32  6FC1               	movwf	?___fltol& (0+255),b
  6437  005E34  0E00               	movlw	0
  6438  005E36  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6439  005E38  0E00               	movlw	0
  6440  005E3A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6441  005E3C  0E00               	movlw	0
  6442  005E3E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6443                           
  6444                           ; BSR set to: 0
  6445  005E40  0012               	return	
  6446  005E42                     l7084:
  6447                           
  6448                           ; BSR set to: 0
  6449  005E42  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6450  005E46  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6451  005E4A  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6452  005E4E  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6453  005E52  0E20               	movlw	32
  6454  005E54  D006               	goto	u9240
  6455  005E56                     u9245:
  6456  005E56  0100               	movlb	0	; () banked
  6457  005E58  90D8               	bcf	status,0,c
  6458  005E5A  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6459  005E5C  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6460  005E5E  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6461  005E60  33C5               	rrcf	??___fltol& (0+255),f,b
  6462  005E62                     u9240:
  6463  005E62  2EE8               	decfsz	wreg,f,c
  6464  005E64  D7F8               	goto	u9245
  6465  005E66  0100               	movlb	0	; () banked
  6466  005E68  51C5               	movf	??___fltol& (0+255),w,b
  6467  005E6A  0100               	movlb	0	; () banked
  6468  005E6C  6FC9               	movwf	___fltol@sign1& (0+255),b
  6469                           
  6470                           ; BSR set to: 0
  6471  005E6E  0100               	movlb	0	; () banked
  6472  005E70  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6473                           
  6474                           ; BSR set to: 0
  6475  005E72  0EFF               	movlw	255
  6476  005E74  0100               	movlb	0	; () banked
  6477  005E76  17C1               	andwf	___fltol@f1& (0+255),f,b
  6478  005E78  0EFF               	movlw	255
  6479  005E7A  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6480  005E7C  0EFF               	movlw	255
  6481  005E7E  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6482  005E80  0E00               	movlw	0
  6483  005E82  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6484                           
  6485                           ; BSR set to: 0
  6486  005E84  0E96               	movlw	150
  6487  005E86  0100               	movlb	0	; () banked
  6488  005E88  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6489                           
  6490                           ; BSR set to: 0
  6491  005E8A  0100               	movlb	0	; () banked
  6492  005E8C  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6493  005E8E  D01A               	goto	l7104
  6494                           
  6495                           ; BSR set to: 0
  6496  005E90  0100               	movlb	0	; () banked
  6497  005E92  51CA               	movf	___fltol@exp1& (0+255),w,b
  6498  005E94  0A80               	xorlw	128
  6499  005E96  0F97               	addlw	151
  6500  005E98  B0D8               	btfsc	status,0,c
  6501  005E9A  D00A               	goto	l7100
  6502                           
  6503                           ; BSR set to: 0
  6504  005E9C  0E00               	movlw	0
  6505  005E9E  0100               	movlb	0	; () banked
  6506  005EA0  6FC1               	movwf	?___fltol& (0+255),b
  6507  005EA2  0E00               	movlw	0
  6508  005EA4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6509  005EA6  0E00               	movlw	0
  6510  005EA8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6511  005EAA  0E00               	movlw	0
  6512  005EAC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6513                           
  6514                           ; BSR set to: 0
  6515  005EAE  0012               	return	
  6516  005EB0                     l7100:
  6517                           
  6518                           ; BSR set to: 0
  6519  005EB0  0100               	movlb	0	; () banked
  6520  005EB2  90D8               	bcf	status,0,c
  6521  005EB4  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6522  005EB6  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6523  005EB8  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6524  005EBA  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6525                           
  6526                           ; BSR set to: 0
  6527  005EBC  0100               	movlb	0	; () banked
  6528  005EBE  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6529  005EC0  D7F7               	goto	l7100
  6530                           
  6531                           ; BSR set to: 0
  6532  005EC2  D01B               	goto	l7114
  6533  005EC4                     l7104:
  6534                           
  6535                           ; BSR set to: 0
  6536  005EC4  0E1F               	movlw	31
  6537  005EC6  0100               	movlb	0	; () banked
  6538  005EC8  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6539  005ECA  D012               	goto	l7112
  6540                           
  6541                           ; BSR set to: 0
  6542  005ECC  0E00               	movlw	0
  6543  005ECE  0100               	movlb	0	; () banked
  6544  005ED0  6FC1               	movwf	?___fltol& (0+255),b
  6545  005ED2  0E00               	movlw	0
  6546  005ED4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6547  005ED6  0E00               	movlw	0
  6548  005ED8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6549  005EDA  0E00               	movlw	0
  6550  005EDC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6551                           
  6552                           ; BSR set to: 0
  6553  005EDE  0012               	return	
  6554  005EE0                     l7110:
  6555                           
  6556                           ; BSR set to: 0
  6557  005EE0  0100               	movlb	0	; () banked
  6558  005EE2  90D8               	bcf	status,0,c
  6559  005EE4  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6560  005EE6  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6561  005EE8  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6562  005EEA  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6563  005EEC  0100               	movlb	0	; () banked
  6564  005EEE  07CA               	decf	___fltol@exp1& (0+255),f,b
  6565  005EF0                     l7112:
  6566                           
  6567                           ; BSR set to: 0
  6568  005EF0  0100               	movlb	0	; () banked
  6569  005EF2  51CA               	movf	___fltol@exp1& (0+255),w,b
  6570  005EF4  0100               	movlb	0	; () banked
  6571  005EF6  A4D8               	btfss	status,2,c
  6572  005EF8  D7F3               	goto	l7110
  6573  005EFA                     l7114:
  6574                           
  6575                           ; BSR set to: 0
  6576  005EFA  0100               	movlb	0	; () banked
  6577  005EFC  51C9               	movf	___fltol@sign1& (0+255),w,b
  6578  005EFE  0100               	movlb	0	; () banked
  6579  005F00  B4D8               	btfsc	status,2,c
  6580  005F02  D009               	goto	l7118
  6581                           
  6582                           ; BSR set to: 0
  6583  005F04  0100               	movlb	0	; () banked
  6584  005F06  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6585  005F08  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6586  005F0A  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6587  005F0C  6DC1               	negf	___fltol@f1& (0+255),b
  6588  005F0E  0E00               	movlw	0
  6589  005F10  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6590  005F12  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6591  005F14  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6592  005F16                     l7118:
  6593                           
  6594                           ; BSR set to: 0
  6595  005F16  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6596  005F1A  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6597  005F1E  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6598  005F22  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6599  005F26  0012               	return	
  6600  005F28                     __end_of___fltol:
  6601                           	opt stack 0
  6602                           tblptru	equ	0xFF8
  6603                           tblptrh	equ	0xFF7
  6604                           tblptrl	equ	0xFF6
  6605                           tablat	equ	0xFF5
  6606                           postinc0	equ	0xFEE
  6607                           wreg	equ	0xFE8
  6608                           postdec1	equ	0xFE5
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function ___flsub *****************
  6618 ;; Defined at:
  6619 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  b               4   12[BANK1 ] long 
  6622 ;;  a               4   16[BANK1 ] long 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  4   12[BANK1 ] long 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6634 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;Total ram usage:        8 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    5
  6641 ;; This function calls:
  6642 ;;		___fladd
  6643 ;; This function is called by:
  6644 ;;		_sin
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text15
  6649  0064FC                     __ptext15:
  6650                           	opt stack 0
  6651  0064FC                     ___flsub:
  6652                           	opt stack 21
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;incstack = 0
  6656  0064FC  0E00               	movlw	0
  6657  0064FE  0101               	movlb	1	; () banked
  6658  006500  1B9B               	xorwf	___flsub@a& (0+255),f,b
  6659  006502  0E00               	movlw	0
  6660  006504  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  6661  006506  0E00               	movlw	0
  6662  006508  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  6663  00650A  0E80               	movlw	128
  6664  00650C  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  6665                           
  6666                           ; BSR set to: 1
  6667  00650E  C197  F0A9         	movff	___flsub@b,___fladd@b
  6668  006512  C198  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6669  006516  C199  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6670  00651A  C19A  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6671  00651E  C19B  F0AD         	movff	___flsub@a,___fladd@a
  6672  006522  C19C  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6673  006526  C19D  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6674  00652A  C19E  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6675  00652E  EC85  F018         	call	___fladd	;wreg free
  6676  006532  C0A9  F197         	movff	?___fladd,?___flsub
  6677  006536  C0AA  F198         	movff	?___fladd+1,?___flsub+1
  6678  00653A  C0AB  F199         	movff	?___fladd+2,?___flsub+2
  6679  00653E  C0AC  F19A         	movff	?___fladd+3,?___flsub+3
  6680  006542  0012               	return	
  6681  006544                     __end_of___flsub:
  6682                           	opt stack 0
  6683                           tblptru	equ	0xFF8
  6684                           tblptrh	equ	0xFF7
  6685                           tblptrl	equ	0xFF6
  6686                           tablat	equ	0xFF5
  6687                           postinc0	equ	0xFEE
  6688                           wreg	equ	0xFE8
  6689                           postdec1	equ	0xFE5
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           postinc2	equ	0xFDE
  6693                           postdec2	equ	0xFDD
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8
  6697                           
  6698 ;; *************** function _asin *****************
  6699 ;; Defined at:
  6700 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  x               4   21[BANK1 ] long 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  y               4   37[BANK1 ] long 
  6705 ;;  sgn             4   25[BANK1 ] long 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4   21[BANK1 ] long 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6715 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;Total ram usage:       24 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    7
  6722 ;; This function calls:
  6723 ;;		___fladd
  6724 ;;		___fldiv
  6725 ;;		___flge
  6726 ;;		___flmul
  6727 ;;		___flneg
  6728 ;;		_atan
  6729 ;;		_fabs
  6730 ;;		_sqrt
  6731 ;; This function is called by:
  6732 ;;		_parallelo
  6733 ;;		_matematica
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text16
  6738  004D28                     __ptext16:
  6739                           	opt stack 0
  6740  004D28                     _asin:
  6741                           	opt stack 21
  6742                           
  6743                           ;incstack = 0
  6744  004D28  0E00               	movlw	0
  6745  004D2A  0100               	movlb	0	; () banked
  6746  004D2C  6FC5               	movwf	___flge@ff1& (0+255),b
  6747  004D2E  0E00               	movlw	0
  6748  004D30  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6749  004D32  0E80               	movlw	128
  6750  004D34  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6751  004D36  0E3F               	movlw	63
  6752  004D38  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6753  004D3A  C1A0  F0C1         	movff	asin@x,fabs@d
  6754  004D3E  C1A1  F0C2         	movff	asin@x+1,fabs@d+1
  6755  004D42  C1A2  F0C3         	movff	asin@x+2,fabs@d+2
  6756  004D46  C1A3  F0C4         	movff	asin@x+3,fabs@d+3
  6757  004D4A  ECA2  F032         	call	_fabs	;wreg free
  6758  004D4E  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6759  004D52  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6760  004D56  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6761  004D5A  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6762  004D5E  EC28  F02D         	call	___flge	;wreg free
  6763  004D62  0100               	movlb	0	; () banked
  6764  004D64  B0D8               	btfsc	status,0,c
  6765  004D66  D00F               	goto	l7590
  6766                           
  6767                           ; BSR set to: 0
  6768  004D68  0E00               	movlw	0
  6769  004D6A  0100               	movlb	0	; () banked
  6770  004D6C  6FE5               	movwf	(_errno+1)& (0+255),b
  6771  004D6E  0E21               	movlw	33
  6772  004D70  6FE4               	movwf	_errno& (0+255),b
  6773  004D72  0E00               	movlw	0
  6774  004D74  0101               	movlb	1	; () banked
  6775  004D76  6FA0               	movwf	?_asin& (0+255),b
  6776  004D78  0E00               	movlw	0
  6777  004D7A  6FA1               	movwf	(?_asin+1)& (0+255),b
  6778  004D7C  0E00               	movlw	0
  6779  004D7E  6FA2               	movwf	(?_asin+2)& (0+255),b
  6780  004D80  0E00               	movlw	0
  6781  004D82  6FA3               	movwf	(?_asin+3)& (0+255),b
  6782                           
  6783                           ; BSR set to: 1
  6784  004D84  0012               	return	
  6785  004D86                     l7590:
  6786  004D86  0E00               	movlw	0
  6787  004D88  0101               	movlb	1	; () banked
  6788  004D8A  6FA4               	movwf	asin@sgn& (0+255),b
  6789  004D8C  0E00               	movlw	0
  6790  004D8E  6FA5               	movwf	(asin@sgn+1)& (0+255),b
  6791  004D90  0E80               	movlw	128
  6792  004D92  6FA6               	movwf	(asin@sgn+2)& (0+255),b
  6793  004D94  0E3F               	movlw	63
  6794  004D96  6FA7               	movwf	(asin@sgn+3)& (0+255),b
  6795                           
  6796                           ; BSR set to: 1
  6797  004D98  C1A0  F094         	movff	asin@x,___flmul@a
  6798  004D9C  C1A1  F095         	movff	asin@x+1,___flmul@a+1
  6799  004DA0  C1A2  F096         	movff	asin@x+2,___flmul@a+2
  6800  004DA4  C1A3  F097         	movff	asin@x+3,___flmul@a+3
  6801  004DA8  C1A0  F090         	movff	asin@x,___flmul@b
  6802  004DAC  C1A1  F091         	movff	asin@x+1,___flmul@b+1
  6803  004DB0  C1A2  F092         	movff	asin@x+2,___flmul@b+2
  6804  004DB4  C1A3  F093         	movff	asin@x+3,___flmul@b+3
  6805  004DB8  ECD9  F01A         	call	___flmul	;wreg free
  6806  004DBC  C090  F0BD         	movff	?___flmul,___flneg@f1
  6807  004DC0  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6808  004DC4  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6809  004DC8  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6810  004DCC  ECDE  F032         	call	___flneg	;wreg free
  6811  004DD0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6812  004DD4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6813  004DD8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6814  004DDC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6815  004DE0  0E00               	movlw	0
  6816  004DE2  0100               	movlb	0	; () banked
  6817  004DE4  6FAD               	movwf	___fladd@a& (0+255),b
  6818  004DE6  0E00               	movlw	0
  6819  004DE8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6820  004DEA  0E80               	movlw	128
  6821  004DEC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6822  004DEE  0E3F               	movlw	63
  6823  004DF0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6824  004DF2  EC85  F018         	call	___fladd	;wreg free
  6825  004DF6  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6826  004DFA  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6827  004DFE  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6828  004E02  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6829  004E06  EC74  F01F         	call	_sqrt	;wreg free
  6830  004E0A  C0C1  F1B0         	movff	?_sqrt,asin@y
  6831  004E0E  C0C2  F1B1         	movff	?_sqrt+1,asin@y+1
  6832  004E12  C0C3  F1B2         	movff	?_sqrt+2,asin@y+2
  6833  004E16  C0C4  F1B3         	movff	?_sqrt+3,asin@y+3
  6834  004E1A  C1A0  F0C1         	movff	asin@x,fabs@d
  6835  004E1E  C1A1  F0C2         	movff	asin@x+1,fabs@d+1
  6836  004E22  C1A2  F0C3         	movff	asin@x+2,fabs@d+2
  6837  004E26  C1A3  F0C4         	movff	asin@x+3,fabs@d+3
  6838  004E2A  ECA2  F032         	call	_fabs	;wreg free
  6839  004E2E  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6840  004E32  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6841  004E36  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6842  004E3A  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6843  004E3E  0E8F               	movlw	143
  6844  004E40  0100               	movlb	0	; () banked
  6845  004E42  6FC9               	movwf	___flge@ff2& (0+255),b
  6846  004E44  0EC2               	movlw	194
  6847  004E46  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6848  004E48  0E35               	movlw	53
  6849  004E4A  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6850  004E4C  0E3F               	movlw	63
  6851  004E4E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6852  004E50  EC28  F02D         	call	___flge	;wreg free
  6853  004E54  0100               	movlb	0	; () banked
  6854  004E56  B0D8               	btfsc	status,0,c
  6855  004E58  D02D               	goto	l7602
  6856                           
  6857                           ; BSR set to: 0
  6858  004E5A  C1A0  F077         	movff	asin@x,___fldiv@b
  6859  004E5E  C1A1  F078         	movff	asin@x+1,___fldiv@b+1
  6860  004E62  C1A2  F079         	movff	asin@x+2,___fldiv@b+2
  6861  004E66  C1A3  F07A         	movff	asin@x+3,___fldiv@b+3
  6862  004E6A  C1B0  F07B         	movff	asin@y,___fldiv@a
  6863  004E6E  C1B1  F07C         	movff	asin@y+1,___fldiv@a+1
  6864  004E72  C1B2  F07D         	movff	asin@y+2,___fldiv@a+2
  6865  004E76  C1B3  F07E         	movff	asin@y+3,___fldiv@a+3
  6866  004E7A  EC59  F021         	call	___fldiv	;wreg free
  6867  004E7E  C077  F1B4         	movff	?___fldiv,_asin$3751
  6868  004E82  C078  F1B5         	movff	?___fldiv+1,_asin$3751+1
  6869  004E86  C079  F1B6         	movff	?___fldiv+2,_asin$3751+2
  6870  004E8A  C07A  F1B7         	movff	?___fldiv+3,_asin$3751+3
  6871  004E8E  C1B4  F0D1         	movff	_asin$3751,atan@f
  6872  004E92  C1B5  F0D2         	movff	_asin$3751+1,atan@f+1
  6873  004E96  C1B6  F0D3         	movff	_asin$3751+2,atan@f+2
  6874  004E9A  C1B7  F0D4         	movff	_asin$3751+3,atan@f+3
  6875  004E9E  EC52  F029         	call	_atan	;wreg free
  6876  004EA2  C0D1  F1A0         	movff	?_atan,?_asin
  6877  004EA6  C0D2  F1A1         	movff	?_atan+1,?_asin+1
  6878  004EAA  C0D3  F1A2         	movff	?_atan+2,?_asin+2
  6879  004EAE  C0D4  F1A3         	movff	?_atan+3,?_asin+3
  6880  004EB2  0012               	return	
  6881  004EB4                     l7602:
  6882  004EB4  0101               	movlb	1	; () banked
  6883  004EB6  AFA3               	btfss	(asin@x+3)& (0+255),7,b
  6884  004EB8  D06E               	goto	l7614
  6885                           
  6886                           ; BSR set to: 1
  6887  004EBA  C1A0  F07B         	movff	asin@x,___fldiv@a
  6888  004EBE  C1A1  F07C         	movff	asin@x+1,___fldiv@a+1
  6889  004EC2  C1A2  F07D         	movff	asin@x+2,___fldiv@a+2
  6890  004EC6  C1A3  F07E         	movff	asin@x+3,___fldiv@a+3
  6891  004ECA  C1B0  F0BD         	movff	asin@y,___flneg@f1
  6892  004ECE  C1B1  F0BE         	movff	asin@y+1,___flneg@f1+1
  6893  004ED2  C1B2  F0BF         	movff	asin@y+2,___flneg@f1+2
  6894  004ED6  C1B3  F0C0         	movff	asin@y+3,___flneg@f1+3
  6895  004EDA  ECDE  F032         	call	___flneg	;wreg free
  6896  004EDE  C0BD  F077         	movff	?___flneg,___fldiv@b
  6897  004EE2  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6898  004EE6  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6899  004EEA  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6900  004EEE  EC59  F021         	call	___fldiv	;wreg free
  6901  004EF2  C077  F1B4         	movff	?___fldiv,_asin$3751
  6902  004EF6  C078  F1B5         	movff	?___fldiv+1,_asin$3751+1
  6903  004EFA  C079  F1B6         	movff	?___fldiv+2,_asin$3751+2
  6904  004EFE  C07A  F1B7         	movff	?___fldiv+3,_asin$3751+3
  6905  004F02  C1B4  F0D1         	movff	_asin$3751,atan@f
  6906  004F06  C1B5  F0D2         	movff	_asin$3751+1,atan@f+1
  6907  004F0A  C1B6  F0D3         	movff	_asin$3751+2,atan@f+2
  6908  004F0E  C1B7  F0D4         	movff	_asin$3751+3,atan@f+3
  6909  004F12  EC52  F029         	call	_atan	;wreg free
  6910  004F16  C0D1  F1AC         	movff	?_atan,_asin$3752
  6911  004F1A  C0D2  F1AD         	movff	?_atan+1,_asin$3752+1
  6912  004F1E  C0D3  F1AE         	movff	?_atan+2,_asin$3752+2
  6913  004F22  C0D4  F1AF         	movff	?_atan+3,_asin$3752+3
  6914  004F26  0EDB               	movlw	219
  6915  004F28  0100               	movlb	0	; () banked
  6916  004F2A  6FAD               	movwf	___fladd@a& (0+255),b
  6917  004F2C  0E0F               	movlw	15
  6918  004F2E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6919  004F30  0EC9               	movlw	201
  6920  004F32  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6921  004F34  0E3F               	movlw	63
  6922  004F36  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6923  004F38  C1AC  F0BD         	movff	_asin$3752,___flneg@f1
  6924  004F3C  C1AD  F0BE         	movff	_asin$3752+1,___flneg@f1+1
  6925  004F40  C1AE  F0BF         	movff	_asin$3752+2,___flneg@f1+2
  6926  004F44  C1AF  F0C0         	movff	_asin$3752+3,___flneg@f1+3
  6927  004F48  ECDE  F032         	call	___flneg	;wreg free
  6928  004F4C  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6929  004F50  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6930  004F54  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6931  004F58  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6932  004F5C  EC85  F018         	call	___fladd	;wreg free
  6933  004F60  C0A9  F1A8         	movff	?___fladd,_asin$3753
  6934  004F64  C0AA  F1A9         	movff	?___fladd+1,_asin$3753+1
  6935  004F68  C0AB  F1AA         	movff	?___fladd+2,_asin$3753+2
  6936  004F6C  C0AC  F1AB         	movff	?___fladd+3,_asin$3753+3
  6937  004F70  C1A8  F0BD         	movff	_asin$3753,___flneg@f1
  6938  004F74  C1A9  F0BE         	movff	_asin$3753+1,___flneg@f1+1
  6939  004F78  C1AA  F0BF         	movff	_asin$3753+2,___flneg@f1+2
  6940  004F7C  C1AB  F0C0         	movff	_asin$3753+3,___flneg@f1+3
  6941  004F80  ECDE  F032         	call	___flneg	;wreg free
  6942  004F84  C0BD  F1A0         	movff	?___flneg,?_asin
  6943  004F88  C0BE  F1A1         	movff	?___flneg+1,?_asin+1
  6944  004F8C  C0BF  F1A2         	movff	?___flneg+2,?_asin+2
  6945  004F90  C0C0  F1A3         	movff	?___flneg+3,?_asin+3
  6946  004F94  0012               	return	
  6947  004F96                     l7614:
  6948  004F96  C1A0  F07B         	movff	asin@x,___fldiv@a
  6949  004F9A  C1A1  F07C         	movff	asin@x+1,___fldiv@a+1
  6950  004F9E  C1A2  F07D         	movff	asin@x+2,___fldiv@a+2
  6951  004FA2  C1A3  F07E         	movff	asin@x+3,___fldiv@a+3
  6952  004FA6  C1B0  F077         	movff	asin@y,___fldiv@b
  6953  004FAA  C1B1  F078         	movff	asin@y+1,___fldiv@b+1
  6954  004FAE  C1B2  F079         	movff	asin@y+2,___fldiv@b+2
  6955  004FB2  C1B3  F07A         	movff	asin@y+3,___fldiv@b+3
  6956  004FB6  EC59  F021         	call	___fldiv	;wreg free
  6957  004FBA  C077  F1B4         	movff	?___fldiv,_asin$3751
  6958  004FBE  C078  F1B5         	movff	?___fldiv+1,_asin$3751+1
  6959  004FC2  C079  F1B6         	movff	?___fldiv+2,_asin$3751+2
  6960  004FC6  C07A  F1B7         	movff	?___fldiv+3,_asin$3751+3
  6961  004FCA  C1B4  F0D1         	movff	_asin$3751,atan@f
  6962  004FCE  C1B5  F0D2         	movff	_asin$3751+1,atan@f+1
  6963  004FD2  C1B6  F0D3         	movff	_asin$3751+2,atan@f+2
  6964  004FD6  C1B7  F0D4         	movff	_asin$3751+3,atan@f+3
  6965  004FDA  EC52  F029         	call	_atan	;wreg free
  6966  004FDE  C0D1  F1AC         	movff	?_atan,_asin$3752
  6967  004FE2  C0D2  F1AD         	movff	?_atan+1,_asin$3752+1
  6968  004FE6  C0D3  F1AE         	movff	?_atan+2,_asin$3752+2
  6969  004FEA  C0D4  F1AF         	movff	?_atan+3,_asin$3752+3
  6970  004FEE  C1AC  F0BD         	movff	_asin$3752,___flneg@f1
  6971  004FF2  C1AD  F0BE         	movff	_asin$3752+1,___flneg@f1+1
  6972  004FF6  C1AE  F0BF         	movff	_asin$3752+2,___flneg@f1+2
  6973  004FFA  C1AF  F0C0         	movff	_asin$3752+3,___flneg@f1+3
  6974  004FFE  ECDE  F032         	call	___flneg	;wreg free
  6975  005002  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6976  005006  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6977  00500A  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6978  00500E  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6979  005012  0EDB               	movlw	219
  6980  005014  0100               	movlb	0	; () banked
  6981  005016  6FAD               	movwf	___fladd@a& (0+255),b
  6982  005018  0E0F               	movlw	15
  6983  00501A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6984  00501C  0EC9               	movlw	201
  6985  00501E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6986  005020  0E3F               	movlw	63
  6987  005022  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6988  005024  EC85  F018         	call	___fladd	;wreg free
  6989  005028  C0A9  F1A0         	movff	?___fladd,?_asin
  6990  00502C  C0AA  F1A1         	movff	?___fladd+1,?_asin+1
  6991  005030  C0AB  F1A2         	movff	?___fladd+2,?_asin+2
  6992  005034  C0AC  F1A3         	movff	?___fladd+3,?_asin+3
  6993  005038  0012               	return	
  6994  00503A                     __end_of_asin:
  6995                           	opt stack 0
  6996                           tblptru	equ	0xFF8
  6997                           tblptrh	equ	0xFF7
  6998                           tblptrl	equ	0xFF6
  6999                           tablat	equ	0xFF5
  7000                           postinc0	equ	0xFEE
  7001                           wreg	equ	0xFE8
  7002                           postdec1	equ	0xFE5
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function _sqrt *****************
  7012 ;; Defined at:
  7013 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  a               4   97[BANK0 ] long 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  frac            4   17[BANK1 ] unsigned long 
  7018 ;;  root            4   13[BANK1 ] struct .
  7019 ;;  grs             4    7[BANK1 ] unsigned long 
  7020 ;;  tfrac           4    2[BANK1 ] unsigned long 
  7021 ;;  exp             2   11[BANK1 ] int 
  7022 ;;  p               1    6[BANK1 ] unsigned char 
  7023 ;;  i               1    1[BANK1 ] unsigned char 
  7024 ;;  sign            1    0[BANK1 ] unsigned char 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  4   97[BANK0 ] unsigned char 
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;Total ram usage:       29 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    4
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_parallelo
  7045 ;;		_asin
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text17
  7050  003EE8                     __ptext17:
  7051                           	opt stack 0
  7052  003EE8                     _sqrt:
  7053                           	opt stack 24
  7054                           
  7055                           ;incstack = 0
  7056  003EE8  0100               	movlb	0	; () banked
  7057  003EEA  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7058  003EEC  0B80               	andlw	128
  7059  003EEE  0101               	movlb	1	; () banked
  7060  003EF0  6F8B               	movwf	sqrt@sign& (0+255),b
  7061  003EF2  0100               	movlb	0	; () banked
  7062  003EF4  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7063  003EF6  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7064  003EF8  0101               	movlb	1	; () banked
  7065  003EFA  6F91               	movwf	sqrt@p& (0+255),b
  7066                           
  7067                           ; BSR set to: 1
  7068  003EFC  0100               	movlb	0	; () banked
  7069  003EFE  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7070  003F00  D002               	goto	l7376
  7071                           
  7072                           ; BSR set to: 0
  7073  003F02  0101               	movlb	1	; () banked
  7074  003F04  8191               	bsf	sqrt@p& (0+255),0,b
  7075  003F06                     l7376:
  7076  003F06  C191  F196         	movff	sqrt@p,sqrt@exp
  7077  003F0A  0101               	movlb	1	; () banked
  7078  003F0C  6B97               	clrf	(sqrt@exp+1)& (0+255),b
  7079                           
  7080                           ; BSR set to: 1
  7081  003F0E  0EFF               	movlw	255
  7082  003F10  0100               	movlb	0	; () banked
  7083  003F12  15C1               	andwf	sqrt@a& (0+255),w,b
  7084  003F14  0101               	movlb	1	; () banked
  7085  003F16  6F9C               	movwf	sqrt@frac& (0+255),b
  7086  003F18  0EFF               	movlw	255
  7087  003F1A  0100               	movlb	0	; () banked
  7088  003F1C  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7089  003F1E  0101               	movlb	1	; () banked
  7090  003F20  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7091  003F22  0E7F               	movlw	127
  7092  003F24  0100               	movlb	0	; () banked
  7093  003F26  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7094  003F28  0101               	movlb	1	; () banked
  7095  003F2A  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7096  003F2C  0E00               	movlw	0
  7097  003F2E  0100               	movlb	0	; () banked
  7098  003F30  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7099  003F32  0101               	movlb	1	; () banked
  7100  003F34  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7101                           
  7102                           ; BSR set to: 1
  7103  003F36  0101               	movlb	1	; () banked
  7104  003F38  5196               	movf	sqrt@exp& (0+255),w,b
  7105  003F3A  0101               	movlb	1	; () banked
  7106  003F3C  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7107  003F3E  B4D8               	btfsc	status,2,c
  7108  003F40  D008               	goto	l7388
  7109                           
  7110                           ; BSR set to: 1
  7111  003F42  0101               	movlb	1	; () banked
  7112  003F44  8F9E               	bsf	(sqrt@frac+2)& (0+255),7,b
  7113                           
  7114                           ; BSR set to: 1
  7115  003F46  0101               	movlb	1	; () banked
  7116  003F48  2996               	incf	sqrt@exp& (0+255),w,b
  7117  003F4A  0101               	movlb	1	; () banked
  7118  003F4C  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7119  003F4E  A4D8               	btfss	status,2,c
  7120  003F50  D009               	goto	l7390
  7121  003F52                     l7388:
  7122                           
  7123                           ; BSR set to: 1
  7124  003F52  0E00               	movlw	0
  7125  003F54  0101               	movlb	1	; () banked
  7126  003F56  6F9C               	movwf	sqrt@frac& (0+255),b
  7127  003F58  0E00               	movlw	0
  7128  003F5A  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7129  003F5C  0E00               	movlw	0
  7130  003F5E  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7131  003F60  0E00               	movlw	0
  7132  003F62  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7133  003F64                     l7390:
  7134                           
  7135                           ; BSR set to: 1
  7136  003F64  0101               	movlb	1	; () banked
  7137  003F66  5196               	movf	sqrt@exp& (0+255),w,b
  7138  003F68  0101               	movlb	1	; () banked
  7139  003F6A  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7140  003F6C  A4D8               	btfss	status,2,c
  7141  003F6E  D00A               	goto	l7396
  7142                           
  7143                           ; BSR set to: 1
  7144  003F70  0E00               	movlw	0
  7145  003F72  0100               	movlb	0	; () banked
  7146  003F74  6FC1               	movwf	?_sqrt& (0+255),b
  7147  003F76  0E00               	movlw	0
  7148  003F78  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7149  003F7A  0E00               	movlw	0
  7150  003F7C  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7151  003F7E  0E00               	movlw	0
  7152  003F80  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7153                           
  7154                           ; BSR set to: 0
  7155  003F82  0012               	return	
  7156  003F84                     l7396:
  7157  003F84  0101               	movlb	1	; () banked
  7158  003F86  518B               	movf	sqrt@sign& (0+255),w,b
  7159  003F88  0101               	movlb	1	; () banked
  7160  003F8A  B4D8               	btfsc	status,2,c
  7161  003F8C  D01C               	goto	l7408
  7162                           
  7163                           ; BSR set to: 1
  7164  003F8E  0E00               	movlw	0
  7165  003F90  0101               	movlb	1	; () banked
  7166  003F92  6F98               	movwf	sqrt@root& (0+255),b
  7167  003F94  0E00               	movlw	0
  7168  003F96  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7169  003F98  0E40               	movlw	64
  7170  003F9A  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7171  003F9C  0E00               	movlw	0
  7172  003F9E  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7173                           
  7174                           ; BSR set to: 1
  7175  003FA0  0101               	movlb	1	; () banked
  7176  003FA2  0E80               	movlw	128
  7177  003FA4  139A               	iorwf	(sqrt@root+2)& (0+255),f,b
  7178  003FA6  0EFF               	movlw	255
  7179  003FA8  139B               	iorwf	(sqrt@root+3)& (0+255),f,b
  7180                           
  7181                           ; BSR set to: 1
  7182  003FAA  0E00               	movlw	0
  7183  003FAC  0100               	movlb	0	; () banked
  7184  003FAE  6FE5               	movwf	(_errno+1)& (0+255),b
  7185  003FB0  0E21               	movlw	33
  7186  003FB2  6FE4               	movwf	_errno& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189  003FB4  C198  F0C1         	movff	sqrt@root,?_sqrt
  7190  003FB8  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7191  003FBC  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7192  003FC0  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7193                           
  7194                           ; BSR set to: 0
  7195  003FC4  0012               	return	
  7196  003FC6                     l7408:
  7197  003FC6  0101               	movlb	1	; () banked
  7198  003FC8  2996               	incf	sqrt@exp& (0+255),w,b
  7199  003FCA  0101               	movlb	1	; () banked
  7200  003FCC  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7201  003FCE  A4D8               	btfss	status,2,c
  7202  003FD0  D012               	goto	l7416
  7203                           
  7204                           ; BSR set to: 1
  7205  003FD2  0E00               	movlw	0
  7206  003FD4  0101               	movlb	1	; () banked
  7207  003FD6  6F98               	movwf	sqrt@root& (0+255),b
  7208  003FD8  0E00               	movlw	0
  7209  003FDA  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7210  003FDC  0E80               	movlw	128
  7211  003FDE  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7212  003FE0  0E7F               	movlw	127
  7213  003FE2  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7214                           
  7215                           ; BSR set to: 1
  7216  003FE4  C198  F0C1         	movff	sqrt@root,?_sqrt
  7217  003FE8  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7218  003FEC  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7219  003FF0  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7220                           
  7221                           ; BSR set to: 1
  7222  003FF4  0012               	return	
  7223  003FF6                     l7416:
  7224                           
  7225                           ; BSR set to: 1
  7226  003FF6  0101               	movlb	1	; () banked
  7227  003FF8  0E81               	movlw	129
  7228  003FFA  2796               	addwf	sqrt@exp& (0+255),f,b
  7229  003FFC  0EFF               	movlw	255
  7230  003FFE  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7231  004000  0101               	movlb	1	; () banked
  7232  004002  5196               	movf	sqrt@exp& (0+255),w,b
  7233  004004  0B01               	andlw	1
  7234  004006  0101               	movlb	1	; () banked
  7235  004008  6F91               	movwf	sqrt@p& (0+255),b
  7236  00400A  0101               	movlb	1	; () banked
  7237  00400C  3597               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7238  00400E  3397               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7239  004010  3396               	rrcf	sqrt@exp& (0+255),f,b
  7240  004012  0E7F               	movlw	127
  7241  004014  0101               	movlb	1	; () banked
  7242  004016  2796               	addwf	sqrt@exp& (0+255),f,b
  7243  004018  0E00               	movlw	0
  7244  00401A  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7245  00401C  90D8               	bcf	status,0,c
  7246  00401E  0101               	movlb	1	; () banked
  7247  004020  359C               	rlcf	sqrt@frac& (0+255),w,b
  7248  004022  0101               	movlb	1	; () banked
  7249  004024  6F8D               	movwf	sqrt@tfrac& (0+255),b
  7250  004026  0101               	movlb	1	; () banked
  7251  004028  359D               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7252  00402A  0101               	movlb	1	; () banked
  7253  00402C  6F8E               	movwf	(sqrt@tfrac+1)& (0+255),b
  7254  00402E  0101               	movlb	1	; () banked
  7255  004030  359E               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7256  004032  0101               	movlb	1	; () banked
  7257  004034  6F8F               	movwf	(sqrt@tfrac+2)& (0+255),b
  7258  004036  0101               	movlb	1	; () banked
  7259  004038  359F               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7260  00403A  0101               	movlb	1	; () banked
  7261  00403C  6F90               	movwf	(sqrt@tfrac+3)& (0+255),b
  7262                           
  7263                           ; BSR set to: 1
  7264  00403E  0E00               	movlw	0
  7265  004040  0101               	movlb	1	; () banked
  7266  004042  6F9C               	movwf	sqrt@frac& (0+255),b
  7267  004044  0E00               	movlw	0
  7268  004046  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7269  004048  0E00               	movlw	0
  7270  00404A  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7271  00404C  0E00               	movlw	0
  7272  00404E  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7273                           
  7274                           ; BSR set to: 1
  7275  004050  0E00               	movlw	0
  7276  004052  0101               	movlb	1	; () banked
  7277  004054  6F92               	movwf	sqrt@grs& (0+255),b
  7278  004056  0E00               	movlw	0
  7279  004058  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7280  00405A  0E00               	movlw	0
  7281  00405C  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7282  00405E  0E01               	movlw	1
  7283  004060  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7284                           
  7285                           ; BSR set to: 1
  7286  004062  0101               	movlb	1	; () banked
  7287  004064  5191               	movf	sqrt@p& (0+255),w,b
  7288  004066  0101               	movlb	1	; () banked
  7289  004068  B4D8               	btfsc	status,2,c
  7290  00406A  D006               	goto	l7426
  7291                           
  7292                           ; BSR set to: 1
  7293  00406C  0101               	movlb	1	; () banked
  7294  00406E  90D8               	bcf	status,0,c
  7295  004070  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7296  004072  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7297  004074  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7298  004076  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7299  004078                     l7426:
  7300                           
  7301                           ; BSR set to: 1
  7302  004078  0E00               	movlw	0
  7303  00407A  0101               	movlb	1	; () banked
  7304  00407C  6F8C               	movwf	sqrt@i& (0+255),b
  7305  00407E  D07E               	goto	l7440
  7306  004080                     l7428:
  7307                           
  7308                           ; BSR set to: 1
  7309  004080  0101               	movlb	1	; () banked
  7310  004082  5192               	movf	sqrt@grs& (0+255),w,b
  7311  004084  0101               	movlb	1	; () banked
  7312  004086  139C               	iorwf	sqrt@frac& (0+255),f,b
  7313  004088  0101               	movlb	1	; () banked
  7314  00408A  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7315  00408C  0101               	movlb	1	; () banked
  7316  00408E  139D               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7317  004090  0101               	movlb	1	; () banked
  7318  004092  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7319  004094  0101               	movlb	1	; () banked
  7320  004096  139E               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7321  004098  0101               	movlb	1	; () banked
  7322  00409A  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7323  00409C  0101               	movlb	1	; () banked
  7324  00409E  139F               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7325  0040A0  0101               	movlb	1	; () banked
  7326  0040A2  519C               	movf	sqrt@frac& (0+255),w,b
  7327  0040A4  0101               	movlb	1	; () banked
  7328  0040A6  5D8D               	subwf	sqrt@tfrac& (0+255),w,b
  7329  0040A8  0101               	movlb	1	; () banked
  7330  0040AA  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7331  0040AC  0101               	movlb	1	; () banked
  7332  0040AE  598E               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7333  0040B0  0101               	movlb	1	; () banked
  7334  0040B2  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7335  0040B4  0101               	movlb	1	; () banked
  7336  0040B6  598F               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7337  0040B8  0101               	movlb	1	; () banked
  7338  0040BA  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7339  0040BC  0101               	movlb	1	; () banked
  7340  0040BE  5990               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7341  0040C0  A0D8               	btfss	status,0,c
  7342  0040C2  D021               	goto	l7432
  7343                           
  7344                           ; BSR set to: 1
  7345  0040C4  0101               	movlb	1	; () banked
  7346  0040C6  519C               	movf	sqrt@frac& (0+255),w,b
  7347  0040C8  0101               	movlb	1	; () banked
  7348  0040CA  5F8D               	subwf	sqrt@tfrac& (0+255),f,b
  7349  0040CC  0101               	movlb	1	; () banked
  7350  0040CE  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7351  0040D0  0101               	movlb	1	; () banked
  7352  0040D2  5B8E               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7353  0040D4  0101               	movlb	1	; () banked
  7354  0040D6  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7355  0040D8  0101               	movlb	1	; () banked
  7356  0040DA  5B8F               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7357  0040DC  0101               	movlb	1	; () banked
  7358  0040DE  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7359  0040E0  0101               	movlb	1	; () banked
  7360  0040E2  5B90               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7361  0040E4  0101               	movlb	1	; () banked
  7362  0040E6  5192               	movf	sqrt@grs& (0+255),w,b
  7363  0040E8  0101               	movlb	1	; () banked
  7364  0040EA  279C               	addwf	sqrt@frac& (0+255),f,b
  7365  0040EC  0101               	movlb	1	; () banked
  7366  0040EE  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7367  0040F0  0101               	movlb	1	; () banked
  7368  0040F2  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7369  0040F4  0101               	movlb	1	; () banked
  7370  0040F6  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7371  0040F8  0101               	movlb	1	; () banked
  7372  0040FA  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7373  0040FC  0101               	movlb	1	; () banked
  7374  0040FE  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7375  004100  0101               	movlb	1	; () banked
  7376  004102  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7377  004104  D01D               	goto	l7434
  7378  004106                     l7432:
  7379                           
  7380                           ; BSR set to: 1
  7381  004106  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7382  00410A  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7383  00410E  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7384  004112  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7385  004116  0100               	movlb	0	; () banked
  7386  004118  1FC5               	comf	??_sqrt& (0+255),f,b
  7387  00411A  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7388  00411C  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7389  00411E  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7390  004120  0100               	movlb	0	; () banked
  7391  004122  51C5               	movf	??_sqrt& (0+255),w,b
  7392  004124  0101               	movlb	1	; () banked
  7393  004126  179C               	andwf	sqrt@frac& (0+255),f,b
  7394  004128  0100               	movlb	0	; () banked
  7395  00412A  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7396  00412C  0101               	movlb	1	; () banked
  7397  00412E  179D               	andwf	(sqrt@frac+1)& (0+255),f,b
  7398  004130  0100               	movlb	0	; () banked
  7399  004132  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7400  004134  0101               	movlb	1	; () banked
  7401  004136  179E               	andwf	(sqrt@frac+2)& (0+255),f,b
  7402  004138  0100               	movlb	0	; () banked
  7403  00413A  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7404  00413C  0101               	movlb	1	; () banked
  7405  00413E  179F               	andwf	(sqrt@frac+3)& (0+255),f,b
  7406  004140                     l7434:
  7407                           
  7408                           ; BSR set to: 1
  7409  004140  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7410  004144  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7411  004148  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7412  00414C  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7413  004150  0100               	movlb	0	; () banked
  7414  004152  90D8               	bcf	status,0,c
  7415  004154  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7416  004156  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7417  004158  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7418  00415A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7419  00415C  C0C5  F192         	movff	??_sqrt,sqrt@grs
  7420  004160  C0C6  F193         	movff	??_sqrt+1,sqrt@grs+1
  7421  004164  C0C7  F194         	movff	??_sqrt+2,sqrt@grs+2
  7422  004168  C0C8  F195         	movff	??_sqrt+3,sqrt@grs+3
  7423                           
  7424                           ; BSR set to: 0
  7425  00416C  0101               	movlb	1	; () banked
  7426  00416E  90D8               	bcf	status,0,c
  7427  004170  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7428  004172  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7429  004174  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7430  004176  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7431                           
  7432                           ; BSR set to: 1
  7433  004178  0101               	movlb	1	; () banked
  7434  00417A  2B8C               	incf	sqrt@i& (0+255),f,b
  7435  00417C                     l7440:
  7436                           
  7437                           ; BSR set to: 1
  7438  00417C  0E18               	movlw	24
  7439  00417E  0101               	movlb	1	; () banked
  7440  004180  658C               	cpfsgt	sqrt@i& (0+255),b
  7441  004182  D77E               	goto	l7428
  7442                           
  7443                           ; BSR set to: 1
  7444                           
  7445                           ; BSR set to: 1
  7446  004184  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7447  004188  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7448  00418C  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7449  004190  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7450  004194  0100               	movlb	0	; () banked
  7451  004196  90D8               	bcf	status,0,c
  7452  004198  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7453  00419A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7454  00419C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7455  00419E  33C5               	rrcf	??_sqrt& (0+255),f,b
  7456  0041A0  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7457  0041A4  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7458  0041A8  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7459  0041AC  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7460                           
  7461                           ; BSR set to: 0
  7462  0041B0  0E01               	movlw	1
  7463  0041B2  0101               	movlb	1	; () banked
  7464  0041B4  159C               	andwf	sqrt@frac& (0+255),w,b
  7465  0041B6  0101               	movlb	1	; () banked
  7466  0041B8  6F92               	movwf	sqrt@grs& (0+255),b
  7467  0041BA  0E00               	movlw	0
  7468  0041BC  0101               	movlb	1	; () banked
  7469  0041BE  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7470  0041C0  0101               	movlb	1	; () banked
  7471  0041C2  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7472  0041C4  0E00               	movlw	0
  7473  0041C6  0101               	movlb	1	; () banked
  7474  0041C8  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7475  0041CA  0101               	movlb	1	; () banked
  7476  0041CC  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7477  0041CE  0E00               	movlw	0
  7478  0041D0  0101               	movlb	1	; () banked
  7479  0041D2  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7480  0041D4  0101               	movlb	1	; () banked
  7481  0041D6  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7482                           
  7483                           ; BSR set to: 1
  7484  0041D8  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7485  0041DC  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7486  0041E0  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7487  0041E4  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7488  0041E8  0100               	movlb	0	; () banked
  7489  0041EA  90D8               	bcf	status,0,c
  7490  0041EC  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7491  0041EE  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7492  0041F0  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7493  0041F2  33C5               	rrcf	??_sqrt& (0+255),f,b
  7494  0041F4  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7495  0041F8  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7496  0041FC  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7497  004200  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7498  004204  0101               	movlb	1	; () banked
  7499  004206  5192               	movf	sqrt@grs& (0+255),w,b
  7500  004208  0101               	movlb	1	; () banked
  7501  00420A  279C               	addwf	sqrt@frac& (0+255),f,b
  7502  00420C  0101               	movlb	1	; () banked
  7503  00420E  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7504  004210  0101               	movlb	1	; () banked
  7505  004212  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7506  004214  0101               	movlb	1	; () banked
  7507  004216  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7508  004218  0101               	movlb	1	; () banked
  7509  00421A  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7510  00421C  0101               	movlb	1	; () banked
  7511  00421E  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7512  004220  0101               	movlb	1	; () banked
  7513  004222  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7514                           
  7515                           ; BSR set to: 1
  7516  004224  0101               	movlb	1	; () banked
  7517  004226  A19F               	btfss	(sqrt@frac+3)& (0+255),0,b
  7518  004228  D019               	goto	l7452
  7519                           
  7520                           ; BSR set to: 1
  7521  00422A  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7522  00422E  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7523  004232  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7524  004236  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7525  00423A  0100               	movlb	0	; () banked
  7526  00423C  90D8               	bcf	status,0,c
  7527  00423E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7528  004240  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7529  004242  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7530  004244  33C5               	rrcf	??_sqrt& (0+255),f,b
  7531  004246  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7532  00424A  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7533  00424E  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7534  004252  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7535  004256  0101               	movlb	1	; () banked
  7536  004258  4B96               	infsnz	sqrt@exp& (0+255),f,b
  7537  00425A  2B97               	incf	(sqrt@exp+1)& (0+255),f,b
  7538  00425C                     l7452:
  7539                           
  7540                           ; BSR set to: 1
  7541  00425C  0EFF               	movlw	255
  7542  00425E  0101               	movlb	1	; () banked
  7543  004260  159C               	andwf	sqrt@frac& (0+255),w,b
  7544  004262  0101               	movlb	1	; () banked
  7545  004264  6F98               	movwf	sqrt@root& (0+255),b
  7546  004266  0EFF               	movlw	255
  7547  004268  0101               	movlb	1	; () banked
  7548  00426A  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7549  00426C  0101               	movlb	1	; () banked
  7550  00426E  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7551  004270  0E7F               	movlw	127
  7552  004272  0101               	movlb	1	; () banked
  7553  004274  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7554  004276  0101               	movlb	1	; () banked
  7555  004278  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7556  00427A  0E00               	movlw	0
  7557  00427C  0101               	movlb	1	; () banked
  7558  00427E  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7559  004280  0101               	movlb	1	; () banked
  7560  004282  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7561                           
  7562                           ; BSR set to: 1
  7563  004284  C196  F191         	movff	sqrt@exp,sqrt@p
  7564                           
  7565                           ; BSR set to: 1
  7566  004288  0101               	movlb	1	; () banked
  7567  00428A  A191               	btfss	sqrt@p& (0+255),0,b
  7568  00428C  D002               	goto	l7460
  7569                           
  7570                           ; BSR set to: 1
  7571  00428E  0101               	movlb	1	; () banked
  7572  004290  8F9A               	bsf	(sqrt@root+2)& (0+255),7,b
  7573  004292                     l7460:
  7574                           
  7575                           ; BSR set to: 1
  7576  004292  0101               	movlb	1	; () banked
  7577  004294  90D8               	bcf	status,0,c
  7578  004296  3191               	rrcf	sqrt@p& (0+255),w,b
  7579  004298  0101               	movlb	1	; () banked
  7580  00429A  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7581                           
  7582                           ; BSR set to: 1
  7583  00429C  0101               	movlb	1	; () banked
  7584  00429E  9F9B               	bcf	(sqrt@root+3)& (0+255),7,b
  7585                           
  7586                           ; BSR set to: 1
  7587  0042A0  C198  F0C1         	movff	sqrt@root,?_sqrt
  7588  0042A4  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7589  0042A8  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7590  0042AC  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7591  0042B0  0012               	return	
  7592  0042B2                     __end_of_sqrt:
  7593                           	opt stack 0
  7594                           tblptru	equ	0xFF8
  7595                           tblptrh	equ	0xFF7
  7596                           tblptrl	equ	0xFF6
  7597                           tablat	equ	0xFF5
  7598                           postinc0	equ	0xFEE
  7599                           wreg	equ	0xFE8
  7600                           postdec1	equ	0xFE5
  7601                           fsr1l	equ	0xFE1
  7602                           indf2	equ	0xFDF
  7603                           postinc2	equ	0xFDE
  7604                           postdec2	equ	0xFDD
  7605                           fsr2h	equ	0xFDA
  7606                           fsr2l	equ	0xFD9
  7607                           status	equ	0xFD8
  7608                           
  7609 ;; *************** function _atan *****************
  7610 ;; Defined at:
  7611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  f               4  113[BANK0 ] unsigned char 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  val             4   13[BANK1 ] unsigned char 
  7616 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7617 ;;  x               4    4[BANK1 ] unsigned char 
  7618 ;;  y               4    0[BANK1 ] unsigned char 
  7619 ;;  recip           1    8[BANK1 ] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  4  113[BANK0 ] unsigned char 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:       21 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    6
  7636 ;; This function calls:
  7637 ;;		___fladd
  7638 ;;		___fldiv
  7639 ;;		___flge
  7640 ;;		___flmul
  7641 ;;		___flneg
  7642 ;;		_eval_poly
  7643 ;;		_fabs
  7644 ;; This function is called by:
  7645 ;;		_asin
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text18
  7650  0052A4                     __ptext18:
  7651                           	opt stack 0
  7652  0052A4                     _atan:
  7653                           	opt stack 21
  7654                           
  7655                           ;incstack = 0
  7656  0052A4  C0D1  F0C1         	movff	atan@f,fabs@d
  7657  0052A8  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7658  0052AC  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7659  0052B0  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7660  0052B4  ECA2  F032         	call	_fabs	;wreg free
  7661  0052B8  C0C1  F198         	movff	?_fabs,atan@val
  7662  0052BC  C0C2  F199         	movff	?_fabs+1,atan@val+1
  7663  0052C0  C0C3  F19A         	movff	?_fabs+2,atan@val+2
  7664  0052C4  C0C4  F19B         	movff	?_fabs+3,atan@val+3
  7665  0052C8  0101               	movlb	1	; () banked
  7666  0052CA  5198               	movf	atan@val& (0+255),w,b
  7667  0052CC  0101               	movlb	1	; () banked
  7668  0052CE  1199               	iorwf	(atan@val+1)& (0+255),w,b
  7669  0052D0  0101               	movlb	1	; () banked
  7670  0052D2  119A               	iorwf	(atan@val+2)& (0+255),w,b
  7671  0052D4  0101               	movlb	1	; () banked
  7672  0052D6  119B               	iorwf	(atan@val+3)& (0+255),w,b
  7673  0052D8  A4D8               	btfss	status,2,c
  7674  0052DA  D00A               	goto	l7480
  7675                           
  7676                           ; BSR set to: 1
  7677  0052DC  0E00               	movlw	0
  7678  0052DE  0100               	movlb	0	; () banked
  7679  0052E0  6FD1               	movwf	?_atan& (0+255),b
  7680  0052E2  0E00               	movlw	0
  7681  0052E4  6FD2               	movwf	(?_atan+1)& (0+255),b
  7682  0052E6  0E00               	movlw	0
  7683  0052E8  6FD3               	movwf	(?_atan+2)& (0+255),b
  7684  0052EA  0E00               	movlw	0
  7685  0052EC  6FD4               	movwf	(?_atan+3)& (0+255),b
  7686                           
  7687                           ; BSR set to: 0
  7688  0052EE  0012               	return	
  7689  0052F0                     l7480:
  7690  0052F0  0E00               	movlw	0
  7691  0052F2  0100               	movlb	0	; () banked
  7692  0052F4  6FC5               	movwf	___flge@ff1& (0+255),b
  7693  0052F6  0E00               	movlw	0
  7694  0052F8  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7695  0052FA  0E80               	movlw	128
  7696  0052FC  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7697  0052FE  0E3F               	movlw	63
  7698  005300  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7699  005302  C198  F0C9         	movff	atan@val,___flge@ff2
  7700  005306  C199  F0CA         	movff	atan@val+1,___flge@ff2+1
  7701  00530A  C19A  F0CB         	movff	atan@val+2,___flge@ff2+2
  7702  00530E  C19B  F0CC         	movff	atan@val+3,___flge@ff2+3
  7703  005312  EC28  F02D         	call	___flge	;wreg free
  7704  005316  0100               	movlb	0	; () banked
  7705  005318  B0D8               	btfsc	status,0,c
  7706  00531A  D002               	goto	u9860
  7707  00531C  0E01               	movlw	1
  7708  00531E  D001               	goto	u9870
  7709  005320                     u9860:
  7710  005320  0E00               	movlw	0
  7711  005322                     u9870:
  7712  005322  0101               	movlb	1	; () banked
  7713  005324  6F93               	movwf	atan@recip& (0+255),b
  7714  005326  0101               	movlb	1	; () banked
  7715  005328  5193               	movf	atan@recip& (0+255),w,b
  7716  00532A  B4D8               	btfsc	status,2,c
  7717  00532C  D01B               	goto	l7484
  7718                           
  7719                           ; BSR set to: 1
  7720  00532E  0E00               	movlw	0
  7721  005330  0100               	movlb	0	; () banked
  7722  005332  6F77               	movwf	___fldiv@b& (0+255),b
  7723  005334  0E00               	movlw	0
  7724  005336  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7725  005338  0E80               	movlw	128
  7726  00533A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7727  00533C  0E3F               	movlw	63
  7728  00533E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7729  005340  C198  F07B         	movff	atan@val,___fldiv@a
  7730  005344  C199  F07C         	movff	atan@val+1,___fldiv@a+1
  7731  005348  C19A  F07D         	movff	atan@val+2,___fldiv@a+2
  7732  00534C  C19B  F07E         	movff	atan@val+3,___fldiv@a+3
  7733  005350  EC59  F021         	call	___fldiv	;wreg free
  7734  005354  C077  F198         	movff	?___fldiv,atan@val
  7735  005358  C078  F199         	movff	?___fldiv+1,atan@val+1
  7736  00535C  C079  F19A         	movff	?___fldiv+2,atan@val+2
  7737  005360  C07A  F19B         	movff	?___fldiv+3,atan@val+3
  7738  005364                     l7484:
  7739  005364  C198  F090         	movff	atan@val,___flmul@b
  7740  005368  C199  F091         	movff	atan@val+1,___flmul@b+1
  7741  00536C  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7742  005370  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7743  005374  C198  F094         	movff	atan@val,___flmul@a
  7744  005378  C199  F095         	movff	atan@val+1,___flmul@a+1
  7745  00537C  C19A  F096         	movff	atan@val+2,___flmul@a+2
  7746  005380  C19B  F097         	movff	atan@val+3,___flmul@a+3
  7747  005384  ECD9  F01A         	call	___flmul	;wreg free
  7748  005388  C090  F194         	movff	?___flmul,atan@val_squared
  7749  00538C  C091  F195         	movff	?___flmul+1,atan@val_squared+1
  7750  005390  C092  F196         	movff	?___flmul+2,atan@val_squared+2
  7751  005394  C093  F197         	movff	?___flmul+3,atan@val_squared+3
  7752  005398  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7753  00539C  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7754  0053A0  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7755  0053A4  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7756  0053A8  0E19               	movlw	low atan@coeff_b
  7757  0053AA  0100               	movlb	0	; () banked
  7758  0053AC  6FC1               	movwf	eval_poly@d& (0+255),b
  7759  0053AE  0E0D               	movlw	high atan@coeff_b
  7760  0053B0  0100               	movlb	0	; () banked
  7761  0053B2  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7762  0053B4  0E00               	movlw	0
  7763  0053B6  0100               	movlb	0	; () banked
  7764  0053B8  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7765  0053BA  0E04               	movlw	4
  7766  0053BC  6FC3               	movwf	eval_poly@n& (0+255),b
  7767  0053BE  EC82  F02E         	call	_eval_poly	;wreg free
  7768  0053C2  C0BD  F18B         	movff	?_eval_poly,atan@y
  7769  0053C6  C0BE  F18C         	movff	?_eval_poly+1,atan@y+1
  7770  0053CA  C0BF  F18D         	movff	?_eval_poly+2,atan@y+2
  7771  0053CE  C0C0  F18E         	movff	?_eval_poly+3,atan@y+3
  7772  0053D2  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7773  0053D6  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7774  0053DA  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7775  0053DE  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7776  0053E2  0E01               	movlw	low atan@coeff_a
  7777  0053E4  0100               	movlb	0	; () banked
  7778  0053E6  6FC1               	movwf	eval_poly@d& (0+255),b
  7779  0053E8  0E0D               	movlw	high atan@coeff_a
  7780  0053EA  0100               	movlb	0	; () banked
  7781  0053EC  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7782  0053EE  0E00               	movlw	0
  7783  0053F0  0100               	movlb	0	; () banked
  7784  0053F2  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7785  0053F4  0E05               	movlw	5
  7786  0053F6  6FC3               	movwf	eval_poly@n& (0+255),b
  7787  0053F8  EC82  F02E         	call	_eval_poly	;wreg free
  7788  0053FC  C0BD  F18F         	movff	?_eval_poly,atan@x
  7789  005400  C0BE  F190         	movff	?_eval_poly+1,atan@x+1
  7790  005404  C0BF  F191         	movff	?_eval_poly+2,atan@x+2
  7791  005408  C0C0  F192         	movff	?_eval_poly+3,atan@x+3
  7792  00540C  C198  F090         	movff	atan@val,___flmul@b
  7793  005410  C199  F091         	movff	atan@val+1,___flmul@b+1
  7794  005414  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7795  005418  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7796  00541C  C18B  F07B         	movff	atan@y,___fldiv@a
  7797  005420  C18C  F07C         	movff	atan@y+1,___fldiv@a+1
  7798  005424  C18D  F07D         	movff	atan@y+2,___fldiv@a+2
  7799  005428  C18E  F07E         	movff	atan@y+3,___fldiv@a+3
  7800  00542C  C18F  F077         	movff	atan@x,___fldiv@b
  7801  005430  C190  F078         	movff	atan@x+1,___fldiv@b+1
  7802  005434  C191  F079         	movff	atan@x+2,___fldiv@b+2
  7803  005438  C192  F07A         	movff	atan@x+3,___fldiv@b+3
  7804  00543C  EC59  F021         	call	___fldiv	;wreg free
  7805  005440  C077  F094         	movff	?___fldiv,___flmul@a
  7806  005444  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7807  005448  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7808  00544C  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7809  005450  ECD9  F01A         	call	___flmul	;wreg free
  7810  005454  C090  F198         	movff	?___flmul,atan@val
  7811  005458  C091  F199         	movff	?___flmul+1,atan@val+1
  7812  00545C  C092  F19A         	movff	?___flmul+2,atan@val+2
  7813  005460  C093  F19B         	movff	?___flmul+3,atan@val+3
  7814  005464  0101               	movlb	1	; () banked
  7815  005466  5193               	movf	atan@recip& (0+255),w,b
  7816  005468  0101               	movlb	1	; () banked
  7817  00546A  B4D8               	btfsc	status,2,c
  7818  00546C  D025               	goto	l7496
  7819                           
  7820                           ; BSR set to: 1
  7821  00546E  C198  F0BD         	movff	atan@val,___flneg@f1
  7822  005472  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7823  005476  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7824  00547A  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7825  00547E  ECDE  F032         	call	___flneg	;wreg free
  7826  005482  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7827  005486  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7828  00548A  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7829  00548E  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7830  005492  0EDB               	movlw	219
  7831  005494  0100               	movlb	0	; () banked
  7832  005496  6FAD               	movwf	___fladd@a& (0+255),b
  7833  005498  0E0F               	movlw	15
  7834  00549A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7835  00549C  0EC9               	movlw	201
  7836  00549E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7837  0054A0  0E3F               	movlw	63
  7838  0054A2  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7839  0054A4  EC85  F018         	call	___fladd	;wreg free
  7840  0054A8  C0A9  F198         	movff	?___fladd,atan@val
  7841  0054AC  C0AA  F199         	movff	?___fladd+1,atan@val+1
  7842  0054B0  C0AB  F19A         	movff	?___fladd+2,atan@val+2
  7843  0054B4  C0AC  F19B         	movff	?___fladd+3,atan@val+3
  7844  0054B8                     l7496:
  7845  0054B8  0100               	movlb	0	; () banked
  7846  0054BA  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7847  0054BC  D009               	goto	l7500
  7848                           
  7849                           ; BSR set to: 0
  7850  0054BE  C198  F0D1         	movff	atan@val,?_atan
  7851  0054C2  C199  F0D2         	movff	atan@val+1,?_atan+1
  7852  0054C6  C19A  F0D3         	movff	atan@val+2,?_atan+2
  7853  0054CA  C19B  F0D4         	movff	atan@val+3,?_atan+3
  7854  0054CE  0012               	return	
  7855  0054D0                     l7500:
  7856                           
  7857                           ; BSR set to: 0
  7858  0054D0  C198  F0BD         	movff	atan@val,___flneg@f1
  7859  0054D4  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7860  0054D8  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7861  0054DC  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7862  0054E0  ECDE  F032         	call	___flneg	;wreg free
  7863  0054E4  C0BD  F0D1         	movff	?___flneg,?_atan
  7864  0054E8  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7865  0054EC  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7866  0054F0  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7867  0054F4  0012               	return	
  7868  0054F6                     __end_of_atan:
  7869                           	opt stack 0
  7870                           tblptru	equ	0xFF8
  7871                           tblptrh	equ	0xFF7
  7872                           tblptrl	equ	0xFF6
  7873                           tablat	equ	0xFF5
  7874                           postinc0	equ	0xFEE
  7875                           wreg	equ	0xFE8
  7876                           postdec1	equ	0xFE5
  7877                           fsr1l	equ	0xFE1
  7878                           indf2	equ	0xFDF
  7879                           postinc2	equ	0xFDE
  7880                           postdec2	equ	0xFDD
  7881                           fsr2h	equ	0xFDA
  7882                           fsr2l	equ	0xFD9
  7883                           status	equ	0xFD8
  7884                           
  7885 ;; *************** function _fabs *****************
  7886 ;; Defined at:
  7887 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  d               4   97[BANK0 ] unsigned char 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  4   97[BANK0 ] unsigned char 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;Total ram usage:        4 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    5
  7908 ;; This function calls:
  7909 ;;		___flneg
  7910 ;; This function is called by:
  7911 ;;		_asin
  7912 ;;		_atan
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text19
  7917  006544                     __ptext19:
  7918                           	opt stack 0
  7919  006544                     _fabs:
  7920                           	opt stack 22
  7921                           
  7922                           ;incstack = 0
  7923  006544  0100               	movlb	0	; () banked
  7924  006546  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7925  006548  D013               	goto	l1090
  7926                           
  7927                           ; BSR set to: 0
  7928  00654A  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7929  00654E  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7930  006552  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7931  006556  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7932  00655A  ECDE  F032         	call	___flneg	;wreg free
  7933  00655E  C0BD  F0C1         	movff	?___flneg,?_fabs
  7934  006562  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7935  006566  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7936  00656A  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7937  00656E  0012               	return	
  7938  006570                     l1090:
  7939                           
  7940                           ; BSR set to: 0
  7941  006570  C0C1  F0C1         	movff	fabs@d,?_fabs
  7942  006574  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7943  006578  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7944  00657C  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7945  006580  0012               	return		;funcret
  7946  006582                     __end_of_fabs:
  7947                           	opt stack 0
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           postinc0	equ	0xFEE
  7953                           wreg	equ	0xFE8
  7954                           postdec1	equ	0xFE5
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function ___flneg *****************
  7964 ;; Defined at:
  7965 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  f1              4   93[BANK0 ] unsigned char 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  4   93[BANK0 ] unsigned char 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;Total ram usage:        4 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    4
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_park_routine
  7990 ;;		_matematica
  7991 ;;		_asin
  7992 ;;		_atan
  7993 ;;		_fabs
  7994 ;;		_sin
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text20
  7999  0065BC                     __ptext20:
  8000                           	opt stack 0
  8001  0065BC                     ___flneg:
  8002                           	opt stack 22
  8003                           
  8004                           ;incstack = 0
  8005  0065BC  0100               	movlb	0	; () banked
  8006  0065BE  51BD               	movf	___flneg@f1& (0+255),w,b
  8007  0065C0  0100               	movlb	0	; () banked
  8008  0065C2  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8009  0065C4  0100               	movlb	0	; () banked
  8010  0065C6  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8011  0065C8  0100               	movlb	0	; () banked
  8012  0065CA  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8013  0065CC  B4D8               	btfsc	status,2,c
  8014  0065CE  D009               	goto	l7074
  8015                           
  8016                           ; BSR set to: 0
  8017  0065D0  0E00               	movlw	0
  8018  0065D2  0100               	movlb	0	; () banked
  8019  0065D4  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8020  0065D6  0E00               	movlw	0
  8021  0065D8  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8022  0065DA  0E00               	movlw	0
  8023  0065DC  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8024  0065DE  0E80               	movlw	128
  8025  0065E0  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8026  0065E2                     l7074:
  8027                           
  8028                           ; BSR set to: 0
  8029  0065E2  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8030  0065E6  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8031  0065EA  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8032  0065EE  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8033  0065F2  0012               	return	
  8034  0065F4                     __end_of___flneg:
  8035                           	opt stack 0
  8036                           tblptru	equ	0xFF8
  8037                           tblptrh	equ	0xFF7
  8038                           tblptrl	equ	0xFF6
  8039                           tablat	equ	0xFF5
  8040                           postinc0	equ	0xFEE
  8041                           wreg	equ	0xFE8
  8042                           postdec1	equ	0xFE5
  8043                           fsr1l	equ	0xFE1
  8044                           indf2	equ	0xFDF
  8045                           postinc2	equ	0xFDE
  8046                           postdec2	equ	0xFDD
  8047                           fsr2h	equ	0xFDA
  8048                           fsr2l	equ	0xFD9
  8049                           status	equ	0xFD8
  8050                           
  8051 ;; *************** function _eval_poly *****************
  8052 ;; Defined at:
  8053 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  x               4   93[BANK0 ] unsigned char 
  8056 ;;  d               2   97[BANK0 ] PTR const 
  8057 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8058 ;;  n               2   99[BANK0 ] int 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  res             4  105[BANK0 ] int 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  4   93[BANK0 ] int 
  8063 ;; Registers used:
  8064 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8070 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;Total ram usage:       16 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:    5
  8077 ;; This function calls:
  8078 ;;		___fladd
  8079 ;;		___flmul
  8080 ;; This function is called by:
  8081 ;;		_atan
  8082 ;;		_sin
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text21
  8087  005D04                     __ptext21:
  8088                           	opt stack 0
  8089  005D04                     _eval_poly:
  8090                           	opt stack 21
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;incstack = 0
  8094  005D04  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8095  005D08  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8096  005D0C  0100               	movlb	0	; () banked
  8097  005D0E  90D8               	bcf	status,0,c
  8098  005D10  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8099  005D12  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8100  005D14  0100               	movlb	0	; () banked
  8101  005D16  90D8               	bcf	status,0,c
  8102  005D18  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8103  005D1A  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8104  005D1C  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8105  005D20  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8106  005D24  0100               	movlb	0	; () banked
  8107  005D26  51C5               	movf	??_eval_poly& (0+255),w,b
  8108  005D28  0100               	movlb	0	; () banked
  8109  005D2A  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8110  005D2C  0100               	movlb	0	; () banked
  8111  005D2E  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8112  005D30  0100               	movlb	0	; () banked
  8113  005D32  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8114  005D34  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8115  005D38  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8116  005D3C                     	if	0	;tblptru may be non-zero
  8117  005D3C                     	endif
  8118  005D3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8119  005D3C  0E00               	movlw	low (__mediumconst shr (0+16))
  8120  005D3E  6EF8               	movwf	tblptru,c
  8121  005D40                     	endif
  8122  005D40  0009               	tblrd		*+
  8123  005D42  CFF5 F0C9          	movff	tablat,eval_poly@res
  8124  005D46  0009               	tblrd		*+
  8125  005D48  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8126  005D4C  0009               	tblrd		*+
  8127  005D4E  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8128  005D52  000A               	tblrd		*-
  8129  005D54  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8130  005D58  D052               	goto	l7332
  8131  005D5A                     l7330:
  8132                           
  8133                           ; BSR set to: 0
  8134  005D5A  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8135  005D5E  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8136  005D62  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8137  005D66  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8138  005D6A  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8139  005D6E  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8140  005D72  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8141  005D76  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8142  005D7A  ECD9  F01A         	call	___flmul	;wreg free
  8143  005D7E  C090  F0A9         	movff	?___flmul,___fladd@b
  8144  005D82  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8145  005D86  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8146  005D8A  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8147  005D8E  0100               	movlb	0	; () banked
  8148  005D90  07C3               	decf	eval_poly@n& (0+255),f,b
  8149  005D92  A0D8               	btfss	status,0,c
  8150  005D94  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8151  005D96  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8152  005D9A  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8153  005D9E  0100               	movlb	0	; () banked
  8154  005DA0  90D8               	bcf	status,0,c
  8155  005DA2  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8156  005DA4  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8157  005DA6  0100               	movlb	0	; () banked
  8158  005DA8  90D8               	bcf	status,0,c
  8159  005DAA  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8160  005DAC  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8161  005DAE  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8162  005DB2  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8163  005DB6  0100               	movlb	0	; () banked
  8164  005DB8  51C5               	movf	??_eval_poly& (0+255),w,b
  8165  005DBA  0100               	movlb	0	; () banked
  8166  005DBC  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8167  005DBE  0100               	movlb	0	; () banked
  8168  005DC0  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8169  005DC2  0100               	movlb	0	; () banked
  8170  005DC4  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8171  005DC6  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8172  005DCA  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8173  005DCE                     	if	0	;tblptru may be non-zero
  8174  005DCE                     	endif
  8175  005DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8176  005DCE  0E00               	movlw	low (__mediumconst shr (0+16))
  8177  005DD0  6EF8               	movwf	tblptru,c
  8178  005DD2                     	endif
  8179  005DD2  0009               	tblrd		*+
  8180  005DD4  CFF5 F0AD          	movff	tablat,___fladd@a
  8181  005DD8  0009               	tblrd		*+
  8182  005DDA  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8183  005DDE  0009               	tblrd		*+
  8184  005DE0  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8185  005DE4  000A               	tblrd		*-
  8186  005DE6  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8187  005DEA  EC85  F018         	call	___fladd	;wreg free
  8188  005DEE  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8189  005DF2  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8190  005DF6  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8191  005DFA  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8192  005DFE                     l7332:
  8193  005DFE  0100               	movlb	0	; () banked
  8194  005E00  51C3               	movf	eval_poly@n& (0+255),w,b
  8195  005E02  0100               	movlb	0	; () banked
  8196  005E04  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8197  005E06  A4D8               	btfss	status,2,c
  8198  005E08  D7A8               	goto	l7330
  8199                           
  8200                           ; BSR set to: 0
  8201  005E0A  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8202  005E0E  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8203  005E12  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8204  005E16  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8205                           
  8206                           ; BSR set to: 0
  8207  005E1A  0012               	return		;funcret
  8208  005E1C                     __end_of_eval_poly:
  8209                           	opt stack 0
  8210                           tblptru	equ	0xFF8
  8211                           tblptrh	equ	0xFF7
  8212                           tblptrl	equ	0xFF6
  8213                           tablat	equ	0xFF5
  8214                           postinc0	equ	0xFEE
  8215                           wreg	equ	0xFE8
  8216                           postdec1	equ	0xFE5
  8217                           fsr1l	equ	0xFE1
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function ___flmul *****************
  8226 ;; Defined at:
  8227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  b               4   48[BANK0 ] int 
  8230 ;;  a               4   52[BANK0 ] int 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  prod            4   67[BANK0 ] struct .
  8233 ;;  grs             4   62[BANK0 ] unsigned long 
  8234 ;;  temp            2   71[BANK0 ] struct .
  8235 ;;  bexp            1   66[BANK0 ] unsigned char 
  8236 ;;  aexp            1   61[BANK0 ] unsigned char 
  8237 ;;  sign            1   60[BANK0 ] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  4   48[BANK0 ] unsigned char 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0, prodl, prodh
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8247 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;Total ram usage:       25 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    4
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_parallelo
  8258 ;;		_matematica
  8259 ;;		_asin
  8260 ;;		_atan
  8261 ;;		_eval_poly
  8262 ;;		_sin
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text22
  8267  0035B2                     __ptext22:
  8268                           	opt stack 0
  8269  0035B2                     ___flmul:
  8270                           	opt stack 21
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;incstack = 0
  8274  0035B2  0100               	movlb	0	; () banked
  8275  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8276  0035B6  0B80               	andlw	128
  8277  0035B8  0100               	movlb	0	; () banked
  8278  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8279  0035BC  0100               	movlb	0	; () banked
  8280  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8281  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8282  0035C2  0100               	movlb	0	; () banked
  8283  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8284                           
  8285                           ; BSR set to: 0
  8286  0035C6  0100               	movlb	0	; () banked
  8287  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8288  0035CA  D002               	goto	l6924
  8289                           
  8290                           ; BSR set to: 0
  8291  0035CC  0100               	movlb	0	; () banked
  8292  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8293  0035D0                     l6924:
  8294                           
  8295                           ; BSR set to: 0
  8296  0035D0  0100               	movlb	0	; () banked
  8297  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8298  0035D4  0100               	movlb	0	; () banked
  8299  0035D6  B4D8               	btfsc	status,2,c
  8300  0035D8  D010               	goto	l6932
  8301                           
  8302                           ; BSR set to: 0
  8303  0035DA  0100               	movlb	0	; () banked
  8304  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8305  0035DE  A4D8               	btfss	status,2,c
  8306  0035E0  D009               	goto	l6930
  8307                           
  8308                           ; BSR set to: 0
  8309  0035E2  0E00               	movlw	0
  8310  0035E4  0100               	movlb	0	; () banked
  8311  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8312  0035E8  0E00               	movlw	0
  8313  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8314  0035EC  0E00               	movlw	0
  8315  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8316  0035F0  0E00               	movlw	0
  8317  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8318  0035F4                     l6930:
  8319                           
  8320                           ; BSR set to: 0
  8321  0035F4  0100               	movlb	0	; () banked
  8322  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8323  0035F8  D009               	goto	l6934
  8324  0035FA                     l6932:
  8325                           
  8326                           ; BSR set to: 0
  8327  0035FA  0E00               	movlw	0
  8328  0035FC  0100               	movlb	0	; () banked
  8329  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8330  003600  0E00               	movlw	0
  8331  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8332  003604  0E00               	movlw	0
  8333  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8334  003608  0E00               	movlw	0
  8335  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8336  00360C                     l6934:
  8337                           
  8338                           ; BSR set to: 0
  8339  00360C  0100               	movlb	0	; () banked
  8340  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8341  003610  0B80               	andlw	128
  8342  003612  0100               	movlb	0	; () banked
  8343  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8344                           
  8345                           ; BSR set to: 0
  8346  003616  0100               	movlb	0	; () banked
  8347  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8348  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8349  00361C  0100               	movlb	0	; () banked
  8350  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8351                           
  8352                           ; BSR set to: 0
  8353  003620  0100               	movlb	0	; () banked
  8354  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8355  003624  D002               	goto	l6942
  8356                           
  8357                           ; BSR set to: 0
  8358  003626  0100               	movlb	0	; () banked
  8359  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8360  00362A                     l6942:
  8361                           
  8362                           ; BSR set to: 0
  8363  00362A  0100               	movlb	0	; () banked
  8364  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8365  00362E  0100               	movlb	0	; () banked
  8366  003630  B4D8               	btfsc	status,2,c
  8367  003632  D010               	goto	l6950
  8368                           
  8369                           ; BSR set to: 0
  8370  003634  0100               	movlb	0	; () banked
  8371  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8372  003638  A4D8               	btfss	status,2,c
  8373  00363A  D009               	goto	l6948
  8374                           
  8375                           ; BSR set to: 0
  8376  00363C  0E00               	movlw	0
  8377  00363E  0100               	movlb	0	; () banked
  8378  003640  6F94               	movwf	___flmul@a& (0+255),b
  8379  003642  0E00               	movlw	0
  8380  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8381  003646  0E00               	movlw	0
  8382  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8383  00364A  0E00               	movlw	0
  8384  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8385  00364E                     l6948:
  8386                           
  8387                           ; BSR set to: 0
  8388  00364E  0100               	movlb	0	; () banked
  8389  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8390  003652  D009               	goto	l1435
  8391  003654                     l6950:
  8392                           
  8393                           ; BSR set to: 0
  8394  003654  0E00               	movlw	0
  8395  003656  0100               	movlb	0	; () banked
  8396  003658  6F94               	movwf	___flmul@a& (0+255),b
  8397  00365A  0E00               	movlw	0
  8398  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8399  00365E  0E00               	movlw	0
  8400  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8401  003662  0E00               	movlw	0
  8402  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8403  003666                     l1435:
  8404                           
  8405                           ; BSR set to: 0
  8406  003666  0100               	movlb	0	; () banked
  8407  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8408  00366A  0100               	movlb	0	; () banked
  8409  00366C  B4D8               	btfsc	status,2,c
  8410  00366E  D005               	goto	l6954
  8411                           
  8412                           ; BSR set to: 0
  8413  003670  0100               	movlb	0	; () banked
  8414  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8415  003674  0100               	movlb	0	; () banked
  8416  003676  A4D8               	btfss	status,2,c
  8417  003678  D00A               	goto	l6958
  8418  00367A                     l6954:
  8419                           
  8420                           ; BSR set to: 0
  8421  00367A  0E00               	movlw	0
  8422  00367C  0100               	movlb	0	; () banked
  8423  00367E  6F90               	movwf	?___flmul& (0+255),b
  8424  003680  0E00               	movlw	0
  8425  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8426  003684  0E00               	movlw	0
  8427  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8428  003688  0E00               	movlw	0
  8429  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8430                           
  8431                           ; BSR set to: 0
  8432  00368C  0012               	return	
  8433  00368E                     l6958:
  8434                           
  8435                           ; BSR set to: 0
  8436  00368E  0100               	movlb	0	; () banked
  8437  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8438  003692  0100               	movlb	0	; () banked
  8439  003694  0390               	mulwf	___flmul@b& (0+255),b
  8440  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8441  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8442                           
  8443                           ; BSR set to: 0
  8444  00369E  0100               	movlb	0	; () banked
  8445  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8446  0036A2  0100               	movlb	0	; () banked
  8447  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8448  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8449  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8450  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453  0036AC  0100               	movlb	0	; () banked
  8454  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8455  0036B0  0100               	movlb	0	; () banked
  8456  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8457  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8458  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8459  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8460  0036BA  0100               	movlb	0	; () banked
  8461  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8462  0036BE  0100               	movlb	0	; () banked
  8463  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8464  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8465  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8466                           
  8467                           ; BSR set to: 0
  8468  0036CA  0100               	movlb	0	; () banked
  8469  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8470  0036CE  0100               	movlb	0	; () banked
  8471  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8472  0036D2  0E00               	movlw	0
  8473  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8474  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8475  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8476                           
  8477                           ; BSR set to: 0
  8478  0036DA  0100               	movlb	0	; () banked
  8479  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8480  0036DE  0100               	movlb	0	; () banked
  8481  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8482  0036E2  0E00               	movlw	0
  8483  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8484  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8485  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8486  0036EA  0100               	movlb	0	; () banked
  8487  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8488  0036EE  0100               	movlb	0	; () banked
  8489  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8490  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8491  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8492                           
  8493                           ; BSR set to: 0
  8494  0036FA  0100               	movlb	0	; () banked
  8495  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8496  0036FE  0100               	movlb	0	; () banked
  8497  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8498  003702  0E00               	movlw	0
  8499  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8500  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8501  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8502                           
  8503                           ; BSR set to: 0
  8504  00370A  0100               	movlb	0	; () banked
  8505  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8506  00370E  0100               	movlb	0	; () banked
  8507  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8508  003712  0E00               	movlw	0
  8509  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8510  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8511  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8512                           
  8513                           ; BSR set to: 0
  8514  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8515  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8516  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8517  003726  0100               	movlb	0	; () banked
  8518  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8519                           
  8520                           ; BSR set to: 0
  8521  00372A  0100               	movlb	0	; () banked
  8522  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8523  00372E  0100               	movlb	0	; () banked
  8524  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8525  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8526  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8527                           
  8528                           ; BSR set to: 0
  8529  00373A  0100               	movlb	0	; () banked
  8530  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8531  00373E  0100               	movlb	0	; () banked
  8532  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8533  003742  0100               	movlb	0	; () banked
  8534  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8535  003746  0100               	movlb	0	; () banked
  8536  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8537  00374A  0E00               	movlw	0
  8538  00374C  0100               	movlb	0	; () banked
  8539  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8540  003750  0E00               	movlw	0
  8541  003752  0100               	movlb	0	; () banked
  8542  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8543                           
  8544                           ; BSR set to: 0
  8545  003756  0100               	movlb	0	; () banked
  8546  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8547  00375A  0100               	movlb	0	; () banked
  8548  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8549  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8550  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8551                           
  8552                           ; BSR set to: 0
  8553  003766  0100               	movlb	0	; () banked
  8554  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8555  00376A  0100               	movlb	0	; () banked
  8556  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8557  00376E  0100               	movlb	0	; () banked
  8558  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8559  003772  0100               	movlb	0	; () banked
  8560  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8561  003776  0E00               	movlw	0
  8562  003778  0100               	movlb	0	; () banked
  8563  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8564  00377C  0E00               	movlw	0
  8565  00377E  0100               	movlb	0	; () banked
  8566  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8567                           
  8568                           ; BSR set to: 0
  8569  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8570  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8571  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8572  00378E  0100               	movlb	0	; () banked
  8573  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8574  003792  0100               	movlb	0	; () banked
  8575  003794  5194               	movf	___flmul@a& (0+255),w,b
  8576  003796  0100               	movlb	0	; () banked
  8577  003798  0390               	mulwf	___flmul@b& (0+255),b
  8578  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8579  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8580                           
  8581                           ; BSR set to: 0
  8582  0037A2  0100               	movlb	0	; () banked
  8583  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8584  0037A6  0100               	movlb	0	; () banked
  8585  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8586  0037AA  0100               	movlb	0	; () banked
  8587  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8588  0037AE  0100               	movlb	0	; () banked
  8589  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8590  0037B2  0E00               	movlw	0
  8591  0037B4  0100               	movlb	0	; () banked
  8592  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8593  0037B8  0E00               	movlw	0
  8594  0037BA  0100               	movlb	0	; () banked
  8595  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8596                           
  8597                           ; BSR set to: 0
  8598  0037BE  0100               	movlb	0	; () banked
  8599  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8600  0037C2  0100               	movlb	0	; () banked
  8601  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8602  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8603  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8604  0037CE  0100               	movlb	0	; () banked
  8605  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8606  0037D2  0100               	movlb	0	; () banked
  8607  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8608  0037D6  0100               	movlb	0	; () banked
  8609  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8610  0037DA  0100               	movlb	0	; () banked
  8611  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8612  0037DE  0E00               	movlw	0
  8613  0037E0  0100               	movlb	0	; () banked
  8614  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8615  0037E4  0E00               	movlw	0
  8616  0037E6  0100               	movlb	0	; () banked
  8617  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8618                           
  8619                           ; BSR set to: 0
  8620  0037EA  0100               	movlb	0	; () banked
  8621  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8622  0037EE  0100               	movlb	0	; () banked
  8623  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8624  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8625  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8626                           
  8627                           ; BSR set to: 0
  8628  0037FA  0100               	movlb	0	; () banked
  8629  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8630  0037FE  0100               	movlb	0	; () banked
  8631  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8632  003802  0100               	movlb	0	; () banked
  8633  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8634  003806  0100               	movlb	0	; () banked
  8635  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8636  00380A  0E00               	movlw	0
  8637  00380C  0100               	movlb	0	; () banked
  8638  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8639  003810  0E00               	movlw	0
  8640  003812  0100               	movlb	0	; () banked
  8641  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8642  003816  0100               	movlb	0	; () banked
  8643  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8644  00381A  0100               	movlb	0	; () banked
  8645  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8646  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8647  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8648                           
  8649                           ; BSR set to: 0
  8650  003826  0100               	movlb	0	; () banked
  8651  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8652  00382A  0100               	movlb	0	; () banked
  8653  00382C  6F98               	movwf	??___flmul& (0+255),b
  8654  00382E  0100               	movlb	0	; () banked
  8655  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8656  003832  0100               	movlb	0	; () banked
  8657  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8658  003836  0100               	movlb	0	; () banked
  8659  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8660  00383A  0100               	movlb	0	; () banked
  8661  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8662  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8663  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8664  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8665  00384A  0100               	movlb	0	; () banked
  8666  00384C  6B98               	clrf	??___flmul& (0+255),b
  8667  00384E  0100               	movlb	0	; () banked
  8668  003850  5198               	movf	??___flmul& (0+255),w,b
  8669  003852  0100               	movlb	0	; () banked
  8670  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8671  003856  0100               	movlb	0	; () banked
  8672  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8673  00385A  0100               	movlb	0	; () banked
  8674  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8675  00385E  0100               	movlb	0	; () banked
  8676  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8677  003862  0100               	movlb	0	; () banked
  8678  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8679  003866  0100               	movlb	0	; () banked
  8680  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8681  00386A  0100               	movlb	0	; () banked
  8682  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8683                           
  8684                           ; BSR set to: 0
  8685  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8686  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8687  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8688  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8689  00387E  0E19               	movlw	25
  8690  003880  D006               	goto	u9060
  8691  003882                     u9065:
  8692  003882  0100               	movlb	0	; () banked
  8693  003884  90D8               	bcf	status,0,c
  8694  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8695  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8696  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8697  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8698  00388E                     u9060:
  8699  00388E  2EE8               	decfsz	wreg,f,c
  8700  003890  D7F8               	goto	u9065
  8701  003892  0100               	movlb	0	; () banked
  8702  003894  5198               	movf	??___flmul& (0+255),w,b
  8703  003896  0100               	movlb	0	; () banked
  8704  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8705  00389A  0100               	movlb	0	; () banked
  8706  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8707  00389E  0100               	movlb	0	; () banked
  8708  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8709  0038A2  0100               	movlb	0	; () banked
  8710  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8711  0038A6  0100               	movlb	0	; () banked
  8712  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8713  0038AA  0100               	movlb	0	; () banked
  8714  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8715  0038AE  0100               	movlb	0	; () banked
  8716  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8720  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8721  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8722  0038BE  0100               	movlb	0	; () banked
  8723  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8724                           
  8725                           ; BSR set to: 0
  8726  0038C2  0100               	movlb	0	; () banked
  8727  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8728  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8729  0038CA  0100               	movlb	0	; () banked
  8730  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8731  0038CE  0100               	movlb	0	; () banked
  8732  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8733  0038D2  0E00               	movlw	0
  8734  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8735  0038D6  0E82               	movlw	130
  8736  0038D8  0100               	movlb	0	; () banked
  8737  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8738  0038DC  0100               	movlb	0	; () banked
  8739  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8740  0038E0  0EFF               	movlw	255
  8741  0038E2  0100               	movlb	0	; () banked
  8742  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8743  0038E6  0100               	movlb	0	; () banked
  8744  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8745  0038EA  D015               	goto	l7006
  8746  0038EC                     l7000:
  8747                           
  8748                           ; BSR set to: 0
  8749  0038EC  0100               	movlb	0	; () banked
  8750  0038EE  90D8               	bcf	status,0,c
  8751  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8752  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8753  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8754  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8755                           
  8756                           ; BSR set to: 0
  8757  0038F8  0100               	movlb	0	; () banked
  8758  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8759  0038FC  D002               	goto	l1442
  8760                           
  8761                           ; BSR set to: 0
  8762  0038FE  0100               	movlb	0	; () banked
  8763  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8764  003902                     l1442:
  8765                           
  8766                           ; BSR set to: 0
  8767  003902  0100               	movlb	0	; () banked
  8768  003904  90D8               	bcf	status,0,c
  8769  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8770  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8771  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8772  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8773  00390E  0100               	movlb	0	; () banked
  8774  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8775  003912  A0D8               	btfss	status,0,c
  8776  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8777  003916                     l7006:
  8778                           
  8779                           ; BSR set to: 0
  8780  003916  0100               	movlb	0	; () banked
  8781  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8782  00391A  D7E8               	goto	l7000
  8783                           
  8784                           ; BSR set to: 0
  8785                           
  8786                           ; BSR set to: 0
  8787  00391C  0E00               	movlw	0
  8788  00391E  0100               	movlb	0	; () banked
  8789  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8790                           
  8791                           ; BSR set to: 0
  8792  003922  0100               	movlb	0	; () banked
  8793  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8794  003926  D024               	goto	l1444
  8795                           
  8796                           ; BSR set to: 0
  8797  003928  0EFF               	movlw	255
  8798  00392A  0100               	movlb	0	; () banked
  8799  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8800  00392E  0100               	movlb	0	; () banked
  8801  003930  6F98               	movwf	??___flmul& (0+255),b
  8802  003932  0EFF               	movlw	255
  8803  003934  0100               	movlb	0	; () banked
  8804  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8805  003938  0100               	movlb	0	; () banked
  8806  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8807  00393C  0EFF               	movlw	255
  8808  00393E  0100               	movlb	0	; () banked
  8809  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8810  003942  0100               	movlb	0	; () banked
  8811  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8812  003946  0E7F               	movlw	127
  8813  003948  0100               	movlb	0	; () banked
  8814  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8815  00394C  0100               	movlb	0	; () banked
  8816  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8817  003950  0100               	movlb	0	; () banked
  8818  003952  5198               	movf	??___flmul& (0+255),w,b
  8819  003954  0100               	movlb	0	; () banked
  8820  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8821  003958  0100               	movlb	0	; () banked
  8822  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8823  00395C  0100               	movlb	0	; () banked
  8824  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8825  003960  A4D8               	btfss	status,2,c
  8826  003962  D003               	goto	l7016
  8827                           
  8828                           ; BSR set to: 0
  8829                           
  8830                           ; BSR set to: 0
  8831  003964  0100               	movlb	0	; () banked
  8832  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8833  003968  D003               	goto	l1444
  8834  00396A                     l7016:
  8835                           
  8836                           ; BSR set to: 0
  8837  00396A  0E01               	movlw	1
  8838  00396C  0100               	movlb	0	; () banked
  8839  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8840  003970                     l1444:
  8841                           
  8842                           ; BSR set to: 0
  8843  003970  0100               	movlb	0	; () banked
  8844  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8845  003974  0100               	movlb	0	; () banked
  8846  003976  B4D8               	btfsc	status,2,c
  8847  003978  D023               	goto	l7026
  8848                           
  8849                           ; BSR set to: 0
  8850  00397A  0E01               	movlw	1
  8851  00397C  0100               	movlb	0	; () banked
  8852  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8853  003980  0E00               	movlw	0
  8854  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8855  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8856  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8857                           
  8858                           ; BSR set to: 0
  8859  003988  0100               	movlb	0	; () banked
  8860  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8861  00398C  D019               	goto	l7026
  8862                           
  8863                           ; BSR set to: 0
  8864  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8865  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8866  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8867  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8868  00399E  0100               	movlb	0	; () banked
  8869  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8870  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8871  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8872  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8873  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8874  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8875  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8876  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8877  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8878                           
  8879                           ; BSR set to: 0
  8880  0039BA  0100               	movlb	0	; () banked
  8881  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8882  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8883  0039C0                     l7026:
  8884                           
  8885                           ; BSR set to: 0
  8886  0039C0  0100               	movlb	0	; () banked
  8887  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8888  0039C4  D010               	goto	l7030
  8889  0039C6  0100               	movlb	0	; () banked
  8890  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8891  0039CA  E104               	bnz	u9140
  8892  0039CC  0100               	movlb	0	; () banked
  8893  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8894  0039D0  A0D8               	btfss	status,0,c
  8895  0039D2  D009               	goto	l7030
  8896  0039D4                     u9140:
  8897                           
  8898                           ; BSR set to: 0
  8899  0039D4  0E00               	movlw	0
  8900  0039D6  0100               	movlb	0	; () banked
  8901  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8902  0039DA  0E00               	movlw	0
  8903  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8904  0039DE  0E80               	movlw	128
  8905  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8906  0039E2  0E7F               	movlw	127
  8907  0039E4  D02B               	goto	L2
  8908  0039E6                     l7030:
  8909                           
  8910                           ; BSR set to: 0
  8911  0039E6  0100               	movlb	0	; () banked
  8912  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8913  0039EA  D007               	goto	l7032
  8914  0039EC  0100               	movlb	0	; () banked
  8915  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8916  0039F0  E111               	bnz	l1452
  8917  0039F2  0100               	movlb	0	; () banked
  8918  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8919  0039F6  B0D8               	btfsc	status,0,c
  8920  0039F8  D00D               	goto	l1452
  8921  0039FA                     l7032:
  8922                           
  8923                           ; BSR set to: 0
  8924  0039FA  0E00               	movlw	0
  8925  0039FC  0100               	movlb	0	; () banked
  8926  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8927  003A00  0E00               	movlw	0
  8928  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8929  003A04  0E00               	movlw	0
  8930  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8931  003A08  0E00               	movlw	0
  8932  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8933  003A0C  0E00               	movlw	0
  8934  003A0E  0100               	movlb	0	; () banked
  8935  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8936  003A12  D015               	goto	l7042
  8937  003A14                     l1452:
  8938                           
  8939                           ; BSR set to: 0
  8940  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8941                           
  8942                           ; BSR set to: 0
  8943  003A18  0EFF               	movlw	255
  8944  003A1A  0100               	movlb	0	; () banked
  8945  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8946  003A1E  0EFF               	movlw	255
  8947  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8948  003A22  0E7F               	movlw	127
  8949  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8950  003A26  0E00               	movlw	0
  8951  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8952                           
  8953                           ; BSR set to: 0
  8954  003A2A  0100               	movlb	0	; () banked
  8955  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8956  003A2E  D002               	goto	l7040
  8957                           
  8958                           ; BSR set to: 0
  8959  003A30  0100               	movlb	0	; () banked
  8960  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8961  003A34                     l7040:
  8962                           
  8963                           ; BSR set to: 0
  8964  003A34  0100               	movlb	0	; () banked
  8965  003A36  90D8               	bcf	status,0,c
  8966  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8967  003A3A  0100               	movlb	0	; () banked
  8968  003A3C                     L2:
  8969  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8970  003A3E                     l7042:
  8971                           
  8972                           ; BSR set to: 0
  8973  003A3E  0100               	movlb	0	; () banked
  8974  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  8975  003A42  0100               	movlb	0	; () banked
  8976  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8977                           
  8978                           ; BSR set to: 0
  8979  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  8980  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8981  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8982  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8983  003A56  0012               	return	
  8984  003A58                     __end_of___flmul:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           postinc0	equ	0xFEE
  8993                           wreg	equ	0xFE8
  8994                           postdec1	equ	0xFE5
  8995                           fsr1l	equ	0xFE1
  8996                           indf2	equ	0xFDF
  8997                           postinc2	equ	0xFDE
  8998                           postdec2	equ	0xFDD
  8999                           fsr2h	equ	0xFDA
  9000                           fsr2l	equ	0xFD9
  9001                           status	equ	0xFD8
  9002                           
  9003 ;; *************** function ___fladd *****************
  9004 ;; Defined at:
  9005 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  b               4   73[BANK0 ] unsigned char 
  9008 ;;  a               4   77[BANK0 ] unsigned char 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  grs             1   92[BANK0 ] unsigned char 
  9011 ;;  bexp            1   91[BANK0 ] unsigned char 
  9012 ;;  aexp            1   90[BANK0 ] unsigned char 
  9013 ;;  signs           1   89[BANK0 ] unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  4   73[BANK0 ] unsigned char 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;Total ram usage:       20 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    4
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_park_routine
  9034 ;;		_parallelo
  9035 ;;		_matematica
  9036 ;;		_asin
  9037 ;;		_atan
  9038 ;;		_cos
  9039 ;;		_eval_poly
  9040 ;;		_sin
  9041 ;;		___flsub
  9042 ;;		_floor
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text23
  9047  00310A                     __ptext23:
  9048                           	opt stack 0
  9049  00310A                     ___fladd:
  9050                           	opt stack 21
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;incstack = 0
  9054  00310A  0100               	movlb	0	; () banked
  9055  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9056  00310E  0B80               	andlw	128
  9057  003110  0100               	movlb	0	; () banked
  9058  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9059  003114  0100               	movlb	0	; () banked
  9060  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9061  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9062  00311A  0100               	movlb	0	; () banked
  9063  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9064                           
  9065                           ; BSR set to: 0
  9066  00311E  0100               	movlb	0	; () banked
  9067  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9068  003122  D002               	goto	l6722
  9069                           
  9070                           ; BSR set to: 0
  9071  003124  0100               	movlb	0	; () banked
  9072  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9073  003128                     l6722:
  9074                           
  9075                           ; BSR set to: 0
  9076  003128  0100               	movlb	0	; () banked
  9077  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9078  00312C  0100               	movlb	0	; () banked
  9079  00312E  B4D8               	btfsc	status,2,c
  9080  003130  D012               	goto	l6732
  9081                           
  9082                           ; BSR set to: 0
  9083  003132  0100               	movlb	0	; () banked
  9084  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9085  003136  A4D8               	btfss	status,2,c
  9086  003138  D009               	goto	l6728
  9087                           
  9088                           ; BSR set to: 0
  9089  00313A  0E00               	movlw	0
  9090  00313C  0100               	movlb	0	; () banked
  9091  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9092  003140  0E00               	movlw	0
  9093  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9094  003144  0E00               	movlw	0
  9095  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9096  003148  0E00               	movlw	0
  9097  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9098  00314C                     l6728:
  9099                           
  9100                           ; BSR set to: 0
  9101  00314C  0100               	movlb	0	; () banked
  9102  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9103                           
  9104                           ; BSR set to: 0
  9105  003150  0E00               	movlw	0
  9106  003152  0100               	movlb	0	; () banked
  9107  003154  D008               	goto	L3
  9108  003156                     l6732:
  9109                           
  9110                           ; BSR set to: 0
  9111  003156  0E00               	movlw	0
  9112  003158  0100               	movlb	0	; () banked
  9113  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9114  00315C  0E00               	movlw	0
  9115  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9116  003160  0E00               	movlw	0
  9117  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9118  003164  0E00               	movlw	0
  9119  003166                     L3:
  9120  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9121                           
  9122                           ; BSR set to: 0
  9123                           
  9124                           ; BSR set to: 0
  9125  003168  0100               	movlb	0	; () banked
  9126  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9127  00316C  0B80               	andlw	128
  9128  00316E  0100               	movlb	0	; () banked
  9129  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9130                           
  9131                           ; BSR set to: 0
  9132  003172  0100               	movlb	0	; () banked
  9133  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9134  003176  0100               	movlb	0	; () banked
  9135  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9136  00317A  B4D8               	btfsc	status,2,c
  9137  00317C  D002               	goto	l6740
  9138                           
  9139                           ; BSR set to: 0
  9140  00317E  0100               	movlb	0	; () banked
  9141  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9142  003182                     l6740:
  9143                           
  9144                           ; BSR set to: 0
  9145  003182  0100               	movlb	0	; () banked
  9146  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9147  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9148  003188  0100               	movlb	0	; () banked
  9149  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9150                           
  9151                           ; BSR set to: 0
  9152  00318C  0100               	movlb	0	; () banked
  9153  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9154  003190  D002               	goto	l6746
  9155                           
  9156                           ; BSR set to: 0
  9157  003192  0100               	movlb	0	; () banked
  9158  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9159  003196                     l6746:
  9160                           
  9161                           ; BSR set to: 0
  9162  003196  0100               	movlb	0	; () banked
  9163  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9164  00319A  0100               	movlb	0	; () banked
  9165  00319C  B4D8               	btfsc	status,2,c
  9166  00319E  D012               	goto	l6756
  9167                           
  9168                           ; BSR set to: 0
  9169  0031A0  0100               	movlb	0	; () banked
  9170  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9171  0031A4  A4D8               	btfss	status,2,c
  9172  0031A6  D009               	goto	l6752
  9173                           
  9174                           ; BSR set to: 0
  9175  0031A8  0E00               	movlw	0
  9176  0031AA  0100               	movlb	0	; () banked
  9177  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9178  0031AE  0E00               	movlw	0
  9179  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9180  0031B2  0E00               	movlw	0
  9181  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9182  0031B6  0E00               	movlw	0
  9183  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9184  0031BA                     l6752:
  9185                           
  9186                           ; BSR set to: 0
  9187  0031BA  0100               	movlb	0	; () banked
  9188  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9189                           
  9190                           ; BSR set to: 0
  9191  0031BE  0E00               	movlw	0
  9192  0031C0  0100               	movlb	0	; () banked
  9193  0031C2  D008               	goto	L4
  9194  0031C4                     l6756:
  9195                           
  9196                           ; BSR set to: 0
  9197  0031C4  0E00               	movlw	0
  9198  0031C6  0100               	movlb	0	; () banked
  9199  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9200  0031CA  0E00               	movlw	0
  9201  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9202  0031CE  0E00               	movlw	0
  9203  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9204  0031D2  0E00               	movlw	0
  9205  0031D4                     L4:
  9206  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9207                           
  9208                           ; BSR set to: 0
  9209                           
  9210                           ; BSR set to: 0
  9211  0031D6  0100               	movlb	0	; () banked
  9212  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9213  0031DA  0100               	movlb	0	; () banked
  9214  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9215  0031DE  B0D8               	btfsc	status,0,c
  9216  0031E0  D024               	goto	l6794
  9217                           
  9218                           ; BSR set to: 0
  9219  0031E2  0100               	movlb	0	; () banked
  9220  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9221  0031E6  D003               	goto	l6764
  9222                           
  9223                           ; BSR set to: 0
  9224  0031E8  0E80               	movlw	128
  9225  0031EA  0100               	movlb	0	; () banked
  9226  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9227  0031EE                     l6764:
  9228                           
  9229                           ; BSR set to: 0
  9230  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9231                           
  9232                           ; BSR set to: 0
  9233  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9234                           
  9235                           ; BSR set to: 0
  9236  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9237                           
  9238                           ; BSR set to: 0
  9239  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9240                           
  9241                           ; BSR set to: 0
  9242  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9243                           
  9244                           ; BSR set to: 0
  9245  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9246                           
  9247                           ; BSR set to: 0
  9248  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9249                           
  9250                           ; BSR set to: 0
  9251  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9252                           
  9253                           ; BSR set to: 0
  9254  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9255                           
  9256                           ; BSR set to: 0
  9257  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9258                           
  9259                           ; BSR set to: 0
  9260  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9261                           
  9262                           ; BSR set to: 0
  9263  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9264                           
  9265                           ; BSR set to: 0
  9266  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9267                           
  9268                           ; BSR set to: 0
  9269  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9270                           
  9271                           ; BSR set to: 0
  9272  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9273  00322A                     l6794:
  9274                           
  9275                           ; BSR set to: 0
  9276  00322A  0E00               	movlw	0
  9277  00322C  0100               	movlb	0	; () banked
  9278  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9279                           
  9280                           ; BSR set to: 0
  9281  003230  0100               	movlb	0	; () banked
  9282  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9283  003234  0100               	movlb	0	; () banked
  9284  003236  6FB1               	movwf	??___fladd& (0+255),b
  9285  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9286  00323A  0100               	movlb	0	; () banked
  9287  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9288  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9289  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9290  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9291  003244  0100               	movlb	0	; () banked
  9292  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9293  003248  0100               	movlb	0	; () banked
  9294  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9295  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9296  00324E  0100               	movlb	0	; () banked
  9297  003250  51B1               	movf	??___fladd& (0+255),w,b
  9298  003252  0100               	movlb	0	; () banked
  9299  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9300  003256  0100               	movlb	0	; () banked
  9301  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9302  00325A  0100               	movlb	0	; () banked
  9303  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9304  00325E  0100               	movlb	0	; () banked
  9305  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9306  003262  D03D               	goto	l1350
  9307  003264  0100               	movlb	0	; () banked
  9308  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9309  003268  E105               	bnz	u8680
  9310  00326A  0E1A               	movlw	26
  9311  00326C  0100               	movlb	0	; () banked
  9312  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9313  003270  A0D8               	btfss	status,0,c
  9314  003272  D035               	goto	l1350
  9315  003274                     u8680:
  9316                           
  9317                           ; BSR set to: 0
  9318  003274  0100               	movlb	0	; () banked
  9319  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9320  003278  0100               	movlb	0	; () banked
  9321  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9322  00327C  0100               	movlb	0	; () banked
  9323  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9324  003280  0100               	movlb	0	; () banked
  9325  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9326  003284  B4D8               	btfsc	status,2,c
  9327  003286  D002               	goto	u8690
  9328  003288  0E01               	movlw	1
  9329  00328A  D001               	goto	u8700
  9330  00328C                     u8690:
  9331  00328C  0E00               	movlw	0
  9332  00328E                     u8700:
  9333  00328E  0100               	movlb	0	; () banked
  9334  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9335                           
  9336                           ; BSR set to: 0
  9337  003292  0E00               	movlw	0
  9338  003294  0100               	movlb	0	; () banked
  9339  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9340  003298  0E00               	movlw	0
  9341  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9342  00329C  0E00               	movlw	0
  9343  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9344  0032A0  0E00               	movlw	0
  9345  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9349  0032A8  D020               	goto	l1349
  9350  0032AA                     l1351:
  9351                           
  9352                           ; BSR set to: 0
  9353  0032AA  0100               	movlb	0	; () banked
  9354  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9355  0032AE  D007               	goto	l6806
  9356                           
  9357                           ; BSR set to: 0
  9358  0032B0  0100               	movlb	0	; () banked
  9359  0032B2  90D8               	bcf	status,0,c
  9360  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9361  0032B6  0901               	iorlw	1
  9362  0032B8  0100               	movlb	0	; () banked
  9363  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9364  0032BC  D003               	goto	l6808
  9365  0032BE                     l6806:
  9366                           
  9367                           ; BSR set to: 0
  9368  0032BE  0100               	movlb	0	; () banked
  9369  0032C0  90D8               	bcf	status,0,c
  9370  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9371  0032C4                     l6808:
  9372                           
  9373                           ; BSR set to: 0
  9374  0032C4  0100               	movlb	0	; () banked
  9375  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9376  0032C8  D002               	goto	l6812
  9377                           
  9378                           ; BSR set to: 0
  9379  0032CA  0100               	movlb	0	; () banked
  9380  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9381  0032CE                     l6812:
  9382                           
  9383                           ; BSR set to: 0
  9384  0032CE  0100               	movlb	0	; () banked
  9385  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9386  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9387  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9388  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9389  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9390                           
  9391                           ; BSR set to: 0
  9392  0032DA  0100               	movlb	0	; () banked
  9393  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9394  0032DE                     l1350:
  9395                           
  9396                           ; BSR set to: 0
  9397  0032DE  0100               	movlb	0	; () banked
  9398  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9399  0032E2  0100               	movlb	0	; () banked
  9400  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9401  0032E6  A0D8               	btfss	status,0,c
  9402  0032E8  D7E0               	goto	l1351
  9403  0032EA                     l1349:
  9404                           
  9405                           ; BSR set to: 0
  9406  0032EA  0100               	movlb	0	; () banked
  9407  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9408  0032EE  D03F               	goto	l6840
  9409                           
  9410                           ; BSR set to: 0
  9411  0032F0  0100               	movlb	0	; () banked
  9412  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9413  0032F4  0100               	movlb	0	; () banked
  9414  0032F6  A4D8               	btfss	status,2,c
  9415  0032F8  D00A               	goto	l6822
  9416                           
  9417                           ; BSR set to: 0
  9418  0032FA  0E00               	movlw	0
  9419  0032FC  0100               	movlb	0	; () banked
  9420  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9421  003300  0E00               	movlw	0
  9422  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9423  003304  0E00               	movlw	0
  9424  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9425  003308  0E00               	movlw	0
  9426  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9427                           
  9428                           ; BSR set to: 0
  9429  00330C  0012               	return	
  9430  00330E                     l6822:
  9431                           
  9432                           ; BSR set to: 0
  9433  00330E  0100               	movlb	0	; () banked
  9434  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9435  003312  0100               	movlb	0	; () banked
  9436  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9437  003316  0100               	movlb	0	; () banked
  9438  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9439  00331A  0100               	movlb	0	; () banked
  9440  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9441  00331E  0100               	movlb	0	; () banked
  9442  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9443  003322  0100               	movlb	0	; () banked
  9444  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9445  003326  0100               	movlb	0	; () banked
  9446  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9447  00332A  0100               	movlb	0	; () banked
  9448  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9449                           
  9450                           ; BSR set to: 0
  9451  00332E  0100               	movlb	0	; () banked
  9452  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9453  003332  D0CC               	goto	l6876
  9454                           
  9455                           ; BSR set to: 0
  9456  003334  0100               	movlb	0	; () banked
  9457  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9458  003338  D009               	goto	l6830
  9459                           
  9460                           ; BSR set to: 0
  9461  00333A  0100               	movlb	0	; () banked
  9462  00333C  90D8               	bcf	status,0,c
  9463  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9464  003340  0100               	movlb	0	; () banked
  9465  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9466  003344  0901               	iorlw	1
  9467  003346  0100               	movlb	0	; () banked
  9468  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9469  00334A  D003               	goto	l6832
  9470  00334C                     l6830:
  9471                           
  9472                           ; BSR set to: 0
  9473  00334C  0100               	movlb	0	; () banked
  9474  00334E  90D8               	bcf	status,0,c
  9475  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9476  003352                     l6832:
  9477                           
  9478                           ; BSR set to: 0
  9479  003352  0100               	movlb	0	; () banked
  9480  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9481  003356  D002               	goto	l6836
  9482                           
  9483                           ; BSR set to: 0
  9484  003358  0100               	movlb	0	; () banked
  9485  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9486  00335C                     l6836:
  9487                           
  9488                           ; BSR set to: 0
  9489  00335C  0100               	movlb	0	; () banked
  9490  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9491  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9492  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9493  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9494  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9495                           
  9496                           ; BSR set to: 0
  9497  003368  0100               	movlb	0	; () banked
  9498  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9499                           
  9500                           ; BSR set to: 0
  9501  00336C  D0AF               	goto	l6876
  9502  00336E                     l6840:
  9503                           
  9504                           ; BSR set to: 0
  9505  00336E  0100               	movlb	0	; () banked
  9506  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9507  003372  0100               	movlb	0	; () banked
  9508  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9509  003376  0100               	movlb	0	; () banked
  9510  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9511  00337A  0100               	movlb	0	; () banked
  9512  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9513  00337E  0100               	movlb	0	; () banked
  9514  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9515  003382  0100               	movlb	0	; () banked
  9516  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9517  003386  0100               	movlb	0	; () banked
  9518  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9519  00338A  0A80               	xorlw	128
  9520  00338C  0100               	movlb	0	; () banked
  9521  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9522  003390  0100               	movlb	0	; () banked
  9523  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9524  003394  0A80               	xorlw	128
  9525  003396  0100               	movlb	0	; () banked
  9526  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9527  00339A  B0D8               	btfsc	status,0,c
  9528  00339C  D050               	goto	l6850
  9529                           
  9530                           ; BSR set to: 0
  9531  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9532  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9533  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9534  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9535  0033AE  0100               	movlb	0	; () banked
  9536  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9537  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9538  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9539  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9540  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9541  0033BA  0E00               	movlw	0
  9542  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9543  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9544  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9545  0033C2  0100               	movlb	0	; () banked
  9546  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9547  0033C6  0100               	movlb	0	; () banked
  9548  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9549  0033CA  0100               	movlb	0	; () banked
  9550  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9551  0033CE  0100               	movlb	0	; () banked
  9552  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9553  0033D2  0100               	movlb	0	; () banked
  9554  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9555  0033D6  0100               	movlb	0	; () banked
  9556  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9557  0033DA  0100               	movlb	0	; () banked
  9558  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9559  0033DE  0100               	movlb	0	; () banked
  9560  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9561  0033E2  0100               	movlb	0	; () banked
  9562  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9563  0033E6  0100               	movlb	0	; () banked
  9564  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9565  0033EA  0100               	movlb	0	; () banked
  9566  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9567  0033EE  0100               	movlb	0	; () banked
  9568  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9569  0033F2  0EFF               	movlw	255
  9570  0033F4  0100               	movlb	0	; () banked
  9571  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9572  0033F8  0100               	movlb	0	; () banked
  9573  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9574  0033FC  0EFF               	movlw	255
  9575  0033FE  0100               	movlb	0	; () banked
  9576  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9577  003402  0100               	movlb	0	; () banked
  9578  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9579  003406  0EFF               	movlw	255
  9580  003408  0100               	movlb	0	; () banked
  9581  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9582  00340C  0100               	movlb	0	; () banked
  9583  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9584  003410  0EFF               	movlw	255
  9585  003412  0100               	movlb	0	; () banked
  9586  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9587  003416  0100               	movlb	0	; () banked
  9588  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9589  00341A  0E80               	movlw	128
  9590  00341C  0100               	movlb	0	; () banked
  9591  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9592                           
  9593                           ; BSR set to: 0
  9594  003420  0100               	movlb	0	; () banked
  9595  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9596                           
  9597                           ; BSR set to: 0
  9598  003424  0100               	movlb	0	; () banked
  9599  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9600  003428  0100               	movlb	0	; () banked
  9601  00342A  A4D8               	btfss	status,2,c
  9602  00342C  D018               	goto	l1366
  9603                           
  9604                           ; BSR set to: 0
  9605  00342E  0E01               	movlw	1
  9606  003430  0100               	movlb	0	; () banked
  9607  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9608  003434  0E00               	movlw	0
  9609  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9610  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9611  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614  00343C  D010               	goto	l1366
  9615  00343E                     l6850:
  9616                           
  9617                           ; BSR set to: 0
  9618  00343E  0100               	movlb	0	; () banked
  9619  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9620  003442  0100               	movlb	0	; () banked
  9621  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9622  003446  0100               	movlb	0	; () banked
  9623  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9624  00344A  0100               	movlb	0	; () banked
  9625  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9626  00344E  0100               	movlb	0	; () banked
  9627  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9628  003452  0100               	movlb	0	; () banked
  9629  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9630  003456  0100               	movlb	0	; () banked
  9631  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9632  00345A  0100               	movlb	0	; () banked
  9633  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9634  00345E                     l1366:
  9635                           
  9636                           ; BSR set to: 0
  9637  00345E  0100               	movlb	0	; () banked
  9638  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9639  003462  0100               	movlb	0	; () banked
  9640  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9641  003466  0100               	movlb	0	; () banked
  9642  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9643  00346A  0100               	movlb	0	; () banked
  9644  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9645  00346E  A4D8               	btfss	status,2,c
  9646  003470  D02A               	goto	l6874
  9647                           
  9648                           ; BSR set to: 0
  9649  003472  0100               	movlb	0	; () banked
  9650  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9651  003476  0100               	movlb	0	; () banked
  9652  003478  A4D8               	btfss	status,2,c
  9653  00347A  D025               	goto	l6874
  9654                           
  9655                           ; BSR set to: 0
  9656  00347C  0E00               	movlw	0
  9657  00347E  0100               	movlb	0	; () banked
  9658  003480  6FA9               	movwf	?___fladd& (0+255),b
  9659  003482  0E00               	movlw	0
  9660  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9661  003486  0E00               	movlw	0
  9662  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9663  00348A  0E00               	movlw	0
  9664  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9665                           
  9666                           ; BSR set to: 0
  9667  00348E  0012               	return	
  9668  003490                     l6858:
  9669                           
  9670                           ; BSR set to: 0
  9671  003490  0100               	movlb	0	; () banked
  9672  003492  90D8               	bcf	status,0,c
  9673  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9674  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9675  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9676  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9677                           
  9678                           ; BSR set to: 0
  9679  00349C  0100               	movlb	0	; () banked
  9680  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9681  0034A0  D002               	goto	l6864
  9682                           
  9683                           ; BSR set to: 0
  9684  0034A2  0100               	movlb	0	; () banked
  9685  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9686  0034A6                     l6864:
  9687                           
  9688                           ; BSR set to: 0
  9689  0034A6  0100               	movlb	0	; () banked
  9690  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9691  0034AA  D003               	goto	l6868
  9692                           
  9693                           ; BSR set to: 0
  9694  0034AC  80D8               	bsf	status,0,c
  9695  0034AE  0100               	movlb	0	; () banked
  9696  0034B0  D002               	goto	L5
  9697  0034B2                     l6868:
  9698                           
  9699                           ; BSR set to: 0
  9700  0034B2  0100               	movlb	0	; () banked
  9701  0034B4  90D8               	bcf	status,0,c
  9702  0034B6                     L5:
  9703  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9704                           
  9705                           ; BSR set to: 0
  9706                           
  9707                           ; BSR set to: 0
  9708  0034B8  0100               	movlb	0	; () banked
  9709  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9710  0034BC  0100               	movlb	0	; () banked
  9711  0034BE  B4D8               	btfsc	status,2,c
  9712  0034C0  D002               	goto	l6874
  9713                           
  9714                           ; BSR set to: 0
  9715  0034C2  0100               	movlb	0	; () banked
  9716  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9717  0034C6                     l6874:
  9718                           
  9719                           ; BSR set to: 0
  9720  0034C6  0100               	movlb	0	; () banked
  9721  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9722  0034CA  D7E2               	goto	l6858
  9723  0034CC                     l6876:
  9724                           
  9725                           ; BSR set to: 0
  9726  0034CC  0E00               	movlw	0
  9727  0034CE  0100               	movlb	0	; () banked
  9728  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9729                           
  9730                           ; BSR set to: 0
  9731  0034D2  0100               	movlb	0	; () banked
  9732  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9733  0034D6  D00D               	goto	l1375
  9734                           
  9735                           ; BSR set to: 0
  9736  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9737  0034DC  0E7F               	movlw	127
  9738  0034DE  0100               	movlb	0	; () banked
  9739  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9740  0034E2  A4D8               	btfss	status,2,c
  9741  0034E4  D003               	goto	l6884
  9742                           
  9743                           ; BSR set to: 0
  9744                           
  9745                           ; BSR set to: 0
  9746  0034E6  0100               	movlb	0	; () banked
  9747  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9748  0034EA  D003               	goto	l1375
  9749  0034EC                     l6884:
  9750                           
  9751                           ; BSR set to: 0
  9752  0034EC  0E01               	movlw	1
  9753  0034EE  0100               	movlb	0	; () banked
  9754  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9755  0034F2                     l1375:
  9756                           
  9757                           ; BSR set to: 0
  9758  0034F2  0100               	movlb	0	; () banked
  9759  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9760  0034F6  0100               	movlb	0	; () banked
  9761  0034F8  B4D8               	btfsc	status,2,c
  9762  0034FA  D026               	goto	l6894
  9763                           
  9764                           ; BSR set to: 0
  9765  0034FC  0E01               	movlw	1
  9766  0034FE  0100               	movlb	0	; () banked
  9767  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9768  003502  0E00               	movlw	0
  9769  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9770  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9771  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9772                           
  9773                           ; BSR set to: 0
  9774  00350A  0100               	movlb	0	; () banked
  9775  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9776  00350E  D01C               	goto	l6894
  9777                           
  9778                           ; BSR set to: 0
  9779  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9780  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9781  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9782  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9783  003520  0100               	movlb	0	; () banked
  9784  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9785  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9786  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9787  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9788  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9789  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9790  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9791  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9792  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9793  00353C  0100               	movlb	0	; () banked
  9794  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9795  003540  B4D8               	btfsc	status,2,c
  9796  003542  D002               	goto	l6894
  9797                           
  9798                           ; BSR set to: 0
  9799  003544  0100               	movlb	0	; () banked
  9800  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9801  003548                     l6894:
  9802                           
  9803                           ; BSR set to: 0
  9804  003548  0100               	movlb	0	; () banked
  9805  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9806  00354C  B4D8               	btfsc	status,2,c
  9807  00354E  D005               	goto	l6898
  9808                           
  9809                           ; BSR set to: 0
  9810  003550  0100               	movlb	0	; () banked
  9811  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9812  003554  0100               	movlb	0	; () banked
  9813  003556  A4D8               	btfss	status,2,c
  9814  003558  D011               	goto	l6902
  9815  00355A                     l6898:
  9816                           
  9817                           ; BSR set to: 0
  9818  00355A  0E00               	movlw	0
  9819  00355C  0100               	movlb	0	; () banked
  9820  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9821  003560  0E00               	movlw	0
  9822  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9823  003564  0E00               	movlw	0
  9824  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9825  003568  0E00               	movlw	0
  9826  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9827  00356C  0100               	movlb	0	; () banked
  9828  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9829  003570  0100               	movlb	0	; () banked
  9830  003572  A4D8               	btfss	status,2,c
  9831  003574  D003               	goto	l6902
  9832                           
  9833                           ; BSR set to: 0
  9834  003576  0E00               	movlw	0
  9835  003578  0100               	movlb	0	; () banked
  9836  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9837  00357C                     l6902:
  9838                           
  9839                           ; BSR set to: 0
  9840  00357C  0100               	movlb	0	; () banked
  9841  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9842  003580  D003               	goto	l6906
  9843                           
  9844                           ; BSR set to: 0
  9845  003582  0100               	movlb	0	; () banked
  9846  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9847  003586  D002               	goto	l6908
  9848  003588                     l6906:
  9849                           
  9850                           ; BSR set to: 0
  9851  003588  0100               	movlb	0	; () banked
  9852  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9853  00358C                     l6908:
  9854                           
  9855                           ; BSR set to: 0
  9856  00358C  0100               	movlb	0	; () banked
  9857  00358E  90D8               	bcf	status,0,c
  9858  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9859  003592  0100               	movlb	0	; () banked
  9860  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9861                           
  9862                           ; BSR set to: 0
  9863  003596  0100               	movlb	0	; () banked
  9864  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9865  00359A  D002               	goto	l6914
  9866                           
  9867                           ; BSR set to: 0
  9868  00359C  0100               	movlb	0	; () banked
  9869  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9870  0035A0                     l6914:
  9871                           
  9872                           ; BSR set to: 0
  9873  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9874  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9875  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9876  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9877  0035B0  0012               	return	
  9878  0035B2                     __end_of___fladd:
  9879                           	opt stack 0
  9880                           tblptru	equ	0xFF8
  9881                           tblptrh	equ	0xFF7
  9882                           tblptrl	equ	0xFF6
  9883                           tablat	equ	0xFF5
  9884                           prodh	equ	0xFF4
  9885                           prodl	equ	0xFF3
  9886                           postinc0	equ	0xFEE
  9887                           wreg	equ	0xFE8
  9888                           postdec1	equ	0xFE5
  9889                           fsr1l	equ	0xFE1
  9890                           indf2	equ	0xFDF
  9891                           postinc2	equ	0xFDE
  9892                           postdec2	equ	0xFDD
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8
  9896                           
  9897 ;; *************** function ___flge *****************
  9898 ;; Defined at:
  9899 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  ff1             4  101[BANK0 ] unsigned char 
  9902 ;;  ff2             4  105[BANK0 ] unsigned char 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;		None               void
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9914 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;Total ram usage:       12 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; Hardware stack levels required when called:    4
  9921 ;; This function calls:
  9922 ;;		Nothing
  9923 ;; This function is called by:
  9924 ;;		_parallelo
  9925 ;;		_asin
  9926 ;;		_atan
  9927 ;;		_cos
  9928 ;;		_sin
  9929 ;;		_floor
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text24
  9934  005A50                     __ptext24:
  9935                           	opt stack 0
  9936  005A50                     ___flge:
  9937                           	opt stack 22
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;incstack = 0
  9941  005A50  0E00               	movlw	0
  9942  005A52  0100               	movlb	0	; () banked
  9943  005A54  15C5               	andwf	___flge@ff1& (0+255),w,b
  9944  005A56  0100               	movlb	0	; () banked
  9945  005A58  6FCD               	movwf	??___flge& (0+255),b
  9946  005A5A  0E00               	movlw	0
  9947  005A5C  0100               	movlb	0	; () banked
  9948  005A5E  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9949  005A60  0100               	movlb	0	; () banked
  9950  005A62  6FCE               	movwf	(??___flge+1)& (0+255),b
  9951  005A64  0E80               	movlw	128
  9952  005A66  0100               	movlb	0	; () banked
  9953  005A68  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9954  005A6A  0100               	movlb	0	; () banked
  9955  005A6C  6FCF               	movwf	(??___flge+2)& (0+255),b
  9956  005A6E  0E7F               	movlw	127
  9957  005A70  0100               	movlb	0	; () banked
  9958  005A72  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9959  005A74  0100               	movlb	0	; () banked
  9960  005A76  6FD0               	movwf	(??___flge+3)& (0+255),b
  9961  005A78  0100               	movlb	0	; () banked
  9962  005A7A  51CD               	movf	??___flge& (0+255),w,b
  9963  005A7C  0100               	movlb	0	; () banked
  9964  005A7E  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9965  005A80  0100               	movlb	0	; () banked
  9966  005A82  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9967  005A84  0100               	movlb	0	; () banked
  9968  005A86  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9969  005A88  A4D8               	btfss	status,2,c
  9970  005A8A  D009               	goto	l7052
  9971                           
  9972                           ; BSR set to: 0
  9973  005A8C  0E00               	movlw	0
  9974  005A8E  0100               	movlb	0	; () banked
  9975  005A90  6FC5               	movwf	___flge@ff1& (0+255),b
  9976  005A92  0E00               	movlw	0
  9977  005A94  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9978  005A96  0E00               	movlw	0
  9979  005A98  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9980  005A9A  0E00               	movlw	0
  9981  005A9C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9982  005A9E                     l7052:
  9983                           
  9984                           ; BSR set to: 0
  9985  005A9E  0E00               	movlw	0
  9986  005AA0  0100               	movlb	0	; () banked
  9987  005AA2  15C9               	andwf	___flge@ff2& (0+255),w,b
  9988  005AA4  0100               	movlb	0	; () banked
  9989  005AA6  6FCD               	movwf	??___flge& (0+255),b
  9990  005AA8  0E00               	movlw	0
  9991  005AAA  0100               	movlb	0	; () banked
  9992  005AAC  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9993  005AAE  0100               	movlb	0	; () banked
  9994  005AB0  6FCE               	movwf	(??___flge+1)& (0+255),b
  9995  005AB2  0E80               	movlw	128
  9996  005AB4  0100               	movlb	0	; () banked
  9997  005AB6  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
  9998  005AB8  0100               	movlb	0	; () banked
  9999  005ABA  6FCF               	movwf	(??___flge+2)& (0+255),b
 10000  005ABC  0E7F               	movlw	127
 10001  005ABE  0100               	movlb	0	; () banked
 10002  005AC0  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10003  005AC2  0100               	movlb	0	; () banked
 10004  005AC4  6FD0               	movwf	(??___flge+3)& (0+255),b
 10005  005AC6  0100               	movlb	0	; () banked
 10006  005AC8  51CD               	movf	??___flge& (0+255),w,b
 10007  005ACA  0100               	movlb	0	; () banked
 10008  005ACC  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10009  005ACE  0100               	movlb	0	; () banked
 10010  005AD0  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10011  005AD2  0100               	movlb	0	; () banked
 10012  005AD4  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10013  005AD6  A4D8               	btfss	status,2,c
 10014  005AD8  D009               	goto	l7056
 10015                           
 10016                           ; BSR set to: 0
 10017  005ADA  0E00               	movlw	0
 10018  005ADC  0100               	movlb	0	; () banked
 10019  005ADE  6FC9               	movwf	___flge@ff2& (0+255),b
 10020  005AE0  0E00               	movlw	0
 10021  005AE2  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10022  005AE4  0E00               	movlw	0
 10023  005AE6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10024  005AE8  0E00               	movlw	0
 10025  005AEA  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10026  005AEC                     l7056:
 10027                           
 10028                           ; BSR set to: 0
 10029  005AEC  0100               	movlb	0	; () banked
 10030  005AEE  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10031  005AF0  D026               	goto	l7060
 10032                           
 10033                           ; BSR set to: 0
 10034  005AF2  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10035  005AF6  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10036  005AFA  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10037  005AFE  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10038  005B02  0100               	movlb	0	; () banked
 10039  005B04  1FCD               	comf	??___flge& (0+255),f,b
 10040  005B06  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10041  005B08  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10042  005B0A  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10043  005B0C  2BCD               	incf	??___flge& (0+255),f,b
 10044  005B0E  0E00               	movlw	0
 10045  005B10  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10046  005B12  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10047  005B14  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10048  005B16  0E00               	movlw	0
 10049  005B18  0100               	movlb	0	; () banked
 10050  005B1A  25CD               	addwf	??___flge& (0+255),w,b
 10051  005B1C  0100               	movlb	0	; () banked
 10052  005B1E  6FC5               	movwf	___flge@ff1& (0+255),b
 10053  005B20  0E00               	movlw	0
 10054  005B22  0100               	movlb	0	; () banked
 10055  005B24  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10056  005B26  0100               	movlb	0	; () banked
 10057  005B28  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10058  005B2A  0E00               	movlw	0
 10059  005B2C  0100               	movlb	0	; () banked
 10060  005B2E  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10061  005B30  0100               	movlb	0	; () banked
 10062  005B32  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10063  005B34  0E80               	movlw	128
 10064  005B36  0100               	movlb	0	; () banked
 10065  005B38  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10066  005B3A  0100               	movlb	0	; () banked
 10067  005B3C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10068  005B3E                     l7060:
 10069                           
 10070                           ; BSR set to: 0
 10071  005B3E  0100               	movlb	0	; () banked
 10072  005B40  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10073  005B42  D026               	goto	l1097
 10074                           
 10075                           ; BSR set to: 0
 10076  005B44  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10077  005B48  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10078  005B4C  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10079  005B50  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10080  005B54  0100               	movlb	0	; () banked
 10081  005B56  1FCD               	comf	??___flge& (0+255),f,b
 10082  005B58  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10083  005B5A  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10084  005B5C  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10085  005B5E  2BCD               	incf	??___flge& (0+255),f,b
 10086  005B60  0E00               	movlw	0
 10087  005B62  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10088  005B64  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10089  005B66  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10090  005B68  0E00               	movlw	0
 10091  005B6A  0100               	movlb	0	; () banked
 10092  005B6C  25CD               	addwf	??___flge& (0+255),w,b
 10093  005B6E  0100               	movlb	0	; () banked
 10094  005B70  6FC9               	movwf	___flge@ff2& (0+255),b
 10095  005B72  0E00               	movlw	0
 10096  005B74  0100               	movlb	0	; () banked
 10097  005B76  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10098  005B78  0100               	movlb	0	; () banked
 10099  005B7A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10100  005B7C  0E00               	movlw	0
 10101  005B7E  0100               	movlb	0	; () banked
 10102  005B80  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10103  005B82  0100               	movlb	0	; () banked
 10104  005B84  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10105  005B86  0E80               	movlw	128
 10106  005B88  0100               	movlb	0	; () banked
 10107  005B8A  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10108  005B8C  0100               	movlb	0	; () banked
 10109  005B8E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10110  005B90                     l1097:
 10111                           
 10112                           ; BSR set to: 0
 10113  005B90  0E00               	movlw	0
 10114  005B92  0100               	movlb	0	; () banked
 10115  005B94  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10116  005B96  0E00               	movlw	0
 10117  005B98  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10118  005B9A  0E00               	movlw	0
 10119  005B9C  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10120  005B9E  0E80               	movlw	128
 10121  005BA0  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10122  005BA2  0E00               	movlw	0
 10123  005BA4  0100               	movlb	0	; () banked
 10124  005BA6  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10125  005BA8  0E00               	movlw	0
 10126  005BAA  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10127  005BAC  0E00               	movlw	0
 10128  005BAE  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10129  005BB0  0E80               	movlw	128
 10130  005BB2  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10131  005BB4  0100               	movlb	0	; () banked
 10132  005BB6  51C9               	movf	___flge@ff2& (0+255),w,b
 10133  005BB8  0100               	movlb	0	; () banked
 10134  005BBA  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10135  005BBC  0100               	movlb	0	; () banked
 10136  005BBE  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10137  005BC0  0100               	movlb	0	; () banked
 10138  005BC2  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10139  005BC4  0100               	movlb	0	; () banked
 10140  005BC6  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10141  005BC8  0100               	movlb	0	; () banked
 10142  005BCA  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10143  005BCC  0100               	movlb	0	; () banked
 10144  005BCE  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10145  005BD0  0100               	movlb	0	; () banked
 10146  005BD2  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10147  005BD4  B0D8               	btfsc	status,0,c
 10148  005BD6  D002               	goto	l7066
 10149                           
 10150                           ; BSR set to: 0
 10151  005BD8  90D8               	bcf	status,0,c
 10152  005BDA  0012               	return	
 10153  005BDC                     l7066:
 10154                           
 10155                           ; BSR set to: 0
 10156  005BDC  80D8               	bsf	status,0,c
 10157                           
 10158                           ; BSR set to: 0
 10159  005BDE  0012               	return	
 10160  005BE0                     __end_of___flge:
 10161                           	opt stack 0
 10162                           tblptru	equ	0xFF8
 10163                           tblptrh	equ	0xFF7
 10164                           tblptrl	equ	0xFF6
 10165                           tablat	equ	0xFF5
 10166                           prodh	equ	0xFF4
 10167                           prodl	equ	0xFF3
 10168                           postinc0	equ	0xFEE
 10169                           wreg	equ	0xFE8
 10170                           postdec1	equ	0xFE5
 10171                           fsr1l	equ	0xFE1
 10172                           indf2	equ	0xFDF
 10173                           postinc2	equ	0xFDE
 10174                           postdec2	equ	0xFDD
 10175                           fsr2h	equ	0xFDA
 10176                           fsr2l	equ	0xFD9
 10177                           status	equ	0xFD8
 10178                           
 10179 ;; *************** function ___fldiv *****************
 10180 ;; Defined at:
 10181 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  b               4   23[BANK0 ] unsigned char 
 10184 ;;  a               4   27[BANK0 ] unsigned char 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  grs             4   42[BANK0 ] unsigned long 
 10187 ;;  rem             4   36[BANK0 ] unsigned long 
 10188 ;;  new_exp         2   40[BANK0 ] int 
 10189 ;;  aexp            1   47[BANK0 ] unsigned char 
 10190 ;;  bexp            1   46[BANK0 ] unsigned char 
 10191 ;;  sign            1   35[BANK0 ] unsigned char 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  4   23[BANK0 ] unsigned char 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2, status,0
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10201 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;Total ram usage:       25 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; Hardware stack levels required when called:    4
 10208 ;; This function calls:
 10209 ;;		Nothing
 10210 ;; This function is called by:
 10211 ;;		_parallelo
 10212 ;;		_matematica
 10213 ;;		_asin
 10214 ;;		_atan
 10215 ;;		_sin
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text25
 10220  0042B2                     __ptext25:
 10221                           	opt stack 0
 10222  0042B2                     ___fldiv:
 10223                           	opt stack 22
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;incstack = 0
 10227  0042B2  0100               	movlb	0	; () banked
 10228  0042B4  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10229  0042B6  0B80               	andlw	128
 10230  0042B8  0100               	movlb	0	; () banked
 10231  0042BA  6F83               	movwf	___fldiv@sign& (0+255),b
 10232  0042BC  0100               	movlb	0	; () banked
 10233  0042BE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10234  0042C0  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10235  0042C2  0100               	movlb	0	; () banked
 10236  0042C4  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239  0042C6  0100               	movlb	0	; () banked
 10240  0042C8  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10241  0042CA  D002               	goto	l7186
 10242                           
 10243                           ; BSR set to: 0
 10244  0042CC  0100               	movlb	0	; () banked
 10245  0042CE  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10246  0042D0                     l7186:
 10247                           
 10248                           ; BSR set to: 0
 10249  0042D0  0100               	movlb	0	; () banked
 10250  0042D2  518E               	movf	___fldiv@bexp& (0+255),w,b
 10251  0042D4  0100               	movlb	0	; () banked
 10252  0042D6  B4D8               	btfsc	status,2,c
 10253  0042D8  D012               	goto	l7196
 10254                           
 10255                           ; BSR set to: 0
 10256  0042DA  0100               	movlb	0	; () banked
 10257  0042DC  298E               	incf	___fldiv@bexp& (0+255),w,b
 10258  0042DE  A4D8               	btfss	status,2,c
 10259  0042E0  D009               	goto	l7192
 10260                           
 10261                           ; BSR set to: 0
 10262  0042E2  0E00               	movlw	0
 10263  0042E4  0100               	movlb	0	; () banked
 10264  0042E6  6F77               	movwf	___fldiv@b& (0+255),b
 10265  0042E8  0E00               	movlw	0
 10266  0042EA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10267  0042EC  0E00               	movlw	0
 10268  0042EE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10269  0042F0  0E00               	movlw	0
 10270  0042F2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10271  0042F4                     l7192:
 10272                           
 10273                           ; BSR set to: 0
 10274  0042F4  0100               	movlb	0	; () banked
 10275  0042F6  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10276                           
 10277                           ; BSR set to: 0
 10278  0042F8  0E00               	movlw	0
 10279  0042FA  0100               	movlb	0	; () banked
 10280  0042FC  D008               	goto	L6
 10281  0042FE                     l7196:
 10282                           
 10283                           ; BSR set to: 0
 10284  0042FE  0E00               	movlw	0
 10285  004300  0100               	movlb	0	; () banked
 10286  004302  6F77               	movwf	___fldiv@b& (0+255),b
 10287  004304  0E00               	movlw	0
 10288  004306  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10289  004308  0E00               	movlw	0
 10290  00430A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10291  00430C  0E00               	movlw	0
 10292  00430E                     L6:
 10293  00430E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10294                           
 10295                           ; BSR set to: 0
 10296                           
 10297                           ; BSR set to: 0
 10298  004310  0100               	movlb	0	; () banked
 10299  004312  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10300  004314  0B80               	andlw	128
 10301  004316  0100               	movlb	0	; () banked
 10302  004318  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10303                           
 10304                           ; BSR set to: 0
 10305  00431A  0100               	movlb	0	; () banked
 10306  00431C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10307  00431E  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10308  004320  0100               	movlb	0	; () banked
 10309  004322  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10310                           
 10311                           ; BSR set to: 0
 10312  004324  0100               	movlb	0	; () banked
 10313  004326  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10314  004328  D002               	goto	l7206
 10315                           
 10316                           ; BSR set to: 0
 10317  00432A  0100               	movlb	0	; () banked
 10318  00432C  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10319  00432E                     l7206:
 10320                           
 10321                           ; BSR set to: 0
 10322  00432E  0100               	movlb	0	; () banked
 10323  004330  518F               	movf	___fldiv@aexp& (0+255),w,b
 10324  004332  0100               	movlb	0	; () banked
 10325  004334  B4D8               	btfsc	status,2,c
 10326  004336  D012               	goto	l7216
 10327                           
 10328                           ; BSR set to: 0
 10329  004338  0100               	movlb	0	; () banked
 10330  00433A  298F               	incf	___fldiv@aexp& (0+255),w,b
 10331  00433C  A4D8               	btfss	status,2,c
 10332  00433E  D009               	goto	l7212
 10333                           
 10334                           ; BSR set to: 0
 10335  004340  0E00               	movlw	0
 10336  004342  0100               	movlb	0	; () banked
 10337  004344  6F7B               	movwf	___fldiv@a& (0+255),b
 10338  004346  0E00               	movlw	0
 10339  004348  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10340  00434A  0E00               	movlw	0
 10341  00434C  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10342  00434E  0E00               	movlw	0
 10343  004350  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10344  004352                     l7212:
 10345                           
 10346                           ; BSR set to: 0
 10347  004352  0100               	movlb	0	; () banked
 10348  004354  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10349                           
 10350                           ; BSR set to: 0
 10351  004356  0E00               	movlw	0
 10352  004358  0100               	movlb	0	; () banked
 10353  00435A  D008               	goto	L7
 10354  00435C                     l7216:
 10355                           
 10356                           ; BSR set to: 0
 10357  00435C  0E00               	movlw	0
 10358  00435E  0100               	movlb	0	; () banked
 10359  004360  6F7B               	movwf	___fldiv@a& (0+255),b
 10360  004362  0E00               	movlw	0
 10361  004364  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10362  004366  0E00               	movlw	0
 10363  004368  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10364  00436A  0E00               	movlw	0
 10365  00436C                     L7:
 10366  00436C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10367                           
 10368                           ; BSR set to: 0
 10369                           
 10370                           ; BSR set to: 0
 10371  00436E  0100               	movlb	0	; () banked
 10372  004370  517B               	movf	___fldiv@a& (0+255),w,b
 10373  004372  0100               	movlb	0	; () banked
 10374  004374  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10375  004376  0100               	movlb	0	; () banked
 10376  004378  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10377  00437A  0100               	movlb	0	; () banked
 10378  00437C  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10379  00437E  A4D8               	btfss	status,2,c
 10380  004380  D017               	goto	l7228
 10381                           
 10382                           ; BSR set to: 0
 10383  004382  0E00               	movlw	0
 10384  004384  0100               	movlb	0	; () banked
 10385  004386  6F77               	movwf	___fldiv@b& (0+255),b
 10386  004388  0E00               	movlw	0
 10387  00438A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10388  00438C  0E00               	movlw	0
 10389  00438E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10390  004390  0E00               	movlw	0
 10391  004392  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10392                           
 10393                           ; BSR set to: 0
 10394  004394  0100               	movlb	0	; () banked
 10395  004396  0E80               	movlw	128
 10396  004398  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10397  00439A  0E7F               	movlw	127
 10398  00439C  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 0
 10401  00439E  C077  F077         	movff	___fldiv@b,?___fldiv
 10402  0043A2  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10403  0043A6  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10404  0043AA  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10405                           
 10406                           ; BSR set to: 0
 10407  0043AE  0012               	return	
 10408  0043B0                     l7228:
 10409                           
 10410                           ; BSR set to: 0
 10411  0043B0  0100               	movlb	0	; () banked
 10412  0043B2  518E               	movf	___fldiv@bexp& (0+255),w,b
 10413  0043B4  0100               	movlb	0	; () banked
 10414  0043B6  A4D8               	btfss	status,2,c
 10415  0043B8  D012               	goto	l7236
 10416                           
 10417                           ; BSR set to: 0
 10418  0043BA  0E00               	movlw	0
 10419  0043BC  0100               	movlb	0	; () banked
 10420  0043BE  6F77               	movwf	___fldiv@b& (0+255),b
 10421  0043C0  0E00               	movlw	0
 10422  0043C2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10423  0043C4  0E00               	movlw	0
 10424  0043C6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10425  0043C8  0E00               	movlw	0
 10426  0043CA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10427                           
 10428                           ; BSR set to: 0
 10429  0043CC  C077  F077         	movff	___fldiv@b,?___fldiv
 10430  0043D0  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10431  0043D4  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10432  0043D8  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10433                           
 10434                           ; BSR set to: 0
 10435  0043DC  0012               	return	
 10436  0043DE                     l7236:
 10437                           
 10438                           ; BSR set to: 0
 10439  0043DE  0100               	movlb	0	; () banked
 10440  0043E0  518F               	movf	___fldiv@aexp& (0+255),w,b
 10441  0043E2  0100               	movlb	0	; () banked
 10442  0043E4  6F7F               	movwf	??___fldiv& (0+255),b
 10443  0043E6  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10444  0043E8  0100               	movlb	0	; () banked
 10445  0043EA  1F7F               	comf	??___fldiv& (0+255),f,b
 10446  0043EC  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10447  0043EE  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10448  0043F0  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10449  0043F2  0100               	movlb	0	; () banked
 10450  0043F4  518E               	movf	___fldiv@bexp& (0+255),w,b
 10451  0043F6  0100               	movlb	0	; () banked
 10452  0043F8  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10453  0043FA  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10454  0043FC  0100               	movlb	0	; () banked
 10455  0043FE  517F               	movf	??___fldiv& (0+255),w,b
 10456  004400  0100               	movlb	0	; () banked
 10457  004402  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10458  004404  0100               	movlb	0	; () banked
 10459  004406  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10460  004408  0100               	movlb	0	; () banked
 10461  00440A  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10462  00440C  0E7F               	movlw	127
 10463  00440E  0100               	movlb	0	; () banked
 10464  004410  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10465  004412  0100               	movlb	0	; () banked
 10466  004414  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10467  004416  0E00               	movlw	0
 10468  004418  0100               	movlb	0	; () banked
 10469  00441A  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10470  00441C  0100               	movlb	0	; () banked
 10471  00441E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10472                           
 10473                           ; BSR set to: 0
 10474  004420  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10475  004424  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10476  004428  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10477  00442C  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10478                           
 10479                           ; BSR set to: 0
 10480  004430  0E00               	movlw	0
 10481  004432  0100               	movlb	0	; () banked
 10482  004434  6F77               	movwf	___fldiv@b& (0+255),b
 10483  004436  0E00               	movlw	0
 10484  004438  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10485  00443A  0E00               	movlw	0
 10486  00443C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10487  00443E  0E00               	movlw	0
 10488  004440  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10489                           
 10490                           ; BSR set to: 0
 10491  004442  0E00               	movlw	0
 10492  004444  0100               	movlb	0	; () banked
 10493  004446  6F8A               	movwf	___fldiv@grs& (0+255),b
 10494  004448  0E00               	movlw	0
 10495  00444A  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10496  00444C  0E00               	movlw	0
 10497  00444E  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10498  004450  0E00               	movlw	0
 10499  004452  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10500                           
 10501                           ; BSR set to: 0
 10502  004454  0E00               	movlw	0
 10503  004456  0100               	movlb	0	; () banked
 10504  004458  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10505  00445A  D042               	goto	l1405
 10506  00445C                     l7246:
 10507                           
 10508                           ; BSR set to: 0
 10509  00445C  0100               	movlb	0	; () banked
 10510  00445E  518F               	movf	___fldiv@aexp& (0+255),w,b
 10511  004460  0100               	movlb	0	; () banked
 10512  004462  B4D8               	btfsc	status,2,c
 10513  004464  D017               	goto	l7254
 10514                           
 10515                           ; BSR set to: 0
 10516  004466  0100               	movlb	0	; () banked
 10517  004468  90D8               	bcf	status,0,c
 10518  00446A  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10519  00446C  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10520  00446E  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10521  004470  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10522  004472  0100               	movlb	0	; () banked
 10523  004474  90D8               	bcf	status,0,c
 10524  004476  3777               	rlcf	___fldiv@b& (0+255),f,b
 10525  004478  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10526  00447A  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10527  00447C  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530  00447E  0100               	movlb	0	; () banked
 10531  004480  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10532  004482  D002               	goto	l1408
 10533                           
 10534                           ; BSR set to: 0
 10535  004484  0100               	movlb	0	; () banked
 10536  004486  8177               	bsf	___fldiv@b& (0+255),0,b
 10537  004488                     l1408:
 10538                           
 10539                           ; BSR set to: 0
 10540  004488  0100               	movlb	0	; () banked
 10541  00448A  90D8               	bcf	status,0,c
 10542  00448C  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10543  00448E  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10544  004490  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10545  004492  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10546  004494                     l7254:
 10547                           
 10548                           ; BSR set to: 0
 10549  004494  0100               	movlb	0	; () banked
 10550  004496  517B               	movf	___fldiv@a& (0+255),w,b
 10551  004498  0100               	movlb	0	; () banked
 10552  00449A  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10553  00449C  0100               	movlb	0	; () banked
 10554  00449E  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10555  0044A0  0100               	movlb	0	; () banked
 10556  0044A2  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10557  0044A4  0100               	movlb	0	; () banked
 10558  0044A6  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10559  0044A8  0100               	movlb	0	; () banked
 10560  0044AA  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10561  0044AC  0100               	movlb	0	; () banked
 10562  0044AE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10563  0044B0  0100               	movlb	0	; () banked
 10564  0044B2  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10565  0044B4  A0D8               	btfss	status,0,c
 10566  0044B6  D012               	goto	l7260
 10567                           
 10568                           ; BSR set to: 0
 10569  0044B8  0100               	movlb	0	; () banked
 10570  0044BA  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10571                           
 10572                           ; BSR set to: 0
 10573  0044BC  0100               	movlb	0	; () banked
 10574  0044BE  517B               	movf	___fldiv@a& (0+255),w,b
 10575  0044C0  0100               	movlb	0	; () banked
 10576  0044C2  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10577  0044C4  0100               	movlb	0	; () banked
 10578  0044C6  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10579  0044C8  0100               	movlb	0	; () banked
 10580  0044CA  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10581  0044CC  0100               	movlb	0	; () banked
 10582  0044CE  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10583  0044D0  0100               	movlb	0	; () banked
 10584  0044D2  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10585  0044D4  0100               	movlb	0	; () banked
 10586  0044D6  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10587  0044D8  0100               	movlb	0	; () banked
 10588  0044DA  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10589  0044DC                     l7260:
 10590                           
 10591                           ; BSR set to: 0
 10592  0044DC  0100               	movlb	0	; () banked
 10593  0044DE  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10594  0044E0                     l1405:
 10595                           
 10596                           ; BSR set to: 0
 10597  0044E0  0E19               	movlw	25
 10598  0044E2  0100               	movlb	0	; () banked
 10599  0044E4  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10600  0044E6  D7BA               	goto	l7246
 10601                           
 10602                           ; BSR set to: 0
 10603                           
 10604                           ; BSR set to: 0
 10605  0044E8  0100               	movlb	0	; () banked
 10606  0044EA  5184               	movf	___fldiv@rem& (0+255),w,b
 10607  0044EC  0100               	movlb	0	; () banked
 10608  0044EE  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10609  0044F0  0100               	movlb	0	; () banked
 10610  0044F2  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10611  0044F4  0100               	movlb	0	; () banked
 10612  0044F6  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10613  0044F8  B4D8               	btfsc	status,2,c
 10614  0044FA  D018               	goto	l7272
 10615                           
 10616                           ; BSR set to: 0
 10617  0044FC  0100               	movlb	0	; () banked
 10618  0044FE  818A               	bsf	___fldiv@grs& (0+255),0,b
 10619                           
 10620                           ; BSR set to: 0
 10621  004500  D015               	goto	l7272
 10622  004502                     l7266:
 10623                           
 10624                           ; BSR set to: 0
 10625  004502  0100               	movlb	0	; () banked
 10626  004504  90D8               	bcf	status,0,c
 10627  004506  3777               	rlcf	___fldiv@b& (0+255),f,b
 10628  004508  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10629  00450A  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10630  00450C  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10631                           
 10632                           ; BSR set to: 0
 10633  00450E  0100               	movlb	0	; () banked
 10634  004510  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10635  004512  D002               	goto	l1414
 10636                           
 10637                           ; BSR set to: 0
 10638  004514  0100               	movlb	0	; () banked
 10639  004516  8177               	bsf	___fldiv@b& (0+255),0,b
 10640  004518                     l1414:
 10641                           
 10642                           ; BSR set to: 0
 10643  004518  0100               	movlb	0	; () banked
 10644  00451A  90D8               	bcf	status,0,c
 10645  00451C  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10646  00451E  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10647  004520  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10648  004522  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10649  004524  0100               	movlb	0	; () banked
 10650  004526  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10651  004528  A0D8               	btfss	status,0,c
 10652  00452A  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10653  00452C                     l7272:
 10654                           
 10655                           ; BSR set to: 0
 10656  00452C  0100               	movlb	0	; () banked
 10657  00452E  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10658  004530  D7E8               	goto	l7266
 10659                           
 10660                           ; BSR set to: 0
 10661                           
 10662                           ; BSR set to: 0
 10663  004532  0E00               	movlw	0
 10664  004534  0100               	movlb	0	; () banked
 10665  004536  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10666                           
 10667                           ; BSR set to: 0
 10668  004538  0100               	movlb	0	; () banked
 10669  00453A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10670  00453C  D024               	goto	l1416
 10671                           
 10672                           ; BSR set to: 0
 10673  00453E  0EFF               	movlw	255
 10674  004540  0100               	movlb	0	; () banked
 10675  004542  158A               	andwf	___fldiv@grs& (0+255),w,b
 10676  004544  0100               	movlb	0	; () banked
 10677  004546  6F7F               	movwf	??___fldiv& (0+255),b
 10678  004548  0EFF               	movlw	255
 10679  00454A  0100               	movlb	0	; () banked
 10680  00454C  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10681  00454E  0100               	movlb	0	; () banked
 10682  004550  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10683  004552  0EFF               	movlw	255
 10684  004554  0100               	movlb	0	; () banked
 10685  004556  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10686  004558  0100               	movlb	0	; () banked
 10687  00455A  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10688  00455C  0E7F               	movlw	127
 10689  00455E  0100               	movlb	0	; () banked
 10690  004560  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10691  004562  0100               	movlb	0	; () banked
 10692  004564  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10693  004566  0100               	movlb	0	; () banked
 10694  004568  517F               	movf	??___fldiv& (0+255),w,b
 10695  00456A  0100               	movlb	0	; () banked
 10696  00456C  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10697  00456E  0100               	movlb	0	; () banked
 10698  004570  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10699  004572  0100               	movlb	0	; () banked
 10700  004574  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10701  004576  A4D8               	btfss	status,2,c
 10702  004578  D003               	goto	l7282
 10703                           
 10704                           ; BSR set to: 0
 10705                           
 10706                           ; BSR set to: 0
 10707  00457A  0100               	movlb	0	; () banked
 10708  00457C  A177               	btfss	___fldiv@b& (0+255),0,b
 10709  00457E  D003               	goto	l1416
 10710  004580                     l7282:
 10711                           
 10712                           ; BSR set to: 0
 10713  004580  0E01               	movlw	1
 10714  004582  0100               	movlb	0	; () banked
 10715  004584  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10716  004586                     l1416:
 10717                           
 10718                           ; BSR set to: 0
 10719  004586  0100               	movlb	0	; () banked
 10720  004588  518F               	movf	___fldiv@aexp& (0+255),w,b
 10721  00458A  0100               	movlb	0	; () banked
 10722  00458C  B4D8               	btfsc	status,2,c
 10723  00458E  D023               	goto	l7292
 10724                           
 10725                           ; BSR set to: 0
 10726  004590  0E01               	movlw	1
 10727  004592  0100               	movlb	0	; () banked
 10728  004594  2777               	addwf	___fldiv@b& (0+255),f,b
 10729  004596  0E00               	movlw	0
 10730  004598  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10731  00459A  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10732  00459C  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10733                           
 10734                           ; BSR set to: 0
 10735  00459E  0100               	movlb	0	; () banked
 10736  0045A0  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10737  0045A2  D019               	goto	l7292
 10738                           
 10739                           ; BSR set to: 0
 10740  0045A4  C077  F07F         	movff	___fldiv@b,??___fldiv
 10741  0045A8  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10742  0045AC  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10743  0045B0  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10744  0045B4  0100               	movlb	0	; () banked
 10745  0045B6  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10746  0045B8  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10747  0045BA  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10748  0045BC  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10749  0045BE  337F               	rrcf	??___fldiv& (0+255),f,b
 10750  0045C0  C07F  F077         	movff	??___fldiv,___fldiv@b
 10751  0045C4  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10752  0045C8  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10753  0045CC  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10754                           
 10755                           ; BSR set to: 0
 10756  0045D0  0100               	movlb	0	; () banked
 10757  0045D2  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10758  0045D4  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10759  0045D6                     l7292:
 10760                           
 10761                           ; BSR set to: 0
 10762  0045D6  0100               	movlb	0	; () banked
 10763  0045D8  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10764  0045DA  D014               	goto	l7296
 10765  0045DC  0100               	movlb	0	; () banked
 10766  0045DE  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10767  0045E0  E104               	bnz	u9620
 10768  0045E2  0100               	movlb	0	; () banked
 10769  0045E4  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10770  0045E6  A0D8               	btfss	status,0,c
 10771  0045E8  D00D               	goto	l7296
 10772  0045EA                     u9620:
 10773                           
 10774                           ; BSR set to: 0
 10775  0045EA  0E00               	movlw	0
 10776  0045EC  0100               	movlb	0	; () banked
 10777  0045EE  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10778  0045F0  6988               	setf	___fldiv@new_exp& (0+255),b
 10779  0045F2  0E00               	movlw	0
 10780  0045F4  0100               	movlb	0	; () banked
 10781  0045F6  6F77               	movwf	___fldiv@b& (0+255),b
 10782  0045F8  0E00               	movlw	0
 10783  0045FA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10784  0045FC  0E00               	movlw	0
 10785  0045FE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10786  004600  0E00               	movlw	0
 10787  004602  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10788  004604                     l7296:
 10789                           
 10790                           ; BSR set to: 0
 10791  004604  0100               	movlb	0	; () banked
 10792  004606  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10793  004608  D007               	goto	l7298
 10794  00460A  0100               	movlb	0	; () banked
 10795  00460C  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10796  00460E  E115               	bnz	l7300
 10797  004610  0100               	movlb	0	; () banked
 10798  004612  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10799  004614  B0D8               	btfsc	status,0,c
 10800  004616  D011               	goto	l7300
 10801  004618                     l7298:
 10802                           
 10803                           ; BSR set to: 0
 10804  004618  0E00               	movlw	0
 10805  00461A  0100               	movlb	0	; () banked
 10806  00461C  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10807  00461E  0E00               	movlw	0
 10808  004620  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10809  004622  0E00               	movlw	0
 10810  004624  0100               	movlb	0	; () banked
 10811  004626  6F77               	movwf	___fldiv@b& (0+255),b
 10812  004628  0E00               	movlw	0
 10813  00462A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10814  00462C  0E00               	movlw	0
 10815  00462E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10816  004630  0E00               	movlw	0
 10817  004632  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10818  004634  0E00               	movlw	0
 10819  004636  0100               	movlb	0	; () banked
 10820  004638  6F83               	movwf	___fldiv@sign& (0+255),b
 10821  00463A                     l7300:
 10822                           
 10823                           ; BSR set to: 0
 10824  00463A  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10825                           
 10826                           ; BSR set to: 0
 10827  00463E  0100               	movlb	0	; () banked
 10828  004640  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10829  004642  D003               	goto	l7306
 10830                           
 10831                           ; BSR set to: 0
 10832  004644  0100               	movlb	0	; () banked
 10833  004646  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10834  004648  D002               	goto	l7308
 10835  00464A                     l7306:
 10836                           
 10837                           ; BSR set to: 0
 10838  00464A  0100               	movlb	0	; () banked
 10839  00464C  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10840  00464E                     l7308:
 10841                           
 10842                           ; BSR set to: 0
 10843  00464E  0100               	movlb	0	; () banked
 10844  004650  90D8               	bcf	status,0,c
 10845  004652  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10846  004654  0100               	movlb	0	; () banked
 10847  004656  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10848                           
 10849                           ; BSR set to: 0
 10850  004658  0100               	movlb	0	; () banked
 10851  00465A  5183               	movf	___fldiv@sign& (0+255),w,b
 10852  00465C  0100               	movlb	0	; () banked
 10853  00465E  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10854                           
 10855                           ; BSR set to: 0
 10856  004660  C077  F077         	movff	___fldiv@b,?___fldiv
 10857  004664  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10858  004668  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10859  00466C  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10860  004670  0012               	return	
 10861  004672                     __end_of___fldiv:
 10862                           	opt stack 0
 10863                           tblptru	equ	0xFF8
 10864                           tblptrh	equ	0xFF7
 10865                           tblptrl	equ	0xFF6
 10866                           tablat	equ	0xFF5
 10867                           prodh	equ	0xFF4
 10868                           prodl	equ	0xFF3
 10869                           postinc0	equ	0xFEE
 10870                           wreg	equ	0xFE8
 10871                           postdec1	equ	0xFE5
 10872                           fsr1l	equ	0xFE1
 10873                           indf2	equ	0xFDF
 10874                           postinc2	equ	0xFDE
 10875                           postdec2	equ	0xFDD
 10876                           fsr2h	equ	0xFDA
 10877                           fsr2l	equ	0xFD9
 10878                           status	equ	0xFD8
 10879                           
 10880 ;; *************** function _delay_s *****************
 10881 ;; Defined at:
 10882 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  value_s         1    wreg     unsigned char 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  value_s         1   31[BANK0 ] unsigned char 
 10887 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10888 ;; Return value:  Size  Location     Type
 10889 ;;		None               void
 10890 ;; Registers used:
 10891 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10892 ;; Tracked objects:
 10893 ;;		On entry : 0/0
 10894 ;;		On exit  : 0/0
 10895 ;;		Unchanged: 0/0
 10896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;Total ram usage:        2 bytes
 10902 ;; Hardware stack levels used:    1
 10903 ;; Hardware stack levels required when called:    6
 10904 ;; This function calls:
 10905 ;;		_delay_ms
 10906 ;; This function is called by:
 10907 ;;		_park_routine
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text26
 10912  006656                     __ptext26:
 10913                           	opt stack 0
 10914  006656                     _delay_s:
 10915                           	opt stack 23
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;incstack = 0
 10919                           ;delay_s@value_s stored from wreg
 10920  006656  0100               	movlb	0	; () banked
 10921  006658  6F7F               	movwf	delay_s@value_s& (0+255),b
 10922                           
 10923                           ;src\delay.c: 104: unsigned char repeat_loop;
 10924                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10925  00665A  0E00               	movlw	0
 10926  00665C  0100               	movlb	0	; () banked
 10927  00665E  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10928  006660  D009               	goto	l7694
 10929  006662                     l7690:
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;src\delay.c: 107: delay_ms (1000);
 10933  006662  0E03               	movlw	3
 10934  006664  0100               	movlb	0	; () banked
 10935  006666  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10936  006668  0EE8               	movlw	232
 10937  00666A  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10938  00666C  ECC1  F032         	call	_delay_ms	;wreg free
 10939  006670  0100               	movlb	0	; () banked
 10940  006672  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10941  006674                     l7694:
 10942                           
 10943                           ; BSR set to: 0
 10944  006674  0100               	movlb	0	; () banked
 10945  006676  517F               	movf	delay_s@value_s& (0+255),w,b
 10946  006678  0100               	movlb	0	; () banked
 10947  00667A  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10948  00667C  B0D8               	btfsc	status,0,c
 10949  00667E  0012               	return	
 10950  006680  D7F0               	goto	l7690
 10951  006682                     __end_of_delay_s:
 10952                           	opt stack 0
 10953                           tblptru	equ	0xFF8
 10954                           tblptrh	equ	0xFF7
 10955                           tblptrl	equ	0xFF6
 10956                           tablat	equ	0xFF5
 10957                           prodh	equ	0xFF4
 10958                           prodl	equ	0xFF3
 10959                           postinc0	equ	0xFEE
 10960                           wreg	equ	0xFE8
 10961                           postdec1	equ	0xFE5
 10962                           fsr1l	equ	0xFE1
 10963                           indf2	equ	0xFDF
 10964                           postinc2	equ	0xFDE
 10965                           postdec2	equ	0xFDD
 10966                           fsr2h	equ	0xFDA
 10967                           fsr2l	equ	0xFD9
 10968                           status	equ	0xFD8
 10969                           
 10970 ;; *************** function _delay_ms *****************
 10971 ;; Defined at:
 10972 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;		None               void
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        2 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    5
 10993 ;; This function calls:
 10994 ;;		___wmul
 10995 ;; This function is called by:
 10996 ;;		_delay_s
 10997 ;;		_main
 10998 ;;		_park_routine
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text27
 11003  006582                     __ptext27:
 11004                           	opt stack 0
 11005  006582                     _delay_ms:
 11006                           	opt stack 23
 11007                           
 11008                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;incstack = 0
 11012  006582  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11013  006586  0100               	movlb	0	; () banked
 11014  006588  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11015  00658A  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11016  00658E  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11017  006592  ECFA  F032         	call	___wmul	;wreg free
 11018  006596  C077  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 11019  00659A  C078  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11020                           
 11021                           ;src\delay.c: 75: while (clock_counter_reference) {
 11022  00659E  D007               	goto	l569
 11023  0065A0                     l7548:
 11024                           
 11025                           ;src\delay.c: 85: _delay(240);
 11026  0065A0  0E50               	movlw	80
 11027  0065A2                     u10637:
 11028  0065A2  2EE8               	decfsz	wreg,f,c
 11029  0065A4  D7FE               	goto	u10637
 11030                           
 11031                           ;src\delay.c: 88: clock_counter_reference--;
 11032  0065A6  0100               	movlb	0	; () banked
 11033  0065A8  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11034  0065AA  A0D8               	btfss	status,0,c
 11035  0065AC  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11036  0065AE                     l569:
 11037  0065AE  0100               	movlb	0	; () banked
 11038  0065B0  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11039  0065B2  0100               	movlb	0	; () banked
 11040  0065B4  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11041  0065B6  B4D8               	btfsc	status,2,c
 11042  0065B8  0012               	return	
 11043  0065BA  D7F2               	goto	l7548
 11044  0065BC                     __end_of_delay_ms:
 11045                           	opt stack 0
 11046                           tblptru	equ	0xFF8
 11047                           tblptrh	equ	0xFF7
 11048                           tblptrl	equ	0xFF6
 11049                           tablat	equ	0xFF5
 11050                           prodh	equ	0xFF4
 11051                           prodl	equ	0xFF3
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postdec1	equ	0xFE5
 11055                           fsr1l	equ	0xFE1
 11056                           indf2	equ	0xFDF
 11057                           postinc2	equ	0xFDE
 11058                           postdec2	equ	0xFDD
 11059                           fsr2h	equ	0xFDA
 11060                           fsr2l	equ	0xFD9
 11061                           status	equ	0xFD8
 11062                           
 11063 ;; *************** function ___wmul *****************
 11064 ;; Defined at:
 11065 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11068 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;  product         2   27[BANK0 ] unsigned int 
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  2   23[BANK0 ] unsigned int 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2, status,0, prodl, prodh
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;Total ram usage:        6 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    4
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_delay_ms
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text28
 11095  0065F4                     __ptext28:
 11096                           	opt stack 0
 11097  0065F4                     ___wmul:
 11098                           	opt stack 23
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;incstack = 0
 11102  0065F4  0100               	movlb	0	; () banked
 11103  0065F6  5177               	movf	___wmul@multiplier& (0+255),w,b
 11104  0065F8  0100               	movlb	0	; () banked
 11105  0065FA  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11106  0065FC  CFF3 F07B          	movff	prodl,___wmul@product
 11107  006600  CFF4 F07C          	movff	prodh,___wmul@product+1
 11108  006604  0100               	movlb	0	; () banked
 11109  006606  5177               	movf	___wmul@multiplier& (0+255),w,b
 11110  006608  0100               	movlb	0	; () banked
 11111  00660A  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11112  00660C  50F3               	movf	prodl,w,c
 11113  00660E  0100               	movlb	0	; () banked
 11114  006610  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11115  006612  0100               	movlb	0	; () banked
 11116  006614  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11117  006616  0100               	movlb	0	; () banked
 11118  006618  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11119  00661A  50F3               	movf	prodl,w,c
 11120  00661C  0100               	movlb	0	; () banked
 11121  00661E  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11122                           
 11123                           ; BSR set to: 0
 11124  006620  C07B  F077         	movff	___wmul@product,?___wmul
 11125  006624  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11126  006628  0012               	return	
 11127  00662A                     __end_of___wmul:
 11128                           	opt stack 0
 11129                           tblptru	equ	0xFF8
 11130                           tblptrh	equ	0xFF7
 11131                           tblptrl	equ	0xFF6
 11132                           tablat	equ	0xFF5
 11133                           prodh	equ	0xFF4
 11134                           prodl	equ	0xFF3
 11135                           postinc0	equ	0xFEE
 11136                           wreg	equ	0xFE8
 11137                           postdec1	equ	0xFE5
 11138                           fsr1l	equ	0xFE1
 11139                           indf2	equ	0xFDF
 11140                           postinc2	equ	0xFDE
 11141                           postdec2	equ	0xFDD
 11142                           fsr2h	equ	0xFDA
 11143                           fsr2l	equ	0xFD9
 11144                           status	equ	0xFD8
 11145                           
 11146 ;; *************** function _configurations *****************
 11147 ;; Defined at:
 11148 ;;		line 499 in file "parcheggio.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;		None
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;		None
 11153 ;; Return value:  Size  Location     Type
 11154 ;;		None               void
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;Total ram usage:        0 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    6
 11169 ;; This function calls:
 11170 ;;		_CANInitialize
 11171 ;; This function is called by:
 11172 ;;		_main
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text29
 11177  00643E                     __ptext29:
 11178                           	opt stack 0
 11179  00643E                     _configurations:
 11180                           	opt stack 24
 11181                           
 11182                           ;parcheggio.c: 500: LATA = 0x00;
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;incstack = 0
 11186  00643E  0E00               	movlw	0
 11187  006440  6E89               	movwf	3977,c	;volatile
 11188                           
 11189                           ;parcheggio.c: 501: TRISA = 0b11110000;
 11190  006442  0EF0               	movlw	240
 11191  006444  6E92               	movwf	3986,c	;volatile
 11192                           
 11193                           ;parcheggio.c: 502: LATB = 0x00;
 11194  006446  0E00               	movlw	0
 11195  006448  6E8A               	movwf	3978,c	;volatile
 11196                           
 11197                           ;parcheggio.c: 503: TRISB = 0b10001010;
 11198  00644A  0E8A               	movlw	138
 11199  00644C  6E93               	movwf	3987,c	;volatile
 11200                           
 11201                           ;parcheggio.c: 504: LATC = 0x00;
 11202  00644E  0E00               	movlw	0
 11203  006450  6E8B               	movwf	3979,c	;volatile
 11204                           
 11205                           ;parcheggio.c: 505: TRISC = 0b11111111;
 11206  006452  6894               	setf	3988,c	;volatile
 11207                           
 11208                           ;parcheggio.c: 507: ADCON1 = 0xFF;
 11209  006454  68C1               	setf	4033,c	;volatile
 11210                           
 11211                           ;parcheggio.c: 508: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11212  006456  0E06               	movlw	6
 11213  006458  0100               	movlb	0	; () banked
 11214  00645A  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11215  00645C  0E05               	movlw	5
 11216  00645E  0100               	movlb	0	; () banked
 11217  006460  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11218  006462  0E01               	movlw	1
 11219  006464  0100               	movlb	0	; () banked
 11220  006466  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11221  006468  0E03               	movlw	3
 11222  00646A  0100               	movlb	0	; () banked
 11223  00646C  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11224  00646E  0E9D               	movlw	157
 11225  006470  0100               	movlb	0	; () banked
 11226  006472  6F89               	movwf	CANInitialize@flags& (0+255),b
 11227  006474  0E04               	movlw	4
 11228  006476  EC45  F02C         	call	_CANInitialize
 11229                           
 11230                           ;parcheggio.c: 511: RCONbits.IPEN = 1;
 11231  00647A  8ED0               	bsf	4048,7,c	;volatile
 11232                           
 11233                           ;parcheggio.c: 512: IPR3bits.RXB1IP = 0;
 11234  00647C  92A5               	bcf	4005,1,c	;volatile
 11235                           
 11236                           ;parcheggio.c: 513: IPR3bits.RXB0IP = 0;
 11237  00647E  90A5               	bcf	4005,0,c	;volatile
 11238                           
 11239                           ;parcheggio.c: 514: INTCON2bits.TMR0IP = 0;
 11240  006480  94F1               	bcf	intcon2,2,c	;volatile
 11241                           
 11242                           ;parcheggio.c: 517: PIR3bits.RXB1IF = 0;
 11243  006482  92A4               	bcf	4004,1,c	;volatile
 11244                           
 11245                           ;parcheggio.c: 518: PIR3bits.RXB0IF = 0;
 11246  006484  90A4               	bcf	4004,0,c	;volatile
 11247                           
 11248                           ;parcheggio.c: 519: INTCONbits.INT0IF = 0;
 11249  006486  92F2               	bcf	intcon,1,c	;volatile
 11250                           
 11251                           ;parcheggio.c: 520: INTCONbits.TMR0IF = 0;
 11252  006488  94F2               	bcf	intcon,2,c	;volatile
 11253                           
 11254                           ;parcheggio.c: 524: PIE3bits.RXB1IE = 1;
 11255  00648A  82A3               	bsf	4003,1,c	;volatile
 11256                           
 11257                           ;parcheggio.c: 525: PIE3bits.RXB0IE = 1;
 11258  00648C  80A3               	bsf	4003,0,c	;volatile
 11259                           
 11260                           ;parcheggio.c: 526: INTCONbits.TMR0IE = 1;
 11261  00648E  8AF2               	bsf	intcon,5,c	;volatile
 11262                           
 11263                           ;parcheggio.c: 527: INTCONbits.INT0IE = 0;
 11264  006490  98F2               	bcf	intcon,4,c	;volatile
 11265                           
 11266                           ;parcheggio.c: 530: T0CON = 0x80;
 11267  006492  0E80               	movlw	128
 11268  006494  6ED5               	movwf	4053,c	;volatile
 11269                           
 11270                           ;parcheggio.c: 531: TMR0H = 0x34;
 11271  006496  0E34               	movlw	52
 11272  006498  6ED7               	movwf	4055,c	;volatile
 11273                           
 11274                           ;parcheggio.c: 532: TMR0L = 0xE0;
 11275  00649A  0EE0               	movlw	224
 11276  00649C  6ED6               	movwf	4054,c	;volatile
 11277                           
 11278                           ;parcheggio.c: 533: T3CON = 0x11;
 11279  00649E  0E11               	movlw	17
 11280  0064A0  6EB1               	movwf	4017,c	;volatile
 11281                           
 11282                           ;parcheggio.c: 535: INTCON2bits.INTEDG0 = 1;
 11283  0064A2  8CF1               	bsf	intcon2,6,c	;volatile
 11284                           
 11285                           ;parcheggio.c: 536: INTCONbits.GIEL = 1;
 11286  0064A4  8CF2               	bsf	intcon,6,c	;volatile
 11287                           
 11288                           ;parcheggio.c: 537: INTCONbits.GIEH = 1;
 11289  0064A6  8EF2               	bsf	intcon,7,c	;volatile
 11290  0064A8  0012               	return		;funcret
 11291  0064AA                     __end_of_configurations:
 11292                           	opt stack 0
 11293                           tblptru	equ	0xFF8
 11294                           tblptrh	equ	0xFF7
 11295                           tblptrl	equ	0xFF6
 11296                           tablat	equ	0xFF5
 11297                           prodh	equ	0xFF4
 11298                           prodl	equ	0xFF3
 11299                           intcon	equ	0xFF2
 11300                           intcon2	equ	0xFF1
 11301                           postinc0	equ	0xFEE
 11302                           wreg	equ	0xFE8
 11303                           postdec1	equ	0xFE5
 11304                           fsr1l	equ	0xFE1
 11305                           indf2	equ	0xFDF
 11306                           postinc2	equ	0xFDE
 11307                           postdec2	equ	0xFDD
 11308                           fsr2h	equ	0xFDA
 11309                           fsr2l	equ	0xFD9
 11310                           status	equ	0xFD8
 11311                           
 11312 ;; *************** function _CANInitialize *****************
 11313 ;; Defined at:
 11314 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;  propSeg         1    wreg     unsigned char 
 11317 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11318 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11319 ;;  SJW             1   39[BANK0 ] unsigned char 
 11320 ;;  BRP             1   40[BANK0 ] unsigned char 
 11321 ;;  flags           1   41[BANK0 ] enum E16313
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11324 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11325 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11326 ;; Return value:  Size  Location     Type
 11327 ;;		None               void
 11328 ;; Registers used:
 11329 ;;		wreg, status,2, status,0, cstack
 11330 ;; Tracked objects:
 11331 ;;		On entry : 0/0
 11332 ;;		On exit  : 0/0
 11333 ;;		Unchanged: 0/0
 11334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11335 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;Total ram usage:       12 bytes
 11340 ;; Hardware stack levels used:    1
 11341 ;; Hardware stack levels required when called:    5
 11342 ;; This function calls:
 11343 ;;		_CANOperationMode
 11344 ;;		_CANSetFilter
 11345 ;;		_CANSetMask
 11346 ;; This function is called by:
 11347 ;;		_configurations
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text30
 11352  00588A                     __ptext30:
 11353                           	opt stack 0
 11354  00588A                     _CANInitialize:
 11355                           	opt stack 24
 11356                           
 11357                           ;incstack = 0
 11358                           ;CANInitialize@propSeg stored from wreg
 11359  00588A  0100               	movlb	0	; () banked
 11360  00588C  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11361                           
 11362                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11363                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11364                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11365  00588E  0E80               	movlw	128
 11366  005890  EC62  F033         	call	_CANOperationMode
 11367                           
 11368                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11369  005894  0E00               	movlw	0
 11370  005896  6E70               	movwf	3952,c	;volatile
 11371                           
 11372                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11373  005898  0E00               	movlw	0
 11374  00589A  6E71               	movwf	3953,c	;volatile
 11375                           
 11376                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11377  00589C  0E00               	movlw	0
 11378  00589E  6E72               	movwf	3954,c	;volatile
 11379                           
 11380                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11381  0058A0  0100               	movlb	0	; () banked
 11382  0058A2  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11383  0058A4  42E8               	rrncf	wreg,f,c
 11384  0058A6  0BC0               	andlw	192
 11385  0058A8  0100               	movlb	0	; () banked
 11386  0058AA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11390  0058AC  0100               	movlb	0	; () banked
 11391  0058AE  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11392  0058B0  1270               	iorwf	3952,f,c	;volatile
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11396  0058B2  0100               	movlb	0	; () banked
 11397  0058B4  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11398  0058B6  1270               	iorwf	3952,f,c	;volatile
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11402  0058B8  0100               	movlb	0	; () banked
 11403  0058BA  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11404  0058BC  1271               	iorwf	3953,f,c	;volatile
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11408  0058BE  0100               	movlb	0	; () banked
 11409  0058C0  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11410  0058C2  42E8               	rrncf	wreg,f,c
 11411  0058C4  0BF8               	andlw	248
 11412  0058C6  0100               	movlb	0	; () banked
 11413  0058C8  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11417  0058CA  0100               	movlb	0	; () banked
 11418  0058CC  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11419  0058CE  1271               	iorwf	3953,f,c	;volatile
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11423  0058D0  0100               	movlb	0	; () banked
 11424  0058D2  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11425                           
 11426                           ; BSR set to: 0
 11427                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11428  0058D4  8C71               	bsf	3953,6,c	;volatile
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11432  0058D6  0100               	movlb	0	; () banked
 11433  0058D8  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11437  0058DA  8E71               	bsf	3953,7,c	;volatile
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11441                           
 11442                           ; BSR set to: 0
 11443  0058DC  0100               	movlb	0	; () banked
 11444  0058DE  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11445  0058E0  1272               	iorwf	3954,f,c	;volatile
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11449  0058E2  0100               	movlb	0	; () banked
 11450  0058E4  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11454  0058E6  8C72               	bsf	3954,6,c	;volatile
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11458                           
 11459                           ; BSR set to: 0
 11460  0058E8  0100               	movlb	0	; () banked
 11461  0058EA  5189               	movf	CANInitialize@flags& (0+255),w,b
 11462  0058EC  0B60               	andlw	96
 11463  0058EE  6E60               	movwf	3936,c	;volatile
 11464                           
 11465                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11466  0058F0  0100               	movlb	0	; () banked
 11467  0058F2  5189               	movf	CANInitialize@flags& (0+255),w,b
 11468  0058F4  0B10               	andlw	16
 11469  0058F6  0AFF               	xorlw	255
 11470  0058F8  B4D8               	btfsc	status,2,c
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11474  0058FA  8460               	bsf	3936,2,c	;volatile
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11478  0058FC  CF60 FF50          	movff	3936,3920	;volatile
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11482  005900  0E00               	movlw	0
 11483  005902  0100               	movlb	0	; () banked
 11484  005904  6F77               	movwf	CANSetMask@mask& (0+255),b
 11485  005906  0E00               	movlw	0
 11486  005908  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11487  00590A  0E00               	movlw	0
 11488  00590C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11489  00590E  0E00               	movlw	0
 11490  005910  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11491  005912  0EF7               	movlw	247
 11492  005914  0100               	movlb	0	; () banked
 11493  005916  6F7B               	movwf	CANSetMask@type& (0+255),b
 11494  005918  0E01               	movlw	1
 11495  00591A  EC39  F023         	call	_CANSetMask
 11496                           
 11497                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11498  00591E  0E00               	movlw	0
 11499  005920  0100               	movlb	0	; () banked
 11500  005922  6F77               	movwf	CANSetMask@mask& (0+255),b
 11501  005924  0E00               	movlw	0
 11502  005926  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11503  005928  0E00               	movlw	0
 11504  00592A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11505  00592C  0E00               	movlw	0
 11506  00592E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11507  005930  0EF7               	movlw	247
 11508  005932  0100               	movlb	0	; () banked
 11509  005934  6F7B               	movwf	CANSetMask@type& (0+255),b
 11510  005936  0E02               	movlw	2
 11511  005938  EC39  F023         	call	_CANSetMask
 11512                           
 11513                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11514  00593C  D00F               	goto	l7680
 11515  00593E                     l7674:
 11516                           
 11517                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11518  00593E  0EF7               	movlw	247
 11519  005940  0100               	movlb	0	; () banked
 11520  005942  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11521  005944  D007               	goto	l7676
 11522  005946                     l358:
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11526  005946  0100               	movlb	0	; () banked
 11527  005948  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11528                           
 11529                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11530  00594A  0100               	movlb	0	; () banked
 11531  00594C  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11532                           
 11533                           ;inc\CANlib.h: 273: break;
 11534  00594E  D028               	goto	l7682
 11535  005950                     l359:
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11539  005950  0100               	movlb	0	; () banked
 11540  005952  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11541  005954                     l7676:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11545  005954  0EF7               	movlw	247
 11546  005956  0100               	movlb	0	; () banked
 11547  005958  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;inc\CANlib.h: 278: }
 11551                           
 11552                           ;inc\CANlib.h: 277: break;
 11553  00595A  D022               	goto	l7682
 11554  00595C                     l7680:
 11555  00595C  0E9F               	movlw	159
 11556  00595E  0100               	movlb	0	; () banked
 11557  005960  6F8A               	movwf	??_CANInitialize& (0+255),b
 11558  005962  0EFF               	movlw	255
 11559  005964  0100               	movlb	0	; () banked
 11560  005966  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11561  005968  0100               	movlb	0	; () banked
 11562  00596A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11563  00596C  0B60               	andlw	96
 11564  00596E  0100               	movlb	0	; () banked
 11565  005970  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11566  005972  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11567  005974  0100               	movlb	0	; () banked
 11568  005976  518A               	movf	??_CANInitialize& (0+255),w,b
 11569  005978  0100               	movlb	0	; () banked
 11570  00597A  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11571  00597C  0100               	movlb	0	; () banked
 11572  00597E  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11573  005980  0100               	movlb	0	; () banked
 11574  005982  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11575                           
 11576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11577                           ; Switch size 1, requested type "space"
 11578                           ; Number of cases is 1, Range of values is 0 to 0
 11579                           ; switch strategies available:
 11580                           ; Name         Instructions Cycles
 11581                           ; simple_byte            4     3 (average)
 11582                           ;	Chosen strategy is simple_byte
 11583  005984  0100               	movlb	0	; () banked
 11584  005986  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11585  005988  0A00               	xorlw	0	; case 0
 11586  00598A  A4D8               	btfss	status,2,c
 11587  00598C  D7E1               	goto	l359
 11588                           
 11589                           ; BSR set to: 0
 11590                           ; Switch size 1, requested type "space"
 11591                           ; Number of cases is 2, Range of values is 191 to 223
 11592                           ; switch strategies available:
 11593                           ; Name         Instructions Cycles
 11594                           ; simple_byte            7     4 (average)
 11595                           ;	Chosen strategy is simple_byte
 11596  00598E  0100               	movlb	0	; () banked
 11597  005990  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11598  005992  0ABF               	xorlw	191	; case 191
 11599  005994  B4D8               	btfsc	status,2,c
 11600  005996  D7D7               	goto	l358
 11601  005998  0A60               	xorlw	96	; case 223
 11602  00599A  B4D8               	btfsc	status,2,c
 11603  00599C  D7D0               	goto	l7674
 11604  00599E  D7D8               	goto	l359
 11605  0059A0                     l7682:
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11609  0059A0  0E00               	movlw	0
 11610  0059A2  0100               	movlb	0	; () banked
 11611  0059A4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11612  0059A6  0E00               	movlw	0
 11613  0059A8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11614  0059AA  0E00               	movlw	0
 11615  0059AC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11616  0059AE  0E00               	movlw	0
 11617  0059B0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11618  0059B2  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11619  0059B6  0E00               	movlw	0
 11620  0059B8  ECA9  F006         	call	_CANSetFilter
 11621                           
 11622                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11623  0059BC  0E00               	movlw	0
 11624  0059BE  0100               	movlb	0	; () banked
 11625  0059C0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11626  0059C2  0E00               	movlw	0
 11627  0059C4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11628  0059C6  0E00               	movlw	0
 11629  0059C8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11630  0059CA  0E00               	movlw	0
 11631  0059CC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11632  0059CE  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11633  0059D2  0E01               	movlw	1
 11634  0059D4  ECA9  F006         	call	_CANSetFilter
 11635                           
 11636                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11637  0059D8  0E00               	movlw	0
 11638  0059DA  0100               	movlb	0	; () banked
 11639  0059DC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11640  0059DE  0E00               	movlw	0
 11641  0059E0  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11642  0059E2  0E00               	movlw	0
 11643  0059E4  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11644  0059E6  0E00               	movlw	0
 11645  0059E8  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11646  0059EA  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11647  0059EE  0E02               	movlw	2
 11648  0059F0  ECA9  F006         	call	_CANSetFilter
 11649                           
 11650                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11651  0059F4  0E00               	movlw	0
 11652  0059F6  0100               	movlb	0	; () banked
 11653  0059F8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11654  0059FA  0E00               	movlw	0
 11655  0059FC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11656  0059FE  0E00               	movlw	0
 11657  005A00  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11658  005A02  0E00               	movlw	0
 11659  005A04  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11660  005A06  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11661  005A0A  0E03               	movlw	3
 11662  005A0C  ECA9  F006         	call	_CANSetFilter
 11663                           
 11664                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11665  005A10  0E00               	movlw	0
 11666  005A12  0100               	movlb	0	; () banked
 11667  005A14  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11668  005A16  0E00               	movlw	0
 11669  005A18  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11670  005A1A  0E00               	movlw	0
 11671  005A1C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11672  005A1E  0E00               	movlw	0
 11673  005A20  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11674  005A22  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11675  005A26  0E04               	movlw	4
 11676  005A28  ECA9  F006         	call	_CANSetFilter
 11677                           
 11678                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11679  005A2C  0E00               	movlw	0
 11680  005A2E  0100               	movlb	0	; () banked
 11681  005A30  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11682  005A32  0E00               	movlw	0
 11683  005A34  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11684  005A36  0E00               	movlw	0
 11685  005A38  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11686  005A3A  0E00               	movlw	0
 11687  005A3C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11688  005A3E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11689  005A42  0E05               	movlw	5
 11690  005A44  ECA9  F006         	call	_CANSetFilter
 11691                           
 11692                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11693  005A48  0E00               	movlw	0
 11694  005A4A  EC62  F033         	call	_CANOperationMode
 11695  005A4E  0012               	return		;funcret
 11696  005A50                     __end_of_CANInitialize:
 11697                           	opt stack 0
 11698                           tblptru	equ	0xFF8
 11699                           tblptrh	equ	0xFF7
 11700                           tblptrl	equ	0xFF6
 11701                           tablat	equ	0xFF5
 11702                           prodh	equ	0xFF4
 11703                           prodl	equ	0xFF3
 11704                           intcon	equ	0xFF2
 11705                           intcon2	equ	0xFF1
 11706                           postinc0	equ	0xFEE
 11707                           wreg	equ	0xFE8
 11708                           postdec1	equ	0xFE5
 11709                           fsr1l	equ	0xFE1
 11710                           indf2	equ	0xFDF
 11711                           postinc2	equ	0xFDE
 11712                           postdec2	equ	0xFDD
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function _CANSetMask *****************
 11718 ;; Defined at:
 11719 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  numBuffer       1    wreg     enum E16347
 11722 ;;  mask            4   23[BANK0 ] unsigned long 
 11723 ;;  type            1   27[BANK0 ] enum E16313
 11724 ;; Auto vars:     Size  Location     Type
 11725 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11726 ;;  tamp            4   33[BANK0 ] unsigned long 
 11727 ;; Return value:  Size  Location     Type
 11728 ;;		None               void
 11729 ;; Registers used:
 11730 ;;		wreg, status,2, status,0
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : 0/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11736 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;Total ram usage:       14 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; Hardware stack levels required when called:    4
 11743 ;; This function calls:
 11744 ;;		Nothing
 11745 ;; This function is called by:
 11746 ;;		_CANInitialize
 11747 ;; This function uses a non-reentrant model
 11748 ;;
 11749                           
 11750                           	psect	text31
 11751  004672                     __ptext31:
 11752                           	opt stack 0
 11753  004672                     _CANSetMask:
 11754                           	opt stack 24
 11755                           
 11756                           ;incstack = 0
 11757                           ;CANSetMask@numBuffer stored from wreg
 11758  004672  0100               	movlb	0	; () banked
 11759  004674  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11760                           
 11761                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11762  004676  0100               	movlb	0	; () banked
 11763  004678  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11764  00467A  A4D8               	btfss	status,2,c
 11765  00467C  D056               	goto	l5242
 11766                           
 11767                           ; BSR set to: 0
 11768  00467E  0100               	movlb	0	; () banked
 11769  004680  297B               	incf	CANSetMask@type& (0+255),w,b
 11770  004682  A4D8               	btfss	status,2,c
 11771  004684  D052               	goto	l5242
 11772                           
 11773                           ; BSR set to: 0
 11774                           ;inc\CANlib.h: 644: {
 11775                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11776  004686  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11777  00468A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11778  00468E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11779  004692  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11780  004696  0E04               	movlw	4
 11781  004698  D006               	goto	u6110
 11782  00469A                     u6115:
 11783  00469A  0100               	movlb	0	; () banked
 11784  00469C  90D8               	bcf	status,0,c
 11785  00469E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11786  0046A0  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11787  0046A2  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11788  0046A4  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11789  0046A6                     u6110:
 11790  0046A6  2EE8               	decfsz	wreg,f,c
 11791  0046A8  D7F8               	goto	u6115
 11792  0046AA  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11793  0046AE  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11794  0046B2  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11795  0046B6  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11799  0046BA  0100               	movlb	0	; () banked
 11800  0046BC  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11801  0046BE  0100               	movlb	0	; () banked
 11802  0046C0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11803  0046C2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11804  0046C4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11805  0046C6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11809  0046C8  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11813  0046CC  0E07               	movlw	7
 11814  0046CE  0100               	movlb	0	; () banked
 11815  0046D0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11816  0046D2  0100               	movlb	0	; () banked
 11817  0046D4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11818  0046D6  0E00               	movlw	0
 11819  0046D8  0100               	movlb	0	; () banked
 11820  0046DA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11821  0046DC  0100               	movlb	0	; () banked
 11822  0046DE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11823  0046E0  0E00               	movlw	0
 11824  0046E2  0100               	movlb	0	; () banked
 11825  0046E4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11826  0046E6  0100               	movlb	0	; () banked
 11827  0046E8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11828  0046EA  0E00               	movlw	0
 11829  0046EC  0100               	movlb	0	; () banked
 11830  0046EE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11831  0046F0  0100               	movlb	0	; () banked
 11832  0046F2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11836  0046F4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11837  0046F8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11838  0046FC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11839  004700  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11840  004704  0E05               	movlw	5
 11841  004706                     u6125:
 11842  004706  90D8               	bcf	status,0,c
 11843  004708  0100               	movlb	0	; () banked
 11844  00470A  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11845  00470C  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11846  00470E  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11847  004710  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11848  004712  2EE8               	decfsz	wreg,f,c
 11849  004714  D7F8               	goto	u6125
 11850  004716  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11851  00471A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11852  00471E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11853  004722  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11857  004726  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11858  00472A                     l5242:
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;inc\CANlib.h: 652: }
 11862                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11863  00472A  0E02               	movlw	2
 11864  00472C  0100               	movlb	0	; () banked
 11865  00472E  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11866  004730  A4D8               	btfss	status,2,c
 11867  004732  D056               	goto	l5258
 11868                           
 11869                           ; BSR set to: 0
 11870  004734  0100               	movlb	0	; () banked
 11871  004736  297B               	incf	CANSetMask@type& (0+255),w,b
 11872  004738  A4D8               	btfss	status,2,c
 11873  00473A  D052               	goto	l5258
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;inc\CANlib.h: 655: {
 11877                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11878  00473C  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11879  004740  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11880  004744  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11881  004748  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11882  00474C  0E04               	movlw	4
 11883  00474E  D006               	goto	u6150
 11884  004750                     u6155:
 11885  004750  0100               	movlb	0	; () banked
 11886  004752  90D8               	bcf	status,0,c
 11887  004754  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11888  004756  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11889  004758  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11890  00475A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11891  00475C                     u6150:
 11892  00475C  2EE8               	decfsz	wreg,f,c
 11893  00475E  D7F8               	goto	u6155
 11894  004760  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11895  004764  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11896  004768  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11897  00476C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11901  004770  0100               	movlb	0	; () banked
 11902  004772  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11903  004774  0100               	movlb	0	; () banked
 11904  004776  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11905  004778  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11906  00477A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11907  00477C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11911  00477E  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11915  004782  0E07               	movlw	7
 11916  004784  0100               	movlb	0	; () banked
 11917  004786  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11918  004788  0100               	movlb	0	; () banked
 11919  00478A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11920  00478C  0E00               	movlw	0
 11921  00478E  0100               	movlb	0	; () banked
 11922  004790  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11923  004792  0100               	movlb	0	; () banked
 11924  004794  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11925  004796  0E00               	movlw	0
 11926  004798  0100               	movlb	0	; () banked
 11927  00479A  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11928  00479C  0100               	movlb	0	; () banked
 11929  00479E  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11930  0047A0  0E00               	movlw	0
 11931  0047A2  0100               	movlb	0	; () banked
 11932  0047A4  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11933  0047A6  0100               	movlb	0	; () banked
 11934  0047A8  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11938  0047AA  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11939  0047AE  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11940  0047B2  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11941  0047B6  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11942  0047BA  0E05               	movlw	5
 11943  0047BC                     u6165:
 11944  0047BC  90D8               	bcf	status,0,c
 11945  0047BE  0100               	movlb	0	; () banked
 11946  0047C0  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11947  0047C2  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11948  0047C4  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11949  0047C6  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11950  0047C8  2EE8               	decfsz	wreg,f,c
 11951  0047CA  D7F8               	goto	u6165
 11952  0047CC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11953  0047D0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11954  0047D4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11955  0047D8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11959  0047DC  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11960  0047E0                     l5258:
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;inc\CANlib.h: 663: }
 11964                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11965  0047E0  0100               	movlb	0	; () banked
 11966  0047E2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11967  0047E4  A4D8               	btfss	status,2,c
 11968  0047E6  D087               	goto	l5290
 11969                           
 11970                           ; BSR set to: 0
 11971  0047E8  0EF7               	movlw	247
 11972  0047EA  0100               	movlb	0	; () banked
 11973  0047EC  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11974  0047EE  A4D8               	btfss	status,2,c
 11975  0047F0  D082               	goto	l5290
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;inc\CANlib.h: 666: {
 11979                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11980  0047F2  0100               	movlb	0	; () banked
 11981  0047F4  5177               	movf	CANSetMask@mask& (0+255),w,b
 11982  0047F6  0100               	movlb	0	; () banked
 11983  0047F8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11984  0047FA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11985  0047FC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11986  0047FE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11990  004800  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11994  004804  0E00               	movlw	0
 11995  004806  0100               	movlb	0	; () banked
 11996  004808  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11997  00480A  0100               	movlb	0	; () banked
 11998  00480C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11999  00480E  0EFF               	movlw	255
 12000  004810  0100               	movlb	0	; () banked
 12001  004812  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12002  004814  0100               	movlb	0	; () banked
 12003  004816  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12004  004818  0E00               	movlw	0
 12005  00481A  0100               	movlb	0	; () banked
 12006  00481C  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12007  00481E  0100               	movlb	0	; () banked
 12008  004820  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12009  004822  0E00               	movlw	0
 12010  004824  0100               	movlb	0	; () banked
 12011  004826  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12012  004828  0100               	movlb	0	; () banked
 12013  00482A  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 12017  00482C  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12018  004830  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12019  004834  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12020  004838  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12021  00483C  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12022  004840  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12023  004844  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12024  004848  0100               	movlb	0	; () banked
 12025  00484A  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12026  00484C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12027  004850  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12028  004854  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12029  004858  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 12033  00485C  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 12037  004860  0100               	movlb	0	; () banked
 12038  004862  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12039  004864  D003               	goto	l432
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 12043  004866  010F               	movlb	15	; () banked
 12044  004868  8119               	bsf	25,0,b	;volatile
 12045  00486A  D002               	goto	l433
 12046  00486C                     l432:
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;inc\CANlib.h: 676: else
 12050                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 12051  00486C  010F               	movlb	15	; () banked
 12052  00486E  9119               	bcf	25,0,b	;volatile
 12053  004870                     l433:
 12054                           
 12055                           ; BSR set to: 15
 12056                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 12057  004870  0100               	movlb	0	; () banked
 12058  004872  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12059  004874  D003               	goto	l434
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 12063  004876  010F               	movlb	15	; () banked
 12064  004878  8319               	bsf	25,1,b	;volatile
 12065  00487A  D002               	goto	l435
 12066  00487C                     l434:
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;inc\CANlib.h: 681: else
 12070                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 12071  00487C  010F               	movlb	15	; () banked
 12072  00487E  9319               	bcf	25,1,b	;volatile
 12073  004880                     l435:
 12074                           
 12075                           ; BSR set to: 15
 12076                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 12077  004880  0100               	movlb	0	; () banked
 12078  004882  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12079  004884  D003               	goto	l436
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 12083  004886  010F               	movlb	15	; () banked
 12084  004888  8B19               	bsf	25,5,b	;volatile
 12085  00488A  D002               	goto	l437
 12086  00488C                     l436:
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;inc\CANlib.h: 686: else
 12090                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 12091  00488C  010F               	movlb	15	; () banked
 12092  00488E  9B19               	bcf	25,5,b	;volatile
 12093  004890                     l437:
 12094                           
 12095                           ; BSR set to: 15
 12096                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 12097  004890  0100               	movlb	0	; () banked
 12098  004892  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12099  004894  D003               	goto	l438
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 12103  004896  010F               	movlb	15	; () banked
 12104  004898  8D19               	bsf	25,6,b	;volatile
 12105  00489A  D002               	goto	l439
 12106  00489C                     l438:
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;inc\CANlib.h: 691: else
 12110                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 12111  00489C  010F               	movlb	15	; () banked
 12112  00489E  9D19               	bcf	25,6,b	;volatile
 12113  0048A0                     l439:
 12114                           
 12115                           ; BSR set to: 15
 12116                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 12117  0048A0  0100               	movlb	0	; () banked
 12118  0048A2  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12119  0048A4  D003               	goto	l440
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 12123  0048A6  010F               	movlb	15	; () banked
 12124  0048A8  8F19               	bsf	25,7,b	;volatile
 12125  0048AA  D002               	goto	l5284
 12126  0048AC                     l440:
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;inc\CANlib.h: 696: else
 12130                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 12131  0048AC  010F               	movlb	15	; () banked
 12132  0048AE  9F19               	bcf	25,7,b	;volatile
 12133  0048B0                     l5284:
 12134                           
 12135                           ; BSR set to: 15
 12136                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 12137  0048B0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12138  0048B4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12139  0048B8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12140  0048BC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12141  0048C0  0E16               	movlw	22
 12142  0048C2  D006               	goto	u6240
 12143  0048C4                     u6245:
 12144  0048C4  0100               	movlb	0	; () banked
 12145  0048C6  90D8               	bcf	status,0,c
 12146  0048C8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12147  0048CA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12148  0048CC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12149  0048CE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12150  0048D0                     u6240:
 12151  0048D0  2EE8               	decfsz	wreg,f,c
 12152  0048D2  D7F8               	goto	u6245
 12153  0048D4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12154  0048D8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12155  0048DC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12156  0048E0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 12160  0048E4  0100               	movlb	0	; () banked
 12161  0048E6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12162  0048E8  0100               	movlb	0	; () banked
 12163  0048EA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12164  0048EC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12165  0048EE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12166  0048F0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 12170  0048F2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12171  0048F6                     l5290:
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;inc\CANlib.h: 702: }
 12175                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12176  0048F6  0E02               	movlw	2
 12177  0048F8  0100               	movlb	0	; () banked
 12178  0048FA  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12179  0048FC  A4D8               	btfss	status,2,c
 12180  0048FE  0012               	return	
 12181                           
 12182                           ; BSR set to: 0
 12183  004900  0EF7               	movlw	247
 12184  004902  0100               	movlb	0	; () banked
 12185  004904  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12186  004906  A4D8               	btfss	status,2,c
 12187  004908  0012               	return	
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;inc\CANlib.h: 705: {
 12191                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 12192  00490A  0100               	movlb	0	; () banked
 12193  00490C  5177               	movf	CANSetMask@mask& (0+255),w,b
 12194  00490E  0100               	movlb	0	; () banked
 12195  004910  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12196  004912  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12197  004914  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12198  004916  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 12202  004918  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 12206  00491C  0E00               	movlw	0
 12207  00491E  0100               	movlb	0	; () banked
 12208  004920  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12209  004922  0100               	movlb	0	; () banked
 12210  004924  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12211  004926  0EFF               	movlw	255
 12212  004928  0100               	movlb	0	; () banked
 12213  00492A  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12214  00492C  0100               	movlb	0	; () banked
 12215  00492E  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12216  004930  0E00               	movlw	0
 12217  004932  0100               	movlb	0	; () banked
 12218  004934  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12219  004936  0100               	movlb	0	; () banked
 12220  004938  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12221  00493A  0E00               	movlw	0
 12222  00493C  0100               	movlb	0	; () banked
 12223  00493E  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12224  004940  0100               	movlb	0	; () banked
 12225  004942  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 12229  004944  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12230  004948  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12231  00494C  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12232  004950  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12233  004954  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12234  004958  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12235  00495C  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12236  004960  0100               	movlb	0	; () banked
 12237  004962  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12238  004964  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12239  004968  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12240  00496C  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12241  004970  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 12245  004974  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12249  004978  0100               	movlb	0	; () banked
 12250  00497A  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12251  00497C  D003               	goto	l443
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12255  00497E  010F               	movlb	15	; () banked
 12256  004980  811D               	bsf	29,0,b	;volatile
 12257  004982  D002               	goto	l444
 12258  004984                     l443:
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;inc\CANlib.h: 715: else
 12262                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12263  004984  010F               	movlb	15	; () banked
 12264  004986  911D               	bcf	29,0,b	;volatile
 12265  004988                     l444:
 12266                           
 12267                           ; BSR set to: 15
 12268                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12269  004988  0100               	movlb	0	; () banked
 12270  00498A  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12271  00498C  D003               	goto	l445
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12275  00498E  010F               	movlb	15	; () banked
 12276  004990  831D               	bsf	29,1,b	;volatile
 12277  004992  D002               	goto	l446
 12278  004994                     l445:
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;inc\CANlib.h: 720: else
 12282                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12283  004994  010F               	movlb	15	; () banked
 12284  004996  931D               	bcf	29,1,b	;volatile
 12285  004998                     l446:
 12286                           
 12287                           ; BSR set to: 15
 12288                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12289  004998  0100               	movlb	0	; () banked
 12290  00499A  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12291  00499C  D003               	goto	l447
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12295  00499E  010F               	movlb	15	; () banked
 12296  0049A0  8B1D               	bsf	29,5,b	;volatile
 12297  0049A2  D002               	goto	l448
 12298  0049A4                     l447:
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;inc\CANlib.h: 725: else
 12302                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12303  0049A4  010F               	movlb	15	; () banked
 12304  0049A6  9B1D               	bcf	29,5,b	;volatile
 12305  0049A8                     l448:
 12306                           
 12307                           ; BSR set to: 15
 12308                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12309  0049A8  0100               	movlb	0	; () banked
 12310  0049AA  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12311  0049AC  D003               	goto	l449
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12315  0049AE  010F               	movlb	15	; () banked
 12316  0049B0  8D1D               	bsf	29,6,b	;volatile
 12317  0049B2  D002               	goto	l450
 12318  0049B4                     l449:
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;inc\CANlib.h: 730: else
 12322                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12323  0049B4  010F               	movlb	15	; () banked
 12324  0049B6  9D1D               	bcf	29,6,b	;volatile
 12325  0049B8                     l450:
 12326                           
 12327                           ; BSR set to: 15
 12328                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12329  0049B8  0100               	movlb	0	; () banked
 12330  0049BA  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12331  0049BC  D003               	goto	l451
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12335  0049BE  010F               	movlb	15	; () banked
 12336  0049C0  8F1D               	bsf	29,7,b	;volatile
 12337  0049C2  D002               	goto	l5316
 12338  0049C4                     l451:
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;inc\CANlib.h: 735: else
 12342                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12343  0049C4  010F               	movlb	15	; () banked
 12344  0049C6  9F1D               	bcf	29,7,b	;volatile
 12345  0049C8                     l5316:
 12346                           
 12347                           ; BSR set to: 15
 12348                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12349  0049C8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12350  0049CC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12351  0049D0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12352  0049D4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12353  0049D8  0E16               	movlw	22
 12354  0049DA  D006               	goto	u6320
 12355  0049DC                     u6325:
 12356  0049DC  0100               	movlb	0	; () banked
 12357  0049DE  90D8               	bcf	status,0,c
 12358  0049E0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12359  0049E2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12360  0049E4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12361  0049E6  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12362  0049E8                     u6320:
 12363  0049E8  2EE8               	decfsz	wreg,f,c
 12364  0049EA  D7F8               	goto	u6325
 12365  0049EC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12366  0049F0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12367  0049F4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12368  0049F8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12372  0049FC  0100               	movlb	0	; () banked
 12373  0049FE  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12374  004A00  0100               	movlb	0	; () banked
 12375  004A02  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12376  004A04  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12377  004A06  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12378  004A08  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12382  004A0A  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12383  004A0E  0012               	return	
 12384  004A10                     __end_of_CANSetMask:
 12385                           	opt stack 0
 12386                           tblptru	equ	0xFF8
 12387                           tblptrh	equ	0xFF7
 12388                           tblptrl	equ	0xFF6
 12389                           tablat	equ	0xFF5
 12390                           prodh	equ	0xFF4
 12391                           prodl	equ	0xFF3
 12392                           intcon	equ	0xFF2
 12393                           intcon2	equ	0xFF1
 12394                           postinc0	equ	0xFEE
 12395                           wreg	equ	0xFE8
 12396                           postdec1	equ	0xFE5
 12397                           fsr1l	equ	0xFE1
 12398                           indf2	equ	0xFDF
 12399                           postinc2	equ	0xFDE
 12400                           postdec2	equ	0xFDD
 12401                           fsr2h	equ	0xFDA
 12402                           fsr2l	equ	0xFD9
 12403                           status	equ	0xFD8
 12404                           
 12405 ;; *************** function _CANSetFilter *****************
 12406 ;; Defined at:
 12407 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;  numBuffer       1    wreg     enum E16350
 12410 ;;  filter          4   23[BANK0 ] unsigned long 
 12411 ;;  type            1   27[BANK0 ] enum E16313
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12414 ;;  tamp            4   33[BANK0 ] unsigned long 
 12415 ;; Return value:  Size  Location     Type
 12416 ;;		None               void
 12417 ;; Registers used:
 12418 ;;		wreg, status,2, status,0
 12419 ;; Tracked objects:
 12420 ;;		On entry : 0/0
 12421 ;;		On exit  : 0/0
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12424 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;Total ram usage:       14 bytes
 12429 ;; Hardware stack levels used:    1
 12430 ;; Hardware stack levels required when called:    4
 12431 ;; This function calls:
 12432 ;;		Nothing
 12433 ;; This function is called by:
 12434 ;;		_CANInitialize
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text32
 12439  000D52                     __ptext32:
 12440                           	opt stack 0
 12441  000D52                     _CANSetFilter:
 12442                           	opt stack 24
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;incstack = 0
 12446                           ;CANSetFilter@numBuffer stored from wreg
 12447  000D52  0100               	movlb	0	; () banked
 12448  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12449                           
 12450                           ;inc\CANlib.h: 750: unsigned long tamp;
 12451                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12452  000D56  0100               	movlb	0	; () banked
 12453  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12454  000D5A  0100               	movlb	0	; () banked
 12455  000D5C  A4D8               	btfss	status,2,c
 12456  000D5E  D058               	goto	l5340
 12457                           
 12458                           ; BSR set to: 0
 12459  000D60  0100               	movlb	0	; () banked
 12460  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12461  000D64  A4D8               	btfss	status,2,c
 12462  000D66  D054               	goto	l5340
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;inc\CANlib.h: 753: {
 12466                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12467  000D68  010F               	movlb	15	; () banked
 12468  000D6A  9701               	bcf	1,3,b	;volatile
 12469                           
 12470                           ; BSR set to: 15
 12471                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12472  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12473  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12474  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12475  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12476  000D7C  0E04               	movlw	4
 12477  000D7E  D006               	goto	u6350
 12478  000D80                     u6355:
 12479  000D80  0100               	movlb	0	; () banked
 12480  000D82  90D8               	bcf	status,0,c
 12481  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12482  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12483  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12484  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12485  000D8C                     u6350:
 12486  000D8C  2EE8               	decfsz	wreg,f,c
 12487  000D8E  D7F8               	goto	u6355
 12488  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12489  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12490  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12491  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12495  000DA0  0100               	movlb	0	; () banked
 12496  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12497  000DA4  0100               	movlb	0	; () banked
 12498  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12499  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12500  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12501  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12505  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12509  000DB2  0E07               	movlw	7
 12510  000DB4  0100               	movlb	0	; () banked
 12511  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12512  000DB8  0100               	movlb	0	; () banked
 12513  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12514  000DBC  0E00               	movlw	0
 12515  000DBE  0100               	movlb	0	; () banked
 12516  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12517  000DC2  0100               	movlb	0	; () banked
 12518  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12519  000DC6  0E00               	movlw	0
 12520  000DC8  0100               	movlb	0	; () banked
 12521  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12522  000DCC  0100               	movlb	0	; () banked
 12523  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12524  000DD0  0E00               	movlw	0
 12525  000DD2  0100               	movlb	0	; () banked
 12526  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12527  000DD6  0100               	movlb	0	; () banked
 12528  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12532  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12533  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12534  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12535  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12536  000DEA  0E05               	movlw	5
 12537  000DEC                     u6365:
 12538  000DEC  90D8               	bcf	status,0,c
 12539  000DEE  0100               	movlb	0	; () banked
 12540  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12541  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12542  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12543  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12544  000DF8  2EE8               	decfsz	wreg,f,c
 12545  000DFA  D7F8               	goto	u6365
 12546  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12547  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12548  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12549  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12553  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12554  000E10                     l5340:
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;inc\CANlib.h: 763: }
 12558                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12559  000E10  0100               	movlb	0	; () banked
 12560  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12561  000E14  A4D8               	btfss	status,2,c
 12562  000E16  D058               	goto	l5358
 12563                           
 12564                           ; BSR set to: 0
 12565  000E18  0100               	movlb	0	; () banked
 12566  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12567  000E1C  A4D8               	btfss	status,2,c
 12568  000E1E  D054               	goto	l5358
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;inc\CANlib.h: 766: {
 12572                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12573  000E20  010F               	movlb	15	; () banked
 12574  000E22  9705               	bcf	5,3,b	;volatile
 12575                           
 12576                           ; BSR set to: 15
 12577                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12578  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12579  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12580  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12581  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12582  000E34  0E04               	movlw	4
 12583  000E36  D006               	goto	u6390
 12584  000E38                     u6395:
 12585  000E38  0100               	movlb	0	; () banked
 12586  000E3A  90D8               	bcf	status,0,c
 12587  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12588  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12589  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12590  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12591  000E44                     u6390:
 12592  000E44  2EE8               	decfsz	wreg,f,c
 12593  000E46  D7F8               	goto	u6395
 12594  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12595  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12596  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12597  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12601  000E58  0100               	movlb	0	; () banked
 12602  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12603  000E5C  0100               	movlb	0	; () banked
 12604  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12605  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12606  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12607  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12611  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12615  000E6A  0E07               	movlw	7
 12616  000E6C  0100               	movlb	0	; () banked
 12617  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12618  000E70  0100               	movlb	0	; () banked
 12619  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12620  000E74  0E00               	movlw	0
 12621  000E76  0100               	movlb	0	; () banked
 12622  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12623  000E7A  0100               	movlb	0	; () banked
 12624  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12625  000E7E  0E00               	movlw	0
 12626  000E80  0100               	movlb	0	; () banked
 12627  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12628  000E84  0100               	movlb	0	; () banked
 12629  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12630  000E88  0E00               	movlw	0
 12631  000E8A  0100               	movlb	0	; () banked
 12632  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12633  000E8E  0100               	movlb	0	; () banked
 12634  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12638  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12639  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12640  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12641  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12642  000EA2  0E05               	movlw	5
 12643  000EA4                     u6405:
 12644  000EA4  90D8               	bcf	status,0,c
 12645  000EA6  0100               	movlb	0	; () banked
 12646  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12647  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12648  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12649  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12650  000EB0  2EE8               	decfsz	wreg,f,c
 12651  000EB2  D7F8               	goto	u6405
 12652  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12653  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12654  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12655  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12659  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12660  000EC8                     l5358:
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;inc\CANlib.h: 776: }
 12664                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12665  000EC8  0E02               	movlw	2
 12666  000ECA  0100               	movlb	0	; () banked
 12667  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12668  000ECE  A4D8               	btfss	status,2,c
 12669  000ED0  D058               	goto	l5376
 12670                           
 12671                           ; BSR set to: 0
 12672  000ED2  0100               	movlb	0	; () banked
 12673  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12674  000ED6  A4D8               	btfss	status,2,c
 12675  000ED8  D054               	goto	l5376
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;inc\CANlib.h: 779: {
 12679                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12680  000EDA  010F               	movlb	15	; () banked
 12681  000EDC  9709               	bcf	9,3,b	;volatile
 12682                           
 12683                           ; BSR set to: 15
 12684                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12685  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12686  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12687  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12688  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12689  000EEE  0E04               	movlw	4
 12690  000EF0  D006               	goto	u6430
 12691  000EF2                     u6435:
 12692  000EF2  0100               	movlb	0	; () banked
 12693  000EF4  90D8               	bcf	status,0,c
 12694  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12695  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12696  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12697  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12698  000EFE                     u6430:
 12699  000EFE  2EE8               	decfsz	wreg,f,c
 12700  000F00  D7F8               	goto	u6435
 12701  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12702  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12703  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12704  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12708  000F12  0100               	movlb	0	; () banked
 12709  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12710  000F16  0100               	movlb	0	; () banked
 12711  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12712  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12713  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12714  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12718  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12722  000F24  0E07               	movlw	7
 12723  000F26  0100               	movlb	0	; () banked
 12724  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12725  000F2A  0100               	movlb	0	; () banked
 12726  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12727  000F2E  0E00               	movlw	0
 12728  000F30  0100               	movlb	0	; () banked
 12729  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12730  000F34  0100               	movlb	0	; () banked
 12731  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12732  000F38  0E00               	movlw	0
 12733  000F3A  0100               	movlb	0	; () banked
 12734  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12735  000F3E  0100               	movlb	0	; () banked
 12736  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12737  000F42  0E00               	movlw	0
 12738  000F44  0100               	movlb	0	; () banked
 12739  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12740  000F48  0100               	movlb	0	; () banked
 12741  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12745  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12746  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12747  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12748  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12749  000F5C  0E05               	movlw	5
 12750  000F5E                     u6445:
 12751  000F5E  90D8               	bcf	status,0,c
 12752  000F60  0100               	movlb	0	; () banked
 12753  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12754  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12755  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12756  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12757  000F6A  2EE8               	decfsz	wreg,f,c
 12758  000F6C  D7F8               	goto	u6445
 12759  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12760  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12761  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12762  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12766  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12767  000F82                     l5376:
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;inc\CANlib.h: 789: }
 12771                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12772  000F82  0E03               	movlw	3
 12773  000F84  0100               	movlb	0	; () banked
 12774  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12775  000F88  A4D8               	btfss	status,2,c
 12776  000F8A  D058               	goto	l5394
 12777                           
 12778                           ; BSR set to: 0
 12779  000F8C  0100               	movlb	0	; () banked
 12780  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12781  000F90  A4D8               	btfss	status,2,c
 12782  000F92  D054               	goto	l5394
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;inc\CANlib.h: 792: {
 12786                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12787  000F94  010F               	movlb	15	; () banked
 12788  000F96  970D               	bcf	13,3,b	;volatile
 12789                           
 12790                           ; BSR set to: 15
 12791                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12792  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12793  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12794  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12795  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12796  000FA8  0E04               	movlw	4
 12797  000FAA  D006               	goto	u6470
 12798  000FAC                     u6475:
 12799  000FAC  0100               	movlb	0	; () banked
 12800  000FAE  90D8               	bcf	status,0,c
 12801  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12802  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12803  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12804  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12805  000FB8                     u6470:
 12806  000FB8  2EE8               	decfsz	wreg,f,c
 12807  000FBA  D7F8               	goto	u6475
 12808  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12809  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12810  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12811  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12815  000FCC  0100               	movlb	0	; () banked
 12816  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12817  000FD0  0100               	movlb	0	; () banked
 12818  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12819  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12820  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12821  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12825  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12829  000FDE  0E07               	movlw	7
 12830  000FE0  0100               	movlb	0	; () banked
 12831  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12832  000FE4  0100               	movlb	0	; () banked
 12833  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12834  000FE8  0E00               	movlw	0
 12835  000FEA  0100               	movlb	0	; () banked
 12836  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12837  000FEE  0100               	movlb	0	; () banked
 12838  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12839  000FF2  0E00               	movlw	0
 12840  000FF4  0100               	movlb	0	; () banked
 12841  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12842  000FF8  0100               	movlb	0	; () banked
 12843  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12844  000FFC  0E00               	movlw	0
 12845  000FFE  0100               	movlb	0	; () banked
 12846  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12847  001002  0100               	movlb	0	; () banked
 12848  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12852  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12853  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12854  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12855  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12856  001016  0E05               	movlw	5
 12857  001018                     u6485:
 12858  001018  90D8               	bcf	status,0,c
 12859  00101A  0100               	movlb	0	; () banked
 12860  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12861  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12862  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12863  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12864  001024  2EE8               	decfsz	wreg,f,c
 12865  001026  D7F8               	goto	u6485
 12866  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12867  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12868  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12869  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12873  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12874  00103C                     l5394:
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;inc\CANlib.h: 802: }
 12878                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12879  00103C  0E04               	movlw	4
 12880  00103E  0100               	movlb	0	; () banked
 12881  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12882  001042  A4D8               	btfss	status,2,c
 12883  001044  D058               	goto	l5412
 12884                           
 12885                           ; BSR set to: 0
 12886  001046  0100               	movlb	0	; () banked
 12887  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12888  00104A  A4D8               	btfss	status,2,c
 12889  00104C  D054               	goto	l5412
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;inc\CANlib.h: 805: {
 12893                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12894  00104E  010F               	movlb	15	; () banked
 12895  001050  9711               	bcf	17,3,b	;volatile
 12896                           
 12897                           ; BSR set to: 15
 12898                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12899  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12900  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12901  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12902  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12903  001062  0E04               	movlw	4
 12904  001064  D006               	goto	u6510
 12905  001066                     u6515:
 12906  001066  0100               	movlb	0	; () banked
 12907  001068  90D8               	bcf	status,0,c
 12908  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12909  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12910  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12911  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12912  001072                     u6510:
 12913  001072  2EE8               	decfsz	wreg,f,c
 12914  001074  D7F8               	goto	u6515
 12915  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12916  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12917  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12918  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12922  001086  0100               	movlb	0	; () banked
 12923  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12924  00108A  0100               	movlb	0	; () banked
 12925  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12926  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12927  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12928  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12932  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12936  001098  0E07               	movlw	7
 12937  00109A  0100               	movlb	0	; () banked
 12938  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12939  00109E  0100               	movlb	0	; () banked
 12940  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12941  0010A2  0E00               	movlw	0
 12942  0010A4  0100               	movlb	0	; () banked
 12943  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12944  0010A8  0100               	movlb	0	; () banked
 12945  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12946  0010AC  0E00               	movlw	0
 12947  0010AE  0100               	movlb	0	; () banked
 12948  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12949  0010B2  0100               	movlb	0	; () banked
 12950  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12951  0010B6  0E00               	movlw	0
 12952  0010B8  0100               	movlb	0	; () banked
 12953  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12954  0010BC  0100               	movlb	0	; () banked
 12955  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12959  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12960  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12961  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12962  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12963  0010D0  0E05               	movlw	5
 12964  0010D2                     u6525:
 12965  0010D2  90D8               	bcf	status,0,c
 12966  0010D4  0100               	movlb	0	; () banked
 12967  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12968  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12969  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12970  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12971  0010DE  2EE8               	decfsz	wreg,f,c
 12972  0010E0  D7F8               	goto	u6525
 12973  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12974  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12975  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12976  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12980  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12981  0010F6                     l5412:
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;inc\CANlib.h: 815: }
 12985                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12986  0010F6  0E05               	movlw	5
 12987  0010F8  0100               	movlb	0	; () banked
 12988  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12989  0010FC  A4D8               	btfss	status,2,c
 12990  0010FE  D058               	goto	l5430
 12991                           
 12992                           ; BSR set to: 0
 12993  001100  0100               	movlb	0	; () banked
 12994  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12995  001104  A4D8               	btfss	status,2,c
 12996  001106  D054               	goto	l5430
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;inc\CANlib.h: 818: {
 13000                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 13001  001108  010F               	movlb	15	; () banked
 13002  00110A  9715               	bcf	21,3,b	;volatile
 13003                           
 13004                           ; BSR set to: 15
 13005                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 13006  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13007  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13008  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13009  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13010  00111C  0E04               	movlw	4
 13011  00111E  D006               	goto	u6550
 13012  001120                     u6555:
 13013  001120  0100               	movlb	0	; () banked
 13014  001122  90D8               	bcf	status,0,c
 13015  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13016  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13017  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13018  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13019  00112C                     u6550:
 13020  00112C  2EE8               	decfsz	wreg,f,c
 13021  00112E  D7F8               	goto	u6555
 13022  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13023  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13024  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13025  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 13029  001140  0100               	movlb	0	; () banked
 13030  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13031  001144  0100               	movlb	0	; () banked
 13032  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13033  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13034  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13035  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 13039  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 13043  001152  0E07               	movlw	7
 13044  001154  0100               	movlb	0	; () banked
 13045  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13046  001158  0100               	movlb	0	; () banked
 13047  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13048  00115C  0E00               	movlw	0
 13049  00115E  0100               	movlb	0	; () banked
 13050  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13051  001162  0100               	movlb	0	; () banked
 13052  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13053  001166  0E00               	movlw	0
 13054  001168  0100               	movlb	0	; () banked
 13055  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13056  00116C  0100               	movlb	0	; () banked
 13057  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13058  001170  0E00               	movlw	0
 13059  001172  0100               	movlb	0	; () banked
 13060  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13061  001176  0100               	movlb	0	; () banked
 13062  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 13066  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13067  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13068  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13069  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13070  00118A  0E05               	movlw	5
 13071  00118C                     u6565:
 13072  00118C  90D8               	bcf	status,0,c
 13073  00118E  0100               	movlb	0	; () banked
 13074  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13075  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13076  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13077  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13078  001198  2EE8               	decfsz	wreg,f,c
 13079  00119A  D7F8               	goto	u6565
 13080  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13081  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13082  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13083  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 13087  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13088  0011B0                     l5430:
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;inc\CANlib.h: 828: }
 13092                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13093  0011B0  0100               	movlb	0	; () banked
 13094  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13095  0011B4  0100               	movlb	0	; () banked
 13096  0011B6  A4D8               	btfss	status,2,c
 13097  0011B8  D089               	goto	l5464
 13098                           
 13099                           ; BSR set to: 0
 13100  0011BA  0EF7               	movlw	247
 13101  0011BC  0100               	movlb	0	; () banked
 13102  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13103  0011C0  A4D8               	btfss	status,2,c
 13104  0011C2  D084               	goto	l5464
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;inc\CANlib.h: 832: {
 13108                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 13109  0011C4  010F               	movlb	15	; () banked
 13110  0011C6  8701               	bsf	1,3,b	;volatile
 13111                           
 13112                           ; BSR set to: 15
 13113                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 13114  0011C8  0100               	movlb	0	; () banked
 13115  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13116  0011CC  0100               	movlb	0	; () banked
 13117  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13118  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13119  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13120  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 13124  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 13128  0011DA  0E00               	movlw	0
 13129  0011DC  0100               	movlb	0	; () banked
 13130  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13131  0011E0  0100               	movlb	0	; () banked
 13132  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13133  0011E4  0EFF               	movlw	255
 13134  0011E6  0100               	movlb	0	; () banked
 13135  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13136  0011EA  0100               	movlb	0	; () banked
 13137  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13138  0011EE  0E00               	movlw	0
 13139  0011F0  0100               	movlb	0	; () banked
 13140  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13141  0011F4  0100               	movlb	0	; () banked
 13142  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13143  0011F8  0E00               	movlw	0
 13144  0011FA  0100               	movlb	0	; () banked
 13145  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13146  0011FE  0100               	movlb	0	; () banked
 13147  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 13151  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13152  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13153  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13154  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13155  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13156  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13157  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13158  00121E  0100               	movlb	0	; () banked
 13159  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13160  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13161  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13162  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13163  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 13167  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 13171  001236  0100               	movlb	0	; () banked
 13172  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13173  00123A  D003               	goto	l463
 13174                           
 13175                           ; BSR set to: 0
 13176                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 13177  00123C  010F               	movlb	15	; () banked
 13178  00123E  8101               	bsf	1,0,b	;volatile
 13179  001240  D002               	goto	l464
 13180  001242                     l463:
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;inc\CANlib.h: 844: else
 13184                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 13185  001242  010F               	movlb	15	; () banked
 13186  001244  9101               	bcf	1,0,b	;volatile
 13187  001246                     l464:
 13188                           
 13189                           ; BSR set to: 15
 13190                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 13191  001246  0100               	movlb	0	; () banked
 13192  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13193  00124A  D003               	goto	l465
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 13197  00124C  010F               	movlb	15	; () banked
 13198  00124E  8301               	bsf	1,1,b	;volatile
 13199  001250  D002               	goto	l466
 13200  001252                     l465:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;inc\CANlib.h: 849: else
 13204                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 13205  001252  010F               	movlb	15	; () banked
 13206  001254  9301               	bcf	1,1,b	;volatile
 13207  001256                     l466:
 13208                           
 13209                           ; BSR set to: 15
 13210                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 13211  001256  0100               	movlb	0	; () banked
 13212  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13213  00125A  D003               	goto	l467
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 13217  00125C  010F               	movlb	15	; () banked
 13218  00125E  8B01               	bsf	1,5,b	;volatile
 13219  001260  D002               	goto	l468
 13220  001262                     l467:
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;inc\CANlib.h: 854: else
 13224                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 13225  001262  010F               	movlb	15	; () banked
 13226  001264  9B01               	bcf	1,5,b	;volatile
 13227  001266                     l468:
 13228                           
 13229                           ; BSR set to: 15
 13230                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 13231  001266  0100               	movlb	0	; () banked
 13232  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13233  00126A  D003               	goto	l469
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 13237  00126C  010F               	movlb	15	; () banked
 13238  00126E  8D01               	bsf	1,6,b	;volatile
 13239  001270  D002               	goto	l470
 13240  001272                     l469:
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;inc\CANlib.h: 859: else
 13244                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 13245  001272  010F               	movlb	15	; () banked
 13246  001274  9D01               	bcf	1,6,b	;volatile
 13247  001276                     l470:
 13248                           
 13249                           ; BSR set to: 15
 13250                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13251  001276  0100               	movlb	0	; () banked
 13252  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13253  00127A  D003               	goto	l471
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13257  00127C  010F               	movlb	15	; () banked
 13258  00127E  8F01               	bsf	1,7,b	;volatile
 13259  001280  D002               	goto	l5458
 13260  001282                     l471:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;inc\CANlib.h: 864: else
 13264                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13265  001282  010F               	movlb	15	; () banked
 13266  001284  9F01               	bcf	1,7,b	;volatile
 13267  001286                     l5458:
 13268                           
 13269                           ; BSR set to: 15
 13270                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13271  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13272  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13273  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13274  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13275  001296  0E16               	movlw	22
 13276  001298  D006               	goto	u6640
 13277  00129A                     u6645:
 13278  00129A  0100               	movlb	0	; () banked
 13279  00129C  90D8               	bcf	status,0,c
 13280  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13281  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13282  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13283  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13284  0012A6                     u6640:
 13285  0012A6  2EE8               	decfsz	wreg,f,c
 13286  0012A8  D7F8               	goto	u6645
 13287  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13288  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13289  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13290  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13294  0012BA  0100               	movlb	0	; () banked
 13295  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13296  0012BE  0100               	movlb	0	; () banked
 13297  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13298  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13299  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13300  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13304  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13305  0012CC                     l5464:
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;inc\CANlib.h: 870: }
 13309                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13310  0012CC  0100               	movlb	0	; () banked
 13311  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13312  0012D0  A4D8               	btfss	status,2,c
 13313  0012D2  D089               	goto	l5498
 13314                           
 13315                           ; BSR set to: 0
 13316  0012D4  0EF7               	movlw	247
 13317  0012D6  0100               	movlb	0	; () banked
 13318  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13319  0012DA  A4D8               	btfss	status,2,c
 13320  0012DC  D084               	goto	l5498
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;inc\CANlib.h: 873: {
 13324                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13325  0012DE  010F               	movlb	15	; () banked
 13326  0012E0  8705               	bsf	5,3,b	;volatile
 13327                           
 13328                           ; BSR set to: 15
 13329                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13330  0012E2  0100               	movlb	0	; () banked
 13331  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13332  0012E6  0100               	movlb	0	; () banked
 13333  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13334  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13335  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13336  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13340  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13344  0012F4  0E00               	movlw	0
 13345  0012F6  0100               	movlb	0	; () banked
 13346  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13347  0012FA  0100               	movlb	0	; () banked
 13348  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13349  0012FE  0EFF               	movlw	255
 13350  001300  0100               	movlb	0	; () banked
 13351  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13352  001304  0100               	movlb	0	; () banked
 13353  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13354  001308  0E00               	movlw	0
 13355  00130A  0100               	movlb	0	; () banked
 13356  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13357  00130E  0100               	movlb	0	; () banked
 13358  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13359  001312  0E00               	movlw	0
 13360  001314  0100               	movlb	0	; () banked
 13361  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13362  001318  0100               	movlb	0	; () banked
 13363  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13367  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13368  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13369  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13370  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13371  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13372  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13373  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13374  001338  0100               	movlb	0	; () banked
 13375  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13376  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13377  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13378  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13379  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13383  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13387  001350  0100               	movlb	0	; () banked
 13388  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13389  001354  D003               	goto	l474
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13393  001356  010F               	movlb	15	; () banked
 13394  001358  8105               	bsf	5,0,b	;volatile
 13395  00135A  D002               	goto	l475
 13396  00135C                     l474:
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;inc\CANlib.h: 885: else
 13400                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13401  00135C  010F               	movlb	15	; () banked
 13402  00135E  9105               	bcf	5,0,b	;volatile
 13403  001360                     l475:
 13404                           
 13405                           ; BSR set to: 15
 13406                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13407  001360  0100               	movlb	0	; () banked
 13408  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13409  001364  D003               	goto	l476
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13413  001366  010F               	movlb	15	; () banked
 13414  001368  8305               	bsf	5,1,b	;volatile
 13415  00136A  D002               	goto	l477
 13416  00136C                     l476:
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;inc\CANlib.h: 890: else
 13420                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13421  00136C  010F               	movlb	15	; () banked
 13422  00136E  9305               	bcf	5,1,b	;volatile
 13423  001370                     l477:
 13424                           
 13425                           ; BSR set to: 15
 13426                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13427  001370  0100               	movlb	0	; () banked
 13428  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13429  001374  D003               	goto	l478
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13433  001376  010F               	movlb	15	; () banked
 13434  001378  8B05               	bsf	5,5,b	;volatile
 13435  00137A  D002               	goto	l479
 13436  00137C                     l478:
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;inc\CANlib.h: 895: else
 13440                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13441  00137C  010F               	movlb	15	; () banked
 13442  00137E  9B05               	bcf	5,5,b	;volatile
 13443  001380                     l479:
 13444                           
 13445                           ; BSR set to: 15
 13446                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13447  001380  0100               	movlb	0	; () banked
 13448  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13449  001384  D003               	goto	l480
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13453  001386  010F               	movlb	15	; () banked
 13454  001388  8D05               	bsf	5,6,b	;volatile
 13455  00138A  D002               	goto	l481
 13456  00138C                     l480:
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;inc\CANlib.h: 900: else
 13460                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13461  00138C  010F               	movlb	15	; () banked
 13462  00138E  9D05               	bcf	5,6,b	;volatile
 13463  001390                     l481:
 13464                           
 13465                           ; BSR set to: 15
 13466                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13467  001390  0100               	movlb	0	; () banked
 13468  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13469  001394  D003               	goto	l482
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13473  001396  010F               	movlb	15	; () banked
 13474  001398  8F05               	bsf	5,7,b	;volatile
 13475  00139A  D002               	goto	l5492
 13476  00139C                     l482:
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;inc\CANlib.h: 905: else
 13480                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13481  00139C  010F               	movlb	15	; () banked
 13482  00139E  9F05               	bcf	5,7,b	;volatile
 13483  0013A0                     l5492:
 13484                           
 13485                           ; BSR set to: 15
 13486                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13487  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13488  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13489  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13490  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13491  0013B0  0E16               	movlw	22
 13492  0013B2  D006               	goto	u6720
 13493  0013B4                     u6725:
 13494  0013B4  0100               	movlb	0	; () banked
 13495  0013B6  90D8               	bcf	status,0,c
 13496  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13497  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13498  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13499  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13500  0013C0                     u6720:
 13501  0013C0  2EE8               	decfsz	wreg,f,c
 13502  0013C2  D7F8               	goto	u6725
 13503  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13504  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13505  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13506  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13510  0013D4  0100               	movlb	0	; () banked
 13511  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13512  0013D8  0100               	movlb	0	; () banked
 13513  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13514  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13515  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13516  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13520  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13521  0013E6                     l5498:
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;inc\CANlib.h: 911: }
 13525                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13526  0013E6  0E02               	movlw	2
 13527  0013E8  0100               	movlb	0	; () banked
 13528  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13529  0013EC  A4D8               	btfss	status,2,c
 13530  0013EE  D089               	goto	l5532
 13531                           
 13532                           ; BSR set to: 0
 13533  0013F0  0EF7               	movlw	247
 13534  0013F2  0100               	movlb	0	; () banked
 13535  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13536  0013F6  A4D8               	btfss	status,2,c
 13537  0013F8  D084               	goto	l5532
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;inc\CANlib.h: 915: {
 13541                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13542  0013FA  010F               	movlb	15	; () banked
 13543  0013FC  8709               	bsf	9,3,b	;volatile
 13544                           
 13545                           ; BSR set to: 15
 13546                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13547  0013FE  0100               	movlb	0	; () banked
 13548  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13549  001402  0100               	movlb	0	; () banked
 13550  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13551  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13552  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13553  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13557  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13561  001410  0E00               	movlw	0
 13562  001412  0100               	movlb	0	; () banked
 13563  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13564  001416  0100               	movlb	0	; () banked
 13565  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13566  00141A  0EFF               	movlw	255
 13567  00141C  0100               	movlb	0	; () banked
 13568  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13569  001420  0100               	movlb	0	; () banked
 13570  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13571  001424  0E00               	movlw	0
 13572  001426  0100               	movlb	0	; () banked
 13573  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13574  00142A  0100               	movlb	0	; () banked
 13575  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13576  00142E  0E00               	movlw	0
 13577  001430  0100               	movlb	0	; () banked
 13578  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13579  001434  0100               	movlb	0	; () banked
 13580  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13584  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13585  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13586  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13587  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13588  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13589  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13590  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13591  001454  0100               	movlb	0	; () banked
 13592  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13593  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13594  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13595  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13596  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13600  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13604  00146C  0100               	movlb	0	; () banked
 13605  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13606  001470  D003               	goto	l485
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13610  001472  010F               	movlb	15	; () banked
 13611  001474  8109               	bsf	9,0,b	;volatile
 13612  001476  D002               	goto	l486
 13613  001478                     l485:
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;inc\CANlib.h: 927: else
 13617                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13618  001478  010F               	movlb	15	; () banked
 13619  00147A  9109               	bcf	9,0,b	;volatile
 13620  00147C                     l486:
 13621                           
 13622                           ; BSR set to: 15
 13623                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13624  00147C  0100               	movlb	0	; () banked
 13625  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13626  001480  D003               	goto	l487
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13630  001482  010F               	movlb	15	; () banked
 13631  001484  8309               	bsf	9,1,b	;volatile
 13632  001486  D002               	goto	l488
 13633  001488                     l487:
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;inc\CANlib.h: 932: else
 13637                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13638  001488  010F               	movlb	15	; () banked
 13639  00148A  9309               	bcf	9,1,b	;volatile
 13640  00148C                     l488:
 13641                           
 13642                           ; BSR set to: 15
 13643                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13644  00148C  0100               	movlb	0	; () banked
 13645  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13646  001490  D003               	goto	l489
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13650  001492  010F               	movlb	15	; () banked
 13651  001494  8B09               	bsf	9,5,b	;volatile
 13652  001496  D002               	goto	l490
 13653  001498                     l489:
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;inc\CANlib.h: 937: else
 13657                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13658  001498  010F               	movlb	15	; () banked
 13659  00149A  9B09               	bcf	9,5,b	;volatile
 13660  00149C                     l490:
 13661                           
 13662                           ; BSR set to: 15
 13663                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13664  00149C  0100               	movlb	0	; () banked
 13665  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13666  0014A0  D003               	goto	l491
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13670  0014A2  010F               	movlb	15	; () banked
 13671  0014A4  8D09               	bsf	9,6,b	;volatile
 13672  0014A6  D002               	goto	l492
 13673  0014A8                     l491:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;inc\CANlib.h: 942: else
 13677                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13678  0014A8  010F               	movlb	15	; () banked
 13679  0014AA  9D09               	bcf	9,6,b	;volatile
 13680  0014AC                     l492:
 13681                           
 13682                           ; BSR set to: 15
 13683                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13684  0014AC  0100               	movlb	0	; () banked
 13685  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13686  0014B0  D003               	goto	l493
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13690  0014B2  010F               	movlb	15	; () banked
 13691  0014B4  8F09               	bsf	9,7,b	;volatile
 13692  0014B6  D002               	goto	l5526
 13693  0014B8                     l493:
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;inc\CANlib.h: 947: else
 13697                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13698  0014B8  010F               	movlb	15	; () banked
 13699  0014BA  9F09               	bcf	9,7,b	;volatile
 13700  0014BC                     l5526:
 13701                           
 13702                           ; BSR set to: 15
 13703                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13704  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13705  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13706  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13707  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13708  0014CC  0E16               	movlw	22
 13709  0014CE  D006               	goto	u6800
 13710  0014D0                     u6805:
 13711  0014D0  0100               	movlb	0	; () banked
 13712  0014D2  90D8               	bcf	status,0,c
 13713  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13714  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13715  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13716  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13717  0014DC                     u6800:
 13718  0014DC  2EE8               	decfsz	wreg,f,c
 13719  0014DE  D7F8               	goto	u6805
 13720  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13721  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13722  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13723  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13727  0014F0  0100               	movlb	0	; () banked
 13728  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13729  0014F4  0100               	movlb	0	; () banked
 13730  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13731  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13732  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13733  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13737  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13738  001502                     l5532:
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;inc\CANlib.h: 953: }
 13742                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13743  001502  0E03               	movlw	3
 13744  001504  0100               	movlb	0	; () banked
 13745  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13746  001508  A4D8               	btfss	status,2,c
 13747  00150A  D089               	goto	l5566
 13748                           
 13749                           ; BSR set to: 0
 13750  00150C  0EF7               	movlw	247
 13751  00150E  0100               	movlb	0	; () banked
 13752  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13753  001512  A4D8               	btfss	status,2,c
 13754  001514  D084               	goto	l5566
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;inc\CANlib.h: 956: {
 13758                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13759  001516  010F               	movlb	15	; () banked
 13760  001518  870D               	bsf	13,3,b	;volatile
 13761                           
 13762                           ; BSR set to: 15
 13763                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13764  00151A  0100               	movlb	0	; () banked
 13765  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13766  00151E  0100               	movlb	0	; () banked
 13767  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13768  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13769  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13770  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13774  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13778  00152C  0E00               	movlw	0
 13779  00152E  0100               	movlb	0	; () banked
 13780  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13781  001532  0100               	movlb	0	; () banked
 13782  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13783  001536  0EFF               	movlw	255
 13784  001538  0100               	movlb	0	; () banked
 13785  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13786  00153C  0100               	movlb	0	; () banked
 13787  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13788  001540  0E00               	movlw	0
 13789  001542  0100               	movlb	0	; () banked
 13790  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13791  001546  0100               	movlb	0	; () banked
 13792  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13793  00154A  0E00               	movlw	0
 13794  00154C  0100               	movlb	0	; () banked
 13795  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13796  001550  0100               	movlb	0	; () banked
 13797  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13801  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13802  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13803  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13804  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13805  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13806  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13807  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13808  001570  0100               	movlb	0	; () banked
 13809  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13810  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13811  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13812  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13813  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13817  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13821  001588  0100               	movlb	0	; () banked
 13822  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13823  00158C  D003               	goto	l496
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13827  00158E  010F               	movlb	15	; () banked
 13828  001590  810D               	bsf	13,0,b	;volatile
 13829  001592  D002               	goto	l497
 13830  001594                     l496:
 13831                           
 13832                           ; BSR set to: 0
 13833                           ;inc\CANlib.h: 968: else
 13834                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13835  001594  010F               	movlb	15	; () banked
 13836  001596  910D               	bcf	13,0,b	;volatile
 13837  001598                     l497:
 13838                           
 13839                           ; BSR set to: 15
 13840                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13841  001598  0100               	movlb	0	; () banked
 13842  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13843  00159C  D003               	goto	l498
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13847  00159E  010F               	movlb	15	; () banked
 13848  0015A0  830D               	bsf	13,1,b	;volatile
 13849  0015A2  D002               	goto	l499
 13850  0015A4                     l498:
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;inc\CANlib.h: 973: else
 13854                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13855  0015A4  010F               	movlb	15	; () banked
 13856  0015A6  930D               	bcf	13,1,b	;volatile
 13857  0015A8                     l499:
 13858                           
 13859                           ; BSR set to: 15
 13860                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13861  0015A8  0100               	movlb	0	; () banked
 13862  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13863  0015AC  D003               	goto	l500
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13867  0015AE  010F               	movlb	15	; () banked
 13868  0015B0  8B0D               	bsf	13,5,b	;volatile
 13869  0015B2  D002               	goto	l501
 13870  0015B4                     l500:
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;inc\CANlib.h: 978: else
 13874                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13875  0015B4  010F               	movlb	15	; () banked
 13876  0015B6  9B0D               	bcf	13,5,b	;volatile
 13877  0015B8                     l501:
 13878                           
 13879                           ; BSR set to: 15
 13880                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13881  0015B8  0100               	movlb	0	; () banked
 13882  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13883  0015BC  D003               	goto	l502
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13887  0015BE  010F               	movlb	15	; () banked
 13888  0015C0  8D0D               	bsf	13,6,b	;volatile
 13889  0015C2  D002               	goto	l503
 13890  0015C4                     l502:
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;inc\CANlib.h: 983: else
 13894                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13895  0015C4  010F               	movlb	15	; () banked
 13896  0015C6  9D0D               	bcf	13,6,b	;volatile
 13897  0015C8                     l503:
 13898                           
 13899                           ; BSR set to: 15
 13900                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13901  0015C8  0100               	movlb	0	; () banked
 13902  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13903  0015CC  D003               	goto	l504
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13907  0015CE  010F               	movlb	15	; () banked
 13908  0015D0  8F0D               	bsf	13,7,b	;volatile
 13909  0015D2  D002               	goto	l5560
 13910  0015D4                     l504:
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;inc\CANlib.h: 988: else
 13914                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13915  0015D4  010F               	movlb	15	; () banked
 13916  0015D6  9F0D               	bcf	13,7,b	;volatile
 13917  0015D8                     l5560:
 13918                           
 13919                           ; BSR set to: 15
 13920                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13921  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13922  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13923  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13924  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13925  0015E8  0E16               	movlw	22
 13926  0015EA  D006               	goto	u6880
 13927  0015EC                     u6885:
 13928  0015EC  0100               	movlb	0	; () banked
 13929  0015EE  90D8               	bcf	status,0,c
 13930  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13931  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13932  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13933  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13934  0015F8                     u6880:
 13935  0015F8  2EE8               	decfsz	wreg,f,c
 13936  0015FA  D7F8               	goto	u6885
 13937  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13938  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13939  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13940  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13944  00160C  0100               	movlb	0	; () banked
 13945  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13946  001610  0100               	movlb	0	; () banked
 13947  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13948  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13949  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13950  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13954  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13955  00161E                     l5566:
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;inc\CANlib.h: 994: }
 13959                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13960  00161E  0E04               	movlw	4
 13961  001620  0100               	movlb	0	; () banked
 13962  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13963  001624  A4D8               	btfss	status,2,c
 13964  001626  D089               	goto	l5600
 13965                           
 13966                           ; BSR set to: 0
 13967  001628  0EF7               	movlw	247
 13968  00162A  0100               	movlb	0	; () banked
 13969  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13970  00162E  A4D8               	btfss	status,2,c
 13971  001630  D084               	goto	l5600
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;inc\CANlib.h: 997: {
 13975                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13976  001632  010F               	movlb	15	; () banked
 13977  001634  8711               	bsf	17,3,b	;volatile
 13978                           
 13979                           ; BSR set to: 15
 13980                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13981  001636  0100               	movlb	0	; () banked
 13982  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13983  00163A  0100               	movlb	0	; () banked
 13984  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13985  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13986  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13987  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13991  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13995  001648  0E00               	movlw	0
 13996  00164A  0100               	movlb	0	; () banked
 13997  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13998  00164E  0100               	movlb	0	; () banked
 13999  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14000  001652  0EFF               	movlw	255
 14001  001654  0100               	movlb	0	; () banked
 14002  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14003  001658  0100               	movlb	0	; () banked
 14004  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14005  00165C  0E00               	movlw	0
 14006  00165E  0100               	movlb	0	; () banked
 14007  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14008  001662  0100               	movlb	0	; () banked
 14009  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14010  001666  0E00               	movlw	0
 14011  001668  0100               	movlb	0	; () banked
 14012  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14013  00166C  0100               	movlb	0	; () banked
 14014  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14015                           
 14016                           ; BSR set to: 0
 14017                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 14018  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14019  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14020  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14021  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14022  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14023  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14024  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14025  00168C  0100               	movlb	0	; () banked
 14026  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14027  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14028  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14029  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14030  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 14034  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 14038  0016A4  0100               	movlb	0	; () banked
 14039  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14040  0016A8  D003               	goto	l507
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 14044  0016AA  010F               	movlb	15	; () banked
 14045  0016AC  8111               	bsf	17,0,b	;volatile
 14046  0016AE  D002               	goto	l508
 14047  0016B0                     l507:
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;inc\CANlib.h: 1009: else
 14051                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 14052  0016B0  010F               	movlb	15	; () banked
 14053  0016B2  9111               	bcf	17,0,b	;volatile
 14054  0016B4                     l508:
 14055                           
 14056                           ; BSR set to: 15
 14057                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 14058  0016B4  0100               	movlb	0	; () banked
 14059  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14060  0016B8  D003               	goto	l509
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 14064  0016BA  010F               	movlb	15	; () banked
 14065  0016BC  8311               	bsf	17,1,b	;volatile
 14066  0016BE  D002               	goto	l510
 14067  0016C0                     l509:
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;inc\CANlib.h: 1014: else
 14071                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 14072  0016C0  010F               	movlb	15	; () banked
 14073  0016C2  9311               	bcf	17,1,b	;volatile
 14074  0016C4                     l510:
 14075                           
 14076                           ; BSR set to: 15
 14077                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 14078  0016C4  0100               	movlb	0	; () banked
 14079  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14080  0016C8  D003               	goto	l511
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 14084  0016CA  010F               	movlb	15	; () banked
 14085  0016CC  8B11               	bsf	17,5,b	;volatile
 14086  0016CE  D002               	goto	l512
 14087  0016D0                     l511:
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;inc\CANlib.h: 1019: else
 14091                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 14092  0016D0  010F               	movlb	15	; () banked
 14093  0016D2  9B11               	bcf	17,5,b	;volatile
 14094  0016D4                     l512:
 14095                           
 14096                           ; BSR set to: 15
 14097                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 14098  0016D4  0100               	movlb	0	; () banked
 14099  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14100  0016D8  D003               	goto	l513
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 14104  0016DA  010F               	movlb	15	; () banked
 14105  0016DC  8D11               	bsf	17,6,b	;volatile
 14106  0016DE  D002               	goto	l514
 14107  0016E0                     l513:
 14108                           
 14109                           ; BSR set to: 0
 14110                           ;inc\CANlib.h: 1024: else
 14111                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 14112  0016E0  010F               	movlb	15	; () banked
 14113  0016E2  9D11               	bcf	17,6,b	;volatile
 14114  0016E4                     l514:
 14115                           
 14116                           ; BSR set to: 15
 14117                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 14118  0016E4  0100               	movlb	0	; () banked
 14119  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14120  0016E8  D003               	goto	l515
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 14124  0016EA  010F               	movlb	15	; () banked
 14125  0016EC  8F11               	bsf	17,7,b	;volatile
 14126  0016EE  D002               	goto	l5594
 14127  0016F0                     l515:
 14128                           
 14129                           ; BSR set to: 0
 14130                           ;inc\CANlib.h: 1029: else
 14131                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 14132  0016F0  010F               	movlb	15	; () banked
 14133  0016F2  9F11               	bcf	17,7,b	;volatile
 14134  0016F4                     l5594:
 14135                           
 14136                           ; BSR set to: 15
 14137                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 14138  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14139  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14140  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14141  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14142  001704  0E16               	movlw	22
 14143  001706  D006               	goto	u6960
 14144  001708                     u6965:
 14145  001708  0100               	movlb	0	; () banked
 14146  00170A  90D8               	bcf	status,0,c
 14147  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14148  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14149  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14150  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14151  001714                     u6960:
 14152  001714  2EE8               	decfsz	wreg,f,c
 14153  001716  D7F8               	goto	u6965
 14154  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14155  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14156  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14157  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 14161  001728  0100               	movlb	0	; () banked
 14162  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14163  00172C  0100               	movlb	0	; () banked
 14164  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14165  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14166  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14167  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14168                           
 14169                           ; BSR set to: 0
 14170                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 14171  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14172  00173A                     l5600:
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;inc\CANlib.h: 1035: }
 14176                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14177  00173A  0E05               	movlw	5
 14178  00173C  0100               	movlb	0	; () banked
 14179  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14180  001740  A4D8               	btfss	status,2,c
 14181  001742  0012               	return	
 14182                           
 14183                           ; BSR set to: 0
 14184  001744  0EF7               	movlw	247
 14185  001746  0100               	movlb	0	; () banked
 14186  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14187  00174A  A4D8               	btfss	status,2,c
 14188  00174C  0012               	return	
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;inc\CANlib.h: 1038: {
 14192                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 14193  00174E  010F               	movlb	15	; () banked
 14194  001750  8715               	bsf	21,3,b	;volatile
 14195                           
 14196                           ; BSR set to: 15
 14197                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 14198  001752  0100               	movlb	0	; () banked
 14199  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14200  001756  0100               	movlb	0	; () banked
 14201  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14202  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14203  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14204  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 14208  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 14212  001764  0E00               	movlw	0
 14213  001766  0100               	movlb	0	; () banked
 14214  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14215  00176A  0100               	movlb	0	; () banked
 14216  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14217  00176E  0EFF               	movlw	255
 14218  001770  0100               	movlb	0	; () banked
 14219  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14220  001774  0100               	movlb	0	; () banked
 14221  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14222  001778  0E00               	movlw	0
 14223  00177A  0100               	movlb	0	; () banked
 14224  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14225  00177E  0100               	movlb	0	; () banked
 14226  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14227  001782  0E00               	movlw	0
 14228  001784  0100               	movlb	0	; () banked
 14229  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14230  001788  0100               	movlb	0	; () banked
 14231  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 14235  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14236  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14237  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14238  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14239  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14240  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14241  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14242  0017A8  0100               	movlb	0	; () banked
 14243  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14244  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14245  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14246  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14247  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14251  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14255  0017C0  0100               	movlb	0	; () banked
 14256  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14257  0017C4  D003               	goto	l518
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14261  0017C6  010F               	movlb	15	; () banked
 14262  0017C8  8115               	bsf	21,0,b	;volatile
 14263  0017CA  D002               	goto	l519
 14264  0017CC                     l518:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;inc\CANlib.h: 1050: else
 14268                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14269  0017CC  010F               	movlb	15	; () banked
 14270  0017CE  9115               	bcf	21,0,b	;volatile
 14271  0017D0                     l519:
 14272                           
 14273                           ; BSR set to: 15
 14274                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14275  0017D0  0100               	movlb	0	; () banked
 14276  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14277  0017D4  D003               	goto	l520
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14281  0017D6  010F               	movlb	15	; () banked
 14282  0017D8  8315               	bsf	21,1,b	;volatile
 14283  0017DA  D002               	goto	l521
 14284  0017DC                     l520:
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;inc\CANlib.h: 1055: else
 14288                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14289  0017DC  010F               	movlb	15	; () banked
 14290  0017DE  9315               	bcf	21,1,b	;volatile
 14291  0017E0                     l521:
 14292                           
 14293                           ; BSR set to: 15
 14294                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14295  0017E0  0100               	movlb	0	; () banked
 14296  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14297  0017E4  D003               	goto	l522
 14298                           
 14299                           ; BSR set to: 0
 14300                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14301  0017E6  010F               	movlb	15	; () banked
 14302  0017E8  8B15               	bsf	21,5,b	;volatile
 14303  0017EA  D002               	goto	l523
 14304  0017EC                     l522:
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;inc\CANlib.h: 1060: else
 14308                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14309  0017EC  010F               	movlb	15	; () banked
 14310  0017EE  9B15               	bcf	21,5,b	;volatile
 14311  0017F0                     l523:
 14312                           
 14313                           ; BSR set to: 15
 14314                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14315  0017F0  0100               	movlb	0	; () banked
 14316  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14317  0017F4  D003               	goto	l524
 14318                           
 14319                           ; BSR set to: 0
 14320                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14321  0017F6  010F               	movlb	15	; () banked
 14322  0017F8  8D15               	bsf	21,6,b	;volatile
 14323  0017FA  D002               	goto	l525
 14324  0017FC                     l524:
 14325                           
 14326                           ; BSR set to: 0
 14327                           ;inc\CANlib.h: 1065: else
 14328                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14329  0017FC  010F               	movlb	15	; () banked
 14330  0017FE  9D15               	bcf	21,6,b	;volatile
 14331  001800                     l525:
 14332                           
 14333                           ; BSR set to: 15
 14334                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14335  001800  0100               	movlb	0	; () banked
 14336  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14337  001804  D003               	goto	l526
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14341  001806  010F               	movlb	15	; () banked
 14342  001808  8F15               	bsf	21,7,b	;volatile
 14343  00180A  D002               	goto	l5628
 14344  00180C                     l526:
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;inc\CANlib.h: 1070: else
 14348                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14349  00180C  010F               	movlb	15	; () banked
 14350  00180E  9F15               	bcf	21,7,b	;volatile
 14351  001810                     l5628:
 14352                           
 14353                           ; BSR set to: 15
 14354                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14355  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14356  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14357  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14358  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14359  001820  0E16               	movlw	22
 14360  001822  D006               	goto	u7040
 14361  001824                     u7045:
 14362  001824  0100               	movlb	0	; () banked
 14363  001826  90D8               	bcf	status,0,c
 14364  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14365  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14366  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14367  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14368  001830                     u7040:
 14369  001830  2EE8               	decfsz	wreg,f,c
 14370  001832  D7F8               	goto	u7045
 14371  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14372  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14373  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14374  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14378  001844  0100               	movlb	0	; () banked
 14379  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14380  001848  0100               	movlb	0	; () banked
 14381  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14382  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14383  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14384  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14388  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14389  001856  0012               	return	
 14390  001858                     __end_of_CANSetFilter:
 14391                           	opt stack 0
 14392                           tblptru	equ	0xFF8
 14393                           tblptrh	equ	0xFF7
 14394                           tblptrl	equ	0xFF6
 14395                           tablat	equ	0xFF5
 14396                           prodh	equ	0xFF4
 14397                           prodl	equ	0xFF3
 14398                           intcon	equ	0xFF2
 14399                           intcon2	equ	0xFF1
 14400                           postinc0	equ	0xFEE
 14401                           wreg	equ	0xFE8
 14402                           postdec1	equ	0xFE5
 14403                           fsr1l	equ	0xFE1
 14404                           indf2	equ	0xFDF
 14405                           postinc2	equ	0xFDE
 14406                           postdec2	equ	0xFDD
 14407                           fsr2h	equ	0xFDA
 14408                           fsr2l	equ	0xFD9
 14409                           status	equ	0xFD8
 14410                           
 14411 ;; *************** function _CANOperationMode *****************
 14412 ;; Defined at:
 14413 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14414 ;; Parameters:    Size  Location     Type
 14415 ;;  mode            1    wreg     enum E16307
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;  mode            1   23[BANK0 ] enum E16307
 14418 ;; Return value:  Size  Location     Type
 14419 ;;		None               void
 14420 ;; Registers used:
 14421 ;;		wreg, status,2, status,0
 14422 ;; Tracked objects:
 14423 ;;		On entry : 0/0
 14424 ;;		On exit  : 0/0
 14425 ;;		Unchanged: 0/0
 14426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14430 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14431 ;;Total ram usage:        1 bytes
 14432 ;; Hardware stack levels used:    1
 14433 ;; Hardware stack levels required when called:    4
 14434 ;; This function calls:
 14435 ;;		Nothing
 14436 ;; This function is called by:
 14437 ;;		_CANInitialize
 14438 ;; This function uses a non-reentrant model
 14439 ;;
 14440                           
 14441                           	psect	text33
 14442  0066C4                     __ptext33:
 14443                           	opt stack 0
 14444  0066C4                     _CANOperationMode:
 14445                           	opt stack 24
 14446                           
 14447                           ; BSR set to: 0
 14448                           ;incstack = 0
 14449                           ;CANOperationMode@mode stored from wreg
 14450  0066C4  0100               	movlb	0	; () banked
 14451  0066C6  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14452                           
 14453                           ;inc\CANlib.h: 208: CANCON = mode;
 14454  0066C8  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14455  0066CC                     l7544:
 14456  0066CC  506E               	movf	3950,w,c	;volatile
 14457  0066CE  0BE0               	andlw	224
 14458  0066D0  0100               	movlb	0	; () banked
 14459  0066D2  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14460  0066D4  B4D8               	btfsc	status,2,c
 14461  0066D6  0012               	return	
 14462  0066D8  D7F9               	goto	l7544
 14463  0066DA                     __end_of_CANOperationMode:
 14464                           	opt stack 0
 14465                           tblptru	equ	0xFF8
 14466                           tblptrh	equ	0xFF7
 14467                           tblptrl	equ	0xFF6
 14468                           tablat	equ	0xFF5
 14469                           prodh	equ	0xFF4
 14470                           prodl	equ	0xFF3
 14471                           intcon	equ	0xFF2
 14472                           intcon2	equ	0xFF1
 14473                           postinc0	equ	0xFEE
 14474                           wreg	equ	0xFE8
 14475                           postdec1	equ	0xFE5
 14476                           fsr1l	equ	0xFE1
 14477                           indf2	equ	0xFDF
 14478                           postinc2	equ	0xFDE
 14479                           postdec2	equ	0xFDD
 14480                           fsr2h	equ	0xFDA
 14481                           fsr2l	equ	0xFD9
 14482                           status	equ	0xFD8
 14483                           
 14484 ;; *************** function _can_interpreter *****************
 14485 ;; Defined at:
 14486 ;;		line 491 in file "parcheggio.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;		None
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;		None
 14491 ;; Return value:  Size  Location     Type
 14492 ;;		None               void
 14493 ;; Registers used:
 14494 ;;		wreg, status,2, status,0
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;Total ram usage:        4 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; Hardware stack levels required when called:    4
 14507 ;; This function calls:
 14508 ;;		Nothing
 14509 ;; This function is called by:
 14510 ;;		_main
 14511 ;; This function uses a non-reentrant model
 14512 ;;
 14513                           
 14514                           	psect	text34
 14515  0064AA                     __ptext34:
 14516                           	opt stack 0
 14517  0064AA                     _can_interpreter:
 14518                           	opt stack 26
 14519                           
 14520                           ;parcheggio.c: 492: left_speed = data_speed_rx[1];
 14521                           
 14522                           ; BSR set to: 0
 14523                           ;incstack = 0
 14524  0064AA  C109  F01D         	movff	_data_speed_rx+1,_left_speed
 14525  0064AE  6A1E               	clrf	_left_speed+1,c
 14526                           
 14527                           ;parcheggio.c: 493: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14528  0064B0  501D               	movf	_left_speed,w,c
 14529  0064B2  0100               	movlb	0	; () banked
 14530  0064B4  6F77               	movwf	??_can_interpreter& (0+255),b
 14531  0064B6  0101               	movlb	1	; () banked
 14532  0064B8  5108               	movf	_data_speed_rx& (0+255),w,b
 14533  0064BA  6E1D               	movwf	_left_speed,c
 14534  0064BC  C077  F01E         	movff	??_can_interpreter,_left_speed+1
 14535                           
 14536                           ; BSR set to: 1
 14537                           ;parcheggio.c: 494: right_speed = data_speed_rx[3];
 14538  0064C0  C10B  F021         	movff	_data_speed_rx+3,_right_speed
 14539  0064C4  6A22               	clrf	_right_speed+1,c
 14540                           
 14541                           ;parcheggio.c: 495: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14542  0064C6  5021               	movf	_right_speed,w,c
 14543  0064C8  0100               	movlb	0	; () banked
 14544  0064CA  6F77               	movwf	??_can_interpreter& (0+255),b
 14545  0064CC  0101               	movlb	1	; () banked
 14546  0064CE  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14547  0064D0  6E21               	movwf	_right_speed,c
 14548  0064D2  C077  F022         	movff	??_can_interpreter,_right_speed+1
 14549                           
 14550                           ; BSR set to: 1
 14551                           ;parcheggio.c: 496: actual_speed = (right_speed + left_speed) / 2;
 14552  0064D6  501D               	movf	_left_speed,w,c
 14553  0064D8  2421               	addwf	_right_speed,w,c
 14554  0064DA  0100               	movlb	0	; () banked
 14555  0064DC  6F77               	movwf	??_can_interpreter& (0+255),b
 14556  0064DE  501E               	movf	_left_speed+1,w,c
 14557  0064E0  2022               	addwfc	_right_speed+1,w,c
 14558  0064E2  0100               	movlb	0	; () banked
 14559  0064E4  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14560  0064E6  90D8               	bcf	status,0,c
 14561  0064E8  0100               	movlb	0	; () banked
 14562  0064EA  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14563  0064EC  0100               	movlb	0	; () banked
 14564  0064EE  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14565  0064F0  0100               	movlb	0	; () banked
 14566  0064F2  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14567  0064F4  6E15               	movwf	_actual_speed,c
 14568  0064F6  C079  F016         	movff	??_can_interpreter+2,_actual_speed+1
 14569                           
 14570                           ; BSR set to: 0
 14571  0064FA  0012               	return		;funcret
 14572  0064FC                     __end_of_can_interpreter:
 14573                           	opt stack 0
 14574                           tblptru	equ	0xFF8
 14575                           tblptrh	equ	0xFF7
 14576                           tblptrl	equ	0xFF6
 14577                           tablat	equ	0xFF5
 14578                           prodh	equ	0xFF4
 14579                           prodl	equ	0xFF3
 14580                           intcon	equ	0xFF2
 14581                           intcon2	equ	0xFF1
 14582                           postinc0	equ	0xFEE
 14583                           wreg	equ	0xFE8
 14584                           postdec1	equ	0xFE5
 14585                           fsr1l	equ	0xFE1
 14586                           indf2	equ	0xFDF
 14587                           postinc2	equ	0xFDE
 14588                           postdec2	equ	0xFDD
 14589                           fsr2h	equ	0xFDA
 14590                           fsr2l	equ	0xFD9
 14591                           status	equ	0xFD8
 14592                           
 14593 ;; *************** function _ISR_Bassa *****************
 14594 ;; Defined at:
 14595 ;;		line 122 in file "parcheggio.c"
 14596 ;; Parameters:    Size  Location     Type
 14597 ;;		None
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  i               1   38[COMRAM] unsigned char 
 14600 ;;  PORTA_temp      1   37[COMRAM] unsigned char 
 14601 ;; Return value:  Size  Location     Type
 14602 ;;		None               void
 14603 ;; Registers used:
 14604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14605 ;; Tracked objects:
 14606 ;;		On entry : 0/0
 14607 ;;		On exit  : 0/0
 14608 ;;		Unchanged: 0/0
 14609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14612 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14613 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;Total ram usage:       23 bytes
 14615 ;; Hardware stack levels used:    1
 14616 ;; Hardware stack levels required when called:    3
 14617 ;; This function calls:
 14618 ;;		_CANreceiveMessage
 14619 ;;		i1_CANisTxReady
 14620 ;;		i1_CANsendMessage
 14621 ;; This function is called by:
 14622 ;;		Interrupt level 1
 14623 ;; This function uses a non-reentrant model
 14624 ;;
 14625                           
 14626                           	psect	intcodelo
 14627  000018                     __pintcodelo:
 14628                           	opt stack 0
 14629  000018                     _ISR_Bassa:
 14630                           	opt stack 21
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;incstack = 0
 14634  000018  8054               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14635  00001A  CFD8 F03D          	movff	status,??_ISR_Bassa+4
 14636  00001E  CFE8 F03E          	movff	wreg,??_ISR_Bassa+5
 14637  000022  CFE0 F03F          	movff	bsr,??_ISR_Bassa+6
 14638  000026  CFFA F040          	movff	pclath,??_ISR_Bassa+7
 14639  00002A  CFFB F041          	movff	pclatu,??_ISR_Bassa+8
 14640  00002E  CFE9 F042          	movff	fsr0l,??_ISR_Bassa+9
 14641  000032  CFEA F043          	movff	fsr0h,??_ISR_Bassa+10
 14642  000036  CFE1 F044          	movff	fsr1l,??_ISR_Bassa+11
 14643  00003A  CFE2 F045          	movff	fsr1h,??_ISR_Bassa+12
 14644  00003E  CFD9 F046          	movff	fsr2l,??_ISR_Bassa+13
 14645  000042  CFDA F047          	movff	fsr2h,??_ISR_Bassa+14
 14646  000046  CFF3 F048          	movff	prodl,??_ISR_Bassa+15
 14647  00004A  CFF4 F049          	movff	prodh,??_ISR_Bassa+16
 14648  00004E  CFF6 F04A          	movff	tblptrl,??_ISR_Bassa+17
 14649  000052  CFF7 F04B          	movff	tblptrh,??_ISR_Bassa+18
 14650  000056  CFF8 F04C          	movff	tblptru,??_ISR_Bassa+19
 14651  00005A  CFF5 F04D          	movff	tablat,??_ISR_Bassa+20
 14652                           
 14653                           ;parcheggio.c: 125: if (INTCONbits.TMR0IF == 1) {
 14654  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14655  000060  D095               	goto	i1l6606
 14656                           
 14657                           ;parcheggio.c: 126: INTCONbits.INT0IE = 0;
 14658  000062  98F2               	bcf	intcon,4,c	;volatile
 14659                           
 14660                           ;parcheggio.c: 127: T0CONbits.TMR0ON = 0;
 14661  000064  9ED5               	bcf	4053,7,c	;volatile
 14662                           
 14663                           ;parcheggio.c: 128: TMR0H = 0x34;
 14664  000066  0E34               	movlw	52
 14665  000068  6ED7               	movwf	4055,c	;volatile
 14666                           
 14667                           ;parcheggio.c: 129: TMR0L = 0xE0;
 14668  00006A  0EE0               	movlw	224
 14669  00006C  6ED6               	movwf	4054,c	;volatile
 14670                           
 14671                           ;parcheggio.c: 130: T0CONbits.TMR0ON = 1;
 14672  00006E  8ED5               	bsf	4053,7,c	;volatile
 14673                           
 14674                           ;parcheggio.c: 132: if (distance_error == 1) {
 14675  000070  A850               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14676  000072  D00C               	goto	i1l704
 14677                           
 14678                           ;parcheggio.c: 133: sensor_distance[MUX_index] = 5000;
 14679  000074  5025               	movf	_MUX_index,w,c	;volatile
 14680  000076  0D02               	mullw	2
 14681  000078  0E01               	movlw	low _sensor_distance
 14682  00007A  24F3               	addwf	prodl,w,c
 14683  00007C  6ED9               	movwf	fsr2l,c
 14684  00007E  0E00               	movlw	high _sensor_distance
 14685  000080  20F4               	addwfc	prodh,w,c
 14686  000082  6EDA               	movwf	fsr2h,c
 14687  000084  0E88               	movlw	136
 14688  000086  6EDE               	movwf	postinc2,c
 14689  000088  0E13               	movlw	19
 14690  00008A  6EDD               	movwf	postdec2,c
 14691  00008C                     i1l704:
 14692                           
 14693                           ;parcheggio.c: 134: }
 14694                           ;parcheggio.c: 136: if ((sensor_distance[MUX_index] < 10)&&(start_operation == 0)) {
 14695  00008C  5025               	movf	_MUX_index,w,c	;volatile
 14696  00008E  0D02               	mullw	2
 14697  000090  0E01               	movlw	low _sensor_distance
 14698  000092  24F3               	addwf	prodl,w,c
 14699  000094  6ED9               	movwf	fsr2l,c
 14700  000096  0E00               	movlw	high _sensor_distance
 14701  000098  20F4               	addwfc	prodh,w,c
 14702  00009A  6EDA               	movwf	fsr2h,c
 14703  00009C  0E01               	movlw	1
 14704  00009E  50DB               	movf	plusw2,w,c
 14705  0000A0  E113               	bnz	i1l6562
 14706  0000A2  0E0A               	movlw	10
 14707  0000A4  5CDE               	subwf	postinc2,w,c
 14708  0000A6  A0D8               	btfss	status,0,c
 14709  0000A8  BA51               	btfsc	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14710  0000AA  D00E               	goto	i1l6562
 14711                           
 14712                           ;parcheggio.c: 137: sensor_distance_short[0] = sensor_distance_short[0] | (0b00000001 <<
      +                           MUX_index);
 14713  0000AC  C025  F039         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14714  0000B0  0E01               	movlw	1
 14715  0000B2  6E3A               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14716  0000B4  2A39               	incf	??_ISR_Bassa,f,c
 14717  0000B6  D002               	goto	i1u837_24
 14718  0000B8                     i1u837_25:
 14719  0000B8  90D8               	bcf	status,0,c
 14720  0000BA  363A               	rlcf	??_ISR_Bassa+1,f,c
 14721  0000BC                     i1u837_24:
 14722  0000BC  2E39               	decfsz	??_ISR_Bassa,f,c
 14723  0000BE  D7FC               	goto	i1u837_25
 14724  0000C0  503A               	movf	??_ISR_Bassa+1,w,c
 14725  0000C2  0101               	movlb	1	; () banked
 14726  0000C4  1183               	iorwf	_sensor_distance_short& (0+255),w,b	;volatile
 14727  0000C6  D03F               	goto	L8
 14728  0000C8                     i1l6562:
 14729  0000C8  5025               	movf	_MUX_index,w,c	;volatile
 14730  0000CA  0D02               	mullw	2
 14731  0000CC  0E01               	movlw	low _sensor_distance
 14732  0000CE  24F3               	addwf	prodl,w,c
 14733  0000D0  6ED9               	movwf	fsr2l,c
 14734  0000D2  0E00               	movlw	high _sensor_distance
 14735  0000D4  20F4               	addwfc	prodh,w,c
 14736  0000D6  6EDA               	movwf	fsr2h,c
 14737  0000D8  0E01               	movlw	1
 14738  0000DA  50DB               	movf	plusw2,w,c
 14739  0000DC  E126               	bnz	i1l6574
 14740  0000DE  0E04               	movlw	4
 14741  0000E0  5CDE               	subwf	postinc2,w,c
 14742  0000E2  A0D8               	btfss	status,0,c
 14743  0000E4  AA51               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14744  0000E6  D021               	goto	i1l6574
 14745  0000E8  B450               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14746  0000EA  D01F               	goto	i1l6574
 14747                           
 14748                           ;parcheggio.c: 139: data[1] = 0;
 14749  0000EC  0E00               	movlw	0
 14750  0000EE  0101               	movlb	1	; () banked
 14751  0000F0  6F54               	movwf	(_data+1)& (0+255),b
 14752                           
 14753                           ;parcheggio.c: 140: data[0] = 4;
 14754  0000F2  0E04               	movlw	4
 14755  0000F4  0101               	movlb	1	; () banked
 14756  0000F6  6F53               	movwf	_data& (0+255),b
 14757  0000F8                     i1l6570:
 14758  0000F8  EC53  F033         	call	i1_CANisTxReady	;wreg free
 14759  0000FC  0900               	iorlw	0
 14760  0000FE  B4D8               	btfsc	status,2,c
 14761  000100  D7FB               	goto	i1l6570
 14762                           
 14763                           ;parcheggio.c: 142: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
 14764  000102  0E0B               	movlw	11
 14765  000104  6E29               	movwf	i1CANsendMessage@identifier,c
 14766  000106  0E00               	movlw	0
 14767  000108  6E2A               	movwf	i1CANsendMessage@identifier+1,c
 14768  00010A  0E00               	movlw	0
 14769  00010C  6E2B               	movwf	i1CANsendMessage@identifier+2,c
 14770  00010E  0E00               	movlw	0
 14771  000110  6E2C               	movwf	i1CANsendMessage@identifier+3,c
 14772  000112  0E53               	movlw	low _data
 14773  000114  6E2D               	movwf	i1CANsendMessage@data,c
 14774  000116  0E01               	movlw	high _data
 14775  000118  6E2E               	movwf	i1CANsendMessage@data+1,c
 14776  00011A  0E08               	movlw	8
 14777  00011C  6E2F               	movwf	i1CANsendMessage@dataLength,c
 14778  00011E  0EBC               	movlw	188
 14779  000120  6E30               	movwf	i1CANsendMessage@flags,c
 14780  000122  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14781  000126  00FF               	reset		;# 
 14782                           
 14783                           ;parcheggio.c: 144: } else {
 14784  000128  D010               	goto	i1l6576
 14785  00012A                     i1l6574:
 14786                           
 14787                           ;parcheggio.c: 145: sensor_distance_short[0] = sensor_distance_short[0] & (~(0b00000001 
      +                          << MUX_index));
 14788  00012A  C025  F039         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14789  00012E  0E01               	movlw	1
 14790  000130  6E3A               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14791  000132  2A39               	incf	??_ISR_Bassa,f,c
 14792  000134  D002               	goto	i1u842_24
 14793  000136                     i1u842_25:
 14794  000136  90D8               	bcf	status,0,c
 14795  000138  363A               	rlcf	??_ISR_Bassa+1,f,c
 14796  00013A                     i1u842_24:
 14797  00013A  2E39               	decfsz	??_ISR_Bassa,f,c
 14798  00013C  D7FC               	goto	i1u842_25
 14799  00013E  503A               	movf	??_ISR_Bassa+1,w,c
 14800  000140  0AFF               	xorlw	255
 14801  000142  0101               	movlb	1	; () banked
 14802  000144  1583               	andwf	_sensor_distance_short& (0+255),w,b	;volatile
 14803  000146                     L8:
 14804  000146  0101               	movlb	1	; () banked
 14805  000148  6F83               	movwf	_sensor_distance_short& (0+255),b	;volatile
 14806  00014A                     i1l6576:
 14807                           
 14808                           ;parcheggio.c: 146: }
 14809                           ;parcheggio.c: 148: MUX_index++;
 14810  00014A  2A25               	incf	_MUX_index,f,c	;volatile
 14811                           
 14812                           ;parcheggio.c: 149: if (MUX_index == 8) {
 14813  00014C  0E08               	movlw	8
 14814  00014E  1825               	xorwf	_MUX_index,w,c	;volatile
 14815  000150  A4D8               	btfss	status,2,c
 14816  000152  D002               	goto	i1l712
 14817                           
 14818                           ;parcheggio.c: 150: MUX_index = 0;
 14819  000154  0E00               	movlw	0
 14820  000156  6E25               	movwf	_MUX_index,c	;volatile
 14821  000158                     i1l712:
 14822                           
 14823                           ;parcheggio.c: 151: }
 14824                           ;parcheggio.c: 153: unsigned char PORTA_temp = 0;
 14825  000158  0E00               	movlw	0
 14826  00015A  6E4E               	movwf	ISR_Bassa@PORTA_temp,c
 14827                           
 14828                           ;parcheggio.c: 154: PORTA_temp = MUX_select[MUX_index];
 14829  00015C  5025               	movf	_MUX_index,w,c	;volatile
 14830  00015E  0D01               	mullw	1
 14831  000160  0E00               	movlw	low _MUX_select
 14832  000162  24F3               	addwf	prodl,w,c
 14833  000164  6ED9               	movwf	fsr2l,c
 14834  000166  0E01               	movlw	high _MUX_select
 14835  000168  20F4               	addwfc	prodh,w,c
 14836  00016A  6EDA               	movwf	fsr2h,c
 14837  00016C  50DF               	movf	indf2,w,c
 14838  00016E  6E4E               	movwf	ISR_Bassa@PORTA_temp,c
 14839                           
 14840                           ;parcheggio.c: 155: PORTA = PORTA_temp;
 14841  000170  C04E  FF80         	movff	ISR_Bassa@PORTA_temp,3968	;volatile
 14842                           
 14843                           ;parcheggio.c: 157: TRISBbits.RB0 = 0;
 14844  000174  9093               	bcf	3987,0,c	;volatile
 14845                           
 14846                           ;parcheggio.c: 158: LATBbits.LATB0 = 1;
 14847  000176  808A               	bsf	3978,0,c	;volatile
 14848                           
 14849                           ;parcheggio.c: 159: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14850  000178  0E14               	movlw	20
 14851  00017A                     i1u1064_27:
 14852  00017A  2EE8               	decfsz	wreg,f,c
 14853  00017C  D7FE               	goto	i1u1064_27
 14854                           
 14855                           ;parcheggio.c: 160: distance_error = 1;
 14856  00017E  8850               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14857                           
 14858                           ;parcheggio.c: 161: LATBbits.LATB0 = 0;
 14859  000180  908A               	bcf	3978,0,c	;volatile
 14860                           
 14861                           ;parcheggio.c: 162: TRISBbits.RB0 = 1;
 14862  000182  8093               	bsf	3987,0,c	;volatile
 14863                           
 14864                           ;parcheggio.c: 163: INTCONbits.INT0IF = 0;
 14865  000184  92F2               	bcf	intcon,1,c	;volatile
 14866                           
 14867                           ;parcheggio.c: 164: INTCONbits.INT0IE = 1;
 14868  000186  88F2               	bsf	intcon,4,c	;volatile
 14869                           
 14870                           ;parcheggio.c: 165: INTCONbits.TMR0IF = 0;
 14871  000188  94F2               	bcf	intcon,2,c	;volatile
 14872                           
 14873                           ;parcheggio.c: 166: INTCON2bits.INTEDG0 = 1;
 14874  00018A  8CF1               	bsf	intcon2,6,c	;volatile
 14875  00018C                     i1l6606:
 14876                           
 14877                           ;parcheggio.c: 167: }
 14878                           ;parcheggio.c: 170: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14879  00018C  A0A4               	btfss	4004,0,c	;volatile
 14880  00018E  B2A4               	btfsc	4004,1,c	;volatile
 14881  000190  D001               	goto	i1l6610
 14882  000192  D09D               	goto	i1l726
 14883  000194                     i1l6610:
 14884                           
 14885                           ;parcheggio.c: 171: CANreceiveMessage(&msg);
 14886  000194  0E44               	movlw	low _msg
 14887  000196  6E29               	movwf	CANreceiveMessage@msg,c
 14888  000198  0E01               	movlw	high _msg
 14889  00019A  6E2A               	movwf	CANreceiveMessage@msg+1,c
 14890  00019C  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14891                           
 14892                           ;parcheggio.c: 173: if (msg.identifier == 0b00000001101) {
 14893  0001A0  0E0D               	movlw	13
 14894  0001A2  0101               	movlb	1	; () banked
 14895  0001A4  1944               	xorwf	_msg& (0+255),w,b
 14896  0001A6  0101               	movlb	1	; () banked
 14897  0001A8  1145               	iorwf	(_msg+1)& (0+255),w,b
 14898  0001AA  0101               	movlb	1	; () banked
 14899  0001AC  1146               	iorwf	(_msg+2)& (0+255),w,b
 14900  0001AE  0101               	movlb	1	; () banked
 14901  0001B0  1147               	iorwf	(_msg+3)& (0+255),w,b
 14902  0001B2  B4D8               	btfsc	status,2,c
 14903                           
 14904                           ; BSR set to: 1
 14905                           ;parcheggio.c: 174: asd = 0;
 14906  0001B4  9250               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14907                           
 14908                           ; BSR set to: 1
 14909                           ;parcheggio.c: 175: }
 14910                           ;parcheggio.c: 177: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14911                           
 14912                           ; BSR set to: 1
 14913  0001B6  0E07               	movlw	7
 14914  0001B8  0101               	movlb	1	; () banked
 14915  0001BA  1944               	xorwf	_msg& (0+255),w,b
 14916  0001BC  0101               	movlb	1	; () banked
 14917  0001BE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14918  0001C0  0101               	movlb	1	; () banked
 14919  0001C2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14920  0001C4  0101               	movlb	1	; () banked
 14921  0001C6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14922  0001C8  A4D8               	btfss	status,2,c
 14923  0001CA  D02D               	goto	i1l6632
 14924                           
 14925                           ; BSR set to: 1
 14926  0001CC  0101               	movlb	1	; () banked
 14927  0001CE  0552               	decf	(_msg+14)& (0+255),w,b
 14928  0001D0  B4D8               	btfsc	status,2,c
 14929  0001D2  D029               	goto	i1l6632
 14930                           
 14931                           ; BSR set to: 1
 14932                           ;parcheggio.c: 178: distance_average = 0;
 14933  0001D4  0E00               	movlw	0
 14934  0001D6  0100               	movlb	0	; () banked
 14935  0001D8  6FE3               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14936  0001DA  0E00               	movlw	0
 14937  0001DC  6FE2               	movwf	_distance_average& (0+255),b	;volatile
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;parcheggio.c: 179: distance_dx = msg.data[1];
 14941  0001DE  C149  F019         	movff	_msg+5,_distance_dx	;volatile
 14942  0001E2  6A1A               	clrf	_distance_dx+1,c	;volatile
 14943                           
 14944                           ;parcheggio.c: 180: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14945  0001E4  5019               	movf	_distance_dx,w,c	;volatile
 14946  0001E6  6E39               	movwf	??_ISR_Bassa& (0+255),c
 14947  0001E8  0101               	movlb	1	; () banked
 14948  0001EA  5148               	movf	(_msg+4)& (0+255),w,b
 14949  0001EC  6E19               	movwf	_distance_dx,c	;volatile
 14950  0001EE  C039  F01A         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14951                           
 14952                           ; BSR set to: 1
 14953                           ;parcheggio.c: 181: distance_sx = msg.data[3];
 14954  0001F2  C14B  F01B         	movff	_msg+7,_distance_sx	;volatile
 14955  0001F6  6A1C               	clrf	_distance_sx+1,c	;volatile
 14956                           
 14957                           ;parcheggio.c: 182: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14958  0001F8  501B               	movf	_distance_sx,w,c	;volatile
 14959  0001FA  6E39               	movwf	??_ISR_Bassa& (0+255),c
 14960  0001FC  0101               	movlb	1	; () banked
 14961  0001FE  514A               	movf	(_msg+6)& (0+255),w,b
 14962  000200  6E1B               	movwf	_distance_sx,c	;volatile
 14963  000202  C039  F01C         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14964                           
 14965                           ; BSR set to: 1
 14966                           ;parcheggio.c: 183: distance_average = (distance_sx + distance_dx) / 2;
 14967  000206  5019               	movf	_distance_dx,w,c	;volatile
 14968  000208  241B               	addwf	_distance_sx,w,c	;volatile
 14969  00020A  6E39               	movwf	??_ISR_Bassa& (0+255),c
 14970  00020C  501A               	movf	_distance_dx+1,w,c	;volatile
 14971  00020E  201C               	addwfc	_distance_sx+1,w,c	;volatile
 14972  000210  6E3A               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14973  000212  90D8               	bcf	status,0,c
 14974  000214  303A               	rrcf	??_ISR_Bassa+1,w,c
 14975  000216  6E3B               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14976  000218  3039               	rrcf	??_ISR_Bassa,w,c
 14977  00021A  0100               	movlb	0	; () banked
 14978  00021C  6FE2               	movwf	_distance_average& (0+255),b	;volatile
 14979  00021E  C03B  F0E3         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;parcheggio.c: 184: distance_received = 1;
 14983  000222  8A50               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14984                           
 14985                           ; BSR set to: 0
 14986                           ;parcheggio.c: 185: distance_received1 = 1;
 14987  000224  8C50               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14988  000226                     i1l6632:
 14989                           
 14990                           ;parcheggio.c: 186: }
 14991                           ;parcheggio.c: 188: if (msg.identifier == 0b00000001010) {
 14992  000226  0E0A               	movlw	10
 14993  000228  0101               	movlb	1	; () banked
 14994  00022A  1944               	xorwf	_msg& (0+255),w,b
 14995  00022C  0101               	movlb	1	; () banked
 14996  00022E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14997  000230  0101               	movlb	1	; () banked
 14998  000232  1146               	iorwf	(_msg+2)& (0+255),w,b
 14999  000234  0101               	movlb	1	; () banked
 15000  000236  1147               	iorwf	(_msg+3)& (0+255),w,b
 15001  000238  A4D8               	btfss	status,2,c
 15002  00023A  D00C               	goto	i1l6638
 15003                           
 15004                           ; BSR set to: 1
 15005                           ;parcheggio.c: 189: if (msg.data[0] == 1) {
 15006  00023C  0101               	movlb	1	; () banked
 15007  00023E  0548               	decf	(_msg+4)& (0+255),w,b
 15008  000240  A4D8               	btfss	status,2,c
 15009  000242  D003               	goto	i1l719
 15010                           
 15011                           ; BSR set to: 1
 15012                           ;parcheggio.c: 190: activation = 1;
 15013  000244  8050               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15014                           
 15015                           ;parcheggio.c: 191: PORTBbits.RB6 = 1;
 15016  000246  8C81               	bsf	3969,6,c	;volatile
 15017                           
 15018                           ;parcheggio.c: 192: } else {
 15019  000248  D005               	goto	i1l6638
 15020  00024A                     i1l719:
 15021                           
 15022                           ; BSR set to: 1
 15023                           ;parcheggio.c: 193: activation = 0;
 15024  00024A  9050               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15025                           
 15026                           ;parcheggio.c: 194: PORTBbits.RB4 = 0;
 15027  00024C  9881               	bcf	3969,4,c	;volatile
 15028                           
 15029                           ;parcheggio.c: 195: PORTBbits.RB5 = 0;
 15030  00024E  9A81               	bcf	3969,5,c	;volatile
 15031                           
 15032                           ;parcheggio.c: 196: PORTBbits.RB6 = 0;
 15033  000250  9C81               	bcf	3969,6,c	;volatile
 15034                           
 15035                           ;parcheggio.c: 197: request_sent = 0;
 15036  000252  9651               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15037  000254                     i1l6638:
 15038                           
 15039                           ; BSR set to: 1
 15040                           ;parcheggio.c: 198: }
 15041                           ;parcheggio.c: 199: }
 15042                           ;parcheggio.c: 201: if (msg.identifier == 0b00000001100) {
 15043  000254  0E0C               	movlw	12
 15044  000256  0101               	movlb	1	; () banked
 15045  000258  1944               	xorwf	_msg& (0+255),w,b
 15046  00025A  0101               	movlb	1	; () banked
 15047  00025C  1145               	iorwf	(_msg+1)& (0+255),w,b
 15048  00025E  0101               	movlb	1	; () banked
 15049  000260  1146               	iorwf	(_msg+2)& (0+255),w,b
 15050  000262  0101               	movlb	1	; () banked
 15051  000264  1147               	iorwf	(_msg+3)& (0+255),w,b
 15052  000266  B4D8               	btfsc	status,2,c
 15053                           
 15054                           ; BSR set to: 1
 15055                           ;parcheggio.c: 202: start_operation = 1;
 15056  000268  8A51               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15057                           
 15058                           ; BSR set to: 1
 15059                           ;parcheggio.c: 203: }
 15060                           ;parcheggio.c: 206: if (msg.identifier == 0b00000000110) {
 15061                           
 15062                           ; BSR set to: 1
 15063  00026A  0E06               	movlw	6
 15064  00026C  0101               	movlb	1	; () banked
 15065  00026E  1944               	xorwf	_msg& (0+255),w,b
 15066  000270  0101               	movlb	1	; () banked
 15067  000272  1145               	iorwf	(_msg+1)& (0+255),w,b
 15068  000274  0101               	movlb	1	; () banked
 15069  000276  1146               	iorwf	(_msg+2)& (0+255),w,b
 15070  000278  0101               	movlb	1	; () banked
 15071  00027A  1147               	iorwf	(_msg+3)& (0+255),w,b
 15072  00027C  A4D8               	btfss	status,2,c
 15073  00027E  D025               	goto	i1l722
 15074                           
 15075                           ; BSR set to: 1
 15076                           ;parcheggio.c: 207: for (unsigned char i = 0; i < 8; i++) {
 15077  000280  0E00               	movlw	0
 15078  000282  6E4F               	movwf	ISR_Bassa@i,c
 15079  000284                     i1l6646:
 15080                           
 15081                           ; BSR set to: 1
 15082  000284  0E07               	movlw	7
 15083  000286  644F               	cpfsgt	ISR_Bassa@i,c
 15084  000288  D001               	goto	i1l6650
 15085  00028A  D014               	goto	i1l6656
 15086  00028C                     i1l6650:
 15087                           
 15088                           ;parcheggio.c: 208: data_speed_rx[i] = msg.data[i];
 15089  00028C  504F               	movf	ISR_Bassa@i,w,c
 15090  00028E  0D01               	mullw	1
 15091  000290  0E48               	movlw	low (_msg+4)
 15092  000292  24F3               	addwf	prodl,w,c
 15093  000294  6ED9               	movwf	fsr2l,c
 15094  000296  0E01               	movlw	high (_msg+4)
 15095  000298  20F4               	addwfc	prodh,w,c
 15096  00029A  6EDA               	movwf	fsr2h,c
 15097  00029C  504F               	movf	ISR_Bassa@i,w,c
 15098  00029E  0D01               	mullw	1
 15099  0002A0  0E08               	movlw	low _data_speed_rx
 15100  0002A2  24F3               	addwf	prodl,w,c
 15101  0002A4  6EE1               	movwf	fsr1l,c
 15102  0002A6  0E01               	movlw	high _data_speed_rx
 15103  0002A8  20F4               	addwfc	prodh,w,c
 15104  0002AA  6EE2               	movwf	fsr1h,c
 15105  0002AC  CFDF FFE7          	movff	indf2,indf1
 15106  0002B0  2A4F               	incf	ISR_Bassa@i,f,c
 15107  0002B2  D7E8               	goto	i1l6646
 15108  0002B4                     i1l6656:
 15109                           
 15110                           ;parcheggio.c: 209: }
 15111                           ;parcheggio.c: 210: if (msg.identifier == 0b00000001101) {
 15112  0002B4  0E0D               	movlw	13
 15113  0002B6  0101               	movlb	1	; () banked
 15114  0002B8  1944               	xorwf	_msg& (0+255),w,b
 15115  0002BA  0101               	movlb	1	; () banked
 15116  0002BC  1145               	iorwf	(_msg+1)& (0+255),w,b
 15117  0002BE  0101               	movlb	1	; () banked
 15118  0002C0  1146               	iorwf	(_msg+2)& (0+255),w,b
 15119  0002C2  0101               	movlb	1	; () banked
 15120  0002C4  1147               	iorwf	(_msg+3)& (0+255),w,b
 15121  0002C6  B4D8               	btfsc	status,2,c
 15122                           
 15123                           ; BSR set to: 1
 15124                           ;parcheggio.c: 211: distance_wait = 0;
 15125  0002C8  9E50               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15126  0002CA                     i1l722:
 15127                           
 15128                           ; BSR set to: 1
 15129                           ;parcheggio.c: 212: }
 15130                           ;parcheggio.c: 213: }
 15131                           ;parcheggio.c: 216: PIR3bits.RXB0IF = 0;
 15132  0002CA  90A4               	bcf	4004,0,c	;volatile
 15133                           
 15134                           ;parcheggio.c: 217: PIR3bits.RXB1IF = 0;
 15135  0002CC  92A4               	bcf	4004,1,c	;volatile
 15136  0002CE                     i1l726:
 15137  0002CE  C04D  FFF5         	movff	??_ISR_Bassa+20,tablat
 15138  0002D2  C04C  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15139  0002D6  C04B  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15140  0002DA  C04A  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15141  0002DE  C049  FFF4         	movff	??_ISR_Bassa+16,prodh
 15142  0002E2  C048  FFF3         	movff	??_ISR_Bassa+15,prodl
 15143  0002E6  C047  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15144  0002EA  C046  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15145  0002EE  C045  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15146  0002F2  C044  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15147  0002F6  C043  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15148  0002FA  C042  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15149  0002FE  C041  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15150  000302  C040  FFFA         	movff	??_ISR_Bassa+7,pclath
 15151  000306  C03F  FFE0         	movff	??_ISR_Bassa+6,bsr
 15152  00030A  C03E  FFE8         	movff	??_ISR_Bassa+5,wreg
 15153  00030E  C03D  FFD8         	movff	??_ISR_Bassa+4,status
 15154  000312  9054               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15155  000314  0010               	retfie	
 15156  000316                     __end_of_ISR_Bassa:
 15157                           	opt stack 0
 15158                           pclatu	equ	0xFFB
 15159                           pclath	equ	0xFFA
 15160                           tblptru	equ	0xFF8
 15161                           tblptrh	equ	0xFF7
 15162                           tblptrl	equ	0xFF6
 15163                           tablat	equ	0xFF5
 15164                           prodh	equ	0xFF4
 15165                           prodl	equ	0xFF3
 15166                           intcon	equ	0xFF2
 15167                           intcon2	equ	0xFF1
 15168                           postinc0	equ	0xFEE
 15169                           fsr0h	equ	0xFEA
 15170                           fsr0l	equ	0xFE9
 15171                           wreg	equ	0xFE8
 15172                           indf1	equ	0xFE7
 15173                           postdec1	equ	0xFE5
 15174                           fsr1h	equ	0xFE2
 15175                           fsr1l	equ	0xFE1
 15176                           bsr	equ	0xFE0
 15177                           indf2	equ	0xFDF
 15178                           postinc2	equ	0xFDE
 15179                           postdec2	equ	0xFDD
 15180                           plusw2	equ	0xFDB
 15181                           fsr2h	equ	0xFDA
 15182                           fsr2l	equ	0xFD9
 15183                           status	equ	0xFD8
 15184                           
 15185 ;; *************** function i1_CANsendMessage *****************
 15186 ;; Defined at:
 15187 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15188 ;; Parameters:    Size  Location     Type
 15189 ;;  identifier      4    0[COMRAM] unsigned long 
 15190 ;;  data            2    4[COMRAM] PTR unsigned char 
 15191 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
 15192 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
 15193 ;;  dataLength      1    6[COMRAM] unsigned char 
 15194 ;;  flags           1    7[COMRAM] enum E16335
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 15197 ;; Return value:  Size  Location     Type
 15198 ;;		None               void
 15199 ;; Registers used:
 15200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15201 ;; Tracked objects:
 15202 ;;		On entry : 0/0
 15203 ;;		On exit  : 0/0
 15204 ;;		Unchanged: 0/0
 15205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15206 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15209 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15210 ;;Total ram usage:       16 bytes
 15211 ;; Hardware stack levels used:    1
 15212 ;; Hardware stack levels required when called:    2
 15213 ;; This function calls:
 15214 ;;		Nothing
 15215 ;; This function is called by:
 15216 ;;		_ISR_Bassa
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           	psect	text36
 15221  001FE4                     __ptext36:
 15222                           	opt stack 0
 15223  001FE4                     i1_CANsendMessage:
 15224                           	opt stack 21
 15225                           
 15226                           ;inc\CANlib.h: 296: unsigned long tamp;
 15227                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15228                           
 15229                           ;incstack = 0
 15230  001FE4  010F               	movlb	15	; () banked
 15231  001FE6  B740               	btfsc	64,3,b	;volatile
 15232  001FE8  D115               	goto	i1l363
 15233                           
 15234                           ; BSR set to: 15
 15235                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15236  001FEA  C02F  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15237                           
 15238                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15239  001FEE  AC30               	btfss	i1CANsendMessage@flags,6,c
 15240  001FF0  D003               	goto	i1l364
 15241                           
 15242                           ; BSR set to: 15
 15243                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15244  001FF2  010F               	movlb	15	; () banked
 15245  001FF4  8D45               	bsf	69,6,b	;volatile
 15246  001FF6  D002               	goto	i1l365
 15247  001FF8                     i1l364:
 15248                           
 15249                           ; BSR set to: 15
 15250                           ;inc\CANlib.h: 302: else
 15251                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15252  001FF8  010F               	movlb	15	; () banked
 15253  001FFA  9D45               	bcf	69,6,b	;volatile
 15254  001FFC                     i1l365:
 15255                           
 15256                           ; BSR set to: 15
 15257                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15258  001FFC  A630               	btfss	i1CANsendMessage@flags,3,c
 15259  001FFE  D066               	goto	i1l366
 15260                           
 15261                           ; BSR set to: 15
 15262                           ;inc\CANlib.h: 306: {
 15263                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15264  002000  5029               	movf	i1CANsendMessage@identifier,w,c
 15265  002002  6E35               	movwf	i1CANsendMessage@tamp,c
 15266  002004  6A36               	clrf	i1CANsendMessage@tamp+1,c
 15267  002006  6A37               	clrf	i1CANsendMessage@tamp+2,c
 15268  002008  6A38               	clrf	i1CANsendMessage@tamp+3,c
 15269                           
 15270                           ; BSR set to: 15
 15271                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15272  00200A  C035  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15273                           
 15274                           ; BSR set to: 15
 15275                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15276  00200E  0E00               	movlw	0
 15277  002010  1429               	andwf	i1CANsendMessage@identifier,w,c
 15278  002012  6E35               	movwf	i1CANsendMessage@tamp,c
 15279  002014  0EFF               	movlw	255
 15280  002016  142A               	andwf	i1CANsendMessage@identifier+1,w,c
 15281  002018  6E36               	movwf	i1CANsendMessage@tamp+1,c
 15282  00201A  0E00               	movlw	0
 15283  00201C  142B               	andwf	i1CANsendMessage@identifier+2,w,c
 15284  00201E  6E37               	movwf	i1CANsendMessage@tamp+2,c
 15285  002020  0E00               	movlw	0
 15286  002022  142C               	andwf	i1CANsendMessage@identifier+3,w,c
 15287  002024  6E38               	movwf	i1CANsendMessage@tamp+3,c
 15288                           
 15289                           ; BSR set to: 15
 15290                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15291  002026  C035  F031         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15292  00202A  C036  F032         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15293  00202E  C037  F033         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15294  002032  C038  F034         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15295  002036  C032  F031         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15296  00203A  C033  F032         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15297  00203E  C034  F033         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15298  002042  6A34               	clrf	??i1_CANsendMessage+3,c
 15299  002044  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15300  002048  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15301  00204C  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15302  002050  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15303                           
 15304                           ; BSR set to: 15
 15305                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15306  002054  C035  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15307                           
 15308                           ; BSR set to: 15
 15309                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15310  002058  0E00               	movlw	0
 15311  00205A  010F               	movlb	15	; () banked
 15312  00205C  6F42               	movwf	66,b	;volatile
 15313                           
 15314                           ; BSR set to: 15
 15315                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15316  00205E  010F               	movlb	15	; () banked
 15317  002060  8742               	bsf	66,3,b	;volatile
 15318                           
 15319                           ; BSR set to: 15
 15320                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15321  002062  A02B               	btfss	i1CANsendMessage@identifier+2,0,c
 15322  002064  D002               	goto	i1l367
 15323                           
 15324                           ; BSR set to: 15
 15325                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15326  002066  010F               	movlb	15	; () banked
 15327  002068  8142               	bsf	66,0,b	;volatile
 15328  00206A                     i1l367:
 15329                           
 15330                           ; BSR set to: 15
 15331                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15332  00206A  A22B               	btfss	i1CANsendMessage@identifier+2,1,c
 15333  00206C  D002               	goto	i1l368
 15334                           
 15335                           ; BSR set to: 15
 15336                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15337  00206E  010F               	movlb	15	; () banked
 15338  002070  8342               	bsf	66,1,b	;volatile
 15339  002072                     i1l368:
 15340                           
 15341                           ; BSR set to: 15
 15342                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15343  002072  A42B               	btfss	i1CANsendMessage@identifier+2,2,c
 15344  002074  D002               	goto	i1l369
 15345                           
 15346                           ; BSR set to: 15
 15347                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15348  002076  010F               	movlb	15	; () banked
 15349  002078  8B42               	bsf	66,5,b	;volatile
 15350  00207A                     i1l369:
 15351                           
 15352                           ; BSR set to: 15
 15353                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15354  00207A  A62B               	btfss	i1CANsendMessage@identifier+2,3,c
 15355  00207C  D002               	goto	i1l370
 15356                           
 15357                           ; BSR set to: 15
 15358                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15359  00207E  010F               	movlb	15	; () banked
 15360  002080  8D42               	bsf	66,6,b	;volatile
 15361  002082                     i1l370:
 15362                           
 15363                           ; BSR set to: 15
 15364                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15365  002082  A82B               	btfss	i1CANsendMessage@identifier+2,4,c
 15366  002084  D002               	goto	i1l6316
 15367                           
 15368                           ; BSR set to: 15
 15369                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15370  002086  010F               	movlb	15	; () banked
 15371  002088  8F42               	bsf	66,7,b	;volatile
 15372  00208A                     i1l6316:
 15373                           
 15374                           ; BSR set to: 15
 15375                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15376  00208A  C029  F031         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15377  00208E  C02A  F032         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15378  002092  C02B  F033         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15379  002096  C02C  F034         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15380  00209A  0E16               	movlw	22
 15381  00209C  D005               	goto	i1u798_20
 15382  00209E                     i1u798_25:
 15383  00209E  90D8               	bcf	status,0,c
 15384  0020A0  3234               	rrcf	??i1_CANsendMessage+3,f,c
 15385  0020A2  3233               	rrcf	??i1_CANsendMessage+2,f,c
 15386  0020A4  3232               	rrcf	??i1_CANsendMessage+1,f,c
 15387  0020A6  3231               	rrcf	??i1_CANsendMessage,f,c
 15388  0020A8                     i1u798_20:
 15389  0020A8  2EE8               	decfsz	wreg,f,c
 15390  0020AA  D7F9               	goto	i1u798_25
 15391  0020AC  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15392  0020B0  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15393  0020B4  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15394  0020B8  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15395                           
 15396                           ; BSR set to: 15
 15397                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15398  0020BC  5035               	movf	i1CANsendMessage@tamp,w,c
 15399  0020BE  6E35               	movwf	i1CANsendMessage@tamp,c
 15400  0020C0  6A36               	clrf	i1CANsendMessage@tamp+1,c
 15401  0020C2  6A37               	clrf	i1CANsendMessage@tamp+2,c
 15402  0020C4  6A38               	clrf	i1CANsendMessage@tamp+3,c
 15403                           
 15404                           ; BSR set to: 15
 15405                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15406  0020C6  C035  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15407                           
 15408                           ;inc\CANlib.h: 332: }
 15409  0020CA  D04D               	goto	i1l6336
 15410  0020CC                     i1l366:
 15411                           
 15412                           ; BSR set to: 15
 15413                           ;inc\CANlib.h: 334: else
 15414                           ;inc\CANlib.h: 336: {
 15415                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15416  0020CC  010F               	movlb	15	; () banked
 15417  0020CE  9742               	bcf	66,3,b	;volatile
 15418                           
 15419                           ; BSR set to: 15
 15420                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15421  0020D0  C029  F031         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15422  0020D4  C02A  F032         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15423  0020D8  C02B  F033         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15424  0020DC  C02C  F034         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15425  0020E0  0E04               	movlw	4
 15426  0020E2  D005               	goto	i1u799_20
 15427  0020E4                     i1u799_25:
 15428  0020E4  90D8               	bcf	status,0,c
 15429  0020E6  3234               	rrcf	??i1_CANsendMessage+3,f,c
 15430  0020E8  3233               	rrcf	??i1_CANsendMessage+2,f,c
 15431  0020EA  3232               	rrcf	??i1_CANsendMessage+1,f,c
 15432  0020EC  3231               	rrcf	??i1_CANsendMessage,f,c
 15433  0020EE                     i1u799_20:
 15434  0020EE  2EE8               	decfsz	wreg,f,c
 15435  0020F0  D7F9               	goto	i1u799_25
 15436  0020F2  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15437  0020F6  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15438  0020FA  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15439  0020FE  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15440                           
 15441                           ; BSR set to: 15
 15442                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15443  002102  5035               	movf	i1CANsendMessage@tamp,w,c
 15444  002104  6E35               	movwf	i1CANsendMessage@tamp,c
 15445  002106  6A36               	clrf	i1CANsendMessage@tamp+1,c
 15446  002108  6A37               	clrf	i1CANsendMessage@tamp+2,c
 15447  00210A  6A38               	clrf	i1CANsendMessage@tamp+3,c
 15448                           
 15449                           ; BSR set to: 15
 15450                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15451  00210C  C035  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15452                           
 15453                           ; BSR set to: 15
 15454                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15455  002110  0E07               	movlw	7
 15456  002112  1429               	andwf	i1CANsendMessage@identifier,w,c
 15457  002114  6E35               	movwf	i1CANsendMessage@tamp,c
 15458  002116  0E00               	movlw	0
 15459  002118  142A               	andwf	i1CANsendMessage@identifier+1,w,c
 15460  00211A  6E36               	movwf	i1CANsendMessage@tamp+1,c
 15461  00211C  0E00               	movlw	0
 15462  00211E  142B               	andwf	i1CANsendMessage@identifier+2,w,c
 15463  002120  6E37               	movwf	i1CANsendMessage@tamp+2,c
 15464  002122  0E00               	movlw	0
 15465  002124  142C               	andwf	i1CANsendMessage@identifier+3,w,c
 15466  002126  6E38               	movwf	i1CANsendMessage@tamp+3,c
 15467                           
 15468                           ; BSR set to: 15
 15469                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15470  002128  C035  F031         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15471  00212C  C036  F032         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15472  002130  C037  F033         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15473  002134  C038  F034         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15474  002138  0E05               	movlw	5
 15475  00213A                     i1u800_25:
 15476  00213A  90D8               	bcf	status,0,c
 15477  00213C  3631               	rlcf	??i1_CANsendMessage,f,c
 15478  00213E  3632               	rlcf	??i1_CANsendMessage+1,f,c
 15479  002140  3633               	rlcf	??i1_CANsendMessage+2,f,c
 15480  002142  3634               	rlcf	??i1_CANsendMessage+3,f,c
 15481  002144  2EE8               	decfsz	wreg,f,c
 15482  002146  D7F9               	goto	i1u800_25
 15483  002148  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15484  00214C  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15485  002150  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15486  002154  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15487                           
 15488                           ; BSR set to: 15
 15489                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15490  002158  010F               	movlb	15	; () banked
 15491  00215A  5142               	movf	66,w,b	;volatile
 15492  00215C  0B1F               	andlw	31
 15493  00215E  010F               	movlb	15	; () banked
 15494  002160  6F42               	movwf	66,b	;volatile
 15495                           
 15496                           ; BSR set to: 15
 15497                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15498  002162  C035  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15499  002166                     i1l6336:
 15500                           
 15501                           ; BSR set to: 15
 15502                           ;inc\CANlib.h: 347: }
 15503                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15504  002166  A030               	btfss	i1CANsendMessage@flags,0,c
 15505  002168  D003               	goto	i1l373
 15506                           
 15507                           ; BSR set to: 15
 15508                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15509  00216A  010F               	movlb	15	; () banked
 15510  00216C  8140               	bsf	64,0,b	;volatile
 15511  00216E  D002               	goto	i1l374
 15512  002170                     i1l373:
 15513                           
 15514                           ; BSR set to: 15
 15515                           ;inc\CANlib.h: 351: else
 15516                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15517  002170  010F               	movlb	15	; () banked
 15518  002172  9140               	bcf	64,0,b	;volatile
 15519  002174                     i1l374:
 15520                           
 15521                           ; BSR set to: 15
 15522                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15523  002174  A230               	btfss	i1CANsendMessage@flags,1,c
 15524  002176  D003               	goto	i1l375
 15525                           
 15526                           ; BSR set to: 15
 15527                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15528  002178  010F               	movlb	15	; () banked
 15529  00217A  8340               	bsf	64,1,b	;volatile
 15530  00217C  D002               	goto	i1l6342
 15531  00217E                     i1l375:
 15532                           
 15533                           ; BSR set to: 15
 15534                           ;inc\CANlib.h: 355: else
 15535                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15536  00217E  010F               	movlb	15	; () banked
 15537  002180  9340               	bcf	64,1,b	;volatile
 15538  002182                     i1l6342:
 15539                           
 15540                           ; BSR set to: 15
 15541                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15542  002182  C02D  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15543  002186  C02E  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15544  00218A  50DF               	movf	indf2,w,c
 15545  00218C  010F               	movlb	15	; () banked
 15546  00218E  6F46               	movwf	70,b	;volatile
 15547                           
 15548                           ; BSR set to: 15
 15549                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15550  002190  EE20 F001          	lfsr	2,1
 15551  002194  502D               	movf	i1CANsendMessage@data,w,c
 15552  002196  26D9               	addwf	fsr2l,f,c
 15553  002198  502E               	movf	i1CANsendMessage@data+1,w,c
 15554  00219A  22DA               	addwfc	fsr2h,f,c
 15555  00219C  50DF               	movf	indf2,w,c
 15556  00219E  010F               	movlb	15	; () banked
 15557  0021A0  6F47               	movwf	71,b	;volatile
 15558                           
 15559                           ; BSR set to: 15
 15560                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15561  0021A2  EE20 F002          	lfsr	2,2
 15562  0021A6  502D               	movf	i1CANsendMessage@data,w,c
 15563  0021A8  26D9               	addwf	fsr2l,f,c
 15564  0021AA  502E               	movf	i1CANsendMessage@data+1,w,c
 15565  0021AC  22DA               	addwfc	fsr2h,f,c
 15566  0021AE  50DF               	movf	indf2,w,c
 15567  0021B0  010F               	movlb	15	; () banked
 15568  0021B2  6F48               	movwf	72,b	;volatile
 15569                           
 15570                           ; BSR set to: 15
 15571                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15572  0021B4  EE20 F003          	lfsr	2,3
 15573  0021B8  502D               	movf	i1CANsendMessage@data,w,c
 15574  0021BA  26D9               	addwf	fsr2l,f,c
 15575  0021BC  502E               	movf	i1CANsendMessage@data+1,w,c
 15576  0021BE  22DA               	addwfc	fsr2h,f,c
 15577  0021C0  50DF               	movf	indf2,w,c
 15578  0021C2  010F               	movlb	15	; () banked
 15579  0021C4  6F49               	movwf	73,b	;volatile
 15580                           
 15581                           ; BSR set to: 15
 15582                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15583  0021C6  EE20 F004          	lfsr	2,4
 15584  0021CA  502D               	movf	i1CANsendMessage@data,w,c
 15585  0021CC  26D9               	addwf	fsr2l,f,c
 15586  0021CE  502E               	movf	i1CANsendMessage@data+1,w,c
 15587  0021D0  22DA               	addwfc	fsr2h,f,c
 15588  0021D2  50DF               	movf	indf2,w,c
 15589  0021D4  010F               	movlb	15	; () banked
 15590  0021D6  6F4A               	movwf	74,b	;volatile
 15591                           
 15592                           ; BSR set to: 15
 15593                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15594  0021D8  EE20 F005          	lfsr	2,5
 15595  0021DC  502D               	movf	i1CANsendMessage@data,w,c
 15596  0021DE  26D9               	addwf	fsr2l,f,c
 15597  0021E0  502E               	movf	i1CANsendMessage@data+1,w,c
 15598  0021E2  22DA               	addwfc	fsr2h,f,c
 15599  0021E4  50DF               	movf	indf2,w,c
 15600  0021E6  010F               	movlb	15	; () banked
 15601  0021E8  6F4B               	movwf	75,b	;volatile
 15602                           
 15603                           ; BSR set to: 15
 15604                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15605  0021EA  EE20 F006          	lfsr	2,6
 15606  0021EE  502D               	movf	i1CANsendMessage@data,w,c
 15607  0021F0  26D9               	addwf	fsr2l,f,c
 15608  0021F2  502E               	movf	i1CANsendMessage@data+1,w,c
 15609  0021F4  22DA               	addwfc	fsr2h,f,c
 15610  0021F6  50DF               	movf	indf2,w,c
 15611  0021F8  010F               	movlb	15	; () banked
 15612  0021FA  6F4C               	movwf	76,b	;volatile
 15613                           
 15614                           ; BSR set to: 15
 15615                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15616  0021FC  EE20 F007          	lfsr	2,7
 15617  002200  502D               	movf	i1CANsendMessage@data,w,c
 15618  002202  26D9               	addwf	fsr2l,f,c
 15619  002204  502E               	movf	i1CANsendMessage@data+1,w,c
 15620  002206  22DA               	addwfc	fsr2h,f,c
 15621  002208  50DF               	movf	indf2,w,c
 15622  00220A  010F               	movlb	15	; () banked
 15623  00220C  6F4D               	movwf	77,b	;volatile
 15624                           
 15625                           ; BSR set to: 15
 15626                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15627  00220E  010F               	movlb	15	; () banked
 15628  002210  8740               	bsf	64,3,b	;volatile
 15629                           
 15630                           ; BSR set to: 15
 15631                           ;inc\CANlib.h: 368: return;
 15632  002212  0012               	return	
 15633  002214                     i1l363:
 15634                           
 15635                           ; BSR set to: 15
 15636                           ;inc\CANlib.h: 369: }
 15637                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15638  002214  010F               	movlb	15	; () banked
 15639  002216  B730               	btfsc	48,3,b	;volatile
 15640  002218  D115               	goto	i1l378
 15641                           
 15642                           ; BSR set to: 15
 15643                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15644  00221A  C02F  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15645                           
 15646                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15647  00221E  AC30               	btfss	i1CANsendMessage@flags,6,c
 15648  002220  D003               	goto	i1l379
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15652  002222  010F               	movlb	15	; () banked
 15653  002224  8D35               	bsf	53,6,b	;volatile
 15654  002226  D002               	goto	i1l380
 15655  002228                     i1l379:
 15656                           
 15657                           ; BSR set to: 15
 15658                           ;inc\CANlib.h: 378: else
 15659                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 15660  002228  010F               	movlb	15	; () banked
 15661  00222A  9D35               	bcf	53,6,b	;volatile
 15662  00222C                     i1l380:
 15663                           
 15664                           ; BSR set to: 15
 15665                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 15666  00222C  A630               	btfss	i1CANsendMessage@flags,3,c
 15667  00222E  D066               	goto	i1l381
 15668                           
 15669                           ; BSR set to: 15
 15670                           ;inc\CANlib.h: 382: {
 15671                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 15672  002230  5029               	movf	i1CANsendMessage@identifier,w,c
 15673  002232  6E35               	movwf	i1CANsendMessage@tamp,c
 15674  002234  6A36               	clrf	i1CANsendMessage@tamp+1,c
 15675  002236  6A37               	clrf	i1CANsendMessage@tamp+2,c
 15676  002238  6A38               	clrf	i1CANsendMessage@tamp+3,c
 15677                           
 15678                           ; BSR set to: 15
 15679                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 15680  00223A  C035  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15681                           
 15682                           ; BSR set to: 15
 15683                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 15684  00223E  0E00               	movlw	0
 15685  002240  1429               	andwf	i1CANsendMessage@identifier,w,c
 15686  002242  6E35               	movwf	i1CANsendMessage@tamp,c
 15687  002244  0EFF               	movlw	255
 15688  002246  142A               	andwf	i1CANsendMessage@identifier+1,w,c
 15689  002248  6E36               	movwf	i1CANsendMessage@tamp+1,c
 15690  00224A  0E00               	movlw	0
 15691  00224C  142B               	andwf	i1CANsendMessage@identifier+2,w,c
 15692  00224E  6E37               	movwf	i1CANsendMessage@tamp+2,c
 15693  002250  0E00               	movlw	0
 15694  002252  142C               	andwf	i1CANsendMessage@identifier+3,w,c
 15695  002254  6E38               	movwf	i1CANsendMessage@tamp+3,c
 15696                           
 15697                           ; BSR set to: 15
 15698                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 15699  002256  C035  F031         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15700  00225A  C036  F032         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15701  00225E  C037  F033         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15702  002262  C038  F034         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15703  002266  C032  F031         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15704  00226A  C033  F032         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15705  00226E  C034  F033         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15706  002272  6A34               	clrf	??i1_CANsendMessage+3,c
 15707  002274  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15708  002278  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15709  00227C  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15710  002280  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15711                           
 15712                           ; BSR set to: 15
 15713                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 15714  002284  C035  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15715                           
 15716                           ; BSR set to: 15
 15717                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 15718  002288  0E00               	movlw	0
 15719  00228A  010F               	movlb	15	; () banked
 15720  00228C  6F32               	movwf	50,b	;volatile
 15721                           
 15722                           ; BSR set to: 15
 15723                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 15724  00228E  010F               	movlb	15	; () banked
 15725  002290  8732               	bsf	50,3,b	;volatile
 15726                           
 15727                           ; BSR set to: 15
 15728                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 15729  002292  A02B               	btfss	i1CANsendMessage@identifier+2,0,c
 15730  002294  D002               	goto	i1l382
 15731                           
 15732                           ; BSR set to: 15
 15733                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 15734  002296  010F               	movlb	15	; () banked
 15735  002298  8132               	bsf	50,0,b	;volatile
 15736  00229A                     i1l382:
 15737                           
 15738                           ; BSR set to: 15
 15739                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 15740  00229A  A22B               	btfss	i1CANsendMessage@identifier+2,1,c
 15741  00229C  D002               	goto	i1l383
 15742                           
 15743                           ; BSR set to: 15
 15744                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 15745  00229E  010F               	movlb	15	; () banked
 15746  0022A0  8332               	bsf	50,1,b	;volatile
 15747  0022A2                     i1l383:
 15748                           
 15749                           ; BSR set to: 15
 15750                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 15751  0022A2  A42B               	btfss	i1CANsendMessage@identifier+2,2,c
 15752  0022A4  D002               	goto	i1l384
 15753                           
 15754                           ; BSR set to: 15
 15755                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 15756  0022A6  010F               	movlb	15	; () banked
 15757  0022A8  8B32               	bsf	50,5,b	;volatile
 15758  0022AA                     i1l384:
 15759                           
 15760                           ; BSR set to: 15
 15761                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 15762  0022AA  A62B               	btfss	i1CANsendMessage@identifier+2,3,c
 15763  0022AC  D002               	goto	i1l385
 15764                           
 15765                           ; BSR set to: 15
 15766                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 15767  0022AE  010F               	movlb	15	; () banked
 15768  0022B0  8D32               	bsf	50,6,b	;volatile
 15769  0022B2                     i1l385:
 15770                           
 15771                           ; BSR set to: 15
 15772                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 15773  0022B2  A82B               	btfss	i1CANsendMessage@identifier+2,4,c
 15774  0022B4  D002               	goto	i1l6392
 15775                           
 15776                           ; BSR set to: 15
 15777                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 15778  0022B6  010F               	movlb	15	; () banked
 15779  0022B8  8F32               	bsf	50,7,b	;volatile
 15780  0022BA                     i1l6392:
 15781                           
 15782                           ; BSR set to: 15
 15783                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 15784  0022BA  C029  F031         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15785  0022BE  C02A  F032         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15786  0022C2  C02B  F033         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15787  0022C6  C02C  F034         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15788  0022CA  0E16               	movlw	22
 15789  0022CC  D005               	goto	i1u811_20
 15790  0022CE                     i1u811_25:
 15791  0022CE  90D8               	bcf	status,0,c
 15792  0022D0  3234               	rrcf	??i1_CANsendMessage+3,f,c
 15793  0022D2  3233               	rrcf	??i1_CANsendMessage+2,f,c
 15794  0022D4  3232               	rrcf	??i1_CANsendMessage+1,f,c
 15795  0022D6  3231               	rrcf	??i1_CANsendMessage,f,c
 15796  0022D8                     i1u811_20:
 15797  0022D8  2EE8               	decfsz	wreg,f,c
 15798  0022DA  D7F9               	goto	i1u811_25
 15799  0022DC  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15800  0022E0  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15801  0022E4  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15802  0022E8  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15803                           
 15804                           ; BSR set to: 15
 15805                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 15806  0022EC  5035               	movf	i1CANsendMessage@tamp,w,c
 15807  0022EE  6E35               	movwf	i1CANsendMessage@tamp,c
 15808  0022F0  6A36               	clrf	i1CANsendMessage@tamp+1,c
 15809  0022F2  6A37               	clrf	i1CANsendMessage@tamp+2,c
 15810  0022F4  6A38               	clrf	i1CANsendMessage@tamp+3,c
 15811                           
 15812                           ; BSR set to: 15
 15813                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 15814  0022F6  C035  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15815                           
 15816                           ;inc\CANlib.h: 407: }
 15817  0022FA  D04D               	goto	i1l6412
 15818  0022FC                     i1l381:
 15819                           
 15820                           ; BSR set to: 15
 15821                           ;inc\CANlib.h: 409: else
 15822                           ;inc\CANlib.h: 411: {
 15823                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 15824  0022FC  010F               	movlb	15	; () banked
 15825  0022FE  9732               	bcf	50,3,b	;volatile
 15826                           
 15827                           ; BSR set to: 15
 15828                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 15829  002300  C029  F031         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15830  002304  C02A  F032         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15831  002308  C02B  F033         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15832  00230C  C02C  F034         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15833  002310  0E04               	movlw	4
 15834  002312  D005               	goto	i1u812_20
 15835  002314                     i1u812_25:
 15836  002314  90D8               	bcf	status,0,c
 15837  002316  3234               	rrcf	??i1_CANsendMessage+3,f,c
 15838  002318  3233               	rrcf	??i1_CANsendMessage+2,f,c
 15839  00231A  3232               	rrcf	??i1_CANsendMessage+1,f,c
 15840  00231C  3231               	rrcf	??i1_CANsendMessage,f,c
 15841  00231E                     i1u812_20:
 15842  00231E  2EE8               	decfsz	wreg,f,c
 15843  002320  D7F9               	goto	i1u812_25
 15844  002322  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15845  002326  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15846  00232A  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15847  00232E  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15848                           
 15849                           ; BSR set to: 15
 15850                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 15851  002332  5035               	movf	i1CANsendMessage@tamp,w,c
 15852  002334  6E35               	movwf	i1CANsendMessage@tamp,c
 15853  002336  6A36               	clrf	i1CANsendMessage@tamp+1,c
 15854  002338  6A37               	clrf	i1CANsendMessage@tamp+2,c
 15855  00233A  6A38               	clrf	i1CANsendMessage@tamp+3,c
 15856                           
 15857                           ; BSR set to: 15
 15858                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 15859  00233C  C035  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15860                           
 15861                           ; BSR set to: 15
 15862                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 15863  002340  0E07               	movlw	7
 15864  002342  1429               	andwf	i1CANsendMessage@identifier,w,c
 15865  002344  6E35               	movwf	i1CANsendMessage@tamp,c
 15866  002346  0E00               	movlw	0
 15867  002348  142A               	andwf	i1CANsendMessage@identifier+1,w,c
 15868  00234A  6E36               	movwf	i1CANsendMessage@tamp+1,c
 15869  00234C  0E00               	movlw	0
 15870  00234E  142B               	andwf	i1CANsendMessage@identifier+2,w,c
 15871  002350  6E37               	movwf	i1CANsendMessage@tamp+2,c
 15872  002352  0E00               	movlw	0
 15873  002354  142C               	andwf	i1CANsendMessage@identifier+3,w,c
 15874  002356  6E38               	movwf	i1CANsendMessage@tamp+3,c
 15875                           
 15876                           ; BSR set to: 15
 15877                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 15878  002358  C035  F031         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15879  00235C  C036  F032         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15880  002360  C037  F033         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15881  002364  C038  F034         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15882  002368  0E05               	movlw	5
 15883  00236A                     i1u813_25:
 15884  00236A  90D8               	bcf	status,0,c
 15885  00236C  3631               	rlcf	??i1_CANsendMessage,f,c
 15886  00236E  3632               	rlcf	??i1_CANsendMessage+1,f,c
 15887  002370  3633               	rlcf	??i1_CANsendMessage+2,f,c
 15888  002372  3634               	rlcf	??i1_CANsendMessage+3,f,c
 15889  002374  2EE8               	decfsz	wreg,f,c
 15890  002376  D7F9               	goto	i1u813_25
 15891  002378  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15892  00237C  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15893  002380  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15894  002384  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15895                           
 15896                           ; BSR set to: 15
 15897                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 15898  002388  010F               	movlb	15	; () banked
 15899  00238A  5132               	movf	50,w,b	;volatile
 15900  00238C  0B1F               	andlw	31
 15901  00238E  010F               	movlb	15	; () banked
 15902  002390  6F32               	movwf	50,b	;volatile
 15903                           
 15904                           ; BSR set to: 15
 15905                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 15906  002392  C035  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15907  002396                     i1l6412:
 15908                           
 15909                           ; BSR set to: 15
 15910                           ;inc\CANlib.h: 422: }
 15911                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 15912  002396  A030               	btfss	i1CANsendMessage@flags,0,c
 15913  002398  D003               	goto	i1l388
 15914                           
 15915                           ; BSR set to: 15
 15916                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 15917  00239A  010F               	movlb	15	; () banked
 15918  00239C  8130               	bsf	48,0,b	;volatile
 15919  00239E  D002               	goto	i1l389
 15920  0023A0                     i1l388:
 15921                           
 15922                           ; BSR set to: 15
 15923                           ;inc\CANlib.h: 426: else
 15924                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 15925  0023A0  010F               	movlb	15	; () banked
 15926  0023A2  9130               	bcf	48,0,b	;volatile
 15927  0023A4                     i1l389:
 15928                           
 15929                           ; BSR set to: 15
 15930                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 15931  0023A4  A230               	btfss	i1CANsendMessage@flags,1,c
 15932  0023A6  D003               	goto	i1l390
 15933                           
 15934                           ; BSR set to: 15
 15935                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 15936  0023A8  010F               	movlb	15	; () banked
 15937  0023AA  8330               	bsf	48,1,b	;volatile
 15938  0023AC  D002               	goto	i1l6418
 15939  0023AE                     i1l390:
 15940                           
 15941                           ; BSR set to: 15
 15942                           ;inc\CANlib.h: 430: else
 15943                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 15944  0023AE  010F               	movlb	15	; () banked
 15945  0023B0  9330               	bcf	48,1,b	;volatile
 15946  0023B2                     i1l6418:
 15947                           
 15948                           ; BSR set to: 15
 15949                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 15950  0023B2  C02D  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15951  0023B6  C02E  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15952  0023BA  50DF               	movf	indf2,w,c
 15953  0023BC  010F               	movlb	15	; () banked
 15954  0023BE  6F36               	movwf	54,b	;volatile
 15955                           
 15956                           ; BSR set to: 15
 15957                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 15958  0023C0  EE20 F001          	lfsr	2,1
 15959  0023C4  502D               	movf	i1CANsendMessage@data,w,c
 15960  0023C6  26D9               	addwf	fsr2l,f,c
 15961  0023C8  502E               	movf	i1CANsendMessage@data+1,w,c
 15962  0023CA  22DA               	addwfc	fsr2h,f,c
 15963  0023CC  50DF               	movf	indf2,w,c
 15964  0023CE  010F               	movlb	15	; () banked
 15965  0023D0  6F37               	movwf	55,b	;volatile
 15966                           
 15967                           ; BSR set to: 15
 15968                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 15969  0023D2  EE20 F002          	lfsr	2,2
 15970  0023D6  502D               	movf	i1CANsendMessage@data,w,c
 15971  0023D8  26D9               	addwf	fsr2l,f,c
 15972  0023DA  502E               	movf	i1CANsendMessage@data+1,w,c
 15973  0023DC  22DA               	addwfc	fsr2h,f,c
 15974  0023DE  50DF               	movf	indf2,w,c
 15975  0023E0  010F               	movlb	15	; () banked
 15976  0023E2  6F38               	movwf	56,b	;volatile
 15977                           
 15978                           ; BSR set to: 15
 15979                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 15980  0023E4  EE20 F003          	lfsr	2,3
 15981  0023E8  502D               	movf	i1CANsendMessage@data,w,c
 15982  0023EA  26D9               	addwf	fsr2l,f,c
 15983  0023EC  502E               	movf	i1CANsendMessage@data+1,w,c
 15984  0023EE  22DA               	addwfc	fsr2h,f,c
 15985  0023F0  50DF               	movf	indf2,w,c
 15986  0023F2  010F               	movlb	15	; () banked
 15987  0023F4  6F39               	movwf	57,b	;volatile
 15988                           
 15989                           ; BSR set to: 15
 15990                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 15991  0023F6  EE20 F004          	lfsr	2,4
 15992  0023FA  502D               	movf	i1CANsendMessage@data,w,c
 15993  0023FC  26D9               	addwf	fsr2l,f,c
 15994  0023FE  502E               	movf	i1CANsendMessage@data+1,w,c
 15995  002400  22DA               	addwfc	fsr2h,f,c
 15996  002402  50DF               	movf	indf2,w,c
 15997  002404  010F               	movlb	15	; () banked
 15998  002406  6F3A               	movwf	58,b	;volatile
 15999                           
 16000                           ; BSR set to: 15
 16001                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16002  002408  EE20 F005          	lfsr	2,5
 16003  00240C  502D               	movf	i1CANsendMessage@data,w,c
 16004  00240E  26D9               	addwf	fsr2l,f,c
 16005  002410  502E               	movf	i1CANsendMessage@data+1,w,c
 16006  002412  22DA               	addwfc	fsr2h,f,c
 16007  002414  50DF               	movf	indf2,w,c
 16008  002416  010F               	movlb	15	; () banked
 16009  002418  6F3B               	movwf	59,b	;volatile
 16010                           
 16011                           ; BSR set to: 15
 16012                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16013  00241A  EE20 F006          	lfsr	2,6
 16014  00241E  502D               	movf	i1CANsendMessage@data,w,c
 16015  002420  26D9               	addwf	fsr2l,f,c
 16016  002422  502E               	movf	i1CANsendMessage@data+1,w,c
 16017  002424  22DA               	addwfc	fsr2h,f,c
 16018  002426  50DF               	movf	indf2,w,c
 16019  002428  010F               	movlb	15	; () banked
 16020  00242A  6F3C               	movwf	60,b	;volatile
 16021                           
 16022                           ; BSR set to: 15
 16023                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16024  00242C  EE20 F007          	lfsr	2,7
 16025  002430  502D               	movf	i1CANsendMessage@data,w,c
 16026  002432  26D9               	addwf	fsr2l,f,c
 16027  002434  502E               	movf	i1CANsendMessage@data+1,w,c
 16028  002436  22DA               	addwfc	fsr2h,f,c
 16029  002438  50DF               	movf	indf2,w,c
 16030  00243A  010F               	movlb	15	; () banked
 16031  00243C  6F3D               	movwf	61,b	;volatile
 16032                           
 16033                           ; BSR set to: 15
 16034                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16035  00243E  010F               	movlb	15	; () banked
 16036  002440  8730               	bsf	48,3,b	;volatile
 16037                           
 16038                           ; BSR set to: 15
 16039                           ;inc\CANlib.h: 444: return;
 16040  002442  0012               	return	
 16041  002444                     i1l378:
 16042                           
 16043                           ; BSR set to: 15
 16044                           ;inc\CANlib.h: 445: }
 16045                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16046  002444  010F               	movlb	15	; () banked
 16047  002446  B720               	btfsc	32,3,b	;volatile
 16048  002448  0012               	return	
 16049                           
 16050                           ; BSR set to: 15
 16051                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16052  00244A  C02F  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16053                           
 16054                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16055  00244E  AC30               	btfss	i1CANsendMessage@flags,6,c
 16056  002450  D003               	goto	i1l393
 16057                           
 16058                           ; BSR set to: 15
 16059                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16060  002452  010F               	movlb	15	; () banked
 16061  002454  8D25               	bsf	37,6,b	;volatile
 16062  002456  D002               	goto	i1l394
 16063  002458                     i1l393:
 16064                           
 16065                           ; BSR set to: 15
 16066                           ;inc\CANlib.h: 454: else
 16067                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16068  002458  010F               	movlb	15	; () banked
 16069  00245A  9D25               	bcf	37,6,b	;volatile
 16070  00245C                     i1l394:
 16071                           
 16072                           ; BSR set to: 15
 16073                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16074  00245C  A630               	btfss	i1CANsendMessage@flags,3,c
 16075  00245E  D066               	goto	i1l395
 16076                           
 16077                           ; BSR set to: 15
 16078                           ;inc\CANlib.h: 458: {
 16079                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16080  002460  5029               	movf	i1CANsendMessage@identifier,w,c
 16081  002462  6E35               	movwf	i1CANsendMessage@tamp,c
 16082  002464  6A36               	clrf	i1CANsendMessage@tamp+1,c
 16083  002466  6A37               	clrf	i1CANsendMessage@tamp+2,c
 16084  002468  6A38               	clrf	i1CANsendMessage@tamp+3,c
 16085                           
 16086                           ; BSR set to: 15
 16087                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16088  00246A  C035  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16089                           
 16090                           ; BSR set to: 15
 16091                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16092  00246E  0E00               	movlw	0
 16093  002470  1429               	andwf	i1CANsendMessage@identifier,w,c
 16094  002472  6E35               	movwf	i1CANsendMessage@tamp,c
 16095  002474  0EFF               	movlw	255
 16096  002476  142A               	andwf	i1CANsendMessage@identifier+1,w,c
 16097  002478  6E36               	movwf	i1CANsendMessage@tamp+1,c
 16098  00247A  0E00               	movlw	0
 16099  00247C  142B               	andwf	i1CANsendMessage@identifier+2,w,c
 16100  00247E  6E37               	movwf	i1CANsendMessage@tamp+2,c
 16101  002480  0E00               	movlw	0
 16102  002482  142C               	andwf	i1CANsendMessage@identifier+3,w,c
 16103  002484  6E38               	movwf	i1CANsendMessage@tamp+3,c
 16104                           
 16105                           ; BSR set to: 15
 16106                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16107  002486  C035  F031         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16108  00248A  C036  F032         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16109  00248E  C037  F033         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16110  002492  C038  F034         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16111  002496  C032  F031         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16112  00249A  C033  F032         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16113  00249E  C034  F033         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16114  0024A2  6A34               	clrf	??i1_CANsendMessage+3,c
 16115  0024A4  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16116  0024A8  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16117  0024AC  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16118  0024B0  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16119                           
 16120                           ; BSR set to: 15
 16121                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16122  0024B4  C035  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16123                           
 16124                           ; BSR set to: 15
 16125                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16126  0024B8  0E00               	movlw	0
 16127  0024BA  010F               	movlb	15	; () banked
 16128  0024BC  6F22               	movwf	34,b	;volatile
 16129                           
 16130                           ; BSR set to: 15
 16131                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16132  0024BE  010F               	movlb	15	; () banked
 16133  0024C0  8722               	bsf	34,3,b	;volatile
 16134                           
 16135                           ; BSR set to: 15
 16136                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16137  0024C2  A02B               	btfss	i1CANsendMessage@identifier+2,0,c
 16138  0024C4  D002               	goto	i1l396
 16139                           
 16140                           ; BSR set to: 15
 16141                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16142  0024C6  010F               	movlb	15	; () banked
 16143  0024C8  8122               	bsf	34,0,b	;volatile
 16144  0024CA                     i1l396:
 16145                           
 16146                           ; BSR set to: 15
 16147                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16148  0024CA  A22B               	btfss	i1CANsendMessage@identifier+2,1,c
 16149  0024CC  D002               	goto	i1l397
 16150                           
 16151                           ; BSR set to: 15
 16152                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16153  0024CE  010F               	movlb	15	; () banked
 16154  0024D0  8322               	bsf	34,1,b	;volatile
 16155  0024D2                     i1l397:
 16156                           
 16157                           ; BSR set to: 15
 16158                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16159  0024D2  A42B               	btfss	i1CANsendMessage@identifier+2,2,c
 16160  0024D4  D002               	goto	i1l398
 16161                           
 16162                           ; BSR set to: 15
 16163                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16164  0024D6  010F               	movlb	15	; () banked
 16165  0024D8  8B22               	bsf	34,5,b	;volatile
 16166  0024DA                     i1l398:
 16167                           
 16168                           ; BSR set to: 15
 16169                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16170  0024DA  A62B               	btfss	i1CANsendMessage@identifier+2,3,c
 16171  0024DC  D002               	goto	i1l399
 16172                           
 16173                           ; BSR set to: 15
 16174                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16175  0024DE  010F               	movlb	15	; () banked
 16176  0024E0  8D22               	bsf	34,6,b	;volatile
 16177  0024E2                     i1l399:
 16178                           
 16179                           ; BSR set to: 15
 16180                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16181  0024E2  A82B               	btfss	i1CANsendMessage@identifier+2,4,c
 16182  0024E4  D002               	goto	i1l6468
 16183                           
 16184                           ; BSR set to: 15
 16185                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16186  0024E6  010F               	movlb	15	; () banked
 16187  0024E8  8F22               	bsf	34,7,b	;volatile
 16188  0024EA                     i1l6468:
 16189                           
 16190                           ; BSR set to: 15
 16191                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16192  0024EA  C029  F031         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16193  0024EE  C02A  F032         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16194  0024F2  C02B  F033         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16195  0024F6  C02C  F034         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16196  0024FA  0E16               	movlw	22
 16197  0024FC  D005               	goto	i1u824_20
 16198  0024FE                     i1u824_25:
 16199  0024FE  90D8               	bcf	status,0,c
 16200  002500  3234               	rrcf	??i1_CANsendMessage+3,f,c
 16201  002502  3233               	rrcf	??i1_CANsendMessage+2,f,c
 16202  002504  3232               	rrcf	??i1_CANsendMessage+1,f,c
 16203  002506  3231               	rrcf	??i1_CANsendMessage,f,c
 16204  002508                     i1u824_20:
 16205  002508  2EE8               	decfsz	wreg,f,c
 16206  00250A  D7F9               	goto	i1u824_25
 16207  00250C  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16208  002510  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16209  002514  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16210  002518  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16211                           
 16212                           ; BSR set to: 15
 16213                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16214  00251C  5035               	movf	i1CANsendMessage@tamp,w,c
 16215  00251E  6E35               	movwf	i1CANsendMessage@tamp,c
 16216  002520  6A36               	clrf	i1CANsendMessage@tamp+1,c
 16217  002522  6A37               	clrf	i1CANsendMessage@tamp+2,c
 16218  002524  6A38               	clrf	i1CANsendMessage@tamp+3,c
 16219                           
 16220                           ; BSR set to: 15
 16221                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16222  002526  C035  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16223                           
 16224                           ;inc\CANlib.h: 483: }
 16225  00252A  D04D               	goto	i1l6488
 16226  00252C                     i1l395:
 16227                           
 16228                           ; BSR set to: 15
 16229                           ;inc\CANlib.h: 485: else
 16230                           ;inc\CANlib.h: 487: {
 16231                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16232  00252C  010F               	movlb	15	; () banked
 16233  00252E  9722               	bcf	34,3,b	;volatile
 16234                           
 16235                           ; BSR set to: 15
 16236                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16237  002530  C029  F031         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16238  002534  C02A  F032         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16239  002538  C02B  F033         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16240  00253C  C02C  F034         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16241  002540  0E04               	movlw	4
 16242  002542  D005               	goto	i1u825_20
 16243  002544                     i1u825_25:
 16244  002544  90D8               	bcf	status,0,c
 16245  002546  3234               	rrcf	??i1_CANsendMessage+3,f,c
 16246  002548  3233               	rrcf	??i1_CANsendMessage+2,f,c
 16247  00254A  3232               	rrcf	??i1_CANsendMessage+1,f,c
 16248  00254C  3231               	rrcf	??i1_CANsendMessage,f,c
 16249  00254E                     i1u825_20:
 16250  00254E  2EE8               	decfsz	wreg,f,c
 16251  002550  D7F9               	goto	i1u825_25
 16252  002552  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16253  002556  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16254  00255A  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16255  00255E  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16256                           
 16257                           ; BSR set to: 15
 16258                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16259  002562  5035               	movf	i1CANsendMessage@tamp,w,c
 16260  002564  6E35               	movwf	i1CANsendMessage@tamp,c
 16261  002566  6A36               	clrf	i1CANsendMessage@tamp+1,c
 16262  002568  6A37               	clrf	i1CANsendMessage@tamp+2,c
 16263  00256A  6A38               	clrf	i1CANsendMessage@tamp+3,c
 16264                           
 16265                           ; BSR set to: 15
 16266                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16267  00256C  C035  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16268                           
 16269                           ; BSR set to: 15
 16270                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16271  002570  0E07               	movlw	7
 16272  002572  1429               	andwf	i1CANsendMessage@identifier,w,c
 16273  002574  6E35               	movwf	i1CANsendMessage@tamp,c
 16274  002576  0E00               	movlw	0
 16275  002578  142A               	andwf	i1CANsendMessage@identifier+1,w,c
 16276  00257A  6E36               	movwf	i1CANsendMessage@tamp+1,c
 16277  00257C  0E00               	movlw	0
 16278  00257E  142B               	andwf	i1CANsendMessage@identifier+2,w,c
 16279  002580  6E37               	movwf	i1CANsendMessage@tamp+2,c
 16280  002582  0E00               	movlw	0
 16281  002584  142C               	andwf	i1CANsendMessage@identifier+3,w,c
 16282  002586  6E38               	movwf	i1CANsendMessage@tamp+3,c
 16283                           
 16284                           ; BSR set to: 15
 16285                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16286  002588  C035  F031         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16287  00258C  C036  F032         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16288  002590  C037  F033         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16289  002594  C038  F034         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16290  002598  0E05               	movlw	5
 16291  00259A                     i1u826_25:
 16292  00259A  90D8               	bcf	status,0,c
 16293  00259C  3631               	rlcf	??i1_CANsendMessage,f,c
 16294  00259E  3632               	rlcf	??i1_CANsendMessage+1,f,c
 16295  0025A0  3633               	rlcf	??i1_CANsendMessage+2,f,c
 16296  0025A2  3634               	rlcf	??i1_CANsendMessage+3,f,c
 16297  0025A4  2EE8               	decfsz	wreg,f,c
 16298  0025A6  D7F9               	goto	i1u826_25
 16299  0025A8  C031  F035         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16300  0025AC  C032  F036         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16301  0025B0  C033  F037         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16302  0025B4  C034  F038         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16303                           
 16304                           ; BSR set to: 15
 16305                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16306  0025B8  010F               	movlb	15	; () banked
 16307  0025BA  5122               	movf	34,w,b	;volatile
 16308  0025BC  0B1F               	andlw	31
 16309  0025BE  010F               	movlb	15	; () banked
 16310  0025C0  6F22               	movwf	34,b	;volatile
 16311                           
 16312                           ; BSR set to: 15
 16313                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16314  0025C2  C035  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16315  0025C6                     i1l6488:
 16316                           
 16317                           ; BSR set to: 15
 16318                           ;inc\CANlib.h: 498: }
 16319                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16320  0025C6  A030               	btfss	i1CANsendMessage@flags,0,c
 16321  0025C8  D003               	goto	i1l402
 16322                           
 16323                           ; BSR set to: 15
 16324                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16325  0025CA  010F               	movlb	15	; () banked
 16326  0025CC  8120               	bsf	32,0,b	;volatile
 16327  0025CE  D002               	goto	i1l403
 16328  0025D0                     i1l402:
 16329                           
 16330                           ; BSR set to: 15
 16331                           ;inc\CANlib.h: 502: else
 16332                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16333  0025D0  010F               	movlb	15	; () banked
 16334  0025D2  9120               	bcf	32,0,b	;volatile
 16335  0025D4                     i1l403:
 16336                           
 16337                           ; BSR set to: 15
 16338                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16339  0025D4  A230               	btfss	i1CANsendMessage@flags,1,c
 16340  0025D6  D003               	goto	i1l404
 16341                           
 16342                           ; BSR set to: 15
 16343                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16344  0025D8  010F               	movlb	15	; () banked
 16345  0025DA  8320               	bsf	32,1,b	;volatile
 16346  0025DC  D002               	goto	i1l6494
 16347  0025DE                     i1l404:
 16348                           
 16349                           ; BSR set to: 15
 16350                           ;inc\CANlib.h: 506: else
 16351                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16352  0025DE  010F               	movlb	15	; () banked
 16353  0025E0  9320               	bcf	32,1,b	;volatile
 16354  0025E2                     i1l6494:
 16355                           
 16356                           ; BSR set to: 15
 16357                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16358  0025E2  C02D  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16359  0025E6  C02E  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16360  0025EA  50DF               	movf	indf2,w,c
 16361  0025EC  010F               	movlb	15	; () banked
 16362  0025EE  6F26               	movwf	38,b	;volatile
 16363                           
 16364                           ; BSR set to: 15
 16365                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16366  0025F0  EE20 F001          	lfsr	2,1
 16367  0025F4  502D               	movf	i1CANsendMessage@data,w,c
 16368  0025F6  26D9               	addwf	fsr2l,f,c
 16369  0025F8  502E               	movf	i1CANsendMessage@data+1,w,c
 16370  0025FA  22DA               	addwfc	fsr2h,f,c
 16371  0025FC  50DF               	movf	indf2,w,c
 16372  0025FE  010F               	movlb	15	; () banked
 16373  002600  6F27               	movwf	39,b	;volatile
 16374                           
 16375                           ; BSR set to: 15
 16376                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16377  002602  EE20 F002          	lfsr	2,2
 16378  002606  502D               	movf	i1CANsendMessage@data,w,c
 16379  002608  26D9               	addwf	fsr2l,f,c
 16380  00260A  502E               	movf	i1CANsendMessage@data+1,w,c
 16381  00260C  22DA               	addwfc	fsr2h,f,c
 16382  00260E  50DF               	movf	indf2,w,c
 16383  002610  010F               	movlb	15	; () banked
 16384  002612  6F28               	movwf	40,b	;volatile
 16385                           
 16386                           ; BSR set to: 15
 16387                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16388  002614  EE20 F003          	lfsr	2,3
 16389  002618  502D               	movf	i1CANsendMessage@data,w,c
 16390  00261A  26D9               	addwf	fsr2l,f,c
 16391  00261C  502E               	movf	i1CANsendMessage@data+1,w,c
 16392  00261E  22DA               	addwfc	fsr2h,f,c
 16393  002620  50DF               	movf	indf2,w,c
 16394  002622  010F               	movlb	15	; () banked
 16395  002624  6F29               	movwf	41,b	;volatile
 16396                           
 16397                           ; BSR set to: 15
 16398                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16399  002626  EE20 F004          	lfsr	2,4
 16400  00262A  502D               	movf	i1CANsendMessage@data,w,c
 16401  00262C  26D9               	addwf	fsr2l,f,c
 16402  00262E  502E               	movf	i1CANsendMessage@data+1,w,c
 16403  002630  22DA               	addwfc	fsr2h,f,c
 16404  002632  50DF               	movf	indf2,w,c
 16405  002634  010F               	movlb	15	; () banked
 16406  002636  6F2A               	movwf	42,b	;volatile
 16407                           
 16408                           ; BSR set to: 15
 16409                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16410  002638  EE20 F005          	lfsr	2,5
 16411  00263C  502D               	movf	i1CANsendMessage@data,w,c
 16412  00263E  26D9               	addwf	fsr2l,f,c
 16413  002640  502E               	movf	i1CANsendMessage@data+1,w,c
 16414  002642  22DA               	addwfc	fsr2h,f,c
 16415  002644  50DF               	movf	indf2,w,c
 16416  002646  010F               	movlb	15	; () banked
 16417  002648  6F2B               	movwf	43,b	;volatile
 16418                           
 16419                           ; BSR set to: 15
 16420                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16421  00264A  EE20 F006          	lfsr	2,6
 16422  00264E  502D               	movf	i1CANsendMessage@data,w,c
 16423  002650  26D9               	addwf	fsr2l,f,c
 16424  002652  502E               	movf	i1CANsendMessage@data+1,w,c
 16425  002654  22DA               	addwfc	fsr2h,f,c
 16426  002656  50DF               	movf	indf2,w,c
 16427  002658  010F               	movlb	15	; () banked
 16428  00265A  6F2C               	movwf	44,b	;volatile
 16429                           
 16430                           ; BSR set to: 15
 16431                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16432  00265C  EE20 F007          	lfsr	2,7
 16433  002660  502D               	movf	i1CANsendMessage@data,w,c
 16434  002662  26D9               	addwf	fsr2l,f,c
 16435  002664  502E               	movf	i1CANsendMessage@data+1,w,c
 16436  002666  22DA               	addwfc	fsr2h,f,c
 16437  002668  50DF               	movf	indf2,w,c
 16438  00266A  010F               	movlb	15	; () banked
 16439  00266C  6F2D               	movwf	45,b	;volatile
 16440                           
 16441                           ; BSR set to: 15
 16442                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16443  00266E  010F               	movlb	15	; () banked
 16444  002670  8720               	bsf	32,3,b	;volatile
 16445                           
 16446                           ; BSR set to: 15
 16447                           ;inc\CANlib.h: 520: return;
 16448  002672  0012               	return	
 16449  002674                     __end_ofi1_CANsendMessage:
 16450                           	opt stack 0
 16451                           pclatu	equ	0xFFB
 16452                           pclath	equ	0xFFA
 16453                           tblptru	equ	0xFF8
 16454                           tblptrh	equ	0xFF7
 16455                           tblptrl	equ	0xFF6
 16456                           tablat	equ	0xFF5
 16457                           prodh	equ	0xFF4
 16458                           prodl	equ	0xFF3
 16459                           intcon	equ	0xFF2
 16460                           intcon2	equ	0xFF1
 16461                           postinc0	equ	0xFEE
 16462                           fsr0h	equ	0xFEA
 16463                           fsr0l	equ	0xFE9
 16464                           wreg	equ	0xFE8
 16465                           indf1	equ	0xFE7
 16466                           postdec1	equ	0xFE5
 16467                           fsr1h	equ	0xFE2
 16468                           fsr1l	equ	0xFE1
 16469                           bsr	equ	0xFE0
 16470                           indf2	equ	0xFDF
 16471                           postinc2	equ	0xFDE
 16472                           postdec2	equ	0xFDD
 16473                           plusw2	equ	0xFDB
 16474                           fsr2h	equ	0xFDA
 16475                           fsr2l	equ	0xFD9
 16476                           status	equ	0xFD8
 16477                           
 16478 ;; *************** function i1_CANisTxReady *****************
 16479 ;; Defined at:
 16480 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;		None
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      unsigned char 
 16487 ;; Registers used:
 16488 ;;		wreg, status,2
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;Total ram usage:        1 bytes
 16499 ;; Hardware stack levels used:    1
 16500 ;; Hardware stack levels required when called:    2
 16501 ;; This function calls:
 16502 ;;		Nothing
 16503 ;; This function is called by:
 16504 ;;		_ISR_Bassa
 16505 ;; This function uses a non-reentrant model
 16506 ;;
 16507                           
 16508                           	psect	text37
 16509  0066A6                     __ptext37:
 16510                           	opt stack 0
 16511  0066A6                     i1_CANisTxReady:
 16512                           	opt stack 21
 16513                           
 16514                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16515                           
 16516                           ; BSR set to: 15
 16517                           ;incstack = 0
 16518  0066A6  0E01               	movlw	1
 16519  0066A8  6E29               	movwf	i1_CANisTxReady$2845,c
 16520  0066AA  010F               	movlb	15	; () banked
 16521  0066AC  A740               	btfss	64,3,b	;volatile
 16522  0066AE  D008               	goto	i1l556
 16523                           
 16524                           ; BSR set to: 15
 16525  0066B0  010F               	movlb	15	; () banked
 16526  0066B2  A730               	btfss	48,3,b	;volatile
 16527  0066B4  D005               	goto	i1l556
 16528                           
 16529                           ; BSR set to: 15
 16530  0066B6  010F               	movlb	15	; () banked
 16531  0066B8  A720               	btfss	32,3,b	;volatile
 16532  0066BA  D002               	goto	i1l556
 16533                           
 16534                           ; BSR set to: 15
 16535  0066BC  0E00               	movlw	0
 16536  0066BE  6E29               	movwf	i1_CANisTxReady$2845,c
 16537  0066C0                     i1l556:
 16538                           
 16539                           ; BSR set to: 15
 16540  0066C0  5029               	movf	i1_CANisTxReady$2845,w,c
 16541  0066C2  0012               	return	
 16542  0066C4                     __end_ofi1_CANisTxReady:
 16543                           	opt stack 0
 16544                           pclatu	equ	0xFFB
 16545                           pclath	equ	0xFFA
 16546                           tblptru	equ	0xFF8
 16547                           tblptrh	equ	0xFF7
 16548                           tblptrl	equ	0xFF6
 16549                           tablat	equ	0xFF5
 16550                           prodh	equ	0xFF4
 16551                           prodl	equ	0xFF3
 16552                           intcon	equ	0xFF2
 16553                           intcon2	equ	0xFF1
 16554                           postinc0	equ	0xFEE
 16555                           fsr0h	equ	0xFEA
 16556                           fsr0l	equ	0xFE9
 16557                           wreg	equ	0xFE8
 16558                           indf1	equ	0xFE7
 16559                           postdec1	equ	0xFE5
 16560                           fsr1h	equ	0xFE2
 16561                           fsr1l	equ	0xFE1
 16562                           bsr	equ	0xFE0
 16563                           indf2	equ	0xFDF
 16564                           postinc2	equ	0xFDE
 16565                           postdec2	equ	0xFDD
 16566                           plusw2	equ	0xFDB
 16567                           fsr2h	equ	0xFDA
 16568                           fsr2l	equ	0xFD9
 16569                           status	equ	0xFD8
 16570                           
 16571 ;; *************** function _CANreceiveMessage *****************
 16572 ;; Defined at:
 16573 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;  msg             2    0[COMRAM] PTR struct .
 16576 ;;		 -> msg(15), 
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;  tamp            1   11[COMRAM] unsigned char 
 16579 ;;  error           1   10[COMRAM] unsigned char 
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      unsigned char 
 16582 ;; Registers used:
 16583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;Total ram usage:       12 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:    2
 16596 ;; This function calls:
 16597 ;;		Nothing
 16598 ;; This function is called by:
 16599 ;;		_ISR_Bassa
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           	psect	text38
 16604  002BFE                     __ptext38:
 16605                           	opt stack 0
 16606  002BFE                     _CANreceiveMessage:
 16607                           	opt stack 21
 16608                           
 16609                           ;inc\CANlib.h: 530: BYTE tamp;
 16610                           ;inc\CANlib.h: 531: BYTE error = 0;
 16611                           
 16612                           ; BSR set to: 15
 16613                           ;incstack = 0
 16614  002BFE  0E00               	movlw	0
 16615  002C00  6E33               	movwf	CANreceiveMessage@error,c
 16616                           
 16617                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 16618  002C02  BE74               	btfsc	3956,7,c	;volatile
 16619                           
 16620                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 16621  002C04  8033               	bsf	CANreceiveMessage@error,0,c
 16622                           
 16623                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 16624  002C06  BC74               	btfsc	3956,6,c	;volatile
 16625                           
 16626                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 16627  002C08  8233               	bsf	CANreceiveMessage@error,1,c
 16628                           
 16629                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 16630  002C0A  010F               	movlb	15	; () banked
 16631  002C0C  AF50               	btfss	80,7,b	;volatile
 16632  002C0E  D143               	goto	i1l410
 16633                           
 16634                           ; BSR set to: 15
 16635                           ;inc\CANlib.h: 541: {
 16636                           ;inc\CANlib.h: 542: msg->identifier = 0;
 16637  002C10  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16638  002C14  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16639  002C18  6ADE               	clrf	postinc2,c
 16640  002C1A  6ADE               	clrf	postinc2,c
 16641  002C1C  6ADE               	clrf	postinc2,c
 16642  002C1E  6ADD               	clrf	postdec2,c
 16643                           
 16644                           ; BSR set to: 15
 16645                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 16646  002C20  EE20 F004          	lfsr	2,4
 16647  002C24  5029               	movf	CANreceiveMessage@msg,w,c
 16648  002C26  26D9               	addwf	fsr2l,f,c
 16649  002C28  502A               	movf	CANreceiveMessage@msg+1,w,c
 16650  002C2A  22DA               	addwfc	fsr2h,f,c
 16651  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16652                           
 16653                           ; BSR set to: 15
 16654                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 16655  002C30  EE20 F005          	lfsr	2,5
 16656  002C34  5029               	movf	CANreceiveMessage@msg,w,c
 16657  002C36  26D9               	addwf	fsr2l,f,c
 16658  002C38  502A               	movf	CANreceiveMessage@msg+1,w,c
 16659  002C3A  22DA               	addwfc	fsr2h,f,c
 16660  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16661                           
 16662                           ; BSR set to: 15
 16663                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 16664  002C40  EE20 F006          	lfsr	2,6
 16665  002C44  5029               	movf	CANreceiveMessage@msg,w,c
 16666  002C46  26D9               	addwf	fsr2l,f,c
 16667  002C48  502A               	movf	CANreceiveMessage@msg+1,w,c
 16668  002C4A  22DA               	addwfc	fsr2h,f,c
 16669  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16670                           
 16671                           ; BSR set to: 15
 16672                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 16673  002C50  EE20 F007          	lfsr	2,7
 16674  002C54  5029               	movf	CANreceiveMessage@msg,w,c
 16675  002C56  26D9               	addwf	fsr2l,f,c
 16676  002C58  502A               	movf	CANreceiveMessage@msg+1,w,c
 16677  002C5A  22DA               	addwfc	fsr2h,f,c
 16678  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16679                           
 16680                           ; BSR set to: 15
 16681                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 16682  002C60  EE20 F008          	lfsr	2,8
 16683  002C64  5029               	movf	CANreceiveMessage@msg,w,c
 16684  002C66  26D9               	addwf	fsr2l,f,c
 16685  002C68  502A               	movf	CANreceiveMessage@msg+1,w,c
 16686  002C6A  22DA               	addwfc	fsr2h,f,c
 16687  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16688                           
 16689                           ; BSR set to: 15
 16690                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 16691  002C70  EE20 F009          	lfsr	2,9
 16692  002C74  5029               	movf	CANreceiveMessage@msg,w,c
 16693  002C76  26D9               	addwf	fsr2l,f,c
 16694  002C78  502A               	movf	CANreceiveMessage@msg+1,w,c
 16695  002C7A  22DA               	addwfc	fsr2h,f,c
 16696  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16697                           
 16698                           ; BSR set to: 15
 16699                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 16700  002C80  EE20 F00A          	lfsr	2,10
 16701  002C84  5029               	movf	CANreceiveMessage@msg,w,c
 16702  002C86  26D9               	addwf	fsr2l,f,c
 16703  002C88  502A               	movf	CANreceiveMessage@msg+1,w,c
 16704  002C8A  22DA               	addwfc	fsr2h,f,c
 16705  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16706                           
 16707                           ; BSR set to: 15
 16708                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 16709  002C90  EE20 F00B          	lfsr	2,11
 16710  002C94  5029               	movf	CANreceiveMessage@msg,w,c
 16711  002C96  26D9               	addwf	fsr2l,f,c
 16712  002C98  502A               	movf	CANreceiveMessage@msg+1,w,c
 16713  002C9A  22DA               	addwfc	fsr2h,f,c
 16714  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16715                           
 16716                           ; BSR set to: 15
 16717                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 16718  002CA0  EE20 F00E          	lfsr	2,14
 16719  002CA4  5029               	movf	CANreceiveMessage@msg,w,c
 16720  002CA6  26D9               	addwf	fsr2l,f,c
 16721  002CA8  502A               	movf	CANreceiveMessage@msg+1,w,c
 16722  002CAA  22DA               	addwfc	fsr2h,f,c
 16723  002CAC  010F               	movlb	15	; () banked
 16724  002CAE  AD55               	btfss	85,6,b	;volatile
 16725  002CB0  D002               	goto	i1u732_20
 16726  002CB2  0E01               	movlw	1
 16727  002CB4  D001               	goto	i1u732_26
 16728  002CB6                     i1u732_20:
 16729  002CB6  0E00               	movlw	0
 16730  002CB8                     i1u732_26:
 16731  002CB8  6EDF               	movwf	indf2,c
 16732                           
 16733                           ; BSR set to: 15
 16734                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 16735  002CBA  EE20 F00D          	lfsr	2,13
 16736  002CBE  5029               	movf	CANreceiveMessage@msg,w,c
 16737  002CC0  26D9               	addwf	fsr2l,f,c
 16738  002CC2  502A               	movf	CANreceiveMessage@msg+1,w,c
 16739  002CC4  22DA               	addwfc	fsr2h,f,c
 16740  002CC6  010F               	movlb	15	; () banked
 16741  002CC8  5155               	movf	85,w,b	;volatile
 16742  002CCA  0B0F               	andlw	15
 16743  002CCC  6EDF               	movwf	indf2,c
 16744                           
 16745                           ; BSR set to: 15
 16746                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 16747  002CCE  EE20 F00C          	lfsr	2,12
 16748  002CD2  5029               	movf	CANreceiveMessage@msg,w,c
 16749  002CD4  26D9               	addwf	fsr2l,f,c
 16750  002CD6  502A               	movf	CANreceiveMessage@msg+1,w,c
 16751  002CD8  22DA               	addwfc	fsr2h,f,c
 16752  002CDA  010F               	movlb	15	; () banked
 16753  002CDC  A752               	btfss	82,3,b	;volatile
 16754  002CDE  D002               	goto	i1u733_20
 16755  002CE0  0E01               	movlw	1
 16756  002CE2  D001               	goto	i1u733_26
 16757  002CE4                     i1u733_20:
 16758  002CE4  0E00               	movlw	0
 16759  002CE6                     i1u733_26:
 16760  002CE6  6EDF               	movwf	indf2,c
 16761                           
 16762                           ; BSR set to: 15
 16763                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 16764  002CE8  010F               	movlb	15	; () banked
 16765  002CEA  B752               	btfsc	82,3,b	;volatile
 16766  002CEC  D044               	goto	i1l5898
 16767                           
 16768                           ; BSR set to: 15
 16769                           ;inc\CANlib.h: 559: {
 16770                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16771  002CEE  CF51 F02B          	movff	3921,??_CANreceiveMessage	;volatile
 16772  002CF2  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16773  002CF4  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16774  002CF6  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16775  002CF8  0E03               	movlw	3
 16776  002CFA                     i1u735_25:
 16777  002CFA  90D8               	bcf	status,0,c
 16778  002CFC  362B               	rlcf	??_CANreceiveMessage,f,c
 16779  002CFE  362C               	rlcf	??_CANreceiveMessage+1,f,c
 16780  002D00  362D               	rlcf	??_CANreceiveMessage+2,f,c
 16781  002D02  362E               	rlcf	??_CANreceiveMessage+3,f,c
 16782  002D04  2EE8               	decfsz	wreg,f,c
 16783  002D06  D7F9               	goto	i1u735_25
 16784  002D08  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16785  002D0C  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16786  002D10  C02B  FFDE         	movff	??_CANreceiveMessage,postinc2
 16787  002D14  C02C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16788  002D18  C02D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16789  002D1C  C02E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16790                           
 16791                           ; BSR set to: 15
 16792                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16793  002D20  010F               	movlb	15	; () banked
 16794  002D22  3952               	swapf	82,w,b	;volatile
 16795  002D24  42E8               	rrncf	wreg,f,c
 16796  002D26  0B07               	andlw	7
 16797  002D28  0B07               	andlw	7
 16798  002D2A  6E34               	movwf	CANreceiveMessage@tamp,c
 16799                           
 16800                           ; BSR set to: 15
 16801                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 16802  002D2C  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16803  002D30  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16804  002D34  CFDE F02B          	movff	postinc2,??_CANreceiveMessage
 16805  002D38  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+1
 16806  002D3C  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+2
 16807  002D40  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+3
 16808  002D44  5034               	movf	CANreceiveMessage@tamp,w,c
 16809  002D46  242B               	addwf	??_CANreceiveMessage,w,c
 16810  002D48  6E2F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16811  002D4A  0E00               	movlw	0
 16812  002D4C  202C               	addwfc	??_CANreceiveMessage+1,w,c
 16813  002D4E  6E30               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16814  002D50  0E00               	movlw	0
 16815  002D52  202D               	addwfc	??_CANreceiveMessage+2,w,c
 16816  002D54  6E31               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16817  002D56  0E00               	movlw	0
 16818  002D58  202E               	addwfc	??_CANreceiveMessage+3,w,c
 16819  002D5A  6E32               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16820  002D5C  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16821  002D60  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16822  002D64  C02F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16823  002D68  C030  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16824  002D6C  C031  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16825  002D70  C032  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16826                           
 16827                           ;inc\CANlib.h: 563: }
 16828  002D74  D08D               	goto	i1l5924
 16829  002D76                     i1l5898:
 16830                           
 16831                           ; BSR set to: 15
 16832                           ;inc\CANlib.h: 564: else
 16833                           ;inc\CANlib.h: 565: {
 16834                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 16835  002D76  CF54 F02B          	movff	3924,??_CANreceiveMessage	;volatile
 16836  002D7A  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16837  002D7C  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16838  002D7E  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16839  002D80  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16840  002D84  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16841  002D88  C02B  FFDE         	movff	??_CANreceiveMessage,postinc2
 16842  002D8C  C02C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16843  002D90  C02D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16844  002D94  C02E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16845                           
 16846                           ; BSR set to: 15
 16847                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16848  002D98  CF53 F02B          	movff	3923,??_CANreceiveMessage	;volatile
 16849  002D9C  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16850  002D9E  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16851  002DA0  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16852  002DA2  C02D  F02E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16853  002DA6  C02C  F02D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16854  002DAA  C02B  F02C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16855  002DAE  6A2B               	clrf	??_CANreceiveMessage,c
 16856  002DB0  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16857  002DB4  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16858  002DB8  502B               	movf	??_CANreceiveMessage,w,c
 16859  002DBA  26DE               	addwf	postinc2,f,c
 16860  002DBC  502C               	movf	??_CANreceiveMessage+1,w,c
 16861  002DBE  22DE               	addwfc	postinc2,f,c
 16862  002DC0  502D               	movf	??_CANreceiveMessage+2,w,c
 16863  002DC2  22DE               	addwfc	postinc2,f,c
 16864  002DC4  502E               	movf	??_CANreceiveMessage+3,w,c
 16865  002DC6  22DE               	addwfc	postinc2,f,c
 16866                           
 16867                           ; BSR set to: 15
 16868                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 16869  002DC8  010F               	movlb	15	; () banked
 16870  002DCA  A152               	btfss	82,0,b	;volatile
 16871  002DCC  D00C               	goto	i1l5906
 16872                           
 16873                           ; BSR set to: 15
 16874                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 16875  002DCE  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16876  002DD2  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16877  002DD6  0E00               	movlw	0
 16878  002DD8  12DE               	iorwf	postinc2,f,c
 16879  002DDA  0E00               	movlw	0
 16880  002DDC  12DE               	iorwf	postinc2,f,c
 16881  002DDE  0E01               	movlw	1
 16882  002DE0  12DE               	iorwf	postinc2,f,c
 16883  002DE2  0E00               	movlw	0
 16884  002DE4  12DE               	iorwf	postinc2,f,c
 16885  002DE6                     i1l5906:
 16886                           
 16887                           ; BSR set to: 15
 16888                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 16889  002DE6  010F               	movlb	15	; () banked
 16890  002DE8  A352               	btfss	82,1,b	;volatile
 16891  002DEA  D00C               	goto	i1l5910
 16892                           
 16893                           ; BSR set to: 15
 16894                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 16895  002DEC  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16896  002DF0  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16897  002DF4  0E00               	movlw	0
 16898  002DF6  12DE               	iorwf	postinc2,f,c
 16899  002DF8  0E00               	movlw	0
 16900  002DFA  12DE               	iorwf	postinc2,f,c
 16901  002DFC  0E02               	movlw	2
 16902  002DFE  12DE               	iorwf	postinc2,f,c
 16903  002E00  0E00               	movlw	0
 16904  002E02  12DE               	iorwf	postinc2,f,c
 16905  002E04                     i1l5910:
 16906                           
 16907                           ; BSR set to: 15
 16908                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 16909  002E04  010F               	movlb	15	; () banked
 16910  002E06  AB52               	btfss	82,5,b	;volatile
 16911  002E08  D00C               	goto	i1l5914
 16912                           
 16913                           ; BSR set to: 15
 16914                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 16915  002E0A  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16916  002E0E  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16917  002E12  0E00               	movlw	0
 16918  002E14  12DE               	iorwf	postinc2,f,c
 16919  002E16  0E00               	movlw	0
 16920  002E18  12DE               	iorwf	postinc2,f,c
 16921  002E1A  0E04               	movlw	4
 16922  002E1C  12DE               	iorwf	postinc2,f,c
 16923  002E1E  0E00               	movlw	0
 16924  002E20  12DE               	iorwf	postinc2,f,c
 16925  002E22                     i1l5914:
 16926                           
 16927                           ; BSR set to: 15
 16928                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 16929  002E22  010F               	movlb	15	; () banked
 16930  002E24  AD52               	btfss	82,6,b	;volatile
 16931  002E26  D00C               	goto	i1l5918
 16932                           
 16933                           ; BSR set to: 15
 16934                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 16935  002E28  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16936  002E2C  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16937  002E30  0E00               	movlw	0
 16938  002E32  12DE               	iorwf	postinc2,f,c
 16939  002E34  0E00               	movlw	0
 16940  002E36  12DE               	iorwf	postinc2,f,c
 16941  002E38  0E08               	movlw	8
 16942  002E3A  12DE               	iorwf	postinc2,f,c
 16943  002E3C  0E00               	movlw	0
 16944  002E3E  12DE               	iorwf	postinc2,f,c
 16945  002E40                     i1l5918:
 16946                           
 16947                           ; BSR set to: 15
 16948                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 16949  002E40  010F               	movlb	15	; () banked
 16950  002E42  AF52               	btfss	82,7,b	;volatile
 16951  002E44  D00C               	goto	i1l5922
 16952                           
 16953                           ; BSR set to: 15
 16954                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 16955  002E46  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16956  002E4A  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16957  002E4E  0E00               	movlw	0
 16958  002E50  12DE               	iorwf	postinc2,f,c
 16959  002E52  0E00               	movlw	0
 16960  002E54  12DE               	iorwf	postinc2,f,c
 16961  002E56  0E10               	movlw	16
 16962  002E58  12DE               	iorwf	postinc2,f,c
 16963  002E5A  0E00               	movlw	0
 16964  002E5C  12DE               	iorwf	postinc2,f,c
 16965  002E5E                     i1l5922:
 16966                           
 16967                           ; BSR set to: 15
 16968                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 16969  002E5E  CF51 F02B          	movff	3921,??_CANreceiveMessage	;volatile
 16970  002E62  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16971  002E64  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16972  002E66  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16973  002E68  0E15               	movlw	21
 16974  002E6A                     i1u741_25:
 16975  002E6A  90D8               	bcf	status,0,c
 16976  002E6C  362B               	rlcf	??_CANreceiveMessage,f,c
 16977  002E6E  362C               	rlcf	??_CANreceiveMessage+1,f,c
 16978  002E70  362D               	rlcf	??_CANreceiveMessage+2,f,c
 16979  002E72  362E               	rlcf	??_CANreceiveMessage+3,f,c
 16980  002E74  2EE8               	decfsz	wreg,f,c
 16981  002E76  D7F9               	goto	i1u741_25
 16982  002E78  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16983  002E7C  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16984  002E80  502B               	movf	??_CANreceiveMessage,w,c
 16985  002E82  12DE               	iorwf	postinc2,f,c
 16986  002E84  502C               	movf	??_CANreceiveMessage+1,w,c
 16987  002E86  12DE               	iorwf	postinc2,f,c
 16988  002E88  502D               	movf	??_CANreceiveMessage+2,w,c
 16989  002E8A  12DE               	iorwf	postinc2,f,c
 16990  002E8C  502E               	movf	??_CANreceiveMessage+3,w,c
 16991  002E8E  12DE               	iorwf	postinc2,f,c
 16992  002E90                     i1l5924:
 16993                           
 16994                           ; BSR set to: 15
 16995                           ;inc\CANlib.h: 581: }
 16996                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 16997  002E90  010F               	movlb	15	; () banked
 16998  002E92  9F50               	bcf	80,7,b	;volatile
 16999                           
 17000                           ; BSR set to: 15
 17001                           ;inc\CANlib.h: 584: return (error);
 17002                           ;	Return value of _CANreceiveMessage is never used
 17003  002E94  0012               	return	
 17004  002E96                     i1l410:
 17005                           
 17006                           ; BSR set to: 15
 17007                           ;inc\CANlib.h: 585: }
 17008                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 17009  002E96  AE60               	btfss	3936,7,c	;volatile
 17010  002E98  0012               	return	
 17011                           
 17012                           ; BSR set to: 15
 17013                           ;inc\CANlib.h: 588: {
 17014                           ;inc\CANlib.h: 589: msg->identifier = 0;
 17015  002E9A  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17016  002E9E  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17017  002EA2  6ADE               	clrf	postinc2,c
 17018  002EA4  6ADE               	clrf	postinc2,c
 17019  002EA6  6ADE               	clrf	postinc2,c
 17020  002EA8  6ADD               	clrf	postdec2,c
 17021                           
 17022                           ; BSR set to: 15
 17023                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 17024  002EAA  EE20 F004          	lfsr	2,4
 17025  002EAE  5029               	movf	CANreceiveMessage@msg,w,c
 17026  002EB0  26D9               	addwf	fsr2l,f,c
 17027  002EB2  502A               	movf	CANreceiveMessage@msg+1,w,c
 17028  002EB4  22DA               	addwfc	fsr2h,f,c
 17029  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17030                           
 17031                           ; BSR set to: 15
 17032                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 17033  002EBA  EE20 F005          	lfsr	2,5
 17034  002EBE  5029               	movf	CANreceiveMessage@msg,w,c
 17035  002EC0  26D9               	addwf	fsr2l,f,c
 17036  002EC2  502A               	movf	CANreceiveMessage@msg+1,w,c
 17037  002EC4  22DA               	addwfc	fsr2h,f,c
 17038  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17039                           
 17040                           ; BSR set to: 15
 17041                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 17042  002ECA  EE20 F006          	lfsr	2,6
 17043  002ECE  5029               	movf	CANreceiveMessage@msg,w,c
 17044  002ED0  26D9               	addwf	fsr2l,f,c
 17045  002ED2  502A               	movf	CANreceiveMessage@msg+1,w,c
 17046  002ED4  22DA               	addwfc	fsr2h,f,c
 17047  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17048                           
 17049                           ; BSR set to: 15
 17050                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 17051  002EDA  EE20 F007          	lfsr	2,7
 17052  002EDE  5029               	movf	CANreceiveMessage@msg,w,c
 17053  002EE0  26D9               	addwf	fsr2l,f,c
 17054  002EE2  502A               	movf	CANreceiveMessage@msg+1,w,c
 17055  002EE4  22DA               	addwfc	fsr2h,f,c
 17056  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17057                           
 17058                           ; BSR set to: 15
 17059                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 17060  002EEA  EE20 F008          	lfsr	2,8
 17061  002EEE  5029               	movf	CANreceiveMessage@msg,w,c
 17062  002EF0  26D9               	addwf	fsr2l,f,c
 17063  002EF2  502A               	movf	CANreceiveMessage@msg+1,w,c
 17064  002EF4  22DA               	addwfc	fsr2h,f,c
 17065  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17066                           
 17067                           ; BSR set to: 15
 17068                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 17069  002EFA  EE20 F009          	lfsr	2,9
 17070  002EFE  5029               	movf	CANreceiveMessage@msg,w,c
 17071  002F00  26D9               	addwf	fsr2l,f,c
 17072  002F02  502A               	movf	CANreceiveMessage@msg+1,w,c
 17073  002F04  22DA               	addwfc	fsr2h,f,c
 17074  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17075                           
 17076                           ; BSR set to: 15
 17077                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 17078  002F0A  EE20 F00A          	lfsr	2,10
 17079  002F0E  5029               	movf	CANreceiveMessage@msg,w,c
 17080  002F10  26D9               	addwf	fsr2l,f,c
 17081  002F12  502A               	movf	CANreceiveMessage@msg+1,w,c
 17082  002F14  22DA               	addwfc	fsr2h,f,c
 17083  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17084                           
 17085                           ; BSR set to: 15
 17086                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 17087  002F1A  EE20 F00B          	lfsr	2,11
 17088  002F1E  5029               	movf	CANreceiveMessage@msg,w,c
 17089  002F20  26D9               	addwf	fsr2l,f,c
 17090  002F22  502A               	movf	CANreceiveMessage@msg+1,w,c
 17091  002F24  22DA               	addwfc	fsr2h,f,c
 17092  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17093                           
 17094                           ; BSR set to: 15
 17095                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 17096  002F2A  EE20 F00E          	lfsr	2,14
 17097  002F2E  5029               	movf	CANreceiveMessage@msg,w,c
 17098  002F30  26D9               	addwf	fsr2l,f,c
 17099  002F32  502A               	movf	CANreceiveMessage@msg+1,w,c
 17100  002F34  22DA               	addwfc	fsr2h,f,c
 17101  002F36  AC65               	btfss	3941,6,c	;volatile
 17102  002F38  D002               	goto	i1u743_20
 17103  002F3A  0E01               	movlw	1
 17104  002F3C  D001               	goto	i1u743_26
 17105  002F3E                     i1u743_20:
 17106  002F3E  0E00               	movlw	0
 17107  002F40                     i1u743_26:
 17108  002F40  6EDF               	movwf	indf2,c
 17109                           
 17110                           ; BSR set to: 15
 17111                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 17112  002F42  EE20 F00D          	lfsr	2,13
 17113  002F46  5029               	movf	CANreceiveMessage@msg,w,c
 17114  002F48  26D9               	addwf	fsr2l,f,c
 17115  002F4A  502A               	movf	CANreceiveMessage@msg+1,w,c
 17116  002F4C  22DA               	addwfc	fsr2h,f,c
 17117  002F4E  5065               	movf	3941,w,c	;volatile
 17118  002F50  0B0F               	andlw	15
 17119  002F52  6EDF               	movwf	indf2,c
 17120                           
 17121                           ; BSR set to: 15
 17122                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 17123  002F54  EE20 F00C          	lfsr	2,12
 17124  002F58  5029               	movf	CANreceiveMessage@msg,w,c
 17125  002F5A  26D9               	addwf	fsr2l,f,c
 17126  002F5C  502A               	movf	CANreceiveMessage@msg+1,w,c
 17127  002F5E  22DA               	addwfc	fsr2h,f,c
 17128  002F60  A662               	btfss	3938,3,c	;volatile
 17129  002F62  D002               	goto	i1u744_20
 17130  002F64  0E01               	movlw	1
 17131  002F66  D001               	goto	i1u744_26
 17132  002F68                     i1u744_20:
 17133  002F68  0E00               	movlw	0
 17134  002F6A                     i1u744_26:
 17135  002F6A  6EDF               	movwf	indf2,c
 17136                           
 17137                           ; BSR set to: 15
 17138                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 17139  002F6C  B662               	btfsc	3938,3,c	;volatile
 17140  002F6E  D043               	goto	i1l5960
 17141                           
 17142                           ; BSR set to: 15
 17143                           ;inc\CANlib.h: 606: {
 17144                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17145  002F70  CF61 F02B          	movff	3937,??_CANreceiveMessage	;volatile
 17146  002F74  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17147  002F76  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17148  002F78  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17149  002F7A  0E03               	movlw	3
 17150  002F7C                     i1u746_25:
 17151  002F7C  90D8               	bcf	status,0,c
 17152  002F7E  362B               	rlcf	??_CANreceiveMessage,f,c
 17153  002F80  362C               	rlcf	??_CANreceiveMessage+1,f,c
 17154  002F82  362D               	rlcf	??_CANreceiveMessage+2,f,c
 17155  002F84  362E               	rlcf	??_CANreceiveMessage+3,f,c
 17156  002F86  2EE8               	decfsz	wreg,f,c
 17157  002F88  D7F9               	goto	i1u746_25
 17158  002F8A  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17159  002F8E  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17160  002F92  C02B  FFDE         	movff	??_CANreceiveMessage,postinc2
 17161  002F96  C02C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17162  002F9A  C02D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17163  002F9E  C02E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17164                           
 17165                           ; BSR set to: 15
 17166                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17167  002FA2  3862               	swapf	3938,w,c	;volatile
 17168  002FA4  42E8               	rrncf	wreg,f,c
 17169  002FA6  0B07               	andlw	7
 17170  002FA8  0B07               	andlw	7
 17171  002FAA  6E34               	movwf	CANreceiveMessage@tamp,c
 17172                           
 17173                           ; BSR set to: 15
 17174                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 17175  002FAC  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17176  002FB0  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17177  002FB4  CFDE F02B          	movff	postinc2,??_CANreceiveMessage
 17178  002FB8  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+1
 17179  002FBC  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+2
 17180  002FC0  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+3
 17181  002FC4  5034               	movf	CANreceiveMessage@tamp,w,c
 17182  002FC6  242B               	addwf	??_CANreceiveMessage,w,c
 17183  002FC8  6E2F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17184  002FCA  0E00               	movlw	0
 17185  002FCC  202C               	addwfc	??_CANreceiveMessage+1,w,c
 17186  002FCE  6E30               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17187  002FD0  0E00               	movlw	0
 17188  002FD2  202D               	addwfc	??_CANreceiveMessage+2,w,c
 17189  002FD4  6E31               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17190  002FD6  0E00               	movlw	0
 17191  002FD8  202E               	addwfc	??_CANreceiveMessage+3,w,c
 17192  002FDA  6E32               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17193  002FDC  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17194  002FE0  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17195  002FE4  C02F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17196  002FE8  C030  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17197  002FEC  C031  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17198  002FF0  C032  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17199                           
 17200                           ;inc\CANlib.h: 610: }
 17201  002FF4  D088               	goto	i1l5986
 17202  002FF6                     i1l5960:
 17203                           
 17204                           ; BSR set to: 15
 17205                           ;inc\CANlib.h: 611: else
 17206                           ;inc\CANlib.h: 612: {
 17207                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 17208  002FF6  CF64 F02B          	movff	3940,??_CANreceiveMessage	;volatile
 17209  002FFA  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17210  002FFC  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17211  002FFE  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17212  003000  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17213  003004  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17214  003008  C02B  FFDE         	movff	??_CANreceiveMessage,postinc2
 17215  00300C  C02C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17216  003010  C02D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17217  003014  C02E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17218                           
 17219                           ; BSR set to: 15
 17220                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17221  003018  CF63 F02B          	movff	3939,??_CANreceiveMessage	;volatile
 17222  00301C  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17223  00301E  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17224  003020  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17225  003022  C02D  F02E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17226  003026  C02C  F02D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17227  00302A  C02B  F02C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17228  00302E  6A2B               	clrf	??_CANreceiveMessage,c
 17229  003030  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17230  003034  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17231  003038  502B               	movf	??_CANreceiveMessage,w,c
 17232  00303A  26DE               	addwf	postinc2,f,c
 17233  00303C  502C               	movf	??_CANreceiveMessage+1,w,c
 17234  00303E  22DE               	addwfc	postinc2,f,c
 17235  003040  502D               	movf	??_CANreceiveMessage+2,w,c
 17236  003042  22DE               	addwfc	postinc2,f,c
 17237  003044  502E               	movf	??_CANreceiveMessage+3,w,c
 17238  003046  22DE               	addwfc	postinc2,f,c
 17239                           
 17240                           ; BSR set to: 15
 17241                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 17242  003048  A062               	btfss	3938,0,c	;volatile
 17243  00304A  D00C               	goto	i1l5968
 17244                           
 17245                           ; BSR set to: 15
 17246                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 17247  00304C  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17248  003050  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17249  003054  0E00               	movlw	0
 17250  003056  12DE               	iorwf	postinc2,f,c
 17251  003058  0E00               	movlw	0
 17252  00305A  12DE               	iorwf	postinc2,f,c
 17253  00305C  0E01               	movlw	1
 17254  00305E  12DE               	iorwf	postinc2,f,c
 17255  003060  0E00               	movlw	0
 17256  003062  12DE               	iorwf	postinc2,f,c
 17257  003064                     i1l5968:
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 17261  003064  A262               	btfss	3938,1,c	;volatile
 17262  003066  D00C               	goto	i1l5972
 17263                           
 17264                           ; BSR set to: 15
 17265                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 17266  003068  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17267  00306C  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17268  003070  0E00               	movlw	0
 17269  003072  12DE               	iorwf	postinc2,f,c
 17270  003074  0E00               	movlw	0
 17271  003076  12DE               	iorwf	postinc2,f,c
 17272  003078  0E02               	movlw	2
 17273  00307A  12DE               	iorwf	postinc2,f,c
 17274  00307C  0E00               	movlw	0
 17275  00307E  12DE               	iorwf	postinc2,f,c
 17276  003080                     i1l5972:
 17277                           
 17278                           ; BSR set to: 15
 17279                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 17280  003080  AA62               	btfss	3938,5,c	;volatile
 17281  003082  D00C               	goto	i1l5976
 17282                           
 17283                           ; BSR set to: 15
 17284                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 17285  003084  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17286  003088  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17287  00308C  0E00               	movlw	0
 17288  00308E  12DE               	iorwf	postinc2,f,c
 17289  003090  0E00               	movlw	0
 17290  003092  12DE               	iorwf	postinc2,f,c
 17291  003094  0E04               	movlw	4
 17292  003096  12DE               	iorwf	postinc2,f,c
 17293  003098  0E00               	movlw	0
 17294  00309A  12DE               	iorwf	postinc2,f,c
 17295  00309C                     i1l5976:
 17296                           
 17297                           ; BSR set to: 15
 17298                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 17299  00309C  AC62               	btfss	3938,6,c	;volatile
 17300  00309E  D00C               	goto	i1l5980
 17301                           
 17302                           ; BSR set to: 15
 17303                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 17304  0030A0  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17305  0030A4  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17306  0030A8  0E00               	movlw	0
 17307  0030AA  12DE               	iorwf	postinc2,f,c
 17308  0030AC  0E00               	movlw	0
 17309  0030AE  12DE               	iorwf	postinc2,f,c
 17310  0030B0  0E08               	movlw	8
 17311  0030B2  12DE               	iorwf	postinc2,f,c
 17312  0030B4  0E00               	movlw	0
 17313  0030B6  12DE               	iorwf	postinc2,f,c
 17314  0030B8                     i1l5980:
 17315                           
 17316                           ; BSR set to: 15
 17317                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 17318  0030B8  AE62               	btfss	3938,7,c	;volatile
 17319  0030BA  D00C               	goto	i1l5984
 17320                           
 17321                           ; BSR set to: 15
 17322                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 17323  0030BC  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17324  0030C0  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17325  0030C4  0E00               	movlw	0
 17326  0030C6  12DE               	iorwf	postinc2,f,c
 17327  0030C8  0E00               	movlw	0
 17328  0030CA  12DE               	iorwf	postinc2,f,c
 17329  0030CC  0E10               	movlw	16
 17330  0030CE  12DE               	iorwf	postinc2,f,c
 17331  0030D0  0E00               	movlw	0
 17332  0030D2  12DE               	iorwf	postinc2,f,c
 17333  0030D4                     i1l5984:
 17334                           
 17335                           ; BSR set to: 15
 17336                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17337  0030D4  CF61 F02B          	movff	3937,??_CANreceiveMessage	;volatile
 17338  0030D8  6A2C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17339  0030DA  6A2D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17340  0030DC  6A2E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17341  0030DE  0E15               	movlw	21
 17342  0030E0                     i1u752_25:
 17343  0030E0  90D8               	bcf	status,0,c
 17344  0030E2  362B               	rlcf	??_CANreceiveMessage,f,c
 17345  0030E4  362C               	rlcf	??_CANreceiveMessage+1,f,c
 17346  0030E6  362D               	rlcf	??_CANreceiveMessage+2,f,c
 17347  0030E8  362E               	rlcf	??_CANreceiveMessage+3,f,c
 17348  0030EA  2EE8               	decfsz	wreg,f,c
 17349  0030EC  D7F9               	goto	i1u752_25
 17350  0030EE  C029  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17351  0030F2  C02A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17352  0030F6  502B               	movf	??_CANreceiveMessage,w,c
 17353  0030F8  12DE               	iorwf	postinc2,f,c
 17354  0030FA  502C               	movf	??_CANreceiveMessage+1,w,c
 17355  0030FC  12DE               	iorwf	postinc2,f,c
 17356  0030FE  502D               	movf	??_CANreceiveMessage+2,w,c
 17357  003100  12DE               	iorwf	postinc2,f,c
 17358  003102  502E               	movf	??_CANreceiveMessage+3,w,c
 17359  003104  12DE               	iorwf	postinc2,f,c
 17360  003106                     i1l5986:
 17361                           
 17362                           ; BSR set to: 15
 17363                           ;inc\CANlib.h: 629: }
 17364                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 17365  003106  9E60               	bcf	3936,7,c	;volatile
 17366                           
 17367                           ; BSR set to: 15
 17368                           ;inc\CANlib.h: 632: return (error);
 17369                           ;	Return value of _CANreceiveMessage is never used
 17370  003108  0012               	return	
 17371  00310A                     __end_of_CANreceiveMessage:
 17372                           	opt stack 0
 17373                           pclatu	equ	0xFFB
 17374                           pclath	equ	0xFFA
 17375                           tblptru	equ	0xFF8
 17376                           tblptrh	equ	0xFF7
 17377                           tblptrl	equ	0xFF6
 17378                           tablat	equ	0xFF5
 17379                           prodh	equ	0xFF4
 17380                           prodl	equ	0xFF3
 17381                           intcon	equ	0xFF2
 17382                           intcon2	equ	0xFF1
 17383                           postinc0	equ	0xFEE
 17384                           fsr0h	equ	0xFEA
 17385                           fsr0l	equ	0xFE9
 17386                           wreg	equ	0xFE8
 17387                           indf1	equ	0xFE7
 17388                           postdec1	equ	0xFE5
 17389                           fsr1h	equ	0xFE2
 17390                           fsr1l	equ	0xFE1
 17391                           bsr	equ	0xFE0
 17392                           indf2	equ	0xFDF
 17393                           postinc2	equ	0xFDE
 17394                           postdec2	equ	0xFDD
 17395                           plusw2	equ	0xFDB
 17396                           fsr2h	equ	0xFDA
 17397                           fsr2l	equ	0xFD9
 17398                           status	equ	0xFD8
 17399                           
 17400 ;; *************** function _ISR_Alta *****************
 17401 ;; Defined at:
 17402 ;;		line 104 in file "parcheggio.c"
 17403 ;; Parameters:    Size  Location     Type
 17404 ;;		None
 17405 ;; Auto vars:     Size  Location     Type
 17406 ;;		None
 17407 ;; Return value:  Size  Location     Type
 17408 ;;		None               void
 17409 ;; Registers used:
 17410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17418 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17419 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17420 ;;Total ram usage:       16 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:    1
 17423 ;; This function calls:
 17424 ;;		___lwdiv
 17425 ;; This function is called by:
 17426 ;;		Interrupt level 2
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           	psect	intcode
 17431  000008                     __pintcode:
 17432                           	opt stack 0
 17433  000008                     _ISR_Alta:
 17434                           	opt stack 21
 17435                           
 17436                           ; BSR set to: 15
 17437                           ;incstack = 0
 17438  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17439  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 17440  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 17441  000012  EF88  F030         	goto	int_func
 17442                           pclatu	equ	0xFFB
 17443                           pclath	equ	0xFFA
 17444                           tblptru	equ	0xFF8
 17445                           tblptrh	equ	0xFF7
 17446                           tblptrl	equ	0xFF6
 17447                           tablat	equ	0xFF5
 17448                           prodh	equ	0xFF4
 17449                           prodl	equ	0xFF3
 17450                           intcon	equ	0xFF2
 17451                           intcon2	equ	0xFF1
 17452                           postinc0	equ	0xFEE
 17453                           fsr0h	equ	0xFEA
 17454                           fsr0l	equ	0xFE9
 17455                           wreg	equ	0xFE8
 17456                           indf1	equ	0xFE7
 17457                           postdec1	equ	0xFE5
 17458                           fsr1h	equ	0xFE2
 17459                           fsr1l	equ	0xFE1
 17460                           bsr	equ	0xFE0
 17461                           indf2	equ	0xFDF
 17462                           postinc2	equ	0xFDE
 17463                           postdec2	equ	0xFDD
 17464                           plusw2	equ	0xFDB
 17465                           fsr2h	equ	0xFDA
 17466                           fsr2l	equ	0xFD9
 17467                           status	equ	0xFD8
 17468                           
 17469                           	psect	intcode_body
 17470  006110                     __pintcode_body:
 17471                           	opt stack 21
 17472  006110                     int_func:
 17473                           	opt stack 21
 17474  006110  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 17475  006114  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 17476  006118  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 17477  00611C  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 17478  006120  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 17479  006124  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 17480  006128  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 17481  00612C  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 17482  006130  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 17483  006134  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 17484  006138  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 17485  00613C  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 17486                           
 17487                           ;parcheggio.c: 105: if (INTCON2bits.INTEDG0 == 1) {
 17488  006140  ACF1               	btfss	intcon2,6,c	;volatile
 17489  006142  D007               	goto	i2l698
 17490                           
 17491                           ;parcheggio.c: 106: INTCON2bits.INTEDG0 = 0;
 17492  006144  9CF1               	bcf	intcon2,6,c	;volatile
 17493                           
 17494                           ;parcheggio.c: 107: TMR3H = 0;
 17495  006146  0E00               	movlw	0
 17496  006148  6EB3               	movwf	4019,c	;volatile
 17497                           
 17498                           ;parcheggio.c: 108: TMR3L = 0;
 17499  00614A  0E00               	movlw	0
 17500  00614C  6EB2               	movwf	4018,c	;volatile
 17501                           
 17502                           ;parcheggio.c: 109: distance_error = 0;
 17503  00614E  9850               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17504                           
 17505                           ;parcheggio.c: 110: } else {
 17506  006150  D030               	goto	i2l8068
 17507  006152                     i2l698:
 17508                           
 17509                           ;parcheggio.c: 111: TMR3H_temp = TMR3H;
 17510  006152  CFB3 F026          	movff	4019,_TMR3H_temp	;volatile
 17511                           
 17512                           ;parcheggio.c: 112: TMR3L_temp = TMR3L;
 17513  006156  CFB2 F027          	movff	4018,_TMR3L_temp	;volatile
 17514                           
 17515                           ;parcheggio.c: 113: timerValue2 = TMR3H_temp;
 17516  00615A  C026  F023         	movff	_TMR3H_temp,_timerValue2	;volatile
 17517  00615E  6A24               	clrf	_timerValue2+1,c	;volatile
 17518                           
 17519                           ;parcheggio.c: 114: timerValue2 = ((timerValue2 << 8) | (TMR3L_temp));
 17520  006160  5023               	movf	_timerValue2,w,c	;volatile
 17521  006162  0100               	movlb	0	; () banked
 17522  006164  6F67               	movwf	??_ISR_Alta& (0+255),b
 17523  006166  5027               	movf	_TMR3L_temp,w,c	;volatile
 17524  006168  6E23               	movwf	_timerValue2,c	;volatile
 17525  00616A  C067  F024         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;parcheggio.c: 115: pulse_time = timerValue2 / 2;
 17529  00616E  90D8               	bcf	status,0,c
 17530  006170  3024               	rrcf	_timerValue2+1,w,c	;volatile
 17531  006172  0100               	movlb	0	; () banked
 17532  006174  6F67               	movwf	??_ISR_Alta& (0+255),b
 17533  006176  3023               	rrcf	_timerValue2,w,c	;volatile
 17534  006178  6E1F               	movwf	_pulse_time,c	;volatile
 17535  00617A  C067  F020         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;parcheggio.c: 116: sensor_distance[MUX_index] = pulse_time / 58;
 17539  00617E  C01F  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17540  006182  C020  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17541  006186  0E00               	movlw	0
 17542  006188  0100               	movlb	0	; () banked
 17543  00618A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17544  00618C  0E3A               	movlw	58
 17545  00618E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17546  006190  ECE3  F031         	call	___lwdiv	;wreg free
 17547  006194  5025               	movf	_MUX_index,w,c	;volatile
 17548  006196  0D02               	mullw	2
 17549  006198  0E01               	movlw	low _sensor_distance
 17550  00619A  24F3               	addwf	prodl,w,c
 17551  00619C  6ED9               	movwf	fsr2l,c
 17552  00619E  0E00               	movlw	high _sensor_distance
 17553  0061A0  20F4               	addwfc	prodh,w,c
 17554  0061A2  6EDA               	movwf	fsr2h,c
 17555  0061A4  0100               	movlb	0	; () banked
 17556  0061A6  C060  FFDE         	movff	?___lwdiv,postinc2
 17557  0061AA  0100               	movlb	0	; () banked
 17558  0061AC  C061  FFDD         	movff	?___lwdiv+1,postdec2
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;parcheggio.c: 117: INTCON2bits.INTEDG0 = 1;
 17562  0061B0  8CF1               	bsf	intcon2,6,c	;volatile
 17563  0061B2                     i2l8068:
 17564                           
 17565                           ;parcheggio.c: 118: }
 17566                           ;parcheggio.c: 119: INTCONbits.INT0IF = 0;
 17567  0061B2  92F2               	bcf	intcon,1,c	;volatile
 17568  0061B4  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 17569  0061B8  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 17570  0061BC  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17571  0061C0  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17572  0061C4  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 17573  0061C8  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 17574  0061CC  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17575  0061D0  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17576  0061D4  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17577  0061D8  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17578  0061DC  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17579  0061E0  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17580  0061E4  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 17581  0061E8  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 17582  0061EC  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17583  0061EE  0011               	retfie		f
 17584  0061F0                     __end_of_ISR_Alta:
 17585                           	opt stack 0
 17586                           pclatu	equ	0xFFB
 17587                           pclath	equ	0xFFA
 17588                           tblptru	equ	0xFF8
 17589                           tblptrh	equ	0xFF7
 17590                           tblptrl	equ	0xFF6
 17591                           tablat	equ	0xFF5
 17592                           prodh	equ	0xFF4
 17593                           prodl	equ	0xFF3
 17594                           intcon	equ	0xFF2
 17595                           intcon2	equ	0xFF1
 17596                           postinc0	equ	0xFEE
 17597                           fsr0h	equ	0xFEA
 17598                           fsr0l	equ	0xFE9
 17599                           wreg	equ	0xFE8
 17600                           indf1	equ	0xFE7
 17601                           postdec1	equ	0xFE5
 17602                           fsr1h	equ	0xFE2
 17603                           fsr1l	equ	0xFE1
 17604                           bsr	equ	0xFE0
 17605                           indf2	equ	0xFDF
 17606                           postinc2	equ	0xFDE
 17607                           postdec2	equ	0xFDD
 17608                           plusw2	equ	0xFDB
 17609                           fsr2h	equ	0xFDA
 17610                           fsr2l	equ	0xFD9
 17611                           status	equ	0xFD8
 17612                           
 17613 ;; *************** function ___lwdiv *****************
 17614 ;; Defined at:
 17615 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17616 ;; Parameters:    Size  Location     Type
 17617 ;;  dividend        2    0[BANK0 ] unsigned int 
 17618 ;;  divisor         2    2[BANK0 ] unsigned int 
 17619 ;; Auto vars:     Size  Location     Type
 17620 ;;  quotient        2    5[BANK0 ] unsigned int 
 17621 ;;  counter         1    4[BANK0 ] unsigned char 
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  2    0[BANK0 ] unsigned int 
 17624 ;; Registers used:
 17625 ;;		wreg, status,2, status,0
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17632 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17634 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;Total ram usage:        7 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; This function calls:
 17638 ;;		Nothing
 17639 ;; This function is called by:
 17640 ;;		_ISR_Alta
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           	psect	text40
 17645  0063C6                     __ptext40:
 17646                           	opt stack 0
 17647  0063C6                     ___lwdiv:
 17648                           	opt stack 21
 17649                           
 17650                           ;incstack = 0
 17651  0063C6  0E00               	movlw	0
 17652  0063C8  0100               	movlb	0	; () banked
 17653  0063CA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17654  0063CC  0E00               	movlw	0
 17655  0063CE  6F65               	movwf	___lwdiv@quotient& (0+255),b
 17656                           
 17657                           ; BSR set to: 0
 17658  0063D0  0100               	movlb	0	; () banked
 17659  0063D2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17660  0063D4  0100               	movlb	0	; () banked
 17661  0063D6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17662  0063D8  B4D8               	btfsc	status,2,c
 17663  0063DA  D02C               	goto	i2l1297
 17664                           
 17665                           ; BSR set to: 0
 17666  0063DC  0E01               	movlw	1
 17667  0063DE  0100               	movlb	0	; () banked
 17668  0063E0  6F64               	movwf	___lwdiv@counter& (0+255),b
 17669  0063E2  D006               	goto	i2l8038
 17670  0063E4                     i2l8036:
 17671                           
 17672                           ; BSR set to: 0
 17673  0063E4  0100               	movlb	0	; () banked
 17674  0063E6  90D8               	bcf	status,0,c
 17675  0063E8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 17676  0063EA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17677  0063EC  0100               	movlb	0	; () banked
 17678  0063EE  2B64               	incf	___lwdiv@counter& (0+255),f,b
 17679  0063F0                     i2l8038:
 17680                           
 17681                           ; BSR set to: 0
 17682  0063F0  0100               	movlb	0	; () banked
 17683  0063F2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17684  0063F4  D7F7               	goto	i2l8036
 17685  0063F6                     i2l8040:
 17686                           
 17687                           ; BSR set to: 0
 17688  0063F6  0100               	movlb	0	; () banked
 17689  0063F8  90D8               	bcf	status,0,c
 17690  0063FA  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 17691  0063FC  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17692                           
 17693                           ; BSR set to: 0
 17694  0063FE  0100               	movlb	0	; () banked
 17695  006400  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17696  006402  0100               	movlb	0	; () banked
 17697  006404  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 17698  006406  0100               	movlb	0	; () banked
 17699  006408  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17700  00640A  0100               	movlb	0	; () banked
 17701  00640C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17702  00640E  A0D8               	btfss	status,0,c
 17703  006410  D00A               	goto	i2l8048
 17704                           
 17705                           ; BSR set to: 0
 17706  006412  0100               	movlb	0	; () banked
 17707  006414  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17708  006416  0100               	movlb	0	; () banked
 17709  006418  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 17710  00641A  0100               	movlb	0	; () banked
 17711  00641C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17712  00641E  0100               	movlb	0	; () banked
 17713  006420  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17714                           
 17715                           ; BSR set to: 0
 17716  006422  0100               	movlb	0	; () banked
 17717  006424  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 17718  006426                     i2l8048:
 17719                           
 17720                           ; BSR set to: 0
 17721  006426  0100               	movlb	0	; () banked
 17722  006428  90D8               	bcf	status,0,c
 17723  00642A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17724  00642C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 17725                           
 17726                           ; BSR set to: 0
 17727  00642E  0100               	movlb	0	; () banked
 17728  006430  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 17729  006432  D7E1               	goto	i2l8040
 17730  006434                     i2l1297:
 17731                           
 17732                           ; BSR set to: 0
 17733  006434  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 17734  006438  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17735                           
 17736                           ; BSR set to: 0
 17737  00643C  0012               	return		;funcret
 17738  00643E                     __end_of___lwdiv:
 17739                           	opt stack 0
 17740                           pclatu	equ	0xFFB
 17741                           pclath	equ	0xFFA
 17742                           tblptru	equ	0xFF8
 17743                           tblptrh	equ	0xFF7
 17744                           tblptrl	equ	0xFF6
 17745                           tablat	equ	0xFF5
 17746                           prodh	equ	0xFF4
 17747                           prodl	equ	0xFF3
 17748                           intcon	equ	0xFF2
 17749                           intcon2	equ	0xFF1
 17750                           postinc0	equ	0xFEE
 17751                           fsr0h	equ	0xFEA
 17752                           fsr0l	equ	0xFE9
 17753                           wreg	equ	0xFE8
 17754                           indf1	equ	0xFE7
 17755                           postdec1	equ	0xFE5
 17756                           fsr1h	equ	0xFE2
 17757                           fsr1l	equ	0xFE1
 17758                           bsr	equ	0xFE0
 17759                           indf2	equ	0xFDF
 17760                           postinc2	equ	0xFDE
 17761                           postdec2	equ	0xFDD
 17762                           plusw2	equ	0xFDB
 17763                           fsr2h	equ	0xFDA
 17764                           fsr2l	equ	0xFD9
 17765                           status	equ	0xFD8
 17766                           pclatu	equ	0xFFB
 17767                           pclath	equ	0xFFA
 17768                           tblptru	equ	0xFF8
 17769                           tblptrh	equ	0xFF7
 17770                           tblptrl	equ	0xFF6
 17771                           tablat	equ	0xFF5
 17772                           prodh	equ	0xFF4
 17773                           prodl	equ	0xFF3
 17774                           intcon	equ	0xFF2
 17775                           intcon2	equ	0xFF1
 17776                           postinc0	equ	0xFEE
 17777                           fsr0h	equ	0xFEA
 17778                           fsr0l	equ	0xFE9
 17779                           wreg	equ	0xFE8
 17780                           indf1	equ	0xFE7
 17781                           postdec1	equ	0xFE5
 17782                           fsr1h	equ	0xFE2
 17783                           fsr1l	equ	0xFE1
 17784                           bsr	equ	0xFE0
 17785                           indf2	equ	0xFDF
 17786                           postinc2	equ	0xFDE
 17787                           postdec2	equ	0xFDD
 17788                           plusw2	equ	0xFDB
 17789                           fsr2h	equ	0xFDA
 17790                           fsr2l	equ	0xFD9
 17791                           status	equ	0xFD8
 17792                           
 17793                           	psect	param0
 17794  0000                     pclatu	equ	0xFFB
 17795                           pclath	equ	0xFFA
 17796                           tblptru	equ	0xFF8
 17797                           tblptrh	equ	0xFF7
 17798                           tblptrl	equ	0xFF6
 17799                           tablat	equ	0xFF5
 17800                           prodh	equ	0xFF4
 17801                           prodl	equ	0xFF3
 17802                           intcon	equ	0xFF2
 17803                           intcon2	equ	0xFF1
 17804                           postinc0	equ	0xFEE
 17805                           fsr0h	equ	0xFEA
 17806                           fsr0l	equ	0xFE9
 17807                           wreg	equ	0xFE8
 17808                           indf1	equ	0xFE7
 17809                           postdec1	equ	0xFE5
 17810                           fsr1h	equ	0xFE2
 17811                           fsr1l	equ	0xFE1
 17812                           bsr	equ	0xFE0
 17813                           indf2	equ	0xFDF
 17814                           postinc2	equ	0xFDE
 17815                           postdec2	equ	0xFDD
 17816                           plusw2	equ	0xFDB
 17817                           fsr2h	equ	0xFDA
 17818                           fsr2l	equ	0xFD9
 17819                           status	equ	0xFD8
 17820                           
 17821                           	psect	temp
 17822  000054                     btemp:
 17823                           	opt stack 0
 17824  000054                     	ds	1
 17825  0000                     int$flags	set	btemp
 17826                           pclatu	equ	0xFFB
 17827                           pclath	equ	0xFFA
 17828                           tblptru	equ	0xFF8
 17829                           tblptrh	equ	0xFF7
 17830                           tblptrl	equ	0xFF6
 17831                           tablat	equ	0xFF5
 17832                           prodh	equ	0xFF4
 17833                           prodl	equ	0xFF3
 17834                           intcon	equ	0xFF2
 17835                           intcon2	equ	0xFF1
 17836                           postinc0	equ	0xFEE
 17837                           fsr0h	equ	0xFEA
 17838                           fsr0l	equ	0xFE9
 17839                           wreg	equ	0xFE8
 17840                           indf1	equ	0xFE7
 17841                           postdec1	equ	0xFE5
 17842                           fsr1h	equ	0xFE2
 17843                           fsr1l	equ	0xFE1
 17844                           bsr	equ	0xFE0
 17845                           indf2	equ	0xFDF
 17846                           postinc2	equ	0xFDE
 17847                           postdec2	equ	0xFDD
 17848                           plusw2	equ	0xFDB
 17849                           fsr2h	equ	0xFDA
 17850                           fsr2l	equ	0xFD9
 17851                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      83
    BANK0           160    120     137
    BANK1           256     93     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_atan
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurations->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _floor->___xxtofl
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  345764
                                            119 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurations
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   91701
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  240889
                                             81 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   84502
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    6168
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    6131
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             53 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                             20 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            115 BANK0      4     0      4
                                              6 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                             12 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     870
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     802
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurations                                       0     0      0    6204
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6204
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    3518
                                             16 COMRAM    23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurations
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5D      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      53       1       88.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CC      20        0.0%
DATA                 0      0     1CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 28 10:55:45 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 0011                             _z 00DC          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 48AC  
                         l432 486C                           l521 17E0                           l513 16E0  
                         l433 4870                           l522 17EC                           l514 16E4  
                         l450 49B8                           l434 487C                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49C4                           l443 4984                           l435 4880  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4988                           l436 488C                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 4994                           l437 4890                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4998  
                         l438 489C                           l358 5946                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 49A4                           l439 48A0                           l359 5950  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 49A8  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 49B4                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 66A0                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l741 5880                           l486 147C  
                         l478 137C                           l398 1E16                           l487 1488  
                         l479 1380                           l399 1E20                           l743 572A  
                         l496 1594                           l488 148C                           l497 1598  
                         l489 1498                           l569 65AE                           l498 15A4  
                         l754 587C                           l499 15A8                           l829 5276  
                         l790 3DFE                           l774 3AEC                           l783 3B58  
                         l784 3CDC                           l777 3B2A                           l890 664C  
                         l787 3D74                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _abs 662A                           _asd 0281                           _dir 0283  
                         _cos 602C                           _msg 0144                           _sin 4A10  
                         prod 000FF3                           wreg 000FE8               ?_configurations 0029  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000                          ?_abs 0077  
                        l1090 6570                          l1405 44E0                          l1333 4D16  
                        l1414 4518                          l1350 32DE                          l1502 5CF2  
                        l1351 32AA                          l1416 4586                          l1408 4488  
                        l1097 5B90                          l1442 3902                          l1435 3666  
                        l1452 3A14                          l1444 3970                          l1349 32EA  
                        l1366 345E                          l1375 34F2                          l1491 5648  
                        l1492 5660                          l1484 55EC                          l5012 1F24  
                        l1477 5540                          l5018 1F44                          ?_cos 01B8  
                        l7000 38EC                          l5242 472A                          l5412 10F6  
                        l5340 0E10                          l5316 49C8                          l7100 5EB0  
                        l5430 11B0                          l7030 39E6                          l7006 3916  
                        l7110 5EE0                          l5600 173A                          l7040 3A34  
                        l7032 39FA                          l7016 396A                          l7112 5EF0  
                        l7104 5EC4                          l5290 48F6                          l5258 47E0  
                        l7042 3A3E                          l7026 39C0                          l7114 5EFA  
                        l5532 1502                          l5284 48B0                          l7300 463A  
                        l7212 4352                          l7060 5B3E                          l7052 5A9E  
                        l7140 55CE                          l5526 14BC                          l5358 0EC8  
                        l7206 432E                          l7118 5F16                          l7134 5578  
                        l8006 3E58                          l5560 15D8                          l5464 12CC  
                        l5376 0F82                          l7216 435C                          l7056 5AEC  
                        l7160 56B2                          l7136 5580                          l7128 5550  
                        l4840 1922                          l8008 3E64                          l8024 3EDA  
                        l5458 1286                          l5394 103C                          l7306 464A  
                        l7066 5BDC                          l7330 5D5A                          l7074 65E2  
                        l7146 562A                          l7138 5590                          l7170 62DC  
                        l8018 3E92                          l5628 1810                          l5492 13A0  
                        l7308 464E                          l7260 44DC                          l7236 43DE  
                        l7228 43B0                          l7332 5DFE                          l7500 54D0  
                        l7084 5E42                          l7148 563A                          l4916 1BA6  
                        l4860 1A1C                          l5566 161E                          l7254 4494  
                        l7246 445C                          l4942 1CC0                          l7272 452C  
                        l7192 42F4                          l7432 4106                          l7440 417C  
                        l7416 3FF6                          l7408 3FC6                          l7352 5C56  
                        l7344 5C20                          l7512 4A46                          l4936 1CA0  
                        l5594 16F4                          l5498 13E6                          l7282 4580  
                        l7266 4502                          l7186 42D0                          l6722 3128  
                        l7434 4140                          l7426 4078                          l7602 4EB4  
                        l4866 1A3C                          l7292 45D6                          l7196 42FE  
                        l6812 32CE                          l6740 3182                          l6732 3156  
                        l7460 4292                          l7452 425C                          l7428 4080  
                        l7348 5C34                          l7524 4B70                          l6902 357C  
                        l6830 334C                          l6822 330E                          l6806 32BE  
                        l7390 3F64                          l7614 4F96                          l7630 60B4  
                        l8086 623E                          l8094 62A4                          l7544 66CC  
                        l7296 4604                          l6832 3352                          l6840 336E  
                        l6808 32C4                          l6752 31BA                          l6728 314C  
                        l7480 52F0                          l7376 3F06                          l7528 4BE6  
                        l4992 1E2A                          l7560 5F2C                          l7720 5238  
                        l8088 624C                          l7298 4618                          l6914 35A0  
                        l6906 3588                          l6850 343E                          l6746 3196  
                        l6930 35F4                          l7570 5F7A                          l7548 65A0  
                        l6908 358C                          l6836 335C                          l6764 31EE  
                        l6756 31C4                          l6932 35FA                          l6924 35D0  
                        l7484 5364                          l7396 3F84                          l7388 3F52  
                        l7580 5FF2                          l6950 3654                          l6942 362A  
                        l6934 360C                          l7590 4D86                          l7726 5292  
                        l7822 56DA                          l7830 5726                          l7814 56C6  
                        l7680 595C                          l6864 34A6                          l7496 54B8  
                        l7576 5FB8                          l7728 5298                          l7682 59A0  
                        l7674 593E                          l7690 6662                          l6858 3490  
                        l6874 34C6                          l6794 322A                          l6954 367A  
                        l7914 3B50                          l7842 57A4                          l7834 5788  
                        l7676 5954                          l6884 34EC                          l6868 34B2  
                        l6876 34CC                          l6948 364E                          ?_sin 019F  
                        l7694 6674                          l6894 3548                          l6958 368E  
                        l7846 57DC                          l7880 3A66                          l7864 583E  
                        l6898 355A                          l7890 3AAA                          l7894 3AE2  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6110 46A6                          u6115 469A                          u6125 4706  
                        u6150 475C                          u5510 1942                          u7040 1830  
                        u6320 49E8                          u6240 48D0                          u5520 198E  
                        u6155 4750                          u5515 1936                          u7045 1824  
                        u6405 0EA4                          u6325 49DC                          u6245 48C4  
                        u6165 47BC                          u5525 1982                          u6510 1072  
                        u6430 0EFE                          u6350 0D8C                          u5535 19EE  
                        u5640 1BC6                          u5650 1C12                          u6515 1066  
                        u6435 0EF2                          u6355 0D80                          u6525 10D2  
                        u6445 0F5E                          u6365 0DEC                          u5645 1BBA  
                        u6550 112C                          u6470 0FB8                          u6390 0E44  
                        u5655 1C06                          u6800 14DC                          u6720 13C0  
                        u6640 12A6                          u5665 1C72                          u5770 1E4A  
                        u6555 1120                          u6475 0FAC                          u6395 0E38  
                        u9140 39D4                          u9060 388E                          u5780 1E96  
                        u6805 14D0                          u6725 13B4                          u6645 129A  
                        u6565 118C                          u6485 1018                          u5775 1E3E  
                        u9240 5E62                          u9065 3882                          u5785 1E8A  
                        u9410 630E                          u5795 1EF6                          u8700 328E  
                        u9245 5E56                          u6960 1714                          u6880 15F8  
                        u9418 6312                          u9620 45EA                          u6965 1708  
                        u6885 15EC                          u8680 3274                          u8690 328C  
                        u9690 5C44                          u9930 4B6A                          u9860 5320  
                        u9940 4B6C                          u9870 5322      __end_ofi1_CANsendMessage 2674  
         __size_of_CANSetMask 039E                          _Pmin 0128                          abs@a 0077  
                        _alfa 012C                          _fabs 6544                          _data 0153  
                        _beta 0130                          _atan 52A4                          _asin 4D28  
                        _main 61F0                          cos@f 01B8                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0054                          _sqrt 3EE8  
                        pclat 000FFA                          sin@f 019F                          sin@y 01A3  
                        prodh 000FF4                          prodl 000FF3                          start 0316  
               __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088                delay_s@value_s 007F  
         ISR_Bassa@PORTA_temp 004E                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 66C4                         ??_abs 0079                         ??_cos 00D7  
                       ??_sin 00D7    __size_of_CANreceiveMessage 050C                         ?_fabs 00C1  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 01A0  
             __end_of___fladd 35B2                         ?_main 0029               __end_of___fldiv 4672  
             __end_of___flneg 65F4               __end_of___flmul 3A58               __end_of___flsub 6544  
             __end_of___fltol 5F28                         ?_sqrt 00C1                         u10200 5290  
                       u10300 57F0                         u10220 56D6                         u10151 50CC  
                       u10161 50D8                         u10500 3E36                         u10360 3A7C  
                       _T0CON 000FD5                         u10610 625E                         u10366 3A7E  
                       u10616 6260                         u10637 65A2                         _T3CON 000FB1  
          __size_of_ISR_Bassa 02FE               __end_of___lwdiv 643E                         i1l410 2E96  
                       i1l402 25D0                         i1l403 25D4                         i1l404 25DE  
                       i1l370 2082                         i1l363 2214                         i1l380 222C  
                       i1l364 1FF8                         i1l381 22FC                         i1l373 2170  
                       i1l365 1FFC                         i1l390 23AE                         i1l382 229A  
                       i1l374 2174                         i1l366 20CC                         i1l383 22A2  
                       i1l375 217E                         i1l367 206A                         i1l384 22AA  
                       i1l368 2072                         i1l712 0158                         i1l704 008C  
                       i1l393 2458                         i1l385 22B2                         i1l369 207A  
                       i1l394 245C                         i1l378 2444                         i1l722 02CA  
                       i1l395 252C                         i1l379 2228                         i1l556 66C0  
                       i1l396 24CA                         i1l388 23A0                         i1l397 24D2  
                       i1l389 23A4                         i1l398 24DA                         i1l726 02CE  
                       i1l399 24E2                         i1l719 024A                         i2l698 6152  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 61F0  
             __end_of_delay_s 6682                 __CFG_WRT0$OFF 000000                         _J_var 0120  
               __CFG_WRT1$OFF 000000                         _K_var 0124                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _bordo 0134  
                       fabs@d 00C1                         _first 0288                         _floor 5BE0  
                       _frexp 62B6                         _errno 00E4                         atan@f 00D1  
                       atan@x 018F                         atan@y 018B                         asin@x 01A0  
                       asin@y 01B0                __pbitbssCOMRAM 0280                         sin@x2 01AB  
                       tablat 000FF5          __end_of_CANisTxReady 66A6                         plusw2 000FDB  
                       sqrt@a 00C1                         sqrt@i 018C                         sqrt@p 0191  
                       status 000FD8                  ?_park_search 0029               __initialization 634A  
                __end_of_fabs 6582                  __end_of_atan 54F6                  __end_of_asin 503A  
                __end_of_main 62B6                  __end_of_sqrt 42B2                        ??_fabs 00C5  
                      ??_atan 00D5                        ??_asin 00D5                        ??_main 00D7  
           _park_routine$3742 01E0             _park_routine$3743 01E4                        ??_sqrt 00C5  
               __activetblptr 000003             _CANisTxReady$2845 0077                        _ADCON1 000FC1  
                      ?_floor 00D3                        ?_frexp 0077                        _CANCON 000F6F  
          _distance_received1 0286               __CFG_BBSIZ$1024 000000             _spazio_parcheggio 0052  
               _avvicinamento 0282                        i1l6412 2396                        i1l6316 208A  
                      i1l6342 2182                        i1l6336 2166                        i2l1297 6434  
                      i1l6418 23B2                        i1l6610 0194                        i1l5910 2E04  
                      i1l6606 018C                        i1l6392 22BA                        i1l6632 0226  
                      i1l5922 2E5E                        i1l5914 2E22                        i1l5906 2DE6  
                      i1l6650 028C                        i1l6570 00F8                        i1l6562 00C8  
                      i1l5924 2E90                        i1l6468 24EA                        i1l5918 2E40  
                      i1l6494 25E2                        i1l6646 0284                        i1l6638 0254  
                      i1l6574 012A                        i1l5960 2FF6                        i1l6488 25C6  
                      i1l6656 02B4                        i1l6576 014A                        i1l5980 30B8  
                      i1l5972 3080                        i1l5984 30D4                        i1l5976 309C  
                      i1l5968 3064                        i1l5986 3106                        i1l5898 2D76  
                      i2l8040 63F6                        i2l8036 63E4                        i2l8038 63F0  
                      i2l8048 6426                        i2l8068 61B2                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 602C            CANsendMessage@tamp 0083  
            __end_of___xxtofl 56C4             __end_of_ISR_Bassa 0316              __end_of_delay_ms 65BC  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 5A50  
             _data_correction 0163                     ??___fladd 00B1                        ___wmul 65F4  
                   ??___fldiv 007F                     ??___flneg 00C1                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D7                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _raggio 01EC  
                      clear_0 6350                        clear_1 635C                        clear_2 636C  
                   ??_delay_s 007F                        floor@i 0191                        floor@x 00D3  
             __CFG_BOREN$BOHW 000000       __size_ofi1_CANisTxReady 001E                  __pdataCOMRAM 0052  
                      sin@sgn 01AF                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00C5                    ___flge@ff2 00C9                  ___xxtofl@arg 018D  
                ___xxtofl@exp 018C                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 63BC            __end_of_CANSetMask 4A10               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00BD                 ?_park_routine 0029                  eval_poly@res 00C9  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 0029  
                   ?_ISR_Alta 0029                  __pidataBANK0 66E4                  __pidataBANK1 66DA  
               __end_of_floor 5D04                 __end_of_frexp 634A              ??_configurations 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 0015         __size_of_CANisTxReady 0024  
                     ??_floor 00D7                       ??_frexp 007D      __end_of_CANOperationMode 66DA  
                  __pbssBANK0 00D8                    __pbssBANK1 0100               _sensor_distance 0001  
          __size_of_eval_poly 0118             ?i1_CANsendMessage 0029                    _data_brake 015B  
              ??_park_routine 01DC       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 0280            ??i1_CANsendMessage 0031      __size_of_can_interpreter 0052  
          __size_of_parallelo 026A          __size_of_park_search 01C6             _old_alignment_gap 013C  
                  ??_ISR_Alta 0067                       ?___flge 00C5                       ?___wmul 0077  
                     _CANSTAT 000F6E                  _CANisTxReady 6682                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                     ?_can_send 0029  
                   ?___xxtofl 00CB        __size_of_CANInitialize 01C6                     ?_delay_ms 007D  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _RXB0CON 000F60  
                     _RXB1CON 000F50                       _TXB0DLC 000F45                       _TXB1DLC 000F35  
                     _TXB2DLC 000F25           CANsendMessage@flags 007E                       __Hparam 0000  
                  _left_speed 001D                       __Lparam 0000              delay_ms@value_ms 007D  
             __size_of___flge 0190                    _matematica 2674                       ___fladd 310A  
                     ___fldiv 42B2                       ___flneg 65BC                       ___flmul 35B2  
                     ___flsub 64FC                       ___fltol 5E1C               __size_of___wmul 0036  
                     ___lwdiv 63C6                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 634A             __end_of_eval_poly 5E1C                       _delay_s 6656  
                     __ramtop 0D00                       __ptext0 61F0                       __ptext1 56C4  
                     __ptext2 3A58                       __ptext3 503A                       __ptext4 5F28  
                     __ptext5 1858                       __ptext6 6682                       __ptext7 662A  
                     __ptext8 2674                       __ptext9 602C                     _T0CONbits 000FD5  
              i1_CANisTxReady 66A6                    ??_can_send 0087                  __size_of_abs 002C  
                __size_of_cos 00E4               atan@val_squared 0194                  __size_of_sin 0318  
                  ??___xxtofl 00CF                       atan@val 0198             __end_of_parallelo 52A4  
                  ??_delay_ms 007F                       asin@sgn 01A4        CANreceiveMessage@error 0033  
             _start_operation 028D                __pintcode_body 6110          end_of_initialization 63BC  
                   i1u1064_27 017A                       int_func 6110                 _CANInitialize 588A  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 0192  
                     sqrt@exp 0196             ??_can_interpreter 0077        __end_ofi1_CANisTxReady 66C4  
     _steering_correction_dir 028E                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 3EE8                   ___fladd@grs 00BC                 ___xxtofl@sign 018B  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0025                    _pulse_time 001F       _clock_counter_reference 00E0  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085           i1_CANisTxReady$2845 0029  
                  ?_ISR_Bassa 0029                   ?_matematica 0029                __end_of___flge 5BE0  
           __size_of_ISR_Alta 61E8                __end_of___wmul 662A                 __pidataCOMRAM 66E2  
             ?i1_CANisTxReady 0029                    floor@expon 0195           start_initialization 634A  
                  eval_poly@d 00C1                    eval_poly@n 00C3                    eval_poly@x 00BD  
                 __end_of_abs 6656                   __end_of_cos 6110                   __end_of_sin 4D28  
         CANSetMask@numBuffer 0080                 _data_speed_rx 0108        __end_of_CANsendMessage 1FE4  
           ?_CANOperationMode 0029                 _data_steering 0173                    frexp@value 0077  
          ??_CANOperationMode 0077             _distance_received 0285    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 0028                      ??___flge 00CD  
                    ??___wmul 007B                   __pdataBANK0 00E8                   __pdataBANK1 01E8  
            __CFG_LPT1OSC$OFF 000000     __size_ofi1_CANsendMessage 0690                     ___fladd@a 00AD  
                   ___fladd@b 00A9        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0001                     ___flsub@a 019B  
                   ___flsub@b 0197                 __pcstackBANK0 0060                 __pcstackBANK1 018B  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0104  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 058A               ??_CANInitialize 008A                     _asin$3751 01B4  
                   _asin$3752 01AC                     _asin$3753 01A8                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B8                 _alignment_gap 00D8  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 004F                   ??_ISR_Bassa 0039                     __pintcode 0008  
                    ?___fladd 00A9                      ?___fldiv 0077                      ?___flneg 00BD  
                    ?___flmul 0090                      ?___flsub 0197                      ?___fltol 00C1  
       __size_of_park_routine 0490                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 0029                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 5D04                     _larghezza 01E8              ___lwdiv@quotient 0065  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurations 006C  
                   _parallelo 503A                  _new_distance 0289         CANreceiveMessage@tamp 0034  
              _prima_sterzata 0140                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 64AA                     atan@recip 0193                  _park_routine 3A58  
_delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u800_25 213A                      i1u811_20 22D8                      i1u811_25 22CE  
                    i1u732_20 2CB6                      i1u812_20 231E                      i1u812_25 2314  
                    i1u732_26 2CB8                      i1u733_20 2CE4                      i1u741_25 2E6A  
                    i1u813_25 236A                      i1u733_26 2CE6                      i1u743_20 2F3E  
                    i1u735_25 2CFA                      i1u743_26 2F40                      i1u744_20 2F68  
                    i1u824_20 2508                      i1u752_25 30E0                      i1u824_25 24FE  
                    i1u744_26 2F6A                      i1u825_20 254E                      i1u825_25 2544  
                    i1u842_24 013A                      i1u746_25 2F7C                      i1u826_25 259A  
                    i1u842_25 0136                      i1u837_24 00BC                      i1u837_25 00B8  
                    _PIR3bits 000FA4                      i1u798_20 20A8                      i1u798_25 209E  
                    i1u799_20 20EE                      i1u799_25 20E4                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 00E6                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 588A                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0019  
                 _distance_sx 001B                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 6386                    _CANCONbits 000F6F                    ?_parallelo 0029  
            _distance_average 00E2                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
            ??i1_CANisTxReady 0029                  ??_matematica 00D7                 _request_sent1 028C  
            __size_of___fladd 04A8                    _CANSetMask 4672              __size_of___fldiv 03C0  
            __size_of___flneg 0038              __size_of___flmul 04A6              __size_of___flsub 0048  
            __size_of___fltol 010C              i1_CANsendMessage 1FE4                      _cos$3754 01BC  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 5F28  
                    ___xxtofl 54F6                  _RXF0SIDLbits 000F01                      _delay_ms 6582  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
       i1CANsendMessage@flags 0030                ??_CANSetFilter 007C                      __ptext10 4A10  
                    __ptext11 5BE0                      __ptext20 65BC                      __ptext12 62B6  
                    __ptext21 5D04                      __ptext13 54F6                      __ptext30 588A  
                    __ptext22 35B2                      __ptext14 5E1C                      __ptext31 4672  
                    __ptext23 310A                      __ptext15 64FC                      __ptext40 63C6  
                    __ptext32 0D52                      __ptext24 5A50                      __ptext16 4D28  
                    __ptext33 66C4                      __ptext25 42B2                      __ptext17 3EE8  
                    __ptext34 64AA                      __ptext26 6656                      __ptext18 52A4  
                    __ptext27 6582                      __ptext19 6544                      __ptext36 1FE4  
                    __ptext28 65F4                      __ptext37 66A6                      __ptext29 643E  
                    __ptext38 2BFE                  _RXF2SIDLbits 000F09                      _sin$3755 01A7  
     __end_of_can_interpreter 64FC                  _RXF3SIDLbits 000F0D                      _distance 0017  
          __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 00C6                 __size_of_sqrt 03CA  
                 _park_search 56C4          CANreceiveMessage@msg 0029                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0054  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 0029                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C5              ??_CANsendMessage 007F    i1CANsendMessage@dataLength 002F  
          ?_CANreceiveMessage 0029                  _request_sent 028B                _configurations 643E  
                   sqrt@tfrac 018D      CANsendMessage@identifier 0077                   ??_parallelo 00D5  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 002B          i1CANsendMessage@data 002D  
        i1CANsendMessage@tamp 0035                   _TXB0DLCbits 000F45                   _right_speed 0021  
                 _TXB1DLCbits 000F35                   _TXB0CONbits 000F40                   _TXB2DLCbits 000F25  
                 _TXB1CONbits 000F30                   _TXB2CONbits 000F20          CANOperationMode@mode 0077  
                 ?_CANSetMask 0077                ??_CANisTxReady 0077                _distance_error 0284  
             _matematica$3750 01D4               _matematica$3744 01C0               _matematica$3745 01C4  
             _matematica$3746 01C8               _matematica$3747 01CC               _matematica$3748 01D8  
             _matematica$3749 01D0     __end_of_CANreceiveMessage 310A                      sqrt@frac 019C  
                    sqrt@sign 018B                      sqrt@root 0198    i1CANsendMessage@identifier 0029  
                 _timerValue2 0023                    _TMR3H_temp 0026        __end_of_configurations 64AA  
                  _TMR3L_temp 0027                 ___fladd@signs 00B9                 _distance_wait 0287  
            ?_can_interpreter 0029                  ___fladd@aexp 00BA            _old_dir_correction 028A  
                ___fladd@bexp 00BB         __end_of_CANInitialize 5A50         _sensor_distance_short 0183  
         _sensor_distance_old 0118  
