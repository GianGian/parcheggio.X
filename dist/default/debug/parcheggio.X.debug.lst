

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 22 18:07:19 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataBANK0
    65  0066F8                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  0066F8  0064               	dw	100
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  0066FA  10                 	db	16
    73                           
    74                           	psect	idataBANK1
    75  0066F0                     __pidataBANK1:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _larghezza
    79  0066F0  0000               	dw	0
    80  0066F2  4200               	dw	16896
    81                           
    82                           ;initializer for _raggio
    83  0066F4  0000               	dw	0
    84  0066F6  428C               	dw	17036
    85                           
    86                           	psect	smallconst
    87  000D00                     __psmallconst:
    88                           	opt stack 0
    89  000D00  00                 	db	0
    90  000D01                     atan@coeff_a:
    91                           	opt stack 0
    92  000D01  3C06               	dw	15366
    93  000D03  4204               	dw	16900
    94  000D05  9F7D               	dw	40829
    95  000D07  426A               	dw	17002
    96  000D09  905C               	dw	36956
    97  000D0B  4201               	dw	16897
    98  000D0D  4D60               	dw	19808
    99  000D0F  40BB               	dw	16571
   100  000D11  EC51               	dw	60497
   101  000D13  3E47               	dw	15943
   102  000D15  8DDE               	dw	36318
   103  000D17  BB1F               	dw	47903
   104  000D19                     __end_ofatan@coeff_a:
   105                           	opt stack 0
   106  000D19                     atan@coeff_b:
   107                           	opt stack 0
   108  000D19  3C06               	dw	15366
   109  000D1B  4204               	dw	16900
   110  000D1D  59C0               	dw	22976
   111  000D1F  428B               	dw	17035
   112  000D21  0474               	dw	1140
   113  000D23  4244               	dw	16964
   114  000D25  9BF9               	dw	39929
   115  000D27  414F               	dw	16719
   116  000D29  0000               	dw	0
   117  000D2B  3F80               	dw	16256
   118  000D2D                     __end_ofatan@coeff_b:
   119                           	opt stack 0
   120  000D2D                     sin@coeff_a:
   121                           	opt stack 0
   122  000D2D  F3EC               	dw	62444
   123  000D2F  484A               	dw	18506
   124  000D31  9535               	dw	38197
   125  000D33  C795               	dw	51093
   126  000D35  C117               	dw	49431
   127  000D37  45DC               	dw	17884
   128  000D39  DBFD               	dw	56317
   129  000D3B  C36D               	dw	50029
   130  000D3D  B372               	dw	45938
   131  000D3F  4033               	dw	16435
   132  000D41                     __end_ofsin@coeff_a:
   133                           	opt stack 0
   134  000D41                     sin@coeff_b:
   135                           	opt stack 0
   136  000D41  342B               	dw	13355
   137  000D43  4801               	dw	18433
   138  000D45  9D7F               	dw	40319
   139  000D47  45B0               	dw	17840
   140  000D49  FFE7               	dw	65511
   141  000D4B  42D9               	dw	17113
   142  000D4D  0000               	dw	0
   143  000D4F  3F80               	dw	16256
   144  000D51                     __end_ofsin@coeff_b:
   145                           	opt stack 0
   146  0000                     _RXB1CON	set	3920
   147  0000                     _RXB1CONbits	set	3920
   148  0000                     _RXB1D0	set	3926
   149  0000                     _RXB1D1	set	3927
   150  0000                     _RXB1D2	set	3928
   151  0000                     _RXB1D3	set	3929
   152  0000                     _RXB1D4	set	3930
   153  0000                     _RXB1D5	set	3931
   154  0000                     _RXB1D6	set	3932
   155  0000                     _RXB1D7	set	3933
   156  0000                     _RXB1DLC	set	3925
   157  0000                     _RXB1DLCbits	set	3925
   158  0000                     _RXB1EIDH	set	3923
   159  0000                     _RXB1EIDL	set	3924
   160  0000                     _RXB1SIDH	set	3921
   161  0000                     _RXB1SIDL	set	3922
   162  0000                     _RXB1SIDLbits	set	3922
   163  0000                     _RXF0EIDH	set	3842
   164  0000                     _RXF0EIDL	set	3843
   165  0000                     _RXF0SIDH	set	3840
   166  0000                     _RXF0SIDL	set	3841
   167  0000                     _RXF0SIDLbits	set	3841
   168  0000                     _RXF1EIDH	set	3846
   169  0000                     _RXF1EIDL	set	3847
   170  0000                     _RXF1SIDH	set	3844
   171  0000                     _RXF1SIDL	set	3845
   172  0000                     _RXF1SIDLbits	set	3845
   173  0000                     _RXF2EIDH	set	3850
   174  0000                     _RXF2EIDL	set	3851
   175  0000                     _RXF2SIDH	set	3848
   176  0000                     _RXF2SIDL	set	3849
   177  0000                     _RXF2SIDLbits	set	3849
   178  0000                     _RXF3EIDH	set	3854
   179  0000                     _RXF3EIDL	set	3855
   180  0000                     _RXF3SIDH	set	3852
   181  0000                     _RXF3SIDL	set	3853
   182  0000                     _RXF3SIDLbits	set	3853
   183  0000                     _RXF4EIDH	set	3858
   184  0000                     _RXF4EIDL	set	3859
   185  0000                     _RXF4SIDH	set	3856
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDLbits	set	3857
   188  0000                     _RXF5EIDH	set	3862
   189  0000                     _RXF5EIDL	set	3863
   190  0000                     _RXF5SIDH	set	3860
   191  0000                     _RXF5SIDL	set	3861
   192  0000                     _RXF5SIDLbits	set	3861
   193  0000                     _RXM0EIDH	set	3866
   194  0000                     _RXM0EIDL	set	3867
   195  0000                     _RXM0SIDH	set	3864
   196  0000                     _RXM0SIDL	set	3865
   197  0000                     _RXM0SIDLbits	set	3865
   198  0000                     _RXM1EIDH	set	3870
   199  0000                     _RXM1EIDL	set	3871
   200  0000                     _RXM1SIDH	set	3868
   201  0000                     _RXM1SIDL	set	3869
   202  0000                     _RXM1SIDLbits	set	3869
   203  0000                     _TXB0CONbits	set	3904
   204  0000                     _TXB0D0	set	3910
   205  0000                     _TXB0D1	set	3911
   206  0000                     _TXB0D2	set	3912
   207  0000                     _TXB0D3	set	3913
   208  0000                     _TXB0D4	set	3914
   209  0000                     _TXB0D5	set	3915
   210  0000                     _TXB0D6	set	3916
   211  0000                     _TXB0D7	set	3917
   212  0000                     _TXB0DLC	set	3909
   213  0000                     _TXB0DLCbits	set	3909
   214  0000                     _TXB0EIDH	set	3907
   215  0000                     _TXB0EIDL	set	3908
   216  0000                     _TXB0SIDH	set	3905
   217  0000                     _TXB0SIDL	set	3906
   218  0000                     _TXB0SIDLbits	set	3906
   219  0000                     _TXB1CONbits	set	3888
   220  0000                     _TXB1D0	set	3894
   221  0000                     _TXB1D1	set	3895
   222  0000                     _TXB1D2	set	3896
   223  0000                     _TXB1D3	set	3897
   224  0000                     _TXB1D4	set	3898
   225  0000                     _TXB1D5	set	3899
   226  0000                     _TXB1D6	set	3900
   227  0000                     _TXB1D7	set	3901
   228  0000                     _TXB1DLC	set	3893
   229  0000                     _TXB1DLCbits	set	3893
   230  0000                     _TXB1EIDH	set	3891
   231  0000                     _TXB1EIDL	set	3892
   232  0000                     _TXB1SIDH	set	3889
   233  0000                     _TXB1SIDL	set	3890
   234  0000                     _TXB1SIDLbits	set	3890
   235  0000                     _TXB2CONbits	set	3872
   236  0000                     _TXB2D0	set	3878
   237  0000                     _TXB2D1	set	3879
   238  0000                     _TXB2D2	set	3880
   239  0000                     _TXB2D3	set	3881
   240  0000                     _TXB2D4	set	3882
   241  0000                     _TXB2D5	set	3883
   242  0000                     _TXB2D6	set	3884
   243  0000                     _TXB2D7	set	3885
   244  0000                     _TXB2DLC	set	3877
   245  0000                     _TXB2DLCbits	set	3877
   246  0000                     _TXB2EIDH	set	3875
   247  0000                     _TXB2EIDL	set	3876
   248  0000                     _TXB2SIDH	set	3873
   249  0000                     _TXB2SIDL	set	3874
   250  0000                     _TXB2SIDLbits	set	3874
   251  0000                     _ADCON1	set	4033
   252  0000                     _BRGCON1	set	3952
   253  0000                     _BRGCON2	set	3953
   254  0000                     _BRGCON2bits	set	3953
   255  0000                     _BRGCON3	set	3954
   256  0000                     _BRGCON3bits	set	3954
   257  0000                     _CANCON	set	3951
   258  0000                     _CANCONbits	set	3951
   259  0000                     _CANSTAT	set	3950
   260  0000                     _COMSTATbits	set	3956
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _INTCONbits	set	4082
   263  0000                     _IPR3bits	set	4005
   264  0000                     _LATA	set	3977
   265  0000                     _LATB	set	3978
   266  0000                     _LATBbits	set	3978
   267  0000                     _LATC	set	3979
   268  0000                     _PIE3bits	set	4003
   269  0000                     _PIR3bits	set	4004
   270  0000                     _PORTA	set	3968
   271  0000                     _PORTBbits	set	3969
   272  0000                     _RCONbits	set	4048
   273  0000                     _RXB0CON	set	3936
   274  0000                     _RXB0CONbits	set	3936
   275  0000                     _RXB0D0	set	3942
   276  0000                     _RXB0D1	set	3943
   277  0000                     _RXB0D2	set	3944
   278  0000                     _RXB0D3	set	3945
   279  0000                     _RXB0D4	set	3946
   280  0000                     _RXB0D5	set	3947
   281  0000                     _RXB0D6	set	3948
   282  0000                     _RXB0D7	set	3949
   283  0000                     _RXB0DLC	set	3941
   284  0000                     _RXB0DLCbits	set	3941
   285  0000                     _RXB0EIDH	set	3939
   286  0000                     _RXB0EIDL	set	3940
   287  0000                     _RXB0SIDH	set	3937
   288  0000                     _RXB0SIDL	set	3938
   289  0000                     _RXB0SIDLbits	set	3938
   290  0000                     _RXERRCNT	set	3957
   291  0000                     _T0CON	set	4053
   292  0000                     _T0CONbits	set	4053
   293  0000                     _T3CON	set	4017
   294  0000                     _TMR0H	set	4055
   295  0000                     _TMR0L	set	4054
   296  0000                     _TMR3H	set	4019
   297  0000                     _TMR3L	set	4018
   298  0000                     _TRISA	set	3986
   299  0000                     _TRISB	set	3987
   300  0000                     _TRISBbits	set	3987
   301  0000                     _TRISC	set	3988
   302  0000                     _TXERRCNT	set	3958
   303                           
   304                           ; #config settings
   305  000D51  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           	psect	cinit
   308  0063E2                     __pcinit:
   309                           	opt stack 0
   310  0063E2                     start_initialization:
   311                           	opt stack 0
   312  0063E2                     __initialization:
   313                           	opt stack 0
   314                           
   315                           ; Clear objects allocated to BANK1 (139 bytes)
   316  0063E2  EE01  F000         	lfsr	0,__pbssBANK1
   317  0063E6  0E8B               	movlw	139
   318  0063E8                     clear_0:
   319  0063E8  6AEE               	clrf	postinc0,c
   320  0063EA  06E8               	decf	wreg,f,c
   321  0063EC  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to BANK0 (12 bytes)
   324  0063EE  EE00  F0DA         	lfsr	0,__pbssBANK0
   325  0063F2  0E0C               	movlw	12
   326  0063F4                     clear_1:
   327  0063F4  6AEE               	clrf	postinc0,c
   328  0063F6  06E8               	decf	wreg,f,c
   329  0063F8  E1FD               	bnz	clear_1
   330                           
   331                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   332  0063FA  6A55               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   333  0063FC  6A54               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   334                           
   335                           ; Clear objects allocated to COMRAM (44 bytes)
   336  0063FE  EE00  F001         	lfsr	0,__pbssCOMRAM
   337  006402  0E2C               	movlw	44
   338  006404                     clear_2:
   339  006404  6AEE               	clrf	postinc0,c
   340  006406  06E8               	decf	wreg,f,c
   341  006408  E1FD               	bnz	clear_2
   342                           
   343                           ; Initialize objects allocated to BANK1 (8 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345  00640A  0EF0               	movlw	low __pidataBANK1
   346  00640C  6EF6               	movwf	tblptrl,c
   347  00640E  0E66               	movlw	high __pidataBANK1
   348  006410  6EF7               	movwf	tblptrh,c
   349  006412  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350  006414  6EF8               	movwf	tblptru,c
   351  006416  EE01  F0E4         	lfsr	0,__pdataBANK1
   352  00641A  EE10 F008          	lfsr	1,8
   353  00641E                     copy_data0:
   354  00641E  0009               	tblrd		*+
   355  006420  CFF5 FFEE          	movff	tablat,postinc0
   356  006424  50E5               	movf	postdec1,w,c
   357  006426  50E1               	movf	fsr1l,w,c
   358  006428  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to BANK0 (3 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362  00642A  0EF8               	movlw	low __pidataBANK0
   363  00642C  6EF6               	movwf	tblptrl,c
   364  00642E  0E66               	movlw	high __pidataBANK0
   365  006430  6EF7               	movwf	tblptrh,c
   366  006432  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367  006434  6EF8               	movwf	tblptru,c
   368  006436  0009               	tblrd		*+	;fetch initializer
   369  006438  CFF5 F0E6          	movff	tablat,__pdataBANK0
   370  00643C  0009               	tblrd		*+	;fetch initializer
   371  00643E  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   372  006442  0009               	tblrd		*+	;fetch initializer
   373  006444  CFF5 F0E8          	movff	tablat,__pdataBANK0+2
   374  006448                     end_of_initialization:
   375                           	opt stack 0
   376  006448                     __end_of__initialization:
   377                           	opt stack 0
   378  006448  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379  00644A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  00644C  0100               	movlb	0
   381  00644E  EF0E  F031         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bitbssCOMRAM
   392  0002A0                     __pbitbssCOMRAM:
   393                           	opt stack 0
   394  0002A0                     _activation:
   395                           	opt stack 0
   396  0002A0                     	ds	1
   397  0002A1                     _asd:
   398                           	opt stack 0
   399  0002A1                     	ds	1
   400  0002A2                     _avvicinamento:
   401                           	opt stack 0
   402  0002A2                     	ds	1
   403  0002A3                     _dir:
   404                           	opt stack 0
   405  0002A3                     	ds	1
   406  0002A4                     _distance_error:
   407                           	opt stack 0
   408  0002A4                     	ds	1
   409  0002A5                     _distance_received:
   410                           	opt stack 0
   411  0002A5                     	ds	1
   412  0002A6                     _distance_received1:
   413                           	opt stack 0
   414  0002A6                     	ds	1
   415  0002A7                     _distance_wait:
   416                           	opt stack 0
   417  0002A7                     	ds	1
   418  0002A8                     _emergency:
   419                           	opt stack 0
   420  0002A8                     	ds	1
   421  0002A9                     _first:
   422                           	opt stack 0
   423  0002A9                     	ds	1
   424  0002AA                     _new_distance:
   425                           	opt stack 0
   426  0002AA                     	ds	1
   427  0002AB                     _old_data_correction:
   428                           	opt stack 0
   429  0002AB                     	ds	1
   430  0002AC                     _request_sent:
   431                           	opt stack 0
   432  0002AC                     	ds	1
   433  0002AD                     _request_sent1:
   434                           	opt stack 0
   435  0002AD                     	ds	1
   436  0002AE                     _start_operation:
   437                           	opt stack 0
   438  0002AE                     	ds	1
   439  0002AF                     _steering_correction_dir:
   440                           	opt stack 0
   441  0002AF                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bssCOMRAM
   452  000001                     __pbssCOMRAM:
   453                           	opt stack 0
   454  000001                     _sensor_distance:
   455                           	opt stack 0
   456  000001                     	ds	16
   457  000011                     _alignment_gap:
   458                           	opt stack 0
   459  000011                     	ds	4
   460  000015                     _z:
   461                           	opt stack 0
   462  000015                     	ds	4
   463  000019                     _distance_average:
   464                           	opt stack 0
   465  000019                     	ds	2
   466  00001B                     _distance_dx:
   467                           	opt stack 0
   468  00001B                     	ds	2
   469  00001D                     _distance_sx:
   470                           	opt stack 0
   471  00001D                     	ds	2
   472  00001F                     _left_speed:
   473                           	opt stack 0
   474  00001F                     	ds	2
   475  000021                     _pulse_time:
   476                           	opt stack 0
   477  000021                     	ds	2
   478  000023                     _right_speed:
   479                           	opt stack 0
   480  000023                     	ds	2
   481  000025                     _set_speed:
   482                           	opt stack 0
   483  000025                     	ds	2
   484  000027                     _timerValue2:
   485                           	opt stack 0
   486  000027                     	ds	2
   487  000029                     _MUX_index:
   488                           	opt stack 0
   489  000029                     	ds	1
   490  00002A                     _asus:
   491                           	opt stack 0
   492  00002A                     	ds	1
   493  00002B                     _gianni:
   494                           	opt stack 0
   495  00002B                     	ds	1
   496  00002C                     _steering_correction:
   497                           	opt stack 0
   498  00002C                     	ds	1
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	bssBANK0
   509  0000DA                     __pbssBANK0:
   510                           	opt stack 0
   511  0000DA                     _x:
   512                           	opt stack 0
   513  0000DA                     	ds	4
   514  0000DE                     _actual_speed:
   515                           	opt stack 0
   516  0000DE                     	ds	2
   517  0000E0                     _clock_counter_reference:
   518                           	opt stack 0
   519  0000E0                     	ds	2
   520  0000E2                     _distance:
   521                           	opt stack 0
   522  0000E2                     	ds	2
   523  0000E4                     _errno:
   524                           	opt stack 0
   525  0000E4                     	ds	2
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	dataBANK0
   536  0000E6                     __pdataBANK0:
   537                           	opt stack 0
   538  0000E6                     _spazio_parcheggio:
   539                           	opt stack 0
   540  0000E6                     	ds	2
   541  0000E8                     _delay_quartz_frequency_value:
   542                           	opt stack 0
   543  0000E8                     	ds	1
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	bssBANK1
   554  000100                     __pbssBANK1:
   555                           	opt stack 0
   556  000100                     _MUX_select:
   557                           	opt stack 0
   558  000100                     	ds	8
   559  000108                     _data_speed_rx:
   560                           	opt stack 0
   561  000108                     	ds	8
   562  000110                     _distance_set:
   563                           	opt stack 0
   564  000110                     	ds	8
   565  000118                     _sensor_distance_old:
   566                           	opt stack 0
   567  000118                     	ds	8
   568  000120                     _Pminimo:
   569                           	opt stack 0
   570  000120                     	ds	4
   571  000124                     _alfa:
   572                           	opt stack 0
   573  000124                     	ds	4
   574  000128                     _beta:
   575                           	opt stack 0
   576  000128                     	ds	4
   577  00012C                     _bordo:
   578                           	opt stack 0
   579  00012C                     	ds	4
   580  000130                     _jjj:
   581                           	opt stack 0
   582  000130                     	ds	4
   583  000134                     _kkk:
   584                           	opt stack 0
   585  000134                     	ds	4
   586  000138                     _n:
   587                           	opt stack 0
   588  000138                     	ds	4
   589  00013C                     _old_alignment_gap:
   590                           	opt stack 0
   591  00013C                     	ds	4
   592  000140                     _prima_sterzata:
   593                           	opt stack 0
   594  000140                     	ds	4
   595  000144                     _msg:
   596                           	opt stack 0
   597  000144                     	ds	15
   598  000153                     _data:
   599                           	opt stack 0
   600  000153                     	ds	8
   601  00015B                     _data_brake:
   602                           	opt stack 0
   603  00015B                     	ds	8
   604  000163                     _data_correction:
   605                           	opt stack 0
   606  000163                     	ds	8
   607  00016B                     _data_speed:
   608                           	opt stack 0
   609  00016B                     	ds	8
   610  000173                     _data_steering:
   611                           	opt stack 0
   612  000173                     	ds	8
   613  00017B                     _data_test:
   614                           	opt stack 0
   615  00017B                     	ds	8
   616  000183                     _sensor_distance_short:
   617                           	opt stack 0
   618  000183                     	ds	8
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           
   628                           	psect	dataBANK1
   629  0001E4                     __pdataBANK1:
   630                           	opt stack 0
   631  0001E4                     _larghezza:
   632                           	opt stack 0
   633  0001E4                     	ds	4
   634  0001E8                     _raggio:
   635                           	opt stack 0
   636  0001E8                     	ds	4
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646                           	psect	cstackBANK1
   647  00018B                     __pcstackBANK1:
   648                           	opt stack 0
   649  00018B                     ?_floor:
   650                           	opt stack 0
   651  00018B                     sqrt@sign:
   652                           	opt stack 0
   653  00018B                     atan@y:
   654                           	opt stack 0
   655  00018B                     floor@x:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x0
   659  00018B                     	ds	1
   660  00018C                     sqrt@i:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1
   664  00018C                     	ds	1
   665  00018D                     sqrt@tfrac:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x2
   669  00018D                     	ds	2
   670  00018F                     atan@x:
   671                           	opt stack 0
   672  00018F                     floor@i:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x4
   676  00018F                     	ds	2
   677  000191                     sqrt@p:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x6
   681  000191                     	ds	1
   682  000192                     sqrt@grs:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x7
   686  000192                     	ds	1
   687  000193                     atan@recip:
   688                           	opt stack 0
   689  000193                     floor@expon:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x8
   693  000193                     	ds	1
   694  000194                     atan@val_squared:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x9
   698  000194                     	ds	1
   699  000195                     ?___flsub:
   700                           	opt stack 0
   701  000195                     ___flsub@b:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0xA
   705  000195                     	ds	1
   706  000196                     sqrt@exp:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xB
   710  000196                     	ds	2
   711  000198                     atan@val:
   712                           	opt stack 0
   713  000198                     sqrt@root:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0xD
   717  000198                     	ds	1
   718  000199                     ___flsub@a:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xE
   722  000199                     	ds	3
   723  00019C                     sqrt@frac:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x11
   727  00019C                     	ds	1
   728  00019D                     ?_sin:
   729                           	opt stack 0
   730  00019D                     sin@f:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x12
   734  00019D                     	ds	3
   735  0001A0                     asin@sgn:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x15
   739  0001A0                     	ds	1
   740  0001A1                     sin@y:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x16
   744  0001A1                     	ds	3
   745  0001A4                     _asin$3755:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x19
   749  0001A4                     	ds	1
   750  0001A5                     _sin$3757:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x1A
   754  0001A5                     	ds	3
   755  0001A8                     _asin$3754:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x1D
   759  0001A8                     	ds	1
   760  0001A9                     sin@x2:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x1E
   764  0001A9                     	ds	3
   765  0001AC                     asin@y:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x21
   769  0001AC                     	ds	1
   770  0001AD                     sin@sgn:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x22
   774  0001AD                     	ds	3
   775  0001B0                     _asin$3753:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x25
   779  0001B0                     	ds	4
   780  0001B4                     ??_parallelo:
   781  0001B4                     ?_cos:
   782                           	opt stack 0
   783  0001B4                     cos@f:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x29
   787  0001B4                     	ds	2
   788  0001B6                     ??_park_search:
   789                           
   790                           ; 0 bytes @ 0x2B
   791  0001B6                     	ds	2
   792  0001B8                     _cos$3756:
   793                           	opt stack 0
   794                           
   795                           ; 4 bytes @ 0x2D
   796  0001B8                     	ds	4
   797  0001BC                     _matematica$3746:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x31
   801  0001BC                     	ds	4
   802  0001C0                     _matematica$3747:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x35
   806  0001C0                     	ds	4
   807  0001C4                     _matematica$3748:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x39
   811  0001C4                     	ds	4
   812  0001C8                     _matematica$3749:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x3D
   816  0001C8                     	ds	4
   817  0001CC                     _matematica$3751:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x41
   821  0001CC                     	ds	4
   822  0001D0                     _matematica$3752:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x45
   826  0001D0                     	ds	4
   827  0001D4                     _matematica$3750:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x49
   831  0001D4                     	ds	4
   832  0001D8                     ??_park_routine:
   833                           
   834                           ; 0 bytes @ 0x4D
   835  0001D8                     	ds	4
   836  0001DC                     _park_routine$3744:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x51
   840  0001DC                     	ds	4
   841  0001E0                     _park_routine$3745:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x55
   845  0001E0                     	ds	4
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1l	equ	0xFE1
   854                           
   855                           	psect	cstackBANK0
   856  000060                     __pcstackBANK0:
   857                           	opt stack 0
   858  000060                     ?___lwdiv:
   859                           	opt stack 0
   860  000060                     ___lwdiv@dividend:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x0
   864  000060                     	ds	2
   865  000062                     ___lwdiv@divisor:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x2
   869  000062                     	ds	2
   870  000064                     ___lwdiv@counter:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x4
   874  000064                     	ds	1
   875  000065                     ___lwdiv@quotient:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x5
   879  000065                     	ds	2
   880  000067                     ??_ISR_Alta:
   881                           
   882                           ; 0 bytes @ 0x7
   883  000067                     	ds	16
   884  000077                     ??_can_interpreter:
   885  000077                     ?_abs:
   886                           	opt stack 0
   887  000077                     ?___wmul:
   888                           	opt stack 0
   889  000077                     ?___fldiv:
   890                           	opt stack 0
   891  000077                     CANOperationMode@mode:
   892                           	opt stack 0
   893  000077                     _CANisTxReady$2845:
   894                           	opt stack 0
   895  000077                     ___wmul@multiplier:
   896                           	opt stack 0
   897  000077                     abs@a:
   898                           	opt stack 0
   899  000077                     CANsendMessage@identifier:
   900                           	opt stack 0
   901  000077                     CANSetMask@mask:
   902                           	opt stack 0
   903  000077                     CANSetFilter@filter:
   904                           	opt stack 0
   905  000077                     ___fldiv@b:
   906                           	opt stack 0
   907  000077                     frexp@value:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x17
   911  000077                     	ds	2
   912  000079                     ??_abs:
   913  000079                     ___wmul@multiplicand:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x19
   917  000079                     	ds	2
   918  00007B                     CANSetMask@type:
   919                           	opt stack 0
   920  00007B                     CANSetFilter@type:
   921                           	opt stack 0
   922  00007B                     CANsendMessage@data:
   923                           	opt stack 0
   924  00007B                     ___wmul@product:
   925                           	opt stack 0
   926  00007B                     frexp@eptr:
   927                           	opt stack 0
   928  00007B                     ___fldiv@a:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x1B
   932  00007B                     	ds	1
   933  00007C                     ??_CANSetMask:
   934  00007C                     ??_CANSetFilter:
   935                           
   936                           ; 0 bytes @ 0x1C
   937  00007C                     	ds	1
   938  00007D                     ??_frexp:
   939  00007D                     CANsendMessage@dataLength:
   940                           	opt stack 0
   941  00007D                     delay_ms@value_ms:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x1D
   945  00007D                     	ds	1
   946  00007E                     CANsendMessage@flags:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x1E
   950  00007E                     	ds	1
   951  00007F                     ??___fldiv:
   952  00007F                     ??_CANsendMessage:
   953  00007F                     delay_s@value_s:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x1F
   957  00007F                     	ds	1
   958  000080                     CANSetMask@numBuffer:
   959                           	opt stack 0
   960  000080                     CANSetFilter@numBuffer:
   961                           	opt stack 0
   962  000080                     delay_s@repeat_loop:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x20
   966  000080                     	ds	1
   967  000081                     CANSetMask@tamp:
   968                           	opt stack 0
   969  000081                     CANSetFilter@tamp:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x21
   973  000081                     	ds	2
   974  000083                     ___fldiv@sign:
   975                           	opt stack 0
   976  000083                     CANsendMessage@tamp:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x23
   980  000083                     	ds	1
   981  000084                     ___fldiv@rem:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x24
   985  000084                     	ds	1
   986  000085                     CANInitialize@phaseSeg1:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x25
   990  000085                     	ds	1
   991  000086                     CANInitialize@phaseSeg2:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x26
   995  000086                     	ds	1
   996  000087                     can_send@data_correction1:
   997                           	opt stack 0
   998  000087                     CANInitialize@SJW:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x27
  1002  000087                     	ds	1
  1003  000088                     CANInitialize@BRP:
  1004                           	opt stack 0
  1005  000088                     ___fldiv@new_exp:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x28
  1009  000088                     	ds	1
  1010  000089                     CANInitialize@flags:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x29
  1014  000089                     	ds	1
  1015  00008A                     ??_CANInitialize:
  1016  00008A                     ___fldiv@grs:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x2A
  1020  00008A                     	ds	4
  1021  00008E                     CANInitialize@propSeg:
  1022                           	opt stack 0
  1023  00008E                     ___fldiv@bexp:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x2E
  1027  00008E                     	ds	1
  1028  00008F                     CANInitialize@FilterConfig1:
  1029                           	opt stack 0
  1030  00008F                     ___fldiv@aexp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x2F
  1034  00008F                     	ds	1
  1035  000090                     ?___flmul:
  1036                           	opt stack 0
  1037  000090                     CANInitialize@FilterConfig2:
  1038                           	opt stack 0
  1039  000090                     ___flmul@b:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x30
  1043  000090                     	ds	1
  1044  000091                     
  1045                           ; 0 bytes @ 0x31
  1046  000091                     	ds	3
  1047  000094                     ___flmul@a:
  1048                           	opt stack 0
  1049                           
  1050                           ; 4 bytes @ 0x34
  1051  000094                     	ds	4
  1052  000098                     ??___flmul:
  1053                           
  1054                           ; 0 bytes @ 0x38
  1055  000098                     	ds	4
  1056  00009C                     ___flmul@sign:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x3C
  1060  00009C                     	ds	1
  1061  00009D                     ___flmul@aexp:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x3D
  1065  00009D                     	ds	1
  1066  00009E                     ___flmul@grs:
  1067                           	opt stack 0
  1068                           
  1069                           ; 4 bytes @ 0x3E
  1070  00009E                     	ds	4
  1071  0000A2                     ___flmul@bexp:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x42
  1075  0000A2                     	ds	1
  1076  0000A3                     ___flmul@prod:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x43
  1080  0000A3                     	ds	4
  1081  0000A7                     ___flmul@temp:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x47
  1085  0000A7                     	ds	2
  1086  0000A9                     ?___fladd:
  1087                           	opt stack 0
  1088  0000A9                     ___fladd@b:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x49
  1092  0000A9                     	ds	4
  1093  0000AD                     ___fladd@a:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x4D
  1097  0000AD                     	ds	4
  1098  0000B1                     ??___fladd:
  1099                           
  1100                           ; 0 bytes @ 0x51
  1101  0000B1                     	ds	8
  1102  0000B9                     ___fladd@signs:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x59
  1106  0000B9                     	ds	1
  1107  0000BA                     ___fladd@aexp:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x5A
  1111  0000BA                     	ds	1
  1112  0000BB                     ___fladd@bexp:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x5B
  1116  0000BB                     	ds	1
  1117  0000BC                     ___fladd@grs:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x5C
  1121  0000BC                     	ds	1
  1122  0000BD                     ?_eval_poly:
  1123                           	opt stack 0
  1124  0000BD                     ?___flneg:
  1125                           	opt stack 0
  1126  0000BD                     eval_poly@x:
  1127                           	opt stack 0
  1128  0000BD                     ___flneg@f1:
  1129                           	opt stack 0
  1130                           
  1131                           ; 4 bytes @ 0x5D
  1132  0000BD                     	ds	4
  1133  0000C1                     ?_sqrt:
  1134                           	opt stack 0
  1135  0000C1                     ?_fabs:
  1136                           	opt stack 0
  1137  0000C1                     ?___fltol:
  1138                           	opt stack 0
  1139  0000C1                     eval_poly@d:
  1140                           	opt stack 0
  1141  0000C1                     fabs@d:
  1142                           	opt stack 0
  1143  0000C1                     ___fltol@f1:
  1144                           	opt stack 0
  1145  0000C1                     sqrt@a:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x61
  1149  0000C1                     	ds	2
  1150  0000C3                     eval_poly@n:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x63
  1154  0000C3                     	ds	2
  1155  0000C5                     ??_sqrt:
  1156  0000C5                     ??_eval_poly:
  1157  0000C5                     ??___fltol:
  1158  0000C5                     ___flge@ff1:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x65
  1162  0000C5                     	ds	4
  1163  0000C9                     ___fltol@sign1:
  1164                           	opt stack 0
  1165  0000C9                     eval_poly@res:
  1166                           	opt stack 0
  1167  0000C9                     ___flge@ff2:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x69
  1171  0000C9                     	ds	1
  1172  0000CA                     ___fltol@exp1:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x6A
  1176  0000CA                     	ds	1
  1177  0000CB                     ?___xxtofl:
  1178                           	opt stack 0
  1179  0000CB                     ___xxtofl@val:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x6B
  1183  0000CB                     	ds	2
  1184  0000CD                     ??___flge:
  1185                           
  1186                           ; 0 bytes @ 0x6D
  1187  0000CD                     	ds	2
  1188  0000CF                     ??___xxtofl:
  1189                           
  1190                           ; 0 bytes @ 0x6F
  1191  0000CF                     	ds	2
  1192  0000D1                     ?_atan:
  1193                           	opt stack 0
  1194  0000D1                     atan@f:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x71
  1198  0000D1                     	ds	2
  1199  0000D3                     ___xxtofl@sign:
  1200                           	opt stack 0
  1201                           
  1202                           ; 1 bytes @ 0x73
  1203  0000D3                     	ds	1
  1204  0000D4                     ___xxtofl@exp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x74
  1208  0000D4                     	ds	1
  1209  0000D5                     ?_asin:
  1210                           	opt stack 0
  1211  0000D5                     asin@x:
  1212                           	opt stack 0
  1213  0000D5                     ___xxtofl@arg:
  1214                           	opt stack 0
  1215                           
  1216                           ; 4 bytes @ 0x75
  1217  0000D5                     	ds	4
  1218  0000D9                     ??_main:
  1219                           
  1220                           ; 0 bytes @ 0x79
  1221  0000D9                     	ds	1
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           postdec1	equ	0xFE5
  1229                           fsr1l	equ	0xFE1
  1230                           
  1231                           	psect	cstackCOMRAM
  1232  00002D                     __pcstackCOMRAM:
  1233                           	opt stack 0
  1234  00002D                     i1_CANisTxReady$2845:
  1235                           	opt stack 0
  1236  00002D                     CANreceiveMessage@msg:
  1237                           	opt stack 0
  1238  00002D                     i1CANsendMessage@identifier:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x0
  1242  00002D                     	ds	2
  1243  00002F                     ??_CANreceiveMessage:
  1244                           
  1245                           ; 0 bytes @ 0x2
  1246  00002F                     	ds	2
  1247  000031                     i1CANsendMessage@data:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x4
  1251  000031                     	ds	2
  1252  000033                     i1CANsendMessage@dataLength:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x6
  1256  000033                     	ds	1
  1257  000034                     i1CANsendMessage@flags:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x7
  1261  000034                     	ds	1
  1262  000035                     ??i1_CANsendMessage:
  1263                           
  1264                           ; 0 bytes @ 0x8
  1265  000035                     	ds	2
  1266  000037                     CANreceiveMessage@error:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0xA
  1270  000037                     	ds	1
  1271  000038                     CANreceiveMessage@tamp:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0xB
  1275  000038                     	ds	1
  1276  000039                     i1CANsendMessage@tamp:
  1277                           	opt stack 0
  1278                           
  1279                           ; 4 bytes @ 0xC
  1280  000039                     	ds	4
  1281  00003D                     ??_ISR_Bassa:
  1282                           
  1283                           ; 0 bytes @ 0x10
  1284  00003D                     	ds	21
  1285  000052                     ISR_Bassa@gigi:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x25
  1289  000052                     	ds	1
  1290  000053                     ISR_Bassa@i:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x26
  1294  000053                     	ds	1
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           
  1304 ;;
  1305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1306 ;;
  1307 ;; *************** function _main *****************
  1308 ;; Defined at:
  1309 ;;		line 207 in file "parcheggio.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;Total ram usage:        1 bytes
  1328 ;; Hardware stack levels required when called:   10
  1329 ;; This function calls:
  1330 ;;		_CANisTxReady
  1331 ;;		_CANsendMessage
  1332 ;;		_can_interpreter
  1333 ;;		_configurazione
  1334 ;;		_delay_ms
  1335 ;;		_park_routine
  1336 ;;		_park_search
  1337 ;; This function is called by:
  1338 ;;		Startup code after reset
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text0
  1343  00621C                     __ptext0:
  1344                           	opt stack 0
  1345  00621C                     _main:
  1346                           	opt stack 21
  1347                           
  1348                           ;parcheggio.c: 208: MUX_select[0] = 0b00000000;
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;incstack = 0
  1352  00621C  0E00               	movlw	0
  1353  00621E  0101               	movlb	1	; () banked
  1354  006220  6F00               	movwf	_MUX_select& (0+255),b
  1355                           
  1356                           ;parcheggio.c: 209: MUX_select[1] = 0b00000001;
  1357  006222  0E01               	movlw	1
  1358  006224  0101               	movlb	1	; () banked
  1359  006226  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1360                           
  1361                           ;parcheggio.c: 210: MUX_select[2] = 0b00000010;
  1362  006228  0E02               	movlw	2
  1363  00622A  0101               	movlb	1	; () banked
  1364  00622C  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1365                           
  1366                           ;parcheggio.c: 211: MUX_select[3] = 0b00000011;
  1367  00622E  0E03               	movlw	3
  1368  006230  0101               	movlb	1	; () banked
  1369  006232  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1370                           
  1371                           ;parcheggio.c: 212: MUX_select[4] = 0b00000100;
  1372  006234  0E04               	movlw	4
  1373  006236  0101               	movlb	1	; () banked
  1374  006238  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1375                           
  1376                           ;parcheggio.c: 213: MUX_select[5] = 0b00000101;
  1377  00623A  0E05               	movlw	5
  1378  00623C  0101               	movlb	1	; () banked
  1379  00623E  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1380                           
  1381                           ;parcheggio.c: 214: MUX_select[6] = 0b00000110;
  1382  006240  0E06               	movlw	6
  1383  006242  0101               	movlb	1	; () banked
  1384  006244  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1385                           
  1386                           ;parcheggio.c: 215: MUX_select[7] = 0b00000111;
  1387  006246  0E07               	movlw	7
  1388  006248  0101               	movlb	1	; () banked
  1389  00624A  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;parcheggio.c: 216: emergency = 0;
  1393  00624C  9055               	bcf	_emergency/(0+8),_emergency& (0+7),c	;volatile
  1394                           
  1395                           ; BSR set to: 1
  1396                           ;parcheggio.c: 217: configurazione();
  1397  00624E  EC29  F032         	call	_configurazione	;wreg free
  1398                           
  1399                           ;parcheggio.c: 218: PORTBbits.RB4 = 0;
  1400  006252  9881               	bcf	3969,4,c	;volatile
  1401                           
  1402                           ;parcheggio.c: 219: PORTBbits.RB5 = 0;
  1403  006254  9A81               	bcf	3969,5,c	;volatile
  1404                           
  1405                           ;parcheggio.c: 220: PORTBbits.RB6 = 0;
  1406  006256  9C81               	bcf	3969,6,c	;volatile
  1407                           
  1408                           ;parcheggio.c: 221: request_sent = 0;
  1409  006258  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1410                           
  1411                           ;parcheggio.c: 222: start_operation = 0;
  1412  00625A  9C55               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1413                           
  1414                           ;parcheggio.c: 225: while (activation != 1) {
  1415                           
  1416                           ;parcheggio.c: 224: while (1) {
  1417  00625C  D033               	goto	l8710
  1418  00625E                     l8702:
  1419                           
  1420                           ;parcheggio.c: 226: delay_ms(100);
  1421  00625E  0E00               	movlw	0
  1422  006260  0100               	movlb	0	; () banked
  1423  006262  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1424  006264  0E64               	movlw	100
  1425  006266  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1426  006268  ECCC  F032         	call	_delay_ms	;wreg free
  1427  00626C                     l8704:
  1428  00626C  EC4C  F033         	call	_CANisTxReady	;wreg free
  1429  006270  0900               	iorlw	0
  1430  006272  B4D8               	btfsc	status,2,c
  1431  006274  D7FB               	goto	l8704
  1432                           
  1433                           ;parcheggio.c: 228: PORTBbits.RB4 = ~PORTBbits.RB4;
  1434  006276  A881               	btfss	3969,4,c	;volatile
  1435  006278  D002               	goto	u11620
  1436  00627A  0E01               	movlw	1
  1437  00627C  D001               	goto	u11626
  1438  00627E                     u11620:
  1439  00627E  0E00               	movlw	0
  1440  006280                     u11626:
  1441  006280  0AFF               	xorlw	255
  1442  006282  0100               	movlb	0	; () banked
  1443  006284  6FD9               	movwf	??_main& (0+255),b
  1444  006286  0100               	movlb	0	; () banked
  1445  006288  3BD9               	swapf	??_main& (0+255),f,b
  1446  00628A  5081               	movf	3969,w,c	;volatile
  1447  00628C  0100               	movlb	0	; () banked
  1448  00628E  19D9               	xorwf	??_main& (0+255),w,b
  1449  006290  0BEF               	andlw	-17
  1450  006292  19D9               	xorwf	??_main& (0+255),w,b
  1451  006294  6E81               	movwf	3969,c	;volatile
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;parcheggio.c: 229: CANsendMessage(0xAA, sensor_distance_short, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1455  006296  0EAA               	movlw	170
  1456  006298  0100               	movlb	0	; () banked
  1457  00629A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1458  00629C  0E00               	movlw	0
  1459  00629E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1460  0062A0  0E00               	movlw	0
  1461  0062A2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1462  0062A4  0E00               	movlw	0
  1463  0062A6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1464  0062A8  0E83               	movlw	low _sensor_distance_short
  1465  0062AA  0100               	movlb	0	; () banked
  1466  0062AC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1467  0062AE  0E01               	movlw	high _sensor_distance_short
  1468  0062B0  0100               	movlb	0	; () banked
  1469  0062B2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1470  0062B4  0E08               	movlw	8
  1471  0062B6  0100               	movlb	0	; () banked
  1472  0062B8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1473  0062BA  0EFC               	movlw	252
  1474  0062BC  0100               	movlb	0	; () banked
  1475  0062BE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1476  0062C0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1477  0062C4                     l8710:
  1478  0062C4  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1479  0062C6  D7CB               	goto	l8702
  1480                           
  1481                           ;parcheggio.c: 245: }
  1482                           ;parcheggio.c: 246: park_search();
  1483  0062C8  EC46  F02C         	call	_park_search	;wreg free
  1484                           
  1485                           ;parcheggio.c: 247: can_interpreter();
  1486  0062CC  EC5F  F032         	call	_can_interpreter	;wreg free
  1487                           
  1488                           ;parcheggio.c: 248: park_routine();
  1489  0062D0  EC2C  F01D         	call	_park_routine	;wreg free
  1490  0062D4  D7F7               	goto	l8710
  1491  0062D6                     __end_of_main:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           postdec1	equ	0xFE5
  1500                           fsr1l	equ	0xFE1
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _park_search *****************
  1504 ;; Defined at:
  1505 ;;		line 252 in file "parcheggio.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;Total ram usage:        2 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    9
  1526 ;; This function calls:
  1527 ;;		_CANisTxReady
  1528 ;;		_CANsendMessage
  1529 ;;		___xxtofl
  1530 ;;		_abs
  1531 ;;		_parallelo
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text1
  1538  00588C                     __ptext1:
  1539                           	opt stack 0
  1540  00588C                     _park_search:
  1541                           	opt stack 21
  1542                           
  1543                           ;parcheggio.c: 253: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1544                           
  1545                           ;incstack = 0
  1546  00588C  D0DA               	goto	l747
  1547  00588E                     l8088:
  1548                           
  1549                           ;parcheggio.c: 254: parallelo();
  1550  00588E  EC11  F028         	call	_parallelo	;wreg free
  1551                           
  1552                           ;parcheggio.c: 255: if (sensor_distance[0] > 50) {
  1553  005892  5002               	movf	_sensor_distance+1,w,c	;volatile
  1554  005894  E104               	bnz	u10620
  1555  005896  0E33               	movlw	51
  1556  005898  5C01               	subwf	_sensor_distance,w,c	;volatile
  1557  00589A  A0D8               	btfss	status,0,c
  1558  00589C  D029               	goto	l749
  1559  00589E                     u10620:
  1560                           
  1561                           ;parcheggio.c: 256: if (request_sent == 0) {
  1562  00589E  B855               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1563  0058A0  D056               	goto	l8108
  1564  0058A2                     l8096:
  1565  0058A2  EC4C  F033         	call	_CANisTxReady	;wreg free
  1566  0058A6  0900               	iorlw	0
  1567  0058A8  B4D8               	btfsc	status,2,c
  1568  0058AA  D7FB               	goto	l8096
  1569                           
  1570                           ;parcheggio.c: 258: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1571  0058AC  0E08               	movlw	8
  1572  0058AE  0100               	movlb	0	; () banked
  1573  0058B0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1574  0058B2  0E00               	movlw	0
  1575  0058B4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1576  0058B6  0E00               	movlw	0
  1577  0058B8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1578  0058BA  0E00               	movlw	0
  1579  0058BC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1580  0058BE  0E53               	movlw	low _data
  1581  0058C0  0100               	movlb	0	; () banked
  1582  0058C2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1583  0058C4  0E01               	movlw	high _data
  1584  0058C6  0100               	movlb	0	; () banked
  1585  0058C8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1586  0058CA  0E08               	movlw	8
  1587  0058CC  0100               	movlb	0	; () banked
  1588  0058CE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1589  0058D0  0EFC               	movlw	252
  1590  0058D2  0100               	movlb	0	; () banked
  1591  0058D4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1592  0058D6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1593                           
  1594                           ;parcheggio.c: 259: request_sent = 1;
  1595  0058DA  8855               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1596                           
  1597                           ;parcheggio.c: 260: alignment_gap = 0;
  1598  0058DC  0E00               	movlw	0
  1599  0058DE  6E11               	movwf	_alignment_gap,c
  1600  0058E0  0E00               	movlw	0
  1601  0058E2  6E12               	movwf	_alignment_gap+1,c
  1602  0058E4  0E00               	movlw	0
  1603  0058E6  6E13               	movwf	_alignment_gap+2,c
  1604  0058E8  0E00               	movlw	0
  1605  0058EA  6E14               	movwf	_alignment_gap+3,c
  1606                           
  1607                           ;parcheggio.c: 261: LATBbits.LATB4 = 1;
  1608  0058EC  888A               	bsf	3978,4,c	;volatile
  1609                           
  1610                           ;parcheggio.c: 262: }
  1611                           ;parcheggio.c: 263: } else {
  1612  0058EE  D02F               	goto	l8108
  1613  0058F0                     l749:
  1614                           
  1615                           ;parcheggio.c: 264: LATBbits.LATB4 = 0;
  1616  0058F0  988A               	bcf	3978,4,c	;volatile
  1617                           
  1618                           ;parcheggio.c: 265: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1619  0058F2  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1620  0058F6  CFDE F1B6          	movff	postinc2,??_park_search
  1621  0058FA  CFDD F1B7          	movff	postdec2,??_park_search+1
  1622  0058FE  0101               	movlb	1	; () banked
  1623  005900  1FB6               	comf	??_park_search& (0+255),f,b
  1624  005902  1FB7               	comf	(??_park_search+1)& (0+255),f,b
  1625  005904  4BB6               	infsnz	??_park_search& (0+255),f,b
  1626  005906  2BB7               	incf	(??_park_search+1)& (0+255),f,b
  1627  005908  5001               	movf	_sensor_distance,w,c	;volatile
  1628  00590A  0101               	movlb	1	; () banked
  1629  00590C  25B6               	addwf	??_park_search& (0+255),w,b
  1630  00590E  0100               	movlb	0	; () banked
  1631  005910  6F77               	movwf	abs@a& (0+255),b
  1632  005912  5002               	movf	_sensor_distance+1,w,c	;volatile
  1633  005914  0101               	movlb	1	; () banked
  1634  005916  21B7               	addwfc	(??_park_search+1)& (0+255),w,b
  1635  005918  0100               	movlb	0	; () banked
  1636  00591A  6F78               	movwf	(abs@a+1)& (0+255),b
  1637  00591C  EC20  F033         	call	_abs	;wreg free
  1638  005920  0100               	movlb	0	; () banked
  1639  005922  C077  F0CB         	movff	?_abs,___xxtofl@val
  1640  005926  0100               	movlb	0	; () banked
  1641  005928  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1642  00592C  0100               	movlb	0	; () banked
  1643  00592E  0E00               	movlw	0
  1644  005930  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1645  005932  0EFF               	movlw	-1
  1646  005934  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1647  005936  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1648  005938  0E01               	movlw	1
  1649  00593A  EC7C  F02A         	call	___xxtofl
  1650  00593E  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  1651  005942  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  1652  005946  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  1653  00594A  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  1654  00594E                     l8108:
  1655                           
  1656                           ;parcheggio.c: 266: }
  1657                           ;parcheggio.c: 267: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1658  00594E  5002               	movf	_sensor_distance+1,w,c	;volatile
  1659  005950  E128               	bnz	l8120
  1660  005952  0E32               	movlw	50
  1661  005954  5C01               	subwf	_sensor_distance,w,c	;volatile
  1662  005956  A0D8               	btfss	status,0,c
  1663  005958  A855               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1664  00595A  D023               	goto	l8120
  1665  00595C  5004               	movf	_sensor_distance+3,w,c	;volatile
  1666  00595E  E121               	bnz	l8120
  1667  005960  0E32               	movlw	50
  1668  005962  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  1669  005964  B0D8               	btfsc	status,0,c
  1670  005966  D01D               	goto	l8120
  1671                           
  1672                           ;parcheggio.c: 268: request_sent = 0;
  1673  005968  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1674  00596A                     l8116:
  1675  00596A  EC4C  F033         	call	_CANisTxReady	;wreg free
  1676  00596E  0900               	iorlw	0
  1677  005970  B4D8               	btfsc	status,2,c
  1678  005972  D7FB               	goto	l8116
  1679                           
  1680                           ;parcheggio.c: 270: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1681  005974  0E07               	movlw	7
  1682  005976  0100               	movlb	0	; () banked
  1683  005978  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1684  00597A  0E00               	movlw	0
  1685  00597C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1686  00597E  0E00               	movlw	0
  1687  005980  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1688  005982  0E00               	movlw	0
  1689  005984  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1690  005986  0E53               	movlw	low _data
  1691  005988  0100               	movlb	0	; () banked
  1692  00598A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1693  00598C  0E01               	movlw	high _data
  1694  00598E  0100               	movlb	0	; () banked
  1695  005990  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1696  005992  0E08               	movlw	8
  1697  005994  0100               	movlb	0	; () banked
  1698  005996  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1699  005998  0EFC               	movlw	252
  1700  00599A  0100               	movlb	0	; () banked
  1701  00599C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1702  00599E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1703  0059A2                     l8120:
  1704                           
  1705                           ;parcheggio.c: 271: }
  1706                           ;parcheggio.c: 272: if (distance_received == 1) {
  1707  0059A2  AA54               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1708  0059A4  D04E               	goto	l747
  1709                           
  1710                           ;parcheggio.c: 273: if (distance_average > 65) {
  1711  0059A6  501A               	movf	_distance_average+1,w,c	;volatile
  1712  0059A8  E104               	bnz	u10700
  1713  0059AA  0E42               	movlw	66
  1714  0059AC  5C19               	subwf	_distance_average,w,c	;volatile
  1715  0059AE  A0D8               	btfss	status,0,c
  1716  0059B0  D046               	goto	l760
  1717  0059B2                     u10700:
  1718                           
  1719                           ;parcheggio.c: 274: PORTBbits.RB5 = 1;
  1720  0059B2  8A81               	bsf	3969,5,c	;volatile
  1721                           
  1722                           ;parcheggio.c: 275: data[0] = 1;
  1723  0059B4  0E01               	movlw	1
  1724  0059B6  0101               	movlb	1	; () banked
  1725  0059B8  6F53               	movwf	_data& (0+255),b
  1726                           
  1727                           ; BSR set to: 1
  1728                           ;parcheggio.c: 276: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1729  0059BA  0E0B               	movlw	11
  1730  0059BC  0100               	movlb	0	; () banked
  1731  0059BE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1732  0059C0  0E00               	movlw	0
  1733  0059C2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1734  0059C4  0E00               	movlw	0
  1735  0059C6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1736  0059C8  0E00               	movlw	0
  1737  0059CA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1738  0059CC  0E53               	movlw	low _data
  1739  0059CE  0100               	movlb	0	; () banked
  1740  0059D0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1741  0059D2  0E01               	movlw	high _data
  1742  0059D4  0100               	movlb	0	; () banked
  1743  0059D6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1744  0059D8  0E01               	movlw	1
  1745  0059DA  0100               	movlb	0	; () banked
  1746  0059DC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1747  0059DE  0EBC               	movlw	188
  1748  0059E0  0100               	movlb	0	; () banked
  1749  0059E2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1750  0059E4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1751                           
  1752                           ;parcheggio.c: 277: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1753  0059E8  BA55               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1754  0059EA  D02B               	goto	l747
  1755  0059EC  5002               	movf	_sensor_distance+1,w,c	;volatile
  1756  0059EE  E129               	bnz	l747
  1757  0059F0  0E28               	movlw	40
  1758  0059F2  5C01               	subwf	_sensor_distance,w,c	;volatile
  1759  0059F4  B0D8               	btfsc	status,0,c
  1760  0059F6  D025               	goto	l747
  1761                           
  1762                           ;parcheggio.c: 278: data_test[0] = 50;
  1763  0059F8  0E32               	movlw	50
  1764  0059FA  0101               	movlb	1	; () banked
  1765  0059FC  6F7B               	movwf	_data_test& (0+255),b
  1766                           
  1767                           ; BSR set to: 1
  1768                           ;parcheggio.c: 279: asd = 1;
  1769  0059FE  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1770  005A00                     l8138:
  1771  005A00  EC4C  F033         	call	_CANisTxReady	;wreg free
  1772  005A04  0900               	iorlw	0
  1773  005A06  B4D8               	btfsc	status,2,c
  1774  005A08  D7FB               	goto	l8138
  1775                           
  1776                           ;parcheggio.c: 281: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1777  005A0A  0E0D               	movlw	13
  1778  005A0C  0100               	movlb	0	; () banked
  1779  005A0E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1780  005A10  0E00               	movlw	0
  1781  005A12  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1782  005A14  0E00               	movlw	0
  1783  005A16  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1784  005A18  0E00               	movlw	0
  1785  005A1A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1786  005A1C  0E7B               	movlw	low _data_test
  1787  005A1E  0100               	movlb	0	; () banked
  1788  005A20  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1789  005A22  0E01               	movlw	high _data_test
  1790  005A24  0100               	movlb	0	; () banked
  1791  005A26  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1792  005A28  0E08               	movlw	8
  1793  005A2A  0100               	movlb	0	; () banked
  1794  005A2C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1795  005A2E  0EBC               	movlw	188
  1796  005A30  0100               	movlb	0	; () banked
  1797  005A32  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1798  005A34  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1799                           
  1800                           ;parcheggio.c: 283: distance_received1 = 0;
  1801  005A38  9C54               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1802                           
  1803                           ;parcheggio.c: 284: request_sent1 = 1;
  1804  005A3A  8A55               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1805                           
  1806                           ;parcheggio.c: 285: }
  1807                           ;parcheggio.c: 286: } else {
  1808  005A3C  D002               	goto	l747
  1809  005A3E                     l760:
  1810                           
  1811                           ;parcheggio.c: 287: distance_received = 0;
  1812  005A3E  9A54               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1813                           
  1814                           ;parcheggio.c: 288: PORTBbits.RB5 = 0;
  1815  005A40  9A81               	bcf	3969,5,c	;volatile
  1816  005A42                     l747:
  1817  005A42  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1818  005A44  0012               	return	
  1819  005A46  BA81               	btfsc	3969,5,c	;volatile
  1820  005A48  0012               	return	
  1821  005A4A  D721               	goto	l8088
  1822  005A4C                     __end_of_park_search:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           postdec1	equ	0xFE5
  1831                           fsr1l	equ	0xFE1
  1832                           postinc2	equ	0xFDE
  1833                           postdec2	equ	0xFDD
  1834                           status	equ	0xFD8
  1835                           
  1836 ;; *************** function _park_routine *****************
  1837 ;; Defined at:
  1838 ;;		line 294 in file "parcheggio.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;		None               void
  1845 ;; Registers used:
  1846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;Total ram usage:       12 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    9
  1859 ;; This function calls:
  1860 ;;		_CANisTxReady
  1861 ;;		_CANsendMessage
  1862 ;;		___fladd
  1863 ;;		___flneg
  1864 ;;		___fltol
  1865 ;;		___xxtofl
  1866 ;;		_can_send
  1867 ;;		_delay_ms
  1868 ;;		_delay_s
  1869 ;;		_matematica
  1870 ;;		_parallelo
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text2
  1877  003A58                     __ptext2:
  1878                           	opt stack 0
  1879  003A58                     _park_routine:
  1880                           	opt stack 21
  1881                           
  1882                           ;parcheggio.c: 295: data_correction[0] = 0;
  1883                           
  1884                           ;incstack = 0
  1885  003A58  0E00               	movlw	0
  1886  003A5A  0101               	movlb	1	; () banked
  1887  003A5C  6F63               	movwf	_data_correction& (0+255),b
  1888                           
  1889                           ;parcheggio.c: 296: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1890  003A5E  D03E               	goto	l8164
  1891  003A60                     l8150:
  1892                           
  1893                           ;parcheggio.c: 297: delay_ms(200);
  1894  003A60  0E00               	movlw	0
  1895  003A62  0100               	movlb	0	; () banked
  1896  003A64  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1897  003A66  0EC8               	movlw	200
  1898  003A68  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1899  003A6A  ECCC  F032         	call	_delay_ms	;wreg free
  1900                           
  1901                           ;parcheggio.c: 298: PORTBbits.RB6 = ~PORTBbits.RB6;
  1902  003A6E  AC81               	btfss	3969,6,c	;volatile
  1903  003A70  D002               	goto	u10760
  1904  003A72  0E01               	movlw	1
  1905  003A74  D001               	goto	u10766
  1906  003A76                     u10760:
  1907  003A76  0E00               	movlw	0
  1908  003A78                     u10766:
  1909  003A78  0AFF               	xorlw	255
  1910  003A7A  0101               	movlb	1	; () banked
  1911  003A7C  6FD8               	movwf	??_park_routine& (0+255),b
  1912  003A7E  0101               	movlb	1	; () banked
  1913  003A80  3BD8               	swapf	??_park_routine& (0+255),f,b
  1914  003A82  47D8               	rlncf	??_park_routine& (0+255),f,b
  1915  003A84  47D8               	rlncf	??_park_routine& (0+255),f,b
  1916  003A86  5081               	movf	3969,w,c	;volatile
  1917  003A88  0101               	movlb	1	; () banked
  1918  003A8A  19D8               	xorwf	??_park_routine& (0+255),w,b
  1919  003A8C  0BBF               	andlw	-65
  1920  003A8E  19D8               	xorwf	??_park_routine& (0+255),w,b
  1921  003A90  6E81               	movwf	3969,c	;volatile
  1922                           
  1923                           ; BSR set to: 1
  1924                           ;parcheggio.c: 299: parallelo();
  1925  003A92  EC11  F028         	call	_parallelo	;wreg free
  1926                           
  1927                           ;parcheggio.c: 300: if (data_correction[0] > 50) {
  1928  003A96  0E32               	movlw	50
  1929  003A98  0101               	movlb	1	; () banked
  1930  003A9A  6563               	cpfsgt	_data_correction& (0+255),b
  1931  003A9C  D003               	goto	l8160
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;parcheggio.c: 301: data_correction[0] = 0;
  1935  003A9E  0E00               	movlw	0
  1936  003AA0  0101               	movlb	1	; () banked
  1937  003AA2  6F63               	movwf	_data_correction& (0+255),b
  1938  003AA4                     l8160:
  1939  003AA4  EC4C  F033         	call	_CANisTxReady	;wreg free
  1940  003AA8  0900               	iorlw	0
  1941  003AAA  B4D8               	btfsc	status,2,c
  1942  003AAC  D7FB               	goto	l8160
  1943                           
  1944                           ;parcheggio.c: 304: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1945  003AAE  0E0E               	movlw	14
  1946  003AB0  0100               	movlb	0	; () banked
  1947  003AB2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1948  003AB4  0E00               	movlw	0
  1949  003AB6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1950  003AB8  0E00               	movlw	0
  1951  003ABA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1952  003ABC  0E00               	movlw	0
  1953  003ABE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1954  003AC0  0E63               	movlw	low _data_correction
  1955  003AC2  0100               	movlb	0	; () banked
  1956  003AC4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1957  003AC6  0E01               	movlw	high _data_correction
  1958  003AC8  0100               	movlb	0	; () banked
  1959  003ACA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1960  003ACC  0E08               	movlw	8
  1961  003ACE  0100               	movlb	0	; () banked
  1962  003AD0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1963  003AD2  0EBC               	movlw	188
  1964  003AD4  0100               	movlb	0	; () banked
  1965  003AD6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1966  003AD8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1967  003ADC                     l8164:
  1968  003ADC  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1969  003ADE  AA81               	btfss	3969,5,c	;volatile
  1970  003AE0  D002               	goto	l780
  1971  003AE2  B054               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1972  003AE4  D7BD               	goto	l8150
  1973  003AE6                     l780:
  1974                           
  1975                           ;parcheggio.c: 305: }
  1976                           ;parcheggio.c: 306: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1977  003AE6  BA81               	btfsc	3969,5,c	;volatile
  1978  003AE8  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1979  003AEA  D02E               	goto	l8184
  1980                           
  1981                           ;parcheggio.c: 307: PORTBbits.RB6 = 0;
  1982  003AEC  9C81               	bcf	3969,6,c	;volatile
  1983                           
  1984                           ;parcheggio.c: 308: data[0] = 2;
  1985  003AEE  0E02               	movlw	2
  1986  003AF0  0101               	movlb	1	; () banked
  1987  003AF2  6F53               	movwf	_data& (0+255),b
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;parcheggio.c: 309: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1991  003AF4  0E0B               	movlw	11
  1992  003AF6  0100               	movlb	0	; () banked
  1993  003AF8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1994  003AFA  0E00               	movlw	0
  1995  003AFC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1996  003AFE  0E00               	movlw	0
  1997  003B00  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1998  003B02  0E00               	movlw	0
  1999  003B04  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2000  003B06  0E53               	movlw	low _data
  2001  003B08  0100               	movlb	0	; () banked
  2002  003B0A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2003  003B0C  0E01               	movlw	high _data
  2004  003B0E  0100               	movlb	0	; () banked
  2005  003B10  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2006  003B12  0E01               	movlw	1
  2007  003B14  0100               	movlb	0	; () banked
  2008  003B16  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2009  003B18  0EBC               	movlw	188
  2010  003B1A  0100               	movlb	0	; () banked
  2011  003B1C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2012  003B1E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2013                           
  2014                           ;parcheggio.c: 310: }
  2015                           ;parcheggio.c: 311: while ((start_operation != 1)&&(activation == 1)) {
  2016  003B22  D012               	goto	l8184
  2017  003B24                     l783:
  2018                           
  2019                           ;parcheggio.c: 312: if (first == 0) {
  2020  003B24  B255               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2021  003B26  D010               	goto	l8184
  2022                           
  2023                           ;parcheggio.c: 313: set_speed = 0;
  2024  003B28  0E00               	movlw	0
  2025  003B2A  6E26               	movwf	_set_speed+1,c
  2026  003B2C  0E00               	movlw	0
  2027  003B2E  6E25               	movwf	_set_speed,c
  2028                           
  2029                           ;parcheggio.c: 314: data_steering[0] = 90;
  2030  003B30  0E5A               	movlw	90
  2031  003B32  0101               	movlb	1	; () banked
  2032  003B34  6F73               	movwf	_data_steering& (0+255),b
  2033                           
  2034                           ;parcheggio.c: 315: data_brake [0] = 0;
  2035  003B36  0E00               	movlw	0
  2036  003B38  0101               	movlb	1	; () banked
  2037  003B3A  6F5B               	movwf	_data_brake& (0+255),b
  2038                           
  2039                           ;parcheggio.c: 316: data_brake [1] = 1;
  2040  003B3C  0E01               	movlw	1
  2041  003B3E  0101               	movlb	1	; () banked
  2042  003B40  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2043                           
  2044                           ; BSR set to: 1
  2045                           ;parcheggio.c: 317: can_send();
  2046  003B42  ECEE  F02D         	call	_can_send	;wreg free
  2047                           
  2048                           ;parcheggio.c: 318: first = 1;
  2049  003B46  8255               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2050  003B48                     l8184:
  2051  003B48  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2052  003B4A  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2053  003B4C  D1BA               	goto	l8294
  2054  003B4E  D7EA               	goto	l783
  2055  003B50                     l789:
  2056                           
  2057                           ;parcheggio.c: 322: LATBbits.LATB4 = 1;
  2058  003B50  888A               	bsf	3978,4,c	;volatile
  2059                           
  2060                           ;parcheggio.c: 324: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2061  003B52  5001               	movf	_sensor_distance,w,c	;volatile
  2062  003B54  2403               	addwf	_sensor_distance+2,w,c	;volatile
  2063  003B56  0101               	movlb	1	; () banked
  2064  003B58  6FD8               	movwf	??_park_routine& (0+255),b
  2065  003B5A  5002               	movf	_sensor_distance+1,w,c	;volatile
  2066  003B5C  2004               	addwfc	_sensor_distance+3,w,c	;volatile
  2067  003B5E  0101               	movlb	1	; () banked
  2068  003B60  6FD9               	movwf	(??_park_routine+1)& (0+255),b
  2069  003B62  90D8               	bcf	status,0,c
  2070  003B64  0101               	movlb	1	; () banked
  2071  003B66  31D9               	rrcf	(??_park_routine+1)& (0+255),w,b
  2072  003B68  0101               	movlb	1	; () banked
  2073  003B6A  6FDB               	movwf	(??_park_routine+3)& (0+255),b
  2074  003B6C  0101               	movlb	1	; () banked
  2075  003B6E  31D8               	rrcf	??_park_routine& (0+255),w,b
  2076  003B70  0101               	movlb	1	; () banked
  2077  003B72  6FDA               	movwf	(??_park_routine+2)& (0+255),b
  2078  003B74  C1DA  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2079  003B78  C1DB  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2080  003B7C  0100               	movlb	0	; () banked
  2081  003B7E  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2082  003B80  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2083  003B82  0E00               	movlw	0
  2084  003B84  EC7C  F02A         	call	___xxtofl
  2085  003B88  C0CB  F12C         	movff	?___xxtofl,_bordo	;volatile
  2086  003B8C  C0CC  F12D         	movff	?___xxtofl+1,_bordo+1	;volatile
  2087  003B90  C0CD  F12E         	movff	?___xxtofl+2,_bordo+2	;volatile
  2088  003B94  C0CE  F12F         	movff	?___xxtofl+3,_bordo+3	;volatile
  2089                           
  2090                           ;parcheggio.c: 325: matematica();
  2091  003B98  EC3A  F013         	call	_matematica	;wreg free
  2092                           
  2093                           ;parcheggio.c: 326: set_speed = 0;
  2094  003B9C  0E00               	movlw	0
  2095  003B9E  6E26               	movwf	_set_speed+1,c
  2096  003BA0  0E00               	movlw	0
  2097  003BA2  6E25               	movwf	_set_speed,c
  2098                           
  2099                           ;parcheggio.c: 327: data_steering[0] = 90;
  2100  003BA4  0E5A               	movlw	90
  2101  003BA6  0101               	movlb	1	; () banked
  2102  003BA8  6F73               	movwf	_data_steering& (0+255),b
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;parcheggio.c: 328: data_brake [0] = 0;
  2106  003BAA  0E00               	movlw	0
  2107  003BAC  0101               	movlb	1	; () banked
  2108  003BAE  6F5B               	movwf	_data_brake& (0+255),b
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;parcheggio.c: 329: data_brake [1] = 1;
  2112  003BB0  0E01               	movlw	1
  2113  003BB2  0101               	movlb	1	; () banked
  2114  003BB4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;parcheggio.c: 330: can_send();
  2118  003BB6  ECEE  F02D         	call	_can_send	;wreg free
  2119                           
  2120                           ;parcheggio.c: 331: delay_s(1);
  2121  003BBA  0E01               	movlw	1
  2122  003BBC  EC36  F033         	call	_delay_s
  2123                           
  2124                           ;parcheggio.c: 333: data_brake [0] = 3;
  2125  003BC0  0E03               	movlw	3
  2126  003BC2  0101               	movlb	1	; () banked
  2127  003BC4  6F5B               	movwf	_data_brake& (0+255),b
  2128                           
  2129                           ; BSR set to: 1
  2130                           ;parcheggio.c: 334: data_brake [1] = 1;
  2131  003BC6  0E01               	movlw	1
  2132  003BC8  0101               	movlb	1	; () banked
  2133  003BCA  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;parcheggio.c: 336: set_speed = 1000;
  2137  003BCC  0E03               	movlw	3
  2138  003BCE  6E26               	movwf	_set_speed+1,c
  2139  003BD0  0EE8               	movlw	232
  2140  003BD2  6E25               	movwf	_set_speed,c
  2141                           
  2142                           ; BSR set to: 1
  2143                           ;parcheggio.c: 337: dir = 0;
  2144  003BD4  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;parcheggio.c: 338: data_steering[0] = 90;
  2148  003BD6  0E5A               	movlw	90
  2149  003BD8  0101               	movlb	1	; () banked
  2150  003BDA  6F73               	movwf	_data_steering& (0+255),b
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;parcheggio.c: 339: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2154  003BDC  0E00               	movlw	0
  2155  003BDE  0100               	movlb	0	; () banked
  2156  003BE0  6FAD               	movwf	___fladd@a& (0+255),b
  2157  003BE2  0E00               	movlw	0
  2158  003BE4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2159  003BE6  0E70               	movlw	112
  2160  003BE8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2161  003BEA  0E41               	movlw	65
  2162  003BEC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2163  003BEE  C138  F0A9         	movff	_n,___fladd@b
  2164  003BF2  C139  F0AA         	movff	_n+1,___fladd@b+1
  2165  003BF6  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2166  003BFA  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2167  003BFE  EC85  F018         	call	___fladd	;wreg free
  2168  003C02  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2169  003C06  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2170  003C0A  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2171  003C0E  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2172  003C12  ECE9  F032         	call	___flneg	;wreg free
  2173  003C16  C0BD  F1DC         	movff	?___flneg,_park_routine$3744
  2174  003C1A  C0BE  F1DD         	movff	?___flneg+1,_park_routine$3744+1
  2175  003C1E  C0BF  F1DE         	movff	?___flneg+2,_park_routine$3744+2
  2176  003C22  C0C0  F1DF         	movff	?___flneg+3,_park_routine$3744+3
  2177                           
  2178                           ;parcheggio.c: 339: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2179  003C26  C120  F0AD         	movff	_Pminimo,___fladd@a
  2180  003C2A  C121  F0AE         	movff	_Pminimo+1,___fladd@a+1
  2181  003C2E  C122  F0AF         	movff	_Pminimo+2,___fladd@a+2
  2182  003C32  C123  F0B0         	movff	_Pminimo+3,___fladd@a+3
  2183  003C36  C1DC  F0A9         	movff	_park_routine$3744,___fladd@b
  2184  003C3A  C1DD  F0AA         	movff	_park_routine$3744+1,___fladd@b+1
  2185  003C3E  C1DE  F0AB         	movff	_park_routine$3744+2,___fladd@b+2
  2186  003C42  C1DF  F0AC         	movff	_park_routine$3744+3,___fladd@b+3
  2187  003C46  EC85  F018         	call	___fladd	;wreg free
  2188  003C4A  C0A9  F1E0         	movff	?___fladd,_park_routine$3745
  2189  003C4E  C0AA  F1E1         	movff	?___fladd+1,_park_routine$3745+1
  2190  003C52  C0AB  F1E2         	movff	?___fladd+2,_park_routine$3745+2
  2191  003C56  C0AC  F1E3         	movff	?___fladd+3,_park_routine$3745+3
  2192                           
  2193                           ;parcheggio.c: 339: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2194  003C5A  0E00               	movlw	0
  2195  003C5C  0100               	movlb	0	; () banked
  2196  003C5E  6FAD               	movwf	___fladd@a& (0+255),b
  2197  003C60  0E00               	movlw	0
  2198  003C62  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2199  003C64  0E5C               	movlw	92
  2200  003C66  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2201  003C68  0E42               	movlw	66
  2202  003C6A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2203  003C6C  C1E0  F0A9         	movff	_park_routine$3745,___fladd@b
  2204  003C70  C1E1  F0AA         	movff	_park_routine$3745+1,___fladd@b+1
  2205  003C74  C1E2  F0AB         	movff	_park_routine$3745+2,___fladd@b+2
  2206  003C78  C1E3  F0AC         	movff	_park_routine$3745+3,___fladd@b+3
  2207  003C7C  EC85  F018         	call	___fladd	;wreg free
  2208  003C80  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2209  003C84  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2210  003C88  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2211  003C8C  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2212  003C90  ECA6  F02F         	call	___fltol	;wreg free
  2213  003C94  0100               	movlb	0	; () banked
  2214  003C96  51C1               	movf	?___fltol& (0+255),w,b
  2215  003C98  0101               	movlb	1	; () banked
  2216  003C9A  6F7B               	movwf	_data_test& (0+255),b
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;parcheggio.c: 340: asd = 1;
  2220  003C9C  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;parcheggio.c: 341: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2224  003C9E  0E0D               	movlw	13
  2225  003CA0  0100               	movlb	0	; () banked
  2226  003CA2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2227  003CA4  0E00               	movlw	0
  2228  003CA6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2229  003CA8  0E00               	movlw	0
  2230  003CAA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2231  003CAC  0E00               	movlw	0
  2232  003CAE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2233  003CB0  0E7B               	movlw	low _data_test
  2234  003CB2  0100               	movlb	0	; () banked
  2235  003CB4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2236  003CB6  0E01               	movlw	high _data_test
  2237  003CB8  0100               	movlb	0	; () banked
  2238  003CBA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2239  003CBC  0E08               	movlw	8
  2240  003CBE  0100               	movlb	0	; () banked
  2241  003CC0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2242  003CC2  0EBC               	movlw	188
  2243  003CC4  0100               	movlb	0	; () banked
  2244  003CC6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2245  003CC8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2246                           
  2247                           ;parcheggio.c: 342: can_send();
  2248  003CCC  ECEE  F02D         	call	_can_send	;wreg free
  2249  003CD0                     l790:
  2250  003CD0  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2251  003CD2  D7FE               	goto	l790
  2252                           
  2253                           ;parcheggio.c: 345: set_speed = 0;
  2254  003CD4  0E00               	movlw	0
  2255  003CD6  6E26               	movwf	_set_speed+1,c
  2256  003CD8  0E00               	movlw	0
  2257  003CDA  6E25               	movwf	_set_speed,c
  2258                           
  2259                           ;parcheggio.c: 346: data_steering[0] = 90;
  2260  003CDC  0E5A               	movlw	90
  2261  003CDE  0101               	movlb	1	; () banked
  2262  003CE0  6F73               	movwf	_data_steering& (0+255),b
  2263                           
  2264                           ;parcheggio.c: 347: data_brake [0] = 0;
  2265  003CE2  0E00               	movlw	0
  2266  003CE4  0101               	movlb	1	; () banked
  2267  003CE6  6F5B               	movwf	_data_brake& (0+255),b
  2268                           
  2269                           ;parcheggio.c: 348: data_brake [1] = 1;
  2270  003CE8  0E01               	movlw	1
  2271  003CEA  0101               	movlb	1	; () banked
  2272  003CEC  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;parcheggio.c: 349: can_send();
  2276  003CEE  ECEE  F02D         	call	_can_send	;wreg free
  2277                           
  2278                           ;parcheggio.c: 350: delay_s(1);
  2279  003CF2  0E01               	movlw	1
  2280  003CF4  EC36  F033         	call	_delay_s
  2281                           
  2282                           ;parcheggio.c: 352: data_brake [0] = 3;
  2283  003CF8  0E03               	movlw	3
  2284  003CFA  0101               	movlb	1	; () banked
  2285  003CFC  6F5B               	movwf	_data_brake& (0+255),b
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;parcheggio.c: 353: data_brake [1] = 1;
  2289  003CFE  0E01               	movlw	1
  2290  003D00  0101               	movlb	1	; () banked
  2291  003D02  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;parcheggio.c: 354: set_speed = 1000;
  2295  003D04  0E03               	movlw	3
  2296  003D06  6E26               	movwf	_set_speed+1,c
  2297  003D08  0EE8               	movlw	232
  2298  003D0A  6E25               	movwf	_set_speed,c
  2299                           
  2300                           ; BSR set to: 1
  2301                           ;parcheggio.c: 355: dir = 0;
  2302  003D0C  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2303                           
  2304                           ; BSR set to: 1
  2305                           ;parcheggio.c: 356: data_steering[0] = 180;
  2306  003D0E  0EB4               	movlw	180
  2307  003D10  0101               	movlb	1	; () banked
  2308  003D12  6F73               	movwf	_data_steering& (0+255),b
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;parcheggio.c: 357: data_test[0] = prima_sterzata;
  2312  003D14  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2313  003D18  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2314  003D1C  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2315  003D20  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2316  003D24  ECA6  F02F         	call	___fltol	;wreg free
  2317  003D28  0100               	movlb	0	; () banked
  2318  003D2A  51C1               	movf	?___fltol& (0+255),w,b
  2319  003D2C  0101               	movlb	1	; () banked
  2320  003D2E  6F7B               	movwf	_data_test& (0+255),b
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;parcheggio.c: 358: asd = 1;
  2324  003D30  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;parcheggio.c: 359: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2328  003D32  0E0D               	movlw	13
  2329  003D34  0100               	movlb	0	; () banked
  2330  003D36  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2331  003D38  0E00               	movlw	0
  2332  003D3A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2333  003D3C  0E00               	movlw	0
  2334  003D3E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2335  003D40  0E00               	movlw	0
  2336  003D42  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2337  003D44  0E7B               	movlw	low _data_test
  2338  003D46  0100               	movlb	0	; () banked
  2339  003D48  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2340  003D4A  0E01               	movlw	high _data_test
  2341  003D4C  0100               	movlb	0	; () banked
  2342  003D4E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2343  003D50  0E08               	movlw	8
  2344  003D52  0100               	movlb	0	; () banked
  2345  003D54  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2346  003D56  0EBC               	movlw	188
  2347  003D58  0100               	movlb	0	; () banked
  2348  003D5A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2349  003D5C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2350                           
  2351                           ;parcheggio.c: 360: can_send();
  2352  003D60  ECEE  F02D         	call	_can_send	;wreg free
  2353  003D64                     l793:
  2354  003D64  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2355  003D66  D7FE               	goto	l793
  2356                           
  2357                           ;parcheggio.c: 362: set_speed = 1000;
  2358  003D68  0E03               	movlw	3
  2359  003D6A  6E26               	movwf	_set_speed+1,c
  2360  003D6C  0EE8               	movlw	232
  2361  003D6E  6E25               	movwf	_set_speed,c
  2362                           
  2363                           ;parcheggio.c: 363: data_steering[0] = 0;
  2364  003D70  0E00               	movlw	0
  2365  003D72  0101               	movlb	1	; () banked
  2366  003D74  6F73               	movwf	_data_steering& (0+255),b
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;parcheggio.c: 364: asd = 1;
  2370  003D76  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2371                           
  2372                           ; BSR set to: 1
  2373                           ;parcheggio.c: 365: data_test[0] = prima_sterzata + 9;
  2374  003D78  0E00               	movlw	0
  2375  003D7A  0100               	movlb	0	; () banked
  2376  003D7C  6FAD               	movwf	___fladd@a& (0+255),b
  2377  003D7E  0E00               	movlw	0
  2378  003D80  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2379  003D82  0E10               	movlw	16
  2380  003D84  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2381  003D86  0E41               	movlw	65
  2382  003D88  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2383  003D8A  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2384  003D8E  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2385  003D92  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2386  003D96  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2387  003D9A  EC85  F018         	call	___fladd	;wreg free
  2388  003D9E  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2389  003DA2  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2390  003DA6  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2391  003DAA  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2392  003DAE  ECA6  F02F         	call	___fltol	;wreg free
  2393  003DB2  0100               	movlb	0	; () banked
  2394  003DB4  51C1               	movf	?___fltol& (0+255),w,b
  2395  003DB6  0101               	movlb	1	; () banked
  2396  003DB8  6F7B               	movwf	_data_test& (0+255),b
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;parcheggio.c: 366: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2400  003DBA  0E0D               	movlw	13
  2401  003DBC  0100               	movlb	0	; () banked
  2402  003DBE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2403  003DC0  0E00               	movlw	0
  2404  003DC2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2405  003DC4  0E00               	movlw	0
  2406  003DC6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2407  003DC8  0E00               	movlw	0
  2408  003DCA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2409  003DCC  0E7B               	movlw	low _data_test
  2410  003DCE  0100               	movlb	0	; () banked
  2411  003DD0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2412  003DD2  0E01               	movlw	high _data_test
  2413  003DD4  0100               	movlb	0	; () banked
  2414  003DD6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2415  003DD8  0E08               	movlw	8
  2416  003DDA  0100               	movlb	0	; () banked
  2417  003DDC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2418  003DDE  0EBC               	movlw	188
  2419  003DE0  0100               	movlb	0	; () banked
  2420  003DE2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2421  003DE4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2422                           
  2423                           ;parcheggio.c: 367: can_send();
  2424  003DE8  ECEE  F02D         	call	_can_send	;wreg free
  2425  003DEC                     l796:
  2426  003DEC  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2427  003DEE  D7FE               	goto	l796
  2428                           
  2429                           ;parcheggio.c: 369: data_brake [0] = 0;
  2430  003DF0  0E00               	movlw	0
  2431  003DF2  0101               	movlb	1	; () banked
  2432  003DF4  6F5B               	movwf	_data_brake& (0+255),b
  2433                           
  2434                           ;parcheggio.c: 370: data_brake [1] = 1;
  2435  003DF6  0E01               	movlw	1
  2436  003DF8  0101               	movlb	1	; () banked
  2437  003DFA  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2438                           
  2439                           ;parcheggio.c: 371: set_speed = 0;
  2440  003DFC  0E00               	movlw	0
  2441  003DFE  6E26               	movwf	_set_speed+1,c
  2442  003E00  0E00               	movlw	0
  2443  003E02  6E25               	movwf	_set_speed,c
  2444                           
  2445                           ;parcheggio.c: 372: data_steering[0] = 90;
  2446  003E04  0E5A               	movlw	90
  2447  003E06  0101               	movlb	1	; () banked
  2448  003E08  6F73               	movwf	_data_steering& (0+255),b
  2449                           
  2450                           ; BSR set to: 1
  2451                           ;parcheggio.c: 373: can_send();
  2452  003E0A  ECEE  F02D         	call	_can_send	;wreg free
  2453                           
  2454                           ;parcheggio.c: 374: delay_s(1);
  2455  003E0E  0E01               	movlw	1
  2456  003E10  EC36  F033         	call	_delay_s
  2457                           
  2458                           ;parcheggio.c: 375: avvicinamento = 1;
  2459  003E14  8454               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2460                           
  2461                           ;parcheggio.c: 376: if (sensor_distance [2] > 20) {
  2462  003E16  5006               	movf	_sensor_distance+5,w,c	;volatile
  2463  003E18  E104               	bnz	u10900
  2464  003E1A  0E15               	movlw	21
  2465  003E1C  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2466  003E1E  A0D8               	btfss	status,0,c
  2467  003E20  D016               	goto	l8278
  2468  003E22                     u10900:
  2469                           
  2470                           ;parcheggio.c: 377: data_brake [0] = 3;
  2471  003E22  0E03               	movlw	3
  2472  003E24  0101               	movlb	1	; () banked
  2473  003E26  6F5B               	movwf	_data_brake& (0+255),b
  2474                           
  2475                           ;parcheggio.c: 378: data_brake [1] = 1;
  2476  003E28  0E01               	movlw	1
  2477  003E2A  0101               	movlb	1	; () banked
  2478  003E2C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2479                           
  2480                           ;parcheggio.c: 379: set_speed = 500;
  2481  003E2E  0E01               	movlw	1
  2482  003E30  6E26               	movwf	_set_speed+1,c
  2483  003E32  0EF4               	movlw	244
  2484  003E34  6E25               	movwf	_set_speed,c
  2485                           
  2486                           ;parcheggio.c: 380: data_steering[0] = 90;
  2487  003E36  0E5A               	movlw	90
  2488  003E38  0101               	movlb	1	; () banked
  2489  003E3A  6F73               	movwf	_data_steering& (0+255),b
  2490                           
  2491                           ; BSR set to: 1
  2492                           ;parcheggio.c: 381: dir = 1;
  2493  003E3C  8654               	bsf	_dir/(0+8),_dir& (0+7),c
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;parcheggio.c: 382: can_send();
  2497  003E3E  ECEE  F02D         	call	_can_send	;wreg free
  2498  003E42                     l8276:
  2499  003E42  5006               	movf	_sensor_distance+5,w,c	;volatile
  2500  003E44  E1FE               	bnz	l8276
  2501  003E46  0E15               	movlw	21
  2502  003E48  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2503  003E4A  B0D8               	btfsc	status,0,c
  2504  003E4C  D7FA               	goto	l8276
  2505  003E4E                     l8278:
  2506                           
  2507                           ;parcheggio.c: 384: }
  2508                           ;parcheggio.c: 385: data_brake [0] = 0;
  2509  003E4E  0E00               	movlw	0
  2510  003E50  0101               	movlb	1	; () banked
  2511  003E52  6F5B               	movwf	_data_brake& (0+255),b
  2512                           
  2513                           ;parcheggio.c: 386: data_brake [1] = 1;
  2514  003E54  0E01               	movlw	1
  2515  003E56  0101               	movlb	1	; () banked
  2516  003E58  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2517                           
  2518                           ;parcheggio.c: 387: set_speed = 0;
  2519  003E5A  0E00               	movlw	0
  2520  003E5C  6E26               	movwf	_set_speed+1,c
  2521  003E5E  0E00               	movlw	0
  2522  003E60  6E25               	movwf	_set_speed,c
  2523                           
  2524                           ;parcheggio.c: 388: data_steering[0] = 90;
  2525  003E62  0E5A               	movlw	90
  2526  003E64  0101               	movlb	1	; () banked
  2527  003E66  6F73               	movwf	_data_steering& (0+255),b
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;parcheggio.c: 389: dir = 0;
  2531  003E68  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2532                           
  2533                           ; BSR set to: 1
  2534                           ;parcheggio.c: 390: can_send();
  2535  003E6A  ECEE  F02D         	call	_can_send	;wreg free
  2536                           
  2537                           ;parcheggio.c: 391: delay_s(1);
  2538  003E6E  0E01               	movlw	1
  2539  003E70  EC36  F033         	call	_delay_s
  2540                           
  2541                           ;parcheggio.c: 392: data[0] = 3;
  2542  003E74  0E03               	movlw	3
  2543  003E76  0101               	movlb	1	; () banked
  2544  003E78  6F53               	movwf	_data& (0+255),b
  2545  003E7A                     l8288:
  2546  003E7A  EC4C  F033         	call	_CANisTxReady	;wreg free
  2547  003E7E  0900               	iorlw	0
  2548  003E80  B4D8               	btfsc	status,2,c
  2549  003E82  D7FB               	goto	l8288
  2550                           
  2551                           ;parcheggio.c: 394: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2552  003E84  0E0B               	movlw	11
  2553  003E86  0100               	movlb	0	; () banked
  2554  003E88  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2555  003E8A  0E00               	movlw	0
  2556  003E8C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2557  003E8E  0E00               	movlw	0
  2558  003E90  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2559  003E92  0E00               	movlw	0
  2560  003E94  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2561  003E96  0E53               	movlw	low _data
  2562  003E98  0100               	movlb	0	; () banked
  2563  003E9A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2564  003E9C  0E01               	movlw	high _data
  2565  003E9E  0100               	movlb	0	; () banked
  2566  003EA0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2567  003EA2  0E08               	movlw	8
  2568  003EA4  0100               	movlb	0	; () banked
  2569  003EA6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2570  003EA8  0EBC               	movlw	188
  2571  003EAA  0100               	movlb	0	; () banked
  2572  003EAC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2573  003EAE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2574                           
  2575                           ;parcheggio.c: 395: delay_ms(100);
  2576  003EB2  0E00               	movlw	0
  2577  003EB4  0100               	movlb	0	; () banked
  2578  003EB6  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2579  003EB8  0E64               	movlw	100
  2580  003EBA  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2581  003EBC  ECCC  F032         	call	_delay_ms	;wreg free
  2582  003EC0  00FF               	reset		;# 
  2583  003EC2                     l8294:
  2584  003EC2  AA81               	btfss	3969,5,c	;volatile
  2585  003EC4  0012               	return	
  2586  003EC6  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2587  003EC8  0012               	return	
  2588  003ECA  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2589  003ECC  0012               	return	
  2590  003ECE  D640               	goto	l789
  2591  003ED0                     __end_of_park_routine:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           postdec1	equ	0xFE5
  2600                           fsr1l	equ	0xFE1
  2601                           postinc2	equ	0xFDE
  2602                           postdec2	equ	0xFDD
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _parallelo *****************
  2606 ;; Defined at:
  2607 ;;		line 421 in file "parcheggio.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;		None               void
  2614 ;; Registers used:
  2615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;Total ram usage:        2 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    8
  2628 ;; This function calls:
  2629 ;;		___fladd
  2630 ;;		___fldiv
  2631 ;;		___flge
  2632 ;;		___flmul
  2633 ;;		___fltol
  2634 ;;		___xxtofl
  2635 ;;		_abs
  2636 ;;		_asin
  2637 ;;		_can_send
  2638 ;;		_sqrt
  2639 ;; This function is called by:
  2640 ;;		_park_search
  2641 ;;		_park_routine
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text3
  2646  005022                     __ptext3:
  2647                           	opt stack 0
  2648  005022                     _parallelo:
  2649                           	opt stack 21
  2650                           
  2651                           ;parcheggio.c: 422: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2652                           
  2653                           ;incstack = 0
  2654  005022  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  2655  005026  CFDE F1B4          	movff	postinc2,??_parallelo
  2656  00502A  CFDD F1B5          	movff	postdec2,??_parallelo+1
  2657  00502E  0101               	movlb	1	; () banked
  2658  005030  1FB4               	comf	??_parallelo& (0+255),f,b
  2659  005032  1FB5               	comf	(??_parallelo+1)& (0+255),f,b
  2660  005034  4BB4               	infsnz	??_parallelo& (0+255),f,b
  2661  005036  2BB5               	incf	(??_parallelo+1)& (0+255),f,b
  2662  005038  5001               	movf	_sensor_distance,w,c	;volatile
  2663  00503A  0101               	movlb	1	; () banked
  2664  00503C  25B4               	addwf	??_parallelo& (0+255),w,b
  2665  00503E  0100               	movlb	0	; () banked
  2666  005040  6F77               	movwf	abs@a& (0+255),b
  2667  005042  5002               	movf	_sensor_distance+1,w,c	;volatile
  2668  005044  0101               	movlb	1	; () banked
  2669  005046  21B5               	addwfc	(??_parallelo+1)& (0+255),w,b
  2670  005048  0100               	movlb	0	; () banked
  2671  00504A  6F78               	movwf	(abs@a+1)& (0+255),b
  2672  00504C  EC20  F033         	call	_abs	;wreg free
  2673  005050  0100               	movlb	0	; () banked
  2674  005052  C077  F0CB         	movff	?_abs,___xxtofl@val
  2675  005056  0100               	movlb	0	; () banked
  2676  005058  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2677  00505C  0100               	movlb	0	; () banked
  2678  00505E  0E00               	movlw	0
  2679  005060  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2680  005062  0EFF               	movlw	-1
  2681  005064  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2682  005066  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2683  005068  0E01               	movlw	1
  2684  00506A  EC7C  F02A         	call	___xxtofl
  2685  00506E  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  2686  005072  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  2687  005076  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  2688  00507A  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  2689                           
  2690                           ;parcheggio.c: 423: if (alignment_gap < 20) {
  2691  00507E  C011  F0C5         	movff	_alignment_gap,___flge@ff1
  2692  005082  C012  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2693  005086  C013  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2694  00508A  C014  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2695  00508E  0E00               	movlw	0
  2696  005090  0100               	movlb	0	; () banked
  2697  005092  6FC9               	movwf	___flge@ff2& (0+255),b
  2698  005094  0E00               	movlw	0
  2699  005096  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2700  005098  0EA0               	movlw	160
  2701  00509A  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2702  00509C  0E41               	movlw	65
  2703  00509E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2704  0050A0  EC26  F02D         	call	___flge	;wreg free
  2705  0050A4  0100               	movlb	0	; () banked
  2706  0050A6  B0D8               	btfsc	status,0,c
  2707  0050A8  D0F5               	goto	l826
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;parcheggio.c: 424: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2711  0050AA  5002               	movf	_sensor_distance+1,w,c	;volatile
  2712  0050AC  E103               	bnz	u10531
  2713  0050AE  0E1E               	movlw	30
  2714  0050B0  5C01               	subwf	_sensor_distance,w,c	;volatile
  2715  0050B2  B0D8               	btfsc	status,0,c
  2716  0050B4                     u10531:
  2717  0050B4  D0E1               	goto	l7992
  2718                           
  2719                           ; BSR set to: 0
  2720  0050B6  5004               	movf	_sensor_distance+3,w,c	;volatile
  2721  0050B8  E103               	bnz	u10541
  2722  0050BA  0E1E               	movlw	30
  2723  0050BC  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  2724  0050BE  B0D8               	btfsc	status,0,c
  2725  0050C0                     u10541:
  2726  0050C0  D0DB               	goto	l7992
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;parcheggio.c: 428: x = ((100) + (alignment_gap * alignment_gap));
  2730  0050C2  C011  F094         	movff	_alignment_gap,___flmul@a
  2731  0050C6  C012  F095         	movff	_alignment_gap+1,___flmul@a+1
  2732  0050CA  C013  F096         	movff	_alignment_gap+2,___flmul@a+2
  2733  0050CE  C014  F097         	movff	_alignment_gap+3,___flmul@a+3
  2734  0050D2  C011  F090         	movff	_alignment_gap,___flmul@b
  2735  0050D6  C012  F091         	movff	_alignment_gap+1,___flmul@b+1
  2736  0050DA  C013  F092         	movff	_alignment_gap+2,___flmul@b+2
  2737  0050DE  C014  F093         	movff	_alignment_gap+3,___flmul@b+3
  2738  0050E2  ECD9  F01A         	call	___flmul	;wreg free
  2739  0050E6  C090  F0A9         	movff	?___flmul,___fladd@b
  2740  0050EA  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2741  0050EE  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2742  0050F2  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2743  0050F6  0E00               	movlw	0
  2744  0050F8  0100               	movlb	0	; () banked
  2745  0050FA  6FAD               	movwf	___fladd@a& (0+255),b
  2746  0050FC  0E00               	movlw	0
  2747  0050FE  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2748  005100  0EC8               	movlw	200
  2749  005102  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2750  005104  0E42               	movlw	66
  2751  005106  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2752  005108  EC85  F018         	call	___fladd	;wreg free
  2753  00510C  C0A9  F0DA         	movff	?___fladd,_x
  2754  005110  C0AA  F0DB         	movff	?___fladd+1,_x+1
  2755  005114  C0AB  F0DC         	movff	?___fladd+2,_x+2
  2756  005118  C0AC  F0DD         	movff	?___fladd+3,_x+3
  2757                           
  2758                           ;parcheggio.c: 429: x = sqrt(x);
  2759  00511C  C0DA  F0C1         	movff	_x,sqrt@a
  2760  005120  C0DB  F0C2         	movff	_x+1,sqrt@a+1
  2761  005124  C0DC  F0C3         	movff	_x+2,sqrt@a+2
  2762  005128  C0DD  F0C4         	movff	_x+3,sqrt@a+3
  2763  00512C  EC68  F01F         	call	_sqrt	;wreg free
  2764  005130  C0C1  F0DA         	movff	?_sqrt,_x
  2765  005134  C0C2  F0DB         	movff	?_sqrt+1,_x+1
  2766  005138  C0C3  F0DC         	movff	?_sqrt+2,_x+2
  2767  00513C  C0C4  F0DD         	movff	?_sqrt+3,_x+3
  2768                           
  2769                           ;parcheggio.c: 430: z = alignment_gap / x;
  2770  005140  C011  F077         	movff	_alignment_gap,___fldiv@b
  2771  005144  C012  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2772  005148  C013  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2773  00514C  C014  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2774  005150  C0DA  F07B         	movff	_x,___fldiv@a
  2775  005154  C0DB  F07C         	movff	_x+1,___fldiv@a+1
  2776  005158  C0DC  F07D         	movff	_x+2,___fldiv@a+2
  2777  00515C  C0DD  F07E         	movff	_x+3,___fldiv@a+3
  2778  005160  EC4D  F021         	call	___fldiv	;wreg free
  2779  005164  C077  F015         	movff	?___fldiv,_z
  2780  005168  C078  F016         	movff	?___fldiv+1,_z+1
  2781  00516C  C079  F017         	movff	?___fldiv+2,_z+2
  2782  005170  C07A  F018         	movff	?___fldiv+3,_z+3
  2783                           
  2784                           ;parcheggio.c: 431: z = asin(z);
  2785  005174  C015  F0D5         	movff	_z,asin@x
  2786  005178  C016  F0D6         	movff	_z+1,asin@x+1
  2787  00517C  C017  F0D7         	movff	_z+2,asin@x+2
  2788  005180  C018  F0D8         	movff	_z+3,asin@x+3
  2789  005184  EC88  F026         	call	_asin	;wreg free
  2790  005188  C0D5  F015         	movff	?_asin,_z
  2791  00518C  C0D6  F016         	movff	?_asin+1,_z+1
  2792  005190  C0D7  F017         	movff	?_asin+2,_z+2
  2793  005194  C0D8  F018         	movff	?_asin+3,_z+3
  2794                           
  2795                           ;parcheggio.c: 432: z = z / 3.14159265358979323846 * 180;
  2796  005198  0EDB               	movlw	219
  2797  00519A  0100               	movlb	0	; () banked
  2798  00519C  6F7B               	movwf	___fldiv@a& (0+255),b
  2799  00519E  0E0F               	movlw	15
  2800  0051A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2801  0051A2  0E49               	movlw	73
  2802  0051A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2803  0051A6  0E40               	movlw	64
  2804  0051A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2805  0051AA  C015  F077         	movff	_z,___fldiv@b
  2806  0051AE  C016  F078         	movff	_z+1,___fldiv@b+1
  2807  0051B2  C017  F079         	movff	_z+2,___fldiv@b+2
  2808  0051B6  C018  F07A         	movff	_z+3,___fldiv@b+3
  2809  0051BA  EC4D  F021         	call	___fldiv	;wreg free
  2810  0051BE  C077  F090         	movff	?___fldiv,___flmul@b
  2811  0051C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2812  0051C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2813  0051CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2814  0051CE  0E00               	movlw	0
  2815  0051D0  0100               	movlb	0	; () banked
  2816  0051D2  6F94               	movwf	___flmul@a& (0+255),b
  2817  0051D4  0E00               	movlw	0
  2818  0051D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2819  0051D8  0E34               	movlw	52
  2820  0051DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2821  0051DC  0E43               	movlw	67
  2822  0051DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2823  0051E0  ECD9  F01A         	call	___flmul	;wreg free
  2824  0051E4  C090  F015         	movff	?___flmul,_z
  2825  0051E8  C091  F016         	movff	?___flmul+1,_z+1
  2826  0051EC  C092  F017         	movff	?___flmul+2,_z+2
  2827  0051F0  C093  F018         	movff	?___flmul+3,_z+3
  2828                           
  2829                           ;parcheggio.c: 433: data_correction[0] = z;
  2830  0051F4  C015  F0C1         	movff	_z,___fltol@f1
  2831  0051F8  C016  F0C2         	movff	_z+1,___fltol@f1+1
  2832  0051FC  C017  F0C3         	movff	_z+2,___fltol@f1+2
  2833  005200  C018  F0C4         	movff	_z+3,___fltol@f1+3
  2834  005204  ECA6  F02F         	call	___fltol	;wreg free
  2835  005208  0100               	movlb	0	; () banked
  2836  00520A  51C1               	movf	?___fltol& (0+255),w,b
  2837  00520C  0101               	movlb	1	; () banked
  2838  00520E  6F63               	movwf	_data_correction& (0+255),b
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;parcheggio.c: 435: if (sensor_distance[0] < sensor_distance[1]) {
  2842  005210  5003               	movf	_sensor_distance+2,w,c	;volatile
  2843  005212  5C01               	subwf	_sensor_distance,w,c	;volatile
  2844  005214  5004               	movf	_sensor_distance+3,w,c	;volatile
  2845  005216  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  2846  005218  B0D8               	btfsc	status,0,c
  2847  00521A  D002               	goto	l7984
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;parcheggio.c: 436: data_correction[1] = 0;
  2851  00521C  0E00               	movlw	0
  2852  00521E  D001               	goto	L1
  2853  005220                     l7984:
  2854                           
  2855                           ; BSR set to: 1
  2856                           ;parcheggio.c: 438: data_correction[1] = 1;
  2857  005220  0E01               	movlw	1
  2858  005222                     L1:
  2859  005222  0101               	movlb	1	; () banked
  2860  005224  6F64               	movwf	(_data_correction+1)& (0+255),b
  2861                           
  2862                           ; BSR set to: 1
  2863                           ;parcheggio.c: 439: }
  2864                           ;parcheggio.c: 440: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2865                           
  2866                           ; BSR set to: 1
  2867  005226  5011               	movf	_alignment_gap,w,c
  2868  005228  0101               	movlb	1	; () banked
  2869  00522A  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2870  00522C  E114               	bnz	l832
  2871  00522E  5012               	movf	_alignment_gap+1,w,c
  2872  005230  0101               	movlb	1	; () banked
  2873  005232  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2874  005234  E110               	bnz	l832
  2875  005236  5013               	movf	_alignment_gap+2,w,c
  2876  005238  0101               	movlb	1	; () banked
  2877  00523A  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2878  00523C  E10C               	bnz	l832
  2879  00523E  5014               	movf	_alignment_gap+3,w,c
  2880  005240  0101               	movlb	1	; () banked
  2881  005242  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2882  005244  A4D8               	btfss	status,2,c
  2883  005246  D007               	goto	l832
  2884                           
  2885                           ; BSR set to: 1
  2886  005248  0E00               	movlw	0
  2887  00524A  B655               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2888  00524C  0E01               	movlw	1
  2889  00524E  0101               	movlb	1	; () banked
  2890  005250  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2891  005252  B4D8               	btfsc	status,2,c
  2892  005254  0012               	return	
  2893  005256                     l832:
  2894                           
  2895                           ; BSR set to: 1
  2896                           ;parcheggio.c: 441: old_alignment_gap = alignment_gap;
  2897  005256  C011  F13C         	movff	_alignment_gap,_old_alignment_gap
  2898  00525A  C012  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2899  00525E  C013  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2900  005262  C014  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2901                           
  2902                           ;parcheggio.c: 442: old_data_correction = data_correction[1];
  2903  005266  0101               	movlb	1	; () banked
  2904  005268  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2905  00526A  D002               	goto	u10580
  2906  00526C  8655               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2907  00526E  D001               	goto	l7990
  2908  005270                     u10580:
  2909  005270  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2910  005272                     l7990:
  2911                           
  2912                           ;parcheggio.c: 443: can_send();
  2913  005272  ECEE  F02D         	call	_can_send	;wreg free
  2914                           
  2915                           ;parcheggio.c: 444: }
  2916                           ;parcheggio.c: 445: } else if (data_correction[0] != old_data_correction) {
  2917  005276  0012               	return	
  2918  005278                     l7992:
  2919  005278  0E00               	movlw	0
  2920  00527A  B655               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2921  00527C  0E01               	movlw	1
  2922  00527E  0101               	movlb	1	; () banked
  2923  005280  1963               	xorwf	_data_correction& (0+255),w,b
  2924  005282  B4D8               	btfsc	status,2,c
  2925  005284  0012               	return	
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;parcheggio.c: 446: data_correction[0] = 0;
  2929  005286  0E00               	movlw	0
  2930  005288  0101               	movlb	1	; () banked
  2931  00528A  6F63               	movwf	_data_correction& (0+255),b
  2932                           
  2933                           ; BSR set to: 1
  2934                           ;parcheggio.c: 447: old_data_correction = 0;
  2935  00528C  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;parcheggio.c: 448: can_send();
  2939  00528E  ECEE  F02D         	call	_can_send	;wreg free
  2940                           
  2941                           ;parcheggio.c: 449: }
  2942                           ;parcheggio.c: 450: } else {
  2943  005292  0012               	return	
  2944  005294                     l826:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;parcheggio.c: 451: if (old_data_correction != 0) {
  2948  005294  A655               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2949  005296  0012               	return	
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;parcheggio.c: 452: data_correction[0] = 0;
  2953  005298  0E00               	movlw	0
  2954  00529A  0101               	movlb	1	; () banked
  2955  00529C  6F63               	movwf	_data_correction& (0+255),b
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;parcheggio.c: 453: old_data_correction = 0;
  2959  00529E  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2960                           
  2961                           ; BSR set to: 1
  2962                           ;parcheggio.c: 454: can_send();
  2963  0052A0  ECEE  F02D         	call	_can_send	;wreg free
  2964  0052A4  0012               	return	
  2965  0052A6                     __end_of_parallelo:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           postinc0	equ	0xFEE
  2972                           wreg	equ	0xFE8
  2973                           postdec1	equ	0xFE5
  2974                           fsr1l	equ	0xFE1
  2975                           postinc2	equ	0xFDE
  2976                           postdec2	equ	0xFDD
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _can_send *****************
  2980 ;; Defined at:
  2981 ;;		line 400 in file "parcheggio.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2986 ;; Return value:  Size  Location     Type
  2987 ;;		None               void
  2988 ;; Registers used:
  2989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    5
  3002 ;; This function calls:
  3003 ;;		_CANisTxReady
  3004 ;;		_CANsendMessage
  3005 ;; This function is called by:
  3006 ;;		_park_routine
  3007 ;;		_parallelo
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text4
  3012  005BDC                     __ptext4:
  3013                           	opt stack 0
  3014  005BDC                     _can_send:
  3015                           	opt stack 23
  3016                           
  3017                           ;parcheggio.c: 401: if (PORTBbits.RB5 == 1) {
  3018                           
  3019                           ;incstack = 0
  3020  005BDC  AA81               	btfss	3969,5,c	;volatile
  3021  005BDE  D062               	goto	l7840
  3022  005BE0                     l7820:
  3023  005BE0  EC4C  F033         	call	_CANisTxReady	;wreg free
  3024  005BE4  06E8               	decf	wreg,f,c
  3025  005BE6  A4D8               	btfss	status,2,c
  3026  005BE8  D7FB               	goto	l7820
  3027                           
  3028                           ;parcheggio.c: 403: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3029  005BEA  0E05               	movlw	5
  3030  005BEC  0100               	movlb	0	; () banked
  3031  005BEE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3032  005BF0  0E00               	movlw	0
  3033  005BF2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3034  005BF4  0E00               	movlw	0
  3035  005BF6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3036  005BF8  0E00               	movlw	0
  3037  005BFA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3038  005BFC  0E73               	movlw	low _data_steering
  3039  005BFE  0100               	movlb	0	; () banked
  3040  005C00  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3041  005C02  0E01               	movlw	high _data_steering
  3042  005C04  0100               	movlb	0	; () banked
  3043  005C06  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3044  005C08  0E08               	movlw	8
  3045  005C0A  0100               	movlb	0	; () banked
  3046  005C0C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3047  005C0E  0EBC               	movlw	188
  3048  005C10  0100               	movlb	0	; () banked
  3049  005C12  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3050  005C14  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3051                           
  3052                           ;parcheggio.c: 404: data_speed[0] = set_speed;
  3053  005C18  C025  F16B         	movff	_set_speed,_data_speed
  3054                           
  3055                           ;parcheggio.c: 405: data_speed[1] = (set_speed >> 8);
  3056  005C1C  5026               	movf	_set_speed+1,w,c
  3057  005C1E  0101               	movlb	1	; () banked
  3058  005C20  6F6C               	movwf	(_data_speed+1)& (0+255),b
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;parcheggio.c: 406: data_speed[2] = dir;
  3062  005C22  0E00               	movlw	0
  3063  005C24  B654               	btfsc	_dir/(0+8),_dir& (0+7),c
  3064  005C26  0E01               	movlw	1
  3065  005C28  0101               	movlb	1	; () banked
  3066  005C2A  6F6D               	movwf	(_data_speed+2)& (0+255),b
  3067  005C2C                     l7830:
  3068  005C2C  EC4C  F033         	call	_CANisTxReady	;wreg free
  3069  005C30  06E8               	decf	wreg,f,c
  3070  005C32  A4D8               	btfss	status,2,c
  3071  005C34  D7FB               	goto	l7830
  3072                           
  3073                           ;parcheggio.c: 408: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3074  005C36  0E03               	movlw	3
  3075  005C38  0100               	movlb	0	; () banked
  3076  005C3A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3077  005C3C  0E00               	movlw	0
  3078  005C3E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3079  005C40  0E00               	movlw	0
  3080  005C42  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3081  005C44  0E00               	movlw	0
  3082  005C46  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3083  005C48  0E6B               	movlw	low _data_speed
  3084  005C4A  0100               	movlb	0	; () banked
  3085  005C4C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3086  005C4E  0E01               	movlw	high _data_speed
  3087  005C50  0100               	movlb	0	; () banked
  3088  005C52  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3089  005C54  0E08               	movlw	8
  3090  005C56  0100               	movlb	0	; () banked
  3091  005C58  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3092  005C5A  0EBC               	movlw	188
  3093  005C5C  0100               	movlb	0	; () banked
  3094  005C5E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3095  005C60  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3096  005C64                     l7834:
  3097  005C64  EC4C  F033         	call	_CANisTxReady	;wreg free
  3098  005C68  06E8               	decf	wreg,f,c
  3099  005C6A  A4D8               	btfss	status,2,c
  3100  005C6C  D7FB               	goto	l7834
  3101                           
  3102                           ;parcheggio.c: 410: data_brake[1] = 0;
  3103  005C6E  0E00               	movlw	0
  3104  005C70  0101               	movlb	1	; () banked
  3105  005C72  6F5C               	movwf	(_data_brake+1)& (0+255),b
  3106                           
  3107                           ; BSR set to: 1
  3108                           ;parcheggio.c: 411: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3109  005C74  0E04               	movlw	4
  3110  005C76  0100               	movlb	0	; () banked
  3111  005C78  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3112  005C7A  0E00               	movlw	0
  3113  005C7C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3114  005C7E  0E00               	movlw	0
  3115  005C80  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3116  005C82  0E00               	movlw	0
  3117  005C84  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3118  005C86  0E5B               	movlw	low _data_brake
  3119  005C88  0100               	movlb	0	; () banked
  3120  005C8A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3121  005C8C  0E01               	movlw	high _data_brake
  3122  005C8E  0100               	movlb	0	; () banked
  3123  005C90  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3124  005C92  0E08               	movlw	8
  3125  005C94  0100               	movlb	0	; () banked
  3126  005C96  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3127  005C98  0EBC               	movlw	188
  3128  005C9A  0100               	movlb	0	; () banked
  3129  005C9C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3130  005C9E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3131                           
  3132                           ;parcheggio.c: 412: } else {
  3133  005CA2  0012               	return	
  3134  005CA4                     l7840:
  3135                           
  3136                           ;parcheggio.c: 413: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3137  005CA4  0E0E               	movlw	14
  3138  005CA6  0100               	movlb	0	; () banked
  3139  005CA8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3140  005CAA  0E00               	movlw	0
  3141  005CAC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3142  005CAE  0E00               	movlw	0
  3143  005CB0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3144  005CB2  0E00               	movlw	0
  3145  005CB4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3146  005CB6  0E63               	movlw	low _data_correction
  3147  005CB8  0100               	movlb	0	; () banked
  3148  005CBA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3149  005CBC  0E01               	movlw	high _data_correction
  3150  005CBE  0100               	movlb	0	; () banked
  3151  005CC0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3152  005CC2  0E08               	movlw	8
  3153  005CC4  0100               	movlb	0	; () banked
  3154  005CC6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3155  005CC8  0EBC               	movlw	188
  3156  005CCA  0100               	movlb	0	; () banked
  3157  005CCC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3158  005CCE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3159                           
  3160                           ;parcheggio.c: 414: unsigned char data_correction1[];
  3161                           ;parcheggio.c: 415: data_correction1[0] = data_correction[0];
  3162  005CD2  EE20  F087         	lfsr	2,can_send@data_correction1
  3163  005CD6  C163  FFDF         	movff	_data_correction,indf2
  3164                           
  3165                           ;parcheggio.c: 416: data_correction1[1] = 0;
  3166  005CDA  0E00               	movlw	0
  3167  005CDC  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3168                           
  3169                           ;parcheggio.c: 417: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3170  005CE0  0EAA               	movlw	170
  3171  005CE2  0100               	movlb	0	; () banked
  3172  005CE4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3173  005CE6  0E00               	movlw	0
  3174  005CE8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3175  005CEA  0E00               	movlw	0
  3176  005CEC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3177  005CEE  0E00               	movlw	0
  3178  005CF0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3179  005CF2  0E87               	movlw	low can_send@data_correction1
  3180  005CF4  0100               	movlb	0	; () banked
  3181  005CF6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3182  005CF8  0E00               	movlw	high can_send@data_correction1
  3183  005CFA  0100               	movlb	0	; () banked
  3184  005CFC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3185  005CFE  0E08               	movlw	8
  3186  005D00  0100               	movlb	0	; () banked
  3187  005D02  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3188  005D04  0EBC               	movlw	188
  3189  005D06  0100               	movlb	0	; () banked
  3190  005D08  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3191  005D0A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3192  005D0E  0012               	return	
  3193  005D10                     __end_of_can_send:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           postdec1	equ	0xFE5
  3202                           fsr1l	equ	0xFE1
  3203                           indf2	equ	0xFDF
  3204                           postinc2	equ	0xFDE
  3205                           postdec2	equ	0xFDD
  3206                           status	equ	0xFD8
  3207                           
  3208 ;; *************** function _CANsendMessage *****************
  3209 ;; Defined at:
  3210 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  identifier      4   23[BANK0 ] unsigned long 
  3213 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3214 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3215 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
  3216 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3217 ;;  flags           1   30[BANK0 ] enum E16335
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  tamp            4   35[BANK0 ] unsigned long 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;		None               void
  3222 ;; Registers used:
  3223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3229 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;Total ram usage:       16 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    4
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;;		_park_search
  3241 ;;		_park_routine
  3242 ;;		_can_send
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text5
  3247  001858                     __ptext5:
  3248                           	opt stack 0
  3249  001858                     _CANsendMessage:
  3250                           	opt stack 23
  3251                           
  3252                           ;inc\CANlib.h: 297: unsigned long tamp;
  3253                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3254                           
  3255                           ;incstack = 0
  3256  001858  010F               	movlb	15	; () banked
  3257  00185A  B740               	btfsc	64,3,b	;volatile
  3258  00185C  D13F               	goto	l363
  3259                           
  3260                           ; BSR set to: 15
  3261                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3262  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3263                           
  3264                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3265  001862  0100               	movlb	0	; () banked
  3266  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3267  001866  D003               	goto	l364
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3271  001868  010F               	movlb	15	; () banked
  3272  00186A  8D45               	bsf	69,6,b	;volatile
  3273  00186C  D002               	goto	l365
  3274  00186E                     l364:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;inc\CANlib.h: 303: else
  3278                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3279  00186E  010F               	movlb	15	; () banked
  3280  001870  9D45               	bcf	69,6,b	;volatile
  3281  001872                     l365:
  3282                           
  3283                           ; BSR set to: 15
  3284                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3285  001872  0100               	movlb	0	; () banked
  3286  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3287  001876  D079               	goto	l366
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;inc\CANlib.h: 307: {
  3291                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3292  001878  0100               	movlb	0	; () banked
  3293  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3294  00187C  0100               	movlb	0	; () banked
  3295  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3296  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3297  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3298  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3302  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3306  00188A  0E00               	movlw	0
  3307  00188C  0100               	movlb	0	; () banked
  3308  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3309  001890  0100               	movlb	0	; () banked
  3310  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3311  001894  0EFF               	movlw	255
  3312  001896  0100               	movlb	0	; () banked
  3313  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3314  00189A  0100               	movlb	0	; () banked
  3315  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3316  00189E  0E00               	movlw	0
  3317  0018A0  0100               	movlb	0	; () banked
  3318  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3319  0018A4  0100               	movlb	0	; () banked
  3320  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3321  0018A8  0E00               	movlw	0
  3322  0018AA  0100               	movlb	0	; () banked
  3323  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3324  0018AE  0100               	movlb	0	; () banked
  3325  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3329  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3330  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3331  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3332  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3333  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3334  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3335  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3336  0018CE  0100               	movlb	0	; () banked
  3337  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3338  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3339  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3340  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3341  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3345  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3349  0018E6  0E00               	movlw	0
  3350  0018E8  010F               	movlb	15	; () banked
  3351  0018EA  6F42               	movwf	66,b	;volatile
  3352                           
  3353                           ; BSR set to: 15
  3354                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3355  0018EC  010F               	movlb	15	; () banked
  3356  0018EE  8742               	bsf	66,3,b	;volatile
  3357                           
  3358                           ; BSR set to: 15
  3359                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3360  0018F0  0100               	movlb	0	; () banked
  3361  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3362  0018F4  D002               	goto	l367
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3366  0018F6  010F               	movlb	15	; () banked
  3367  0018F8  8142               	bsf	66,0,b	;volatile
  3368  0018FA                     l367:
  3369                           
  3370                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3371  0018FA  0100               	movlb	0	; () banked
  3372  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3373  0018FE  D002               	goto	l368
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3377  001900  010F               	movlb	15	; () banked
  3378  001902  8342               	bsf	66,1,b	;volatile
  3379  001904                     l368:
  3380                           
  3381                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3382  001904  0100               	movlb	0	; () banked
  3383  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3384  001908  D002               	goto	l369
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3388  00190A  010F               	movlb	15	; () banked
  3389  00190C  8B42               	bsf	66,5,b	;volatile
  3390  00190E                     l369:
  3391                           
  3392                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3393  00190E  0100               	movlb	0	; () banked
  3394  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3395  001912  D002               	goto	l370
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3399  001914  010F               	movlb	15	; () banked
  3400  001916  8D42               	bsf	66,6,b	;volatile
  3401  001918                     l370:
  3402                           
  3403                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3404  001918  0100               	movlb	0	; () banked
  3405  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3406  00191C  D002               	goto	l7420
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3410  00191E  010F               	movlb	15	; () banked
  3411  001920  8F42               	bsf	66,7,b	;volatile
  3412  001922                     l7420:
  3413                           
  3414                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3415  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3416  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3417  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3418  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3419  001932  0E16               	movlw	22
  3420  001934  D006               	goto	u9790
  3421  001936                     u9795:
  3422  001936  0100               	movlb	0	; () banked
  3423  001938  90D8               	bcf	status,0,c
  3424  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3425  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3426  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3427  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3428  001942                     u9790:
  3429  001942  2EE8               	decfsz	wreg,f,c
  3430  001944  D7F8               	goto	u9795
  3431  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3432  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3433  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3434  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3438  001956  0100               	movlb	0	; () banked
  3439  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3440  00195A  0100               	movlb	0	; () banked
  3441  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3442  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3443  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3444  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3448  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3449                           
  3450                           ;inc\CANlib.h: 333: }
  3451  001968  D059               	goto	l7440
  3452  00196A                     l366:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;inc\CANlib.h: 335: else
  3456                           ;inc\CANlib.h: 337: {
  3457                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3458  00196A  010F               	movlb	15	; () banked
  3459  00196C  9742               	bcf	66,3,b	;volatile
  3460                           
  3461                           ; BSR set to: 15
  3462                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3463  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3464  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3465  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3466  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3467  00197E  0E04               	movlw	4
  3468  001980  D006               	goto	u9800
  3469  001982                     u9805:
  3470  001982  0100               	movlb	0	; () banked
  3471  001984  90D8               	bcf	status,0,c
  3472  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3473  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3474  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3475  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3476  00198E                     u9800:
  3477  00198E  2EE8               	decfsz	wreg,f,c
  3478  001990  D7F8               	goto	u9805
  3479  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3480  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3481  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3482  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3486  0019A2  0100               	movlb	0	; () banked
  3487  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3488  0019A6  0100               	movlb	0	; () banked
  3489  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3490  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3491  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3492  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3496  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3500  0019B4  0E07               	movlw	7
  3501  0019B6  0100               	movlb	0	; () banked
  3502  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3503  0019BA  0100               	movlb	0	; () banked
  3504  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3505  0019BE  0E00               	movlw	0
  3506  0019C0  0100               	movlb	0	; () banked
  3507  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3508  0019C4  0100               	movlb	0	; () banked
  3509  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3510  0019C8  0E00               	movlw	0
  3511  0019CA  0100               	movlb	0	; () banked
  3512  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3513  0019CE  0100               	movlb	0	; () banked
  3514  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3515  0019D2  0E00               	movlw	0
  3516  0019D4  0100               	movlb	0	; () banked
  3517  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3518  0019D8  0100               	movlb	0	; () banked
  3519  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3523  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3524  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3525  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3526  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3527  0019EC  0E05               	movlw	5
  3528  0019EE                     u9815:
  3529  0019EE  90D8               	bcf	status,0,c
  3530  0019F0  0100               	movlb	0	; () banked
  3531  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3532  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3533  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3534  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3535  0019FA  2EE8               	decfsz	wreg,f,c
  3536  0019FC  D7F8               	goto	u9815
  3537  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3538  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3539  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3540  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3544  001A0E  010F               	movlb	15	; () banked
  3545  001A10  5142               	movf	66,w,b	;volatile
  3546  001A12  0B1F               	andlw	31
  3547  001A14  010F               	movlb	15	; () banked
  3548  001A16  6F42               	movwf	66,b	;volatile
  3549                           
  3550                           ; BSR set to: 15
  3551                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3552  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3553  001A1C                     l7440:
  3554                           
  3555                           ;inc\CANlib.h: 348: }
  3556                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3557  001A1C  0100               	movlb	0	; () banked
  3558  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3559  001A20  D003               	goto	l373
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3563  001A22  010F               	movlb	15	; () banked
  3564  001A24  8140               	bsf	64,0,b	;volatile
  3565  001A26  D002               	goto	l374
  3566  001A28                     l373:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;inc\CANlib.h: 352: else
  3570                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3571  001A28  010F               	movlb	15	; () banked
  3572  001A2A  9140               	bcf	64,0,b	;volatile
  3573  001A2C                     l374:
  3574                           
  3575                           ; BSR set to: 15
  3576                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3577  001A2C  0100               	movlb	0	; () banked
  3578  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3579  001A30  D003               	goto	l375
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3583  001A32  010F               	movlb	15	; () banked
  3584  001A34  8340               	bsf	64,1,b	;volatile
  3585  001A36  D002               	goto	l7446
  3586  001A38                     l375:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;inc\CANlib.h: 356: else
  3590                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3591  001A38  010F               	movlb	15	; () banked
  3592  001A3A  9340               	bcf	64,1,b	;volatile
  3593  001A3C                     l7446:
  3594                           
  3595                           ; BSR set to: 15
  3596                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3597  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3598  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3599  001A44  50DF               	movf	indf2,w,c
  3600  001A46  010F               	movlb	15	; () banked
  3601  001A48  6F46               	movwf	70,b	;volatile
  3602                           
  3603                           ; BSR set to: 15
  3604                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3605  001A4A  0100               	movlb	0	; () banked
  3606  001A4C  EE20 F001          	lfsr	2,1
  3607  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3608  001A52  26D9               	addwf	fsr2l,f,c
  3609  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3610  001A56  22DA               	addwfc	fsr2h,f,c
  3611  001A58  50DF               	movf	indf2,w,c
  3612  001A5A  010F               	movlb	15	; () banked
  3613  001A5C  6F47               	movwf	71,b	;volatile
  3614                           
  3615                           ; BSR set to: 15
  3616                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3617  001A5E  0100               	movlb	0	; () banked
  3618  001A60  EE20 F002          	lfsr	2,2
  3619  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3620  001A66  26D9               	addwf	fsr2l,f,c
  3621  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3622  001A6A  22DA               	addwfc	fsr2h,f,c
  3623  001A6C  50DF               	movf	indf2,w,c
  3624  001A6E  010F               	movlb	15	; () banked
  3625  001A70  6F48               	movwf	72,b	;volatile
  3626                           
  3627                           ; BSR set to: 15
  3628                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3629  001A72  0100               	movlb	0	; () banked
  3630  001A74  EE20 F003          	lfsr	2,3
  3631  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3632  001A7A  26D9               	addwf	fsr2l,f,c
  3633  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3634  001A7E  22DA               	addwfc	fsr2h,f,c
  3635  001A80  50DF               	movf	indf2,w,c
  3636  001A82  010F               	movlb	15	; () banked
  3637  001A84  6F49               	movwf	73,b	;volatile
  3638                           
  3639                           ; BSR set to: 15
  3640                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3641  001A86  0100               	movlb	0	; () banked
  3642  001A88  EE20 F004          	lfsr	2,4
  3643  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3644  001A8E  26D9               	addwf	fsr2l,f,c
  3645  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3646  001A92  22DA               	addwfc	fsr2h,f,c
  3647  001A94  50DF               	movf	indf2,w,c
  3648  001A96  010F               	movlb	15	; () banked
  3649  001A98  6F4A               	movwf	74,b	;volatile
  3650                           
  3651                           ; BSR set to: 15
  3652                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3653  001A9A  0100               	movlb	0	; () banked
  3654  001A9C  EE20 F005          	lfsr	2,5
  3655  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3656  001AA2  26D9               	addwf	fsr2l,f,c
  3657  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3658  001AA6  22DA               	addwfc	fsr2h,f,c
  3659  001AA8  50DF               	movf	indf2,w,c
  3660  001AAA  010F               	movlb	15	; () banked
  3661  001AAC  6F4B               	movwf	75,b	;volatile
  3662                           
  3663                           ; BSR set to: 15
  3664                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3665  001AAE  0100               	movlb	0	; () banked
  3666  001AB0  EE20 F006          	lfsr	2,6
  3667  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3668  001AB6  26D9               	addwf	fsr2l,f,c
  3669  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3670  001ABA  22DA               	addwfc	fsr2h,f,c
  3671  001ABC  50DF               	movf	indf2,w,c
  3672  001ABE  010F               	movlb	15	; () banked
  3673  001AC0  6F4C               	movwf	76,b	;volatile
  3674                           
  3675                           ; BSR set to: 15
  3676                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3677  001AC2  0100               	movlb	0	; () banked
  3678  001AC4  EE20 F007          	lfsr	2,7
  3679  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3680  001ACA  26D9               	addwf	fsr2l,f,c
  3681  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3682  001ACE  22DA               	addwfc	fsr2h,f,c
  3683  001AD0  50DF               	movf	indf2,w,c
  3684  001AD2  010F               	movlb	15	; () banked
  3685  001AD4  6F4D               	movwf	77,b	;volatile
  3686                           
  3687                           ; BSR set to: 15
  3688                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3689  001AD6  010F               	movlb	15	; () banked
  3690  001AD8  8740               	bsf	64,3,b	;volatile
  3691                           
  3692                           ; BSR set to: 15
  3693                           ;inc\CANlib.h: 369: return;
  3694  001ADA  0012               	return	
  3695  001ADC                     l363:
  3696                           
  3697                           ; BSR set to: 15
  3698                           ;inc\CANlib.h: 370: }
  3699                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3700  001ADC  010F               	movlb	15	; () banked
  3701  001ADE  B730               	btfsc	48,3,b	;volatile
  3702  001AE0  D13F               	goto	l378
  3703                           
  3704                           ; BSR set to: 15
  3705                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3706  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3707                           
  3708                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3709  001AE6  0100               	movlb	0	; () banked
  3710  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3711  001AEA  D003               	goto	l379
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3715  001AEC  010F               	movlb	15	; () banked
  3716  001AEE  8D35               	bsf	53,6,b	;volatile
  3717  001AF0  D002               	goto	l380
  3718  001AF2                     l379:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;inc\CANlib.h: 379: else
  3722                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3723  001AF2  010F               	movlb	15	; () banked
  3724  001AF4  9D35               	bcf	53,6,b	;volatile
  3725  001AF6                     l380:
  3726                           
  3727                           ; BSR set to: 15
  3728                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3729  001AF6  0100               	movlb	0	; () banked
  3730  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3731  001AFA  D079               	goto	l381
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 383: {
  3735                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3736  001AFC  0100               	movlb	0	; () banked
  3737  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3738  001B00  0100               	movlb	0	; () banked
  3739  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3740  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3741  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3742  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3746  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3750  001B0E  0E00               	movlw	0
  3751  001B10  0100               	movlb	0	; () banked
  3752  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3753  001B14  0100               	movlb	0	; () banked
  3754  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3755  001B18  0EFF               	movlw	255
  3756  001B1A  0100               	movlb	0	; () banked
  3757  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3758  001B1E  0100               	movlb	0	; () banked
  3759  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3760  001B22  0E00               	movlw	0
  3761  001B24  0100               	movlb	0	; () banked
  3762  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3763  001B28  0100               	movlb	0	; () banked
  3764  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3765  001B2C  0E00               	movlw	0
  3766  001B2E  0100               	movlb	0	; () banked
  3767  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3768  001B32  0100               	movlb	0	; () banked
  3769  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3773  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3774  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3775  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3776  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3777  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3778  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3779  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3780  001B52  0100               	movlb	0	; () banked
  3781  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3782  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3783  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3784  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3785  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3789  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3793  001B6A  0E00               	movlw	0
  3794  001B6C  010F               	movlb	15	; () banked
  3795  001B6E  6F32               	movwf	50,b	;volatile
  3796                           
  3797                           ; BSR set to: 15
  3798                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3799  001B70  010F               	movlb	15	; () banked
  3800  001B72  8732               	bsf	50,3,b	;volatile
  3801                           
  3802                           ; BSR set to: 15
  3803                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3804  001B74  0100               	movlb	0	; () banked
  3805  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3806  001B78  D002               	goto	l382
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3810  001B7A  010F               	movlb	15	; () banked
  3811  001B7C  8132               	bsf	50,0,b	;volatile
  3812  001B7E                     l382:
  3813                           
  3814                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3815  001B7E  0100               	movlb	0	; () banked
  3816  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3817  001B82  D002               	goto	l383
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3821  001B84  010F               	movlb	15	; () banked
  3822  001B86  8332               	bsf	50,1,b	;volatile
  3823  001B88                     l383:
  3824                           
  3825                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3826  001B88  0100               	movlb	0	; () banked
  3827  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3828  001B8C  D002               	goto	l384
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3832  001B8E  010F               	movlb	15	; () banked
  3833  001B90  8B32               	bsf	50,5,b	;volatile
  3834  001B92                     l384:
  3835                           
  3836                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3837  001B92  0100               	movlb	0	; () banked
  3838  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3839  001B96  D002               	goto	l385
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3843  001B98  010F               	movlb	15	; () banked
  3844  001B9A  8D32               	bsf	50,6,b	;volatile
  3845  001B9C                     l385:
  3846                           
  3847                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3848  001B9C  0100               	movlb	0	; () banked
  3849  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3850  001BA0  D002               	goto	l7496
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3854  001BA2  010F               	movlb	15	; () banked
  3855  001BA4  8F32               	bsf	50,7,b	;volatile
  3856  001BA6                     l7496:
  3857                           
  3858                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3859  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3860  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3861  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3862  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3863  001BB6  0E16               	movlw	22
  3864  001BB8  D006               	goto	u9920
  3865  001BBA                     u9925:
  3866  001BBA  0100               	movlb	0	; () banked
  3867  001BBC  90D8               	bcf	status,0,c
  3868  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3869  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3870  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3871  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3872  001BC6                     u9920:
  3873  001BC6  2EE8               	decfsz	wreg,f,c
  3874  001BC8  D7F8               	goto	u9925
  3875  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3876  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3877  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3878  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3882  001BDA  0100               	movlb	0	; () banked
  3883  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3884  001BDE  0100               	movlb	0	; () banked
  3885  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3886  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3887  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3888  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3892  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3893                           
  3894                           ;inc\CANlib.h: 408: }
  3895  001BEC  D059               	goto	l7516
  3896  001BEE                     l381:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;inc\CANlib.h: 410: else
  3900                           ;inc\CANlib.h: 412: {
  3901                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3902  001BEE  010F               	movlb	15	; () banked
  3903  001BF0  9732               	bcf	50,3,b	;volatile
  3904                           
  3905                           ; BSR set to: 15
  3906                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3907  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3908  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3909  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3910  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3911  001C02  0E04               	movlw	4
  3912  001C04  D006               	goto	u9930
  3913  001C06                     u9935:
  3914  001C06  0100               	movlb	0	; () banked
  3915  001C08  90D8               	bcf	status,0,c
  3916  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3917  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3918  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3919  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3920  001C12                     u9930:
  3921  001C12  2EE8               	decfsz	wreg,f,c
  3922  001C14  D7F8               	goto	u9935
  3923  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3924  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3925  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3926  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3930  001C26  0100               	movlb	0	; () banked
  3931  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3932  001C2A  0100               	movlb	0	; () banked
  3933  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3934  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3935  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3936  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3940  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3944  001C38  0E07               	movlw	7
  3945  001C3A  0100               	movlb	0	; () banked
  3946  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3947  001C3E  0100               	movlb	0	; () banked
  3948  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3949  001C42  0E00               	movlw	0
  3950  001C44  0100               	movlb	0	; () banked
  3951  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3952  001C48  0100               	movlb	0	; () banked
  3953  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3954  001C4C  0E00               	movlw	0
  3955  001C4E  0100               	movlb	0	; () banked
  3956  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3957  001C52  0100               	movlb	0	; () banked
  3958  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3959  001C56  0E00               	movlw	0
  3960  001C58  0100               	movlb	0	; () banked
  3961  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3962  001C5C  0100               	movlb	0	; () banked
  3963  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3967  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3968  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3969  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3970  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3971  001C70  0E05               	movlw	5
  3972  001C72                     u9945:
  3973  001C72  90D8               	bcf	status,0,c
  3974  001C74  0100               	movlb	0	; () banked
  3975  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3976  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3977  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3978  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3979  001C7E  2EE8               	decfsz	wreg,f,c
  3980  001C80  D7F8               	goto	u9945
  3981  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3982  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3983  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3984  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  3988  001C92  010F               	movlb	15	; () banked
  3989  001C94  5132               	movf	50,w,b	;volatile
  3990  001C96  0B1F               	andlw	31
  3991  001C98  010F               	movlb	15	; () banked
  3992  001C9A  6F32               	movwf	50,b	;volatile
  3993                           
  3994                           ; BSR set to: 15
  3995                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  3996  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3997  001CA0                     l7516:
  3998                           
  3999                           ;inc\CANlib.h: 423: }
  4000                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  4001  001CA0  0100               	movlb	0	; () banked
  4002  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4003  001CA4  D003               	goto	l388
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  4007  001CA6  010F               	movlb	15	; () banked
  4008  001CA8  8130               	bsf	48,0,b	;volatile
  4009  001CAA  D002               	goto	l389
  4010  001CAC                     l388:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 427: else
  4014                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  4015  001CAC  010F               	movlb	15	; () banked
  4016  001CAE  9130               	bcf	48,0,b	;volatile
  4017  001CB0                     l389:
  4018                           
  4019                           ; BSR set to: 15
  4020                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  4021  001CB0  0100               	movlb	0	; () banked
  4022  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4023  001CB4  D003               	goto	l390
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  4027  001CB6  010F               	movlb	15	; () banked
  4028  001CB8  8330               	bsf	48,1,b	;volatile
  4029  001CBA  D002               	goto	l7522
  4030  001CBC                     l390:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 431: else
  4034                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  4035  001CBC  010F               	movlb	15	; () banked
  4036  001CBE  9330               	bcf	48,1,b	;volatile
  4037  001CC0                     l7522:
  4038                           
  4039                           ; BSR set to: 15
  4040                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  4041  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4042  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4043  001CC8  50DF               	movf	indf2,w,c
  4044  001CCA  010F               	movlb	15	; () banked
  4045  001CCC  6F36               	movwf	54,b	;volatile
  4046                           
  4047                           ; BSR set to: 15
  4048                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  4049  001CCE  0100               	movlb	0	; () banked
  4050  001CD0  EE20 F001          	lfsr	2,1
  4051  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4052  001CD6  26D9               	addwf	fsr2l,f,c
  4053  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4054  001CDA  22DA               	addwfc	fsr2h,f,c
  4055  001CDC  50DF               	movf	indf2,w,c
  4056  001CDE  010F               	movlb	15	; () banked
  4057  001CE0  6F37               	movwf	55,b	;volatile
  4058                           
  4059                           ; BSR set to: 15
  4060                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  4061  001CE2  0100               	movlb	0	; () banked
  4062  001CE4  EE20 F002          	lfsr	2,2
  4063  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4064  001CEA  26D9               	addwf	fsr2l,f,c
  4065  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4066  001CEE  22DA               	addwfc	fsr2h,f,c
  4067  001CF0  50DF               	movf	indf2,w,c
  4068  001CF2  010F               	movlb	15	; () banked
  4069  001CF4  6F38               	movwf	56,b	;volatile
  4070                           
  4071                           ; BSR set to: 15
  4072                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  4073  001CF6  0100               	movlb	0	; () banked
  4074  001CF8  EE20 F003          	lfsr	2,3
  4075  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4076  001CFE  26D9               	addwf	fsr2l,f,c
  4077  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4078  001D02  22DA               	addwfc	fsr2h,f,c
  4079  001D04  50DF               	movf	indf2,w,c
  4080  001D06  010F               	movlb	15	; () banked
  4081  001D08  6F39               	movwf	57,b	;volatile
  4082                           
  4083                           ; BSR set to: 15
  4084                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  4085  001D0A  0100               	movlb	0	; () banked
  4086  001D0C  EE20 F004          	lfsr	2,4
  4087  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4088  001D12  26D9               	addwf	fsr2l,f,c
  4089  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4090  001D16  22DA               	addwfc	fsr2h,f,c
  4091  001D18  50DF               	movf	indf2,w,c
  4092  001D1A  010F               	movlb	15	; () banked
  4093  001D1C  6F3A               	movwf	58,b	;volatile
  4094                           
  4095                           ; BSR set to: 15
  4096                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  4097  001D1E  0100               	movlb	0	; () banked
  4098  001D20  EE20 F005          	lfsr	2,5
  4099  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4100  001D26  26D9               	addwf	fsr2l,f,c
  4101  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4102  001D2A  22DA               	addwfc	fsr2h,f,c
  4103  001D2C  50DF               	movf	indf2,w,c
  4104  001D2E  010F               	movlb	15	; () banked
  4105  001D30  6F3B               	movwf	59,b	;volatile
  4106                           
  4107                           ; BSR set to: 15
  4108                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  4109  001D32  0100               	movlb	0	; () banked
  4110  001D34  EE20 F006          	lfsr	2,6
  4111  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4112  001D3A  26D9               	addwf	fsr2l,f,c
  4113  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4114  001D3E  22DA               	addwfc	fsr2h,f,c
  4115  001D40  50DF               	movf	indf2,w,c
  4116  001D42  010F               	movlb	15	; () banked
  4117  001D44  6F3C               	movwf	60,b	;volatile
  4118                           
  4119                           ; BSR set to: 15
  4120                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  4121  001D46  0100               	movlb	0	; () banked
  4122  001D48  EE20 F007          	lfsr	2,7
  4123  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4124  001D4E  26D9               	addwf	fsr2l,f,c
  4125  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4126  001D52  22DA               	addwfc	fsr2h,f,c
  4127  001D54  50DF               	movf	indf2,w,c
  4128  001D56  010F               	movlb	15	; () banked
  4129  001D58  6F3D               	movwf	61,b	;volatile
  4130                           
  4131                           ; BSR set to: 15
  4132                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  4133  001D5A  010F               	movlb	15	; () banked
  4134  001D5C  8730               	bsf	48,3,b	;volatile
  4135                           
  4136                           ; BSR set to: 15
  4137                           ;inc\CANlib.h: 445: return;
  4138  001D5E  0012               	return	
  4139  001D60                     l378:
  4140                           
  4141                           ; BSR set to: 15
  4142                           ;inc\CANlib.h: 446: }
  4143                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  4144  001D60  010F               	movlb	15	; () banked
  4145  001D62  B720               	btfsc	32,3,b	;volatile
  4146  001D64  0012               	return	
  4147                           
  4148                           ; BSR set to: 15
  4149                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  4150  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4151                           
  4152                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  4153  001D6A  0100               	movlb	0	; () banked
  4154  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4155  001D6E  D003               	goto	l393
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  4159  001D70  010F               	movlb	15	; () banked
  4160  001D72  8D25               	bsf	37,6,b	;volatile
  4161  001D74  D002               	goto	l394
  4162  001D76                     l393:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;inc\CANlib.h: 455: else
  4166                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  4167  001D76  010F               	movlb	15	; () banked
  4168  001D78  9D25               	bcf	37,6,b	;volatile
  4169  001D7A                     l394:
  4170                           
  4171                           ; BSR set to: 15
  4172                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  4173  001D7A  0100               	movlb	0	; () banked
  4174  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4175  001D7E  D079               	goto	l395
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 459: {
  4179                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  4180  001D80  0100               	movlb	0	; () banked
  4181  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4182  001D84  0100               	movlb	0	; () banked
  4183  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4184  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4185  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4186  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  4190  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  4194  001D92  0E00               	movlw	0
  4195  001D94  0100               	movlb	0	; () banked
  4196  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4197  001D98  0100               	movlb	0	; () banked
  4198  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4199  001D9C  0EFF               	movlw	255
  4200  001D9E  0100               	movlb	0	; () banked
  4201  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4202  001DA2  0100               	movlb	0	; () banked
  4203  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4204  001DA6  0E00               	movlw	0
  4205  001DA8  0100               	movlb	0	; () banked
  4206  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4207  001DAC  0100               	movlb	0	; () banked
  4208  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4209  001DB0  0E00               	movlw	0
  4210  001DB2  0100               	movlb	0	; () banked
  4211  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4212  001DB6  0100               	movlb	0	; () banked
  4213  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4217  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4218  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4219  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4220  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4221  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4222  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4223  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4224  001DD6  0100               	movlb	0	; () banked
  4225  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4226  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4227  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4228  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4229  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4233  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4237  001DEE  0E00               	movlw	0
  4238  001DF0  010F               	movlb	15	; () banked
  4239  001DF2  6F22               	movwf	34,b	;volatile
  4240                           
  4241                           ; BSR set to: 15
  4242                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4243  001DF4  010F               	movlb	15	; () banked
  4244  001DF6  8722               	bsf	34,3,b	;volatile
  4245                           
  4246                           ; BSR set to: 15
  4247                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4248  001DF8  0100               	movlb	0	; () banked
  4249  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4250  001DFC  D002               	goto	l396
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4254  001DFE  010F               	movlb	15	; () banked
  4255  001E00  8122               	bsf	34,0,b	;volatile
  4256  001E02                     l396:
  4257                           
  4258                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4259  001E02  0100               	movlb	0	; () banked
  4260  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4261  001E06  D002               	goto	l397
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4265  001E08  010F               	movlb	15	; () banked
  4266  001E0A  8322               	bsf	34,1,b	;volatile
  4267  001E0C                     l397:
  4268                           
  4269                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4270  001E0C  0100               	movlb	0	; () banked
  4271  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4272  001E10  D002               	goto	l398
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4276  001E12  010F               	movlb	15	; () banked
  4277  001E14  8B22               	bsf	34,5,b	;volatile
  4278  001E16                     l398:
  4279                           
  4280                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4281  001E16  0100               	movlb	0	; () banked
  4282  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4283  001E1A  D002               	goto	l399
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4287  001E1C  010F               	movlb	15	; () banked
  4288  001E1E  8D22               	bsf	34,6,b	;volatile
  4289  001E20                     l399:
  4290                           
  4291                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4292  001E20  0100               	movlb	0	; () banked
  4293  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4294  001E24  D002               	goto	l7572
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4298  001E26  010F               	movlb	15	; () banked
  4299  001E28  8F22               	bsf	34,7,b	;volatile
  4300  001E2A                     l7572:
  4301                           
  4302                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4303  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4304  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4305  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4306  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4307  001E3A  0E16               	movlw	22
  4308  001E3C  D006               	goto	u10050
  4309  001E3E                     u10055:
  4310  001E3E  0100               	movlb	0	; () banked
  4311  001E40  90D8               	bcf	status,0,c
  4312  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4313  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4314  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4315  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4316  001E4A                     u10050:
  4317  001E4A  2EE8               	decfsz	wreg,f,c
  4318  001E4C  D7F8               	goto	u10055
  4319  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4320  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4321  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4322  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4326  001E5E  0100               	movlb	0	; () banked
  4327  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4328  001E62  0100               	movlb	0	; () banked
  4329  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4330  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4331  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4332  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4336  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4337                           
  4338                           ;inc\CANlib.h: 484: }
  4339  001E70  D059               	goto	l7592
  4340  001E72                     l395:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 486: else
  4344                           ;inc\CANlib.h: 488: {
  4345                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4346  001E72  010F               	movlb	15	; () banked
  4347  001E74  9722               	bcf	34,3,b	;volatile
  4348                           
  4349                           ; BSR set to: 15
  4350                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4351  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4352  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4353  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4354  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4355  001E86  0E04               	movlw	4
  4356  001E88  D006               	goto	u10060
  4357  001E8A                     u10065:
  4358  001E8A  0100               	movlb	0	; () banked
  4359  001E8C  90D8               	bcf	status,0,c
  4360  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4361  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4362  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4363  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4364  001E96                     u10060:
  4365  001E96  2EE8               	decfsz	wreg,f,c
  4366  001E98  D7F8               	goto	u10065
  4367  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4368  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4369  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4370  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4374  001EAA  0100               	movlb	0	; () banked
  4375  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4376  001EAE  0100               	movlb	0	; () banked
  4377  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4378  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4379  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4380  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4384  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4388  001EBC  0E07               	movlw	7
  4389  001EBE  0100               	movlb	0	; () banked
  4390  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4391  001EC2  0100               	movlb	0	; () banked
  4392  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4393  001EC6  0E00               	movlw	0
  4394  001EC8  0100               	movlb	0	; () banked
  4395  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4396  001ECC  0100               	movlb	0	; () banked
  4397  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4398  001ED0  0E00               	movlw	0
  4399  001ED2  0100               	movlb	0	; () banked
  4400  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4401  001ED6  0100               	movlb	0	; () banked
  4402  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4403  001EDA  0E00               	movlw	0
  4404  001EDC  0100               	movlb	0	; () banked
  4405  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4406  001EE0  0100               	movlb	0	; () banked
  4407  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4411  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4412  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4413  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4414  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4415  001EF4  0E05               	movlw	5
  4416  001EF6                     u10075:
  4417  001EF6  90D8               	bcf	status,0,c
  4418  001EF8  0100               	movlb	0	; () banked
  4419  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4420  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4421  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4422  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4423  001F02  2EE8               	decfsz	wreg,f,c
  4424  001F04  D7F8               	goto	u10075
  4425  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4426  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4427  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4428  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4432  001F16  010F               	movlb	15	; () banked
  4433  001F18  5122               	movf	34,w,b	;volatile
  4434  001F1A  0B1F               	andlw	31
  4435  001F1C  010F               	movlb	15	; () banked
  4436  001F1E  6F22               	movwf	34,b	;volatile
  4437                           
  4438                           ; BSR set to: 15
  4439                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4440  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4441  001F24                     l7592:
  4442                           
  4443                           ;inc\CANlib.h: 499: }
  4444                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4445  001F24  0100               	movlb	0	; () banked
  4446  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4447  001F28  D003               	goto	l402
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4451  001F2A  010F               	movlb	15	; () banked
  4452  001F2C  8120               	bsf	32,0,b	;volatile
  4453  001F2E  D002               	goto	l403
  4454  001F30                     l402:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 503: else
  4458                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4459  001F30  010F               	movlb	15	; () banked
  4460  001F32  9120               	bcf	32,0,b	;volatile
  4461  001F34                     l403:
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4465  001F34  0100               	movlb	0	; () banked
  4466  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4467  001F38  D003               	goto	l404
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4471  001F3A  010F               	movlb	15	; () banked
  4472  001F3C  8320               	bsf	32,1,b	;volatile
  4473  001F3E  D002               	goto	l7598
  4474  001F40                     l404:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;inc\CANlib.h: 507: else
  4478                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4479  001F40  010F               	movlb	15	; () banked
  4480  001F42  9320               	bcf	32,1,b	;volatile
  4481  001F44                     l7598:
  4482                           
  4483                           ; BSR set to: 15
  4484                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4485  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4486  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4487  001F4C  50DF               	movf	indf2,w,c
  4488  001F4E  010F               	movlb	15	; () banked
  4489  001F50  6F26               	movwf	38,b	;volatile
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4493  001F52  0100               	movlb	0	; () banked
  4494  001F54  EE20 F001          	lfsr	2,1
  4495  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4496  001F5A  26D9               	addwf	fsr2l,f,c
  4497  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4498  001F5E  22DA               	addwfc	fsr2h,f,c
  4499  001F60  50DF               	movf	indf2,w,c
  4500  001F62  010F               	movlb	15	; () banked
  4501  001F64  6F27               	movwf	39,b	;volatile
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4505  001F66  0100               	movlb	0	; () banked
  4506  001F68  EE20 F002          	lfsr	2,2
  4507  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4508  001F6E  26D9               	addwf	fsr2l,f,c
  4509  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4510  001F72  22DA               	addwfc	fsr2h,f,c
  4511  001F74  50DF               	movf	indf2,w,c
  4512  001F76  010F               	movlb	15	; () banked
  4513  001F78  6F28               	movwf	40,b	;volatile
  4514                           
  4515                           ; BSR set to: 15
  4516                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4517  001F7A  0100               	movlb	0	; () banked
  4518  001F7C  EE20 F003          	lfsr	2,3
  4519  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4520  001F82  26D9               	addwf	fsr2l,f,c
  4521  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4522  001F86  22DA               	addwfc	fsr2h,f,c
  4523  001F88  50DF               	movf	indf2,w,c
  4524  001F8A  010F               	movlb	15	; () banked
  4525  001F8C  6F29               	movwf	41,b	;volatile
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4529  001F8E  0100               	movlb	0	; () banked
  4530  001F90  EE20 F004          	lfsr	2,4
  4531  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4532  001F96  26D9               	addwf	fsr2l,f,c
  4533  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4534  001F9A  22DA               	addwfc	fsr2h,f,c
  4535  001F9C  50DF               	movf	indf2,w,c
  4536  001F9E  010F               	movlb	15	; () banked
  4537  001FA0  6F2A               	movwf	42,b	;volatile
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4541  001FA2  0100               	movlb	0	; () banked
  4542  001FA4  EE20 F005          	lfsr	2,5
  4543  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4544  001FAA  26D9               	addwf	fsr2l,f,c
  4545  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4546  001FAE  22DA               	addwfc	fsr2h,f,c
  4547  001FB0  50DF               	movf	indf2,w,c
  4548  001FB2  010F               	movlb	15	; () banked
  4549  001FB4  6F2B               	movwf	43,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4553  001FB6  0100               	movlb	0	; () banked
  4554  001FB8  EE20 F006          	lfsr	2,6
  4555  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4556  001FBE  26D9               	addwf	fsr2l,f,c
  4557  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4558  001FC2  22DA               	addwfc	fsr2h,f,c
  4559  001FC4  50DF               	movf	indf2,w,c
  4560  001FC6  010F               	movlb	15	; () banked
  4561  001FC8  6F2C               	movwf	44,b	;volatile
  4562                           
  4563                           ; BSR set to: 15
  4564                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4565  001FCA  0100               	movlb	0	; () banked
  4566  001FCC  EE20 F007          	lfsr	2,7
  4567  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4568  001FD2  26D9               	addwf	fsr2l,f,c
  4569  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4570  001FD6  22DA               	addwfc	fsr2h,f,c
  4571  001FD8  50DF               	movf	indf2,w,c
  4572  001FDA  010F               	movlb	15	; () banked
  4573  001FDC  6F2D               	movwf	45,b	;volatile
  4574                           
  4575                           ; BSR set to: 15
  4576                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4577  001FDE  010F               	movlb	15	; () banked
  4578  001FE0  8720               	bsf	32,3,b	;volatile
  4579                           
  4580                           ; BSR set to: 15
  4581                           ;inc\CANlib.h: 521: return;
  4582  001FE2  0012               	return	
  4583  001FE4                     __end_of_CANsendMessage:
  4584                           	opt stack 0
  4585                           tblptru	equ	0xFF8
  4586                           tblptrh	equ	0xFF7
  4587                           tblptrl	equ	0xFF6
  4588                           tablat	equ	0xFF5
  4589                           postinc0	equ	0xFEE
  4590                           wreg	equ	0xFE8
  4591                           postdec1	equ	0xFE5
  4592                           fsr1l	equ	0xFE1
  4593                           indf2	equ	0xFDF
  4594                           postinc2	equ	0xFDE
  4595                           postdec2	equ	0xFDD
  4596                           fsr2h	equ	0xFDA
  4597                           fsr2l	equ	0xFD9
  4598                           status	equ	0xFD8
  4599                           
  4600 ;; *************** function _CANisTxReady *****************
  4601 ;; Defined at:
  4602 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      unsigned char 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;Total ram usage:        1 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    4
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;;		_park_search
  4628 ;;		_park_routine
  4629 ;;		_can_send
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text6
  4634  006698                     __ptext6:
  4635                           	opt stack 0
  4636  006698                     _CANisTxReady:
  4637                           	opt stack 23
  4638                           
  4639                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4640                           
  4641                           ; BSR set to: 15
  4642                           ;incstack = 0
  4643  006698  0E01               	movlw	1
  4644  00669A  0100               	movlb	0	; () banked
  4645  00669C  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648  00669E  010F               	movlb	15	; () banked
  4649  0066A0  A740               	btfss	64,3,b	;volatile
  4650  0066A2  D009               	goto	l556
  4651                           
  4652                           ; BSR set to: 15
  4653  0066A4  010F               	movlb	15	; () banked
  4654  0066A6  A730               	btfss	48,3,b	;volatile
  4655  0066A8  D006               	goto	l556
  4656                           
  4657                           ; BSR set to: 15
  4658  0066AA  010F               	movlb	15	; () banked
  4659  0066AC  A720               	btfss	32,3,b	;volatile
  4660  0066AE  D003               	goto	l556
  4661                           
  4662                           ; BSR set to: 15
  4663  0066B0  0E00               	movlw	0
  4664  0066B2  0100               	movlb	0	; () banked
  4665  0066B4  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4666  0066B6                     l556:
  4667  0066B6  0100               	movlb	0	; () banked
  4668  0066B8  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4669  0066BA  0012               	return	
  4670  0066BC                     __end_of_CANisTxReady:
  4671                           	opt stack 0
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           postinc0	equ	0xFEE
  4677                           wreg	equ	0xFE8
  4678                           postdec1	equ	0xFE5
  4679                           fsr1l	equ	0xFE1
  4680                           indf2	equ	0xFDF
  4681                           postinc2	equ	0xFDE
  4682                           postdec2	equ	0xFDD
  4683                           fsr2h	equ	0xFDA
  4684                           fsr2l	equ	0xFD9
  4685                           status	equ	0xFD8
  4686                           
  4687 ;; *************** function _abs *****************
  4688 ;; Defined at:
  4689 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  a               2   23[BANK0 ] int 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  2   23[BANK0 ] int 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;Total ram usage:        4 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    4
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_park_search
  4714 ;;		_parallelo
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text7
  4719  006640                     __ptext7:
  4720                           	opt stack 0
  4721  006640                     _abs:
  4722                           	opt stack 24
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;incstack = 0
  4726  006640  0100               	movlb	0	; () banked
  4727  006642  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4728  006644  D00E               	goto	l896
  4729                           
  4730                           ; BSR set to: 0
  4731  006646  C077  F079         	movff	abs@a,??_abs
  4732  00664A  C078  F07A         	movff	abs@a+1,??_abs+1
  4733  00664E  0100               	movlb	0	; () banked
  4734  006650  1F79               	comf	??_abs& (0+255),f,b
  4735  006652  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4736  006654  4B79               	infsnz	??_abs& (0+255),f,b
  4737  006656  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4738  006658  C079  F077         	movff	??_abs,?_abs
  4739  00665C  C07A  F078         	movff	??_abs+1,?_abs+1
  4740  006660  0012               	return	
  4741  006662                     l896:
  4742                           
  4743                           ; BSR set to: 0
  4744  006662  C077  F077         	movff	abs@a,?_abs
  4745  006666  C078  F078         	movff	abs@a+1,?_abs+1
  4746                           
  4747                           ; BSR set to: 0
  4748  00666A  0012               	return		;funcret
  4749  00666C                     __end_of_abs:
  4750                           	opt stack 0
  4751                           tblptru	equ	0xFF8
  4752                           tblptrh	equ	0xFF7
  4753                           tblptrl	equ	0xFF6
  4754                           tablat	equ	0xFF5
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           postdec1	equ	0xFE5
  4758                           fsr1l	equ	0xFE1
  4759                           indf2	equ	0xFDF
  4760                           postinc2	equ	0xFDE
  4761                           postdec2	equ	0xFDD
  4762                           fsr2h	equ	0xFDA
  4763                           fsr2l	equ	0xFD9
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _matematica *****************
  4767 ;; Defined at:
  4768 ;;		line 460 in file "parcheggio.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;		None               void
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;Total ram usage:       28 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    8
  4789 ;; This function calls:
  4790 ;;		___fladd
  4791 ;;		___fldiv
  4792 ;;		___flmul
  4793 ;;		___flneg
  4794 ;;		_asin
  4795 ;;		_cos
  4796 ;; This function is called by:
  4797 ;;		_park_routine
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text8
  4802  002674                     __ptext8:
  4803                           	opt stack 0
  4804  002674                     _matematica:
  4805                           	opt stack 21
  4806                           
  4807                           ;parcheggio.c: 461: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;incstack = 0
  4811  002674  C12C  F0AD         	movff	_bordo,___fladd@a	;volatile
  4812  002678  C12D  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4813  00267C  C12E  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4814  002680  C12F  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4815  002684  0E00               	movlw	0
  4816  002686  0100               	movlb	0	; () banked
  4817  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4818  00268A  0E00               	movlw	0
  4819  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4820  00268E  0E00               	movlw	0
  4821  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4822  002692  0E40               	movlw	64
  4823  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4824  002696  C1E4  F077         	movff	_larghezza,___fldiv@b
  4825  00269A  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4826  00269E  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4827  0026A2  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4828  0026A6  EC4D  F021         	call	___fldiv	;wreg free
  4829  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4830  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4831  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4832  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4833  0026BA  EC85  F018         	call	___fladd	;wreg free
  4834  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4835  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4836  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4837  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4838  0026CE  ECE9  F032         	call	___flneg	;wreg free
  4839  0026D2  C0BD  F1BC         	movff	?___flneg,_matematica$3746
  4840  0026D6  C0BE  F1BD         	movff	?___flneg+1,_matematica$3746+1
  4841  0026DA  C0BF  F1BE         	movff	?___flneg+2,_matematica$3746+2
  4842  0026DE  C0C0  F1BF         	movff	?___flneg+3,_matematica$3746+3
  4843                           
  4844                           ;parcheggio.c: 461: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4845  0026E2  C1BC  F0AD         	movff	_matematica$3746,___fladd@a
  4846  0026E6  C1BD  F0AE         	movff	_matematica$3746+1,___fladd@a+1
  4847  0026EA  C1BE  F0AF         	movff	_matematica$3746+2,___fladd@a+2
  4848  0026EE  C1BF  F0B0         	movff	_matematica$3746+3,___fladd@a+3
  4849  0026F2  0E00               	movlw	0
  4850  0026F4  0100               	movlb	0	; () banked
  4851  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4852  0026F8  0E00               	movlw	0
  4853  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4854  0026FC  0E00               	movlw	0
  4855  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4856  002700  0E40               	movlw	64
  4857  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4858  002704  C1E8  F090         	movff	_raggio,___flmul@b
  4859  002708  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4860  00270C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4861  002710  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4862  002714  ECD9  F01A         	call	___flmul	;wreg free
  4863  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4864  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4865  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4866  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4867  002728  EC85  F018         	call	___fladd	;wreg free
  4868  00272C  C0A9  F1C0         	movff	?___fladd,_matematica$3747
  4869  002730  C0AA  F1C1         	movff	?___fladd+1,_matematica$3747+1
  4870  002734  C0AB  F1C2         	movff	?___fladd+2,_matematica$3747+2
  4871  002738  C0AC  F1C3         	movff	?___fladd+3,_matematica$3747+3
  4872                           
  4873                           ;parcheggio.c: 461: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4874  00273C  0E00               	movlw	0
  4875  00273E  0100               	movlb	0	; () banked
  4876  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4877  002742  0E00               	movlw	0
  4878  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4879  002746  0E00               	movlw	0
  4880  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4881  00274A  0E40               	movlw	64
  4882  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4883  00274E  C1E4  F077         	movff	_larghezza,___fldiv@b
  4884  002752  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4885  002756  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4886  00275A  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4887  00275E  EC4D  F021         	call	___fldiv	;wreg free
  4888  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4889  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4890  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4891  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4892  002772  ECE9  F032         	call	___flneg	;wreg free
  4893  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4894  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4895  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4896  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4897  002786  C1C0  F0A9         	movff	_matematica$3747,___fladd@b
  4898  00278A  C1C1  F0AA         	movff	_matematica$3747+1,___fladd@b+1
  4899  00278E  C1C2  F0AB         	movff	_matematica$3747+2,___fladd@b+2
  4900  002792  C1C3  F0AC         	movff	_matematica$3747+3,___fladd@b+3
  4901  002796  EC85  F018         	call	___fladd	;wreg free
  4902  00279A  C0A9  F1C4         	movff	?___fladd,_matematica$3748
  4903  00279E  C0AA  F1C5         	movff	?___fladd+1,_matematica$3748+1
  4904  0027A2  C0AB  F1C6         	movff	?___fladd+2,_matematica$3748+2
  4905  0027A6  C0AC  F1C7         	movff	?___fladd+3,_matematica$3748+3
  4906                           
  4907                           ;parcheggio.c: 461: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4908  0027AA  C1C4  F077         	movff	_matematica$3748,___fldiv@b
  4909  0027AE  C1C5  F078         	movff	_matematica$3748+1,___fldiv@b+1
  4910  0027B2  C1C6  F079         	movff	_matematica$3748+2,___fldiv@b+2
  4911  0027B6  C1C7  F07A         	movff	_matematica$3748+3,___fldiv@b+3
  4912  0027BA  0E00               	movlw	0
  4913  0027BC  0100               	movlb	0	; () banked
  4914  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4915  0027C0  0E00               	movlw	0
  4916  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4917  0027C4  0E00               	movlw	0
  4918  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4919  0027C8  0E40               	movlw	64
  4920  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4921  0027CC  C1E8  F090         	movff	_raggio,___flmul@b
  4922  0027D0  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4923  0027D4  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4924  0027D8  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4925  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4926  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4927  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4928  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4929  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4930  0027F0  EC4D  F021         	call	___fldiv	;wreg free
  4931  0027F4  C077  F1C8         	movff	?___fldiv,_matematica$3749
  4932  0027F8  C078  F1C9         	movff	?___fldiv+1,_matematica$3749+1
  4933  0027FC  C079  F1CA         	movff	?___fldiv+2,_matematica$3749+2
  4934  002800  C07A  F1CB         	movff	?___fldiv+3,_matematica$3749+3
  4935                           
  4936                           ;parcheggio.c: 461: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4937  002804  C1C8  F0D5         	movff	_matematica$3749,asin@x
  4938  002808  C1C9  F0D6         	movff	_matematica$3749+1,asin@x+1
  4939  00280C  C1CA  F0D7         	movff	_matematica$3749+2,asin@x+2
  4940  002810  C1CB  F0D8         	movff	_matematica$3749+3,asin@x+3
  4941  002814  EC88  F026         	call	_asin	;wreg free
  4942  002818  C0D5  F124         	movff	?_asin,_alfa
  4943  00281C  C0D6  F125         	movff	?_asin+1,_alfa+1
  4944  002820  C0D7  F126         	movff	?_asin+2,_alfa+2
  4945  002824  C0D8  F127         	movff	?_asin+3,_alfa+3
  4946                           
  4947                           ;parcheggio.c: 462: alfa = alfa / 3.14159265358979323846 * 180;
  4948  002828  0EDB               	movlw	219
  4949  00282A  0100               	movlb	0	; () banked
  4950  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4951  00282E  0E0F               	movlw	15
  4952  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4953  002832  0E49               	movlw	73
  4954  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4955  002836  0E40               	movlw	64
  4956  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4957  00283A  C124  F077         	movff	_alfa,___fldiv@b
  4958  00283E  C125  F078         	movff	_alfa+1,___fldiv@b+1
  4959  002842  C126  F079         	movff	_alfa+2,___fldiv@b+2
  4960  002846  C127  F07A         	movff	_alfa+3,___fldiv@b+3
  4961  00284A  EC4D  F021         	call	___fldiv	;wreg free
  4962  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4963  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4964  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4965  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4966  00285E  0E00               	movlw	0
  4967  002860  0100               	movlb	0	; () banked
  4968  002862  6F94               	movwf	___flmul@a& (0+255),b
  4969  002864  0E00               	movlw	0
  4970  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4971  002868  0E34               	movlw	52
  4972  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4973  00286C  0E43               	movlw	67
  4974  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4975  002870  ECD9  F01A         	call	___flmul	;wreg free
  4976  002874  C090  F124         	movff	?___flmul,_alfa
  4977  002878  C091  F125         	movff	?___flmul+1,_alfa+1
  4978  00287C  C092  F126         	movff	?___flmul+2,_alfa+2
  4979  002880  C093  F127         	movff	?___flmul+3,_alfa+3
  4980                           
  4981                           ;parcheggio.c: 463: beta = 90 - alfa;
  4982  002884  C124  F0BD         	movff	_alfa,___flneg@f1
  4983  002888  C125  F0BE         	movff	_alfa+1,___flneg@f1+1
  4984  00288C  C126  F0BF         	movff	_alfa+2,___flneg@f1+2
  4985  002890  C127  F0C0         	movff	_alfa+3,___flneg@f1+3
  4986  002894  ECE9  F032         	call	___flneg	;wreg free
  4987  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4988  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4989  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4990  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4991  0028A8  0E00               	movlw	0
  4992  0028AA  0100               	movlb	0	; () banked
  4993  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  4994  0028AE  0E00               	movlw	0
  4995  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4996  0028B2  0EB4               	movlw	180
  4997  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4998  0028B6  0E42               	movlw	66
  4999  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5000  0028BA  EC85  F018         	call	___fladd	;wreg free
  5001  0028BE  C0A9  F128         	movff	?___fladd,_beta
  5002  0028C2  C0AA  F129         	movff	?___fladd+1,_beta+1
  5003  0028C6  C0AB  F12A         	movff	?___fladd+2,_beta+2
  5004  0028CA  C0AC  F12B         	movff	?___fladd+3,_beta+3
  5005                           
  5006                           ;parcheggio.c: 464: alfa = (alfa * 3.14159265358979323846) / 180;
  5007  0028CE  0EDB               	movlw	219
  5008  0028D0  0100               	movlb	0	; () banked
  5009  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  5010  0028D4  0E0F               	movlw	15
  5011  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5012  0028D8  0E49               	movlw	73
  5013  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5014  0028DC  0E40               	movlw	64
  5015  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5016  0028E0  C124  F090         	movff	_alfa,___flmul@b
  5017  0028E4  C125  F091         	movff	_alfa+1,___flmul@b+1
  5018  0028E8  C126  F092         	movff	_alfa+2,___flmul@b+2
  5019  0028EC  C127  F093         	movff	_alfa+3,___flmul@b+3
  5020  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5021  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  5022  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5023  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5024  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5025  002904  0E00               	movlw	0
  5026  002906  0100               	movlb	0	; () banked
  5027  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  5028  00290A  0E00               	movlw	0
  5029  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5030  00290E  0E34               	movlw	52
  5031  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5032  002912  0E43               	movlw	67
  5033  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5034  002916  EC4D  F021         	call	___fldiv	;wreg free
  5035  00291A  C077  F124         	movff	?___fldiv,_alfa
  5036  00291E  C078  F125         	movff	?___fldiv+1,_alfa+1
  5037  002922  C079  F126         	movff	?___fldiv+2,_alfa+2
  5038  002926  C07A  F127         	movff	?___fldiv+3,_alfa+3
  5039                           
  5040                           ;parcheggio.c: 465: n = cos(alfa);
  5041  00292A  C124  F1B4         	movff	_alfa,cos@f
  5042  00292E  C125  F1B5         	movff	_alfa+1,cos@f+1
  5043  002932  C126  F1B6         	movff	_alfa+2,cos@f+2
  5044  002936  C127  F1B7         	movff	_alfa+3,cos@f+3
  5045  00293A  EC2C  F030         	call	_cos	;wreg free
  5046  00293E  C1B4  F138         	movff	?_cos,_n
  5047  002942  C1B5  F139         	movff	?_cos+1,_n+1
  5048  002946  C1B6  F13A         	movff	?_cos+2,_n+2
  5049  00294A  C1B7  F13B         	movff	?_cos+3,_n+3
  5050                           
  5051                           ;parcheggio.c: 466: n = 2 * raggio *n;
  5052  00294E  C138  F094         	movff	_n,___flmul@a
  5053  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5054  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5055  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5056  00295E  C1E8  F090         	movff	_raggio,___flmul@b
  5057  002962  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5058  002966  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5059  00296A  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5060  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5061  002972  C090  F1D4         	movff	?___flmul,_matematica$3750
  5062  002976  C091  F1D5         	movff	?___flmul+1,_matematica$3750+1
  5063  00297A  C092  F1D6         	movff	?___flmul+2,_matematica$3750+2
  5064  00297E  C093  F1D7         	movff	?___flmul+3,_matematica$3750+3
  5065                           
  5066                           ;parcheggio.c: 466: n = 2 * raggio *n;
  5067  002982  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5068  002986  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5069  00298A  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5070  00298E  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5071  002992  0E00               	movlw	0
  5072  002994  0100               	movlb	0	; () banked
  5073  002996  6F94               	movwf	___flmul@a& (0+255),b
  5074  002998  0E00               	movlw	0
  5075  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5076  00299C  0E00               	movlw	0
  5077  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5078  0029A0  0E40               	movlw	64
  5079  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5080  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5081  0029A8  C090  F138         	movff	?___flmul,_n
  5082  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5083  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5084  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5085                           
  5086                           ;parcheggio.c: 467: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5087  0029B8  C128  F094         	movff	_beta,___flmul@a
  5088  0029BC  C129  F095         	movff	_beta+1,___flmul@a+1
  5089  0029C0  C12A  F096         	movff	_beta+2,___flmul@a+2
  5090  0029C4  C12B  F097         	movff	_beta+3,___flmul@a+3
  5091  0029C8  C1E8  F090         	movff	_raggio,___flmul@b
  5092  0029CC  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5093  0029D0  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5094  0029D4  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5095  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5096  0029DC  C090  F1D4         	movff	?___flmul,_matematica$3750
  5097  0029E0  C091  F1D5         	movff	?___flmul+1,_matematica$3750+1
  5098  0029E4  C092  F1D6         	movff	?___flmul+2,_matematica$3750+2
  5099  0029E8  C093  F1D7         	movff	?___flmul+3,_matematica$3750+3
  5100                           
  5101                           ;parcheggio.c: 467: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5102  0029EC  0EDB               	movlw	219
  5103  0029EE  0100               	movlb	0	; () banked
  5104  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5105  0029F2  0E0F               	movlw	15
  5106  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5107  0029F6  0EC9               	movlw	201
  5108  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5109  0029FA  0E40               	movlw	64
  5110  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5111  0029FE  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5112  002A02  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5113  002A06  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5114  002A0A  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5115  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5116  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5117  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5118  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5119  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5120  002A22  0E00               	movlw	0
  5121  002A24  0100               	movlb	0	; () banked
  5122  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5123  002A28  0E00               	movlw	0
  5124  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5125  002A2C  0EB4               	movlw	180
  5126  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5127  002A30  0E43               	movlw	67
  5128  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5129  002A34  EC4D  F021         	call	___fldiv	;wreg free
  5130  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5131  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5132  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5133  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5134                           
  5135                           ;parcheggio.c: 468: kkk = raggio + (2 * larghezza / 3);
  5136  002A48  0E00               	movlw	0
  5137  002A4A  0100               	movlb	0	; () banked
  5138  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5139  002A4E  0E00               	movlw	0
  5140  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5141  002A52  0E40               	movlw	64
  5142  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5143  002A56  0E40               	movlw	64
  5144  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5145  002A5A  0E00               	movlw	0
  5146  002A5C  0100               	movlb	0	; () banked
  5147  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5148  002A60  0E00               	movlw	0
  5149  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5150  002A64  0E00               	movlw	0
  5151  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5152  002A68  0E40               	movlw	64
  5153  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5154  002A6C  C1E4  F090         	movff	_larghezza,___flmul@b
  5155  002A70  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5156  002A74  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5157  002A78  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5158  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5159  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5160  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5161  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5162  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5163  002A90  EC4D  F021         	call	___fldiv	;wreg free
  5164  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5165  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5166  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5167  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5168  002AA4  C1E8  F0AD         	movff	_raggio,___fladd@a
  5169  002AA8  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5170  002AAC  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5171  002AB0  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5172  002AB4  EC85  F018         	call	___fladd	;wreg free
  5173  002AB8  C0A9  F134         	movff	?___fladd,_kkk
  5174  002ABC  C0AA  F135         	movff	?___fladd+1,_kkk+1
  5175  002AC0  C0AB  F136         	movff	?___fladd+2,_kkk+2
  5176  002AC4  C0AC  F137         	movff	?___fladd+3,_kkk+3
  5177                           
  5178                           ;parcheggio.c: 469: jjj = raggio - (2 * larghezza / 3);
  5179  002AC8  0E00               	movlw	0
  5180  002ACA  0100               	movlb	0	; () banked
  5181  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5182  002ACE  0E00               	movlw	0
  5183  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5184  002AD2  0E40               	movlw	64
  5185  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5186  002AD6  0E40               	movlw	64
  5187  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5188  002ADA  0E00               	movlw	0
  5189  002ADC  0100               	movlb	0	; () banked
  5190  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5191  002AE0  0E00               	movlw	0
  5192  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5193  002AE4  0E00               	movlw	0
  5194  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5195  002AE8  0E40               	movlw	64
  5196  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5197  002AEC  C1E4  F090         	movff	_larghezza,___flmul@b
  5198  002AF0  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5199  002AF4  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5200  002AF8  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5201  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5202  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5203  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5204  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5205  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5206  002B10  EC4D  F021         	call	___fldiv	;wreg free
  5207  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5208  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5209  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5210  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5211  002B24  ECE9  F032         	call	___flneg	;wreg free
  5212  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5213  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5214  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5215  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5216  002B38  C1E8  F0AD         	movff	_raggio,___fladd@a
  5217  002B3C  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5218  002B40  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5219  002B44  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5220  002B48  EC85  F018         	call	___fladd	;wreg free
  5221  002B4C  C0A9  F130         	movff	?___fladd,_jjj
  5222  002B50  C0AA  F131         	movff	?___fladd+1,_jjj+1
  5223  002B54  C0AB  F132         	movff	?___fladd+2,_jjj+2
  5224  002B58  C0AC  F133         	movff	?___fladd+3,_jjj+3
  5225                           
  5226                           ;parcheggio.c: 470: Pminimo = kkk * cos(asin((jjj / kkk)));
  5227  002B5C  C134  F07B         	movff	_kkk,___fldiv@a
  5228  002B60  C135  F07C         	movff	_kkk+1,___fldiv@a+1
  5229  002B64  C136  F07D         	movff	_kkk+2,___fldiv@a+2
  5230  002B68  C137  F07E         	movff	_kkk+3,___fldiv@a+3
  5231  002B6C  C130  F077         	movff	_jjj,___fldiv@b
  5232  002B70  C131  F078         	movff	_jjj+1,___fldiv@b+1
  5233  002B74  C132  F079         	movff	_jjj+2,___fldiv@b+2
  5234  002B78  C133  F07A         	movff	_jjj+3,___fldiv@b+3
  5235  002B7C  EC4D  F021         	call	___fldiv	;wreg free
  5236  002B80  C077  F1CC         	movff	?___fldiv,_matematica$3751
  5237  002B84  C078  F1CD         	movff	?___fldiv+1,_matematica$3751+1
  5238  002B88  C079  F1CE         	movff	?___fldiv+2,_matematica$3751+2
  5239  002B8C  C07A  F1CF         	movff	?___fldiv+3,_matematica$3751+3
  5240                           
  5241                           ;parcheggio.c: 470: Pminimo = kkk * cos(asin((jjj / kkk)));
  5242  002B90  C1CC  F0D5         	movff	_matematica$3751,asin@x
  5243  002B94  C1CD  F0D6         	movff	_matematica$3751+1,asin@x+1
  5244  002B98  C1CE  F0D7         	movff	_matematica$3751+2,asin@x+2
  5245  002B9C  C1CF  F0D8         	movff	_matematica$3751+3,asin@x+3
  5246  002BA0  EC88  F026         	call	_asin	;wreg free
  5247  002BA4  C0D5  F1B4         	movff	?_asin,cos@f
  5248  002BA8  C0D6  F1B5         	movff	?_asin+1,cos@f+1
  5249  002BAC  C0D7  F1B6         	movff	?_asin+2,cos@f+2
  5250  002BB0  C0D8  F1B7         	movff	?_asin+3,cos@f+3
  5251  002BB4  EC2C  F030         	call	_cos	;wreg free
  5252  002BB8  C1B4  F1D0         	movff	?_cos,_matematica$3752
  5253  002BBC  C1B5  F1D1         	movff	?_cos+1,_matematica$3752+1
  5254  002BC0  C1B6  F1D2         	movff	?_cos+2,_matematica$3752+2
  5255  002BC4  C1B7  F1D3         	movff	?_cos+3,_matematica$3752+3
  5256                           
  5257                           ;parcheggio.c: 470: Pminimo = kkk * cos(asin((jjj / kkk)));
  5258  002BC8  C1D0  F090         	movff	_matematica$3752,___flmul@b
  5259  002BCC  C1D1  F091         	movff	_matematica$3752+1,___flmul@b+1
  5260  002BD0  C1D2  F092         	movff	_matematica$3752+2,___flmul@b+2
  5261  002BD4  C1D3  F093         	movff	_matematica$3752+3,___flmul@b+3
  5262  002BD8  C134  F094         	movff	_kkk,___flmul@a
  5263  002BDC  C135  F095         	movff	_kkk+1,___flmul@a+1
  5264  002BE0  C136  F096         	movff	_kkk+2,___flmul@a+2
  5265  002BE4  C137  F097         	movff	_kkk+3,___flmul@a+3
  5266  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5267  002BEC  C090  F120         	movff	?___flmul,_Pminimo
  5268  002BF0  C091  F121         	movff	?___flmul+1,_Pminimo+1
  5269  002BF4  C092  F122         	movff	?___flmul+2,_Pminimo+2
  5270  002BF8  C093  F123         	movff	?___flmul+3,_Pminimo+3
  5271  002BFC  0012               	return		;funcret
  5272  002BFE                     __end_of_matematica:
  5273                           	opt stack 0
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           postdec1	equ	0xFE5
  5281                           fsr1l	equ	0xFE1
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _cos *****************
  5290 ;; Defined at:
  5291 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  f               4   41[BANK1 ] int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  4   41[BANK1 ] int 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5305 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;Total ram usage:        8 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    7
  5312 ;; This function calls:
  5313 ;;		___fladd
  5314 ;;		___flge
  5315 ;;		_sin
  5316 ;; This function is called by:
  5317 ;;		_matematica
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text9
  5322  006058                     __ptext9:
  5323                           	opt stack 0
  5324  006058                     _cos:
  5325                           	opt stack 21
  5326                           
  5327                           ;incstack = 0
  5328  006058  0EDB               	movlw	219
  5329  00605A  0100               	movlb	0	; () banked
  5330  00605C  6FC5               	movwf	___flge@ff1& (0+255),b
  5331  00605E  0E0F               	movlw	15
  5332  006060  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5333  006062  0E49               	movlw	73
  5334  006064  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5335  006066  0E40               	movlw	64
  5336  006068  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5337  00606A  C1B4  F0C9         	movff	cos@f,___flge@ff2
  5338  00606E  C1B5  F0CA         	movff	cos@f+1,___flge@ff2+1
  5339  006072  C1B6  F0CB         	movff	cos@f+2,___flge@ff2+2
  5340  006076  C1B7  F0CC         	movff	cos@f+3,___flge@ff2+3
  5341  00607A  EC26  F02D         	call	___flge	;wreg free
  5342  00607E  0100               	movlb	0	; () banked
  5343  006080  B0D8               	btfsc	status,0,c
  5344  006082  D02E               	goto	l7894
  5345                           
  5346                           ; BSR set to: 0
  5347  006084  C1B4  F0A9         	movff	cos@f,___fladd@b
  5348  006088  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5349  00608C  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5350  006090  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5351  006094  0EE4               	movlw	228
  5352  006096  0100               	movlb	0	; () banked
  5353  006098  6FAD               	movwf	___fladd@a& (0+255),b
  5354  00609A  0ECB               	movlw	203
  5355  00609C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5356  00609E  0E96               	movlw	150
  5357  0060A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5358  0060A2  0EC0               	movlw	192
  5359  0060A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5360  0060A6  EC85  F018         	call	___fladd	;wreg free
  5361  0060AA  C0A9  F1B8         	movff	?___fladd,_cos$3756
  5362  0060AE  C0AA  F1B9         	movff	?___fladd+1,_cos$3756+1
  5363  0060B2  C0AB  F1BA         	movff	?___fladd+2,_cos$3756+2
  5364  0060B6  C0AC  F1BB         	movff	?___fladd+3,_cos$3756+3
  5365  0060BA  C1B8  F19D         	movff	_cos$3756,sin@f
  5366  0060BE  C1B9  F19E         	movff	_cos$3756+1,sin@f+1
  5367  0060C2  C1BA  F19F         	movff	_cos$3756+2,sin@f+2
  5368  0060C6  C1BB  F1A0         	movff	_cos$3756+3,sin@f+3
  5369  0060CA  ECFC  F024         	call	_sin	;wreg free
  5370  0060CE  C19D  F1B4         	movff	?_sin,?_cos
  5371  0060D2  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5372  0060D6  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5373  0060DA  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5374  0060DE  0012               	return	
  5375  0060E0                     l7894:
  5376  0060E0  C1B4  F0A9         	movff	cos@f,___fladd@b
  5377  0060E4  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5378  0060E8  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5379  0060EC  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5380  0060F0  0EDB               	movlw	219
  5381  0060F2  0100               	movlb	0	; () banked
  5382  0060F4  6FAD               	movwf	___fladd@a& (0+255),b
  5383  0060F6  0E0F               	movlw	15
  5384  0060F8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5385  0060FA  0EC9               	movlw	201
  5386  0060FC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5387  0060FE  0E3F               	movlw	63
  5388  006100  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5389  006102  EC85  F018         	call	___fladd	;wreg free
  5390  006106  C0A9  F1B8         	movff	?___fladd,_cos$3756
  5391  00610A  C0AA  F1B9         	movff	?___fladd+1,_cos$3756+1
  5392  00610E  C0AB  F1BA         	movff	?___fladd+2,_cos$3756+2
  5393  006112  C0AC  F1BB         	movff	?___fladd+3,_cos$3756+3
  5394  006116  C1B8  F19D         	movff	_cos$3756,sin@f
  5395  00611A  C1B9  F19E         	movff	_cos$3756+1,sin@f+1
  5396  00611E  C1BA  F19F         	movff	_cos$3756+2,sin@f+2
  5397  006122  C1BB  F1A0         	movff	_cos$3756+3,sin@f+3
  5398  006126  ECFC  F024         	call	_sin	;wreg free
  5399  00612A  C19D  F1B4         	movff	?_sin,?_cos
  5400  00612E  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5401  006132  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5402  006136  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5403  00613A  0012               	return	
  5404  00613C                     __end_of_cos:
  5405                           	opt stack 0
  5406                           tblptru	equ	0xFF8
  5407                           tblptrh	equ	0xFF7
  5408                           tblptrl	equ	0xFF6
  5409                           tablat	equ	0xFF5
  5410                           postinc0	equ	0xFEE
  5411                           wreg	equ	0xFE8
  5412                           postdec1	equ	0xFE5
  5413                           fsr1l	equ	0xFE1
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _sin *****************
  5422 ;; Defined at:
  5423 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  f               4   18[BANK1 ] int 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  x2              4   30[BANK1 ] int 
  5428 ;;  y               4   22[BANK1 ] int 
  5429 ;;  sgn             1   34[BANK1 ] unsigned char 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  4   18[BANK1 ] unsigned char 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5439 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5443 ;;Total ram usage:       17 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    6
  5446 ;; This function calls:
  5447 ;;		___fladd
  5448 ;;		___fldiv
  5449 ;;		___flge
  5450 ;;		___flmul
  5451 ;;		___flneg
  5452 ;;		___flsub
  5453 ;;		_eval_poly
  5454 ;;		_floor
  5455 ;; This function is called by:
  5456 ;;		_cos
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text10
  5461  0049F8                     __ptext10:
  5462                           	opt stack 0
  5463  0049F8                     _sin:
  5464                           	opt stack 21
  5465                           
  5466                           ;incstack = 0
  5467  0049F8  0E00               	movlw	0
  5468  0049FA  0101               	movlb	1	; () banked
  5469  0049FC  6FAD               	movwf	sin@sgn& (0+255),b
  5470                           
  5471                           ; BSR set to: 1
  5472  0049FE  0101               	movlb	1	; () banked
  5473  004A00  AFA0               	btfss	(sin@f+3)& (0+255),7,b
  5474  004A02  D015               	goto	l7772
  5475                           
  5476                           ; BSR set to: 1
  5477  004A04  C19D  F0BD         	movff	sin@f,___flneg@f1
  5478  004A08  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5479  004A0C  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5480  004A10  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5481  004A14  ECE9  F032         	call	___flneg	;wreg free
  5482  004A18  C0BD  F19D         	movff	?___flneg,sin@f
  5483  004A1C  C0BE  F19E         	movff	?___flneg+1,sin@f+1
  5484  004A20  C0BF  F19F         	movff	?___flneg+2,sin@f+2
  5485  004A24  C0C0  F1A0         	movff	?___flneg+3,sin@f+3
  5486  004A28  0E01               	movlw	1
  5487  004A2A  0101               	movlb	1	; () banked
  5488  004A2C  6FAD               	movwf	sin@sgn& (0+255),b
  5489  004A2E                     l7772:
  5490                           
  5491                           ; BSR set to: 1
  5492  004A2E  C19D  F090         	movff	sin@f,___flmul@b
  5493  004A32  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5494  004A36  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5495  004A3A  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5496  004A3E  0E83               	movlw	131
  5497  004A40  0100               	movlb	0	; () banked
  5498  004A42  6F94               	movwf	___flmul@a& (0+255),b
  5499  004A44  0EF9               	movlw	249
  5500  004A46  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5501  004A48  0E22               	movlw	34
  5502  004A4A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5503  004A4C  0E3E               	movlw	62
  5504  004A4E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5505  004A50  ECD9  F01A         	call	___flmul	;wreg free
  5506  004A54  C090  F19D         	movff	?___flmul,sin@f
  5507  004A58  C091  F19E         	movff	?___flmul+1,sin@f+1
  5508  004A5C  C092  F19F         	movff	?___flmul+2,sin@f+2
  5509  004A60  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5510  004A64  C19D  F195         	movff	sin@f,___flsub@b
  5511  004A68  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5512  004A6C  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5513  004A70  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5514  004A74  C19D  F18B         	movff	sin@f,floor@x
  5515  004A78  C19E  F18C         	movff	sin@f+1,floor@x+1
  5516  004A7C  C19F  F18D         	movff	sin@f+2,floor@x+2
  5517  004A80  C1A0  F18E         	movff	sin@f+3,floor@x+3
  5518  004A84  EC88  F02E         	call	_floor	;wreg free
  5519  004A88  C18B  F199         	movff	?_floor,___flsub@a
  5520  004A8C  C18C  F19A         	movff	?_floor+1,___flsub@a+1
  5521  004A90  C18D  F19B         	movff	?_floor+2,___flsub@a+2
  5522  004A94  C18E  F19C         	movff	?_floor+3,___flsub@a+3
  5523  004A98  EC89  F032         	call	___flsub	;wreg free
  5524  004A9C  C195  F19D         	movff	?___flsub,sin@f
  5525  004AA0  C196  F19E         	movff	?___flsub+1,sin@f+1
  5526  004AA4  C197  F19F         	movff	?___flsub+2,sin@f+2
  5527  004AA8  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5528  004AAC  C19D  F090         	movff	sin@f,___flmul@b
  5529  004AB0  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5530  004AB4  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5531  004AB8  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5532  004ABC  0E00               	movlw	0
  5533  004ABE  0100               	movlb	0	; () banked
  5534  004AC0  6F94               	movwf	___flmul@a& (0+255),b
  5535  004AC2  0E00               	movlw	0
  5536  004AC4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5537  004AC6  0E80               	movlw	128
  5538  004AC8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5539  004ACA  0E40               	movlw	64
  5540  004ACC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5541  004ACE  ECD9  F01A         	call	___flmul	;wreg free
  5542  004AD2  C090  F19D         	movff	?___flmul,sin@f
  5543  004AD6  C091  F19E         	movff	?___flmul+1,sin@f+1
  5544  004ADA  C092  F19F         	movff	?___flmul+2,sin@f+2
  5545  004ADE  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5546  004AE2  0E00               	movlw	0
  5547  004AE4  0100               	movlb	0	; () banked
  5548  004AE6  6FC5               	movwf	___flge@ff1& (0+255),b
  5549  004AE8  0E00               	movlw	0
  5550  004AEA  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5551  004AEC  0E00               	movlw	0
  5552  004AEE  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5553  004AF0  0E40               	movlw	64
  5554  004AF2  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5555  004AF4  C19D  F0C9         	movff	sin@f,___flge@ff2
  5556  004AF8  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5557  004AFC  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5558  004B00  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5559  004B04  EC26  F02D         	call	___flge	;wreg free
  5560  004B08  0100               	movlb	0	; () banked
  5561  004B0A  B0D8               	btfsc	status,0,c
  5562  004B0C  D025               	goto	l7784
  5563                           
  5564                           ; BSR set to: 0
  5565  004B0E  C19D  F195         	movff	sin@f,___flsub@b
  5566  004B12  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5567  004B16  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5568  004B1A  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5569  004B1E  0E00               	movlw	0
  5570  004B20  0101               	movlb	1	; () banked
  5571  004B22  6F99               	movwf	___flsub@a& (0+255),b
  5572  004B24  0E00               	movlw	0
  5573  004B26  6F9A               	movwf	(___flsub@a+1)& (0+255),b
  5574  004B28  0E00               	movlw	0
  5575  004B2A  6F9B               	movwf	(___flsub@a+2)& (0+255),b
  5576  004B2C  0E40               	movlw	64
  5577  004B2E  6F9C               	movwf	(___flsub@a+3)& (0+255),b
  5578  004B30  EC89  F032         	call	___flsub	;wreg free
  5579  004B34  C195  F19D         	movff	?___flsub,sin@f
  5580  004B38  C196  F19E         	movff	?___flsub+1,sin@f+1
  5581  004B3C  C197  F19F         	movff	?___flsub+2,sin@f+2
  5582  004B40  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5583  004B44  0101               	movlb	1	; () banked
  5584  004B46  51AD               	movf	sin@sgn& (0+255),w,b
  5585  004B48  0101               	movlb	1	; () banked
  5586  004B4A  A4D8               	btfss	status,2,c
  5587  004B4C  D002               	goto	u10320
  5588  004B4E  0E01               	movlw	1
  5589  004B50  D001               	goto	u10330
  5590  004B52                     u10320:
  5591  004B52  0E00               	movlw	0
  5592  004B54                     u10330:
  5593  004B54  0101               	movlb	1	; () banked
  5594  004B56  6FAD               	movwf	sin@sgn& (0+255),b
  5595  004B58                     l7784:
  5596  004B58  0E00               	movlw	0
  5597  004B5A  0100               	movlb	0	; () banked
  5598  004B5C  6FC5               	movwf	___flge@ff1& (0+255),b
  5599  004B5E  0E00               	movlw	0
  5600  004B60  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5601  004B62  0E80               	movlw	128
  5602  004B64  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5603  004B66  0E3F               	movlw	63
  5604  004B68  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5605  004B6A  C19D  F0C9         	movff	sin@f,___flge@ff2
  5606  004B6E  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5607  004B72  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5608  004B76  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5609  004B7A  EC26  F02D         	call	___flge	;wreg free
  5610  004B7E  0100               	movlb	0	; () banked
  5611  004B80  B0D8               	btfsc	status,0,c
  5612  004B82  D025               	goto	l7788
  5613                           
  5614                           ; BSR set to: 0
  5615  004B84  C19D  F0BD         	movff	sin@f,___flneg@f1
  5616  004B88  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5617  004B8C  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5618  004B90  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5619  004B94  ECE9  F032         	call	___flneg	;wreg free
  5620  004B98  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5621  004B9C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5622  004BA0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5623  004BA4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5624  004BA8  0E00               	movlw	0
  5625  004BAA  0100               	movlb	0	; () banked
  5626  004BAC  6FAD               	movwf	___fladd@a& (0+255),b
  5627  004BAE  0E00               	movlw	0
  5628  004BB0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5629  004BB2  0E00               	movlw	0
  5630  004BB4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5631  004BB6  0E40               	movlw	64
  5632  004BB8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5633  004BBA  EC85  F018         	call	___fladd	;wreg free
  5634  004BBE  C0A9  F19D         	movff	?___fladd,sin@f
  5635  004BC2  C0AA  F19E         	movff	?___fladd+1,sin@f+1
  5636  004BC6  C0AB  F19F         	movff	?___fladd+2,sin@f+2
  5637  004BCA  C0AC  F1A0         	movff	?___fladd+3,sin@f+3
  5638  004BCE                     l7788:
  5639  004BCE  C19D  F090         	movff	sin@f,___flmul@b
  5640  004BD2  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5641  004BD6  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5642  004BDA  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5643  004BDE  C19D  F094         	movff	sin@f,___flmul@a
  5644  004BE2  C19E  F095         	movff	sin@f+1,___flmul@a+1
  5645  004BE6  C19F  F096         	movff	sin@f+2,___flmul@a+2
  5646  004BEA  C1A0  F097         	movff	sin@f+3,___flmul@a+3
  5647  004BEE  ECD9  F01A         	call	___flmul	;wreg free
  5648  004BF2  C090  F1A9         	movff	?___flmul,sin@x2
  5649  004BF6  C091  F1AA         	movff	?___flmul+1,sin@x2+1
  5650  004BFA  C092  F1AB         	movff	?___flmul+2,sin@x2+2
  5651  004BFE  C093  F1AC         	movff	?___flmul+3,sin@x2+3
  5652  004C02  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5653  004C06  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5654  004C0A  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5655  004C0E  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5656  004C12  0E41               	movlw	low sin@coeff_b
  5657  004C14  0100               	movlb	0	; () banked
  5658  004C16  6FC1               	movwf	eval_poly@d& (0+255),b
  5659  004C18  0E0D               	movlw	high sin@coeff_b
  5660  004C1A  0100               	movlb	0	; () banked
  5661  004C1C  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5662  004C1E  0E00               	movlw	0
  5663  004C20  0100               	movlb	0	; () banked
  5664  004C22  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5665  004C24  0E03               	movlw	3
  5666  004C26  6FC3               	movwf	eval_poly@n& (0+255),b
  5667  004C28  EC1A  F02F         	call	_eval_poly	;wreg free
  5668  004C2C  C0BD  F1A1         	movff	?_eval_poly,sin@y
  5669  004C30  C0BE  F1A2         	movff	?_eval_poly+1,sin@y+1
  5670  004C34  C0BF  F1A3         	movff	?_eval_poly+2,sin@y+2
  5671  004C38  C0C0  F1A4         	movff	?_eval_poly+3,sin@y+3
  5672  004C3C  C1A1  F07B         	movff	sin@y,___fldiv@a
  5673  004C40  C1A2  F07C         	movff	sin@y+1,___fldiv@a+1
  5674  004C44  C1A3  F07D         	movff	sin@y+2,___fldiv@a+2
  5675  004C48  C1A4  F07E         	movff	sin@y+3,___fldiv@a+3
  5676  004C4C  0E00               	movlw	0
  5677  004C4E  0100               	movlb	0	; () banked
  5678  004C50  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5679  004C52  0E04               	movlw	4
  5680  004C54  6FC3               	movwf	eval_poly@n& (0+255),b
  5681  004C56  0E2D               	movlw	low sin@coeff_a
  5682  004C58  0100               	movlb	0	; () banked
  5683  004C5A  6FC1               	movwf	eval_poly@d& (0+255),b
  5684  004C5C  0E0D               	movlw	high sin@coeff_a
  5685  004C5E  0100               	movlb	0	; () banked
  5686  004C60  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5687  004C62  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5688  004C66  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5689  004C6A  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5690  004C6E  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5691  004C72  EC1A  F02F         	call	_eval_poly	;wreg free
  5692  004C76  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5693  004C7A  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5694  004C7E  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5695  004C82  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5696  004C86  EC4D  F021         	call	___fldiv	;wreg free
  5697  004C8A  C077  F1A5         	movff	?___fldiv,_sin$3757
  5698  004C8E  C078  F1A6         	movff	?___fldiv+1,_sin$3757+1
  5699  004C92  C079  F1A7         	movff	?___fldiv+2,_sin$3757+2
  5700  004C96  C07A  F1A8         	movff	?___fldiv+3,_sin$3757+3
  5701  004C9A  C19D  F090         	movff	sin@f,___flmul@b
  5702  004C9E  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5703  004CA2  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5704  004CA6  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5705  004CAA  C1A5  F094         	movff	_sin$3757,___flmul@a
  5706  004CAE  C1A6  F095         	movff	_sin$3757+1,___flmul@a+1
  5707  004CB2  C1A7  F096         	movff	_sin$3757+2,___flmul@a+2
  5708  004CB6  C1A8  F097         	movff	_sin$3757+3,___flmul@a+3
  5709  004CBA  ECD9  F01A         	call	___flmul	;wreg free
  5710  004CBE  C090  F19D         	movff	?___flmul,sin@f
  5711  004CC2  C091  F19E         	movff	?___flmul+1,sin@f+1
  5712  004CC6  C092  F19F         	movff	?___flmul+2,sin@f+2
  5713  004CCA  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5714  004CCE  0101               	movlb	1	; () banked
  5715  004CD0  51AD               	movf	sin@sgn& (0+255),w,b
  5716  004CD2  0101               	movlb	1	; () banked
  5717  004CD4  B4D8               	btfsc	status,2,c
  5718  004CD6  D013               	goto	l1339
  5719                           
  5720                           ; BSR set to: 1
  5721  004CD8  C19D  F0BD         	movff	sin@f,___flneg@f1
  5722  004CDC  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5723  004CE0  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5724  004CE4  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5725  004CE8  ECE9  F032         	call	___flneg	;wreg free
  5726  004CEC  C0BD  F19D         	movff	?___flneg,?_sin
  5727  004CF0  C0BE  F19E         	movff	?___flneg+1,?_sin+1
  5728  004CF4  C0BF  F19F         	movff	?___flneg+2,?_sin+2
  5729  004CF8  C0C0  F1A0         	movff	?___flneg+3,?_sin+3
  5730  004CFC  0012               	return	
  5731  004CFE                     l1339:
  5732                           
  5733                           ; BSR set to: 1
  5734  004CFE  C19D  F19D         	movff	sin@f,?_sin
  5735  004D02  C19E  F19E         	movff	sin@f+1,?_sin+1
  5736  004D06  C19F  F19F         	movff	sin@f+2,?_sin+2
  5737  004D0A  C1A0  F1A0         	movff	sin@f+3,?_sin+3
  5738  004D0E  0012               	return		;funcret
  5739  004D10                     __end_of_sin:
  5740                           	opt stack 0
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           postdec1	equ	0xFE5
  5748                           fsr1l	equ	0xFE1
  5749                           indf2	equ	0xFDF
  5750                           postinc2	equ	0xFDE
  5751                           postdec2	equ	0xFDD
  5752                           fsr2h	equ	0xFDA
  5753                           fsr2l	equ	0xFD9
  5754                           status	equ	0xFD8
  5755                           
  5756 ;; *************** function _floor *****************
  5757 ;; Defined at:
  5758 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  x               4    0[BANK1 ] unsigned char 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  i               4    4[BANK1 ] unsigned char 
  5763 ;;  expon           2    8[BANK1 ] int 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4    0[BANK1 ] int 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5773 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;Total ram usage:       10 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    5
  5780 ;; This function calls:
  5781 ;;		___fladd
  5782 ;;		___flge
  5783 ;;		___fltol
  5784 ;;		___xxtofl
  5785 ;;		_frexp
  5786 ;; This function is called by:
  5787 ;;		_sin
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text11
  5792  005D10                     __ptext11:
  5793                           	opt stack 0
  5794  005D10                     _floor:
  5795                           	opt stack 21
  5796                           
  5797                           ;incstack = 0
  5798  005D10  C18B  F077         	movff	floor@x,frexp@value
  5799  005D14  C18C  F078         	movff	floor@x+1,frexp@value+1
  5800  005D18  C18D  F079         	movff	floor@x+2,frexp@value+2
  5801  005D1C  C18E  F07A         	movff	floor@x+3,frexp@value+3
  5802  005D20  0E93               	movlw	low floor@expon
  5803  005D22  0100               	movlb	0	; () banked
  5804  005D24  6F7B               	movwf	frexp@eptr& (0+255),b
  5805  005D26  0E01               	movlw	high floor@expon
  5806  005D28  0100               	movlb	0	; () banked
  5807  005D2A  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5808  005D2C  EC6B  F031         	call	_frexp	;wreg free
  5809  005D30  0101               	movlb	1	; () banked
  5810  005D32  AF94               	btfss	(floor@expon+1)& (0+255),7,b
  5811  005D34  D017               	goto	l7378
  5812                           
  5813                           ; BSR set to: 1
  5814  005D36  0101               	movlb	1	; () banked
  5815  005D38  AF8E               	btfss	(floor@x+3)& (0+255),7,b
  5816  005D3A  D00A               	goto	l7374
  5817                           
  5818                           ; BSR set to: 1
  5819  005D3C  0E00               	movlw	0
  5820  005D3E  0101               	movlb	1	; () banked
  5821  005D40  6F8B               	movwf	?_floor& (0+255),b
  5822  005D42  0E00               	movlw	0
  5823  005D44  6F8C               	movwf	(?_floor+1)& (0+255),b
  5824  005D46  0E80               	movlw	128
  5825  005D48  6F8D               	movwf	(?_floor+2)& (0+255),b
  5826  005D4A  0EBF               	movlw	191
  5827  005D4C  6F8E               	movwf	(?_floor+3)& (0+255),b
  5828                           
  5829                           ; BSR set to: 1
  5830  005D4E  0012               	return	
  5831  005D50                     l7374:
  5832                           
  5833                           ; BSR set to: 1
  5834  005D50  0E00               	movlw	0
  5835  005D52  0101               	movlb	1	; () banked
  5836  005D54  6F8B               	movwf	?_floor& (0+255),b
  5837  005D56  0E00               	movlw	0
  5838  005D58  6F8C               	movwf	(?_floor+1)& (0+255),b
  5839  005D5A  0E00               	movlw	0
  5840  005D5C  6F8D               	movwf	(?_floor+2)& (0+255),b
  5841  005D5E  0E00               	movlw	0
  5842  005D60  6F8E               	movwf	(?_floor+3)& (0+255),b
  5843                           
  5844                           ; BSR set to: 1
  5845  005D62  0012               	return	
  5846  005D64                     l7378:
  5847                           
  5848                           ; BSR set to: 1
  5849  005D64  0101               	movlb	1	; () banked
  5850  005D66  5194               	movf	(floor@expon+1)& (0+255),w,b
  5851  005D68  E105               	bnz	u9690
  5852  005D6A  0E1D               	movlw	29
  5853  005D6C  0101               	movlb	1	; () banked
  5854  005D6E  5D93               	subwf	floor@expon& (0+255),w,b
  5855  005D70  A0D8               	btfss	status,0,c
  5856  005D72  D009               	goto	l7382
  5857  005D74                     u9690:
  5858                           
  5859                           ; BSR set to: 1
  5860  005D74  C18B  F18B         	movff	floor@x,?_floor
  5861  005D78  C18C  F18C         	movff	floor@x+1,?_floor+1
  5862  005D7C  C18D  F18D         	movff	floor@x+2,?_floor+2
  5863  005D80  C18E  F18E         	movff	floor@x+3,?_floor+3
  5864  005D84  0012               	return	
  5865  005D86                     l7382:
  5866                           
  5867                           ; BSR set to: 1
  5868  005D86  C18B  F0C1         	movff	floor@x,___fltol@f1
  5869  005D8A  C18C  F0C2         	movff	floor@x+1,___fltol@f1+1
  5870  005D8E  C18D  F0C3         	movff	floor@x+2,___fltol@f1+2
  5871  005D92  C18E  F0C4         	movff	floor@x+3,___fltol@f1+3
  5872  005D96  ECA6  F02F         	call	___fltol	;wreg free
  5873  005D9A  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5874  005D9E  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5875  005DA2  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5876  005DA6  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5877  005DAA  0E01               	movlw	1
  5878  005DAC  EC7C  F02A         	call	___xxtofl
  5879  005DB0  C0CB  F18F         	movff	?___xxtofl,floor@i
  5880  005DB4  C0CC  F190         	movff	?___xxtofl+1,floor@i+1
  5881  005DB8  C0CD  F191         	movff	?___xxtofl+2,floor@i+2
  5882  005DBC  C0CE  F192         	movff	?___xxtofl+3,floor@i+3
  5883  005DC0  C18B  F0C5         	movff	floor@x,___flge@ff1
  5884  005DC4  C18C  F0C6         	movff	floor@x+1,___flge@ff1+1
  5885  005DC8  C18D  F0C7         	movff	floor@x+2,___flge@ff1+2
  5886  005DCC  C18E  F0C8         	movff	floor@x+3,___flge@ff1+3
  5887  005DD0  C18F  F0C9         	movff	floor@i,___flge@ff2
  5888  005DD4  C190  F0CA         	movff	floor@i+1,___flge@ff2+1
  5889  005DD8  C191  F0CB         	movff	floor@i+2,___flge@ff2+2
  5890  005DDC  C192  F0CC         	movff	floor@i+3,___flge@ff2+3
  5891  005DE0  EC26  F02D         	call	___flge	;wreg free
  5892  005DE4  0100               	movlb	0	; () banked
  5893  005DE6  B0D8               	btfsc	status,0,c
  5894  005DE8  D01C               	goto	l1508
  5895                           
  5896                           ; BSR set to: 0
  5897  005DEA  C18F  F0A9         	movff	floor@i,___fladd@b
  5898  005DEE  C190  F0AA         	movff	floor@i+1,___fladd@b+1
  5899  005DF2  C191  F0AB         	movff	floor@i+2,___fladd@b+2
  5900  005DF6  C192  F0AC         	movff	floor@i+3,___fladd@b+3
  5901  005DFA  0E00               	movlw	0
  5902  005DFC  0100               	movlb	0	; () banked
  5903  005DFE  6FAD               	movwf	___fladd@a& (0+255),b
  5904  005E00  0E00               	movlw	0
  5905  005E02  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5906  005E04  0E80               	movlw	128
  5907  005E06  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5908  005E08  0EBF               	movlw	191
  5909  005E0A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5910  005E0C  EC85  F018         	call	___fladd	;wreg free
  5911  005E10  C0A9  F18B         	movff	?___fladd,?_floor
  5912  005E14  C0AA  F18C         	movff	?___fladd+1,?_floor+1
  5913  005E18  C0AB  F18D         	movff	?___fladd+2,?_floor+2
  5914  005E1C  C0AC  F18E         	movff	?___fladd+3,?_floor+3
  5915  005E20  0012               	return	
  5916  005E22                     l1508:
  5917                           
  5918                           ; BSR set to: 0
  5919  005E22  C18F  F18B         	movff	floor@i,?_floor
  5920  005E26  C190  F18C         	movff	floor@i+1,?_floor+1
  5921  005E2A  C191  F18D         	movff	floor@i+2,?_floor+2
  5922  005E2E  C192  F18E         	movff	floor@i+3,?_floor+3
  5923  005E32  0012               	return		;funcret
  5924  005E34                     __end_of_floor:
  5925                           	opt stack 0
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           postinc0	equ	0xFEE
  5931                           wreg	equ	0xFE8
  5932                           postdec1	equ	0xFE5
  5933                           fsr1l	equ	0xFE1
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           postdec2	equ	0xFDD
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _frexp *****************
  5942 ;; Defined at:
  5943 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  value           4   23[BANK0 ] int 
  5946 ;;  eptr            2   27[BANK0 ] PTR int 
  5947 ;;		 -> floor@expon(2), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  4   23[BANK0 ] PTR int 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:        8 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    4
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_floor
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text12
  5974  0062D6                     __ptext12:
  5975                           	opt stack 0
  5976  0062D6                     _frexp:
  5977                           	opt stack 21
  5978                           
  5979                           ;incstack = 0
  5980  0062D6  0100               	movlb	0	; () banked
  5981  0062D8  5177               	movf	frexp@value& (0+255),w,b
  5982  0062DA  0100               	movlb	0	; () banked
  5983  0062DC  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5984  0062DE  0100               	movlb	0	; () banked
  5985  0062E0  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5986  0062E2  0100               	movlb	0	; () banked
  5987  0062E4  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5988  0062E6  A4D8               	btfss	status,2,c
  5989  0062E8  D009               	goto	l7200
  5990                           
  5991                           ; BSR set to: 0
  5992  0062EA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5993  0062EE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5994  0062F2  0E00               	movlw	0
  5995  0062F4  6EDE               	movwf	postinc2,c
  5996  0062F6  0E00               	movlw	0
  5997  0062F8  6EDD               	movwf	postdec2,c
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;	Return value of _frexp is never used
  6001  0062FA  0012               	return	
  6002  0062FC                     l7200:
  6003                           
  6004                           ; BSR set to: 0
  6005  0062FC  0100               	movlb	0	; () banked
  6006  0062FE  517A               	movf	(frexp@value+3)& (0+255),w,b
  6007  006300  0B7F               	andlw	127
  6008  006302  0100               	movlb	0	; () banked
  6009  006304  6F7D               	movwf	??_frexp& (0+255),b
  6010  006306  6B7E               	clrf	(??_frexp+1)& (0+255),b
  6011  006308  90D8               	bcf	status,0,c
  6012  00630A  0100               	movlb	0	; () banked
  6013  00630C  377D               	rlcf	??_frexp& (0+255),f,b
  6014  00630E  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  6015  006310  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6016  006314  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6017  006318  C07D  FFDE         	movff	??_frexp,postinc2
  6018  00631C  C07E  FFDD         	movff	??_frexp+1,postdec2
  6019  006320  0100               	movlb	0	; () banked
  6020  006322  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  6021  006324  D004               	goto	u9410
  6022  006326  0100               	movlb	0	; () banked
  6023  006328  6B7D               	clrf	??_frexp& (0+255),b
  6024  00632A  2B7D               	incf	??_frexp& (0+255),f,b
  6025  00632C  D002               	goto	u9418
  6026  00632E                     u9410:
  6027  00632E  0100               	movlb	0	; () banked
  6028  006330  6B7D               	clrf	??_frexp& (0+255),b
  6029  006332                     u9418:
  6030  006332  0100               	movlb	0	; () banked
  6031  006334  517D               	movf	??_frexp& (0+255),w,b
  6032  006336  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6033  00633A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6034  00633E  12DE               	iorwf	postinc2,f,c
  6035  006340  0E00               	movlw	0
  6036  006342  12DD               	iorwf	postdec2,f,c
  6037                           
  6038                           ; BSR set to: 0
  6039  006344  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6040  006348  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6041  00634C  0E82               	movlw	130
  6042  00634E  26DE               	addwf	postinc2,f,c
  6043  006350  0EFF               	movlw	255
  6044  006352  22DD               	addwfc	postdec2,f,c
  6045                           
  6046                           ; BSR set to: 0
  6047  006354  0100               	movlb	0	; () banked
  6048  006356  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6049  006358  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6050  00635A  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6051  00635C  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6052  00635E  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6053  006360  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6054  006362  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6055                           
  6056                           ; BSR set to: 0
  6057  006364  0100               	movlb	0	; () banked
  6058  006366  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6059  006368  0012               	return	
  6060  00636A                     __end_of_frexp:
  6061                           	opt stack 0
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           postinc0	equ	0xFEE
  6067                           wreg	equ	0xFE8
  6068                           postdec1	equ	0xFE5
  6069                           fsr1l	equ	0xFE1
  6070                           indf2	equ	0xFDF
  6071                           postinc2	equ	0xFDE
  6072                           postdec2	equ	0xFDD
  6073                           fsr2h	equ	0xFDA
  6074                           fsr2l	equ	0xFD9
  6075                           status	equ	0xFD8
  6076                           
  6077 ;; *************** function ___xxtofl *****************
  6078 ;; Defined at:
  6079 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  sign            1    wreg     unsigned char 
  6082 ;;  val             4  107[BANK0 ] long 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  sign            1  115[BANK0 ] unsigned char 
  6085 ;;  arg             4  117[BANK0 ] unsigned long 
  6086 ;;  exp             1  116[BANK0 ] unsigned char 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  4  107[BANK0 ] unsigned char 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;Total ram usage:       14 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    4
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_park_search
  6107 ;;		_park_routine
  6108 ;;		_parallelo
  6109 ;;		_floor
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text13
  6114  0054F8                     __ptext13:
  6115                           	opt stack 0
  6116  0054F8                     ___xxtofl:
  6117                           	opt stack 24
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;incstack = 0
  6121                           ;___xxtofl@sign stored from wreg
  6122  0054F8  0100               	movlb	0	; () banked
  6123  0054FA  6FD3               	movwf	___xxtofl@sign& (0+255),b
  6124  0054FC  0100               	movlb	0	; () banked
  6125  0054FE  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6126  005500  0100               	movlb	0	; () banked
  6127  005502  B4D8               	btfsc	status,2,c
  6128  005504  D01E               	goto	l1483
  6129                           
  6130                           ; BSR set to: 0
  6131  005506  0100               	movlb	0	; () banked
  6132  005508  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6133  00550A  D01B               	goto	l1483
  6134                           
  6135                           ; BSR set to: 0
  6136  00550C  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6137  005510  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6138  005514  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6139  005518  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6140  00551C  0100               	movlb	0	; () banked
  6141  00551E  1FCF               	comf	??___xxtofl& (0+255),f,b
  6142  005520  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6143  005522  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6144  005524  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6145  005526  2BCF               	incf	??___xxtofl& (0+255),f,b
  6146  005528  0E00               	movlw	0
  6147  00552A  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6148  00552C  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6149  00552E  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6150  005530  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6151  005534  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6152  005538  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6153  00553C  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6154  005540  D008               	goto	l7158
  6155  005542                     l1483:
  6156                           
  6157                           ; BSR set to: 0
  6158  005542  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6159  005546  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6160  00554A  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6161  00554E  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6162  005552                     l7158:
  6163                           
  6164                           ; BSR set to: 0
  6165  005552  0100               	movlb	0	; () banked
  6166  005554  51CB               	movf	___xxtofl@val& (0+255),w,b
  6167  005556  0100               	movlb	0	; () banked
  6168  005558  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6169  00555A  0100               	movlb	0	; () banked
  6170  00555C  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6171  00555E  0100               	movlb	0	; () banked
  6172  005560  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6173  005562  A4D8               	btfss	status,2,c
  6174  005564  D00A               	goto	l7164
  6175                           
  6176                           ; BSR set to: 0
  6177  005566  0E00               	movlw	0
  6178  005568  0100               	movlb	0	; () banked
  6179  00556A  6FCB               	movwf	?___xxtofl& (0+255),b
  6180  00556C  0E00               	movlw	0
  6181  00556E  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6182  005570  0E00               	movlw	0
  6183  005572  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6184  005574  0E00               	movlw	0
  6185  005576  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6186                           
  6187                           ; BSR set to: 0
  6188  005578  0012               	return	
  6189  00557A                     l7164:
  6190                           
  6191                           ; BSR set to: 0
  6192  00557A  0E96               	movlw	150
  6193  00557C  0100               	movlb	0	; () banked
  6194  00557E  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6195  005580  D008               	goto	l7168
  6196  005582                     l7166:
  6197                           
  6198                           ; BSR set to: 0
  6199  005582  0100               	movlb	0	; () banked
  6200  005584  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6201  005586  0100               	movlb	0	; () banked
  6202  005588  90D8               	bcf	status,0,c
  6203  00558A  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6204  00558C  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6205  00558E  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6206  005590  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6207  005592                     l7168:
  6208                           
  6209                           ; BSR set to: 0
  6210  005592  0E00               	movlw	0
  6211  005594  0100               	movlb	0	; () banked
  6212  005596  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6213  005598  0100               	movlb	0	; () banked
  6214  00559A  6FCF               	movwf	??___xxtofl& (0+255),b
  6215  00559C  0E00               	movlw	0
  6216  00559E  0100               	movlb	0	; () banked
  6217  0055A0  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6218  0055A2  0100               	movlb	0	; () banked
  6219  0055A4  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6220  0055A6  0E00               	movlw	0
  6221  0055A8  0100               	movlb	0	; () banked
  6222  0055AA  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6223  0055AC  0100               	movlb	0	; () banked
  6224  0055AE  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6225  0055B0  0EFE               	movlw	254
  6226  0055B2  0100               	movlb	0	; () banked
  6227  0055B4  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6228  0055B6  0100               	movlb	0	; () banked
  6229  0055B8  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6230  0055BA  0100               	movlb	0	; () banked
  6231  0055BC  51CF               	movf	??___xxtofl& (0+255),w,b
  6232  0055BE  0100               	movlb	0	; () banked
  6233  0055C0  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6234  0055C2  0100               	movlb	0	; () banked
  6235  0055C4  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6236  0055C6  0100               	movlb	0	; () banked
  6237  0055C8  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6238  0055CA  B4D8               	btfsc	status,2,c
  6239  0055CC  D010               	goto	l1490
  6240  0055CE  D7D9               	goto	l7166
  6241  0055D0                     l7170:
  6242                           
  6243                           ; BSR set to: 0
  6244  0055D0  0100               	movlb	0	; () banked
  6245  0055D2  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6246                           
  6247                           ; BSR set to: 0
  6248  0055D4  0E01               	movlw	1
  6249  0055D6  0100               	movlb	0	; () banked
  6250  0055D8  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6251  0055DA  0E00               	movlw	0
  6252  0055DC  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6253  0055DE  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6254  0055E0  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6255                           
  6256                           ; BSR set to: 0
  6257  0055E2  0100               	movlb	0	; () banked
  6258  0055E4  90D8               	bcf	status,0,c
  6259  0055E6  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6260  0055E8  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6261  0055EA  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6262  0055EC  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6263  0055EE                     l1490:
  6264                           
  6265                           ; BSR set to: 0
  6266  0055EE  0E00               	movlw	0
  6267  0055F0  0100               	movlb	0	; () banked
  6268  0055F2  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6269  0055F4  0100               	movlb	0	; () banked
  6270  0055F6  6FCF               	movwf	??___xxtofl& (0+255),b
  6271  0055F8  0E00               	movlw	0
  6272  0055FA  0100               	movlb	0	; () banked
  6273  0055FC  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6274  0055FE  0100               	movlb	0	; () banked
  6275  005600  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6276  005602  0E00               	movlw	0
  6277  005604  0100               	movlb	0	; () banked
  6278  005606  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6279  005608  0100               	movlb	0	; () banked
  6280  00560A  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6281  00560C  0EFF               	movlw	255
  6282  00560E  0100               	movlb	0	; () banked
  6283  005610  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6284  005612  0100               	movlb	0	; () banked
  6285  005614  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6286  005616  0100               	movlb	0	; () banked
  6287  005618  51CF               	movf	??___xxtofl& (0+255),w,b
  6288  00561A  0100               	movlb	0	; () banked
  6289  00561C  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6290  00561E  0100               	movlb	0	; () banked
  6291  005620  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6292  005622  0100               	movlb	0	; () banked
  6293  005624  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6294  005626  B4D8               	btfsc	status,2,c
  6295  005628  D009               	goto	l7178
  6296  00562A  D7D2               	goto	l7170
  6297  00562C                     l7176:
  6298                           
  6299                           ; BSR set to: 0
  6300  00562C  0100               	movlb	0	; () banked
  6301  00562E  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6302  005630  0100               	movlb	0	; () banked
  6303  005632  90D8               	bcf	status,0,c
  6304  005634  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6305  005636  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6306  005638  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6307  00563A  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6308  00563C                     l7178:
  6309                           
  6310                           ; BSR set to: 0
  6311  00563C  0100               	movlb	0	; () banked
  6312  00563E  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6313  005640  D004               	goto	l1497
  6314                           
  6315                           ; BSR set to: 0
  6316  005642  0E02               	movlw	2
  6317  005644  0100               	movlb	0	; () banked
  6318  005646  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6319  005648  D7F1               	goto	l7176
  6320  00564A                     l1497:
  6321                           
  6322                           ; BSR set to: 0
  6323  00564A  0100               	movlb	0	; () banked
  6324  00564C  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6325  00564E  D009               	goto	l1498
  6326                           
  6327                           ; BSR set to: 0
  6328  005650  0EFF               	movlw	255
  6329  005652  0100               	movlb	0	; () banked
  6330  005654  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6331  005656  0EFF               	movlw	255
  6332  005658  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6333  00565A  0E7F               	movlw	127
  6334  00565C  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6335  00565E  0EFF               	movlw	255
  6336  005660  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6337  005662                     l1498:
  6338                           
  6339                           ; BSR set to: 0
  6340  005662  0100               	movlb	0	; () banked
  6341  005664  90D8               	bcf	status,0,c
  6342  005666  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6343  005668  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6344  00566C  0100               	movlb	0	; () banked
  6345  00566E  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6346  005670  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6347  005672  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6348  005674  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6349  005678  0100               	movlb	0	; () banked
  6350  00567A  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6351  00567C  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6352  00567E  6BCF               	clrf	??___xxtofl& (0+255),b
  6353  005680  0100               	movlb	0	; () banked
  6354  005682  51CF               	movf	??___xxtofl& (0+255),w,b
  6355  005684  0100               	movlb	0	; () banked
  6356  005686  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6357  005688  0100               	movlb	0	; () banked
  6358  00568A  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6359  00568C  0100               	movlb	0	; () banked
  6360  00568E  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6361  005690  0100               	movlb	0	; () banked
  6362  005692  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6363  005694  0100               	movlb	0	; () banked
  6364  005696  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6365  005698  0100               	movlb	0	; () banked
  6366  00569A  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6367  00569C  0100               	movlb	0	; () banked
  6368  00569E  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6369                           
  6370                           ; BSR set to: 0
  6371  0056A0  0100               	movlb	0	; () banked
  6372  0056A2  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6373  0056A4  0100               	movlb	0	; () banked
  6374  0056A6  B4D8               	btfsc	status,2,c
  6375  0056A8  D005               	goto	l7190
  6376                           
  6377                           ; BSR set to: 0
  6378  0056AA  0100               	movlb	0	; () banked
  6379  0056AC  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6380  0056AE  D002               	goto	l7190
  6381                           
  6382                           ; BSR set to: 0
  6383  0056B0  0100               	movlb	0	; () banked
  6384  0056B2  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6385  0056B4                     l7190:
  6386                           
  6387                           ; BSR set to: 0
  6388  0056B4  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6389  0056B8  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6390  0056BC  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6391  0056C0  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6392  0056C4  0012               	return	
  6393  0056C6                     __end_of___xxtofl:
  6394                           	opt stack 0
  6395                           tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           postinc0	equ	0xFEE
  6400                           wreg	equ	0xFE8
  6401                           postdec1	equ	0xFE5
  6402                           fsr1l	equ	0xFE1
  6403                           indf2	equ	0xFDF
  6404                           postinc2	equ	0xFDE
  6405                           postdec2	equ	0xFDD
  6406                           fsr2h	equ	0xFDA
  6407                           fsr2l	equ	0xFD9
  6408                           status	equ	0xFD8
  6409                           
  6410 ;; *************** function ___fltol *****************
  6411 ;; Defined at:
  6412 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  f1              4   97[BANK0 ] unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  exp1            1  106[BANK0 ] unsigned char 
  6417 ;;  sign1           1  105[BANK0 ] unsigned char 
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  4   97[BANK0 ] long 
  6420 ;; Registers used:
  6421 ;;		wreg, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;Total ram usage:       10 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    4
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_park_routine
  6438 ;;		_parallelo
  6439 ;;		_floor
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text14
  6444  005F4C                     __ptext14:
  6445                           	opt stack 0
  6446  005F4C                     ___fltol:
  6447                           	opt stack 24
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;incstack = 0
  6451  005F4C  0100               	movlb	0	; () banked
  6452  005F4E  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6453  005F50  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6454  005F52  0100               	movlb	0	; () banked
  6455  005F54  6FCA               	movwf	___fltol@exp1& (0+255),b
  6456  005F56  0100               	movlb	0	; () banked
  6457  005F58  51CA               	movf	___fltol@exp1& (0+255),w,b
  6458  005F5A  A4D8               	btfss	status,2,c
  6459  005F5C  D00A               	goto	l7114
  6460                           
  6461                           ; BSR set to: 0
  6462  005F5E  0E00               	movlw	0
  6463  005F60  0100               	movlb	0	; () banked
  6464  005F62  6FC1               	movwf	?___fltol& (0+255),b
  6465  005F64  0E00               	movlw	0
  6466  005F66  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6467  005F68  0E00               	movlw	0
  6468  005F6A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6469  005F6C  0E00               	movlw	0
  6470  005F6E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6471                           
  6472                           ; BSR set to: 0
  6473  005F70  0012               	return	
  6474  005F72                     l7114:
  6475                           
  6476                           ; BSR set to: 0
  6477  005F72  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6478  005F76  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6479  005F7A  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6480  005F7E  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6481  005F82  0E20               	movlw	32
  6482  005F84  D006               	goto	u9240
  6483  005F86                     u9245:
  6484  005F86  0100               	movlb	0	; () banked
  6485  005F88  90D8               	bcf	status,0,c
  6486  005F8A  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6487  005F8C  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6488  005F8E  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6489  005F90  33C5               	rrcf	??___fltol& (0+255),f,b
  6490  005F92                     u9240:
  6491  005F92  2EE8               	decfsz	wreg,f,c
  6492  005F94  D7F8               	goto	u9245
  6493  005F96  0100               	movlb	0	; () banked
  6494  005F98  51C5               	movf	??___fltol& (0+255),w,b
  6495  005F9A  0100               	movlb	0	; () banked
  6496  005F9C  6FC9               	movwf	___fltol@sign1& (0+255),b
  6497                           
  6498                           ; BSR set to: 0
  6499  005F9E  0100               	movlb	0	; () banked
  6500  005FA0  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6501                           
  6502                           ; BSR set to: 0
  6503  005FA2  0EFF               	movlw	255
  6504  005FA4  0100               	movlb	0	; () banked
  6505  005FA6  17C1               	andwf	___fltol@f1& (0+255),f,b
  6506  005FA8  0EFF               	movlw	255
  6507  005FAA  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6508  005FAC  0EFF               	movlw	255
  6509  005FAE  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6510  005FB0  0E00               	movlw	0
  6511  005FB2  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6512                           
  6513                           ; BSR set to: 0
  6514  005FB4  0E96               	movlw	150
  6515  005FB6  0100               	movlb	0	; () banked
  6516  005FB8  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6517                           
  6518                           ; BSR set to: 0
  6519  005FBA  0100               	movlb	0	; () banked
  6520  005FBC  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6521  005FBE  D01A               	goto	l7134
  6522                           
  6523                           ; BSR set to: 0
  6524  005FC0  0100               	movlb	0	; () banked
  6525  005FC2  51CA               	movf	___fltol@exp1& (0+255),w,b
  6526  005FC4  0A80               	xorlw	128
  6527  005FC6  0F97               	addlw	151
  6528  005FC8  B0D8               	btfsc	status,0,c
  6529  005FCA  D00A               	goto	l7130
  6530                           
  6531                           ; BSR set to: 0
  6532  005FCC  0E00               	movlw	0
  6533  005FCE  0100               	movlb	0	; () banked
  6534  005FD0  6FC1               	movwf	?___fltol& (0+255),b
  6535  005FD2  0E00               	movlw	0
  6536  005FD4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6537  005FD6  0E00               	movlw	0
  6538  005FD8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6539  005FDA  0E00               	movlw	0
  6540  005FDC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6541                           
  6542                           ; BSR set to: 0
  6543  005FDE  0012               	return	
  6544  005FE0                     l7130:
  6545                           
  6546                           ; BSR set to: 0
  6547  005FE0  0100               	movlb	0	; () banked
  6548  005FE2  90D8               	bcf	status,0,c
  6549  005FE4  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6550  005FE6  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6551  005FE8  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6552  005FEA  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6553                           
  6554                           ; BSR set to: 0
  6555  005FEC  0100               	movlb	0	; () banked
  6556  005FEE  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6557  005FF0  D7F7               	goto	l7130
  6558                           
  6559                           ; BSR set to: 0
  6560  005FF2  D01B               	goto	l7144
  6561  005FF4                     l7134:
  6562                           
  6563                           ; BSR set to: 0
  6564  005FF4  0E1F               	movlw	31
  6565  005FF6  0100               	movlb	0	; () banked
  6566  005FF8  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6567  005FFA  D012               	goto	l7142
  6568                           
  6569                           ; BSR set to: 0
  6570  005FFC  0E00               	movlw	0
  6571  005FFE  0100               	movlb	0	; () banked
  6572  006000  6FC1               	movwf	?___fltol& (0+255),b
  6573  006002  0E00               	movlw	0
  6574  006004  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6575  006006  0E00               	movlw	0
  6576  006008  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6577  00600A  0E00               	movlw	0
  6578  00600C  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6579                           
  6580                           ; BSR set to: 0
  6581  00600E  0012               	return	
  6582  006010                     l7140:
  6583                           
  6584                           ; BSR set to: 0
  6585  006010  0100               	movlb	0	; () banked
  6586  006012  90D8               	bcf	status,0,c
  6587  006014  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6588  006016  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6589  006018  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6590  00601A  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6591  00601C  0100               	movlb	0	; () banked
  6592  00601E  07CA               	decf	___fltol@exp1& (0+255),f,b
  6593  006020                     l7142:
  6594                           
  6595                           ; BSR set to: 0
  6596  006020  0100               	movlb	0	; () banked
  6597  006022  51CA               	movf	___fltol@exp1& (0+255),w,b
  6598  006024  0100               	movlb	0	; () banked
  6599  006026  A4D8               	btfss	status,2,c
  6600  006028  D7F3               	goto	l7140
  6601  00602A                     l7144:
  6602                           
  6603                           ; BSR set to: 0
  6604  00602A  0100               	movlb	0	; () banked
  6605  00602C  51C9               	movf	___fltol@sign1& (0+255),w,b
  6606  00602E  0100               	movlb	0	; () banked
  6607  006030  B4D8               	btfsc	status,2,c
  6608  006032  D009               	goto	l7148
  6609                           
  6610                           ; BSR set to: 0
  6611  006034  0100               	movlb	0	; () banked
  6612  006036  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6613  006038  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6614  00603A  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6615  00603C  6DC1               	negf	___fltol@f1& (0+255),b
  6616  00603E  0E00               	movlw	0
  6617  006040  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6618  006042  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6619  006044  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6620  006046                     l7148:
  6621                           
  6622                           ; BSR set to: 0
  6623  006046  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6624  00604A  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6625  00604E  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6626  006052  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6627  006056  0012               	return	
  6628  006058                     __end_of___fltol:
  6629                           	opt stack 0
  6630                           tblptru	equ	0xFF8
  6631                           tblptrh	equ	0xFF7
  6632                           tblptrl	equ	0xFF6
  6633                           tablat	equ	0xFF5
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           postdec1	equ	0xFE5
  6637                           fsr1l	equ	0xFE1
  6638                           indf2	equ	0xFDF
  6639                           postinc2	equ	0xFDE
  6640                           postdec2	equ	0xFDD
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function ___flsub *****************
  6646 ;; Defined at:
  6647 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  b               4   10[BANK1 ] long 
  6650 ;;  a               4   14[BANK1 ] long 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  4   10[BANK1 ] long 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:        8 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    5
  6669 ;; This function calls:
  6670 ;;		___fladd
  6671 ;; This function is called by:
  6672 ;;		_sin
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text15
  6677  006512                     __ptext15:
  6678                           	opt stack 0
  6679  006512                     ___flsub:
  6680                           	opt stack 21
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;incstack = 0
  6684  006512  0E00               	movlw	0
  6685  006514  0101               	movlb	1	; () banked
  6686  006516  1B99               	xorwf	___flsub@a& (0+255),f,b
  6687  006518  0E00               	movlw	0
  6688  00651A  1B9A               	xorwf	(___flsub@a+1)& (0+255),f,b
  6689  00651C  0E00               	movlw	0
  6690  00651E  1B9B               	xorwf	(___flsub@a+2)& (0+255),f,b
  6691  006520  0E80               	movlw	128
  6692  006522  1B9C               	xorwf	(___flsub@a+3)& (0+255),f,b
  6693                           
  6694                           ; BSR set to: 1
  6695  006524  C195  F0A9         	movff	___flsub@b,___fladd@b
  6696  006528  C196  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6697  00652C  C197  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6698  006530  C198  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6699  006534  C199  F0AD         	movff	___flsub@a,___fladd@a
  6700  006538  C19A  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6701  00653C  C19B  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6702  006540  C19C  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6703  006544  EC85  F018         	call	___fladd	;wreg free
  6704  006548  C0A9  F195         	movff	?___fladd,?___flsub
  6705  00654C  C0AA  F196         	movff	?___fladd+1,?___flsub+1
  6706  006550  C0AB  F197         	movff	?___fladd+2,?___flsub+2
  6707  006554  C0AC  F198         	movff	?___fladd+3,?___flsub+3
  6708  006558  0012               	return	
  6709  00655A                     __end_of___flsub:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           postinc0	equ	0xFEE
  6716                           wreg	equ	0xFE8
  6717                           postdec1	equ	0xFE5
  6718                           fsr1l	equ	0xFE1
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _asin *****************
  6727 ;; Defined at:
  6728 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  x               4  117[BANK0 ] long 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  y               4   33[BANK1 ] long 
  6733 ;;  sgn             4   21[BANK1 ] long 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  4  117[BANK0 ] long 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;Total ram usage:       24 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    7
  6750 ;; This function calls:
  6751 ;;		___fladd
  6752 ;;		___fldiv
  6753 ;;		___flge
  6754 ;;		___flmul
  6755 ;;		___flneg
  6756 ;;		_atan
  6757 ;;		_fabs
  6758 ;;		_sqrt
  6759 ;; This function is called by:
  6760 ;;		_parallelo
  6761 ;;		_matematica
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text16
  6766  004D10                     __ptext16:
  6767                           	opt stack 0
  6768  004D10                     _asin:
  6769                           	opt stack 21
  6770                           
  6771                           ;incstack = 0
  6772  004D10  0E00               	movlw	0
  6773  004D12  0100               	movlb	0	; () banked
  6774  004D14  6FC5               	movwf	___flge@ff1& (0+255),b
  6775  004D16  0E00               	movlw	0
  6776  004D18  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6777  004D1A  0E80               	movlw	128
  6778  004D1C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6779  004D1E  0E3F               	movlw	63
  6780  004D20  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6781  004D22  C0D5  F0C1         	movff	asin@x,fabs@d
  6782  004D26  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6783  004D2A  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6784  004D2E  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6785  004D32  ECAD  F032         	call	_fabs	;wreg free
  6786  004D36  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6787  004D3A  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6788  004D3E  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6789  004D42  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6790  004D46  EC26  F02D         	call	___flge	;wreg free
  6791  004D4A  0100               	movlb	0	; () banked
  6792  004D4C  B0D8               	btfsc	status,0,c
  6793  004D4E  D00F               	goto	l7854
  6794                           
  6795                           ; BSR set to: 0
  6796  004D50  0E00               	movlw	0
  6797  004D52  0100               	movlb	0	; () banked
  6798  004D54  6FE5               	movwf	(_errno+1)& (0+255),b
  6799  004D56  0E21               	movlw	33
  6800  004D58  6FE4               	movwf	_errno& (0+255),b
  6801  004D5A  0E00               	movlw	0
  6802  004D5C  0100               	movlb	0	; () banked
  6803  004D5E  6FD5               	movwf	?_asin& (0+255),b
  6804  004D60  0E00               	movlw	0
  6805  004D62  6FD6               	movwf	(?_asin+1)& (0+255),b
  6806  004D64  0E00               	movlw	0
  6807  004D66  6FD7               	movwf	(?_asin+2)& (0+255),b
  6808  004D68  0E00               	movlw	0
  6809  004D6A  6FD8               	movwf	(?_asin+3)& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812  004D6C  0012               	return	
  6813  004D6E                     l7854:
  6814                           
  6815                           ; BSR set to: 0
  6816  004D6E  0E00               	movlw	0
  6817  004D70  0101               	movlb	1	; () banked
  6818  004D72  6FA0               	movwf	asin@sgn& (0+255),b
  6819  004D74  0E00               	movlw	0
  6820  004D76  6FA1               	movwf	(asin@sgn+1)& (0+255),b
  6821  004D78  0E80               	movlw	128
  6822  004D7A  6FA2               	movwf	(asin@sgn+2)& (0+255),b
  6823  004D7C  0E3F               	movlw	63
  6824  004D7E  6FA3               	movwf	(asin@sgn+3)& (0+255),b
  6825                           
  6826                           ; BSR set to: 1
  6827  004D80  C0D5  F094         	movff	asin@x,___flmul@a
  6828  004D84  C0D6  F095         	movff	asin@x+1,___flmul@a+1
  6829  004D88  C0D7  F096         	movff	asin@x+2,___flmul@a+2
  6830  004D8C  C0D8  F097         	movff	asin@x+3,___flmul@a+3
  6831  004D90  C0D5  F090         	movff	asin@x,___flmul@b
  6832  004D94  C0D6  F091         	movff	asin@x+1,___flmul@b+1
  6833  004D98  C0D7  F092         	movff	asin@x+2,___flmul@b+2
  6834  004D9C  C0D8  F093         	movff	asin@x+3,___flmul@b+3
  6835  004DA0  ECD9  F01A         	call	___flmul	;wreg free
  6836  004DA4  C090  F0BD         	movff	?___flmul,___flneg@f1
  6837  004DA8  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6838  004DAC  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6839  004DB0  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6840  004DB4  ECE9  F032         	call	___flneg	;wreg free
  6841  004DB8  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6842  004DBC  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6843  004DC0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6844  004DC4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6845  004DC8  0E00               	movlw	0
  6846  004DCA  0100               	movlb	0	; () banked
  6847  004DCC  6FAD               	movwf	___fladd@a& (0+255),b
  6848  004DCE  0E00               	movlw	0
  6849  004DD0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6850  004DD2  0E80               	movlw	128
  6851  004DD4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6852  004DD6  0E3F               	movlw	63
  6853  004DD8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6854  004DDA  EC85  F018         	call	___fladd	;wreg free
  6855  004DDE  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6856  004DE2  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6857  004DE6  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6858  004DEA  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6859  004DEE  EC68  F01F         	call	_sqrt	;wreg free
  6860  004DF2  C0C1  F1AC         	movff	?_sqrt,asin@y
  6861  004DF6  C0C2  F1AD         	movff	?_sqrt+1,asin@y+1
  6862  004DFA  C0C3  F1AE         	movff	?_sqrt+2,asin@y+2
  6863  004DFE  C0C4  F1AF         	movff	?_sqrt+3,asin@y+3
  6864  004E02  C0D5  F0C1         	movff	asin@x,fabs@d
  6865  004E06  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6866  004E0A  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6867  004E0E  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6868  004E12  ECAD  F032         	call	_fabs	;wreg free
  6869  004E16  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6870  004E1A  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6871  004E1E  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6872  004E22  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6873  004E26  0E8F               	movlw	143
  6874  004E28  0100               	movlb	0	; () banked
  6875  004E2A  6FC9               	movwf	___flge@ff2& (0+255),b
  6876  004E2C  0EC2               	movlw	194
  6877  004E2E  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6878  004E30  0E35               	movlw	53
  6879  004E32  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6880  004E34  0E3F               	movlw	63
  6881  004E36  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6882  004E38  EC26  F02D         	call	___flge	;wreg free
  6883  004E3C  0100               	movlb	0	; () banked
  6884  004E3E  B0D8               	btfsc	status,0,c
  6885  004E40  D02D               	goto	l7866
  6886                           
  6887                           ; BSR set to: 0
  6888  004E42  C0D5  F077         	movff	asin@x,___fldiv@b
  6889  004E46  C0D6  F078         	movff	asin@x+1,___fldiv@b+1
  6890  004E4A  C0D7  F079         	movff	asin@x+2,___fldiv@b+2
  6891  004E4E  C0D8  F07A         	movff	asin@x+3,___fldiv@b+3
  6892  004E52  C1AC  F07B         	movff	asin@y,___fldiv@a
  6893  004E56  C1AD  F07C         	movff	asin@y+1,___fldiv@a+1
  6894  004E5A  C1AE  F07D         	movff	asin@y+2,___fldiv@a+2
  6895  004E5E  C1AF  F07E         	movff	asin@y+3,___fldiv@a+3
  6896  004E62  EC4D  F021         	call	___fldiv	;wreg free
  6897  004E66  C077  F1B0         	movff	?___fldiv,_asin$3753
  6898  004E6A  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6899  004E6E  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6900  004E72  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6901  004E76  C1B0  F0D1         	movff	_asin$3753,atan@f
  6902  004E7A  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6903  004E7E  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6904  004E82  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6905  004E86  EC53  F029         	call	_atan	;wreg free
  6906  004E8A  C0D1  F0D5         	movff	?_atan,?_asin
  6907  004E8E  C0D2  F0D6         	movff	?_atan+1,?_asin+1
  6908  004E92  C0D3  F0D7         	movff	?_atan+2,?_asin+2
  6909  004E96  C0D4  F0D8         	movff	?_atan+3,?_asin+3
  6910  004E9A  0012               	return	
  6911  004E9C                     l7866:
  6912  004E9C  0100               	movlb	0	; () banked
  6913  004E9E  AFD8               	btfss	(asin@x+3)& (0+255),7,b
  6914  004EA0  D06E               	goto	l7878
  6915                           
  6916                           ; BSR set to: 0
  6917  004EA2  C0D5  F07B         	movff	asin@x,___fldiv@a
  6918  004EA6  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  6919  004EAA  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  6920  004EAE  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  6921  004EB2  C1AC  F0BD         	movff	asin@y,___flneg@f1
  6922  004EB6  C1AD  F0BE         	movff	asin@y+1,___flneg@f1+1
  6923  004EBA  C1AE  F0BF         	movff	asin@y+2,___flneg@f1+2
  6924  004EBE  C1AF  F0C0         	movff	asin@y+3,___flneg@f1+3
  6925  004EC2  ECE9  F032         	call	___flneg	;wreg free
  6926  004EC6  C0BD  F077         	movff	?___flneg,___fldiv@b
  6927  004ECA  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6928  004ECE  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6929  004ED2  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6930  004ED6  EC4D  F021         	call	___fldiv	;wreg free
  6931  004EDA  C077  F1B0         	movff	?___fldiv,_asin$3753
  6932  004EDE  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6933  004EE2  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6934  004EE6  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6935  004EEA  C1B0  F0D1         	movff	_asin$3753,atan@f
  6936  004EEE  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6937  004EF2  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6938  004EF6  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6939  004EFA  EC53  F029         	call	_atan	;wreg free
  6940  004EFE  C0D1  F1A8         	movff	?_atan,_asin$3754
  6941  004F02  C0D2  F1A9         	movff	?_atan+1,_asin$3754+1
  6942  004F06  C0D3  F1AA         	movff	?_atan+2,_asin$3754+2
  6943  004F0A  C0D4  F1AB         	movff	?_atan+3,_asin$3754+3
  6944  004F0E  0EDB               	movlw	219
  6945  004F10  0100               	movlb	0	; () banked
  6946  004F12  6FAD               	movwf	___fladd@a& (0+255),b
  6947  004F14  0E0F               	movlw	15
  6948  004F16  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6949  004F18  0EC9               	movlw	201
  6950  004F1A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6951  004F1C  0E3F               	movlw	63
  6952  004F1E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6953  004F20  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  6954  004F24  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  6955  004F28  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  6956  004F2C  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  6957  004F30  ECE9  F032         	call	___flneg	;wreg free
  6958  004F34  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6959  004F38  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6960  004F3C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6961  004F40  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6962  004F44  EC85  F018         	call	___fladd	;wreg free
  6963  004F48  C0A9  F1A4         	movff	?___fladd,_asin$3755
  6964  004F4C  C0AA  F1A5         	movff	?___fladd+1,_asin$3755+1
  6965  004F50  C0AB  F1A6         	movff	?___fladd+2,_asin$3755+2
  6966  004F54  C0AC  F1A7         	movff	?___fladd+3,_asin$3755+3
  6967  004F58  C1A4  F0BD         	movff	_asin$3755,___flneg@f1
  6968  004F5C  C1A5  F0BE         	movff	_asin$3755+1,___flneg@f1+1
  6969  004F60  C1A6  F0BF         	movff	_asin$3755+2,___flneg@f1+2
  6970  004F64  C1A7  F0C0         	movff	_asin$3755+3,___flneg@f1+3
  6971  004F68  ECE9  F032         	call	___flneg	;wreg free
  6972  004F6C  C0BD  F0D5         	movff	?___flneg,?_asin
  6973  004F70  C0BE  F0D6         	movff	?___flneg+1,?_asin+1
  6974  004F74  C0BF  F0D7         	movff	?___flneg+2,?_asin+2
  6975  004F78  C0C0  F0D8         	movff	?___flneg+3,?_asin+3
  6976  004F7C  0012               	return	
  6977  004F7E                     l7878:
  6978  004F7E  C0D5  F07B         	movff	asin@x,___fldiv@a
  6979  004F82  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  6980  004F86  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  6981  004F8A  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  6982  004F8E  C1AC  F077         	movff	asin@y,___fldiv@b
  6983  004F92  C1AD  F078         	movff	asin@y+1,___fldiv@b+1
  6984  004F96  C1AE  F079         	movff	asin@y+2,___fldiv@b+2
  6985  004F9A  C1AF  F07A         	movff	asin@y+3,___fldiv@b+3
  6986  004F9E  EC4D  F021         	call	___fldiv	;wreg free
  6987  004FA2  C077  F1B0         	movff	?___fldiv,_asin$3753
  6988  004FA6  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6989  004FAA  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6990  004FAE  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6991  004FB2  C1B0  F0D1         	movff	_asin$3753,atan@f
  6992  004FB6  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6993  004FBA  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6994  004FBE  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6995  004FC2  EC53  F029         	call	_atan	;wreg free
  6996  004FC6  C0D1  F1A8         	movff	?_atan,_asin$3754
  6997  004FCA  C0D2  F1A9         	movff	?_atan+1,_asin$3754+1
  6998  004FCE  C0D3  F1AA         	movff	?_atan+2,_asin$3754+2
  6999  004FD2  C0D4  F1AB         	movff	?_atan+3,_asin$3754+3
  7000  004FD6  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  7001  004FDA  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  7002  004FDE  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  7003  004FE2  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  7004  004FE6  ECE9  F032         	call	___flneg	;wreg free
  7005  004FEA  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7006  004FEE  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7007  004FF2  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7008  004FF6  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7009  004FFA  0EDB               	movlw	219
  7010  004FFC  0100               	movlb	0	; () banked
  7011  004FFE  6FAD               	movwf	___fladd@a& (0+255),b
  7012  005000  0E0F               	movlw	15
  7013  005002  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7014  005004  0EC9               	movlw	201
  7015  005006  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7016  005008  0E3F               	movlw	63
  7017  00500A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7018  00500C  EC85  F018         	call	___fladd	;wreg free
  7019  005010  C0A9  F0D5         	movff	?___fladd,?_asin
  7020  005014  C0AA  F0D6         	movff	?___fladd+1,?_asin+1
  7021  005018  C0AB  F0D7         	movff	?___fladd+2,?_asin+2
  7022  00501C  C0AC  F0D8         	movff	?___fladd+3,?_asin+3
  7023  005020  0012               	return	
  7024  005022                     __end_of_asin:
  7025                           	opt stack 0
  7026                           tblptru	equ	0xFF8
  7027                           tblptrh	equ	0xFF7
  7028                           tblptrl	equ	0xFF6
  7029                           tablat	equ	0xFF5
  7030                           postinc0	equ	0xFEE
  7031                           wreg	equ	0xFE8
  7032                           postdec1	equ	0xFE5
  7033                           fsr1l	equ	0xFE1
  7034                           indf2	equ	0xFDF
  7035                           postinc2	equ	0xFDE
  7036                           postdec2	equ	0xFDD
  7037                           fsr2h	equ	0xFDA
  7038                           fsr2l	equ	0xFD9
  7039                           status	equ	0xFD8
  7040                           
  7041 ;; *************** function _sqrt *****************
  7042 ;; Defined at:
  7043 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  a               4   97[BANK0 ] long 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  frac            4   17[BANK1 ] unsigned long 
  7048 ;;  root            4   13[BANK1 ] struct .
  7049 ;;  grs             4    7[BANK1 ] unsigned long 
  7050 ;;  tfrac           4    2[BANK1 ] unsigned long 
  7051 ;;  exp             2   11[BANK1 ] int 
  7052 ;;  p               1    6[BANK1 ] unsigned char 
  7053 ;;  i               1    1[BANK1 ] unsigned char 
  7054 ;;  sign            1    0[BANK1 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  4   97[BANK0 ] unsigned char 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       29 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    4
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_parallelo
  7075 ;;		_asin
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text17
  7080  003ED0                     __ptext17:
  7081                           	opt stack 0
  7082  003ED0                     _sqrt:
  7083                           	opt stack 24
  7084                           
  7085                           ;incstack = 0
  7086  003ED0  0100               	movlb	0	; () banked
  7087  003ED2  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7088  003ED4  0B80               	andlw	128
  7089  003ED6  0101               	movlb	1	; () banked
  7090  003ED8  6F8B               	movwf	sqrt@sign& (0+255),b
  7091  003EDA  0100               	movlb	0	; () banked
  7092  003EDC  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7093  003EDE  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7094  003EE0  0101               	movlb	1	; () banked
  7095  003EE2  6F91               	movwf	sqrt@p& (0+255),b
  7096                           
  7097                           ; BSR set to: 1
  7098  003EE4  0100               	movlb	0	; () banked
  7099  003EE6  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7100  003EE8  D002               	goto	l7636
  7101                           
  7102                           ; BSR set to: 0
  7103  003EEA  0101               	movlb	1	; () banked
  7104  003EEC  8191               	bsf	sqrt@p& (0+255),0,b
  7105  003EEE                     l7636:
  7106  003EEE  C191  F196         	movff	sqrt@p,sqrt@exp
  7107  003EF2  0101               	movlb	1	; () banked
  7108  003EF4  6B97               	clrf	(sqrt@exp+1)& (0+255),b
  7109                           
  7110                           ; BSR set to: 1
  7111  003EF6  0EFF               	movlw	255
  7112  003EF8  0100               	movlb	0	; () banked
  7113  003EFA  15C1               	andwf	sqrt@a& (0+255),w,b
  7114  003EFC  0101               	movlb	1	; () banked
  7115  003EFE  6F9C               	movwf	sqrt@frac& (0+255),b
  7116  003F00  0EFF               	movlw	255
  7117  003F02  0100               	movlb	0	; () banked
  7118  003F04  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7119  003F06  0101               	movlb	1	; () banked
  7120  003F08  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7121  003F0A  0E7F               	movlw	127
  7122  003F0C  0100               	movlb	0	; () banked
  7123  003F0E  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7124  003F10  0101               	movlb	1	; () banked
  7125  003F12  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7126  003F14  0E00               	movlw	0
  7127  003F16  0100               	movlb	0	; () banked
  7128  003F18  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7129  003F1A  0101               	movlb	1	; () banked
  7130  003F1C  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7131                           
  7132                           ; BSR set to: 1
  7133  003F1E  0101               	movlb	1	; () banked
  7134  003F20  5196               	movf	sqrt@exp& (0+255),w,b
  7135  003F22  0101               	movlb	1	; () banked
  7136  003F24  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7137  003F26  B4D8               	btfsc	status,2,c
  7138  003F28  D008               	goto	l7648
  7139                           
  7140                           ; BSR set to: 1
  7141  003F2A  0101               	movlb	1	; () banked
  7142  003F2C  8F9E               	bsf	(sqrt@frac+2)& (0+255),7,b
  7143                           
  7144                           ; BSR set to: 1
  7145  003F2E  0101               	movlb	1	; () banked
  7146  003F30  2996               	incf	sqrt@exp& (0+255),w,b
  7147  003F32  0101               	movlb	1	; () banked
  7148  003F34  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7149  003F36  A4D8               	btfss	status,2,c
  7150  003F38  D009               	goto	l7650
  7151  003F3A                     l7648:
  7152                           
  7153                           ; BSR set to: 1
  7154  003F3A  0E00               	movlw	0
  7155  003F3C  0101               	movlb	1	; () banked
  7156  003F3E  6F9C               	movwf	sqrt@frac& (0+255),b
  7157  003F40  0E00               	movlw	0
  7158  003F42  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7159  003F44  0E00               	movlw	0
  7160  003F46  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7161  003F48  0E00               	movlw	0
  7162  003F4A  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7163  003F4C                     l7650:
  7164                           
  7165                           ; BSR set to: 1
  7166  003F4C  0101               	movlb	1	; () banked
  7167  003F4E  5196               	movf	sqrt@exp& (0+255),w,b
  7168  003F50  0101               	movlb	1	; () banked
  7169  003F52  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7170  003F54  A4D8               	btfss	status,2,c
  7171  003F56  D00A               	goto	l7656
  7172                           
  7173                           ; BSR set to: 1
  7174  003F58  0E00               	movlw	0
  7175  003F5A  0100               	movlb	0	; () banked
  7176  003F5C  6FC1               	movwf	?_sqrt& (0+255),b
  7177  003F5E  0E00               	movlw	0
  7178  003F60  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7179  003F62  0E00               	movlw	0
  7180  003F64  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7181  003F66  0E00               	movlw	0
  7182  003F68  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7183                           
  7184                           ; BSR set to: 0
  7185  003F6A  0012               	return	
  7186  003F6C                     l7656:
  7187  003F6C  0101               	movlb	1	; () banked
  7188  003F6E  518B               	movf	sqrt@sign& (0+255),w,b
  7189  003F70  0101               	movlb	1	; () banked
  7190  003F72  B4D8               	btfsc	status,2,c
  7191  003F74  D01C               	goto	l7668
  7192                           
  7193                           ; BSR set to: 1
  7194  003F76  0E00               	movlw	0
  7195  003F78  0101               	movlb	1	; () banked
  7196  003F7A  6F98               	movwf	sqrt@root& (0+255),b
  7197  003F7C  0E00               	movlw	0
  7198  003F7E  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7199  003F80  0E40               	movlw	64
  7200  003F82  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7201  003F84  0E00               	movlw	0
  7202  003F86  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7203                           
  7204                           ; BSR set to: 1
  7205  003F88  0101               	movlb	1	; () banked
  7206  003F8A  0E80               	movlw	128
  7207  003F8C  139A               	iorwf	(sqrt@root+2)& (0+255),f,b
  7208  003F8E  0EFF               	movlw	255
  7209  003F90  139B               	iorwf	(sqrt@root+3)& (0+255),f,b
  7210                           
  7211                           ; BSR set to: 1
  7212  003F92  0E00               	movlw	0
  7213  003F94  0100               	movlb	0	; () banked
  7214  003F96  6FE5               	movwf	(_errno+1)& (0+255),b
  7215  003F98  0E21               	movlw	33
  7216  003F9A  6FE4               	movwf	_errno& (0+255),b
  7217                           
  7218                           ; BSR set to: 0
  7219  003F9C  C198  F0C1         	movff	sqrt@root,?_sqrt
  7220  003FA0  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7221  003FA4  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7222  003FA8  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7223                           
  7224                           ; BSR set to: 0
  7225  003FAC  0012               	return	
  7226  003FAE                     l7668:
  7227  003FAE  0101               	movlb	1	; () banked
  7228  003FB0  2996               	incf	sqrt@exp& (0+255),w,b
  7229  003FB2  0101               	movlb	1	; () banked
  7230  003FB4  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7231  003FB6  A4D8               	btfss	status,2,c
  7232  003FB8  D012               	goto	l7676
  7233                           
  7234                           ; BSR set to: 1
  7235  003FBA  0E00               	movlw	0
  7236  003FBC  0101               	movlb	1	; () banked
  7237  003FBE  6F98               	movwf	sqrt@root& (0+255),b
  7238  003FC0  0E00               	movlw	0
  7239  003FC2  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7240  003FC4  0E80               	movlw	128
  7241  003FC6  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7242  003FC8  0E7F               	movlw	127
  7243  003FCA  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7244                           
  7245                           ; BSR set to: 1
  7246  003FCC  C198  F0C1         	movff	sqrt@root,?_sqrt
  7247  003FD0  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7248  003FD4  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7249  003FD8  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7250                           
  7251                           ; BSR set to: 1
  7252  003FDC  0012               	return	
  7253  003FDE                     l7676:
  7254                           
  7255                           ; BSR set to: 1
  7256  003FDE  0101               	movlb	1	; () banked
  7257  003FE0  0E81               	movlw	129
  7258  003FE2  2796               	addwf	sqrt@exp& (0+255),f,b
  7259  003FE4  0EFF               	movlw	255
  7260  003FE6  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7261  003FE8  0101               	movlb	1	; () banked
  7262  003FEA  5196               	movf	sqrt@exp& (0+255),w,b
  7263  003FEC  0B01               	andlw	1
  7264  003FEE  0101               	movlb	1	; () banked
  7265  003FF0  6F91               	movwf	sqrt@p& (0+255),b
  7266  003FF2  0101               	movlb	1	; () banked
  7267  003FF4  3597               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7268  003FF6  3397               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7269  003FF8  3396               	rrcf	sqrt@exp& (0+255),f,b
  7270  003FFA  0E7F               	movlw	127
  7271  003FFC  0101               	movlb	1	; () banked
  7272  003FFE  2796               	addwf	sqrt@exp& (0+255),f,b
  7273  004000  0E00               	movlw	0
  7274  004002  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7275  004004  90D8               	bcf	status,0,c
  7276  004006  0101               	movlb	1	; () banked
  7277  004008  359C               	rlcf	sqrt@frac& (0+255),w,b
  7278  00400A  0101               	movlb	1	; () banked
  7279  00400C  6F8D               	movwf	sqrt@tfrac& (0+255),b
  7280  00400E  0101               	movlb	1	; () banked
  7281  004010  359D               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7282  004012  0101               	movlb	1	; () banked
  7283  004014  6F8E               	movwf	(sqrt@tfrac+1)& (0+255),b
  7284  004016  0101               	movlb	1	; () banked
  7285  004018  359E               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7286  00401A  0101               	movlb	1	; () banked
  7287  00401C  6F8F               	movwf	(sqrt@tfrac+2)& (0+255),b
  7288  00401E  0101               	movlb	1	; () banked
  7289  004020  359F               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7290  004022  0101               	movlb	1	; () banked
  7291  004024  6F90               	movwf	(sqrt@tfrac+3)& (0+255),b
  7292                           
  7293                           ; BSR set to: 1
  7294  004026  0E00               	movlw	0
  7295  004028  0101               	movlb	1	; () banked
  7296  00402A  6F9C               	movwf	sqrt@frac& (0+255),b
  7297  00402C  0E00               	movlw	0
  7298  00402E  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7299  004030  0E00               	movlw	0
  7300  004032  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7301  004034  0E00               	movlw	0
  7302  004036  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7303                           
  7304                           ; BSR set to: 1
  7305  004038  0E00               	movlw	0
  7306  00403A  0101               	movlb	1	; () banked
  7307  00403C  6F92               	movwf	sqrt@grs& (0+255),b
  7308  00403E  0E00               	movlw	0
  7309  004040  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7310  004042  0E00               	movlw	0
  7311  004044  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7312  004046  0E01               	movlw	1
  7313  004048  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7314                           
  7315                           ; BSR set to: 1
  7316  00404A  0101               	movlb	1	; () banked
  7317  00404C  5191               	movf	sqrt@p& (0+255),w,b
  7318  00404E  0101               	movlb	1	; () banked
  7319  004050  B4D8               	btfsc	status,2,c
  7320  004052  D006               	goto	l7686
  7321                           
  7322                           ; BSR set to: 1
  7323  004054  0101               	movlb	1	; () banked
  7324  004056  90D8               	bcf	status,0,c
  7325  004058  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7326  00405A  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7327  00405C  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7328  00405E  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7329  004060                     l7686:
  7330                           
  7331                           ; BSR set to: 1
  7332  004060  0E00               	movlw	0
  7333  004062  0101               	movlb	1	; () banked
  7334  004064  6F8C               	movwf	sqrt@i& (0+255),b
  7335  004066  D07E               	goto	l7700
  7336  004068                     l7688:
  7337                           
  7338                           ; BSR set to: 1
  7339  004068  0101               	movlb	1	; () banked
  7340  00406A  5192               	movf	sqrt@grs& (0+255),w,b
  7341  00406C  0101               	movlb	1	; () banked
  7342  00406E  139C               	iorwf	sqrt@frac& (0+255),f,b
  7343  004070  0101               	movlb	1	; () banked
  7344  004072  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7345  004074  0101               	movlb	1	; () banked
  7346  004076  139D               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7347  004078  0101               	movlb	1	; () banked
  7348  00407A  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7349  00407C  0101               	movlb	1	; () banked
  7350  00407E  139E               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7351  004080  0101               	movlb	1	; () banked
  7352  004082  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7353  004084  0101               	movlb	1	; () banked
  7354  004086  139F               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7355  004088  0101               	movlb	1	; () banked
  7356  00408A  519C               	movf	sqrt@frac& (0+255),w,b
  7357  00408C  0101               	movlb	1	; () banked
  7358  00408E  5D8D               	subwf	sqrt@tfrac& (0+255),w,b
  7359  004090  0101               	movlb	1	; () banked
  7360  004092  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7361  004094  0101               	movlb	1	; () banked
  7362  004096  598E               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7363  004098  0101               	movlb	1	; () banked
  7364  00409A  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7365  00409C  0101               	movlb	1	; () banked
  7366  00409E  598F               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7367  0040A0  0101               	movlb	1	; () banked
  7368  0040A2  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7369  0040A4  0101               	movlb	1	; () banked
  7370  0040A6  5990               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7371  0040A8  A0D8               	btfss	status,0,c
  7372  0040AA  D021               	goto	l7692
  7373                           
  7374                           ; BSR set to: 1
  7375  0040AC  0101               	movlb	1	; () banked
  7376  0040AE  519C               	movf	sqrt@frac& (0+255),w,b
  7377  0040B0  0101               	movlb	1	; () banked
  7378  0040B2  5F8D               	subwf	sqrt@tfrac& (0+255),f,b
  7379  0040B4  0101               	movlb	1	; () banked
  7380  0040B6  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7381  0040B8  0101               	movlb	1	; () banked
  7382  0040BA  5B8E               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7383  0040BC  0101               	movlb	1	; () banked
  7384  0040BE  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7385  0040C0  0101               	movlb	1	; () banked
  7386  0040C2  5B8F               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7387  0040C4  0101               	movlb	1	; () banked
  7388  0040C6  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7389  0040C8  0101               	movlb	1	; () banked
  7390  0040CA  5B90               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7391  0040CC  0101               	movlb	1	; () banked
  7392  0040CE  5192               	movf	sqrt@grs& (0+255),w,b
  7393  0040D0  0101               	movlb	1	; () banked
  7394  0040D2  279C               	addwf	sqrt@frac& (0+255),f,b
  7395  0040D4  0101               	movlb	1	; () banked
  7396  0040D6  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7397  0040D8  0101               	movlb	1	; () banked
  7398  0040DA  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7399  0040DC  0101               	movlb	1	; () banked
  7400  0040DE  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7401  0040E0  0101               	movlb	1	; () banked
  7402  0040E2  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7403  0040E4  0101               	movlb	1	; () banked
  7404  0040E6  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7405  0040E8  0101               	movlb	1	; () banked
  7406  0040EA  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7407  0040EC  D01D               	goto	l7694
  7408  0040EE                     l7692:
  7409                           
  7410                           ; BSR set to: 1
  7411  0040EE  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7412  0040F2  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7413  0040F6  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7414  0040FA  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7415  0040FE  0100               	movlb	0	; () banked
  7416  004100  1FC5               	comf	??_sqrt& (0+255),f,b
  7417  004102  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7418  004104  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7419  004106  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7420  004108  0100               	movlb	0	; () banked
  7421  00410A  51C5               	movf	??_sqrt& (0+255),w,b
  7422  00410C  0101               	movlb	1	; () banked
  7423  00410E  179C               	andwf	sqrt@frac& (0+255),f,b
  7424  004110  0100               	movlb	0	; () banked
  7425  004112  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7426  004114  0101               	movlb	1	; () banked
  7427  004116  179D               	andwf	(sqrt@frac+1)& (0+255),f,b
  7428  004118  0100               	movlb	0	; () banked
  7429  00411A  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7430  00411C  0101               	movlb	1	; () banked
  7431  00411E  179E               	andwf	(sqrt@frac+2)& (0+255),f,b
  7432  004120  0100               	movlb	0	; () banked
  7433  004122  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7434  004124  0101               	movlb	1	; () banked
  7435  004126  179F               	andwf	(sqrt@frac+3)& (0+255),f,b
  7436  004128                     l7694:
  7437                           
  7438                           ; BSR set to: 1
  7439  004128  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7440  00412C  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7441  004130  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7442  004134  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7443  004138  0100               	movlb	0	; () banked
  7444  00413A  90D8               	bcf	status,0,c
  7445  00413C  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7446  00413E  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7447  004140  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7448  004142  33C5               	rrcf	??_sqrt& (0+255),f,b
  7449  004144  C0C5  F192         	movff	??_sqrt,sqrt@grs
  7450  004148  C0C6  F193         	movff	??_sqrt+1,sqrt@grs+1
  7451  00414C  C0C7  F194         	movff	??_sqrt+2,sqrt@grs+2
  7452  004150  C0C8  F195         	movff	??_sqrt+3,sqrt@grs+3
  7453                           
  7454                           ; BSR set to: 0
  7455  004154  0101               	movlb	1	; () banked
  7456  004156  90D8               	bcf	status,0,c
  7457  004158  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7458  00415A  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7459  00415C  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7460  00415E  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7461                           
  7462                           ; BSR set to: 1
  7463  004160  0101               	movlb	1	; () banked
  7464  004162  2B8C               	incf	sqrt@i& (0+255),f,b
  7465  004164                     l7700:
  7466                           
  7467                           ; BSR set to: 1
  7468  004164  0E18               	movlw	24
  7469  004166  0101               	movlb	1	; () banked
  7470  004168  658C               	cpfsgt	sqrt@i& (0+255),b
  7471  00416A  D77E               	goto	l7688
  7472                           
  7473                           ; BSR set to: 1
  7474                           
  7475                           ; BSR set to: 1
  7476  00416C  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7477  004170  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7478  004174  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7479  004178  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7480  00417C  0100               	movlb	0	; () banked
  7481  00417E  90D8               	bcf	status,0,c
  7482  004180  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7483  004182  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7484  004184  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7485  004186  33C5               	rrcf	??_sqrt& (0+255),f,b
  7486  004188  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7487  00418C  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7488  004190  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7489  004194  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7490                           
  7491                           ; BSR set to: 0
  7492  004198  0E01               	movlw	1
  7493  00419A  0101               	movlb	1	; () banked
  7494  00419C  159C               	andwf	sqrt@frac& (0+255),w,b
  7495  00419E  0101               	movlb	1	; () banked
  7496  0041A0  6F92               	movwf	sqrt@grs& (0+255),b
  7497  0041A2  0E00               	movlw	0
  7498  0041A4  0101               	movlb	1	; () banked
  7499  0041A6  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7500  0041A8  0101               	movlb	1	; () banked
  7501  0041AA  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7502  0041AC  0E00               	movlw	0
  7503  0041AE  0101               	movlb	1	; () banked
  7504  0041B0  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7505  0041B2  0101               	movlb	1	; () banked
  7506  0041B4  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7507  0041B6  0E00               	movlw	0
  7508  0041B8  0101               	movlb	1	; () banked
  7509  0041BA  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7510  0041BC  0101               	movlb	1	; () banked
  7511  0041BE  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7512                           
  7513                           ; BSR set to: 1
  7514  0041C0  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7515  0041C4  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7516  0041C8  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7517  0041CC  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7518  0041D0  0100               	movlb	0	; () banked
  7519  0041D2  90D8               	bcf	status,0,c
  7520  0041D4  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7521  0041D6  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7522  0041D8  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7523  0041DA  33C5               	rrcf	??_sqrt& (0+255),f,b
  7524  0041DC  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7525  0041E0  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7526  0041E4  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7527  0041E8  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7528  0041EC  0101               	movlb	1	; () banked
  7529  0041EE  5192               	movf	sqrt@grs& (0+255),w,b
  7530  0041F0  0101               	movlb	1	; () banked
  7531  0041F2  279C               	addwf	sqrt@frac& (0+255),f,b
  7532  0041F4  0101               	movlb	1	; () banked
  7533  0041F6  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7534  0041F8  0101               	movlb	1	; () banked
  7535  0041FA  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7536  0041FC  0101               	movlb	1	; () banked
  7537  0041FE  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7538  004200  0101               	movlb	1	; () banked
  7539  004202  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7540  004204  0101               	movlb	1	; () banked
  7541  004206  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7542  004208  0101               	movlb	1	; () banked
  7543  00420A  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7544                           
  7545                           ; BSR set to: 1
  7546  00420C  0101               	movlb	1	; () banked
  7547  00420E  A19F               	btfss	(sqrt@frac+3)& (0+255),0,b
  7548  004210  D019               	goto	l7712
  7549                           
  7550                           ; BSR set to: 1
  7551  004212  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7552  004216  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7553  00421A  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7554  00421E  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7555  004222  0100               	movlb	0	; () banked
  7556  004224  90D8               	bcf	status,0,c
  7557  004226  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7558  004228  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7559  00422A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7560  00422C  33C5               	rrcf	??_sqrt& (0+255),f,b
  7561  00422E  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7562  004232  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7563  004236  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7564  00423A  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7565  00423E  0101               	movlb	1	; () banked
  7566  004240  4B96               	infsnz	sqrt@exp& (0+255),f,b
  7567  004242  2B97               	incf	(sqrt@exp+1)& (0+255),f,b
  7568  004244                     l7712:
  7569                           
  7570                           ; BSR set to: 1
  7571  004244  0EFF               	movlw	255
  7572  004246  0101               	movlb	1	; () banked
  7573  004248  159C               	andwf	sqrt@frac& (0+255),w,b
  7574  00424A  0101               	movlb	1	; () banked
  7575  00424C  6F98               	movwf	sqrt@root& (0+255),b
  7576  00424E  0EFF               	movlw	255
  7577  004250  0101               	movlb	1	; () banked
  7578  004252  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7579  004254  0101               	movlb	1	; () banked
  7580  004256  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7581  004258  0E7F               	movlw	127
  7582  00425A  0101               	movlb	1	; () banked
  7583  00425C  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7584  00425E  0101               	movlb	1	; () banked
  7585  004260  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7586  004262  0E00               	movlw	0
  7587  004264  0101               	movlb	1	; () banked
  7588  004266  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7589  004268  0101               	movlb	1	; () banked
  7590  00426A  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7591                           
  7592                           ; BSR set to: 1
  7593  00426C  C196  F191         	movff	sqrt@exp,sqrt@p
  7594                           
  7595                           ; BSR set to: 1
  7596  004270  0101               	movlb	1	; () banked
  7597  004272  A191               	btfss	sqrt@p& (0+255),0,b
  7598  004274  D002               	goto	l7720
  7599                           
  7600                           ; BSR set to: 1
  7601  004276  0101               	movlb	1	; () banked
  7602  004278  8F9A               	bsf	(sqrt@root+2)& (0+255),7,b
  7603  00427A                     l7720:
  7604                           
  7605                           ; BSR set to: 1
  7606  00427A  0101               	movlb	1	; () banked
  7607  00427C  90D8               	bcf	status,0,c
  7608  00427E  3191               	rrcf	sqrt@p& (0+255),w,b
  7609  004280  0101               	movlb	1	; () banked
  7610  004282  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7611                           
  7612                           ; BSR set to: 1
  7613  004284  0101               	movlb	1	; () banked
  7614  004286  9F9B               	bcf	(sqrt@root+3)& (0+255),7,b
  7615                           
  7616                           ; BSR set to: 1
  7617  004288  C198  F0C1         	movff	sqrt@root,?_sqrt
  7618  00428C  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7619  004290  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7620  004294  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7621  004298  0012               	return	
  7622  00429A                     __end_of_sqrt:
  7623                           	opt stack 0
  7624                           tblptru	equ	0xFF8
  7625                           tblptrh	equ	0xFF7
  7626                           tblptrl	equ	0xFF6
  7627                           tablat	equ	0xFF5
  7628                           postinc0	equ	0xFEE
  7629                           wreg	equ	0xFE8
  7630                           postdec1	equ	0xFE5
  7631                           fsr1l	equ	0xFE1
  7632                           indf2	equ	0xFDF
  7633                           postinc2	equ	0xFDE
  7634                           postdec2	equ	0xFDD
  7635                           fsr2h	equ	0xFDA
  7636                           fsr2l	equ	0xFD9
  7637                           status	equ	0xFD8
  7638                           
  7639 ;; *************** function _atan *****************
  7640 ;; Defined at:
  7641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  f               4  113[BANK0 ] unsigned char 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  val             4   13[BANK1 ] unsigned char 
  7646 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7647 ;;  x               4    4[BANK1 ] unsigned char 
  7648 ;;  y               4    0[BANK1 ] unsigned char 
  7649 ;;  recip           1    8[BANK1 ] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  4  113[BANK0 ] unsigned char 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;Total ram usage:       21 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    6
  7666 ;; This function calls:
  7667 ;;		___fladd
  7668 ;;		___fldiv
  7669 ;;		___flge
  7670 ;;		___flmul
  7671 ;;		___flneg
  7672 ;;		_eval_poly
  7673 ;;		_fabs
  7674 ;; This function is called by:
  7675 ;;		_asin
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text18
  7680  0052A6                     __ptext18:
  7681                           	opt stack 0
  7682  0052A6                     _atan:
  7683                           	opt stack 21
  7684                           
  7685                           ;incstack = 0
  7686  0052A6  C0D1  F0C1         	movff	atan@f,fabs@d
  7687  0052AA  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7688  0052AE  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7689  0052B2  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7690  0052B6  ECAD  F032         	call	_fabs	;wreg free
  7691  0052BA  C0C1  F198         	movff	?_fabs,atan@val
  7692  0052BE  C0C2  F199         	movff	?_fabs+1,atan@val+1
  7693  0052C2  C0C3  F19A         	movff	?_fabs+2,atan@val+2
  7694  0052C6  C0C4  F19B         	movff	?_fabs+3,atan@val+3
  7695  0052CA  0101               	movlb	1	; () banked
  7696  0052CC  5198               	movf	atan@val& (0+255),w,b
  7697  0052CE  0101               	movlb	1	; () banked
  7698  0052D0  1199               	iorwf	(atan@val+1)& (0+255),w,b
  7699  0052D2  0101               	movlb	1	; () banked
  7700  0052D4  119A               	iorwf	(atan@val+2)& (0+255),w,b
  7701  0052D6  0101               	movlb	1	; () banked
  7702  0052D8  119B               	iorwf	(atan@val+3)& (0+255),w,b
  7703  0052DA  A4D8               	btfss	status,2,c
  7704  0052DC  D00A               	goto	l7740
  7705                           
  7706                           ; BSR set to: 1
  7707  0052DE  0E00               	movlw	0
  7708  0052E0  0100               	movlb	0	; () banked
  7709  0052E2  6FD1               	movwf	?_atan& (0+255),b
  7710  0052E4  0E00               	movlw	0
  7711  0052E6  6FD2               	movwf	(?_atan+1)& (0+255),b
  7712  0052E8  0E00               	movlw	0
  7713  0052EA  6FD3               	movwf	(?_atan+2)& (0+255),b
  7714  0052EC  0E00               	movlw	0
  7715  0052EE  6FD4               	movwf	(?_atan+3)& (0+255),b
  7716                           
  7717                           ; BSR set to: 0
  7718  0052F0  0012               	return	
  7719  0052F2                     l7740:
  7720  0052F2  0E00               	movlw	0
  7721  0052F4  0100               	movlb	0	; () banked
  7722  0052F6  6FC5               	movwf	___flge@ff1& (0+255),b
  7723  0052F8  0E00               	movlw	0
  7724  0052FA  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7725  0052FC  0E80               	movlw	128
  7726  0052FE  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7727  005300  0E3F               	movlw	63
  7728  005302  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7729  005304  C198  F0C9         	movff	atan@val,___flge@ff2
  7730  005308  C199  F0CA         	movff	atan@val+1,___flge@ff2+1
  7731  00530C  C19A  F0CB         	movff	atan@val+2,___flge@ff2+2
  7732  005310  C19B  F0CC         	movff	atan@val+3,___flge@ff2+3
  7733  005314  EC26  F02D         	call	___flge	;wreg free
  7734  005318  0100               	movlb	0	; () banked
  7735  00531A  B0D8               	btfsc	status,0,c
  7736  00531C  D002               	goto	u10250
  7737  00531E  0E01               	movlw	1
  7738  005320  D001               	goto	u10260
  7739  005322                     u10250:
  7740  005322  0E00               	movlw	0
  7741  005324                     u10260:
  7742  005324  0101               	movlb	1	; () banked
  7743  005326  6F93               	movwf	atan@recip& (0+255),b
  7744  005328  0101               	movlb	1	; () banked
  7745  00532A  5193               	movf	atan@recip& (0+255),w,b
  7746  00532C  B4D8               	btfsc	status,2,c
  7747  00532E  D01B               	goto	l7744
  7748                           
  7749                           ; BSR set to: 1
  7750  005330  0E00               	movlw	0
  7751  005332  0100               	movlb	0	; () banked
  7752  005334  6F77               	movwf	___fldiv@b& (0+255),b
  7753  005336  0E00               	movlw	0
  7754  005338  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7755  00533A  0E80               	movlw	128
  7756  00533C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7757  00533E  0E3F               	movlw	63
  7758  005340  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7759  005342  C198  F07B         	movff	atan@val,___fldiv@a
  7760  005346  C199  F07C         	movff	atan@val+1,___fldiv@a+1
  7761  00534A  C19A  F07D         	movff	atan@val+2,___fldiv@a+2
  7762  00534E  C19B  F07E         	movff	atan@val+3,___fldiv@a+3
  7763  005352  EC4D  F021         	call	___fldiv	;wreg free
  7764  005356  C077  F198         	movff	?___fldiv,atan@val
  7765  00535A  C078  F199         	movff	?___fldiv+1,atan@val+1
  7766  00535E  C079  F19A         	movff	?___fldiv+2,atan@val+2
  7767  005362  C07A  F19B         	movff	?___fldiv+3,atan@val+3
  7768  005366                     l7744:
  7769  005366  C198  F090         	movff	atan@val,___flmul@b
  7770  00536A  C199  F091         	movff	atan@val+1,___flmul@b+1
  7771  00536E  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7772  005372  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7773  005376  C198  F094         	movff	atan@val,___flmul@a
  7774  00537A  C199  F095         	movff	atan@val+1,___flmul@a+1
  7775  00537E  C19A  F096         	movff	atan@val+2,___flmul@a+2
  7776  005382  C19B  F097         	movff	atan@val+3,___flmul@a+3
  7777  005386  ECD9  F01A         	call	___flmul	;wreg free
  7778  00538A  C090  F194         	movff	?___flmul,atan@val_squared
  7779  00538E  C091  F195         	movff	?___flmul+1,atan@val_squared+1
  7780  005392  C092  F196         	movff	?___flmul+2,atan@val_squared+2
  7781  005396  C093  F197         	movff	?___flmul+3,atan@val_squared+3
  7782  00539A  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7783  00539E  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7784  0053A2  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7785  0053A6  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7786  0053AA  0E19               	movlw	low atan@coeff_b
  7787  0053AC  0100               	movlb	0	; () banked
  7788  0053AE  6FC1               	movwf	eval_poly@d& (0+255),b
  7789  0053B0  0E0D               	movlw	high atan@coeff_b
  7790  0053B2  0100               	movlb	0	; () banked
  7791  0053B4  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7792  0053B6  0E00               	movlw	0
  7793  0053B8  0100               	movlb	0	; () banked
  7794  0053BA  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7795  0053BC  0E04               	movlw	4
  7796  0053BE  6FC3               	movwf	eval_poly@n& (0+255),b
  7797  0053C0  EC1A  F02F         	call	_eval_poly	;wreg free
  7798  0053C4  C0BD  F18B         	movff	?_eval_poly,atan@y
  7799  0053C8  C0BE  F18C         	movff	?_eval_poly+1,atan@y+1
  7800  0053CC  C0BF  F18D         	movff	?_eval_poly+2,atan@y+2
  7801  0053D0  C0C0  F18E         	movff	?_eval_poly+3,atan@y+3
  7802  0053D4  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7803  0053D8  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7804  0053DC  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7805  0053E0  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7806  0053E4  0E01               	movlw	low atan@coeff_a
  7807  0053E6  0100               	movlb	0	; () banked
  7808  0053E8  6FC1               	movwf	eval_poly@d& (0+255),b
  7809  0053EA  0E0D               	movlw	high atan@coeff_a
  7810  0053EC  0100               	movlb	0	; () banked
  7811  0053EE  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7812  0053F0  0E00               	movlw	0
  7813  0053F2  0100               	movlb	0	; () banked
  7814  0053F4  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7815  0053F6  0E05               	movlw	5
  7816  0053F8  6FC3               	movwf	eval_poly@n& (0+255),b
  7817  0053FA  EC1A  F02F         	call	_eval_poly	;wreg free
  7818  0053FE  C0BD  F18F         	movff	?_eval_poly,atan@x
  7819  005402  C0BE  F190         	movff	?_eval_poly+1,atan@x+1
  7820  005406  C0BF  F191         	movff	?_eval_poly+2,atan@x+2
  7821  00540A  C0C0  F192         	movff	?_eval_poly+3,atan@x+3
  7822  00540E  C198  F090         	movff	atan@val,___flmul@b
  7823  005412  C199  F091         	movff	atan@val+1,___flmul@b+1
  7824  005416  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7825  00541A  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7826  00541E  C18B  F07B         	movff	atan@y,___fldiv@a
  7827  005422  C18C  F07C         	movff	atan@y+1,___fldiv@a+1
  7828  005426  C18D  F07D         	movff	atan@y+2,___fldiv@a+2
  7829  00542A  C18E  F07E         	movff	atan@y+3,___fldiv@a+3
  7830  00542E  C18F  F077         	movff	atan@x,___fldiv@b
  7831  005432  C190  F078         	movff	atan@x+1,___fldiv@b+1
  7832  005436  C191  F079         	movff	atan@x+2,___fldiv@b+2
  7833  00543A  C192  F07A         	movff	atan@x+3,___fldiv@b+3
  7834  00543E  EC4D  F021         	call	___fldiv	;wreg free
  7835  005442  C077  F094         	movff	?___fldiv,___flmul@a
  7836  005446  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7837  00544A  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7838  00544E  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7839  005452  ECD9  F01A         	call	___flmul	;wreg free
  7840  005456  C090  F198         	movff	?___flmul,atan@val
  7841  00545A  C091  F199         	movff	?___flmul+1,atan@val+1
  7842  00545E  C092  F19A         	movff	?___flmul+2,atan@val+2
  7843  005462  C093  F19B         	movff	?___flmul+3,atan@val+3
  7844  005466  0101               	movlb	1	; () banked
  7845  005468  5193               	movf	atan@recip& (0+255),w,b
  7846  00546A  0101               	movlb	1	; () banked
  7847  00546C  B4D8               	btfsc	status,2,c
  7848  00546E  D025               	goto	l7756
  7849                           
  7850                           ; BSR set to: 1
  7851  005470  C198  F0BD         	movff	atan@val,___flneg@f1
  7852  005474  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7853  005478  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7854  00547C  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7855  005480  ECE9  F032         	call	___flneg	;wreg free
  7856  005484  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7857  005488  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7858  00548C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7859  005490  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7860  005494  0EDB               	movlw	219
  7861  005496  0100               	movlb	0	; () banked
  7862  005498  6FAD               	movwf	___fladd@a& (0+255),b
  7863  00549A  0E0F               	movlw	15
  7864  00549C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7865  00549E  0EC9               	movlw	201
  7866  0054A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7867  0054A2  0E3F               	movlw	63
  7868  0054A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7869  0054A6  EC85  F018         	call	___fladd	;wreg free
  7870  0054AA  C0A9  F198         	movff	?___fladd,atan@val
  7871  0054AE  C0AA  F199         	movff	?___fladd+1,atan@val+1
  7872  0054B2  C0AB  F19A         	movff	?___fladd+2,atan@val+2
  7873  0054B6  C0AC  F19B         	movff	?___fladd+3,atan@val+3
  7874  0054BA                     l7756:
  7875  0054BA  0100               	movlb	0	; () banked
  7876  0054BC  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7877  0054BE  D009               	goto	l7760
  7878                           
  7879                           ; BSR set to: 0
  7880  0054C0  C198  F0D1         	movff	atan@val,?_atan
  7881  0054C4  C199  F0D2         	movff	atan@val+1,?_atan+1
  7882  0054C8  C19A  F0D3         	movff	atan@val+2,?_atan+2
  7883  0054CC  C19B  F0D4         	movff	atan@val+3,?_atan+3
  7884  0054D0  0012               	return	
  7885  0054D2                     l7760:
  7886                           
  7887                           ; BSR set to: 0
  7888  0054D2  C198  F0BD         	movff	atan@val,___flneg@f1
  7889  0054D6  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7890  0054DA  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7891  0054DE  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7892  0054E2  ECE9  F032         	call	___flneg	;wreg free
  7893  0054E6  C0BD  F0D1         	movff	?___flneg,?_atan
  7894  0054EA  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7895  0054EE  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7896  0054F2  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7897  0054F6  0012               	return	
  7898  0054F8                     __end_of_atan:
  7899                           	opt stack 0
  7900                           tblptru	equ	0xFF8
  7901                           tblptrh	equ	0xFF7
  7902                           tblptrl	equ	0xFF6
  7903                           tablat	equ	0xFF5
  7904                           postinc0	equ	0xFEE
  7905                           wreg	equ	0xFE8
  7906                           postdec1	equ	0xFE5
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           fsr2h	equ	0xFDA
  7912                           fsr2l	equ	0xFD9
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function _fabs *****************
  7916 ;; Defined at:
  7917 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  d               4   97[BANK0 ] unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  4   97[BANK0 ] unsigned char 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;Total ram usage:        4 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    5
  7938 ;; This function calls:
  7939 ;;		___flneg
  7940 ;; This function is called by:
  7941 ;;		_asin
  7942 ;;		_atan
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text19
  7947  00655A                     __ptext19:
  7948                           	opt stack 0
  7949  00655A                     _fabs:
  7950                           	opt stack 22
  7951                           
  7952                           ;incstack = 0
  7953  00655A  0100               	movlb	0	; () banked
  7954  00655C  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7955  00655E  D013               	goto	l1096
  7956                           
  7957                           ; BSR set to: 0
  7958  006560  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7959  006564  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7960  006568  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7961  00656C  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7962  006570  ECE9  F032         	call	___flneg	;wreg free
  7963  006574  C0BD  F0C1         	movff	?___flneg,?_fabs
  7964  006578  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7965  00657C  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7966  006580  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7967  006584  0012               	return	
  7968  006586                     l1096:
  7969                           
  7970                           ; BSR set to: 0
  7971  006586  C0C1  F0C1         	movff	fabs@d,?_fabs
  7972  00658A  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7973  00658E  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7974  006592  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7975  006596  0012               	return		;funcret
  7976  006598                     __end_of_fabs:
  7977                           	opt stack 0
  7978                           tblptru	equ	0xFF8
  7979                           tblptrh	equ	0xFF7
  7980                           tblptrl	equ	0xFF6
  7981                           tablat	equ	0xFF5
  7982                           postinc0	equ	0xFEE
  7983                           wreg	equ	0xFE8
  7984                           postdec1	equ	0xFE5
  7985                           fsr1l	equ	0xFE1
  7986                           indf2	equ	0xFDF
  7987                           postinc2	equ	0xFDE
  7988                           postdec2	equ	0xFDD
  7989                           fsr2h	equ	0xFDA
  7990                           fsr2l	equ	0xFD9
  7991                           status	equ	0xFD8
  7992                           
  7993 ;; *************** function ___flneg *****************
  7994 ;; Defined at:
  7995 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;  f1              4   93[BANK0 ] unsigned char 
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  4   93[BANK0 ] unsigned char 
  8002 ;; Registers used:
  8003 ;;		wreg, status,2, status,0
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;Total ram usage:        4 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    4
  8016 ;; This function calls:
  8017 ;;		Nothing
  8018 ;; This function is called by:
  8019 ;;		_park_routine
  8020 ;;		_matematica
  8021 ;;		_asin
  8022 ;;		_atan
  8023 ;;		_fabs
  8024 ;;		_sin
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text20
  8029  0065D2                     __ptext20:
  8030                           	opt stack 0
  8031  0065D2                     ___flneg:
  8032                           	opt stack 22
  8033                           
  8034                           ;incstack = 0
  8035  0065D2  0100               	movlb	0	; () banked
  8036  0065D4  51BD               	movf	___flneg@f1& (0+255),w,b
  8037  0065D6  0100               	movlb	0	; () banked
  8038  0065D8  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8039  0065DA  0100               	movlb	0	; () banked
  8040  0065DC  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8041  0065DE  0100               	movlb	0	; () banked
  8042  0065E0  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8043  0065E2  B4D8               	btfsc	status,2,c
  8044  0065E4  D009               	goto	l7104
  8045                           
  8046                           ; BSR set to: 0
  8047  0065E6  0E00               	movlw	0
  8048  0065E8  0100               	movlb	0	; () banked
  8049  0065EA  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8050  0065EC  0E00               	movlw	0
  8051  0065EE  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8052  0065F0  0E00               	movlw	0
  8053  0065F2  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8054  0065F4  0E80               	movlw	128
  8055  0065F6  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8056  0065F8                     l7104:
  8057                           
  8058                           ; BSR set to: 0
  8059  0065F8  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8060  0065FC  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8061  006600  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8062  006604  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8063  006608  0012               	return	
  8064  00660A                     __end_of___flneg:
  8065                           	opt stack 0
  8066                           tblptru	equ	0xFF8
  8067                           tblptrh	equ	0xFF7
  8068                           tblptrl	equ	0xFF6
  8069                           tablat	equ	0xFF5
  8070                           postinc0	equ	0xFEE
  8071                           wreg	equ	0xFE8
  8072                           postdec1	equ	0xFE5
  8073                           fsr1l	equ	0xFE1
  8074                           indf2	equ	0xFDF
  8075                           postinc2	equ	0xFDE
  8076                           postdec2	equ	0xFDD
  8077                           fsr2h	equ	0xFDA
  8078                           fsr2l	equ	0xFD9
  8079                           status	equ	0xFD8
  8080                           
  8081 ;; *************** function _eval_poly *****************
  8082 ;; Defined at:
  8083 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  x               4   93[BANK0 ] unsigned char 
  8086 ;;  d               2   97[BANK0 ] PTR const 
  8087 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8088 ;;  n               2   99[BANK0 ] int 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  res             4  105[BANK0 ] int 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  4   93[BANK0 ] int 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8100 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;Total ram usage:       16 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    5
  8107 ;; This function calls:
  8108 ;;		___fladd
  8109 ;;		___flmul
  8110 ;; This function is called by:
  8111 ;;		_atan
  8112 ;;		_sin
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text21
  8117  005E34                     __ptext21:
  8118                           	opt stack 0
  8119  005E34                     _eval_poly:
  8120                           	opt stack 21
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;incstack = 0
  8124  005E34  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8125  005E38  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8126  005E3C  0100               	movlb	0	; () banked
  8127  005E3E  90D8               	bcf	status,0,c
  8128  005E40  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8129  005E42  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8130  005E44  0100               	movlb	0	; () banked
  8131  005E46  90D8               	bcf	status,0,c
  8132  005E48  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8133  005E4A  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8134  005E4C  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8135  005E50  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8136  005E54  0100               	movlb	0	; () banked
  8137  005E56  51C5               	movf	??_eval_poly& (0+255),w,b
  8138  005E58  0100               	movlb	0	; () banked
  8139  005E5A  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8140  005E5C  0100               	movlb	0	; () banked
  8141  005E5E  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8142  005E60  0100               	movlb	0	; () banked
  8143  005E62  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8144  005E64  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8145  005E68  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8146  005E6C                     	if	0	;tblptru may be non-zero
  8147  005E6C                     	endif
  8148  005E6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8149  005E6C  0E00               	movlw	low (__mediumconst shr (0+16))
  8150  005E6E  6EF8               	movwf	tblptru,c
  8151  005E70                     	endif
  8152  005E70  0009               	tblrd		*+
  8153  005E72  CFF5 F0C9          	movff	tablat,eval_poly@res
  8154  005E76  0009               	tblrd		*+
  8155  005E78  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8156  005E7C  0009               	tblrd		*+
  8157  005E7E  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8158  005E82  000A               	tblrd		*-
  8159  005E84  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8160  005E88  D052               	goto	l7362
  8161  005E8A                     l7360:
  8162                           
  8163                           ; BSR set to: 0
  8164  005E8A  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8165  005E8E  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8166  005E92  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8167  005E96  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8168  005E9A  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8169  005E9E  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8170  005EA2  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8171  005EA6  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8172  005EAA  ECD9  F01A         	call	___flmul	;wreg free
  8173  005EAE  C090  F0A9         	movff	?___flmul,___fladd@b
  8174  005EB2  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8175  005EB6  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8176  005EBA  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8177  005EBE  0100               	movlb	0	; () banked
  8178  005EC0  07C3               	decf	eval_poly@n& (0+255),f,b
  8179  005EC2  A0D8               	btfss	status,0,c
  8180  005EC4  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8181  005EC6  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8182  005ECA  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8183  005ECE  0100               	movlb	0	; () banked
  8184  005ED0  90D8               	bcf	status,0,c
  8185  005ED2  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8186  005ED4  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8187  005ED6  0100               	movlb	0	; () banked
  8188  005ED8  90D8               	bcf	status,0,c
  8189  005EDA  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8190  005EDC  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8191  005EDE  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8192  005EE2  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8193  005EE6  0100               	movlb	0	; () banked
  8194  005EE8  51C5               	movf	??_eval_poly& (0+255),w,b
  8195  005EEA  0100               	movlb	0	; () banked
  8196  005EEC  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8197  005EEE  0100               	movlb	0	; () banked
  8198  005EF0  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8199  005EF2  0100               	movlb	0	; () banked
  8200  005EF4  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8201  005EF6  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8202  005EFA  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8203  005EFE                     	if	0	;tblptru may be non-zero
  8204  005EFE                     	endif
  8205  005EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8206  005EFE  0E00               	movlw	low (__mediumconst shr (0+16))
  8207  005F00  6EF8               	movwf	tblptru,c
  8208  005F02                     	endif
  8209  005F02  0009               	tblrd		*+
  8210  005F04  CFF5 F0AD          	movff	tablat,___fladd@a
  8211  005F08  0009               	tblrd		*+
  8212  005F0A  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8213  005F0E  0009               	tblrd		*+
  8214  005F10  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8215  005F14  000A               	tblrd		*-
  8216  005F16  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8217  005F1A  EC85  F018         	call	___fladd	;wreg free
  8218  005F1E  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8219  005F22  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8220  005F26  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8221  005F2A  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8222  005F2E                     l7362:
  8223  005F2E  0100               	movlb	0	; () banked
  8224  005F30  51C3               	movf	eval_poly@n& (0+255),w,b
  8225  005F32  0100               	movlb	0	; () banked
  8226  005F34  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8227  005F36  A4D8               	btfss	status,2,c
  8228  005F38  D7A8               	goto	l7360
  8229                           
  8230                           ; BSR set to: 0
  8231  005F3A  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8232  005F3E  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8233  005F42  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8234  005F46  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8235                           
  8236                           ; BSR set to: 0
  8237  005F4A  0012               	return		;funcret
  8238  005F4C                     __end_of_eval_poly:
  8239                           	opt stack 0
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           postinc0	equ	0xFEE
  8245                           wreg	equ	0xFE8
  8246                           postdec1	equ	0xFE5
  8247                           fsr1l	equ	0xFE1
  8248                           indf2	equ	0xFDF
  8249                           postinc2	equ	0xFDE
  8250                           postdec2	equ	0xFDD
  8251                           fsr2h	equ	0xFDA
  8252                           fsr2l	equ	0xFD9
  8253                           status	equ	0xFD8
  8254                           
  8255 ;; *************** function ___flmul *****************
  8256 ;; Defined at:
  8257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  b               4   48[BANK0 ] int 
  8260 ;;  a               4   52[BANK0 ] int 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  prod            4   67[BANK0 ] struct .
  8263 ;;  grs             4   62[BANK0 ] unsigned long 
  8264 ;;  temp            2   71[BANK0 ] struct .
  8265 ;;  bexp            1   66[BANK0 ] unsigned char 
  8266 ;;  aexp            1   61[BANK0 ] unsigned char 
  8267 ;;  sign            1   60[BANK0 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  4   48[BANK0 ] unsigned char 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0, prodl, prodh
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8277 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;Total ram usage:       25 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    4
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_parallelo
  8288 ;;		_matematica
  8289 ;;		_asin
  8290 ;;		_atan
  8291 ;;		_eval_poly
  8292 ;;		_sin
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text22
  8297  0035B2                     __ptext22:
  8298                           	opt stack 0
  8299  0035B2                     ___flmul:
  8300                           	opt stack 21
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;incstack = 0
  8304  0035B2  0100               	movlb	0	; () banked
  8305  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8306  0035B6  0B80               	andlw	128
  8307  0035B8  0100               	movlb	0	; () banked
  8308  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8309  0035BC  0100               	movlb	0	; () banked
  8310  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8311  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8312  0035C2  0100               	movlb	0	; () banked
  8313  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8314                           
  8315                           ; BSR set to: 0
  8316  0035C6  0100               	movlb	0	; () banked
  8317  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8318  0035CA  D002               	goto	l6954
  8319                           
  8320                           ; BSR set to: 0
  8321  0035CC  0100               	movlb	0	; () banked
  8322  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8323  0035D0                     l6954:
  8324                           
  8325                           ; BSR set to: 0
  8326  0035D0  0100               	movlb	0	; () banked
  8327  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8328  0035D4  0100               	movlb	0	; () banked
  8329  0035D6  B4D8               	btfsc	status,2,c
  8330  0035D8  D010               	goto	l6962
  8331                           
  8332                           ; BSR set to: 0
  8333  0035DA  0100               	movlb	0	; () banked
  8334  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8335  0035DE  A4D8               	btfss	status,2,c
  8336  0035E0  D009               	goto	l6960
  8337                           
  8338                           ; BSR set to: 0
  8339  0035E2  0E00               	movlw	0
  8340  0035E4  0100               	movlb	0	; () banked
  8341  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8342  0035E8  0E00               	movlw	0
  8343  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8344  0035EC  0E00               	movlw	0
  8345  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8346  0035F0  0E00               	movlw	0
  8347  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8348  0035F4                     l6960:
  8349                           
  8350                           ; BSR set to: 0
  8351  0035F4  0100               	movlb	0	; () banked
  8352  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8353  0035F8  D009               	goto	l6964
  8354  0035FA                     l6962:
  8355                           
  8356                           ; BSR set to: 0
  8357  0035FA  0E00               	movlw	0
  8358  0035FC  0100               	movlb	0	; () banked
  8359  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8360  003600  0E00               	movlw	0
  8361  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8362  003604  0E00               	movlw	0
  8363  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8364  003608  0E00               	movlw	0
  8365  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8366  00360C                     l6964:
  8367                           
  8368                           ; BSR set to: 0
  8369  00360C  0100               	movlb	0	; () banked
  8370  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8371  003610  0B80               	andlw	128
  8372  003612  0100               	movlb	0	; () banked
  8373  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8374                           
  8375                           ; BSR set to: 0
  8376  003616  0100               	movlb	0	; () banked
  8377  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8378  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8379  00361C  0100               	movlb	0	; () banked
  8380  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8381                           
  8382                           ; BSR set to: 0
  8383  003620  0100               	movlb	0	; () banked
  8384  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8385  003624  D002               	goto	l6972
  8386                           
  8387                           ; BSR set to: 0
  8388  003626  0100               	movlb	0	; () banked
  8389  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8390  00362A                     l6972:
  8391                           
  8392                           ; BSR set to: 0
  8393  00362A  0100               	movlb	0	; () banked
  8394  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8395  00362E  0100               	movlb	0	; () banked
  8396  003630  B4D8               	btfsc	status,2,c
  8397  003632  D010               	goto	l6980
  8398                           
  8399                           ; BSR set to: 0
  8400  003634  0100               	movlb	0	; () banked
  8401  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8402  003638  A4D8               	btfss	status,2,c
  8403  00363A  D009               	goto	l6978
  8404                           
  8405                           ; BSR set to: 0
  8406  00363C  0E00               	movlw	0
  8407  00363E  0100               	movlb	0	; () banked
  8408  003640  6F94               	movwf	___flmul@a& (0+255),b
  8409  003642  0E00               	movlw	0
  8410  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8411  003646  0E00               	movlw	0
  8412  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8413  00364A  0E00               	movlw	0
  8414  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8415  00364E                     l6978:
  8416                           
  8417                           ; BSR set to: 0
  8418  00364E  0100               	movlb	0	; () banked
  8419  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8420  003652  D009               	goto	l1441
  8421  003654                     l6980:
  8422                           
  8423                           ; BSR set to: 0
  8424  003654  0E00               	movlw	0
  8425  003656  0100               	movlb	0	; () banked
  8426  003658  6F94               	movwf	___flmul@a& (0+255),b
  8427  00365A  0E00               	movlw	0
  8428  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8429  00365E  0E00               	movlw	0
  8430  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8431  003662  0E00               	movlw	0
  8432  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8433  003666                     l1441:
  8434                           
  8435                           ; BSR set to: 0
  8436  003666  0100               	movlb	0	; () banked
  8437  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8438  00366A  0100               	movlb	0	; () banked
  8439  00366C  B4D8               	btfsc	status,2,c
  8440  00366E  D005               	goto	l6984
  8441                           
  8442                           ; BSR set to: 0
  8443  003670  0100               	movlb	0	; () banked
  8444  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8445  003674  0100               	movlb	0	; () banked
  8446  003676  A4D8               	btfss	status,2,c
  8447  003678  D00A               	goto	l6988
  8448  00367A                     l6984:
  8449                           
  8450                           ; BSR set to: 0
  8451  00367A  0E00               	movlw	0
  8452  00367C  0100               	movlb	0	; () banked
  8453  00367E  6F90               	movwf	?___flmul& (0+255),b
  8454  003680  0E00               	movlw	0
  8455  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8456  003684  0E00               	movlw	0
  8457  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8458  003688  0E00               	movlw	0
  8459  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8460                           
  8461                           ; BSR set to: 0
  8462  00368C  0012               	return	
  8463  00368E                     l6988:
  8464                           
  8465                           ; BSR set to: 0
  8466  00368E  0100               	movlb	0	; () banked
  8467  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8468  003692  0100               	movlb	0	; () banked
  8469  003694  0390               	mulwf	___flmul@b& (0+255),b
  8470  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8471  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8472                           
  8473                           ; BSR set to: 0
  8474  00369E  0100               	movlb	0	; () banked
  8475  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8476  0036A2  0100               	movlb	0	; () banked
  8477  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8478  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8479  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8480  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8481                           
  8482                           ; BSR set to: 0
  8483  0036AC  0100               	movlb	0	; () banked
  8484  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8485  0036B0  0100               	movlb	0	; () banked
  8486  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8487  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8488  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8489  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8490  0036BA  0100               	movlb	0	; () banked
  8491  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8492  0036BE  0100               	movlb	0	; () banked
  8493  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8494  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8495  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8496                           
  8497                           ; BSR set to: 0
  8498  0036CA  0100               	movlb	0	; () banked
  8499  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8500  0036CE  0100               	movlb	0	; () banked
  8501  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8502  0036D2  0E00               	movlw	0
  8503  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8504  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8505  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8506                           
  8507                           ; BSR set to: 0
  8508  0036DA  0100               	movlb	0	; () banked
  8509  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8510  0036DE  0100               	movlb	0	; () banked
  8511  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8512  0036E2  0E00               	movlw	0
  8513  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8514  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8515  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8516  0036EA  0100               	movlb	0	; () banked
  8517  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8518  0036EE  0100               	movlb	0	; () banked
  8519  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8520  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8521  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8522                           
  8523                           ; BSR set to: 0
  8524  0036FA  0100               	movlb	0	; () banked
  8525  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8526  0036FE  0100               	movlb	0	; () banked
  8527  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8528  003702  0E00               	movlw	0
  8529  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8530  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8531  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8532                           
  8533                           ; BSR set to: 0
  8534  00370A  0100               	movlb	0	; () banked
  8535  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8536  00370E  0100               	movlb	0	; () banked
  8537  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8538  003712  0E00               	movlw	0
  8539  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8540  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8541  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8542                           
  8543                           ; BSR set to: 0
  8544  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8545  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8546  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8547  003726  0100               	movlb	0	; () banked
  8548  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8549                           
  8550                           ; BSR set to: 0
  8551  00372A  0100               	movlb	0	; () banked
  8552  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8553  00372E  0100               	movlb	0	; () banked
  8554  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8555  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8556  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8557                           
  8558                           ; BSR set to: 0
  8559  00373A  0100               	movlb	0	; () banked
  8560  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8561  00373E  0100               	movlb	0	; () banked
  8562  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8563  003742  0100               	movlb	0	; () banked
  8564  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8565  003746  0100               	movlb	0	; () banked
  8566  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8567  00374A  0E00               	movlw	0
  8568  00374C  0100               	movlb	0	; () banked
  8569  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8570  003750  0E00               	movlw	0
  8571  003752  0100               	movlb	0	; () banked
  8572  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8573                           
  8574                           ; BSR set to: 0
  8575  003756  0100               	movlb	0	; () banked
  8576  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8577  00375A  0100               	movlb	0	; () banked
  8578  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8579  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8580  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8581                           
  8582                           ; BSR set to: 0
  8583  003766  0100               	movlb	0	; () banked
  8584  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8585  00376A  0100               	movlb	0	; () banked
  8586  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8587  00376E  0100               	movlb	0	; () banked
  8588  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8589  003772  0100               	movlb	0	; () banked
  8590  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8591  003776  0E00               	movlw	0
  8592  003778  0100               	movlb	0	; () banked
  8593  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8594  00377C  0E00               	movlw	0
  8595  00377E  0100               	movlb	0	; () banked
  8596  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8597                           
  8598                           ; BSR set to: 0
  8599  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8600  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8601  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8602  00378E  0100               	movlb	0	; () banked
  8603  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8604  003792  0100               	movlb	0	; () banked
  8605  003794  5194               	movf	___flmul@a& (0+255),w,b
  8606  003796  0100               	movlb	0	; () banked
  8607  003798  0390               	mulwf	___flmul@b& (0+255),b
  8608  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8609  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8610                           
  8611                           ; BSR set to: 0
  8612  0037A2  0100               	movlb	0	; () banked
  8613  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8614  0037A6  0100               	movlb	0	; () banked
  8615  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8616  0037AA  0100               	movlb	0	; () banked
  8617  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8618  0037AE  0100               	movlb	0	; () banked
  8619  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8620  0037B2  0E00               	movlw	0
  8621  0037B4  0100               	movlb	0	; () banked
  8622  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8623  0037B8  0E00               	movlw	0
  8624  0037BA  0100               	movlb	0	; () banked
  8625  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8626                           
  8627                           ; BSR set to: 0
  8628  0037BE  0100               	movlb	0	; () banked
  8629  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8630  0037C2  0100               	movlb	0	; () banked
  8631  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8632  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8633  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8634  0037CE  0100               	movlb	0	; () banked
  8635  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8636  0037D2  0100               	movlb	0	; () banked
  8637  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8638  0037D6  0100               	movlb	0	; () banked
  8639  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8640  0037DA  0100               	movlb	0	; () banked
  8641  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8642  0037DE  0E00               	movlw	0
  8643  0037E0  0100               	movlb	0	; () banked
  8644  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8645  0037E4  0E00               	movlw	0
  8646  0037E6  0100               	movlb	0	; () banked
  8647  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8648                           
  8649                           ; BSR set to: 0
  8650  0037EA  0100               	movlb	0	; () banked
  8651  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8652  0037EE  0100               	movlb	0	; () banked
  8653  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8654  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8655  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8656                           
  8657                           ; BSR set to: 0
  8658  0037FA  0100               	movlb	0	; () banked
  8659  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8660  0037FE  0100               	movlb	0	; () banked
  8661  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8662  003802  0100               	movlb	0	; () banked
  8663  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8664  003806  0100               	movlb	0	; () banked
  8665  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8666  00380A  0E00               	movlw	0
  8667  00380C  0100               	movlb	0	; () banked
  8668  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8669  003810  0E00               	movlw	0
  8670  003812  0100               	movlb	0	; () banked
  8671  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8672  003816  0100               	movlb	0	; () banked
  8673  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8674  00381A  0100               	movlb	0	; () banked
  8675  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8676  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8677  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8678                           
  8679                           ; BSR set to: 0
  8680  003826  0100               	movlb	0	; () banked
  8681  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8682  00382A  0100               	movlb	0	; () banked
  8683  00382C  6F98               	movwf	??___flmul& (0+255),b
  8684  00382E  0100               	movlb	0	; () banked
  8685  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8686  003832  0100               	movlb	0	; () banked
  8687  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8688  003836  0100               	movlb	0	; () banked
  8689  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8690  00383A  0100               	movlb	0	; () banked
  8691  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8692  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8693  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8694  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8695  00384A  0100               	movlb	0	; () banked
  8696  00384C  6B98               	clrf	??___flmul& (0+255),b
  8697  00384E  0100               	movlb	0	; () banked
  8698  003850  5198               	movf	??___flmul& (0+255),w,b
  8699  003852  0100               	movlb	0	; () banked
  8700  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8701  003856  0100               	movlb	0	; () banked
  8702  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8703  00385A  0100               	movlb	0	; () banked
  8704  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8705  00385E  0100               	movlb	0	; () banked
  8706  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8707  003862  0100               	movlb	0	; () banked
  8708  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8709  003866  0100               	movlb	0	; () banked
  8710  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8711  00386A  0100               	movlb	0	; () banked
  8712  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8713                           
  8714                           ; BSR set to: 0
  8715  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8716  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8717  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8718  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8719  00387E  0E19               	movlw	25
  8720  003880  D006               	goto	u9060
  8721  003882                     u9065:
  8722  003882  0100               	movlb	0	; () banked
  8723  003884  90D8               	bcf	status,0,c
  8724  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8725  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8726  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8727  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8728  00388E                     u9060:
  8729  00388E  2EE8               	decfsz	wreg,f,c
  8730  003890  D7F8               	goto	u9065
  8731  003892  0100               	movlb	0	; () banked
  8732  003894  5198               	movf	??___flmul& (0+255),w,b
  8733  003896  0100               	movlb	0	; () banked
  8734  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8735  00389A  0100               	movlb	0	; () banked
  8736  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8737  00389E  0100               	movlb	0	; () banked
  8738  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8739  0038A2  0100               	movlb	0	; () banked
  8740  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8741  0038A6  0100               	movlb	0	; () banked
  8742  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8743  0038AA  0100               	movlb	0	; () banked
  8744  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8745  0038AE  0100               	movlb	0	; () banked
  8746  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8747                           
  8748                           ; BSR set to: 0
  8749  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8750  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8751  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8752  0038BE  0100               	movlb	0	; () banked
  8753  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8754                           
  8755                           ; BSR set to: 0
  8756  0038C2  0100               	movlb	0	; () banked
  8757  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8758  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8759  0038CA  0100               	movlb	0	; () banked
  8760  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8761  0038CE  0100               	movlb	0	; () banked
  8762  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8763  0038D2  0E00               	movlw	0
  8764  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8765  0038D6  0E82               	movlw	130
  8766  0038D8  0100               	movlb	0	; () banked
  8767  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8768  0038DC  0100               	movlb	0	; () banked
  8769  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8770  0038E0  0EFF               	movlw	255
  8771  0038E2  0100               	movlb	0	; () banked
  8772  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8773  0038E6  0100               	movlb	0	; () banked
  8774  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8775  0038EA  D015               	goto	l7036
  8776  0038EC                     l7030:
  8777                           
  8778                           ; BSR set to: 0
  8779  0038EC  0100               	movlb	0	; () banked
  8780  0038EE  90D8               	bcf	status,0,c
  8781  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8782  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8783  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8784  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8785                           
  8786                           ; BSR set to: 0
  8787  0038F8  0100               	movlb	0	; () banked
  8788  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8789  0038FC  D002               	goto	l1448
  8790                           
  8791                           ; BSR set to: 0
  8792  0038FE  0100               	movlb	0	; () banked
  8793  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8794  003902                     l1448:
  8795                           
  8796                           ; BSR set to: 0
  8797  003902  0100               	movlb	0	; () banked
  8798  003904  90D8               	bcf	status,0,c
  8799  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8800  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8801  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8802  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8803  00390E  0100               	movlb	0	; () banked
  8804  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8805  003912  A0D8               	btfss	status,0,c
  8806  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8807  003916                     l7036:
  8808                           
  8809                           ; BSR set to: 0
  8810  003916  0100               	movlb	0	; () banked
  8811  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8812  00391A  D7E8               	goto	l7030
  8813                           
  8814                           ; BSR set to: 0
  8815                           
  8816                           ; BSR set to: 0
  8817  00391C  0E00               	movlw	0
  8818  00391E  0100               	movlb	0	; () banked
  8819  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8820                           
  8821                           ; BSR set to: 0
  8822  003922  0100               	movlb	0	; () banked
  8823  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8824  003926  D024               	goto	l1450
  8825                           
  8826                           ; BSR set to: 0
  8827  003928  0EFF               	movlw	255
  8828  00392A  0100               	movlb	0	; () banked
  8829  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8830  00392E  0100               	movlb	0	; () banked
  8831  003930  6F98               	movwf	??___flmul& (0+255),b
  8832  003932  0EFF               	movlw	255
  8833  003934  0100               	movlb	0	; () banked
  8834  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8835  003938  0100               	movlb	0	; () banked
  8836  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8837  00393C  0EFF               	movlw	255
  8838  00393E  0100               	movlb	0	; () banked
  8839  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8840  003942  0100               	movlb	0	; () banked
  8841  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8842  003946  0E7F               	movlw	127
  8843  003948  0100               	movlb	0	; () banked
  8844  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8845  00394C  0100               	movlb	0	; () banked
  8846  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8847  003950  0100               	movlb	0	; () banked
  8848  003952  5198               	movf	??___flmul& (0+255),w,b
  8849  003954  0100               	movlb	0	; () banked
  8850  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8851  003958  0100               	movlb	0	; () banked
  8852  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8853  00395C  0100               	movlb	0	; () banked
  8854  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8855  003960  A4D8               	btfss	status,2,c
  8856  003962  D003               	goto	l7046
  8857                           
  8858                           ; BSR set to: 0
  8859                           
  8860                           ; BSR set to: 0
  8861  003964  0100               	movlb	0	; () banked
  8862  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8863  003968  D003               	goto	l1450
  8864  00396A                     l7046:
  8865                           
  8866                           ; BSR set to: 0
  8867  00396A  0E01               	movlw	1
  8868  00396C  0100               	movlb	0	; () banked
  8869  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8870  003970                     l1450:
  8871                           
  8872                           ; BSR set to: 0
  8873  003970  0100               	movlb	0	; () banked
  8874  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8875  003974  0100               	movlb	0	; () banked
  8876  003976  B4D8               	btfsc	status,2,c
  8877  003978  D023               	goto	l7056
  8878                           
  8879                           ; BSR set to: 0
  8880  00397A  0E01               	movlw	1
  8881  00397C  0100               	movlb	0	; () banked
  8882  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8883  003980  0E00               	movlw	0
  8884  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8885  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8886  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 0
  8889  003988  0100               	movlb	0	; () banked
  8890  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8891  00398C  D019               	goto	l7056
  8892                           
  8893                           ; BSR set to: 0
  8894  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8895  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8896  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8897  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8898  00399E  0100               	movlb	0	; () banked
  8899  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8900  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8901  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8902  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8903  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8904  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8905  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8906  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8907  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8908                           
  8909                           ; BSR set to: 0
  8910  0039BA  0100               	movlb	0	; () banked
  8911  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8912  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8913  0039C0                     l7056:
  8914                           
  8915                           ; BSR set to: 0
  8916  0039C0  0100               	movlb	0	; () banked
  8917  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8918  0039C4  D010               	goto	l7060
  8919  0039C6  0100               	movlb	0	; () banked
  8920  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8921  0039CA  E104               	bnz	u9140
  8922  0039CC  0100               	movlb	0	; () banked
  8923  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8924  0039D0  A0D8               	btfss	status,0,c
  8925  0039D2  D009               	goto	l7060
  8926  0039D4                     u9140:
  8927                           
  8928                           ; BSR set to: 0
  8929  0039D4  0E00               	movlw	0
  8930  0039D6  0100               	movlb	0	; () banked
  8931  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8932  0039DA  0E00               	movlw	0
  8933  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8934  0039DE  0E80               	movlw	128
  8935  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8936  0039E2  0E7F               	movlw	127
  8937  0039E4  D02B               	goto	L2
  8938  0039E6                     l7060:
  8939                           
  8940                           ; BSR set to: 0
  8941  0039E6  0100               	movlb	0	; () banked
  8942  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8943  0039EA  D007               	goto	l7062
  8944  0039EC  0100               	movlb	0	; () banked
  8945  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8946  0039F0  E111               	bnz	l1458
  8947  0039F2  0100               	movlb	0	; () banked
  8948  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8949  0039F6  B0D8               	btfsc	status,0,c
  8950  0039F8  D00D               	goto	l1458
  8951  0039FA                     l7062:
  8952                           
  8953                           ; BSR set to: 0
  8954  0039FA  0E00               	movlw	0
  8955  0039FC  0100               	movlb	0	; () banked
  8956  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8957  003A00  0E00               	movlw	0
  8958  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8959  003A04  0E00               	movlw	0
  8960  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8961  003A08  0E00               	movlw	0
  8962  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8963  003A0C  0E00               	movlw	0
  8964  003A0E  0100               	movlb	0	; () banked
  8965  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8966  003A12  D015               	goto	l7072
  8967  003A14                     l1458:
  8968                           
  8969                           ; BSR set to: 0
  8970  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8971                           
  8972                           ; BSR set to: 0
  8973  003A18  0EFF               	movlw	255
  8974  003A1A  0100               	movlb	0	; () banked
  8975  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8976  003A1E  0EFF               	movlw	255
  8977  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8978  003A22  0E7F               	movlw	127
  8979  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8980  003A26  0E00               	movlw	0
  8981  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8982                           
  8983                           ; BSR set to: 0
  8984  003A2A  0100               	movlb	0	; () banked
  8985  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8986  003A2E  D002               	goto	l7070
  8987                           
  8988                           ; BSR set to: 0
  8989  003A30  0100               	movlb	0	; () banked
  8990  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8991  003A34                     l7070:
  8992                           
  8993                           ; BSR set to: 0
  8994  003A34  0100               	movlb	0	; () banked
  8995  003A36  90D8               	bcf	status,0,c
  8996  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8997  003A3A  0100               	movlb	0	; () banked
  8998  003A3C                     L2:
  8999  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  9000  003A3E                     l7072:
  9001                           
  9002                           ; BSR set to: 0
  9003  003A3E  0100               	movlb	0	; () banked
  9004  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  9005  003A42  0100               	movlb	0	; () banked
  9006  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9007                           
  9008                           ; BSR set to: 0
  9009  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  9010  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  9011  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  9012  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  9013  003A56  0012               	return	
  9014  003A58                     __end_of___flmul:
  9015                           	opt stack 0
  9016                           tblptru	equ	0xFF8
  9017                           tblptrh	equ	0xFF7
  9018                           tblptrl	equ	0xFF6
  9019                           tablat	equ	0xFF5
  9020                           prodh	equ	0xFF4
  9021                           prodl	equ	0xFF3
  9022                           postinc0	equ	0xFEE
  9023                           wreg	equ	0xFE8
  9024                           postdec1	equ	0xFE5
  9025                           fsr1l	equ	0xFE1
  9026                           indf2	equ	0xFDF
  9027                           postinc2	equ	0xFDE
  9028                           postdec2	equ	0xFDD
  9029                           fsr2h	equ	0xFDA
  9030                           fsr2l	equ	0xFD9
  9031                           status	equ	0xFD8
  9032                           
  9033 ;; *************** function ___fladd *****************
  9034 ;; Defined at:
  9035 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  b               4   73[BANK0 ] unsigned char 
  9038 ;;  a               4   77[BANK0 ] unsigned char 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  grs             1   92[BANK0 ] unsigned char 
  9041 ;;  bexp            1   91[BANK0 ] unsigned char 
  9042 ;;  aexp            1   90[BANK0 ] unsigned char 
  9043 ;;  signs           1   89[BANK0 ] unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  4   73[BANK0 ] unsigned char 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9053 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;Total ram usage:       20 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    4
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_park_routine
  9064 ;;		_parallelo
  9065 ;;		_matematica
  9066 ;;		_asin
  9067 ;;		_atan
  9068 ;;		_cos
  9069 ;;		_eval_poly
  9070 ;;		_sin
  9071 ;;		___flsub
  9072 ;;		_floor
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text23
  9077  00310A                     __ptext23:
  9078                           	opt stack 0
  9079  00310A                     ___fladd:
  9080                           	opt stack 21
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;incstack = 0
  9084  00310A  0100               	movlb	0	; () banked
  9085  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9086  00310E  0B80               	andlw	128
  9087  003110  0100               	movlb	0	; () banked
  9088  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9089  003114  0100               	movlb	0	; () banked
  9090  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9091  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9092  00311A  0100               	movlb	0	; () banked
  9093  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9094                           
  9095                           ; BSR set to: 0
  9096  00311E  0100               	movlb	0	; () banked
  9097  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9098  003122  D002               	goto	l6752
  9099                           
  9100                           ; BSR set to: 0
  9101  003124  0100               	movlb	0	; () banked
  9102  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9103  003128                     l6752:
  9104                           
  9105                           ; BSR set to: 0
  9106  003128  0100               	movlb	0	; () banked
  9107  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9108  00312C  0100               	movlb	0	; () banked
  9109  00312E  B4D8               	btfsc	status,2,c
  9110  003130  D012               	goto	l6762
  9111                           
  9112                           ; BSR set to: 0
  9113  003132  0100               	movlb	0	; () banked
  9114  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9115  003136  A4D8               	btfss	status,2,c
  9116  003138  D009               	goto	l6758
  9117                           
  9118                           ; BSR set to: 0
  9119  00313A  0E00               	movlw	0
  9120  00313C  0100               	movlb	0	; () banked
  9121  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9122  003140  0E00               	movlw	0
  9123  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9124  003144  0E00               	movlw	0
  9125  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9126  003148  0E00               	movlw	0
  9127  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9128  00314C                     l6758:
  9129                           
  9130                           ; BSR set to: 0
  9131  00314C  0100               	movlb	0	; () banked
  9132  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9133                           
  9134                           ; BSR set to: 0
  9135  003150  0E00               	movlw	0
  9136  003152  0100               	movlb	0	; () banked
  9137  003154  D008               	goto	L3
  9138  003156                     l6762:
  9139                           
  9140                           ; BSR set to: 0
  9141  003156  0E00               	movlw	0
  9142  003158  0100               	movlb	0	; () banked
  9143  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9144  00315C  0E00               	movlw	0
  9145  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9146  003160  0E00               	movlw	0
  9147  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9148  003164  0E00               	movlw	0
  9149  003166                     L3:
  9150  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9151                           
  9152                           ; BSR set to: 0
  9153                           
  9154                           ; BSR set to: 0
  9155  003168  0100               	movlb	0	; () banked
  9156  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9157  00316C  0B80               	andlw	128
  9158  00316E  0100               	movlb	0	; () banked
  9159  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9160                           
  9161                           ; BSR set to: 0
  9162  003172  0100               	movlb	0	; () banked
  9163  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9164  003176  0100               	movlb	0	; () banked
  9165  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9166  00317A  B4D8               	btfsc	status,2,c
  9167  00317C  D002               	goto	l6770
  9168                           
  9169                           ; BSR set to: 0
  9170  00317E  0100               	movlb	0	; () banked
  9171  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9172  003182                     l6770:
  9173                           
  9174                           ; BSR set to: 0
  9175  003182  0100               	movlb	0	; () banked
  9176  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9177  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9178  003188  0100               	movlb	0	; () banked
  9179  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9180                           
  9181                           ; BSR set to: 0
  9182  00318C  0100               	movlb	0	; () banked
  9183  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9184  003190  D002               	goto	l6776
  9185                           
  9186                           ; BSR set to: 0
  9187  003192  0100               	movlb	0	; () banked
  9188  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9189  003196                     l6776:
  9190                           
  9191                           ; BSR set to: 0
  9192  003196  0100               	movlb	0	; () banked
  9193  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9194  00319A  0100               	movlb	0	; () banked
  9195  00319C  B4D8               	btfsc	status,2,c
  9196  00319E  D012               	goto	l6786
  9197                           
  9198                           ; BSR set to: 0
  9199  0031A0  0100               	movlb	0	; () banked
  9200  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9201  0031A4  A4D8               	btfss	status,2,c
  9202  0031A6  D009               	goto	l6782
  9203                           
  9204                           ; BSR set to: 0
  9205  0031A8  0E00               	movlw	0
  9206  0031AA  0100               	movlb	0	; () banked
  9207  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9208  0031AE  0E00               	movlw	0
  9209  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9210  0031B2  0E00               	movlw	0
  9211  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9212  0031B6  0E00               	movlw	0
  9213  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9214  0031BA                     l6782:
  9215                           
  9216                           ; BSR set to: 0
  9217  0031BA  0100               	movlb	0	; () banked
  9218  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9219                           
  9220                           ; BSR set to: 0
  9221  0031BE  0E00               	movlw	0
  9222  0031C0  0100               	movlb	0	; () banked
  9223  0031C2  D008               	goto	L4
  9224  0031C4                     l6786:
  9225                           
  9226                           ; BSR set to: 0
  9227  0031C4  0E00               	movlw	0
  9228  0031C6  0100               	movlb	0	; () banked
  9229  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9230  0031CA  0E00               	movlw	0
  9231  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9232  0031CE  0E00               	movlw	0
  9233  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9234  0031D2  0E00               	movlw	0
  9235  0031D4                     L4:
  9236  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9237                           
  9238                           ; BSR set to: 0
  9239                           
  9240                           ; BSR set to: 0
  9241  0031D6  0100               	movlb	0	; () banked
  9242  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9243  0031DA  0100               	movlb	0	; () banked
  9244  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9245  0031DE  B0D8               	btfsc	status,0,c
  9246  0031E0  D024               	goto	l6824
  9247                           
  9248                           ; BSR set to: 0
  9249  0031E2  0100               	movlb	0	; () banked
  9250  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9251  0031E6  D003               	goto	l6794
  9252                           
  9253                           ; BSR set to: 0
  9254  0031E8  0E80               	movlw	128
  9255  0031EA  0100               	movlb	0	; () banked
  9256  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9257  0031EE                     l6794:
  9258                           
  9259                           ; BSR set to: 0
  9260  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9261                           
  9262                           ; BSR set to: 0
  9263  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9264                           
  9265                           ; BSR set to: 0
  9266  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9267                           
  9268                           ; BSR set to: 0
  9269  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9270                           
  9271                           ; BSR set to: 0
  9272  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9273                           
  9274                           ; BSR set to: 0
  9275  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9276                           
  9277                           ; BSR set to: 0
  9278  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9279                           
  9280                           ; BSR set to: 0
  9281  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9282                           
  9283                           ; BSR set to: 0
  9284  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9285                           
  9286                           ; BSR set to: 0
  9287  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9288                           
  9289                           ; BSR set to: 0
  9290  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9291                           
  9292                           ; BSR set to: 0
  9293  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9294                           
  9295                           ; BSR set to: 0
  9296  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9297                           
  9298                           ; BSR set to: 0
  9299  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9300                           
  9301                           ; BSR set to: 0
  9302  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9303  00322A                     l6824:
  9304                           
  9305                           ; BSR set to: 0
  9306  00322A  0E00               	movlw	0
  9307  00322C  0100               	movlb	0	; () banked
  9308  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9309                           
  9310                           ; BSR set to: 0
  9311  003230  0100               	movlb	0	; () banked
  9312  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9313  003234  0100               	movlb	0	; () banked
  9314  003236  6FB1               	movwf	??___fladd& (0+255),b
  9315  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9316  00323A  0100               	movlb	0	; () banked
  9317  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9318  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9319  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9320  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9321  003244  0100               	movlb	0	; () banked
  9322  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9323  003248  0100               	movlb	0	; () banked
  9324  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9325  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9326  00324E  0100               	movlb	0	; () banked
  9327  003250  51B1               	movf	??___fladd& (0+255),w,b
  9328  003252  0100               	movlb	0	; () banked
  9329  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9330  003256  0100               	movlb	0	; () banked
  9331  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9332  00325A  0100               	movlb	0	; () banked
  9333  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9334  00325E  0100               	movlb	0	; () banked
  9335  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9336  003262  D03D               	goto	l1356
  9337  003264  0100               	movlb	0	; () banked
  9338  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9339  003268  E105               	bnz	u8680
  9340  00326A  0E1A               	movlw	26
  9341  00326C  0100               	movlb	0	; () banked
  9342  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9343  003270  A0D8               	btfss	status,0,c
  9344  003272  D035               	goto	l1356
  9345  003274                     u8680:
  9346                           
  9347                           ; BSR set to: 0
  9348  003274  0100               	movlb	0	; () banked
  9349  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9350  003278  0100               	movlb	0	; () banked
  9351  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9352  00327C  0100               	movlb	0	; () banked
  9353  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9354  003280  0100               	movlb	0	; () banked
  9355  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9356  003284  B4D8               	btfsc	status,2,c
  9357  003286  D002               	goto	u8690
  9358  003288  0E01               	movlw	1
  9359  00328A  D001               	goto	u8700
  9360  00328C                     u8690:
  9361  00328C  0E00               	movlw	0
  9362  00328E                     u8700:
  9363  00328E  0100               	movlb	0	; () banked
  9364  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9365                           
  9366                           ; BSR set to: 0
  9367  003292  0E00               	movlw	0
  9368  003294  0100               	movlb	0	; () banked
  9369  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9370  003298  0E00               	movlw	0
  9371  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9372  00329C  0E00               	movlw	0
  9373  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9374  0032A0  0E00               	movlw	0
  9375  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9376                           
  9377                           ; BSR set to: 0
  9378  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9379  0032A8  D020               	goto	l1355
  9380  0032AA                     l1357:
  9381                           
  9382                           ; BSR set to: 0
  9383  0032AA  0100               	movlb	0	; () banked
  9384  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9385  0032AE  D007               	goto	l6836
  9386                           
  9387                           ; BSR set to: 0
  9388  0032B0  0100               	movlb	0	; () banked
  9389  0032B2  90D8               	bcf	status,0,c
  9390  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9391  0032B6  0901               	iorlw	1
  9392  0032B8  0100               	movlb	0	; () banked
  9393  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9394  0032BC  D003               	goto	l6838
  9395  0032BE                     l6836:
  9396                           
  9397                           ; BSR set to: 0
  9398  0032BE  0100               	movlb	0	; () banked
  9399  0032C0  90D8               	bcf	status,0,c
  9400  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9401  0032C4                     l6838:
  9402                           
  9403                           ; BSR set to: 0
  9404  0032C4  0100               	movlb	0	; () banked
  9405  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9406  0032C8  D002               	goto	l6842
  9407                           
  9408                           ; BSR set to: 0
  9409  0032CA  0100               	movlb	0	; () banked
  9410  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9411  0032CE                     l6842:
  9412                           
  9413                           ; BSR set to: 0
  9414  0032CE  0100               	movlb	0	; () banked
  9415  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9416  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9417  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9418  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9419  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9420                           
  9421                           ; BSR set to: 0
  9422  0032DA  0100               	movlb	0	; () banked
  9423  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9424  0032DE                     l1356:
  9425                           
  9426                           ; BSR set to: 0
  9427  0032DE  0100               	movlb	0	; () banked
  9428  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9429  0032E2  0100               	movlb	0	; () banked
  9430  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9431  0032E6  A0D8               	btfss	status,0,c
  9432  0032E8  D7E0               	goto	l1357
  9433  0032EA                     l1355:
  9434                           
  9435                           ; BSR set to: 0
  9436  0032EA  0100               	movlb	0	; () banked
  9437  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9438  0032EE  D03F               	goto	l6870
  9439                           
  9440                           ; BSR set to: 0
  9441  0032F0  0100               	movlb	0	; () banked
  9442  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9443  0032F4  0100               	movlb	0	; () banked
  9444  0032F6  A4D8               	btfss	status,2,c
  9445  0032F8  D00A               	goto	l6852
  9446                           
  9447                           ; BSR set to: 0
  9448  0032FA  0E00               	movlw	0
  9449  0032FC  0100               	movlb	0	; () banked
  9450  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9451  003300  0E00               	movlw	0
  9452  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9453  003304  0E00               	movlw	0
  9454  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9455  003308  0E00               	movlw	0
  9456  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9457                           
  9458                           ; BSR set to: 0
  9459  00330C  0012               	return	
  9460  00330E                     l6852:
  9461                           
  9462                           ; BSR set to: 0
  9463  00330E  0100               	movlb	0	; () banked
  9464  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9465  003312  0100               	movlb	0	; () banked
  9466  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9467  003316  0100               	movlb	0	; () banked
  9468  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9469  00331A  0100               	movlb	0	; () banked
  9470  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9471  00331E  0100               	movlb	0	; () banked
  9472  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9473  003322  0100               	movlb	0	; () banked
  9474  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9475  003326  0100               	movlb	0	; () banked
  9476  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9477  00332A  0100               	movlb	0	; () banked
  9478  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9479                           
  9480                           ; BSR set to: 0
  9481  00332E  0100               	movlb	0	; () banked
  9482  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9483  003332  D0CC               	goto	l6906
  9484                           
  9485                           ; BSR set to: 0
  9486  003334  0100               	movlb	0	; () banked
  9487  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9488  003338  D009               	goto	l6860
  9489                           
  9490                           ; BSR set to: 0
  9491  00333A  0100               	movlb	0	; () banked
  9492  00333C  90D8               	bcf	status,0,c
  9493  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9494  003340  0100               	movlb	0	; () banked
  9495  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9496  003344  0901               	iorlw	1
  9497  003346  0100               	movlb	0	; () banked
  9498  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9499  00334A  D003               	goto	l6862
  9500  00334C                     l6860:
  9501                           
  9502                           ; BSR set to: 0
  9503  00334C  0100               	movlb	0	; () banked
  9504  00334E  90D8               	bcf	status,0,c
  9505  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9506  003352                     l6862:
  9507                           
  9508                           ; BSR set to: 0
  9509  003352  0100               	movlb	0	; () banked
  9510  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9511  003356  D002               	goto	l6866
  9512                           
  9513                           ; BSR set to: 0
  9514  003358  0100               	movlb	0	; () banked
  9515  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9516  00335C                     l6866:
  9517                           
  9518                           ; BSR set to: 0
  9519  00335C  0100               	movlb	0	; () banked
  9520  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9521  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9522  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9523  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9524  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9525                           
  9526                           ; BSR set to: 0
  9527  003368  0100               	movlb	0	; () banked
  9528  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9529                           
  9530                           ; BSR set to: 0
  9531  00336C  D0AF               	goto	l6906
  9532  00336E                     l6870:
  9533                           
  9534                           ; BSR set to: 0
  9535  00336E  0100               	movlb	0	; () banked
  9536  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9537  003372  0100               	movlb	0	; () banked
  9538  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9539  003376  0100               	movlb	0	; () banked
  9540  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9541  00337A  0100               	movlb	0	; () banked
  9542  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9543  00337E  0100               	movlb	0	; () banked
  9544  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9545  003382  0100               	movlb	0	; () banked
  9546  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9547  003386  0100               	movlb	0	; () banked
  9548  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9549  00338A  0A80               	xorlw	128
  9550  00338C  0100               	movlb	0	; () banked
  9551  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9552  003390  0100               	movlb	0	; () banked
  9553  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9554  003394  0A80               	xorlw	128
  9555  003396  0100               	movlb	0	; () banked
  9556  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9557  00339A  B0D8               	btfsc	status,0,c
  9558  00339C  D050               	goto	l6880
  9559                           
  9560                           ; BSR set to: 0
  9561  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9562  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9563  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9564  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9565  0033AE  0100               	movlb	0	; () banked
  9566  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9567  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9568  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9569  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9570  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9571  0033BA  0E00               	movlw	0
  9572  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9573  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9574  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9575  0033C2  0100               	movlb	0	; () banked
  9576  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9577  0033C6  0100               	movlb	0	; () banked
  9578  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9579  0033CA  0100               	movlb	0	; () banked
  9580  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9581  0033CE  0100               	movlb	0	; () banked
  9582  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9583  0033D2  0100               	movlb	0	; () banked
  9584  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9585  0033D6  0100               	movlb	0	; () banked
  9586  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9587  0033DA  0100               	movlb	0	; () banked
  9588  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9589  0033DE  0100               	movlb	0	; () banked
  9590  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9591  0033E2  0100               	movlb	0	; () banked
  9592  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9593  0033E6  0100               	movlb	0	; () banked
  9594  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9595  0033EA  0100               	movlb	0	; () banked
  9596  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9597  0033EE  0100               	movlb	0	; () banked
  9598  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9599  0033F2  0EFF               	movlw	255
  9600  0033F4  0100               	movlb	0	; () banked
  9601  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9602  0033F8  0100               	movlb	0	; () banked
  9603  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9604  0033FC  0EFF               	movlw	255
  9605  0033FE  0100               	movlb	0	; () banked
  9606  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9607  003402  0100               	movlb	0	; () banked
  9608  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9609  003406  0EFF               	movlw	255
  9610  003408  0100               	movlb	0	; () banked
  9611  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9612  00340C  0100               	movlb	0	; () banked
  9613  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9614  003410  0EFF               	movlw	255
  9615  003412  0100               	movlb	0	; () banked
  9616  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9617  003416  0100               	movlb	0	; () banked
  9618  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9619  00341A  0E80               	movlw	128
  9620  00341C  0100               	movlb	0	; () banked
  9621  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9622                           
  9623                           ; BSR set to: 0
  9624  003420  0100               	movlb	0	; () banked
  9625  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9626                           
  9627                           ; BSR set to: 0
  9628  003424  0100               	movlb	0	; () banked
  9629  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9630  003428  0100               	movlb	0	; () banked
  9631  00342A  A4D8               	btfss	status,2,c
  9632  00342C  D018               	goto	l1372
  9633                           
  9634                           ; BSR set to: 0
  9635  00342E  0E01               	movlw	1
  9636  003430  0100               	movlb	0	; () banked
  9637  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9638  003434  0E00               	movlw	0
  9639  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9640  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9641  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9642                           
  9643                           ; BSR set to: 0
  9644  00343C  D010               	goto	l1372
  9645  00343E                     l6880:
  9646                           
  9647                           ; BSR set to: 0
  9648  00343E  0100               	movlb	0	; () banked
  9649  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9650  003442  0100               	movlb	0	; () banked
  9651  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9652  003446  0100               	movlb	0	; () banked
  9653  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9654  00344A  0100               	movlb	0	; () banked
  9655  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9656  00344E  0100               	movlb	0	; () banked
  9657  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9658  003452  0100               	movlb	0	; () banked
  9659  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9660  003456  0100               	movlb	0	; () banked
  9661  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9662  00345A  0100               	movlb	0	; () banked
  9663  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9664  00345E                     l1372:
  9665                           
  9666                           ; BSR set to: 0
  9667  00345E  0100               	movlb	0	; () banked
  9668  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9669  003462  0100               	movlb	0	; () banked
  9670  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9671  003466  0100               	movlb	0	; () banked
  9672  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9673  00346A  0100               	movlb	0	; () banked
  9674  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9675  00346E  A4D8               	btfss	status,2,c
  9676  003470  D02A               	goto	l6904
  9677                           
  9678                           ; BSR set to: 0
  9679  003472  0100               	movlb	0	; () banked
  9680  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9681  003476  0100               	movlb	0	; () banked
  9682  003478  A4D8               	btfss	status,2,c
  9683  00347A  D025               	goto	l6904
  9684                           
  9685                           ; BSR set to: 0
  9686  00347C  0E00               	movlw	0
  9687  00347E  0100               	movlb	0	; () banked
  9688  003480  6FA9               	movwf	?___fladd& (0+255),b
  9689  003482  0E00               	movlw	0
  9690  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9691  003486  0E00               	movlw	0
  9692  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9693  00348A  0E00               	movlw	0
  9694  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9695                           
  9696                           ; BSR set to: 0
  9697  00348E  0012               	return	
  9698  003490                     l6888:
  9699                           
  9700                           ; BSR set to: 0
  9701  003490  0100               	movlb	0	; () banked
  9702  003492  90D8               	bcf	status,0,c
  9703  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9704  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9705  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9706  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 0
  9709  00349C  0100               	movlb	0	; () banked
  9710  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9711  0034A0  D002               	goto	l6894
  9712                           
  9713                           ; BSR set to: 0
  9714  0034A2  0100               	movlb	0	; () banked
  9715  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9716  0034A6                     l6894:
  9717                           
  9718                           ; BSR set to: 0
  9719  0034A6  0100               	movlb	0	; () banked
  9720  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9721  0034AA  D003               	goto	l6898
  9722                           
  9723                           ; BSR set to: 0
  9724  0034AC  80D8               	bsf	status,0,c
  9725  0034AE  0100               	movlb	0	; () banked
  9726  0034B0  D002               	goto	L5
  9727  0034B2                     l6898:
  9728                           
  9729                           ; BSR set to: 0
  9730  0034B2  0100               	movlb	0	; () banked
  9731  0034B4  90D8               	bcf	status,0,c
  9732  0034B6                     L5:
  9733  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9734                           
  9735                           ; BSR set to: 0
  9736                           
  9737                           ; BSR set to: 0
  9738  0034B8  0100               	movlb	0	; () banked
  9739  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9740  0034BC  0100               	movlb	0	; () banked
  9741  0034BE  B4D8               	btfsc	status,2,c
  9742  0034C0  D002               	goto	l6904
  9743                           
  9744                           ; BSR set to: 0
  9745  0034C2  0100               	movlb	0	; () banked
  9746  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9747  0034C6                     l6904:
  9748                           
  9749                           ; BSR set to: 0
  9750  0034C6  0100               	movlb	0	; () banked
  9751  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9752  0034CA  D7E2               	goto	l6888
  9753  0034CC                     l6906:
  9754                           
  9755                           ; BSR set to: 0
  9756  0034CC  0E00               	movlw	0
  9757  0034CE  0100               	movlb	0	; () banked
  9758  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9759                           
  9760                           ; BSR set to: 0
  9761  0034D2  0100               	movlb	0	; () banked
  9762  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9763  0034D6  D00D               	goto	l1381
  9764                           
  9765                           ; BSR set to: 0
  9766  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9767  0034DC  0E7F               	movlw	127
  9768  0034DE  0100               	movlb	0	; () banked
  9769  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9770  0034E2  A4D8               	btfss	status,2,c
  9771  0034E4  D003               	goto	l6914
  9772                           
  9773                           ; BSR set to: 0
  9774                           
  9775                           ; BSR set to: 0
  9776  0034E6  0100               	movlb	0	; () banked
  9777  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9778  0034EA  D003               	goto	l1381
  9779  0034EC                     l6914:
  9780                           
  9781                           ; BSR set to: 0
  9782  0034EC  0E01               	movlw	1
  9783  0034EE  0100               	movlb	0	; () banked
  9784  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9785  0034F2                     l1381:
  9786                           
  9787                           ; BSR set to: 0
  9788  0034F2  0100               	movlb	0	; () banked
  9789  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9790  0034F6  0100               	movlb	0	; () banked
  9791  0034F8  B4D8               	btfsc	status,2,c
  9792  0034FA  D026               	goto	l6924
  9793                           
  9794                           ; BSR set to: 0
  9795  0034FC  0E01               	movlw	1
  9796  0034FE  0100               	movlb	0	; () banked
  9797  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9798  003502  0E00               	movlw	0
  9799  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9800  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9801  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9802                           
  9803                           ; BSR set to: 0
  9804  00350A  0100               	movlb	0	; () banked
  9805  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9806  00350E  D01C               	goto	l6924
  9807                           
  9808                           ; BSR set to: 0
  9809  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9810  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9811  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9812  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9813  003520  0100               	movlb	0	; () banked
  9814  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9815  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9816  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9817  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9818  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9819  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9820  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9821  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9822  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9823  00353C  0100               	movlb	0	; () banked
  9824  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9825  003540  B4D8               	btfsc	status,2,c
  9826  003542  D002               	goto	l6924
  9827                           
  9828                           ; BSR set to: 0
  9829  003544  0100               	movlb	0	; () banked
  9830  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9831  003548                     l6924:
  9832                           
  9833                           ; BSR set to: 0
  9834  003548  0100               	movlb	0	; () banked
  9835  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9836  00354C  B4D8               	btfsc	status,2,c
  9837  00354E  D005               	goto	l6928
  9838                           
  9839                           ; BSR set to: 0
  9840  003550  0100               	movlb	0	; () banked
  9841  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9842  003554  0100               	movlb	0	; () banked
  9843  003556  A4D8               	btfss	status,2,c
  9844  003558  D011               	goto	l6932
  9845  00355A                     l6928:
  9846                           
  9847                           ; BSR set to: 0
  9848  00355A  0E00               	movlw	0
  9849  00355C  0100               	movlb	0	; () banked
  9850  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9851  003560  0E00               	movlw	0
  9852  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9853  003564  0E00               	movlw	0
  9854  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9855  003568  0E00               	movlw	0
  9856  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9857  00356C  0100               	movlb	0	; () banked
  9858  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9859  003570  0100               	movlb	0	; () banked
  9860  003572  A4D8               	btfss	status,2,c
  9861  003574  D003               	goto	l6932
  9862                           
  9863                           ; BSR set to: 0
  9864  003576  0E00               	movlw	0
  9865  003578  0100               	movlb	0	; () banked
  9866  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9867  00357C                     l6932:
  9868                           
  9869                           ; BSR set to: 0
  9870  00357C  0100               	movlb	0	; () banked
  9871  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9872  003580  D003               	goto	l6936
  9873                           
  9874                           ; BSR set to: 0
  9875  003582  0100               	movlb	0	; () banked
  9876  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9877  003586  D002               	goto	l6938
  9878  003588                     l6936:
  9879                           
  9880                           ; BSR set to: 0
  9881  003588  0100               	movlb	0	; () banked
  9882  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9883  00358C                     l6938:
  9884                           
  9885                           ; BSR set to: 0
  9886  00358C  0100               	movlb	0	; () banked
  9887  00358E  90D8               	bcf	status,0,c
  9888  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9889  003592  0100               	movlb	0	; () banked
  9890  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9891                           
  9892                           ; BSR set to: 0
  9893  003596  0100               	movlb	0	; () banked
  9894  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9895  00359A  D002               	goto	l6944
  9896                           
  9897                           ; BSR set to: 0
  9898  00359C  0100               	movlb	0	; () banked
  9899  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9900  0035A0                     l6944:
  9901                           
  9902                           ; BSR set to: 0
  9903  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9904  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9905  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9906  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9907  0035B0  0012               	return	
  9908  0035B2                     __end_of___fladd:
  9909                           	opt stack 0
  9910                           tblptru	equ	0xFF8
  9911                           tblptrh	equ	0xFF7
  9912                           tblptrl	equ	0xFF6
  9913                           tablat	equ	0xFF5
  9914                           prodh	equ	0xFF4
  9915                           prodl	equ	0xFF3
  9916                           postinc0	equ	0xFEE
  9917                           wreg	equ	0xFE8
  9918                           postdec1	equ	0xFE5
  9919                           fsr1l	equ	0xFE1
  9920                           indf2	equ	0xFDF
  9921                           postinc2	equ	0xFDE
  9922                           postdec2	equ	0xFDD
  9923                           fsr2h	equ	0xFDA
  9924                           fsr2l	equ	0xFD9
  9925                           status	equ	0xFD8
  9926                           
  9927 ;; *************** function ___flge *****************
  9928 ;; Defined at:
  9929 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;  ff1             4  101[BANK0 ] unsigned char 
  9932 ;;  ff2             4  105[BANK0 ] unsigned char 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;		None               void
  9937 ;; Registers used:
  9938 ;;		wreg, status,2, status,0
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9944 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;Total ram usage:       12 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:    4
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_parallelo
  9955 ;;		_asin
  9956 ;;		_atan
  9957 ;;		_cos
  9958 ;;		_sin
  9959 ;;		_floor
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           	psect	text24
  9964  005A4C                     __ptext24:
  9965                           	opt stack 0
  9966  005A4C                     ___flge:
  9967                           	opt stack 22
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;incstack = 0
  9971  005A4C  0E00               	movlw	0
  9972  005A4E  0100               	movlb	0	; () banked
  9973  005A50  15C5               	andwf	___flge@ff1& (0+255),w,b
  9974  005A52  0100               	movlb	0	; () banked
  9975  005A54  6FCD               	movwf	??___flge& (0+255),b
  9976  005A56  0E00               	movlw	0
  9977  005A58  0100               	movlb	0	; () banked
  9978  005A5A  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9979  005A5C  0100               	movlb	0	; () banked
  9980  005A5E  6FCE               	movwf	(??___flge+1)& (0+255),b
  9981  005A60  0E80               	movlw	128
  9982  005A62  0100               	movlb	0	; () banked
  9983  005A64  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9984  005A66  0100               	movlb	0	; () banked
  9985  005A68  6FCF               	movwf	(??___flge+2)& (0+255),b
  9986  005A6A  0E7F               	movlw	127
  9987  005A6C  0100               	movlb	0	; () banked
  9988  005A6E  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9989  005A70  0100               	movlb	0	; () banked
  9990  005A72  6FD0               	movwf	(??___flge+3)& (0+255),b
  9991  005A74  0100               	movlb	0	; () banked
  9992  005A76  51CD               	movf	??___flge& (0+255),w,b
  9993  005A78  0100               	movlb	0	; () banked
  9994  005A7A  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9995  005A7C  0100               	movlb	0	; () banked
  9996  005A7E  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9997  005A80  0100               	movlb	0	; () banked
  9998  005A82  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9999  005A84  A4D8               	btfss	status,2,c
 10000  005A86  D009               	goto	l7082
 10001                           
 10002                           ; BSR set to: 0
 10003  005A88  0E00               	movlw	0
 10004  005A8A  0100               	movlb	0	; () banked
 10005  005A8C  6FC5               	movwf	___flge@ff1& (0+255),b
 10006  005A8E  0E00               	movlw	0
 10007  005A90  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10008  005A92  0E00               	movlw	0
 10009  005A94  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10010  005A96  0E00               	movlw	0
 10011  005A98  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10012  005A9A                     l7082:
 10013                           
 10014                           ; BSR set to: 0
 10015  005A9A  0E00               	movlw	0
 10016  005A9C  0100               	movlb	0	; () banked
 10017  005A9E  15C9               	andwf	___flge@ff2& (0+255),w,b
 10018  005AA0  0100               	movlb	0	; () banked
 10019  005AA2  6FCD               	movwf	??___flge& (0+255),b
 10020  005AA4  0E00               	movlw	0
 10021  005AA6  0100               	movlb	0	; () banked
 10022  005AA8  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
 10023  005AAA  0100               	movlb	0	; () banked
 10024  005AAC  6FCE               	movwf	(??___flge+1)& (0+255),b
 10025  005AAE  0E80               	movlw	128
 10026  005AB0  0100               	movlb	0	; () banked
 10027  005AB2  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
 10028  005AB4  0100               	movlb	0	; () banked
 10029  005AB6  6FCF               	movwf	(??___flge+2)& (0+255),b
 10030  005AB8  0E7F               	movlw	127
 10031  005ABA  0100               	movlb	0	; () banked
 10032  005ABC  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10033  005ABE  0100               	movlb	0	; () banked
 10034  005AC0  6FD0               	movwf	(??___flge+3)& (0+255),b
 10035  005AC2  0100               	movlb	0	; () banked
 10036  005AC4  51CD               	movf	??___flge& (0+255),w,b
 10037  005AC6  0100               	movlb	0	; () banked
 10038  005AC8  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10039  005ACA  0100               	movlb	0	; () banked
 10040  005ACC  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10041  005ACE  0100               	movlb	0	; () banked
 10042  005AD0  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10043  005AD2  A4D8               	btfss	status,2,c
 10044  005AD4  D009               	goto	l7086
 10045                           
 10046                           ; BSR set to: 0
 10047  005AD6  0E00               	movlw	0
 10048  005AD8  0100               	movlb	0	; () banked
 10049  005ADA  6FC9               	movwf	___flge@ff2& (0+255),b
 10050  005ADC  0E00               	movlw	0
 10051  005ADE  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10052  005AE0  0E00               	movlw	0
 10053  005AE2  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10054  005AE4  0E00               	movlw	0
 10055  005AE6  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10056  005AE8                     l7086:
 10057                           
 10058                           ; BSR set to: 0
 10059  005AE8  0100               	movlb	0	; () banked
 10060  005AEA  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10061  005AEC  D026               	goto	l7090
 10062                           
 10063                           ; BSR set to: 0
 10064  005AEE  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10065  005AF2  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10066  005AF6  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10067  005AFA  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10068  005AFE  0100               	movlb	0	; () banked
 10069  005B00  1FCD               	comf	??___flge& (0+255),f,b
 10070  005B02  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10071  005B04  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10072  005B06  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10073  005B08  2BCD               	incf	??___flge& (0+255),f,b
 10074  005B0A  0E00               	movlw	0
 10075  005B0C  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10076  005B0E  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10077  005B10  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10078  005B12  0E00               	movlw	0
 10079  005B14  0100               	movlb	0	; () banked
 10080  005B16  25CD               	addwf	??___flge& (0+255),w,b
 10081  005B18  0100               	movlb	0	; () banked
 10082  005B1A  6FC5               	movwf	___flge@ff1& (0+255),b
 10083  005B1C  0E00               	movlw	0
 10084  005B1E  0100               	movlb	0	; () banked
 10085  005B20  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10086  005B22  0100               	movlb	0	; () banked
 10087  005B24  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10088  005B26  0E00               	movlw	0
 10089  005B28  0100               	movlb	0	; () banked
 10090  005B2A  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10091  005B2C  0100               	movlb	0	; () banked
 10092  005B2E  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10093  005B30  0E80               	movlw	128
 10094  005B32  0100               	movlb	0	; () banked
 10095  005B34  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10096  005B36  0100               	movlb	0	; () banked
 10097  005B38  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10098  005B3A                     l7090:
 10099                           
 10100                           ; BSR set to: 0
 10101  005B3A  0100               	movlb	0	; () banked
 10102  005B3C  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10103  005B3E  D026               	goto	l1103
 10104                           
 10105                           ; BSR set to: 0
 10106  005B40  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10107  005B44  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10108  005B48  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10109  005B4C  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10110  005B50  0100               	movlb	0	; () banked
 10111  005B52  1FCD               	comf	??___flge& (0+255),f,b
 10112  005B54  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10113  005B56  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10114  005B58  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10115  005B5A  2BCD               	incf	??___flge& (0+255),f,b
 10116  005B5C  0E00               	movlw	0
 10117  005B5E  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10118  005B60  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10119  005B62  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10120  005B64  0E00               	movlw	0
 10121  005B66  0100               	movlb	0	; () banked
 10122  005B68  25CD               	addwf	??___flge& (0+255),w,b
 10123  005B6A  0100               	movlb	0	; () banked
 10124  005B6C  6FC9               	movwf	___flge@ff2& (0+255),b
 10125  005B6E  0E00               	movlw	0
 10126  005B70  0100               	movlb	0	; () banked
 10127  005B72  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10128  005B74  0100               	movlb	0	; () banked
 10129  005B76  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10130  005B78  0E00               	movlw	0
 10131  005B7A  0100               	movlb	0	; () banked
 10132  005B7C  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10133  005B7E  0100               	movlb	0	; () banked
 10134  005B80  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10135  005B82  0E80               	movlw	128
 10136  005B84  0100               	movlb	0	; () banked
 10137  005B86  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10138  005B88  0100               	movlb	0	; () banked
 10139  005B8A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10140  005B8C                     l1103:
 10141                           
 10142                           ; BSR set to: 0
 10143  005B8C  0E00               	movlw	0
 10144  005B8E  0100               	movlb	0	; () banked
 10145  005B90  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10146  005B92  0E00               	movlw	0
 10147  005B94  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10148  005B96  0E00               	movlw	0
 10149  005B98  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10150  005B9A  0E80               	movlw	128
 10151  005B9C  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10152  005B9E  0E00               	movlw	0
 10153  005BA0  0100               	movlb	0	; () banked
 10154  005BA2  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10155  005BA4  0E00               	movlw	0
 10156  005BA6  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10157  005BA8  0E00               	movlw	0
 10158  005BAA  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10159  005BAC  0E80               	movlw	128
 10160  005BAE  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10161  005BB0  0100               	movlb	0	; () banked
 10162  005BB2  51C9               	movf	___flge@ff2& (0+255),w,b
 10163  005BB4  0100               	movlb	0	; () banked
 10164  005BB6  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10165  005BB8  0100               	movlb	0	; () banked
 10166  005BBA  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10167  005BBC  0100               	movlb	0	; () banked
 10168  005BBE  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10169  005BC0  0100               	movlb	0	; () banked
 10170  005BC2  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10171  005BC4  0100               	movlb	0	; () banked
 10172  005BC6  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10173  005BC8  0100               	movlb	0	; () banked
 10174  005BCA  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10175  005BCC  0100               	movlb	0	; () banked
 10176  005BCE  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10177  005BD0  B0D8               	btfsc	status,0,c
 10178  005BD2  D002               	goto	l7096
 10179                           
 10180                           ; BSR set to: 0
 10181  005BD4  90D8               	bcf	status,0,c
 10182  005BD6  0012               	return	
 10183  005BD8                     l7096:
 10184                           
 10185                           ; BSR set to: 0
 10186  005BD8  80D8               	bsf	status,0,c
 10187                           
 10188                           ; BSR set to: 0
 10189  005BDA  0012               	return	
 10190  005BDC                     __end_of___flge:
 10191                           	opt stack 0
 10192                           tblptru	equ	0xFF8
 10193                           tblptrh	equ	0xFF7
 10194                           tblptrl	equ	0xFF6
 10195                           tablat	equ	0xFF5
 10196                           prodh	equ	0xFF4
 10197                           prodl	equ	0xFF3
 10198                           postinc0	equ	0xFEE
 10199                           wreg	equ	0xFE8
 10200                           postdec1	equ	0xFE5
 10201                           fsr1l	equ	0xFE1
 10202                           indf2	equ	0xFDF
 10203                           postinc2	equ	0xFDE
 10204                           postdec2	equ	0xFDD
 10205                           fsr2h	equ	0xFDA
 10206                           fsr2l	equ	0xFD9
 10207                           status	equ	0xFD8
 10208                           
 10209 ;; *************** function ___fldiv *****************
 10210 ;; Defined at:
 10211 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  b               4   23[BANK0 ] unsigned char 
 10214 ;;  a               4   27[BANK0 ] unsigned char 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  grs             4   42[BANK0 ] unsigned long 
 10217 ;;  rem             4   36[BANK0 ] unsigned long 
 10218 ;;  new_exp         2   40[BANK0 ] int 
 10219 ;;  aexp            1   47[BANK0 ] unsigned char 
 10220 ;;  bexp            1   46[BANK0 ] unsigned char 
 10221 ;;  sign            1   35[BANK0 ] unsigned char 
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  4   23[BANK0 ] unsigned char 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;Total ram usage:       25 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    4
 10238 ;; This function calls:
 10239 ;;		Nothing
 10240 ;; This function is called by:
 10241 ;;		_parallelo
 10242 ;;		_matematica
 10243 ;;		_asin
 10244 ;;		_atan
 10245 ;;		_sin
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text25
 10250  00429A                     __ptext25:
 10251                           	opt stack 0
 10252  00429A                     ___fldiv:
 10253                           	opt stack 22
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;incstack = 0
 10257  00429A  0100               	movlb	0	; () banked
 10258  00429C  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10259  00429E  0B80               	andlw	128
 10260  0042A0  0100               	movlb	0	; () banked
 10261  0042A2  6F83               	movwf	___fldiv@sign& (0+255),b
 10262  0042A4  0100               	movlb	0	; () banked
 10263  0042A6  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10264  0042A8  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10265  0042AA  0100               	movlb	0	; () banked
 10266  0042AC  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10267                           
 10268                           ; BSR set to: 0
 10269  0042AE  0100               	movlb	0	; () banked
 10270  0042B0  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10271  0042B2  D002               	goto	l7216
 10272                           
 10273                           ; BSR set to: 0
 10274  0042B4  0100               	movlb	0	; () banked
 10275  0042B6  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10276  0042B8                     l7216:
 10277                           
 10278                           ; BSR set to: 0
 10279  0042B8  0100               	movlb	0	; () banked
 10280  0042BA  518E               	movf	___fldiv@bexp& (0+255),w,b
 10281  0042BC  0100               	movlb	0	; () banked
 10282  0042BE  B4D8               	btfsc	status,2,c
 10283  0042C0  D012               	goto	l7226
 10284                           
 10285                           ; BSR set to: 0
 10286  0042C2  0100               	movlb	0	; () banked
 10287  0042C4  298E               	incf	___fldiv@bexp& (0+255),w,b
 10288  0042C6  A4D8               	btfss	status,2,c
 10289  0042C8  D009               	goto	l7222
 10290                           
 10291                           ; BSR set to: 0
 10292  0042CA  0E00               	movlw	0
 10293  0042CC  0100               	movlb	0	; () banked
 10294  0042CE  6F77               	movwf	___fldiv@b& (0+255),b
 10295  0042D0  0E00               	movlw	0
 10296  0042D2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10297  0042D4  0E00               	movlw	0
 10298  0042D6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10299  0042D8  0E00               	movlw	0
 10300  0042DA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10301  0042DC                     l7222:
 10302                           
 10303                           ; BSR set to: 0
 10304  0042DC  0100               	movlb	0	; () banked
 10305  0042DE  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10306                           
 10307                           ; BSR set to: 0
 10308  0042E0  0E00               	movlw	0
 10309  0042E2  0100               	movlb	0	; () banked
 10310  0042E4  D008               	goto	L6
 10311  0042E6                     l7226:
 10312                           
 10313                           ; BSR set to: 0
 10314  0042E6  0E00               	movlw	0
 10315  0042E8  0100               	movlb	0	; () banked
 10316  0042EA  6F77               	movwf	___fldiv@b& (0+255),b
 10317  0042EC  0E00               	movlw	0
 10318  0042EE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10319  0042F0  0E00               	movlw	0
 10320  0042F2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10321  0042F4  0E00               	movlw	0
 10322  0042F6                     L6:
 10323  0042F6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10324                           
 10325                           ; BSR set to: 0
 10326                           
 10327                           ; BSR set to: 0
 10328  0042F8  0100               	movlb	0	; () banked
 10329  0042FA  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10330  0042FC  0B80               	andlw	128
 10331  0042FE  0100               	movlb	0	; () banked
 10332  004300  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10333                           
 10334                           ; BSR set to: 0
 10335  004302  0100               	movlb	0	; () banked
 10336  004304  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10337  004306  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10338  004308  0100               	movlb	0	; () banked
 10339  00430A  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10340                           
 10341                           ; BSR set to: 0
 10342  00430C  0100               	movlb	0	; () banked
 10343  00430E  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10344  004310  D002               	goto	l7236
 10345                           
 10346                           ; BSR set to: 0
 10347  004312  0100               	movlb	0	; () banked
 10348  004314  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10349  004316                     l7236:
 10350                           
 10351                           ; BSR set to: 0
 10352  004316  0100               	movlb	0	; () banked
 10353  004318  518F               	movf	___fldiv@aexp& (0+255),w,b
 10354  00431A  0100               	movlb	0	; () banked
 10355  00431C  B4D8               	btfsc	status,2,c
 10356  00431E  D012               	goto	l7246
 10357                           
 10358                           ; BSR set to: 0
 10359  004320  0100               	movlb	0	; () banked
 10360  004322  298F               	incf	___fldiv@aexp& (0+255),w,b
 10361  004324  A4D8               	btfss	status,2,c
 10362  004326  D009               	goto	l7242
 10363                           
 10364                           ; BSR set to: 0
 10365  004328  0E00               	movlw	0
 10366  00432A  0100               	movlb	0	; () banked
 10367  00432C  6F7B               	movwf	___fldiv@a& (0+255),b
 10368  00432E  0E00               	movlw	0
 10369  004330  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10370  004332  0E00               	movlw	0
 10371  004334  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10372  004336  0E00               	movlw	0
 10373  004338  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10374  00433A                     l7242:
 10375                           
 10376                           ; BSR set to: 0
 10377  00433A  0100               	movlb	0	; () banked
 10378  00433C  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10379                           
 10380                           ; BSR set to: 0
 10381  00433E  0E00               	movlw	0
 10382  004340  0100               	movlb	0	; () banked
 10383  004342  D008               	goto	L7
 10384  004344                     l7246:
 10385                           
 10386                           ; BSR set to: 0
 10387  004344  0E00               	movlw	0
 10388  004346  0100               	movlb	0	; () banked
 10389  004348  6F7B               	movwf	___fldiv@a& (0+255),b
 10390  00434A  0E00               	movlw	0
 10391  00434C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10392  00434E  0E00               	movlw	0
 10393  004350  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10394  004352  0E00               	movlw	0
 10395  004354                     L7:
 10396  004354  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10397                           
 10398                           ; BSR set to: 0
 10399                           
 10400                           ; BSR set to: 0
 10401  004356  0100               	movlb	0	; () banked
 10402  004358  517B               	movf	___fldiv@a& (0+255),w,b
 10403  00435A  0100               	movlb	0	; () banked
 10404  00435C  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10405  00435E  0100               	movlb	0	; () banked
 10406  004360  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10407  004362  0100               	movlb	0	; () banked
 10408  004364  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10409  004366  A4D8               	btfss	status,2,c
 10410  004368  D017               	goto	l7258
 10411                           
 10412                           ; BSR set to: 0
 10413  00436A  0E00               	movlw	0
 10414  00436C  0100               	movlb	0	; () banked
 10415  00436E  6F77               	movwf	___fldiv@b& (0+255),b
 10416  004370  0E00               	movlw	0
 10417  004372  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10418  004374  0E00               	movlw	0
 10419  004376  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10420  004378  0E00               	movlw	0
 10421  00437A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10422                           
 10423                           ; BSR set to: 0
 10424  00437C  0100               	movlb	0	; () banked
 10425  00437E  0E80               	movlw	128
 10426  004380  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10427  004382  0E7F               	movlw	127
 10428  004384  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10429                           
 10430                           ; BSR set to: 0
 10431  004386  C077  F077         	movff	___fldiv@b,?___fldiv
 10432  00438A  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10433  00438E  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10434  004392  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10435                           
 10436                           ; BSR set to: 0
 10437  004396  0012               	return	
 10438  004398                     l7258:
 10439                           
 10440                           ; BSR set to: 0
 10441  004398  0100               	movlb	0	; () banked
 10442  00439A  518E               	movf	___fldiv@bexp& (0+255),w,b
 10443  00439C  0100               	movlb	0	; () banked
 10444  00439E  A4D8               	btfss	status,2,c
 10445  0043A0  D012               	goto	l7266
 10446                           
 10447                           ; BSR set to: 0
 10448  0043A2  0E00               	movlw	0
 10449  0043A4  0100               	movlb	0	; () banked
 10450  0043A6  6F77               	movwf	___fldiv@b& (0+255),b
 10451  0043A8  0E00               	movlw	0
 10452  0043AA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10453  0043AC  0E00               	movlw	0
 10454  0043AE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10455  0043B0  0E00               	movlw	0
 10456  0043B2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10457                           
 10458                           ; BSR set to: 0
 10459  0043B4  C077  F077         	movff	___fldiv@b,?___fldiv
 10460  0043B8  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10461  0043BC  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10462  0043C0  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10463                           
 10464                           ; BSR set to: 0
 10465  0043C4  0012               	return	
 10466  0043C6                     l7266:
 10467                           
 10468                           ; BSR set to: 0
 10469  0043C6  0100               	movlb	0	; () banked
 10470  0043C8  518F               	movf	___fldiv@aexp& (0+255),w,b
 10471  0043CA  0100               	movlb	0	; () banked
 10472  0043CC  6F7F               	movwf	??___fldiv& (0+255),b
 10473  0043CE  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10474  0043D0  0100               	movlb	0	; () banked
 10475  0043D2  1F7F               	comf	??___fldiv& (0+255),f,b
 10476  0043D4  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10477  0043D6  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10478  0043D8  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10479  0043DA  0100               	movlb	0	; () banked
 10480  0043DC  518E               	movf	___fldiv@bexp& (0+255),w,b
 10481  0043DE  0100               	movlb	0	; () banked
 10482  0043E0  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10483  0043E2  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10484  0043E4  0100               	movlb	0	; () banked
 10485  0043E6  517F               	movf	??___fldiv& (0+255),w,b
 10486  0043E8  0100               	movlb	0	; () banked
 10487  0043EA  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10488  0043EC  0100               	movlb	0	; () banked
 10489  0043EE  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10490  0043F0  0100               	movlb	0	; () banked
 10491  0043F2  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10492  0043F4  0E7F               	movlw	127
 10493  0043F6  0100               	movlb	0	; () banked
 10494  0043F8  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10495  0043FA  0100               	movlb	0	; () banked
 10496  0043FC  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10497  0043FE  0E00               	movlw	0
 10498  004400  0100               	movlb	0	; () banked
 10499  004402  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10500  004404  0100               	movlb	0	; () banked
 10501  004406  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10502                           
 10503                           ; BSR set to: 0
 10504  004408  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10505  00440C  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10506  004410  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10507  004414  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10508                           
 10509                           ; BSR set to: 0
 10510  004418  0E00               	movlw	0
 10511  00441A  0100               	movlb	0	; () banked
 10512  00441C  6F77               	movwf	___fldiv@b& (0+255),b
 10513  00441E  0E00               	movlw	0
 10514  004420  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10515  004422  0E00               	movlw	0
 10516  004424  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10517  004426  0E00               	movlw	0
 10518  004428  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10519                           
 10520                           ; BSR set to: 0
 10521  00442A  0E00               	movlw	0
 10522  00442C  0100               	movlb	0	; () banked
 10523  00442E  6F8A               	movwf	___fldiv@grs& (0+255),b
 10524  004430  0E00               	movlw	0
 10525  004432  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10526  004434  0E00               	movlw	0
 10527  004436  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10528  004438  0E00               	movlw	0
 10529  00443A  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10530                           
 10531                           ; BSR set to: 0
 10532  00443C  0E00               	movlw	0
 10533  00443E  0100               	movlb	0	; () banked
 10534  004440  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10535  004442  D042               	goto	l1411
 10536  004444                     l7276:
 10537                           
 10538                           ; BSR set to: 0
 10539  004444  0100               	movlb	0	; () banked
 10540  004446  518F               	movf	___fldiv@aexp& (0+255),w,b
 10541  004448  0100               	movlb	0	; () banked
 10542  00444A  B4D8               	btfsc	status,2,c
 10543  00444C  D017               	goto	l7284
 10544                           
 10545                           ; BSR set to: 0
 10546  00444E  0100               	movlb	0	; () banked
 10547  004450  90D8               	bcf	status,0,c
 10548  004452  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10549  004454  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10550  004456  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10551  004458  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10552  00445A  0100               	movlb	0	; () banked
 10553  00445C  90D8               	bcf	status,0,c
 10554  00445E  3777               	rlcf	___fldiv@b& (0+255),f,b
 10555  004460  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10556  004462  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10557  004464  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10558                           
 10559                           ; BSR set to: 0
 10560  004466  0100               	movlb	0	; () banked
 10561  004468  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10562  00446A  D002               	goto	l1414
 10563                           
 10564                           ; BSR set to: 0
 10565  00446C  0100               	movlb	0	; () banked
 10566  00446E  8177               	bsf	___fldiv@b& (0+255),0,b
 10567  004470                     l1414:
 10568                           
 10569                           ; BSR set to: 0
 10570  004470  0100               	movlb	0	; () banked
 10571  004472  90D8               	bcf	status,0,c
 10572  004474  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10573  004476  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10574  004478  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10575  00447A  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10576  00447C                     l7284:
 10577                           
 10578                           ; BSR set to: 0
 10579  00447C  0100               	movlb	0	; () banked
 10580  00447E  517B               	movf	___fldiv@a& (0+255),w,b
 10581  004480  0100               	movlb	0	; () banked
 10582  004482  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10583  004484  0100               	movlb	0	; () banked
 10584  004486  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10585  004488  0100               	movlb	0	; () banked
 10586  00448A  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10587  00448C  0100               	movlb	0	; () banked
 10588  00448E  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10589  004490  0100               	movlb	0	; () banked
 10590  004492  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10591  004494  0100               	movlb	0	; () banked
 10592  004496  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10593  004498  0100               	movlb	0	; () banked
 10594  00449A  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10595  00449C  A0D8               	btfss	status,0,c
 10596  00449E  D012               	goto	l7290
 10597                           
 10598                           ; BSR set to: 0
 10599  0044A0  0100               	movlb	0	; () banked
 10600  0044A2  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10601                           
 10602                           ; BSR set to: 0
 10603  0044A4  0100               	movlb	0	; () banked
 10604  0044A6  517B               	movf	___fldiv@a& (0+255),w,b
 10605  0044A8  0100               	movlb	0	; () banked
 10606  0044AA  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10607  0044AC  0100               	movlb	0	; () banked
 10608  0044AE  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10609  0044B0  0100               	movlb	0	; () banked
 10610  0044B2  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10611  0044B4  0100               	movlb	0	; () banked
 10612  0044B6  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10613  0044B8  0100               	movlb	0	; () banked
 10614  0044BA  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10615  0044BC  0100               	movlb	0	; () banked
 10616  0044BE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10617  0044C0  0100               	movlb	0	; () banked
 10618  0044C2  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10619  0044C4                     l7290:
 10620                           
 10621                           ; BSR set to: 0
 10622  0044C4  0100               	movlb	0	; () banked
 10623  0044C6  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10624  0044C8                     l1411:
 10625                           
 10626                           ; BSR set to: 0
 10627  0044C8  0E19               	movlw	25
 10628  0044CA  0100               	movlb	0	; () banked
 10629  0044CC  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10630  0044CE  D7BA               	goto	l7276
 10631                           
 10632                           ; BSR set to: 0
 10633                           
 10634                           ; BSR set to: 0
 10635  0044D0  0100               	movlb	0	; () banked
 10636  0044D2  5184               	movf	___fldiv@rem& (0+255),w,b
 10637  0044D4  0100               	movlb	0	; () banked
 10638  0044D6  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10639  0044D8  0100               	movlb	0	; () banked
 10640  0044DA  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10641  0044DC  0100               	movlb	0	; () banked
 10642  0044DE  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10643  0044E0  B4D8               	btfsc	status,2,c
 10644  0044E2  D018               	goto	l7302
 10645                           
 10646                           ; BSR set to: 0
 10647  0044E4  0100               	movlb	0	; () banked
 10648  0044E6  818A               	bsf	___fldiv@grs& (0+255),0,b
 10649                           
 10650                           ; BSR set to: 0
 10651  0044E8  D015               	goto	l7302
 10652  0044EA                     l7296:
 10653                           
 10654                           ; BSR set to: 0
 10655  0044EA  0100               	movlb	0	; () banked
 10656  0044EC  90D8               	bcf	status,0,c
 10657  0044EE  3777               	rlcf	___fldiv@b& (0+255),f,b
 10658  0044F0  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10659  0044F2  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10660  0044F4  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10661                           
 10662                           ; BSR set to: 0
 10663  0044F6  0100               	movlb	0	; () banked
 10664  0044F8  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10665  0044FA  D002               	goto	l1420
 10666                           
 10667                           ; BSR set to: 0
 10668  0044FC  0100               	movlb	0	; () banked
 10669  0044FE  8177               	bsf	___fldiv@b& (0+255),0,b
 10670  004500                     l1420:
 10671                           
 10672                           ; BSR set to: 0
 10673  004500  0100               	movlb	0	; () banked
 10674  004502  90D8               	bcf	status,0,c
 10675  004504  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10676  004506  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10677  004508  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10678  00450A  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10679  00450C  0100               	movlb	0	; () banked
 10680  00450E  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10681  004510  A0D8               	btfss	status,0,c
 10682  004512  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10683  004514                     l7302:
 10684                           
 10685                           ; BSR set to: 0
 10686  004514  0100               	movlb	0	; () banked
 10687  004516  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10688  004518  D7E8               	goto	l7296
 10689                           
 10690                           ; BSR set to: 0
 10691                           
 10692                           ; BSR set to: 0
 10693  00451A  0E00               	movlw	0
 10694  00451C  0100               	movlb	0	; () banked
 10695  00451E  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698  004520  0100               	movlb	0	; () banked
 10699  004522  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10700  004524  D024               	goto	l1422
 10701                           
 10702                           ; BSR set to: 0
 10703  004526  0EFF               	movlw	255
 10704  004528  0100               	movlb	0	; () banked
 10705  00452A  158A               	andwf	___fldiv@grs& (0+255),w,b
 10706  00452C  0100               	movlb	0	; () banked
 10707  00452E  6F7F               	movwf	??___fldiv& (0+255),b
 10708  004530  0EFF               	movlw	255
 10709  004532  0100               	movlb	0	; () banked
 10710  004534  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10711  004536  0100               	movlb	0	; () banked
 10712  004538  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10713  00453A  0EFF               	movlw	255
 10714  00453C  0100               	movlb	0	; () banked
 10715  00453E  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10716  004540  0100               	movlb	0	; () banked
 10717  004542  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10718  004544  0E7F               	movlw	127
 10719  004546  0100               	movlb	0	; () banked
 10720  004548  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10721  00454A  0100               	movlb	0	; () banked
 10722  00454C  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10723  00454E  0100               	movlb	0	; () banked
 10724  004550  517F               	movf	??___fldiv& (0+255),w,b
 10725  004552  0100               	movlb	0	; () banked
 10726  004554  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10727  004556  0100               	movlb	0	; () banked
 10728  004558  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10729  00455A  0100               	movlb	0	; () banked
 10730  00455C  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10731  00455E  A4D8               	btfss	status,2,c
 10732  004560  D003               	goto	l7312
 10733                           
 10734                           ; BSR set to: 0
 10735                           
 10736                           ; BSR set to: 0
 10737  004562  0100               	movlb	0	; () banked
 10738  004564  A177               	btfss	___fldiv@b& (0+255),0,b
 10739  004566  D003               	goto	l1422
 10740  004568                     l7312:
 10741                           
 10742                           ; BSR set to: 0
 10743  004568  0E01               	movlw	1
 10744  00456A  0100               	movlb	0	; () banked
 10745  00456C  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10746  00456E                     l1422:
 10747                           
 10748                           ; BSR set to: 0
 10749  00456E  0100               	movlb	0	; () banked
 10750  004570  518F               	movf	___fldiv@aexp& (0+255),w,b
 10751  004572  0100               	movlb	0	; () banked
 10752  004574  B4D8               	btfsc	status,2,c
 10753  004576  D023               	goto	l7322
 10754                           
 10755                           ; BSR set to: 0
 10756  004578  0E01               	movlw	1
 10757  00457A  0100               	movlb	0	; () banked
 10758  00457C  2777               	addwf	___fldiv@b& (0+255),f,b
 10759  00457E  0E00               	movlw	0
 10760  004580  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10761  004582  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10762  004584  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10763                           
 10764                           ; BSR set to: 0
 10765  004586  0100               	movlb	0	; () banked
 10766  004588  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10767  00458A  D019               	goto	l7322
 10768                           
 10769                           ; BSR set to: 0
 10770  00458C  C077  F07F         	movff	___fldiv@b,??___fldiv
 10771  004590  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10772  004594  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10773  004598  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10774  00459C  0100               	movlb	0	; () banked
 10775  00459E  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10776  0045A0  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10777  0045A2  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10778  0045A4  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10779  0045A6  337F               	rrcf	??___fldiv& (0+255),f,b
 10780  0045A8  C07F  F077         	movff	??___fldiv,___fldiv@b
 10781  0045AC  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10782  0045B0  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10783  0045B4  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10784                           
 10785                           ; BSR set to: 0
 10786  0045B8  0100               	movlb	0	; () banked
 10787  0045BA  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10788  0045BC  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10789  0045BE                     l7322:
 10790                           
 10791                           ; BSR set to: 0
 10792  0045BE  0100               	movlb	0	; () banked
 10793  0045C0  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10794  0045C2  D014               	goto	l7326
 10795  0045C4  0100               	movlb	0	; () banked
 10796  0045C6  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10797  0045C8  E104               	bnz	u9620
 10798  0045CA  0100               	movlb	0	; () banked
 10799  0045CC  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10800  0045CE  A0D8               	btfss	status,0,c
 10801  0045D0  D00D               	goto	l7326
 10802  0045D2                     u9620:
 10803                           
 10804                           ; BSR set to: 0
 10805  0045D2  0E00               	movlw	0
 10806  0045D4  0100               	movlb	0	; () banked
 10807  0045D6  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10808  0045D8  6988               	setf	___fldiv@new_exp& (0+255),b
 10809  0045DA  0E00               	movlw	0
 10810  0045DC  0100               	movlb	0	; () banked
 10811  0045DE  6F77               	movwf	___fldiv@b& (0+255),b
 10812  0045E0  0E00               	movlw	0
 10813  0045E2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10814  0045E4  0E00               	movlw	0
 10815  0045E6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10816  0045E8  0E00               	movlw	0
 10817  0045EA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10818  0045EC                     l7326:
 10819                           
 10820                           ; BSR set to: 0
 10821  0045EC  0100               	movlb	0	; () banked
 10822  0045EE  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10823  0045F0  D007               	goto	l7328
 10824  0045F2  0100               	movlb	0	; () banked
 10825  0045F4  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10826  0045F6  E115               	bnz	l7330
 10827  0045F8  0100               	movlb	0	; () banked
 10828  0045FA  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10829  0045FC  B0D8               	btfsc	status,0,c
 10830  0045FE  D011               	goto	l7330
 10831  004600                     l7328:
 10832                           
 10833                           ; BSR set to: 0
 10834  004600  0E00               	movlw	0
 10835  004602  0100               	movlb	0	; () banked
 10836  004604  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10837  004606  0E00               	movlw	0
 10838  004608  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10839  00460A  0E00               	movlw	0
 10840  00460C  0100               	movlb	0	; () banked
 10841  00460E  6F77               	movwf	___fldiv@b& (0+255),b
 10842  004610  0E00               	movlw	0
 10843  004612  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10844  004614  0E00               	movlw	0
 10845  004616  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10846  004618  0E00               	movlw	0
 10847  00461A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10848  00461C  0E00               	movlw	0
 10849  00461E  0100               	movlb	0	; () banked
 10850  004620  6F83               	movwf	___fldiv@sign& (0+255),b
 10851  004622                     l7330:
 10852                           
 10853                           ; BSR set to: 0
 10854  004622  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10855                           
 10856                           ; BSR set to: 0
 10857  004626  0100               	movlb	0	; () banked
 10858  004628  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10859  00462A  D003               	goto	l7336
 10860                           
 10861                           ; BSR set to: 0
 10862  00462C  0100               	movlb	0	; () banked
 10863  00462E  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10864  004630  D002               	goto	l7338
 10865  004632                     l7336:
 10866                           
 10867                           ; BSR set to: 0
 10868  004632  0100               	movlb	0	; () banked
 10869  004634  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10870  004636                     l7338:
 10871                           
 10872                           ; BSR set to: 0
 10873  004636  0100               	movlb	0	; () banked
 10874  004638  90D8               	bcf	status,0,c
 10875  00463A  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10876  00463C  0100               	movlb	0	; () banked
 10877  00463E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10878                           
 10879                           ; BSR set to: 0
 10880  004640  0100               	movlb	0	; () banked
 10881  004642  5183               	movf	___fldiv@sign& (0+255),w,b
 10882  004644  0100               	movlb	0	; () banked
 10883  004646  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10884                           
 10885                           ; BSR set to: 0
 10886  004648  C077  F077         	movff	___fldiv@b,?___fldiv
 10887  00464C  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10888  004650  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10889  004654  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10890  004658  0012               	return	
 10891  00465A                     __end_of___fldiv:
 10892                           	opt stack 0
 10893                           tblptru	equ	0xFF8
 10894                           tblptrh	equ	0xFF7
 10895                           tblptrl	equ	0xFF6
 10896                           tablat	equ	0xFF5
 10897                           prodh	equ	0xFF4
 10898                           prodl	equ	0xFF3
 10899                           postinc0	equ	0xFEE
 10900                           wreg	equ	0xFE8
 10901                           postdec1	equ	0xFE5
 10902                           fsr1l	equ	0xFE1
 10903                           indf2	equ	0xFDF
 10904                           postinc2	equ	0xFDE
 10905                           postdec2	equ	0xFDD
 10906                           fsr2h	equ	0xFDA
 10907                           fsr2l	equ	0xFD9
 10908                           status	equ	0xFD8
 10909                           
 10910 ;; *************** function _delay_s *****************
 10911 ;; Defined at:
 10912 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  value_s         1    wreg     unsigned char 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  value_s         1   31[BANK0 ] unsigned char 
 10917 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;		None               void
 10920 ;; Registers used:
 10921 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;Total ram usage:        2 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    6
 10934 ;; This function calls:
 10935 ;;		_delay_ms
 10936 ;; This function is called by:
 10937 ;;		_park_routine
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941                           	psect	text26
 10942  00666C                     __ptext26:
 10943                           	opt stack 0
 10944  00666C                     _delay_s:
 10945                           	opt stack 23
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;incstack = 0
 10949                           ;delay_s@value_s stored from wreg
 10950  00666C  0100               	movlb	0	; () banked
 10951  00666E  6F7F               	movwf	delay_s@value_s& (0+255),b
 10952                           
 10953                           ;src\delay.c: 104: unsigned char repeat_loop;
 10954                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10955  006670  0E00               	movlw	0
 10956  006672  0100               	movlb	0	; () banked
 10957  006674  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10958  006676  D009               	goto	l7958
 10959  006678                     l7954:
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;src\delay.c: 107: delay_ms (1000);
 10963  006678  0E03               	movlw	3
 10964  00667A  0100               	movlb	0	; () banked
 10965  00667C  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10966  00667E  0EE8               	movlw	232
 10967  006680  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10968  006682  ECCC  F032         	call	_delay_ms	;wreg free
 10969  006686  0100               	movlb	0	; () banked
 10970  006688  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10971  00668A                     l7958:
 10972                           
 10973                           ; BSR set to: 0
 10974  00668A  0100               	movlb	0	; () banked
 10975  00668C  517F               	movf	delay_s@value_s& (0+255),w,b
 10976  00668E  0100               	movlb	0	; () banked
 10977  006690  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10978  006692  B0D8               	btfsc	status,0,c
 10979  006694  0012               	return	
 10980  006696  D7F0               	goto	l7954
 10981  006698                     __end_of_delay_s:
 10982                           	opt stack 0
 10983                           tblptru	equ	0xFF8
 10984                           tblptrh	equ	0xFF7
 10985                           tblptrl	equ	0xFF6
 10986                           tablat	equ	0xFF5
 10987                           prodh	equ	0xFF4
 10988                           prodl	equ	0xFF3
 10989                           postinc0	equ	0xFEE
 10990                           wreg	equ	0xFE8
 10991                           postdec1	equ	0xFE5
 10992                           fsr1l	equ	0xFE1
 10993                           indf2	equ	0xFDF
 10994                           postinc2	equ	0xFDE
 10995                           postdec2	equ	0xFDD
 10996                           fsr2h	equ	0xFDA
 10997                           fsr2l	equ	0xFD9
 10998                           status	equ	0xFD8
 10999                           
 11000 ;; *************** function _delay_ms *****************
 11001 ;; Defined at:
 11002 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  value_ms        2   29[BANK0 ] unsigned int 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;		None
 11007 ;; Return value:  Size  Location     Type
 11008 ;;		None               void
 11009 ;; Registers used:
 11010 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:        2 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    5
 11023 ;; This function calls:
 11024 ;;		___wmul
 11025 ;; This function is called by:
 11026 ;;		_delay_s
 11027 ;;		_main
 11028 ;;		_park_routine
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	text27
 11033  006598                     __ptext27:
 11034                           	opt stack 0
 11035  006598                     _delay_ms:
 11036                           	opt stack 23
 11037                           
 11038                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;incstack = 0
 11042  006598  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11043  00659C  0100               	movlb	0	; () banked
 11044  00659E  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11045  0065A0  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11046  0065A4  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11047  0065A8  EC05  F033         	call	___wmul	;wreg free
 11048  0065AC  C077  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 11049  0065B0  C078  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11050                           
 11051                           ;src\delay.c: 75: while (clock_counter_reference) {
 11052  0065B4  D007               	goto	l569
 11053  0065B6                     l7808:
 11054                           
 11055                           ;src\delay.c: 85: _delay(240);
 11056  0065B6  0E50               	movlw	80
 11057  0065B8                     u11647:
 11058  0065B8  2EE8               	decfsz	wreg,f,c
 11059  0065BA  D7FE               	goto	u11647
 11060                           
 11061                           ;src\delay.c: 88: clock_counter_reference--;
 11062  0065BC  0100               	movlb	0	; () banked
 11063  0065BE  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11064  0065C0  A0D8               	btfss	status,0,c
 11065  0065C2  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11066  0065C4                     l569:
 11067  0065C4  0100               	movlb	0	; () banked
 11068  0065C6  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11069  0065C8  0100               	movlb	0	; () banked
 11070  0065CA  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11071  0065CC  B4D8               	btfsc	status,2,c
 11072  0065CE  0012               	return	
 11073  0065D0  D7F2               	goto	l7808
 11074  0065D2                     __end_of_delay_ms:
 11075                           	opt stack 0
 11076                           tblptru	equ	0xFF8
 11077                           tblptrh	equ	0xFF7
 11078                           tblptrl	equ	0xFF6
 11079                           tablat	equ	0xFF5
 11080                           prodh	equ	0xFF4
 11081                           prodl	equ	0xFF3
 11082                           postinc0	equ	0xFEE
 11083                           wreg	equ	0xFE8
 11084                           postdec1	equ	0xFE5
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           postdec2	equ	0xFDD
 11089                           fsr2h	equ	0xFDA
 11090                           fsr2l	equ	0xFD9
 11091                           status	equ	0xFD8
 11092                           
 11093 ;; *************** function ___wmul *****************
 11094 ;; Defined at:
 11095 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11098 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  product         2   27[BANK0 ] unsigned int 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  2   23[BANK0 ] unsigned int 
 11103 ;; Registers used:
 11104 ;;		wreg, status,2, status,0, prodl, prodh
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;Total ram usage:        6 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    4
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_delay_ms
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text28
 11125  00660A                     __ptext28:
 11126                           	opt stack 0
 11127  00660A                     ___wmul:
 11128                           	opt stack 23
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;incstack = 0
 11132  00660A  0100               	movlb	0	; () banked
 11133  00660C  5177               	movf	___wmul@multiplier& (0+255),w,b
 11134  00660E  0100               	movlb	0	; () banked
 11135  006610  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11136  006612  CFF3 F07B          	movff	prodl,___wmul@product
 11137  006616  CFF4 F07C          	movff	prodh,___wmul@product+1
 11138  00661A  0100               	movlb	0	; () banked
 11139  00661C  5177               	movf	___wmul@multiplier& (0+255),w,b
 11140  00661E  0100               	movlb	0	; () banked
 11141  006620  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11142  006622  50F3               	movf	prodl,w,c
 11143  006624  0100               	movlb	0	; () banked
 11144  006626  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11145  006628  0100               	movlb	0	; () banked
 11146  00662A  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11147  00662C  0100               	movlb	0	; () banked
 11148  00662E  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11149  006630  50F3               	movf	prodl,w,c
 11150  006632  0100               	movlb	0	; () banked
 11151  006634  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11152                           
 11153                           ; BSR set to: 0
 11154  006636  C07B  F077         	movff	___wmul@product,?___wmul
 11155  00663A  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11156  00663E  0012               	return	
 11157  006640                     __end_of___wmul:
 11158                           	opt stack 0
 11159                           tblptru	equ	0xFF8
 11160                           tblptrh	equ	0xFF7
 11161                           tblptrl	equ	0xFF6
 11162                           tablat	equ	0xFF5
 11163                           prodh	equ	0xFF4
 11164                           prodl	equ	0xFF3
 11165                           postinc0	equ	0xFEE
 11166                           wreg	equ	0xFE8
 11167                           postdec1	equ	0xFE5
 11168                           fsr1l	equ	0xFE1
 11169                           indf2	equ	0xFDF
 11170                           postinc2	equ	0xFDE
 11171                           postdec2	equ	0xFDD
 11172                           fsr2h	equ	0xFDA
 11173                           fsr2l	equ	0xFD9
 11174                           status	equ	0xFD8
 11175                           
 11176 ;; *************** function _configurazione *****************
 11177 ;; Defined at:
 11178 ;;		line 481 in file "parcheggio.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;		None
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;		None
 11183 ;; Return value:  Size  Location     Type
 11184 ;;		None               void
 11185 ;; Registers used:
 11186 ;;		wreg, status,2, status,0, cstack
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;Total ram usage:        0 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    6
 11199 ;; This function calls:
 11200 ;;		_CANInitialize
 11201 ;; This function is called by:
 11202 ;;		_main
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text29
 11207  006452                     __ptext29:
 11208                           	opt stack 0
 11209  006452                     _configurazione:
 11210                           	opt stack 24
 11211                           
 11212                           ;parcheggio.c: 482: LATA = 0x00;
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;incstack = 0
 11216  006452  0E00               	movlw	0
 11217  006454  6E89               	movwf	3977,c	;volatile
 11218                           
 11219                           ;parcheggio.c: 483: TRISA = 0b11110000;
 11220  006456  0EF0               	movlw	240
 11221  006458  6E92               	movwf	3986,c	;volatile
 11222                           
 11223                           ;parcheggio.c: 485: LATB = 0x00;
 11224  00645A  0E00               	movlw	0
 11225  00645C  6E8A               	movwf	3978,c	;volatile
 11226                           
 11227                           ;parcheggio.c: 486: TRISB = 0b10001010;
 11228  00645E  0E8A               	movlw	138
 11229  006460  6E93               	movwf	3987,c	;volatile
 11230                           
 11231                           ;parcheggio.c: 488: LATC = 0x00;
 11232  006462  0E00               	movlw	0
 11233  006464  6E8B               	movwf	3979,c	;volatile
 11234                           
 11235                           ;parcheggio.c: 489: TRISC = 0b11111111;
 11236  006466  6894               	setf	3988,c	;volatile
 11237                           
 11238                           ;parcheggio.c: 491: ADCON1 = 0xFF;
 11239  006468  68C1               	setf	4033,c	;volatile
 11240                           
 11241                           ;parcheggio.c: 492: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11242  00646A  0E06               	movlw	6
 11243  00646C  0100               	movlb	0	; () banked
 11244  00646E  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11245  006470  0E05               	movlw	5
 11246  006472  0100               	movlb	0	; () banked
 11247  006474  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11248  006476  0E01               	movlw	1
 11249  006478  0100               	movlb	0	; () banked
 11250  00647A  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11251  00647C  0E03               	movlw	3
 11252  00647E  0100               	movlb	0	; () banked
 11253  006480  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11254  006482  0E9D               	movlw	157
 11255  006484  0100               	movlb	0	; () banked
 11256  006486  6F89               	movwf	CANInitialize@flags& (0+255),b
 11257  006488  0E04               	movlw	4
 11258  00648A  EC63  F02B         	call	_CANInitialize
 11259                           
 11260                           ;parcheggio.c: 494: RCONbits.IPEN = 1;
 11261  00648E  8ED0               	bsf	4048,7,c	;volatile
 11262                           
 11263                           ;parcheggio.c: 495: PIR3bits.RXB1IF = 0;
 11264  006490  92A4               	bcf	4004,1,c	;volatile
 11265                           
 11266                           ;parcheggio.c: 496: PIR3bits.RXB0IF = 0;
 11267  006492  90A4               	bcf	4004,0,c	;volatile
 11268                           
 11269                           ;parcheggio.c: 497: IPR3bits.RXB1IP = 0;
 11270  006494  92A5               	bcf	4005,1,c	;volatile
 11271                           
 11272                           ;parcheggio.c: 498: IPR3bits.RXB0IP = 0;
 11273  006496  90A5               	bcf	4005,0,c	;volatile
 11274                           
 11275                           ;parcheggio.c: 499: PIE3bits.RXB1IE = 1;
 11276  006498  82A3               	bsf	4003,1,c	;volatile
 11277                           
 11278                           ;parcheggio.c: 500: PIE3bits.RXB0IE = 1;
 11279  00649A  80A3               	bsf	4003,0,c	;volatile
 11280                           
 11281                           ;parcheggio.c: 501: INTCON2bits.TMR0IP = 0;
 11282  00649C  94F1               	bcf	intcon2,2,c	;volatile
 11283                           
 11284                           ;parcheggio.c: 502: T0CON = 0x80;
 11285  00649E  0E80               	movlw	128
 11286  0064A0  6ED5               	movwf	4053,c	;volatile
 11287                           
 11288                           ;parcheggio.c: 503: T3CON = 0x11;
 11289  0064A2  0E11               	movlw	17
 11290  0064A4  6EB1               	movwf	4017,c	;volatile
 11291                           
 11292                           ;parcheggio.c: 504: TMR0H = 0x34;
 11293  0064A6  0E34               	movlw	52
 11294  0064A8  6ED7               	movwf	4055,c	;volatile
 11295                           
 11296                           ;parcheggio.c: 505: TMR0L = 0xE0;
 11297  0064AA  0EE0               	movlw	224
 11298  0064AC  6ED6               	movwf	4054,c	;volatile
 11299                           
 11300                           ;parcheggio.c: 506: INTCONbits.TMR0IF = 0;
 11301  0064AE  94F2               	bcf	intcon,2,c	;volatile
 11302                           
 11303                           ;parcheggio.c: 507: INTCONbits.TMR0IE = 1;
 11304  0064B0  8AF2               	bsf	intcon,5,c	;volatile
 11305                           
 11306                           ;parcheggio.c: 508: INTCON2bits.INTEDG0 = 1;
 11307  0064B2  8CF1               	bsf	intcon2,6,c	;volatile
 11308                           
 11309                           ;parcheggio.c: 509: INTCONbits.INT0IF = 0;
 11310  0064B4  92F2               	bcf	intcon,1,c	;volatile
 11311                           
 11312                           ;parcheggio.c: 510: INTCONbits.INT0IE = 0;
 11313  0064B6  98F2               	bcf	intcon,4,c	;volatile
 11314                           
 11315                           ;parcheggio.c: 511: INTCONbits.GIEL = 1;
 11316  0064B8  8CF2               	bsf	intcon,6,c	;volatile
 11317                           
 11318                           ;parcheggio.c: 512: INTCONbits.GIEH = 1;
 11319  0064BA  8EF2               	bsf	intcon,7,c	;volatile
 11320  0064BC  0012               	return		;funcret
 11321  0064BE                     __end_of_configurazione:
 11322                           	opt stack 0
 11323                           tblptru	equ	0xFF8
 11324                           tblptrh	equ	0xFF7
 11325                           tblptrl	equ	0xFF6
 11326                           tablat	equ	0xFF5
 11327                           prodh	equ	0xFF4
 11328                           prodl	equ	0xFF3
 11329                           intcon	equ	0xFF2
 11330                           intcon2	equ	0xFF1
 11331                           postinc0	equ	0xFEE
 11332                           wreg	equ	0xFE8
 11333                           postdec1	equ	0xFE5
 11334                           fsr1l	equ	0xFE1
 11335                           indf2	equ	0xFDF
 11336                           postinc2	equ	0xFDE
 11337                           postdec2	equ	0xFDD
 11338                           fsr2h	equ	0xFDA
 11339                           fsr2l	equ	0xFD9
 11340                           status	equ	0xFD8
 11341                           
 11342 ;; *************** function _CANInitialize *****************
 11343 ;; Defined at:
 11344 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  propSeg         1    wreg     unsigned char 
 11347 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11348 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11349 ;;  SJW             1   39[BANK0 ] unsigned char 
 11350 ;;  BRP             1   40[BANK0 ] unsigned char 
 11351 ;;  flags           1   41[BANK0 ] enum E16313
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11354 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11355 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;		None               void
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:       12 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    5
 11372 ;; This function calls:
 11373 ;;		_CANOperationMode
 11374 ;;		_CANSetFilter
 11375 ;;		_CANSetMask
 11376 ;; This function is called by:
 11377 ;;		_configurazione
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text30
 11382  0056C6                     __ptext30:
 11383                           	opt stack 0
 11384  0056C6                     _CANInitialize:
 11385                           	opt stack 24
 11386                           
 11387                           ;incstack = 0
 11388                           ;CANInitialize@propSeg stored from wreg
 11389  0056C6  0100               	movlb	0	; () banked
 11390  0056C8  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11391                           
 11392                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11393                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11394                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11395  0056CA  0E80               	movlw	128
 11396  0056CC  EC6D  F033         	call	_CANOperationMode
 11397                           
 11398                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11399  0056D0  0E00               	movlw	0
 11400  0056D2  6E70               	movwf	3952,c	;volatile
 11401                           
 11402                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11403  0056D4  0E00               	movlw	0
 11404  0056D6  6E71               	movwf	3953,c	;volatile
 11405                           
 11406                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11407  0056D8  0E00               	movlw	0
 11408  0056DA  6E72               	movwf	3954,c	;volatile
 11409                           
 11410                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11411  0056DC  0100               	movlb	0	; () banked
 11412  0056DE  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11413  0056E0  42E8               	rrncf	wreg,f,c
 11414  0056E2  0BC0               	andlw	192
 11415  0056E4  0100               	movlb	0	; () banked
 11416  0056E6  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11420  0056E8  0100               	movlb	0	; () banked
 11421  0056EA  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11422  0056EC  1270               	iorwf	3952,f,c	;volatile
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11426  0056EE  0100               	movlb	0	; () banked
 11427  0056F0  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11428  0056F2  1270               	iorwf	3952,f,c	;volatile
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11432  0056F4  0100               	movlb	0	; () banked
 11433  0056F6  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11434  0056F8  1271               	iorwf	3953,f,c	;volatile
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11438  0056FA  0100               	movlb	0	; () banked
 11439  0056FC  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11440  0056FE  42E8               	rrncf	wreg,f,c
 11441  005700  0BF8               	andlw	248
 11442  005702  0100               	movlb	0	; () banked
 11443  005704  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11447  005706  0100               	movlb	0	; () banked
 11448  005708  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11449  00570A  1271               	iorwf	3953,f,c	;volatile
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11453  00570C  0100               	movlb	0	; () banked
 11454  00570E  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11458  005710  8C71               	bsf	3953,6,c	;volatile
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11462  005712  0100               	movlb	0	; () banked
 11463  005714  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11464                           
 11465                           ; BSR set to: 0
 11466                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11467  005716  8E71               	bsf	3953,7,c	;volatile
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11471                           
 11472                           ; BSR set to: 0
 11473  005718  0100               	movlb	0	; () banked
 11474  00571A  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11475  00571C  1272               	iorwf	3954,f,c	;volatile
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11479  00571E  0100               	movlb	0	; () banked
 11480  005720  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11484  005722  8C72               	bsf	3954,6,c	;volatile
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11488                           
 11489                           ; BSR set to: 0
 11490  005724  0100               	movlb	0	; () banked
 11491  005726  5189               	movf	CANInitialize@flags& (0+255),w,b
 11492  005728  0B60               	andlw	96
 11493  00572A  6E60               	movwf	3936,c	;volatile
 11494                           
 11495                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11496  00572C  0100               	movlb	0	; () banked
 11497  00572E  5189               	movf	CANInitialize@flags& (0+255),w,b
 11498  005730  0B10               	andlw	16
 11499  005732  0AFF               	xorlw	255
 11500  005734  B4D8               	btfsc	status,2,c
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11504  005736  8460               	bsf	3936,2,c	;volatile
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11508  005738  CF60 FF50          	movff	3936,3920	;volatile
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11512  00573C  0E00               	movlw	0
 11513  00573E  0100               	movlb	0	; () banked
 11514  005740  6F77               	movwf	CANSetMask@mask& (0+255),b
 11515  005742  0E00               	movlw	0
 11516  005744  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11517  005746  0E00               	movlw	0
 11518  005748  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11519  00574A  0E00               	movlw	0
 11520  00574C  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11521  00574E  0EF7               	movlw	247
 11522  005750  0100               	movlb	0	; () banked
 11523  005752  6F7B               	movwf	CANSetMask@type& (0+255),b
 11524  005754  0E01               	movlw	1
 11525  005756  EC2D  F023         	call	_CANSetMask
 11526                           
 11527                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11528  00575A  0E00               	movlw	0
 11529  00575C  0100               	movlb	0	; () banked
 11530  00575E  6F77               	movwf	CANSetMask@mask& (0+255),b
 11531  005760  0E00               	movlw	0
 11532  005762  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11533  005764  0E00               	movlw	0
 11534  005766  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11535  005768  0E00               	movlw	0
 11536  00576A  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11537  00576C  0EF7               	movlw	247
 11538  00576E  0100               	movlb	0	; () banked
 11539  005770  6F7B               	movwf	CANSetMask@type& (0+255),b
 11540  005772  0E02               	movlw	2
 11541  005774  EC2D  F023         	call	_CANSetMask
 11542                           
 11543                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11544  005778  D00F               	goto	l7944
 11545  00577A                     l7938:
 11546                           
 11547                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11548  00577A  0EF7               	movlw	247
 11549  00577C  0100               	movlb	0	; () banked
 11550  00577E  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11551  005780  D007               	goto	l7940
 11552  005782                     l358:
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11556  005782  0100               	movlb	0	; () banked
 11557  005784  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11558                           
 11559                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11560  005786  0100               	movlb	0	; () banked
 11561  005788  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11562                           
 11563                           ;inc\CANlib.h: 274: break;
 11564  00578A  D028               	goto	l7946
 11565  00578C                     l359:
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11569  00578C  0100               	movlb	0	; () banked
 11570  00578E  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11571  005790                     l7940:
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11575  005790  0EF7               	movlw	247
 11576  005792  0100               	movlb	0	; () banked
 11577  005794  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;inc\CANlib.h: 279: }
 11581                           
 11582                           ;inc\CANlib.h: 278: break;
 11583  005796  D022               	goto	l7946
 11584  005798                     l7944:
 11585  005798  0E9F               	movlw	159
 11586  00579A  0100               	movlb	0	; () banked
 11587  00579C  6F8A               	movwf	??_CANInitialize& (0+255),b
 11588  00579E  0EFF               	movlw	255
 11589  0057A0  0100               	movlb	0	; () banked
 11590  0057A2  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11591  0057A4  0100               	movlb	0	; () banked
 11592  0057A6  5189               	movf	CANInitialize@flags& (0+255),w,b
 11593  0057A8  0B60               	andlw	96
 11594  0057AA  0100               	movlb	0	; () banked
 11595  0057AC  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11596  0057AE  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11597  0057B0  0100               	movlb	0	; () banked
 11598  0057B2  518A               	movf	??_CANInitialize& (0+255),w,b
 11599  0057B4  0100               	movlb	0	; () banked
 11600  0057B6  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11601  0057B8  0100               	movlb	0	; () banked
 11602  0057BA  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11603  0057BC  0100               	movlb	0	; () banked
 11604  0057BE  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11605                           
 11606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11607                           ; Switch size 1, requested type "space"
 11608                           ; Number of cases is 1, Range of values is 0 to 0
 11609                           ; switch strategies available:
 11610                           ; Name         Instructions Cycles
 11611                           ; simple_byte            4     3 (average)
 11612                           ;	Chosen strategy is simple_byte
 11613  0057C0  0100               	movlb	0	; () banked
 11614  0057C2  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11615  0057C4  0A00               	xorlw	0	; case 0
 11616  0057C6  A4D8               	btfss	status,2,c
 11617  0057C8  D7E1               	goto	l359
 11618                           
 11619                           ; BSR set to: 0
 11620                           ; Switch size 1, requested type "space"
 11621                           ; Number of cases is 2, Range of values is 191 to 223
 11622                           ; switch strategies available:
 11623                           ; Name         Instructions Cycles
 11624                           ; simple_byte            7     4 (average)
 11625                           ;	Chosen strategy is simple_byte
 11626  0057CA  0100               	movlb	0	; () banked
 11627  0057CC  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11628  0057CE  0ABF               	xorlw	191	; case 191
 11629  0057D0  B4D8               	btfsc	status,2,c
 11630  0057D2  D7D7               	goto	l358
 11631  0057D4  0A60               	xorlw	96	; case 223
 11632  0057D6  B4D8               	btfsc	status,2,c
 11633  0057D8  D7D0               	goto	l7938
 11634  0057DA  D7D8               	goto	l359
 11635  0057DC                     l7946:
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11639  0057DC  0E00               	movlw	0
 11640  0057DE  0100               	movlb	0	; () banked
 11641  0057E0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11642  0057E2  0E00               	movlw	0
 11643  0057E4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11644  0057E6  0E00               	movlw	0
 11645  0057E8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11646  0057EA  0E00               	movlw	0
 11647  0057EC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11648  0057EE  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11649  0057F2  0E00               	movlw	0
 11650  0057F4  ECA9  F006         	call	_CANSetFilter
 11651                           
 11652                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11653  0057F8  0E00               	movlw	0
 11654  0057FA  0100               	movlb	0	; () banked
 11655  0057FC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11656  0057FE  0E00               	movlw	0
 11657  005800  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11658  005802  0E00               	movlw	0
 11659  005804  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11660  005806  0E00               	movlw	0
 11661  005808  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11662  00580A  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11663  00580E  0E01               	movlw	1
 11664  005810  ECA9  F006         	call	_CANSetFilter
 11665                           
 11666                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11667  005814  0E00               	movlw	0
 11668  005816  0100               	movlb	0	; () banked
 11669  005818  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11670  00581A  0E00               	movlw	0
 11671  00581C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11672  00581E  0E00               	movlw	0
 11673  005820  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11674  005822  0E00               	movlw	0
 11675  005824  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11676  005826  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11677  00582A  0E02               	movlw	2
 11678  00582C  ECA9  F006         	call	_CANSetFilter
 11679                           
 11680                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11681  005830  0E00               	movlw	0
 11682  005832  0100               	movlb	0	; () banked
 11683  005834  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11684  005836  0E00               	movlw	0
 11685  005838  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11686  00583A  0E00               	movlw	0
 11687  00583C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11688  00583E  0E00               	movlw	0
 11689  005840  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11690  005842  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11691  005846  0E03               	movlw	3
 11692  005848  ECA9  F006         	call	_CANSetFilter
 11693                           
 11694                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11695  00584C  0E00               	movlw	0
 11696  00584E  0100               	movlb	0	; () banked
 11697  005850  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11698  005852  0E00               	movlw	0
 11699  005854  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11700  005856  0E00               	movlw	0
 11701  005858  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11702  00585A  0E00               	movlw	0
 11703  00585C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11704  00585E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11705  005862  0E04               	movlw	4
 11706  005864  ECA9  F006         	call	_CANSetFilter
 11707                           
 11708                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11709  005868  0E00               	movlw	0
 11710  00586A  0100               	movlb	0	; () banked
 11711  00586C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11712  00586E  0E00               	movlw	0
 11713  005870  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11714  005872  0E00               	movlw	0
 11715  005874  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11716  005876  0E00               	movlw	0
 11717  005878  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11718  00587A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11719  00587E  0E05               	movlw	5
 11720  005880  ECA9  F006         	call	_CANSetFilter
 11721                           
 11722                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11723  005884  0E00               	movlw	0
 11724  005886  EC6D  F033         	call	_CANOperationMode
 11725  00588A  0012               	return		;funcret
 11726  00588C                     __end_of_CANInitialize:
 11727                           	opt stack 0
 11728                           tblptru	equ	0xFF8
 11729                           tblptrh	equ	0xFF7
 11730                           tblptrl	equ	0xFF6
 11731                           tablat	equ	0xFF5
 11732                           prodh	equ	0xFF4
 11733                           prodl	equ	0xFF3
 11734                           intcon	equ	0xFF2
 11735                           intcon2	equ	0xFF1
 11736                           postinc0	equ	0xFEE
 11737                           wreg	equ	0xFE8
 11738                           postdec1	equ	0xFE5
 11739                           fsr1l	equ	0xFE1
 11740                           indf2	equ	0xFDF
 11741                           postinc2	equ	0xFDE
 11742                           postdec2	equ	0xFDD
 11743                           fsr2h	equ	0xFDA
 11744                           fsr2l	equ	0xFD9
 11745                           status	equ	0xFD8
 11746                           
 11747 ;; *************** function _CANSetMask *****************
 11748 ;; Defined at:
 11749 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  numBuffer       1    wreg     enum E16347
 11752 ;;  mask            4   23[BANK0 ] unsigned long 
 11753 ;;  type            1   27[BANK0 ] enum E16313
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11756 ;;  tamp            4   33[BANK0 ] unsigned long 
 11757 ;; Return value:  Size  Location     Type
 11758 ;;		None               void
 11759 ;; Registers used:
 11760 ;;		wreg, status,2, status,0
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11766 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;Total ram usage:       14 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:    4
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_CANInitialize
 11777 ;; This function uses a non-reentrant model
 11778 ;;
 11779                           
 11780                           	psect	text31
 11781  00465A                     __ptext31:
 11782                           	opt stack 0
 11783  00465A                     _CANSetMask:
 11784                           	opt stack 24
 11785                           
 11786                           ;incstack = 0
 11787                           ;CANSetMask@numBuffer stored from wreg
 11788  00465A  0100               	movlb	0	; () banked
 11789  00465C  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11790                           
 11791                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11792  00465E  0100               	movlb	0	; () banked
 11793  004660  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11794  004662  A4D8               	btfss	status,2,c
 11795  004664  D056               	goto	l5260
 11796                           
 11797                           ; BSR set to: 0
 11798  004666  0100               	movlb	0	; () banked
 11799  004668  297B               	incf	CANSetMask@type& (0+255),w,b
 11800  00466A  A4D8               	btfss	status,2,c
 11801  00466C  D052               	goto	l5260
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;inc\CANlib.h: 645: {
 11805                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11806  00466E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11807  004672  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11808  004676  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11809  00467A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11810  00467E  0E04               	movlw	4
 11811  004680  D006               	goto	u6110
 11812  004682                     u6115:
 11813  004682  0100               	movlb	0	; () banked
 11814  004684  90D8               	bcf	status,0,c
 11815  004686  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11816  004688  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11817  00468A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11818  00468C  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11819  00468E                     u6110:
 11820  00468E  2EE8               	decfsz	wreg,f,c
 11821  004690  D7F8               	goto	u6115
 11822  004692  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11823  004696  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11824  00469A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11825  00469E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11829  0046A2  0100               	movlb	0	; () banked
 11830  0046A4  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11831  0046A6  0100               	movlb	0	; () banked
 11832  0046A8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11833  0046AA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11834  0046AC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11835  0046AE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11839  0046B0  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11843  0046B4  0E07               	movlw	7
 11844  0046B6  0100               	movlb	0	; () banked
 11845  0046B8  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11846  0046BA  0100               	movlb	0	; () banked
 11847  0046BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11848  0046BE  0E00               	movlw	0
 11849  0046C0  0100               	movlb	0	; () banked
 11850  0046C2  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11851  0046C4  0100               	movlb	0	; () banked
 11852  0046C6  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11853  0046C8  0E00               	movlw	0
 11854  0046CA  0100               	movlb	0	; () banked
 11855  0046CC  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11856  0046CE  0100               	movlb	0	; () banked
 11857  0046D0  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11858  0046D2  0E00               	movlw	0
 11859  0046D4  0100               	movlb	0	; () banked
 11860  0046D6  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11861  0046D8  0100               	movlb	0	; () banked
 11862  0046DA  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11866  0046DC  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11867  0046E0  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11868  0046E4  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11869  0046E8  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11870  0046EC  0E05               	movlw	5
 11871  0046EE                     u6125:
 11872  0046EE  90D8               	bcf	status,0,c
 11873  0046F0  0100               	movlb	0	; () banked
 11874  0046F2  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11875  0046F4  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11876  0046F6  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11877  0046F8  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11878  0046FA  2EE8               	decfsz	wreg,f,c
 11879  0046FC  D7F8               	goto	u6125
 11880  0046FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11881  004702  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11882  004706  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11883  00470A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11887  00470E  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11888  004712                     l5260:
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;inc\CANlib.h: 653: }
 11892                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11893  004712  0E02               	movlw	2
 11894  004714  0100               	movlb	0	; () banked
 11895  004716  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11896  004718  A4D8               	btfss	status,2,c
 11897  00471A  D056               	goto	l5276
 11898                           
 11899                           ; BSR set to: 0
 11900  00471C  0100               	movlb	0	; () banked
 11901  00471E  297B               	incf	CANSetMask@type& (0+255),w,b
 11902  004720  A4D8               	btfss	status,2,c
 11903  004722  D052               	goto	l5276
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;inc\CANlib.h: 656: {
 11907                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11908  004724  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11909  004728  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11910  00472C  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11911  004730  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11912  004734  0E04               	movlw	4
 11913  004736  D006               	goto	u6150
 11914  004738                     u6155:
 11915  004738  0100               	movlb	0	; () banked
 11916  00473A  90D8               	bcf	status,0,c
 11917  00473C  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11918  00473E  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11919  004740  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11920  004742  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11921  004744                     u6150:
 11922  004744  2EE8               	decfsz	wreg,f,c
 11923  004746  D7F8               	goto	u6155
 11924  004748  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11925  00474C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11926  004750  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11927  004754  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11931  004758  0100               	movlb	0	; () banked
 11932  00475A  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11933  00475C  0100               	movlb	0	; () banked
 11934  00475E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11935  004760  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11936  004762  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11937  004764  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11941  004766  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11945  00476A  0E07               	movlw	7
 11946  00476C  0100               	movlb	0	; () banked
 11947  00476E  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11948  004770  0100               	movlb	0	; () banked
 11949  004772  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11950  004774  0E00               	movlw	0
 11951  004776  0100               	movlb	0	; () banked
 11952  004778  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11953  00477A  0100               	movlb	0	; () banked
 11954  00477C  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11955  00477E  0E00               	movlw	0
 11956  004780  0100               	movlb	0	; () banked
 11957  004782  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11958  004784  0100               	movlb	0	; () banked
 11959  004786  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11960  004788  0E00               	movlw	0
 11961  00478A  0100               	movlb	0	; () banked
 11962  00478C  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11963  00478E  0100               	movlb	0	; () banked
 11964  004790  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11968  004792  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11969  004796  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11970  00479A  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11971  00479E  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11972  0047A2  0E05               	movlw	5
 11973  0047A4                     u6165:
 11974  0047A4  90D8               	bcf	status,0,c
 11975  0047A6  0100               	movlb	0	; () banked
 11976  0047A8  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11977  0047AA  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11978  0047AC  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11979  0047AE  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11980  0047B0  2EE8               	decfsz	wreg,f,c
 11981  0047B2  D7F8               	goto	u6165
 11982  0047B4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11983  0047B8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11984  0047BC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11985  0047C0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 11989  0047C4  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11990  0047C8                     l5276:
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;inc\CANlib.h: 664: }
 11994                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11995  0047C8  0100               	movlb	0	; () banked
 11996  0047CA  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11997  0047CC  A4D8               	btfss	status,2,c
 11998  0047CE  D087               	goto	l5308
 11999                           
 12000                           ; BSR set to: 0
 12001  0047D0  0EF7               	movlw	247
 12002  0047D2  0100               	movlb	0	; () banked
 12003  0047D4  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12004  0047D6  A4D8               	btfss	status,2,c
 12005  0047D8  D082               	goto	l5308
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;inc\CANlib.h: 667: {
 12009                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 12010  0047DA  0100               	movlb	0	; () banked
 12011  0047DC  5177               	movf	CANSetMask@mask& (0+255),w,b
 12012  0047DE  0100               	movlb	0	; () banked
 12013  0047E0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12014  0047E2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12015  0047E4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12016  0047E6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 12020  0047E8  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 12024  0047EC  0E00               	movlw	0
 12025  0047EE  0100               	movlb	0	; () banked
 12026  0047F0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12027  0047F2  0100               	movlb	0	; () banked
 12028  0047F4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12029  0047F6  0EFF               	movlw	255
 12030  0047F8  0100               	movlb	0	; () banked
 12031  0047FA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12032  0047FC  0100               	movlb	0	; () banked
 12033  0047FE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12034  004800  0E00               	movlw	0
 12035  004802  0100               	movlb	0	; () banked
 12036  004804  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12037  004806  0100               	movlb	0	; () banked
 12038  004808  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12039  00480A  0E00               	movlw	0
 12040  00480C  0100               	movlb	0	; () banked
 12041  00480E  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12042  004810  0100               	movlb	0	; () banked
 12043  004812  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 12047  004814  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12048  004818  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12049  00481C  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12050  004820  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12051  004824  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12052  004828  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12053  00482C  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12054  004830  0100               	movlb	0	; () banked
 12055  004832  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12056  004834  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12057  004838  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12058  00483C  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12059  004840  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 12063  004844  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 12067  004848  0100               	movlb	0	; () banked
 12068  00484A  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12069  00484C  D003               	goto	l432
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 12073  00484E  010F               	movlb	15	; () banked
 12074  004850  8119               	bsf	25,0,b	;volatile
 12075  004852  D002               	goto	l433
 12076  004854                     l432:
 12077                           
 12078                           ; BSR set to: 0
 12079                           ;inc\CANlib.h: 677: else
 12080                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 12081  004854  010F               	movlb	15	; () banked
 12082  004856  9119               	bcf	25,0,b	;volatile
 12083  004858                     l433:
 12084                           
 12085                           ; BSR set to: 15
 12086                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 12087  004858  0100               	movlb	0	; () banked
 12088  00485A  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12089  00485C  D003               	goto	l434
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 12093  00485E  010F               	movlb	15	; () banked
 12094  004860  8319               	bsf	25,1,b	;volatile
 12095  004862  D002               	goto	l435
 12096  004864                     l434:
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;inc\CANlib.h: 682: else
 12100                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 12101  004864  010F               	movlb	15	; () banked
 12102  004866  9319               	bcf	25,1,b	;volatile
 12103  004868                     l435:
 12104                           
 12105                           ; BSR set to: 15
 12106                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 12107  004868  0100               	movlb	0	; () banked
 12108  00486A  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12109  00486C  D003               	goto	l436
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 12113  00486E  010F               	movlb	15	; () banked
 12114  004870  8B19               	bsf	25,5,b	;volatile
 12115  004872  D002               	goto	l437
 12116  004874                     l436:
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;inc\CANlib.h: 687: else
 12120                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 12121  004874  010F               	movlb	15	; () banked
 12122  004876  9B19               	bcf	25,5,b	;volatile
 12123  004878                     l437:
 12124                           
 12125                           ; BSR set to: 15
 12126                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 12127  004878  0100               	movlb	0	; () banked
 12128  00487A  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12129  00487C  D003               	goto	l438
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 12133  00487E  010F               	movlb	15	; () banked
 12134  004880  8D19               	bsf	25,6,b	;volatile
 12135  004882  D002               	goto	l439
 12136  004884                     l438:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;inc\CANlib.h: 692: else
 12140                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 12141  004884  010F               	movlb	15	; () banked
 12142  004886  9D19               	bcf	25,6,b	;volatile
 12143  004888                     l439:
 12144                           
 12145                           ; BSR set to: 15
 12146                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12147  004888  0100               	movlb	0	; () banked
 12148  00488A  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12149  00488C  D003               	goto	l440
 12150                           
 12151                           ; BSR set to: 0
 12152                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12153  00488E  010F               	movlb	15	; () banked
 12154  004890  8F19               	bsf	25,7,b	;volatile
 12155  004892  D002               	goto	l5302
 12156  004894                     l440:
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;inc\CANlib.h: 697: else
 12160                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12161  004894  010F               	movlb	15	; () banked
 12162  004896  9F19               	bcf	25,7,b	;volatile
 12163  004898                     l5302:
 12164                           
 12165                           ; BSR set to: 15
 12166                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12167  004898  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12168  00489C  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12169  0048A0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12170  0048A4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12171  0048A8  0E16               	movlw	22
 12172  0048AA  D006               	goto	u6240
 12173  0048AC                     u6245:
 12174  0048AC  0100               	movlb	0	; () banked
 12175  0048AE  90D8               	bcf	status,0,c
 12176  0048B0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12177  0048B2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12178  0048B4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12179  0048B6  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12180  0048B8                     u6240:
 12181  0048B8  2EE8               	decfsz	wreg,f,c
 12182  0048BA  D7F8               	goto	u6245
 12183  0048BC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12184  0048C0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12185  0048C4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12186  0048C8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12190  0048CC  0100               	movlb	0	; () banked
 12191  0048CE  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12192  0048D0  0100               	movlb	0	; () banked
 12193  0048D2  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12194  0048D4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12195  0048D6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12196  0048D8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12200  0048DA  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12201  0048DE                     l5308:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;inc\CANlib.h: 703: }
 12205                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12206  0048DE  0E02               	movlw	2
 12207  0048E0  0100               	movlb	0	; () banked
 12208  0048E2  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12209  0048E4  A4D8               	btfss	status,2,c
 12210  0048E6  0012               	return	
 12211                           
 12212                           ; BSR set to: 0
 12213  0048E8  0EF7               	movlw	247
 12214  0048EA  0100               	movlb	0	; () banked
 12215  0048EC  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12216  0048EE  A4D8               	btfss	status,2,c
 12217  0048F0  0012               	return	
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;inc\CANlib.h: 706: {
 12221                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12222  0048F2  0100               	movlb	0	; () banked
 12223  0048F4  5177               	movf	CANSetMask@mask& (0+255),w,b
 12224  0048F6  0100               	movlb	0	; () banked
 12225  0048F8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12226  0048FA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12227  0048FC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12228  0048FE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12232  004900  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12236  004904  0E00               	movlw	0
 12237  004906  0100               	movlb	0	; () banked
 12238  004908  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12239  00490A  0100               	movlb	0	; () banked
 12240  00490C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12241  00490E  0EFF               	movlw	255
 12242  004910  0100               	movlb	0	; () banked
 12243  004912  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12244  004914  0100               	movlb	0	; () banked
 12245  004916  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12246  004918  0E00               	movlw	0
 12247  00491A  0100               	movlb	0	; () banked
 12248  00491C  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12249  00491E  0100               	movlb	0	; () banked
 12250  004920  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12251  004922  0E00               	movlw	0
 12252  004924  0100               	movlb	0	; () banked
 12253  004926  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12254  004928  0100               	movlb	0	; () banked
 12255  00492A  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12259  00492C  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12260  004930  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12261  004934  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12262  004938  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12263  00493C  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12264  004940  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12265  004944  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12266  004948  0100               	movlb	0	; () banked
 12267  00494A  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12268  00494C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12269  004950  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12270  004954  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12271  004958  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12275  00495C  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12279  004960  0100               	movlb	0	; () banked
 12280  004962  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12281  004964  D003               	goto	l443
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12285  004966  010F               	movlb	15	; () banked
 12286  004968  811D               	bsf	29,0,b	;volatile
 12287  00496A  D002               	goto	l444
 12288  00496C                     l443:
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;inc\CANlib.h: 716: else
 12292                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12293  00496C  010F               	movlb	15	; () banked
 12294  00496E  911D               	bcf	29,0,b	;volatile
 12295  004970                     l444:
 12296                           
 12297                           ; BSR set to: 15
 12298                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12299  004970  0100               	movlb	0	; () banked
 12300  004972  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12301  004974  D003               	goto	l445
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12305  004976  010F               	movlb	15	; () banked
 12306  004978  831D               	bsf	29,1,b	;volatile
 12307  00497A  D002               	goto	l446
 12308  00497C                     l445:
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;inc\CANlib.h: 721: else
 12312                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12313  00497C  010F               	movlb	15	; () banked
 12314  00497E  931D               	bcf	29,1,b	;volatile
 12315  004980                     l446:
 12316                           
 12317                           ; BSR set to: 15
 12318                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12319  004980  0100               	movlb	0	; () banked
 12320  004982  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12321  004984  D003               	goto	l447
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12325  004986  010F               	movlb	15	; () banked
 12326  004988  8B1D               	bsf	29,5,b	;volatile
 12327  00498A  D002               	goto	l448
 12328  00498C                     l447:
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;inc\CANlib.h: 726: else
 12332                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12333  00498C  010F               	movlb	15	; () banked
 12334  00498E  9B1D               	bcf	29,5,b	;volatile
 12335  004990                     l448:
 12336                           
 12337                           ; BSR set to: 15
 12338                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12339  004990  0100               	movlb	0	; () banked
 12340  004992  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12341  004994  D003               	goto	l449
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12345  004996  010F               	movlb	15	; () banked
 12346  004998  8D1D               	bsf	29,6,b	;volatile
 12347  00499A  D002               	goto	l450
 12348  00499C                     l449:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;inc\CANlib.h: 731: else
 12352                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12353  00499C  010F               	movlb	15	; () banked
 12354  00499E  9D1D               	bcf	29,6,b	;volatile
 12355  0049A0                     l450:
 12356                           
 12357                           ; BSR set to: 15
 12358                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12359  0049A0  0100               	movlb	0	; () banked
 12360  0049A2  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12361  0049A4  D003               	goto	l451
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12365  0049A6  010F               	movlb	15	; () banked
 12366  0049A8  8F1D               	bsf	29,7,b	;volatile
 12367  0049AA  D002               	goto	l5334
 12368  0049AC                     l451:
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;inc\CANlib.h: 736: else
 12372                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12373  0049AC  010F               	movlb	15	; () banked
 12374  0049AE  9F1D               	bcf	29,7,b	;volatile
 12375  0049B0                     l5334:
 12376                           
 12377                           ; BSR set to: 15
 12378                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12379  0049B0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12380  0049B4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12381  0049B8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12382  0049BC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12383  0049C0  0E16               	movlw	22
 12384  0049C2  D006               	goto	u6320
 12385  0049C4                     u6325:
 12386  0049C4  0100               	movlb	0	; () banked
 12387  0049C6  90D8               	bcf	status,0,c
 12388  0049C8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12389  0049CA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12390  0049CC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12391  0049CE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12392  0049D0                     u6320:
 12393  0049D0  2EE8               	decfsz	wreg,f,c
 12394  0049D2  D7F8               	goto	u6325
 12395  0049D4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12396  0049D8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12397  0049DC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12398  0049E0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12402  0049E4  0100               	movlb	0	; () banked
 12403  0049E6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12404  0049E8  0100               	movlb	0	; () banked
 12405  0049EA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12406  0049EC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12407  0049EE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12408  0049F0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12412  0049F2  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12413  0049F6  0012               	return	
 12414  0049F8                     __end_of_CANSetMask:
 12415                           	opt stack 0
 12416                           tblptru	equ	0xFF8
 12417                           tblptrh	equ	0xFF7
 12418                           tblptrl	equ	0xFF6
 12419                           tablat	equ	0xFF5
 12420                           prodh	equ	0xFF4
 12421                           prodl	equ	0xFF3
 12422                           intcon	equ	0xFF2
 12423                           intcon2	equ	0xFF1
 12424                           postinc0	equ	0xFEE
 12425                           wreg	equ	0xFE8
 12426                           postdec1	equ	0xFE5
 12427                           fsr1l	equ	0xFE1
 12428                           indf2	equ	0xFDF
 12429                           postinc2	equ	0xFDE
 12430                           postdec2	equ	0xFDD
 12431                           fsr2h	equ	0xFDA
 12432                           fsr2l	equ	0xFD9
 12433                           status	equ	0xFD8
 12434                           
 12435 ;; *************** function _CANSetFilter *****************
 12436 ;; Defined at:
 12437 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12438 ;; Parameters:    Size  Location     Type
 12439 ;;  numBuffer       1    wreg     enum E16350
 12440 ;;  filter          4   23[BANK0 ] unsigned long 
 12441 ;;  type            1   27[BANK0 ] enum E16313
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12444 ;;  tamp            4   33[BANK0 ] unsigned long 
 12445 ;; Return value:  Size  Location     Type
 12446 ;;		None               void
 12447 ;; Registers used:
 12448 ;;		wreg, status,2, status,0
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 0/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12454 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12455 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;Total ram usage:       14 bytes
 12459 ;; Hardware stack levels used:    1
 12460 ;; Hardware stack levels required when called:    4
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_CANInitialize
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468                           	psect	text32
 12469  000D52                     __ptext32:
 12470                           	opt stack 0
 12471  000D52                     _CANSetFilter:
 12472                           	opt stack 24
 12473                           
 12474                           ; BSR set to: 0
 12475                           ;incstack = 0
 12476                           ;CANSetFilter@numBuffer stored from wreg
 12477  000D52  0100               	movlb	0	; () banked
 12478  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12479                           
 12480                           ;inc\CANlib.h: 751: unsigned long tamp;
 12481                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12482  000D56  0100               	movlb	0	; () banked
 12483  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12484  000D5A  0100               	movlb	0	; () banked
 12485  000D5C  A4D8               	btfss	status,2,c
 12486  000D5E  D058               	goto	l5358
 12487                           
 12488                           ; BSR set to: 0
 12489  000D60  0100               	movlb	0	; () banked
 12490  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12491  000D64  A4D8               	btfss	status,2,c
 12492  000D66  D054               	goto	l5358
 12493                           
 12494                           ; BSR set to: 0
 12495                           ;inc\CANlib.h: 754: {
 12496                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12497  000D68  010F               	movlb	15	; () banked
 12498  000D6A  9701               	bcf	1,3,b	;volatile
 12499                           
 12500                           ; BSR set to: 15
 12501                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12502  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12503  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12504  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12505  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12506  000D7C  0E04               	movlw	4
 12507  000D7E  D006               	goto	u6350
 12508  000D80                     u6355:
 12509  000D80  0100               	movlb	0	; () banked
 12510  000D82  90D8               	bcf	status,0,c
 12511  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12512  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12513  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12514  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12515  000D8C                     u6350:
 12516  000D8C  2EE8               	decfsz	wreg,f,c
 12517  000D8E  D7F8               	goto	u6355
 12518  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12519  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12520  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12521  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12525  000DA0  0100               	movlb	0	; () banked
 12526  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12527  000DA4  0100               	movlb	0	; () banked
 12528  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12529  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12530  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12531  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12535  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12539  000DB2  0E07               	movlw	7
 12540  000DB4  0100               	movlb	0	; () banked
 12541  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12542  000DB8  0100               	movlb	0	; () banked
 12543  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12544  000DBC  0E00               	movlw	0
 12545  000DBE  0100               	movlb	0	; () banked
 12546  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12547  000DC2  0100               	movlb	0	; () banked
 12548  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12549  000DC6  0E00               	movlw	0
 12550  000DC8  0100               	movlb	0	; () banked
 12551  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12552  000DCC  0100               	movlb	0	; () banked
 12553  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12554  000DD0  0E00               	movlw	0
 12555  000DD2  0100               	movlb	0	; () banked
 12556  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12557  000DD6  0100               	movlb	0	; () banked
 12558  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12562  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12563  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12564  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12565  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12566  000DEA  0E05               	movlw	5
 12567  000DEC                     u6365:
 12568  000DEC  90D8               	bcf	status,0,c
 12569  000DEE  0100               	movlb	0	; () banked
 12570  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12571  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12572  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12573  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12574  000DF8  2EE8               	decfsz	wreg,f,c
 12575  000DFA  D7F8               	goto	u6365
 12576  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12577  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12578  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12579  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12583  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12584  000E10                     l5358:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;inc\CANlib.h: 764: }
 12588                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12589  000E10  0100               	movlb	0	; () banked
 12590  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12591  000E14  A4D8               	btfss	status,2,c
 12592  000E16  D058               	goto	l5376
 12593                           
 12594                           ; BSR set to: 0
 12595  000E18  0100               	movlb	0	; () banked
 12596  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12597  000E1C  A4D8               	btfss	status,2,c
 12598  000E1E  D054               	goto	l5376
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;inc\CANlib.h: 767: {
 12602                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12603  000E20  010F               	movlb	15	; () banked
 12604  000E22  9705               	bcf	5,3,b	;volatile
 12605                           
 12606                           ; BSR set to: 15
 12607                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12608  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12609  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12610  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12611  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12612  000E34  0E04               	movlw	4
 12613  000E36  D006               	goto	u6390
 12614  000E38                     u6395:
 12615  000E38  0100               	movlb	0	; () banked
 12616  000E3A  90D8               	bcf	status,0,c
 12617  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12618  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12619  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12620  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12621  000E44                     u6390:
 12622  000E44  2EE8               	decfsz	wreg,f,c
 12623  000E46  D7F8               	goto	u6395
 12624  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12625  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12626  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12627  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12631  000E58  0100               	movlb	0	; () banked
 12632  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12633  000E5C  0100               	movlb	0	; () banked
 12634  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12635  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12636  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12637  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12641  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12645  000E6A  0E07               	movlw	7
 12646  000E6C  0100               	movlb	0	; () banked
 12647  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12648  000E70  0100               	movlb	0	; () banked
 12649  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12650  000E74  0E00               	movlw	0
 12651  000E76  0100               	movlb	0	; () banked
 12652  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12653  000E7A  0100               	movlb	0	; () banked
 12654  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12655  000E7E  0E00               	movlw	0
 12656  000E80  0100               	movlb	0	; () banked
 12657  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12658  000E84  0100               	movlb	0	; () banked
 12659  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12660  000E88  0E00               	movlw	0
 12661  000E8A  0100               	movlb	0	; () banked
 12662  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12663  000E8E  0100               	movlb	0	; () banked
 12664  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12668  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12669  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12670  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12671  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12672  000EA2  0E05               	movlw	5
 12673  000EA4                     u6405:
 12674  000EA4  90D8               	bcf	status,0,c
 12675  000EA6  0100               	movlb	0	; () banked
 12676  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12677  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12678  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12679  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12680  000EB0  2EE8               	decfsz	wreg,f,c
 12681  000EB2  D7F8               	goto	u6405
 12682  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12683  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12684  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12685  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12689  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12690  000EC8                     l5376:
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;inc\CANlib.h: 777: }
 12694                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12695  000EC8  0E02               	movlw	2
 12696  000ECA  0100               	movlb	0	; () banked
 12697  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12698  000ECE  A4D8               	btfss	status,2,c
 12699  000ED0  D058               	goto	l5394
 12700                           
 12701                           ; BSR set to: 0
 12702  000ED2  0100               	movlb	0	; () banked
 12703  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12704  000ED6  A4D8               	btfss	status,2,c
 12705  000ED8  D054               	goto	l5394
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;inc\CANlib.h: 780: {
 12709                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12710  000EDA  010F               	movlb	15	; () banked
 12711  000EDC  9709               	bcf	9,3,b	;volatile
 12712                           
 12713                           ; BSR set to: 15
 12714                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12715  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12716  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12717  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12718  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12719  000EEE  0E04               	movlw	4
 12720  000EF0  D006               	goto	u6430
 12721  000EF2                     u6435:
 12722  000EF2  0100               	movlb	0	; () banked
 12723  000EF4  90D8               	bcf	status,0,c
 12724  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12725  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12726  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12727  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12728  000EFE                     u6430:
 12729  000EFE  2EE8               	decfsz	wreg,f,c
 12730  000F00  D7F8               	goto	u6435
 12731  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12732  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12733  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12734  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12738  000F12  0100               	movlb	0	; () banked
 12739  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12740  000F16  0100               	movlb	0	; () banked
 12741  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12742  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12743  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12744  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12748  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12752  000F24  0E07               	movlw	7
 12753  000F26  0100               	movlb	0	; () banked
 12754  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12755  000F2A  0100               	movlb	0	; () banked
 12756  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12757  000F2E  0E00               	movlw	0
 12758  000F30  0100               	movlb	0	; () banked
 12759  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12760  000F34  0100               	movlb	0	; () banked
 12761  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12762  000F38  0E00               	movlw	0
 12763  000F3A  0100               	movlb	0	; () banked
 12764  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12765  000F3E  0100               	movlb	0	; () banked
 12766  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12767  000F42  0E00               	movlw	0
 12768  000F44  0100               	movlb	0	; () banked
 12769  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12770  000F48  0100               	movlb	0	; () banked
 12771  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12775  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12776  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12777  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12778  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12779  000F5C  0E05               	movlw	5
 12780  000F5E                     u6445:
 12781  000F5E  90D8               	bcf	status,0,c
 12782  000F60  0100               	movlb	0	; () banked
 12783  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12784  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12785  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12786  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12787  000F6A  2EE8               	decfsz	wreg,f,c
 12788  000F6C  D7F8               	goto	u6445
 12789  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12790  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12791  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12792  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12796  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12797  000F82                     l5394:
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;inc\CANlib.h: 790: }
 12801                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12802  000F82  0E03               	movlw	3
 12803  000F84  0100               	movlb	0	; () banked
 12804  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12805  000F88  A4D8               	btfss	status,2,c
 12806  000F8A  D058               	goto	l5412
 12807                           
 12808                           ; BSR set to: 0
 12809  000F8C  0100               	movlb	0	; () banked
 12810  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12811  000F90  A4D8               	btfss	status,2,c
 12812  000F92  D054               	goto	l5412
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;inc\CANlib.h: 793: {
 12816                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12817  000F94  010F               	movlb	15	; () banked
 12818  000F96  970D               	bcf	13,3,b	;volatile
 12819                           
 12820                           ; BSR set to: 15
 12821                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12822  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12823  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12824  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12825  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12826  000FA8  0E04               	movlw	4
 12827  000FAA  D006               	goto	u6470
 12828  000FAC                     u6475:
 12829  000FAC  0100               	movlb	0	; () banked
 12830  000FAE  90D8               	bcf	status,0,c
 12831  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12832  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12833  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12834  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12835  000FB8                     u6470:
 12836  000FB8  2EE8               	decfsz	wreg,f,c
 12837  000FBA  D7F8               	goto	u6475
 12838  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12839  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12840  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12841  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12845  000FCC  0100               	movlb	0	; () banked
 12846  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12847  000FD0  0100               	movlb	0	; () banked
 12848  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12849  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12850  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12851  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12855  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12859  000FDE  0E07               	movlw	7
 12860  000FE0  0100               	movlb	0	; () banked
 12861  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12862  000FE4  0100               	movlb	0	; () banked
 12863  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12864  000FE8  0E00               	movlw	0
 12865  000FEA  0100               	movlb	0	; () banked
 12866  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12867  000FEE  0100               	movlb	0	; () banked
 12868  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12869  000FF2  0E00               	movlw	0
 12870  000FF4  0100               	movlb	0	; () banked
 12871  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12872  000FF8  0100               	movlb	0	; () banked
 12873  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12874  000FFC  0E00               	movlw	0
 12875  000FFE  0100               	movlb	0	; () banked
 12876  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12877  001002  0100               	movlb	0	; () banked
 12878  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12882  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12883  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12884  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12885  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12886  001016  0E05               	movlw	5
 12887  001018                     u6485:
 12888  001018  90D8               	bcf	status,0,c
 12889  00101A  0100               	movlb	0	; () banked
 12890  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12891  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12892  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12893  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12894  001024  2EE8               	decfsz	wreg,f,c
 12895  001026  D7F8               	goto	u6485
 12896  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12897  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12898  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12899  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12903  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12904  00103C                     l5412:
 12905                           
 12906                           ; BSR set to: 0
 12907                           ;inc\CANlib.h: 803: }
 12908                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12909  00103C  0E04               	movlw	4
 12910  00103E  0100               	movlb	0	; () banked
 12911  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12912  001042  A4D8               	btfss	status,2,c
 12913  001044  D058               	goto	l5430
 12914                           
 12915                           ; BSR set to: 0
 12916  001046  0100               	movlb	0	; () banked
 12917  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12918  00104A  A4D8               	btfss	status,2,c
 12919  00104C  D054               	goto	l5430
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;inc\CANlib.h: 806: {
 12923                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12924  00104E  010F               	movlb	15	; () banked
 12925  001050  9711               	bcf	17,3,b	;volatile
 12926                           
 12927                           ; BSR set to: 15
 12928                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12929  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12930  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12931  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12932  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12933  001062  0E04               	movlw	4
 12934  001064  D006               	goto	u6510
 12935  001066                     u6515:
 12936  001066  0100               	movlb	0	; () banked
 12937  001068  90D8               	bcf	status,0,c
 12938  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12939  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12940  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12941  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12942  001072                     u6510:
 12943  001072  2EE8               	decfsz	wreg,f,c
 12944  001074  D7F8               	goto	u6515
 12945  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12946  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12947  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12948  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12952  001086  0100               	movlb	0	; () banked
 12953  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12954  00108A  0100               	movlb	0	; () banked
 12955  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12956  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12957  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12958  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12962  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12966  001098  0E07               	movlw	7
 12967  00109A  0100               	movlb	0	; () banked
 12968  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12969  00109E  0100               	movlb	0	; () banked
 12970  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12971  0010A2  0E00               	movlw	0
 12972  0010A4  0100               	movlb	0	; () banked
 12973  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12974  0010A8  0100               	movlb	0	; () banked
 12975  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12976  0010AC  0E00               	movlw	0
 12977  0010AE  0100               	movlb	0	; () banked
 12978  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12979  0010B2  0100               	movlb	0	; () banked
 12980  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12981  0010B6  0E00               	movlw	0
 12982  0010B8  0100               	movlb	0	; () banked
 12983  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12984  0010BC  0100               	movlb	0	; () banked
 12985  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 12989  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12990  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12991  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12992  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12993  0010D0  0E05               	movlw	5
 12994  0010D2                     u6525:
 12995  0010D2  90D8               	bcf	status,0,c
 12996  0010D4  0100               	movlb	0	; () banked
 12997  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12998  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12999  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13000  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13001  0010DE  2EE8               	decfsz	wreg,f,c
 13002  0010E0  D7F8               	goto	u6525
 13003  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13004  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13005  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13006  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 13010  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 13011  0010F6                     l5430:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;inc\CANlib.h: 816: }
 13015                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 13016  0010F6  0E05               	movlw	5
 13017  0010F8  0100               	movlb	0	; () banked
 13018  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13019  0010FC  A4D8               	btfss	status,2,c
 13020  0010FE  D058               	goto	l5448
 13021                           
 13022                           ; BSR set to: 0
 13023  001100  0100               	movlb	0	; () banked
 13024  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 13025  001104  A4D8               	btfss	status,2,c
 13026  001106  D054               	goto	l5448
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;inc\CANlib.h: 819: {
 13030                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 13031  001108  010F               	movlb	15	; () banked
 13032  00110A  9715               	bcf	21,3,b	;volatile
 13033                           
 13034                           ; BSR set to: 15
 13035                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 13036  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13037  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13038  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13039  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13040  00111C  0E04               	movlw	4
 13041  00111E  D006               	goto	u6550
 13042  001120                     u6555:
 13043  001120  0100               	movlb	0	; () banked
 13044  001122  90D8               	bcf	status,0,c
 13045  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13046  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13047  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13048  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13049  00112C                     u6550:
 13050  00112C  2EE8               	decfsz	wreg,f,c
 13051  00112E  D7F8               	goto	u6555
 13052  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13053  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13054  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13055  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 13059  001140  0100               	movlb	0	; () banked
 13060  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13061  001144  0100               	movlb	0	; () banked
 13062  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13063  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13064  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13065  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 13069  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 13073  001152  0E07               	movlw	7
 13074  001154  0100               	movlb	0	; () banked
 13075  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13076  001158  0100               	movlb	0	; () banked
 13077  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13078  00115C  0E00               	movlw	0
 13079  00115E  0100               	movlb	0	; () banked
 13080  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13081  001162  0100               	movlb	0	; () banked
 13082  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13083  001166  0E00               	movlw	0
 13084  001168  0100               	movlb	0	; () banked
 13085  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13086  00116C  0100               	movlb	0	; () banked
 13087  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13088  001170  0E00               	movlw	0
 13089  001172  0100               	movlb	0	; () banked
 13090  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13091  001176  0100               	movlb	0	; () banked
 13092  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 13096  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13097  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13098  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13099  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13100  00118A  0E05               	movlw	5
 13101  00118C                     u6565:
 13102  00118C  90D8               	bcf	status,0,c
 13103  00118E  0100               	movlb	0	; () banked
 13104  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13105  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13106  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13107  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13108  001198  2EE8               	decfsz	wreg,f,c
 13109  00119A  D7F8               	goto	u6565
 13110  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13111  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13112  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13113  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 13117  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13118  0011B0                     l5448:
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;inc\CANlib.h: 829: }
 13122                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13123  0011B0  0100               	movlb	0	; () banked
 13124  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13125  0011B4  0100               	movlb	0	; () banked
 13126  0011B6  A4D8               	btfss	status,2,c
 13127  0011B8  D089               	goto	l5482
 13128                           
 13129                           ; BSR set to: 0
 13130  0011BA  0EF7               	movlw	247
 13131  0011BC  0100               	movlb	0	; () banked
 13132  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13133  0011C0  A4D8               	btfss	status,2,c
 13134  0011C2  D084               	goto	l5482
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;inc\CANlib.h: 833: {
 13138                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 13139  0011C4  010F               	movlb	15	; () banked
 13140  0011C6  8701               	bsf	1,3,b	;volatile
 13141                           
 13142                           ; BSR set to: 15
 13143                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13144  0011C8  0100               	movlb	0	; () banked
 13145  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13146  0011CC  0100               	movlb	0	; () banked
 13147  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13148  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13149  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13150  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13154  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13158  0011DA  0E00               	movlw	0
 13159  0011DC  0100               	movlb	0	; () banked
 13160  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13161  0011E0  0100               	movlb	0	; () banked
 13162  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13163  0011E4  0EFF               	movlw	255
 13164  0011E6  0100               	movlb	0	; () banked
 13165  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13166  0011EA  0100               	movlb	0	; () banked
 13167  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13168  0011EE  0E00               	movlw	0
 13169  0011F0  0100               	movlb	0	; () banked
 13170  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13171  0011F4  0100               	movlb	0	; () banked
 13172  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13173  0011F8  0E00               	movlw	0
 13174  0011FA  0100               	movlb	0	; () banked
 13175  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13176  0011FE  0100               	movlb	0	; () banked
 13177  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13181  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13182  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13183  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13184  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13185  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13186  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13187  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13188  00121E  0100               	movlb	0	; () banked
 13189  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13190  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13191  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13192  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13193  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13197  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13201  001236  0100               	movlb	0	; () banked
 13202  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13203  00123A  D003               	goto	l463
 13204                           
 13205                           ; BSR set to: 0
 13206                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13207  00123C  010F               	movlb	15	; () banked
 13208  00123E  8101               	bsf	1,0,b	;volatile
 13209  001240  D002               	goto	l464
 13210  001242                     l463:
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;inc\CANlib.h: 845: else
 13214                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13215  001242  010F               	movlb	15	; () banked
 13216  001244  9101               	bcf	1,0,b	;volatile
 13217  001246                     l464:
 13218                           
 13219                           ; BSR set to: 15
 13220                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13221  001246  0100               	movlb	0	; () banked
 13222  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13223  00124A  D003               	goto	l465
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13227  00124C  010F               	movlb	15	; () banked
 13228  00124E  8301               	bsf	1,1,b	;volatile
 13229  001250  D002               	goto	l466
 13230  001252                     l465:
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;inc\CANlib.h: 850: else
 13234                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13235  001252  010F               	movlb	15	; () banked
 13236  001254  9301               	bcf	1,1,b	;volatile
 13237  001256                     l466:
 13238                           
 13239                           ; BSR set to: 15
 13240                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13241  001256  0100               	movlb	0	; () banked
 13242  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13243  00125A  D003               	goto	l467
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13247  00125C  010F               	movlb	15	; () banked
 13248  00125E  8B01               	bsf	1,5,b	;volatile
 13249  001260  D002               	goto	l468
 13250  001262                     l467:
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;inc\CANlib.h: 855: else
 13254                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13255  001262  010F               	movlb	15	; () banked
 13256  001264  9B01               	bcf	1,5,b	;volatile
 13257  001266                     l468:
 13258                           
 13259                           ; BSR set to: 15
 13260                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13261  001266  0100               	movlb	0	; () banked
 13262  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13263  00126A  D003               	goto	l469
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13267  00126C  010F               	movlb	15	; () banked
 13268  00126E  8D01               	bsf	1,6,b	;volatile
 13269  001270  D002               	goto	l470
 13270  001272                     l469:
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;inc\CANlib.h: 860: else
 13274                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13275  001272  010F               	movlb	15	; () banked
 13276  001274  9D01               	bcf	1,6,b	;volatile
 13277  001276                     l470:
 13278                           
 13279                           ; BSR set to: 15
 13280                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13281  001276  0100               	movlb	0	; () banked
 13282  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13283  00127A  D003               	goto	l471
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13287  00127C  010F               	movlb	15	; () banked
 13288  00127E  8F01               	bsf	1,7,b	;volatile
 13289  001280  D002               	goto	l5476
 13290  001282                     l471:
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;inc\CANlib.h: 865: else
 13294                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13295  001282  010F               	movlb	15	; () banked
 13296  001284  9F01               	bcf	1,7,b	;volatile
 13297  001286                     l5476:
 13298                           
 13299                           ; BSR set to: 15
 13300                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13301  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13302  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13303  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13304  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13305  001296  0E16               	movlw	22
 13306  001298  D006               	goto	u6640
 13307  00129A                     u6645:
 13308  00129A  0100               	movlb	0	; () banked
 13309  00129C  90D8               	bcf	status,0,c
 13310  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13311  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13312  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13313  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13314  0012A6                     u6640:
 13315  0012A6  2EE8               	decfsz	wreg,f,c
 13316  0012A8  D7F8               	goto	u6645
 13317  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13318  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13319  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13320  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13324  0012BA  0100               	movlb	0	; () banked
 13325  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13326  0012BE  0100               	movlb	0	; () banked
 13327  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13328  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13329  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13330  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13334  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13335  0012CC                     l5482:
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;inc\CANlib.h: 871: }
 13339                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13340  0012CC  0100               	movlb	0	; () banked
 13341  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13342  0012D0  A4D8               	btfss	status,2,c
 13343  0012D2  D089               	goto	l5516
 13344                           
 13345                           ; BSR set to: 0
 13346  0012D4  0EF7               	movlw	247
 13347  0012D6  0100               	movlb	0	; () banked
 13348  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13349  0012DA  A4D8               	btfss	status,2,c
 13350  0012DC  D084               	goto	l5516
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;inc\CANlib.h: 874: {
 13354                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13355  0012DE  010F               	movlb	15	; () banked
 13356  0012E0  8705               	bsf	5,3,b	;volatile
 13357                           
 13358                           ; BSR set to: 15
 13359                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13360  0012E2  0100               	movlb	0	; () banked
 13361  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13362  0012E6  0100               	movlb	0	; () banked
 13363  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13364  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13365  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13366  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13370  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13374  0012F4  0E00               	movlw	0
 13375  0012F6  0100               	movlb	0	; () banked
 13376  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13377  0012FA  0100               	movlb	0	; () banked
 13378  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13379  0012FE  0EFF               	movlw	255
 13380  001300  0100               	movlb	0	; () banked
 13381  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13382  001304  0100               	movlb	0	; () banked
 13383  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13384  001308  0E00               	movlw	0
 13385  00130A  0100               	movlb	0	; () banked
 13386  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13387  00130E  0100               	movlb	0	; () banked
 13388  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13389  001312  0E00               	movlw	0
 13390  001314  0100               	movlb	0	; () banked
 13391  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13392  001318  0100               	movlb	0	; () banked
 13393  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13397  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13398  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13399  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13400  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13401  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13402  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13403  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13404  001338  0100               	movlb	0	; () banked
 13405  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13406  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13407  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13408  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13409  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13413  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13417  001350  0100               	movlb	0	; () banked
 13418  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13419  001354  D003               	goto	l474
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13423  001356  010F               	movlb	15	; () banked
 13424  001358  8105               	bsf	5,0,b	;volatile
 13425  00135A  D002               	goto	l475
 13426  00135C                     l474:
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;inc\CANlib.h: 886: else
 13430                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13431  00135C  010F               	movlb	15	; () banked
 13432  00135E  9105               	bcf	5,0,b	;volatile
 13433  001360                     l475:
 13434                           
 13435                           ; BSR set to: 15
 13436                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13437  001360  0100               	movlb	0	; () banked
 13438  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13439  001364  D003               	goto	l476
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13443  001366  010F               	movlb	15	; () banked
 13444  001368  8305               	bsf	5,1,b	;volatile
 13445  00136A  D002               	goto	l477
 13446  00136C                     l476:
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;inc\CANlib.h: 891: else
 13450                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13451  00136C  010F               	movlb	15	; () banked
 13452  00136E  9305               	bcf	5,1,b	;volatile
 13453  001370                     l477:
 13454                           
 13455                           ; BSR set to: 15
 13456                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13457  001370  0100               	movlb	0	; () banked
 13458  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13459  001374  D003               	goto	l478
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13463  001376  010F               	movlb	15	; () banked
 13464  001378  8B05               	bsf	5,5,b	;volatile
 13465  00137A  D002               	goto	l479
 13466  00137C                     l478:
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;inc\CANlib.h: 896: else
 13470                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13471  00137C  010F               	movlb	15	; () banked
 13472  00137E  9B05               	bcf	5,5,b	;volatile
 13473  001380                     l479:
 13474                           
 13475                           ; BSR set to: 15
 13476                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13477  001380  0100               	movlb	0	; () banked
 13478  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13479  001384  D003               	goto	l480
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13483  001386  010F               	movlb	15	; () banked
 13484  001388  8D05               	bsf	5,6,b	;volatile
 13485  00138A  D002               	goto	l481
 13486  00138C                     l480:
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;inc\CANlib.h: 901: else
 13490                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13491  00138C  010F               	movlb	15	; () banked
 13492  00138E  9D05               	bcf	5,6,b	;volatile
 13493  001390                     l481:
 13494                           
 13495                           ; BSR set to: 15
 13496                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13497  001390  0100               	movlb	0	; () banked
 13498  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13499  001394  D003               	goto	l482
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13503  001396  010F               	movlb	15	; () banked
 13504  001398  8F05               	bsf	5,7,b	;volatile
 13505  00139A  D002               	goto	l5510
 13506  00139C                     l482:
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;inc\CANlib.h: 906: else
 13510                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13511  00139C  010F               	movlb	15	; () banked
 13512  00139E  9F05               	bcf	5,7,b	;volatile
 13513  0013A0                     l5510:
 13514                           
 13515                           ; BSR set to: 15
 13516                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13517  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13518  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13519  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13520  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13521  0013B0  0E16               	movlw	22
 13522  0013B2  D006               	goto	u6720
 13523  0013B4                     u6725:
 13524  0013B4  0100               	movlb	0	; () banked
 13525  0013B6  90D8               	bcf	status,0,c
 13526  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13527  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13528  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13529  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13530  0013C0                     u6720:
 13531  0013C0  2EE8               	decfsz	wreg,f,c
 13532  0013C2  D7F8               	goto	u6725
 13533  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13534  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13535  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13536  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13540  0013D4  0100               	movlb	0	; () banked
 13541  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13542  0013D8  0100               	movlb	0	; () banked
 13543  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13544  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13545  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13546  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13550  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13551  0013E6                     l5516:
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;inc\CANlib.h: 912: }
 13555                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13556  0013E6  0E02               	movlw	2
 13557  0013E8  0100               	movlb	0	; () banked
 13558  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13559  0013EC  A4D8               	btfss	status,2,c
 13560  0013EE  D089               	goto	l5550
 13561                           
 13562                           ; BSR set to: 0
 13563  0013F0  0EF7               	movlw	247
 13564  0013F2  0100               	movlb	0	; () banked
 13565  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13566  0013F6  A4D8               	btfss	status,2,c
 13567  0013F8  D084               	goto	l5550
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;inc\CANlib.h: 916: {
 13571                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13572  0013FA  010F               	movlb	15	; () banked
 13573  0013FC  8709               	bsf	9,3,b	;volatile
 13574                           
 13575                           ; BSR set to: 15
 13576                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13577  0013FE  0100               	movlb	0	; () banked
 13578  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13579  001402  0100               	movlb	0	; () banked
 13580  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13581  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13582  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13583  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13587  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13591  001410  0E00               	movlw	0
 13592  001412  0100               	movlb	0	; () banked
 13593  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13594  001416  0100               	movlb	0	; () banked
 13595  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13596  00141A  0EFF               	movlw	255
 13597  00141C  0100               	movlb	0	; () banked
 13598  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13599  001420  0100               	movlb	0	; () banked
 13600  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13601  001424  0E00               	movlw	0
 13602  001426  0100               	movlb	0	; () banked
 13603  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13604  00142A  0100               	movlb	0	; () banked
 13605  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13606  00142E  0E00               	movlw	0
 13607  001430  0100               	movlb	0	; () banked
 13608  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13609  001434  0100               	movlb	0	; () banked
 13610  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13614  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13615  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13616  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13617  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13618  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13619  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13620  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13621  001454  0100               	movlb	0	; () banked
 13622  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13623  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13624  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13625  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13626  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13630  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13634  00146C  0100               	movlb	0	; () banked
 13635  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13636  001470  D003               	goto	l485
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13640  001472  010F               	movlb	15	; () banked
 13641  001474  8109               	bsf	9,0,b	;volatile
 13642  001476  D002               	goto	l486
 13643  001478                     l485:
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;inc\CANlib.h: 928: else
 13647                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13648  001478  010F               	movlb	15	; () banked
 13649  00147A  9109               	bcf	9,0,b	;volatile
 13650  00147C                     l486:
 13651                           
 13652                           ; BSR set to: 15
 13653                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13654  00147C  0100               	movlb	0	; () banked
 13655  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13656  001480  D003               	goto	l487
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13660  001482  010F               	movlb	15	; () banked
 13661  001484  8309               	bsf	9,1,b	;volatile
 13662  001486  D002               	goto	l488
 13663  001488                     l487:
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;inc\CANlib.h: 933: else
 13667                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13668  001488  010F               	movlb	15	; () banked
 13669  00148A  9309               	bcf	9,1,b	;volatile
 13670  00148C                     l488:
 13671                           
 13672                           ; BSR set to: 15
 13673                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13674  00148C  0100               	movlb	0	; () banked
 13675  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13676  001490  D003               	goto	l489
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13680  001492  010F               	movlb	15	; () banked
 13681  001494  8B09               	bsf	9,5,b	;volatile
 13682  001496  D002               	goto	l490
 13683  001498                     l489:
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;inc\CANlib.h: 938: else
 13687                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13688  001498  010F               	movlb	15	; () banked
 13689  00149A  9B09               	bcf	9,5,b	;volatile
 13690  00149C                     l490:
 13691                           
 13692                           ; BSR set to: 15
 13693                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13694  00149C  0100               	movlb	0	; () banked
 13695  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13696  0014A0  D003               	goto	l491
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13700  0014A2  010F               	movlb	15	; () banked
 13701  0014A4  8D09               	bsf	9,6,b	;volatile
 13702  0014A6  D002               	goto	l492
 13703  0014A8                     l491:
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;inc\CANlib.h: 943: else
 13707                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13708  0014A8  010F               	movlb	15	; () banked
 13709  0014AA  9D09               	bcf	9,6,b	;volatile
 13710  0014AC                     l492:
 13711                           
 13712                           ; BSR set to: 15
 13713                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13714  0014AC  0100               	movlb	0	; () banked
 13715  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13716  0014B0  D003               	goto	l493
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13720  0014B2  010F               	movlb	15	; () banked
 13721  0014B4  8F09               	bsf	9,7,b	;volatile
 13722  0014B6  D002               	goto	l5544
 13723  0014B8                     l493:
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;inc\CANlib.h: 948: else
 13727                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13728  0014B8  010F               	movlb	15	; () banked
 13729  0014BA  9F09               	bcf	9,7,b	;volatile
 13730  0014BC                     l5544:
 13731                           
 13732                           ; BSR set to: 15
 13733                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13734  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13735  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13736  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13737  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13738  0014CC  0E16               	movlw	22
 13739  0014CE  D006               	goto	u6800
 13740  0014D0                     u6805:
 13741  0014D0  0100               	movlb	0	; () banked
 13742  0014D2  90D8               	bcf	status,0,c
 13743  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13744  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13745  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13746  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13747  0014DC                     u6800:
 13748  0014DC  2EE8               	decfsz	wreg,f,c
 13749  0014DE  D7F8               	goto	u6805
 13750  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13751  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13752  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13753  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13757  0014F0  0100               	movlb	0	; () banked
 13758  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13759  0014F4  0100               	movlb	0	; () banked
 13760  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13761  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13762  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13763  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13764                           
 13765                           ; BSR set to: 0
 13766                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13767  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13768  001502                     l5550:
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;inc\CANlib.h: 954: }
 13772                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13773  001502  0E03               	movlw	3
 13774  001504  0100               	movlb	0	; () banked
 13775  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13776  001508  A4D8               	btfss	status,2,c
 13777  00150A  D089               	goto	l5584
 13778                           
 13779                           ; BSR set to: 0
 13780  00150C  0EF7               	movlw	247
 13781  00150E  0100               	movlb	0	; () banked
 13782  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13783  001512  A4D8               	btfss	status,2,c
 13784  001514  D084               	goto	l5584
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;inc\CANlib.h: 957: {
 13788                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13789  001516  010F               	movlb	15	; () banked
 13790  001518  870D               	bsf	13,3,b	;volatile
 13791                           
 13792                           ; BSR set to: 15
 13793                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13794  00151A  0100               	movlb	0	; () banked
 13795  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13796  00151E  0100               	movlb	0	; () banked
 13797  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13798  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13799  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13800  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13804  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13808  00152C  0E00               	movlw	0
 13809  00152E  0100               	movlb	0	; () banked
 13810  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13811  001532  0100               	movlb	0	; () banked
 13812  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13813  001536  0EFF               	movlw	255
 13814  001538  0100               	movlb	0	; () banked
 13815  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13816  00153C  0100               	movlb	0	; () banked
 13817  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13818  001540  0E00               	movlw	0
 13819  001542  0100               	movlb	0	; () banked
 13820  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13821  001546  0100               	movlb	0	; () banked
 13822  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13823  00154A  0E00               	movlw	0
 13824  00154C  0100               	movlb	0	; () banked
 13825  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13826  001550  0100               	movlb	0	; () banked
 13827  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13831  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13832  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13833  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13834  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13835  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13836  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13837  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13838  001570  0100               	movlb	0	; () banked
 13839  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13840  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13841  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13842  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13843  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13847  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13851  001588  0100               	movlb	0	; () banked
 13852  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13853  00158C  D003               	goto	l496
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13857  00158E  010F               	movlb	15	; () banked
 13858  001590  810D               	bsf	13,0,b	;volatile
 13859  001592  D002               	goto	l497
 13860  001594                     l496:
 13861                           
 13862                           ; BSR set to: 0
 13863                           ;inc\CANlib.h: 969: else
 13864                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13865  001594  010F               	movlb	15	; () banked
 13866  001596  910D               	bcf	13,0,b	;volatile
 13867  001598                     l497:
 13868                           
 13869                           ; BSR set to: 15
 13870                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13871  001598  0100               	movlb	0	; () banked
 13872  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13873  00159C  D003               	goto	l498
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13877  00159E  010F               	movlb	15	; () banked
 13878  0015A0  830D               	bsf	13,1,b	;volatile
 13879  0015A2  D002               	goto	l499
 13880  0015A4                     l498:
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;inc\CANlib.h: 974: else
 13884                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13885  0015A4  010F               	movlb	15	; () banked
 13886  0015A6  930D               	bcf	13,1,b	;volatile
 13887  0015A8                     l499:
 13888                           
 13889                           ; BSR set to: 15
 13890                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13891  0015A8  0100               	movlb	0	; () banked
 13892  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13893  0015AC  D003               	goto	l500
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13897  0015AE  010F               	movlb	15	; () banked
 13898  0015B0  8B0D               	bsf	13,5,b	;volatile
 13899  0015B2  D002               	goto	l501
 13900  0015B4                     l500:
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;inc\CANlib.h: 979: else
 13904                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13905  0015B4  010F               	movlb	15	; () banked
 13906  0015B6  9B0D               	bcf	13,5,b	;volatile
 13907  0015B8                     l501:
 13908                           
 13909                           ; BSR set to: 15
 13910                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13911  0015B8  0100               	movlb	0	; () banked
 13912  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13913  0015BC  D003               	goto	l502
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13917  0015BE  010F               	movlb	15	; () banked
 13918  0015C0  8D0D               	bsf	13,6,b	;volatile
 13919  0015C2  D002               	goto	l503
 13920  0015C4                     l502:
 13921                           
 13922                           ; BSR set to: 0
 13923                           ;inc\CANlib.h: 984: else
 13924                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13925  0015C4  010F               	movlb	15	; () banked
 13926  0015C6  9D0D               	bcf	13,6,b	;volatile
 13927  0015C8                     l503:
 13928                           
 13929                           ; BSR set to: 15
 13930                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13931  0015C8  0100               	movlb	0	; () banked
 13932  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13933  0015CC  D003               	goto	l504
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13937  0015CE  010F               	movlb	15	; () banked
 13938  0015D0  8F0D               	bsf	13,7,b	;volatile
 13939  0015D2  D002               	goto	l5578
 13940  0015D4                     l504:
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;inc\CANlib.h: 989: else
 13944                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13945  0015D4  010F               	movlb	15	; () banked
 13946  0015D6  9F0D               	bcf	13,7,b	;volatile
 13947  0015D8                     l5578:
 13948                           
 13949                           ; BSR set to: 15
 13950                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13951  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13952  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13953  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13954  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13955  0015E8  0E16               	movlw	22
 13956  0015EA  D006               	goto	u6880
 13957  0015EC                     u6885:
 13958  0015EC  0100               	movlb	0	; () banked
 13959  0015EE  90D8               	bcf	status,0,c
 13960  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13961  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13962  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13963  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13964  0015F8                     u6880:
 13965  0015F8  2EE8               	decfsz	wreg,f,c
 13966  0015FA  D7F8               	goto	u6885
 13967  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13968  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13969  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13970  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13974  00160C  0100               	movlb	0	; () banked
 13975  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13976  001610  0100               	movlb	0	; () banked
 13977  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13978  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13979  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13980  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 13984  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13985  00161E                     l5584:
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;inc\CANlib.h: 995: }
 13989                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13990  00161E  0E04               	movlw	4
 13991  001620  0100               	movlb	0	; () banked
 13992  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13993  001624  A4D8               	btfss	status,2,c
 13994  001626  D089               	goto	l5618
 13995                           
 13996                           ; BSR set to: 0
 13997  001628  0EF7               	movlw	247
 13998  00162A  0100               	movlb	0	; () banked
 13999  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14000  00162E  A4D8               	btfss	status,2,c
 14001  001630  D084               	goto	l5618
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;inc\CANlib.h: 998: {
 14005                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 14006  001632  010F               	movlb	15	; () banked
 14007  001634  8711               	bsf	17,3,b	;volatile
 14008                           
 14009                           ; BSR set to: 15
 14010                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 14011  001636  0100               	movlb	0	; () banked
 14012  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14013  00163A  0100               	movlb	0	; () banked
 14014  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14015  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14016  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14017  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 14021  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 14025  001648  0E00               	movlw	0
 14026  00164A  0100               	movlb	0	; () banked
 14027  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14028  00164E  0100               	movlb	0	; () banked
 14029  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14030  001652  0EFF               	movlw	255
 14031  001654  0100               	movlb	0	; () banked
 14032  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14033  001658  0100               	movlb	0	; () banked
 14034  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14035  00165C  0E00               	movlw	0
 14036  00165E  0100               	movlb	0	; () banked
 14037  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14038  001662  0100               	movlb	0	; () banked
 14039  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14040  001666  0E00               	movlw	0
 14041  001668  0100               	movlb	0	; () banked
 14042  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14043  00166C  0100               	movlb	0	; () banked
 14044  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14045                           
 14046                           ; BSR set to: 0
 14047                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 14048  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14049  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14050  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14051  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14052  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14053  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14054  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14055  00168C  0100               	movlb	0	; () banked
 14056  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14057  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14058  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14059  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14060  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 14064  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 14068  0016A4  0100               	movlb	0	; () banked
 14069  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14070  0016A8  D003               	goto	l507
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 14074  0016AA  010F               	movlb	15	; () banked
 14075  0016AC  8111               	bsf	17,0,b	;volatile
 14076  0016AE  D002               	goto	l508
 14077  0016B0                     l507:
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;inc\CANlib.h: 1010: else
 14081                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 14082  0016B0  010F               	movlb	15	; () banked
 14083  0016B2  9111               	bcf	17,0,b	;volatile
 14084  0016B4                     l508:
 14085                           
 14086                           ; BSR set to: 15
 14087                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 14088  0016B4  0100               	movlb	0	; () banked
 14089  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14090  0016B8  D003               	goto	l509
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 14094  0016BA  010F               	movlb	15	; () banked
 14095  0016BC  8311               	bsf	17,1,b	;volatile
 14096  0016BE  D002               	goto	l510
 14097  0016C0                     l509:
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;inc\CANlib.h: 1015: else
 14101                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 14102  0016C0  010F               	movlb	15	; () banked
 14103  0016C2  9311               	bcf	17,1,b	;volatile
 14104  0016C4                     l510:
 14105                           
 14106                           ; BSR set to: 15
 14107                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 14108  0016C4  0100               	movlb	0	; () banked
 14109  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14110  0016C8  D003               	goto	l511
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 14114  0016CA  010F               	movlb	15	; () banked
 14115  0016CC  8B11               	bsf	17,5,b	;volatile
 14116  0016CE  D002               	goto	l512
 14117  0016D0                     l511:
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;inc\CANlib.h: 1020: else
 14121                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 14122  0016D0  010F               	movlb	15	; () banked
 14123  0016D2  9B11               	bcf	17,5,b	;volatile
 14124  0016D4                     l512:
 14125                           
 14126                           ; BSR set to: 15
 14127                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 14128  0016D4  0100               	movlb	0	; () banked
 14129  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14130  0016D8  D003               	goto	l513
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 14134  0016DA  010F               	movlb	15	; () banked
 14135  0016DC  8D11               	bsf	17,6,b	;volatile
 14136  0016DE  D002               	goto	l514
 14137  0016E0                     l513:
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;inc\CANlib.h: 1025: else
 14141                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 14142  0016E0  010F               	movlb	15	; () banked
 14143  0016E2  9D11               	bcf	17,6,b	;volatile
 14144  0016E4                     l514:
 14145                           
 14146                           ; BSR set to: 15
 14147                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14148  0016E4  0100               	movlb	0	; () banked
 14149  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14150  0016E8  D003               	goto	l515
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14154  0016EA  010F               	movlb	15	; () banked
 14155  0016EC  8F11               	bsf	17,7,b	;volatile
 14156  0016EE  D002               	goto	l5612
 14157  0016F0                     l515:
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;inc\CANlib.h: 1030: else
 14161                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14162  0016F0  010F               	movlb	15	; () banked
 14163  0016F2  9F11               	bcf	17,7,b	;volatile
 14164  0016F4                     l5612:
 14165                           
 14166                           ; BSR set to: 15
 14167                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14168  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14169  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14170  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14171  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14172  001704  0E16               	movlw	22
 14173  001706  D006               	goto	u6960
 14174  001708                     u6965:
 14175  001708  0100               	movlb	0	; () banked
 14176  00170A  90D8               	bcf	status,0,c
 14177  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14178  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14179  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14180  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14181  001714                     u6960:
 14182  001714  2EE8               	decfsz	wreg,f,c
 14183  001716  D7F8               	goto	u6965
 14184  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14185  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14186  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14187  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14191  001728  0100               	movlb	0	; () banked
 14192  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14193  00172C  0100               	movlb	0	; () banked
 14194  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14195  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14196  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14197  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14198                           
 14199                           ; BSR set to: 0
 14200                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14201  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14202  00173A                     l5618:
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;inc\CANlib.h: 1036: }
 14206                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14207  00173A  0E05               	movlw	5
 14208  00173C  0100               	movlb	0	; () banked
 14209  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14210  001740  A4D8               	btfss	status,2,c
 14211  001742  0012               	return	
 14212                           
 14213                           ; BSR set to: 0
 14214  001744  0EF7               	movlw	247
 14215  001746  0100               	movlb	0	; () banked
 14216  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14217  00174A  A4D8               	btfss	status,2,c
 14218  00174C  0012               	return	
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;inc\CANlib.h: 1039: {
 14222                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14223  00174E  010F               	movlb	15	; () banked
 14224  001750  8715               	bsf	21,3,b	;volatile
 14225                           
 14226                           ; BSR set to: 15
 14227                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14228  001752  0100               	movlb	0	; () banked
 14229  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14230  001756  0100               	movlb	0	; () banked
 14231  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14232  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14233  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14234  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14238  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14242  001764  0E00               	movlw	0
 14243  001766  0100               	movlb	0	; () banked
 14244  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14245  00176A  0100               	movlb	0	; () banked
 14246  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14247  00176E  0EFF               	movlw	255
 14248  001770  0100               	movlb	0	; () banked
 14249  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14250  001774  0100               	movlb	0	; () banked
 14251  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14252  001778  0E00               	movlw	0
 14253  00177A  0100               	movlb	0	; () banked
 14254  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14255  00177E  0100               	movlb	0	; () banked
 14256  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14257  001782  0E00               	movlw	0
 14258  001784  0100               	movlb	0	; () banked
 14259  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14260  001788  0100               	movlb	0	; () banked
 14261  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14265  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14266  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14267  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14268  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14269  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14270  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14271  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14272  0017A8  0100               	movlb	0	; () banked
 14273  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14274  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14275  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14276  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14277  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14281  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14285  0017C0  0100               	movlb	0	; () banked
 14286  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14287  0017C4  D003               	goto	l518
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14291  0017C6  010F               	movlb	15	; () banked
 14292  0017C8  8115               	bsf	21,0,b	;volatile
 14293  0017CA  D002               	goto	l519
 14294  0017CC                     l518:
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;inc\CANlib.h: 1051: else
 14298                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14299  0017CC  010F               	movlb	15	; () banked
 14300  0017CE  9115               	bcf	21,0,b	;volatile
 14301  0017D0                     l519:
 14302                           
 14303                           ; BSR set to: 15
 14304                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14305  0017D0  0100               	movlb	0	; () banked
 14306  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14307  0017D4  D003               	goto	l520
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14311  0017D6  010F               	movlb	15	; () banked
 14312  0017D8  8315               	bsf	21,1,b	;volatile
 14313  0017DA  D002               	goto	l521
 14314  0017DC                     l520:
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;inc\CANlib.h: 1056: else
 14318                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14319  0017DC  010F               	movlb	15	; () banked
 14320  0017DE  9315               	bcf	21,1,b	;volatile
 14321  0017E0                     l521:
 14322                           
 14323                           ; BSR set to: 15
 14324                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14325  0017E0  0100               	movlb	0	; () banked
 14326  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14327  0017E4  D003               	goto	l522
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14331  0017E6  010F               	movlb	15	; () banked
 14332  0017E8  8B15               	bsf	21,5,b	;volatile
 14333  0017EA  D002               	goto	l523
 14334  0017EC                     l522:
 14335                           
 14336                           ; BSR set to: 0
 14337                           ;inc\CANlib.h: 1061: else
 14338                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14339  0017EC  010F               	movlb	15	; () banked
 14340  0017EE  9B15               	bcf	21,5,b	;volatile
 14341  0017F0                     l523:
 14342                           
 14343                           ; BSR set to: 15
 14344                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14345  0017F0  0100               	movlb	0	; () banked
 14346  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14347  0017F4  D003               	goto	l524
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14351  0017F6  010F               	movlb	15	; () banked
 14352  0017F8  8D15               	bsf	21,6,b	;volatile
 14353  0017FA  D002               	goto	l525
 14354  0017FC                     l524:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;inc\CANlib.h: 1066: else
 14358                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14359  0017FC  010F               	movlb	15	; () banked
 14360  0017FE  9D15               	bcf	21,6,b	;volatile
 14361  001800                     l525:
 14362                           
 14363                           ; BSR set to: 15
 14364                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14365  001800  0100               	movlb	0	; () banked
 14366  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14367  001804  D003               	goto	l526
 14368                           
 14369                           ; BSR set to: 0
 14370                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14371  001806  010F               	movlb	15	; () banked
 14372  001808  8F15               	bsf	21,7,b	;volatile
 14373  00180A  D002               	goto	l5646
 14374  00180C                     l526:
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;inc\CANlib.h: 1071: else
 14378                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14379  00180C  010F               	movlb	15	; () banked
 14380  00180E  9F15               	bcf	21,7,b	;volatile
 14381  001810                     l5646:
 14382                           
 14383                           ; BSR set to: 15
 14384                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14385  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14386  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14387  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14388  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14389  001820  0E16               	movlw	22
 14390  001822  D006               	goto	u7040
 14391  001824                     u7045:
 14392  001824  0100               	movlb	0	; () banked
 14393  001826  90D8               	bcf	status,0,c
 14394  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14395  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14396  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14397  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14398  001830                     u7040:
 14399  001830  2EE8               	decfsz	wreg,f,c
 14400  001832  D7F8               	goto	u7045
 14401  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14402  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14403  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14404  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14405                           
 14406                           ; BSR set to: 0
 14407                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14408  001844  0100               	movlb	0	; () banked
 14409  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14410  001848  0100               	movlb	0	; () banked
 14411  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14412  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14413  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14414  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14418  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14419  001856  0012               	return	
 14420  001858                     __end_of_CANSetFilter:
 14421                           	opt stack 0
 14422                           tblptru	equ	0xFF8
 14423                           tblptrh	equ	0xFF7
 14424                           tblptrl	equ	0xFF6
 14425                           tablat	equ	0xFF5
 14426                           prodh	equ	0xFF4
 14427                           prodl	equ	0xFF3
 14428                           intcon	equ	0xFF2
 14429                           intcon2	equ	0xFF1
 14430                           postinc0	equ	0xFEE
 14431                           wreg	equ	0xFE8
 14432                           postdec1	equ	0xFE5
 14433                           fsr1l	equ	0xFE1
 14434                           indf2	equ	0xFDF
 14435                           postinc2	equ	0xFDE
 14436                           postdec2	equ	0xFDD
 14437                           fsr2h	equ	0xFDA
 14438                           fsr2l	equ	0xFD9
 14439                           status	equ	0xFD8
 14440                           
 14441 ;; *************** function _CANOperationMode *****************
 14442 ;; Defined at:
 14443 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;  mode            1    wreg     enum E16307
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;  mode            1   23[BANK0 ] enum E16307
 14448 ;; Return value:  Size  Location     Type
 14449 ;;		None               void
 14450 ;; Registers used:
 14451 ;;		wreg, status,2, status,0
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;Total ram usage:        1 bytes
 14462 ;; Hardware stack levels used:    1
 14463 ;; Hardware stack levels required when called:    4
 14464 ;; This function calls:
 14465 ;;		Nothing
 14466 ;; This function is called by:
 14467 ;;		_CANInitialize
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text33
 14472  0066DA                     __ptext33:
 14473                           	opt stack 0
 14474  0066DA                     _CANOperationMode:
 14475                           	opt stack 24
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;incstack = 0
 14479                           ;CANOperationMode@mode stored from wreg
 14480  0066DA  0100               	movlb	0	; () banked
 14481  0066DC  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14482                           
 14483                           ;inc\CANlib.h: 209: CANCON = mode;
 14484  0066DE  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14485  0066E2                     l7804:
 14486  0066E2  506E               	movf	3950,w,c	;volatile
 14487  0066E4  0BE0               	andlw	224
 14488  0066E6  0100               	movlb	0	; () banked
 14489  0066E8  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14490  0066EA  B4D8               	btfsc	status,2,c
 14491  0066EC  0012               	return	
 14492  0066EE  D7F9               	goto	l7804
 14493  0066F0                     __end_of_CANOperationMode:
 14494                           	opt stack 0
 14495                           tblptru	equ	0xFF8
 14496                           tblptrh	equ	0xFF7
 14497                           tblptrl	equ	0xFF6
 14498                           tablat	equ	0xFF5
 14499                           prodh	equ	0xFF4
 14500                           prodl	equ	0xFF3
 14501                           intcon	equ	0xFF2
 14502                           intcon2	equ	0xFF1
 14503                           postinc0	equ	0xFEE
 14504                           wreg	equ	0xFE8
 14505                           postdec1	equ	0xFE5
 14506                           fsr1l	equ	0xFE1
 14507                           indf2	equ	0xFDF
 14508                           postinc2	equ	0xFDE
 14509                           postdec2	equ	0xFDD
 14510                           fsr2h	equ	0xFDA
 14511                           fsr2l	equ	0xFD9
 14512                           status	equ	0xFD8
 14513                           
 14514 ;; *************** function _can_interpreter *****************
 14515 ;; Defined at:
 14516 ;;		line 473 in file "parcheggio.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;		None
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;		None
 14521 ;; Return value:  Size  Location     Type
 14522 ;;		None               void
 14523 ;; Registers used:
 14524 ;;		wreg, status,2, status,0
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14533 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14534 ;;Total ram usage:        4 bytes
 14535 ;; Hardware stack levels used:    1
 14536 ;; Hardware stack levels required when called:    4
 14537 ;; This function calls:
 14538 ;;		Nothing
 14539 ;; This function is called by:
 14540 ;;		_main
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text34
 14545  0064BE                     __ptext34:
 14546                           	opt stack 0
 14547  0064BE                     _can_interpreter:
 14548                           	opt stack 26
 14549                           
 14550                           ;parcheggio.c: 474: left_speed = data_speed_rx[1];
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;incstack = 0
 14554  0064BE  C109  F01F         	movff	_data_speed_rx+1,_left_speed
 14555  0064C2  6A20               	clrf	_left_speed+1,c
 14556                           
 14557                           ;parcheggio.c: 475: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14558  0064C4  501F               	movf	_left_speed,w,c
 14559  0064C6  0100               	movlb	0	; () banked
 14560  0064C8  6F77               	movwf	??_can_interpreter& (0+255),b
 14561  0064CA  0101               	movlb	1	; () banked
 14562  0064CC  5108               	movf	_data_speed_rx& (0+255),w,b
 14563  0064CE  6E1F               	movwf	_left_speed,c
 14564  0064D0  C077  F020         	movff	??_can_interpreter,_left_speed+1
 14565                           
 14566                           ; BSR set to: 1
 14567                           ;parcheggio.c: 476: right_speed = data_speed_rx[3];
 14568  0064D4  C10B  F023         	movff	_data_speed_rx+3,_right_speed
 14569  0064D8  6A24               	clrf	_right_speed+1,c
 14570                           
 14571                           ;parcheggio.c: 477: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14572  0064DA  5023               	movf	_right_speed,w,c
 14573  0064DC  0100               	movlb	0	; () banked
 14574  0064DE  6F77               	movwf	??_can_interpreter& (0+255),b
 14575  0064E0  0101               	movlb	1	; () banked
 14576  0064E2  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14577  0064E4  6E23               	movwf	_right_speed,c
 14578  0064E6  C077  F024         	movff	??_can_interpreter,_right_speed+1
 14579                           
 14580                           ; BSR set to: 1
 14581                           ;parcheggio.c: 478: actual_speed = (right_speed + left_speed) / 2;
 14582  0064EA  501F               	movf	_left_speed,w,c
 14583  0064EC  2423               	addwf	_right_speed,w,c
 14584  0064EE  0100               	movlb	0	; () banked
 14585  0064F0  6F77               	movwf	??_can_interpreter& (0+255),b
 14586  0064F2  5020               	movf	_left_speed+1,w,c
 14587  0064F4  2024               	addwfc	_right_speed+1,w,c
 14588  0064F6  0100               	movlb	0	; () banked
 14589  0064F8  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14590  0064FA  90D8               	bcf	status,0,c
 14591  0064FC  0100               	movlb	0	; () banked
 14592  0064FE  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14593  006500  0100               	movlb	0	; () banked
 14594  006502  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14595  006504  0100               	movlb	0	; () banked
 14596  006506  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14597  006508  0100               	movlb	0	; () banked
 14598  00650A  6FDE               	movwf	_actual_speed& (0+255),b
 14599  00650C  C079  F0DF         	movff	??_can_interpreter+2,_actual_speed+1
 14600                           
 14601                           ; BSR set to: 0
 14602  006510  0012               	return		;funcret
 14603  006512                     __end_of_can_interpreter:
 14604                           	opt stack 0
 14605                           tblptru	equ	0xFF8
 14606                           tblptrh	equ	0xFF7
 14607                           tblptrl	equ	0xFF6
 14608                           tablat	equ	0xFF5
 14609                           prodh	equ	0xFF4
 14610                           prodl	equ	0xFF3
 14611                           intcon	equ	0xFF2
 14612                           intcon2	equ	0xFF1
 14613                           postinc0	equ	0xFEE
 14614                           wreg	equ	0xFE8
 14615                           postdec1	equ	0xFE5
 14616                           fsr1l	equ	0xFE1
 14617                           indf2	equ	0xFDF
 14618                           postinc2	equ	0xFDE
 14619                           postdec2	equ	0xFDD
 14620                           fsr2h	equ	0xFDA
 14621                           fsr2l	equ	0xFD9
 14622                           status	equ	0xFD8
 14623                           
 14624 ;; *************** function _ISR_Bassa *****************
 14625 ;; Defined at:
 14626 ;;		line 115 in file "parcheggio.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;		None
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;  i               1   38[COMRAM] unsigned char 
 14631 ;;  gigi            1   37[COMRAM] unsigned char 
 14632 ;; Return value:  Size  Location     Type
 14633 ;;		None               void
 14634 ;; Registers used:
 14635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14636 ;; Tracked objects:
 14637 ;;		On entry : 0/0
 14638 ;;		On exit  : 0/0
 14639 ;;		Unchanged: 0/0
 14640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14643 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;Total ram usage:       23 bytes
 14646 ;; Hardware stack levels used:    1
 14647 ;; Hardware stack levels required when called:    3
 14648 ;; This function calls:
 14649 ;;		_CANreceiveMessage
 14650 ;;		i1_CANisTxReady
 14651 ;;		i1_CANsendMessage
 14652 ;; This function is called by:
 14653 ;;		Interrupt level 1
 14654 ;; This function uses a non-reentrant model
 14655 ;;
 14656                           
 14657                           	psect	intcodelo
 14658  000018                     __pintcodelo:
 14659                           	opt stack 0
 14660  000018                     _ISR_Bassa:
 14661                           	opt stack 21
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;incstack = 0
 14665  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14666  00001A  CFD8 F041          	movff	status,??_ISR_Bassa+4
 14667  00001E  CFE8 F042          	movff	wreg,??_ISR_Bassa+5
 14668  000022  CFE0 F043          	movff	bsr,??_ISR_Bassa+6
 14669  000026  CFFA F044          	movff	pclath,??_ISR_Bassa+7
 14670  00002A  CFFB F045          	movff	pclatu,??_ISR_Bassa+8
 14671  00002E  CFE9 F046          	movff	fsr0l,??_ISR_Bassa+9
 14672  000032  CFEA F047          	movff	fsr0h,??_ISR_Bassa+10
 14673  000036  CFE1 F048          	movff	fsr1l,??_ISR_Bassa+11
 14674  00003A  CFE2 F049          	movff	fsr1h,??_ISR_Bassa+12
 14675  00003E  CFD9 F04A          	movff	fsr2l,??_ISR_Bassa+13
 14676  000042  CFDA F04B          	movff	fsr2h,??_ISR_Bassa+14
 14677  000046  CFF3 F04C          	movff	prodl,??_ISR_Bassa+15
 14678  00004A  CFF4 F04D          	movff	prodh,??_ISR_Bassa+16
 14679  00004E  CFF6 F04E          	movff	tblptrl,??_ISR_Bassa+17
 14680  000052  CFF7 F04F          	movff	tblptrh,??_ISR_Bassa+18
 14681  000056  CFF8 F050          	movff	tblptru,??_ISR_Bassa+19
 14682  00005A  CFF5 F051          	movff	tablat,??_ISR_Bassa+20
 14683                           
 14684                           ;parcheggio.c: 117: if (INTCONbits.TMR0IF == 1) {
 14685  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14686  000060  D090               	goto	i1l8632
 14687                           
 14688                           ;parcheggio.c: 118: INTCONbits.INT0IE = 0;
 14689  000062  98F2               	bcf	intcon,4,c	;volatile
 14690                           
 14691                           ;parcheggio.c: 119: T0CONbits.TMR0ON = 0;
 14692  000064  9ED5               	bcf	4053,7,c	;volatile
 14693                           
 14694                           ;parcheggio.c: 120: TMR0H = 0x34;
 14695  000066  0E34               	movlw	52
 14696  000068  6ED7               	movwf	4055,c	;volatile
 14697                           
 14698                           ;parcheggio.c: 121: TMR0L = 0xE0;
 14699  00006A  0EE0               	movlw	224
 14700  00006C  6ED6               	movwf	4054,c	;volatile
 14701                           
 14702                           ;parcheggio.c: 122: T0CONbits.TMR0ON = 1;
 14703  00006E  8ED5               	bsf	4053,7,c	;volatile
 14704                           
 14705                           ;parcheggio.c: 123: if (distance_error == 1) {
 14706  000070  A854               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14707  000072  D00C               	goto	i1l706
 14708                           
 14709                           ;parcheggio.c: 124: sensor_distance[MUX_index] = 5000;
 14710  000074  5029               	movf	_MUX_index,w,c	;volatile
 14711  000076  0D02               	mullw	2
 14712  000078  0E01               	movlw	low _sensor_distance
 14713  00007A  24F3               	addwf	prodl,w,c
 14714  00007C  6ED9               	movwf	fsr2l,c
 14715  00007E  0E00               	movlw	high _sensor_distance
 14716  000080  20F4               	addwfc	prodh,w,c
 14717  000082  6EDA               	movwf	fsr2h,c
 14718  000084  0E88               	movlw	136
 14719  000086  6EDE               	movwf	postinc2,c
 14720  000088  0E13               	movlw	19
 14721  00008A  6EDD               	movwf	postdec2,c
 14722  00008C                     i1l706:
 14723                           
 14724                           ;parcheggio.c: 125: }
 14725                           ;parcheggio.c: 126: if (sensor_distance[MUX_index] < 10) {
 14726  00008C  5029               	movf	_MUX_index,w,c	;volatile
 14727  00008E  0D02               	mullw	2
 14728  000090  0E01               	movlw	low _sensor_distance
 14729  000092  24F3               	addwf	prodl,w,c
 14730  000094  6ED9               	movwf	fsr2l,c
 14731  000096  0E00               	movlw	high _sensor_distance
 14732  000098  20F4               	addwfc	prodh,w,c
 14733  00009A  6EDA               	movwf	fsr2h,c
 14734  00009C  0E01               	movlw	1
 14735  00009E  50DB               	movf	plusw2,w,c
 14736  0000A0  E10E               	bnz	i1l8584
 14737  0000A2  0E0A               	movlw	10
 14738  0000A4  5CDE               	subwf	postinc2,w,c
 14739  0000A6  B0D8               	btfsc	status,0,c
 14740  0000A8  D00A               	goto	i1l8584
 14741                           
 14742                           ;parcheggio.c: 127: sensor_distance_short[MUX_index] = 1;
 14743  0000AA  5029               	movf	_MUX_index,w,c	;volatile
 14744  0000AC  0D01               	mullw	1
 14745  0000AE  0E83               	movlw	low _sensor_distance_short
 14746  0000B0  24F3               	addwf	prodl,w,c
 14747  0000B2  6ED9               	movwf	fsr2l,c
 14748  0000B4  0E01               	movlw	high _sensor_distance_short
 14749  0000B6  20F4               	addwfc	prodh,w,c
 14750  0000B8  6EDA               	movwf	fsr2h,c
 14751  0000BA  0E01               	movlw	1
 14752  0000BC  D040               	goto	L8
 14753  0000BE                     i1l8584:
 14754  0000BE  5029               	movf	_MUX_index,w,c	;volatile
 14755  0000C0  0D02               	mullw	2
 14756  0000C2  0E01               	movlw	low _sensor_distance
 14757  0000C4  24F3               	addwf	prodl,w,c
 14758  0000C6  6ED9               	movwf	fsr2l,c
 14759  0000C8  0E00               	movlw	high _sensor_distance
 14760  0000CA  20F4               	addwfc	prodh,w,c
 14761  0000CC  6EDA               	movwf	fsr2h,c
 14762  0000CE  0E01               	movlw	1
 14763  0000D0  50DB               	movf	plusw2,w,c
 14764  0000D2  E12C               	bnz	i1l8600
 14765  0000D4  0E03               	movlw	3
 14766  0000D6  5CDE               	subwf	postinc2,w,c
 14767  0000D8  A0D8               	btfss	status,0,c
 14768  0000DA  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14769  0000DC  D027               	goto	i1l8600
 14770  0000DE  B454               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14771  0000E0  D025               	goto	i1l8600
 14772                           
 14773                           ;parcheggio.c: 129: if ((MUX_index == 0) || (MUX_index == 1)) {
 14774  0000E2  5029               	movf	_MUX_index,w,c	;volatile
 14775  0000E4  B4D8               	btfsc	status,2,c
 14776  0000E6  D02C               	goto	i1l8602
 14777  0000E8  0429               	decf	_MUX_index,w,c	;volatile
 14778  0000EA  B4D8               	btfsc	status,2,c
 14779  0000EC  D029               	goto	i1l8602
 14780                           
 14781                           ;parcheggio.c: 132: data[1] = 0;
 14782                           
 14783                           ;parcheggio.c: 131: } else {
 14784  0000EE  0E00               	movlw	0
 14785  0000F0  0101               	movlb	1	; () banked
 14786  0000F2  6F54               	movwf	(_data+1)& (0+255),b
 14787                           
 14788                           ;parcheggio.c: 133: data[0] = 4;
 14789  0000F4  0E04               	movlw	4
 14790  0000F6  0101               	movlb	1	; () banked
 14791  0000F8  6F53               	movwf	_data& (0+255),b
 14792  0000FA                     i1l8596:
 14793  0000FA  EC5E  F033         	call	i1_CANisTxReady	;wreg free
 14794  0000FE  0900               	iorlw	0
 14795  000100  B4D8               	btfsc	status,2,c
 14796  000102  D7FB               	goto	i1l8596
 14797                           
 14798                           ;parcheggio.c: 135: CANsendMessage(0xAA, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
 14799  000104  0EAA               	movlw	170
 14800  000106  6E2D               	movwf	i1CANsendMessage@identifier,c
 14801  000108  0E00               	movlw	0
 14802  00010A  6E2E               	movwf	i1CANsendMessage@identifier+1,c
 14803  00010C  0E00               	movlw	0
 14804  00010E  6E2F               	movwf	i1CANsendMessage@identifier+2,c
 14805  000110  0E00               	movlw	0
 14806  000112  6E30               	movwf	i1CANsendMessage@identifier+3,c
 14807  000114  0E53               	movlw	low _data
 14808  000116  6E31               	movwf	i1CANsendMessage@data,c
 14809  000118  0E01               	movlw	high _data
 14810  00011A  6E32               	movwf	i1CANsendMessage@data+1,c
 14811  00011C  0E08               	movlw	8
 14812  00011E  6E33               	movwf	i1CANsendMessage@dataLength,c
 14813  000120  0EBC               	movlw	188
 14814  000122  6E34               	movwf	i1CANsendMessage@flags,c
 14815  000124  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14816  000128  00FF               	reset		;# 
 14817                           
 14818                           ;parcheggio.c: 137: }
 14819                           ;parcheggio.c: 139: } else {
 14820  00012A  D00A               	goto	i1l8602
 14821  00012C                     i1l8600:
 14822                           
 14823                           ;parcheggio.c: 140: sensor_distance_short[MUX_index] = 0;
 14824  00012C  5029               	movf	_MUX_index,w,c	;volatile
 14825  00012E  0D01               	mullw	1
 14826  000130  0E83               	movlw	low _sensor_distance_short
 14827  000132  24F3               	addwf	prodl,w,c
 14828  000134  6ED9               	movwf	fsr2l,c
 14829  000136  0E01               	movlw	high _sensor_distance_short
 14830  000138  20F4               	addwfc	prodh,w,c
 14831  00013A  6EDA               	movwf	fsr2h,c
 14832  00013C  0E00               	movlw	0
 14833  00013E                     L8:
 14834  00013E  6EDF               	movwf	indf2,c
 14835  000140                     i1l8602:
 14836                           
 14837                           ;parcheggio.c: 141: }
 14838                           ;parcheggio.c: 142: MUX_index++;
 14839  000140  2A29               	incf	_MUX_index,f,c	;volatile
 14840                           
 14841                           ;parcheggio.c: 143: if (MUX_index == 8) {
 14842  000142  0E08               	movlw	8
 14843  000144  1829               	xorwf	_MUX_index,w,c	;volatile
 14844  000146  A4D8               	btfss	status,2,c
 14845  000148  D002               	goto	i1l718
 14846                           
 14847                           ;parcheggio.c: 144: MUX_index = 0;
 14848  00014A  0E00               	movlw	0
 14849  00014C  6E29               	movwf	_MUX_index,c	;volatile
 14850  00014E                     i1l718:
 14851                           
 14852                           ;parcheggio.c: 145: }
 14853                           ;parcheggio.c: 146: unsigned char gigi = 0;
 14854  00014E  0E00               	movlw	0
 14855  000150  6E52               	movwf	ISR_Bassa@gigi,c
 14856                           
 14857                           ;parcheggio.c: 147: gigi = MUX_select[MUX_index];
 14858  000152  5029               	movf	_MUX_index,w,c	;volatile
 14859  000154  0D01               	mullw	1
 14860  000156  0E00               	movlw	low _MUX_select
 14861  000158  24F3               	addwf	prodl,w,c
 14862  00015A  6ED9               	movwf	fsr2l,c
 14863  00015C  0E01               	movlw	high _MUX_select
 14864  00015E  20F4               	addwfc	prodh,w,c
 14865  000160  6EDA               	movwf	fsr2h,c
 14866  000162  50DF               	movf	indf2,w,c
 14867  000164  6E52               	movwf	ISR_Bassa@gigi,c
 14868                           
 14869                           ;parcheggio.c: 148: PORTA = gigi;
 14870  000166  C052  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14871                           
 14872                           ;parcheggio.c: 149: TRISBbits.RB0 = 0;
 14873  00016A  9093               	bcf	3987,0,c	;volatile
 14874                           
 14875                           ;parcheggio.c: 150: LATBbits.LATB0 = 1;
 14876  00016C  808A               	bsf	3978,0,c	;volatile
 14877                           
 14878                           ;parcheggio.c: 151: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14879  00016E  0E14               	movlw	20
 14880  000170                     i1u1165_27:
 14881  000170  2EE8               	decfsz	wreg,f,c
 14882  000172  D7FE               	goto	i1u1165_27
 14883                           
 14884                           ;parcheggio.c: 152: distance_error = 1;
 14885  000174  8854               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14886                           
 14887                           ;parcheggio.c: 153: LATBbits.LATB0 = 0;
 14888  000176  908A               	bcf	3978,0,c	;volatile
 14889                           
 14890                           ;parcheggio.c: 154: TRISBbits.RB0 = 1;
 14891  000178  8093               	bsf	3987,0,c	;volatile
 14892                           
 14893                           ;parcheggio.c: 155: INTCONbits.INT0IF = 0;
 14894  00017A  92F2               	bcf	intcon,1,c	;volatile
 14895                           
 14896                           ;parcheggio.c: 156: INTCONbits.INT0IE = 1;
 14897  00017C  88F2               	bsf	intcon,4,c	;volatile
 14898                           
 14899                           ;parcheggio.c: 157: INTCONbits.TMR0IF = 0;
 14900  00017E  94F2               	bcf	intcon,2,c	;volatile
 14901                           
 14902                           ;parcheggio.c: 158: INTCON2bits.INTEDG0 = 1;
 14903  000180  8CF1               	bsf	intcon2,6,c	;volatile
 14904  000182                     i1l8632:
 14905                           
 14906                           ;parcheggio.c: 159: }
 14907                           ;parcheggio.c: 161: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14908  000182  A0A4               	btfss	4004,0,c	;volatile
 14909  000184  B2A4               	btfsc	4004,1,c	;volatile
 14910  000186  D001               	goto	i1l8636
 14911  000188  D09B               	goto	i1l732
 14912  00018A                     i1l8636:
 14913                           
 14914                           ;parcheggio.c: 162: CANreceiveMessage(&msg);
 14915  00018A  0E44               	movlw	low _msg
 14916  00018C  6E2D               	movwf	CANreceiveMessage@msg,c
 14917  00018E  0E01               	movlw	high _msg
 14918  000190  6E2E               	movwf	CANreceiveMessage@msg+1,c
 14919  000192  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14920                           
 14921                           ;parcheggio.c: 163: if (msg.identifier == 0b00000001101) {
 14922  000196  0E0D               	movlw	13
 14923  000198  0101               	movlb	1	; () banked
 14924  00019A  1944               	xorwf	_msg& (0+255),w,b
 14925  00019C  0101               	movlb	1	; () banked
 14926  00019E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14927  0001A0  0101               	movlb	1	; () banked
 14928  0001A2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14929  0001A4  0101               	movlb	1	; () banked
 14930  0001A6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14931  0001A8  B4D8               	btfsc	status,2,c
 14932                           
 14933                           ; BSR set to: 1
 14934                           ;parcheggio.c: 164: asd = 0;
 14935  0001AA  9254               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14936                           
 14937                           ; BSR set to: 1
 14938                           ;parcheggio.c: 165: }
 14939                           ;parcheggio.c: 166: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14940                           
 14941                           ; BSR set to: 1
 14942  0001AC  0E07               	movlw	7
 14943  0001AE  0101               	movlb	1	; () banked
 14944  0001B0  1944               	xorwf	_msg& (0+255),w,b
 14945  0001B2  0101               	movlb	1	; () banked
 14946  0001B4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14947  0001B6  0101               	movlb	1	; () banked
 14948  0001B8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14949  0001BA  0101               	movlb	1	; () banked
 14950  0001BC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14951  0001BE  A4D8               	btfss	status,2,c
 14952  0001C0  D02B               	goto	i1l8658
 14953                           
 14954                           ; BSR set to: 1
 14955  0001C2  0101               	movlb	1	; () banked
 14956  0001C4  0552               	decf	(_msg+14)& (0+255),w,b
 14957  0001C6  B4D8               	btfsc	status,2,c
 14958  0001C8  D027               	goto	i1l8658
 14959                           
 14960                           ; BSR set to: 1
 14961                           ;parcheggio.c: 167: distance_average = 0;
 14962  0001CA  0E00               	movlw	0
 14963  0001CC  6E1A               	movwf	_distance_average+1,c	;volatile
 14964  0001CE  0E00               	movlw	0
 14965  0001D0  6E19               	movwf	_distance_average,c	;volatile
 14966                           
 14967                           ; BSR set to: 1
 14968                           ;parcheggio.c: 168: distance_dx = msg.data[1];
 14969  0001D2  C149  F01B         	movff	_msg+5,_distance_dx	;volatile
 14970  0001D6  6A1C               	clrf	_distance_dx+1,c	;volatile
 14971                           
 14972                           ;parcheggio.c: 169: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14973  0001D8  501B               	movf	_distance_dx,w,c	;volatile
 14974  0001DA  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 14975  0001DC  0101               	movlb	1	; () banked
 14976  0001DE  5148               	movf	(_msg+4)& (0+255),w,b
 14977  0001E0  6E1B               	movwf	_distance_dx,c	;volatile
 14978  0001E2  C03D  F01C         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14979                           
 14980                           ; BSR set to: 1
 14981                           ;parcheggio.c: 170: distance_sx = msg.data[3];
 14982  0001E6  C14B  F01D         	movff	_msg+7,_distance_sx	;volatile
 14983  0001EA  6A1E               	clrf	_distance_sx+1,c	;volatile
 14984                           
 14985                           ;parcheggio.c: 171: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14986  0001EC  501D               	movf	_distance_sx,w,c	;volatile
 14987  0001EE  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 14988  0001F0  0101               	movlb	1	; () banked
 14989  0001F2  514A               	movf	(_msg+6)& (0+255),w,b
 14990  0001F4  6E1D               	movwf	_distance_sx,c	;volatile
 14991  0001F6  C03D  F01E         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14992                           
 14993                           ; BSR set to: 1
 14994                           ;parcheggio.c: 172: distance_average = (distance_sx + distance_dx) / 2;
 14995  0001FA  501B               	movf	_distance_dx,w,c	;volatile
 14996  0001FC  241D               	addwf	_distance_sx,w,c	;volatile
 14997  0001FE  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 14998  000200  501C               	movf	_distance_dx+1,w,c	;volatile
 14999  000202  201E               	addwfc	_distance_sx+1,w,c	;volatile
 15000  000204  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 15001  000206  90D8               	bcf	status,0,c
 15002  000208  303E               	rrcf	??_ISR_Bassa+1,w,c
 15003  00020A  6E3F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 15004  00020C  303D               	rrcf	??_ISR_Bassa,w,c
 15005  00020E  6E19               	movwf	_distance_average,c	;volatile
 15006  000210  C03F  F01A         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15007                           
 15008                           ; BSR set to: 1
 15009                           ;parcheggio.c: 173: distance_received = 1;
 15010  000214  8A54               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15011                           
 15012                           ; BSR set to: 1
 15013                           ;parcheggio.c: 174: distance_received1 = 1;
 15014  000216  8C54               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15015  000218                     i1l8658:
 15016                           
 15017                           ; BSR set to: 1
 15018                           ;parcheggio.c: 175: }
 15019                           ;parcheggio.c: 176: if (msg.identifier == 0b00000001010) {
 15020  000218  0E0A               	movlw	10
 15021  00021A  0101               	movlb	1	; () banked
 15022  00021C  1944               	xorwf	_msg& (0+255),w,b
 15023  00021E  0101               	movlb	1	; () banked
 15024  000220  1145               	iorwf	(_msg+1)& (0+255),w,b
 15025  000222  0101               	movlb	1	; () banked
 15026  000224  1146               	iorwf	(_msg+2)& (0+255),w,b
 15027  000226  0101               	movlb	1	; () banked
 15028  000228  1147               	iorwf	(_msg+3)& (0+255),w,b
 15029  00022A  A4D8               	btfss	status,2,c
 15030  00022C  D00C               	goto	i1l8664
 15031                           
 15032                           ; BSR set to: 1
 15033                           ;parcheggio.c: 177: if (msg.data[0] == 1) {
 15034  00022E  0101               	movlb	1	; () banked
 15035  000230  0548               	decf	(_msg+4)& (0+255),w,b
 15036  000232  A4D8               	btfss	status,2,c
 15037  000234  D003               	goto	i1l725
 15038                           
 15039                           ; BSR set to: 1
 15040                           ;parcheggio.c: 178: activation = 1;
 15041  000236  8054               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15042                           
 15043                           ;parcheggio.c: 179: PORTBbits.RB6 = 1;
 15044  000238  8C81               	bsf	3969,6,c	;volatile
 15045                           
 15046                           ;parcheggio.c: 180: } else {
 15047  00023A  D005               	goto	i1l8664
 15048  00023C                     i1l725:
 15049                           
 15050                           ; BSR set to: 1
 15051                           ;parcheggio.c: 181: activation = 0;
 15052  00023C  9054               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15053                           
 15054                           ;parcheggio.c: 182: PORTBbits.RB4 = 0;
 15055  00023E  9881               	bcf	3969,4,c	;volatile
 15056                           
 15057                           ;parcheggio.c: 183: PORTBbits.RB5 = 0;
 15058  000240  9A81               	bcf	3969,5,c	;volatile
 15059                           
 15060                           ;parcheggio.c: 184: PORTBbits.RB6 = 0;
 15061  000242  9C81               	bcf	3969,6,c	;volatile
 15062                           
 15063                           ;parcheggio.c: 185: request_sent = 0;
 15064  000244  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15065  000246                     i1l8664:
 15066                           
 15067                           ; BSR set to: 1
 15068                           ;parcheggio.c: 186: }
 15069                           ;parcheggio.c: 187: }
 15070                           ;parcheggio.c: 188: if (msg.identifier == 0b00000001100) {
 15071  000246  0E0C               	movlw	12
 15072  000248  0101               	movlb	1	; () banked
 15073  00024A  1944               	xorwf	_msg& (0+255),w,b
 15074  00024C  0101               	movlb	1	; () banked
 15075  00024E  1145               	iorwf	(_msg+1)& (0+255),w,b
 15076  000250  0101               	movlb	1	; () banked
 15077  000252  1146               	iorwf	(_msg+2)& (0+255),w,b
 15078  000254  0101               	movlb	1	; () banked
 15079  000256  1147               	iorwf	(_msg+3)& (0+255),w,b
 15080  000258  B4D8               	btfsc	status,2,c
 15081                           
 15082                           ; BSR set to: 1
 15083                           ;parcheggio.c: 189: start_operation = 1;
 15084  00025A  8C55               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15085                           
 15086                           ; BSR set to: 1
 15087                           ;parcheggio.c: 190: }
 15088                           ;parcheggio.c: 191: if (msg.identifier == 0b00000000110) {
 15089                           
 15090                           ; BSR set to: 1
 15091  00025C  0E06               	movlw	6
 15092  00025E  0101               	movlb	1	; () banked
 15093  000260  1944               	xorwf	_msg& (0+255),w,b
 15094  000262  0101               	movlb	1	; () banked
 15095  000264  1145               	iorwf	(_msg+1)& (0+255),w,b
 15096  000266  0101               	movlb	1	; () banked
 15097  000268  1146               	iorwf	(_msg+2)& (0+255),w,b
 15098  00026A  0101               	movlb	1	; () banked
 15099  00026C  1147               	iorwf	(_msg+3)& (0+255),w,b
 15100  00026E  A4D8               	btfss	status,2,c
 15101  000270  D025               	goto	i1l728
 15102                           
 15103                           ; BSR set to: 1
 15104                           ;parcheggio.c: 192: for (unsigned char i = 0; i < 8; i++) {
 15105  000272  0E00               	movlw	0
 15106  000274  6E53               	movwf	ISR_Bassa@i,c
 15107  000276                     i1l8672:
 15108                           
 15109                           ; BSR set to: 1
 15110  000276  0E07               	movlw	7
 15111  000278  6453               	cpfsgt	ISR_Bassa@i,c
 15112  00027A  D001               	goto	i1l8676
 15113  00027C  D014               	goto	i1l8682
 15114  00027E                     i1l8676:
 15115                           
 15116                           ;parcheggio.c: 193: data_speed_rx[i] = msg.data[i];
 15117  00027E  5053               	movf	ISR_Bassa@i,w,c
 15118  000280  0D01               	mullw	1
 15119  000282  0E48               	movlw	low (_msg+4)
 15120  000284  24F3               	addwf	prodl,w,c
 15121  000286  6ED9               	movwf	fsr2l,c
 15122  000288  0E01               	movlw	high (_msg+4)
 15123  00028A  20F4               	addwfc	prodh,w,c
 15124  00028C  6EDA               	movwf	fsr2h,c
 15125  00028E  5053               	movf	ISR_Bassa@i,w,c
 15126  000290  0D01               	mullw	1
 15127  000292  0E08               	movlw	low _data_speed_rx
 15128  000294  24F3               	addwf	prodl,w,c
 15129  000296  6EE1               	movwf	fsr1l,c
 15130  000298  0E01               	movlw	high _data_speed_rx
 15131  00029A  20F4               	addwfc	prodh,w,c
 15132  00029C  6EE2               	movwf	fsr1h,c
 15133  00029E  CFDF FFE7          	movff	indf2,indf1
 15134  0002A2  2A53               	incf	ISR_Bassa@i,f,c
 15135  0002A4  D7E8               	goto	i1l8672
 15136  0002A6                     i1l8682:
 15137                           
 15138                           ;parcheggio.c: 194: }
 15139                           ;parcheggio.c: 195: if (msg.identifier == 0b00000001101) {
 15140  0002A6  0E0D               	movlw	13
 15141  0002A8  0101               	movlb	1	; () banked
 15142  0002AA  1944               	xorwf	_msg& (0+255),w,b
 15143  0002AC  0101               	movlb	1	; () banked
 15144  0002AE  1145               	iorwf	(_msg+1)& (0+255),w,b
 15145  0002B0  0101               	movlb	1	; () banked
 15146  0002B2  1146               	iorwf	(_msg+2)& (0+255),w,b
 15147  0002B4  0101               	movlb	1	; () banked
 15148  0002B6  1147               	iorwf	(_msg+3)& (0+255),w,b
 15149  0002B8  B4D8               	btfsc	status,2,c
 15150                           
 15151                           ; BSR set to: 1
 15152                           ;parcheggio.c: 196: distance_wait = 0;
 15153  0002BA  9E54               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15154  0002BC                     i1l728:
 15155                           
 15156                           ; BSR set to: 1
 15157                           ;parcheggio.c: 197: }
 15158                           ;parcheggio.c: 199: }
 15159                           ;parcheggio.c: 201: PIR3bits.RXB0IF = 0;
 15160  0002BC  90A4               	bcf	4004,0,c	;volatile
 15161                           
 15162                           ;parcheggio.c: 202: PIR3bits.RXB1IF = 0;
 15163  0002BE  92A4               	bcf	4004,1,c	;volatile
 15164  0002C0                     i1l732:
 15165  0002C0  C051  FFF5         	movff	??_ISR_Bassa+20,tablat
 15166  0002C4  C050  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15167  0002C8  C04F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15168  0002CC  C04E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15169  0002D0  C04D  FFF4         	movff	??_ISR_Bassa+16,prodh
 15170  0002D4  C04C  FFF3         	movff	??_ISR_Bassa+15,prodl
 15171  0002D8  C04B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15172  0002DC  C04A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15173  0002E0  C049  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15174  0002E4  C048  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15175  0002E8  C047  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15176  0002EC  C046  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15177  0002F0  C045  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15178  0002F4  C044  FFFA         	movff	??_ISR_Bassa+7,pclath
 15179  0002F8  C043  FFE0         	movff	??_ISR_Bassa+6,bsr
 15180  0002FC  C042  FFE8         	movff	??_ISR_Bassa+5,wreg
 15181  000300  C041  FFD8         	movff	??_ISR_Bassa+4,status
 15182  000304  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15183  000306  0010               	retfie	
 15184  000308                     __end_of_ISR_Bassa:
 15185                           	opt stack 0
 15186                           pclatu	equ	0xFFB
 15187                           pclath	equ	0xFFA
 15188                           tblptru	equ	0xFF8
 15189                           tblptrh	equ	0xFF7
 15190                           tblptrl	equ	0xFF6
 15191                           tablat	equ	0xFF5
 15192                           prodh	equ	0xFF4
 15193                           prodl	equ	0xFF3
 15194                           intcon	equ	0xFF2
 15195                           intcon2	equ	0xFF1
 15196                           postinc0	equ	0xFEE
 15197                           fsr0h	equ	0xFEA
 15198                           fsr0l	equ	0xFE9
 15199                           wreg	equ	0xFE8
 15200                           indf1	equ	0xFE7
 15201                           postdec1	equ	0xFE5
 15202                           fsr1h	equ	0xFE2
 15203                           fsr1l	equ	0xFE1
 15204                           bsr	equ	0xFE0
 15205                           indf2	equ	0xFDF
 15206                           postinc2	equ	0xFDE
 15207                           postdec2	equ	0xFDD
 15208                           plusw2	equ	0xFDB
 15209                           fsr2h	equ	0xFDA
 15210                           fsr2l	equ	0xFD9
 15211                           status	equ	0xFD8
 15212                           
 15213 ;; *************** function i1_CANsendMessage *****************
 15214 ;; Defined at:
 15215 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;  identifier      4    0[COMRAM] unsigned long 
 15218 ;;  data            2    4[COMRAM] PTR unsigned char 
 15219 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
 15220 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
 15221 ;;  dataLength      1    6[COMRAM] unsigned char 
 15222 ;;  flags           1    7[COMRAM] enum E16335
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 15225 ;; Return value:  Size  Location     Type
 15226 ;;		None               void
 15227 ;; Registers used:
 15228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15234 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;Total ram usage:       16 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    2
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_ISR_Bassa
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           	psect	text36
 15249  001FE4                     __ptext36:
 15250                           	opt stack 0
 15251  001FE4                     i1_CANsendMessage:
 15252                           	opt stack 21
 15253                           
 15254                           ;inc\CANlib.h: 297: unsigned long tamp;
 15255                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
 15256                           
 15257                           ;incstack = 0
 15258  001FE4  010F               	movlb	15	; () banked
 15259  001FE6  B740               	btfsc	64,3,b	;volatile
 15260  001FE8  D115               	goto	i1l363
 15261                           
 15262                           ; BSR set to: 15
 15263                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
 15264  001FEA  C033  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15265                           
 15266                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
 15267  001FEE  AC34               	btfss	i1CANsendMessage@flags,6,c
 15268  001FF0  D003               	goto	i1l364
 15269                           
 15270                           ; BSR set to: 15
 15271                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
 15272  001FF2  010F               	movlb	15	; () banked
 15273  001FF4  8D45               	bsf	69,6,b	;volatile
 15274  001FF6  D002               	goto	i1l365
 15275  001FF8                     i1l364:
 15276                           
 15277                           ; BSR set to: 15
 15278                           ;inc\CANlib.h: 303: else
 15279                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
 15280  001FF8  010F               	movlb	15	; () banked
 15281  001FFA  9D45               	bcf	69,6,b	;volatile
 15282  001FFC                     i1l365:
 15283                           
 15284                           ; BSR set to: 15
 15285                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
 15286  001FFC  A634               	btfss	i1CANsendMessage@flags,3,c
 15287  001FFE  D066               	goto	i1l366
 15288                           
 15289                           ; BSR set to: 15
 15290                           ;inc\CANlib.h: 307: {
 15291                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
 15292  002000  502D               	movf	i1CANsendMessage@identifier,w,c
 15293  002002  6E39               	movwf	i1CANsendMessage@tamp,c
 15294  002004  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15295  002006  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15296  002008  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15297                           
 15298                           ; BSR set to: 15
 15299                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
 15300  00200A  C039  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15301                           
 15302                           ; BSR set to: 15
 15303                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
 15304  00200E  0E00               	movlw	0
 15305  002010  142D               	andwf	i1CANsendMessage@identifier,w,c
 15306  002012  6E39               	movwf	i1CANsendMessage@tamp,c
 15307  002014  0EFF               	movlw	255
 15308  002016  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15309  002018  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15310  00201A  0E00               	movlw	0
 15311  00201C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15312  00201E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15313  002020  0E00               	movlw	0
 15314  002022  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15315  002024  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15316                           
 15317                           ; BSR set to: 15
 15318                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
 15319  002026  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15320  00202A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15321  00202E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15322  002032  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15323  002036  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15324  00203A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15325  00203E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15326  002042  6A38               	clrf	??i1_CANsendMessage+3,c
 15327  002044  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15328  002048  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15329  00204C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15330  002050  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15331                           
 15332                           ; BSR set to: 15
 15333                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
 15334  002054  C039  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15335                           
 15336                           ; BSR set to: 15
 15337                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
 15338  002058  0E00               	movlw	0
 15339  00205A  010F               	movlb	15	; () banked
 15340  00205C  6F42               	movwf	66,b	;volatile
 15341                           
 15342                           ; BSR set to: 15
 15343                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
 15344  00205E  010F               	movlb	15	; () banked
 15345  002060  8742               	bsf	66,3,b	;volatile
 15346                           
 15347                           ; BSR set to: 15
 15348                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
 15349  002062  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15350  002064  D002               	goto	i1l367
 15351                           
 15352                           ; BSR set to: 15
 15353                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
 15354  002066  010F               	movlb	15	; () banked
 15355  002068  8142               	bsf	66,0,b	;volatile
 15356  00206A                     i1l367:
 15357                           
 15358                           ; BSR set to: 15
 15359                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
 15360  00206A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15361  00206C  D002               	goto	i1l368
 15362                           
 15363                           ; BSR set to: 15
 15364                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
 15365  00206E  010F               	movlb	15	; () banked
 15366  002070  8342               	bsf	66,1,b	;volatile
 15367  002072                     i1l368:
 15368                           
 15369                           ; BSR set to: 15
 15370                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
 15371  002072  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15372  002074  D002               	goto	i1l369
 15373                           
 15374                           ; BSR set to: 15
 15375                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
 15376  002076  010F               	movlb	15	; () banked
 15377  002078  8B42               	bsf	66,5,b	;volatile
 15378  00207A                     i1l369:
 15379                           
 15380                           ; BSR set to: 15
 15381                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
 15382  00207A  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15383  00207C  D002               	goto	i1l370
 15384                           
 15385                           ; BSR set to: 15
 15386                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
 15387  00207E  010F               	movlb	15	; () banked
 15388  002080  8D42               	bsf	66,6,b	;volatile
 15389  002082                     i1l370:
 15390                           
 15391                           ; BSR set to: 15
 15392                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
 15393  002082  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15394  002084  D002               	goto	i1l8354
 15395                           
 15396                           ; BSR set to: 15
 15397                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
 15398  002086  010F               	movlb	15	; () banked
 15399  002088  8F42               	bsf	66,7,b	;volatile
 15400  00208A                     i1l8354:
 15401                           
 15402                           ; BSR set to: 15
 15403                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
 15404  00208A  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15405  00208E  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15406  002092  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15407  002096  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15408  00209A  0E16               	movlw	22
 15409  00209C  D005               	goto	i1u1107_20
 15410  00209E                     i1u1107_25:
 15411  00209E  90D8               	bcf	status,0,c
 15412  0020A0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15413  0020A2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15414  0020A4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15415  0020A6  3235               	rrcf	??i1_CANsendMessage,f,c
 15416  0020A8                     i1u1107_20:
 15417  0020A8  2EE8               	decfsz	wreg,f,c
 15418  0020AA  D7F9               	goto	i1u1107_25
 15419  0020AC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15420  0020B0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15421  0020B4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15422  0020B8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15423                           
 15424                           ; BSR set to: 15
 15425                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
 15426  0020BC  5039               	movf	i1CANsendMessage@tamp,w,c
 15427  0020BE  6E39               	movwf	i1CANsendMessage@tamp,c
 15428  0020C0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15429  0020C2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15430  0020C4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15431                           
 15432                           ; BSR set to: 15
 15433                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
 15434  0020C6  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15435                           
 15436                           ;inc\CANlib.h: 333: }
 15437  0020CA  D04D               	goto	i1l8374
 15438  0020CC                     i1l366:
 15439                           
 15440                           ; BSR set to: 15
 15441                           ;inc\CANlib.h: 335: else
 15442                           ;inc\CANlib.h: 337: {
 15443                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
 15444  0020CC  010F               	movlb	15	; () banked
 15445  0020CE  9742               	bcf	66,3,b	;volatile
 15446                           
 15447                           ; BSR set to: 15
 15448                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
 15449  0020D0  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15450  0020D4  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15451  0020D8  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15452  0020DC  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15453  0020E0  0E04               	movlw	4
 15454  0020E2  D005               	goto	i1u1108_20
 15455  0020E4                     i1u1108_25:
 15456  0020E4  90D8               	bcf	status,0,c
 15457  0020E6  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15458  0020E8  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15459  0020EA  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15460  0020EC  3235               	rrcf	??i1_CANsendMessage,f,c
 15461  0020EE                     i1u1108_20:
 15462  0020EE  2EE8               	decfsz	wreg,f,c
 15463  0020F0  D7F9               	goto	i1u1108_25
 15464  0020F2  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15465  0020F6  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15466  0020FA  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15467  0020FE  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15468                           
 15469                           ; BSR set to: 15
 15470                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
 15471  002102  5039               	movf	i1CANsendMessage@tamp,w,c
 15472  002104  6E39               	movwf	i1CANsendMessage@tamp,c
 15473  002106  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15474  002108  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15475  00210A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15476                           
 15477                           ; BSR set to: 15
 15478                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
 15479  00210C  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15480                           
 15481                           ; BSR set to: 15
 15482                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
 15483  002110  0E07               	movlw	7
 15484  002112  142D               	andwf	i1CANsendMessage@identifier,w,c
 15485  002114  6E39               	movwf	i1CANsendMessage@tamp,c
 15486  002116  0E00               	movlw	0
 15487  002118  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15488  00211A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15489  00211C  0E00               	movlw	0
 15490  00211E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15491  002120  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15492  002122  0E00               	movlw	0
 15493  002124  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15494  002126  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15495                           
 15496                           ; BSR set to: 15
 15497                           ;inc\CANlib.h: 345: tamp = tamp << 5;
 15498  002128  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15499  00212C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15500  002130  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15501  002134  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15502  002138  0E05               	movlw	5
 15503  00213A                     i1u1109_25:
 15504  00213A  90D8               	bcf	status,0,c
 15505  00213C  3635               	rlcf	??i1_CANsendMessage,f,c
 15506  00213E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15507  002140  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15508  002142  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15509  002144  2EE8               	decfsz	wreg,f,c
 15510  002146  D7F9               	goto	i1u1109_25
 15511  002148  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15512  00214C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15513  002150  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15514  002154  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15515                           
 15516                           ; BSR set to: 15
 15517                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
 15518  002158  010F               	movlb	15	; () banked
 15519  00215A  5142               	movf	66,w,b	;volatile
 15520  00215C  0B1F               	andlw	31
 15521  00215E  010F               	movlb	15	; () banked
 15522  002160  6F42               	movwf	66,b	;volatile
 15523                           
 15524                           ; BSR set to: 15
 15525                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
 15526  002162  C039  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15527  002166                     i1l8374:
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;inc\CANlib.h: 348: }
 15531                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
 15532  002166  A034               	btfss	i1CANsendMessage@flags,0,c
 15533  002168  D003               	goto	i1l373
 15534                           
 15535                           ; BSR set to: 15
 15536                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
 15537  00216A  010F               	movlb	15	; () banked
 15538  00216C  8140               	bsf	64,0,b	;volatile
 15539  00216E  D002               	goto	i1l374
 15540  002170                     i1l373:
 15541                           
 15542                           ; BSR set to: 15
 15543                           ;inc\CANlib.h: 352: else
 15544                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
 15545  002170  010F               	movlb	15	; () banked
 15546  002172  9140               	bcf	64,0,b	;volatile
 15547  002174                     i1l374:
 15548                           
 15549                           ; BSR set to: 15
 15550                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
 15551  002174  A234               	btfss	i1CANsendMessage@flags,1,c
 15552  002176  D003               	goto	i1l375
 15553                           
 15554                           ; BSR set to: 15
 15555                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
 15556  002178  010F               	movlb	15	; () banked
 15557  00217A  8340               	bsf	64,1,b	;volatile
 15558  00217C  D002               	goto	i1l8380
 15559  00217E                     i1l375:
 15560                           
 15561                           ; BSR set to: 15
 15562                           ;inc\CANlib.h: 356: else
 15563                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
 15564  00217E  010F               	movlb	15	; () banked
 15565  002180  9340               	bcf	64,1,b	;volatile
 15566  002182                     i1l8380:
 15567                           
 15568                           ; BSR set to: 15
 15569                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
 15570  002182  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15571  002186  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15572  00218A  50DF               	movf	indf2,w,c
 15573  00218C  010F               	movlb	15	; () banked
 15574  00218E  6F46               	movwf	70,b	;volatile
 15575                           
 15576                           ; BSR set to: 15
 15577                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
 15578  002190  EE20 F001          	lfsr	2,1
 15579  002194  5031               	movf	i1CANsendMessage@data,w,c
 15580  002196  26D9               	addwf	fsr2l,f,c
 15581  002198  5032               	movf	i1CANsendMessage@data+1,w,c
 15582  00219A  22DA               	addwfc	fsr2h,f,c
 15583  00219C  50DF               	movf	indf2,w,c
 15584  00219E  010F               	movlb	15	; () banked
 15585  0021A0  6F47               	movwf	71,b	;volatile
 15586                           
 15587                           ; BSR set to: 15
 15588                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
 15589  0021A2  EE20 F002          	lfsr	2,2
 15590  0021A6  5031               	movf	i1CANsendMessage@data,w,c
 15591  0021A8  26D9               	addwf	fsr2l,f,c
 15592  0021AA  5032               	movf	i1CANsendMessage@data+1,w,c
 15593  0021AC  22DA               	addwfc	fsr2h,f,c
 15594  0021AE  50DF               	movf	indf2,w,c
 15595  0021B0  010F               	movlb	15	; () banked
 15596  0021B2  6F48               	movwf	72,b	;volatile
 15597                           
 15598                           ; BSR set to: 15
 15599                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
 15600  0021B4  EE20 F003          	lfsr	2,3
 15601  0021B8  5031               	movf	i1CANsendMessage@data,w,c
 15602  0021BA  26D9               	addwf	fsr2l,f,c
 15603  0021BC  5032               	movf	i1CANsendMessage@data+1,w,c
 15604  0021BE  22DA               	addwfc	fsr2h,f,c
 15605  0021C0  50DF               	movf	indf2,w,c
 15606  0021C2  010F               	movlb	15	; () banked
 15607  0021C4  6F49               	movwf	73,b	;volatile
 15608                           
 15609                           ; BSR set to: 15
 15610                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
 15611  0021C6  EE20 F004          	lfsr	2,4
 15612  0021CA  5031               	movf	i1CANsendMessage@data,w,c
 15613  0021CC  26D9               	addwf	fsr2l,f,c
 15614  0021CE  5032               	movf	i1CANsendMessage@data+1,w,c
 15615  0021D0  22DA               	addwfc	fsr2h,f,c
 15616  0021D2  50DF               	movf	indf2,w,c
 15617  0021D4  010F               	movlb	15	; () banked
 15618  0021D6  6F4A               	movwf	74,b	;volatile
 15619                           
 15620                           ; BSR set to: 15
 15621                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
 15622  0021D8  EE20 F005          	lfsr	2,5
 15623  0021DC  5031               	movf	i1CANsendMessage@data,w,c
 15624  0021DE  26D9               	addwf	fsr2l,f,c
 15625  0021E0  5032               	movf	i1CANsendMessage@data+1,w,c
 15626  0021E2  22DA               	addwfc	fsr2h,f,c
 15627  0021E4  50DF               	movf	indf2,w,c
 15628  0021E6  010F               	movlb	15	; () banked
 15629  0021E8  6F4B               	movwf	75,b	;volatile
 15630                           
 15631                           ; BSR set to: 15
 15632                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
 15633  0021EA  EE20 F006          	lfsr	2,6
 15634  0021EE  5031               	movf	i1CANsendMessage@data,w,c
 15635  0021F0  26D9               	addwf	fsr2l,f,c
 15636  0021F2  5032               	movf	i1CANsendMessage@data+1,w,c
 15637  0021F4  22DA               	addwfc	fsr2h,f,c
 15638  0021F6  50DF               	movf	indf2,w,c
 15639  0021F8  010F               	movlb	15	; () banked
 15640  0021FA  6F4C               	movwf	76,b	;volatile
 15641                           
 15642                           ; BSR set to: 15
 15643                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
 15644  0021FC  EE20 F007          	lfsr	2,7
 15645  002200  5031               	movf	i1CANsendMessage@data,w,c
 15646  002202  26D9               	addwf	fsr2l,f,c
 15647  002204  5032               	movf	i1CANsendMessage@data+1,w,c
 15648  002206  22DA               	addwfc	fsr2h,f,c
 15649  002208  50DF               	movf	indf2,w,c
 15650  00220A  010F               	movlb	15	; () banked
 15651  00220C  6F4D               	movwf	77,b	;volatile
 15652                           
 15653                           ; BSR set to: 15
 15654                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
 15655  00220E  010F               	movlb	15	; () banked
 15656  002210  8740               	bsf	64,3,b	;volatile
 15657                           
 15658                           ; BSR set to: 15
 15659                           ;inc\CANlib.h: 369: return;
 15660  002212  0012               	return	
 15661  002214                     i1l363:
 15662                           
 15663                           ; BSR set to: 15
 15664                           ;inc\CANlib.h: 370: }
 15665                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
 15666  002214  010F               	movlb	15	; () banked
 15667  002216  B730               	btfsc	48,3,b	;volatile
 15668  002218  D115               	goto	i1l378
 15669                           
 15670                           ; BSR set to: 15
 15671                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
 15672  00221A  C033  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15673                           
 15674                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
 15675  00221E  AC34               	btfss	i1CANsendMessage@flags,6,c
 15676  002220  D003               	goto	i1l379
 15677                           
 15678                           ; BSR set to: 15
 15679                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
 15680  002222  010F               	movlb	15	; () banked
 15681  002224  8D35               	bsf	53,6,b	;volatile
 15682  002226  D002               	goto	i1l380
 15683  002228                     i1l379:
 15684                           
 15685                           ; BSR set to: 15
 15686                           ;inc\CANlib.h: 379: else
 15687                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
 15688  002228  010F               	movlb	15	; () banked
 15689  00222A  9D35               	bcf	53,6,b	;volatile
 15690  00222C                     i1l380:
 15691                           
 15692                           ; BSR set to: 15
 15693                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
 15694  00222C  A634               	btfss	i1CANsendMessage@flags,3,c
 15695  00222E  D066               	goto	i1l381
 15696                           
 15697                           ; BSR set to: 15
 15698                           ;inc\CANlib.h: 383: {
 15699                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
 15700  002230  502D               	movf	i1CANsendMessage@identifier,w,c
 15701  002232  6E39               	movwf	i1CANsendMessage@tamp,c
 15702  002234  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15703  002236  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15704  002238  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15705                           
 15706                           ; BSR set to: 15
 15707                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
 15708  00223A  C039  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15709                           
 15710                           ; BSR set to: 15
 15711                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
 15712  00223E  0E00               	movlw	0
 15713  002240  142D               	andwf	i1CANsendMessage@identifier,w,c
 15714  002242  6E39               	movwf	i1CANsendMessage@tamp,c
 15715  002244  0EFF               	movlw	255
 15716  002246  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15717  002248  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15718  00224A  0E00               	movlw	0
 15719  00224C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15720  00224E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15721  002250  0E00               	movlw	0
 15722  002252  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15723  002254  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15724                           
 15725                           ; BSR set to: 15
 15726                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
 15727  002256  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15728  00225A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15729  00225E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15730  002262  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15731  002266  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15732  00226A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15733  00226E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15734  002272  6A38               	clrf	??i1_CANsendMessage+3,c
 15735  002274  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15736  002278  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15737  00227C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15738  002280  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15739                           
 15740                           ; BSR set to: 15
 15741                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
 15742  002284  C039  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15743                           
 15744                           ; BSR set to: 15
 15745                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
 15746  002288  0E00               	movlw	0
 15747  00228A  010F               	movlb	15	; () banked
 15748  00228C  6F32               	movwf	50,b	;volatile
 15749                           
 15750                           ; BSR set to: 15
 15751                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
 15752  00228E  010F               	movlb	15	; () banked
 15753  002290  8732               	bsf	50,3,b	;volatile
 15754                           
 15755                           ; BSR set to: 15
 15756                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
 15757  002292  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15758  002294  D002               	goto	i1l382
 15759                           
 15760                           ; BSR set to: 15
 15761                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
 15762  002296  010F               	movlb	15	; () banked
 15763  002298  8132               	bsf	50,0,b	;volatile
 15764  00229A                     i1l382:
 15765                           
 15766                           ; BSR set to: 15
 15767                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
 15768  00229A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15769  00229C  D002               	goto	i1l383
 15770                           
 15771                           ; BSR set to: 15
 15772                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
 15773  00229E  010F               	movlb	15	; () banked
 15774  0022A0  8332               	bsf	50,1,b	;volatile
 15775  0022A2                     i1l383:
 15776                           
 15777                           ; BSR set to: 15
 15778                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
 15779  0022A2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15780  0022A4  D002               	goto	i1l384
 15781                           
 15782                           ; BSR set to: 15
 15783                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
 15784  0022A6  010F               	movlb	15	; () banked
 15785  0022A8  8B32               	bsf	50,5,b	;volatile
 15786  0022AA                     i1l384:
 15787                           
 15788                           ; BSR set to: 15
 15789                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
 15790  0022AA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15791  0022AC  D002               	goto	i1l385
 15792                           
 15793                           ; BSR set to: 15
 15794                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
 15795  0022AE  010F               	movlb	15	; () banked
 15796  0022B0  8D32               	bsf	50,6,b	;volatile
 15797  0022B2                     i1l385:
 15798                           
 15799                           ; BSR set to: 15
 15800                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
 15801  0022B2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15802  0022B4  D002               	goto	i1l8430
 15803                           
 15804                           ; BSR set to: 15
 15805                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
 15806  0022B6  010F               	movlb	15	; () banked
 15807  0022B8  8F32               	bsf	50,7,b	;volatile
 15808  0022BA                     i1l8430:
 15809                           
 15810                           ; BSR set to: 15
 15811                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
 15812  0022BA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15813  0022BE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15814  0022C2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15815  0022C6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15816  0022CA  0E16               	movlw	22
 15817  0022CC  D005               	goto	i1u1120_20
 15818  0022CE                     i1u1120_25:
 15819  0022CE  90D8               	bcf	status,0,c
 15820  0022D0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15821  0022D2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15822  0022D4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15823  0022D6  3235               	rrcf	??i1_CANsendMessage,f,c
 15824  0022D8                     i1u1120_20:
 15825  0022D8  2EE8               	decfsz	wreg,f,c
 15826  0022DA  D7F9               	goto	i1u1120_25
 15827  0022DC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15828  0022E0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15829  0022E4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15830  0022E8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15831                           
 15832                           ; BSR set to: 15
 15833                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
 15834  0022EC  5039               	movf	i1CANsendMessage@tamp,w,c
 15835  0022EE  6E39               	movwf	i1CANsendMessage@tamp,c
 15836  0022F0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15837  0022F2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15838  0022F4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15839                           
 15840                           ; BSR set to: 15
 15841                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
 15842  0022F6  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15843                           
 15844                           ;inc\CANlib.h: 408: }
 15845  0022FA  D04D               	goto	i1l8450
 15846  0022FC                     i1l381:
 15847                           
 15848                           ; BSR set to: 15
 15849                           ;inc\CANlib.h: 410: else
 15850                           ;inc\CANlib.h: 412: {
 15851                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
 15852  0022FC  010F               	movlb	15	; () banked
 15853  0022FE  9732               	bcf	50,3,b	;volatile
 15854                           
 15855                           ; BSR set to: 15
 15856                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
 15857  002300  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15858  002304  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15859  002308  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15860  00230C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15861  002310  0E04               	movlw	4
 15862  002312  D005               	goto	i1u1121_20
 15863  002314                     i1u1121_25:
 15864  002314  90D8               	bcf	status,0,c
 15865  002316  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15866  002318  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15867  00231A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15868  00231C  3235               	rrcf	??i1_CANsendMessage,f,c
 15869  00231E                     i1u1121_20:
 15870  00231E  2EE8               	decfsz	wreg,f,c
 15871  002320  D7F9               	goto	i1u1121_25
 15872  002322  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15873  002326  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15874  00232A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15875  00232E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15876                           
 15877                           ; BSR set to: 15
 15878                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
 15879  002332  5039               	movf	i1CANsendMessage@tamp,w,c
 15880  002334  6E39               	movwf	i1CANsendMessage@tamp,c
 15881  002336  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15882  002338  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15883  00233A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15884                           
 15885                           ; BSR set to: 15
 15886                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
 15887  00233C  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15888                           
 15889                           ; BSR set to: 15
 15890                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
 15891  002340  0E07               	movlw	7
 15892  002342  142D               	andwf	i1CANsendMessage@identifier,w,c
 15893  002344  6E39               	movwf	i1CANsendMessage@tamp,c
 15894  002346  0E00               	movlw	0
 15895  002348  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15896  00234A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15897  00234C  0E00               	movlw	0
 15898  00234E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15899  002350  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15900  002352  0E00               	movlw	0
 15901  002354  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15902  002356  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15903                           
 15904                           ; BSR set to: 15
 15905                           ;inc\CANlib.h: 420: tamp = tamp << 5;
 15906  002358  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15907  00235C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15908  002360  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15909  002364  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15910  002368  0E05               	movlw	5
 15911  00236A                     i1u1122_25:
 15912  00236A  90D8               	bcf	status,0,c
 15913  00236C  3635               	rlcf	??i1_CANsendMessage,f,c
 15914  00236E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15915  002370  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15916  002372  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15917  002374  2EE8               	decfsz	wreg,f,c
 15918  002376  D7F9               	goto	i1u1122_25
 15919  002378  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15920  00237C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15921  002380  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15922  002384  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15923                           
 15924                           ; BSR set to: 15
 15925                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
 15926  002388  010F               	movlb	15	; () banked
 15927  00238A  5132               	movf	50,w,b	;volatile
 15928  00238C  0B1F               	andlw	31
 15929  00238E  010F               	movlb	15	; () banked
 15930  002390  6F32               	movwf	50,b	;volatile
 15931                           
 15932                           ; BSR set to: 15
 15933                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
 15934  002392  C039  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15935  002396                     i1l8450:
 15936                           
 15937                           ; BSR set to: 15
 15938                           ;inc\CANlib.h: 423: }
 15939                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
 15940  002396  A034               	btfss	i1CANsendMessage@flags,0,c
 15941  002398  D003               	goto	i1l388
 15942                           
 15943                           ; BSR set to: 15
 15944                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
 15945  00239A  010F               	movlb	15	; () banked
 15946  00239C  8130               	bsf	48,0,b	;volatile
 15947  00239E  D002               	goto	i1l389
 15948  0023A0                     i1l388:
 15949                           
 15950                           ; BSR set to: 15
 15951                           ;inc\CANlib.h: 427: else
 15952                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
 15953  0023A0  010F               	movlb	15	; () banked
 15954  0023A2  9130               	bcf	48,0,b	;volatile
 15955  0023A4                     i1l389:
 15956                           
 15957                           ; BSR set to: 15
 15958                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
 15959  0023A4  A234               	btfss	i1CANsendMessage@flags,1,c
 15960  0023A6  D003               	goto	i1l390
 15961                           
 15962                           ; BSR set to: 15
 15963                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
 15964  0023A8  010F               	movlb	15	; () banked
 15965  0023AA  8330               	bsf	48,1,b	;volatile
 15966  0023AC  D002               	goto	i1l8456
 15967  0023AE                     i1l390:
 15968                           
 15969                           ; BSR set to: 15
 15970                           ;inc\CANlib.h: 431: else
 15971                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
 15972  0023AE  010F               	movlb	15	; () banked
 15973  0023B0  9330               	bcf	48,1,b	;volatile
 15974  0023B2                     i1l8456:
 15975                           
 15976                           ; BSR set to: 15
 15977                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
 15978  0023B2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15979  0023B6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15980  0023BA  50DF               	movf	indf2,w,c
 15981  0023BC  010F               	movlb	15	; () banked
 15982  0023BE  6F36               	movwf	54,b	;volatile
 15983                           
 15984                           ; BSR set to: 15
 15985                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
 15986  0023C0  EE20 F001          	lfsr	2,1
 15987  0023C4  5031               	movf	i1CANsendMessage@data,w,c
 15988  0023C6  26D9               	addwf	fsr2l,f,c
 15989  0023C8  5032               	movf	i1CANsendMessage@data+1,w,c
 15990  0023CA  22DA               	addwfc	fsr2h,f,c
 15991  0023CC  50DF               	movf	indf2,w,c
 15992  0023CE  010F               	movlb	15	; () banked
 15993  0023D0  6F37               	movwf	55,b	;volatile
 15994                           
 15995                           ; BSR set to: 15
 15996                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
 15997  0023D2  EE20 F002          	lfsr	2,2
 15998  0023D6  5031               	movf	i1CANsendMessage@data,w,c
 15999  0023D8  26D9               	addwf	fsr2l,f,c
 16000  0023DA  5032               	movf	i1CANsendMessage@data+1,w,c
 16001  0023DC  22DA               	addwfc	fsr2h,f,c
 16002  0023DE  50DF               	movf	indf2,w,c
 16003  0023E0  010F               	movlb	15	; () banked
 16004  0023E2  6F38               	movwf	56,b	;volatile
 16005                           
 16006                           ; BSR set to: 15
 16007                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
 16008  0023E4  EE20 F003          	lfsr	2,3
 16009  0023E8  5031               	movf	i1CANsendMessage@data,w,c
 16010  0023EA  26D9               	addwf	fsr2l,f,c
 16011  0023EC  5032               	movf	i1CANsendMessage@data+1,w,c
 16012  0023EE  22DA               	addwfc	fsr2h,f,c
 16013  0023F0  50DF               	movf	indf2,w,c
 16014  0023F2  010F               	movlb	15	; () banked
 16015  0023F4  6F39               	movwf	57,b	;volatile
 16016                           
 16017                           ; BSR set to: 15
 16018                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
 16019  0023F6  EE20 F004          	lfsr	2,4
 16020  0023FA  5031               	movf	i1CANsendMessage@data,w,c
 16021  0023FC  26D9               	addwf	fsr2l,f,c
 16022  0023FE  5032               	movf	i1CANsendMessage@data+1,w,c
 16023  002400  22DA               	addwfc	fsr2h,f,c
 16024  002402  50DF               	movf	indf2,w,c
 16025  002404  010F               	movlb	15	; () banked
 16026  002406  6F3A               	movwf	58,b	;volatile
 16027                           
 16028                           ; BSR set to: 15
 16029                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
 16030  002408  EE20 F005          	lfsr	2,5
 16031  00240C  5031               	movf	i1CANsendMessage@data,w,c
 16032  00240E  26D9               	addwf	fsr2l,f,c
 16033  002410  5032               	movf	i1CANsendMessage@data+1,w,c
 16034  002412  22DA               	addwfc	fsr2h,f,c
 16035  002414  50DF               	movf	indf2,w,c
 16036  002416  010F               	movlb	15	; () banked
 16037  002418  6F3B               	movwf	59,b	;volatile
 16038                           
 16039                           ; BSR set to: 15
 16040                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
 16041  00241A  EE20 F006          	lfsr	2,6
 16042  00241E  5031               	movf	i1CANsendMessage@data,w,c
 16043  002420  26D9               	addwf	fsr2l,f,c
 16044  002422  5032               	movf	i1CANsendMessage@data+1,w,c
 16045  002424  22DA               	addwfc	fsr2h,f,c
 16046  002426  50DF               	movf	indf2,w,c
 16047  002428  010F               	movlb	15	; () banked
 16048  00242A  6F3C               	movwf	60,b	;volatile
 16049                           
 16050                           ; BSR set to: 15
 16051                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
 16052  00242C  EE20 F007          	lfsr	2,7
 16053  002430  5031               	movf	i1CANsendMessage@data,w,c
 16054  002432  26D9               	addwf	fsr2l,f,c
 16055  002434  5032               	movf	i1CANsendMessage@data+1,w,c
 16056  002436  22DA               	addwfc	fsr2h,f,c
 16057  002438  50DF               	movf	indf2,w,c
 16058  00243A  010F               	movlb	15	; () banked
 16059  00243C  6F3D               	movwf	61,b	;volatile
 16060                           
 16061                           ; BSR set to: 15
 16062                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
 16063  00243E  010F               	movlb	15	; () banked
 16064  002440  8730               	bsf	48,3,b	;volatile
 16065                           
 16066                           ; BSR set to: 15
 16067                           ;inc\CANlib.h: 445: return;
 16068  002442  0012               	return	
 16069  002444                     i1l378:
 16070                           
 16071                           ; BSR set to: 15
 16072                           ;inc\CANlib.h: 446: }
 16073                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
 16074  002444  010F               	movlb	15	; () banked
 16075  002446  B720               	btfsc	32,3,b	;volatile
 16076  002448  0012               	return	
 16077                           
 16078                           ; BSR set to: 15
 16079                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
 16080  00244A  C033  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16081                           
 16082                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
 16083  00244E  AC34               	btfss	i1CANsendMessage@flags,6,c
 16084  002450  D003               	goto	i1l393
 16085                           
 16086                           ; BSR set to: 15
 16087                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
 16088  002452  010F               	movlb	15	; () banked
 16089  002454  8D25               	bsf	37,6,b	;volatile
 16090  002456  D002               	goto	i1l394
 16091  002458                     i1l393:
 16092                           
 16093                           ; BSR set to: 15
 16094                           ;inc\CANlib.h: 455: else
 16095                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
 16096  002458  010F               	movlb	15	; () banked
 16097  00245A  9D25               	bcf	37,6,b	;volatile
 16098  00245C                     i1l394:
 16099                           
 16100                           ; BSR set to: 15
 16101                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
 16102  00245C  A634               	btfss	i1CANsendMessage@flags,3,c
 16103  00245E  D066               	goto	i1l395
 16104                           
 16105                           ; BSR set to: 15
 16106                           ;inc\CANlib.h: 459: {
 16107                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
 16108  002460  502D               	movf	i1CANsendMessage@identifier,w,c
 16109  002462  6E39               	movwf	i1CANsendMessage@tamp,c
 16110  002464  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16111  002466  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16112  002468  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16113                           
 16114                           ; BSR set to: 15
 16115                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
 16116  00246A  C039  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16117                           
 16118                           ; BSR set to: 15
 16119                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
 16120  00246E  0E00               	movlw	0
 16121  002470  142D               	andwf	i1CANsendMessage@identifier,w,c
 16122  002472  6E39               	movwf	i1CANsendMessage@tamp,c
 16123  002474  0EFF               	movlw	255
 16124  002476  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16125  002478  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16126  00247A  0E00               	movlw	0
 16127  00247C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16128  00247E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16129  002480  0E00               	movlw	0
 16130  002482  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16131  002484  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16132                           
 16133                           ; BSR set to: 15
 16134                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
 16135  002486  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16136  00248A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16137  00248E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16138  002492  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16139  002496  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16140  00249A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16141  00249E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16142  0024A2  6A38               	clrf	??i1_CANsendMessage+3,c
 16143  0024A4  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16144  0024A8  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16145  0024AC  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16146  0024B0  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16147                           
 16148                           ; BSR set to: 15
 16149                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
 16150  0024B4  C039  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16151                           
 16152                           ; BSR set to: 15
 16153                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
 16154  0024B8  0E00               	movlw	0
 16155  0024BA  010F               	movlb	15	; () banked
 16156  0024BC  6F22               	movwf	34,b	;volatile
 16157                           
 16158                           ; BSR set to: 15
 16159                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
 16160  0024BE  010F               	movlb	15	; () banked
 16161  0024C0  8722               	bsf	34,3,b	;volatile
 16162                           
 16163                           ; BSR set to: 15
 16164                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
 16165  0024C2  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 16166  0024C4  D002               	goto	i1l396
 16167                           
 16168                           ; BSR set to: 15
 16169                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
 16170  0024C6  010F               	movlb	15	; () banked
 16171  0024C8  8122               	bsf	34,0,b	;volatile
 16172  0024CA                     i1l396:
 16173                           
 16174                           ; BSR set to: 15
 16175                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
 16176  0024CA  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 16177  0024CC  D002               	goto	i1l397
 16178                           
 16179                           ; BSR set to: 15
 16180                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
 16181  0024CE  010F               	movlb	15	; () banked
 16182  0024D0  8322               	bsf	34,1,b	;volatile
 16183  0024D2                     i1l397:
 16184                           
 16185                           ; BSR set to: 15
 16186                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
 16187  0024D2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 16188  0024D4  D002               	goto	i1l398
 16189                           
 16190                           ; BSR set to: 15
 16191                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
 16192  0024D6  010F               	movlb	15	; () banked
 16193  0024D8  8B22               	bsf	34,5,b	;volatile
 16194  0024DA                     i1l398:
 16195                           
 16196                           ; BSR set to: 15
 16197                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
 16198  0024DA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 16199  0024DC  D002               	goto	i1l399
 16200                           
 16201                           ; BSR set to: 15
 16202                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
 16203  0024DE  010F               	movlb	15	; () banked
 16204  0024E0  8D22               	bsf	34,6,b	;volatile
 16205  0024E2                     i1l399:
 16206                           
 16207                           ; BSR set to: 15
 16208                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
 16209  0024E2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 16210  0024E4  D002               	goto	i1l8506
 16211                           
 16212                           ; BSR set to: 15
 16213                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
 16214  0024E6  010F               	movlb	15	; () banked
 16215  0024E8  8F22               	bsf	34,7,b	;volatile
 16216  0024EA                     i1l8506:
 16217                           
 16218                           ; BSR set to: 15
 16219                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
 16220  0024EA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16221  0024EE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16222  0024F2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16223  0024F6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16224  0024FA  0E16               	movlw	22
 16225  0024FC  D005               	goto	i1u1133_20
 16226  0024FE                     i1u1133_25:
 16227  0024FE  90D8               	bcf	status,0,c
 16228  002500  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16229  002502  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16230  002504  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16231  002506  3235               	rrcf	??i1_CANsendMessage,f,c
 16232  002508                     i1u1133_20:
 16233  002508  2EE8               	decfsz	wreg,f,c
 16234  00250A  D7F9               	goto	i1u1133_25
 16235  00250C  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16236  002510  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16237  002514  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16238  002518  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16239                           
 16240                           ; BSR set to: 15
 16241                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
 16242  00251C  5039               	movf	i1CANsendMessage@tamp,w,c
 16243  00251E  6E39               	movwf	i1CANsendMessage@tamp,c
 16244  002520  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16245  002522  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16246  002524  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16247                           
 16248                           ; BSR set to: 15
 16249                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
 16250  002526  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16251                           
 16252                           ;inc\CANlib.h: 484: }
 16253  00252A  D04D               	goto	i1l8526
 16254  00252C                     i1l395:
 16255                           
 16256                           ; BSR set to: 15
 16257                           ;inc\CANlib.h: 486: else
 16258                           ;inc\CANlib.h: 488: {
 16259                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
 16260  00252C  010F               	movlb	15	; () banked
 16261  00252E  9722               	bcf	34,3,b	;volatile
 16262                           
 16263                           ; BSR set to: 15
 16264                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
 16265  002530  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16266  002534  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16267  002538  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16268  00253C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16269  002540  0E04               	movlw	4
 16270  002542  D005               	goto	i1u1134_20
 16271  002544                     i1u1134_25:
 16272  002544  90D8               	bcf	status,0,c
 16273  002546  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16274  002548  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16275  00254A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16276  00254C  3235               	rrcf	??i1_CANsendMessage,f,c
 16277  00254E                     i1u1134_20:
 16278  00254E  2EE8               	decfsz	wreg,f,c
 16279  002550  D7F9               	goto	i1u1134_25
 16280  002552  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16281  002556  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16282  00255A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16283  00255E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16284                           
 16285                           ; BSR set to: 15
 16286                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
 16287  002562  5039               	movf	i1CANsendMessage@tamp,w,c
 16288  002564  6E39               	movwf	i1CANsendMessage@tamp,c
 16289  002566  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16290  002568  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16291  00256A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16292                           
 16293                           ; BSR set to: 15
 16294                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
 16295  00256C  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16296                           
 16297                           ; BSR set to: 15
 16298                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
 16299  002570  0E07               	movlw	7
 16300  002572  142D               	andwf	i1CANsendMessage@identifier,w,c
 16301  002574  6E39               	movwf	i1CANsendMessage@tamp,c
 16302  002576  0E00               	movlw	0
 16303  002578  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16304  00257A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16305  00257C  0E00               	movlw	0
 16306  00257E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16307  002580  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16308  002582  0E00               	movlw	0
 16309  002584  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16310  002586  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16311                           
 16312                           ; BSR set to: 15
 16313                           ;inc\CANlib.h: 496: tamp = tamp << 5;
 16314  002588  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16315  00258C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16316  002590  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16317  002594  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16318  002598  0E05               	movlw	5
 16319  00259A                     i1u1135_25:
 16320  00259A  90D8               	bcf	status,0,c
 16321  00259C  3635               	rlcf	??i1_CANsendMessage,f,c
 16322  00259E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 16323  0025A0  3637               	rlcf	??i1_CANsendMessage+2,f,c
 16324  0025A2  3638               	rlcf	??i1_CANsendMessage+3,f,c
 16325  0025A4  2EE8               	decfsz	wreg,f,c
 16326  0025A6  D7F9               	goto	i1u1135_25
 16327  0025A8  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16328  0025AC  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16329  0025B0  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16330  0025B4  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16331                           
 16332                           ; BSR set to: 15
 16333                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
 16334  0025B8  010F               	movlb	15	; () banked
 16335  0025BA  5122               	movf	34,w,b	;volatile
 16336  0025BC  0B1F               	andlw	31
 16337  0025BE  010F               	movlb	15	; () banked
 16338  0025C0  6F22               	movwf	34,b	;volatile
 16339                           
 16340                           ; BSR set to: 15
 16341                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
 16342  0025C2  C039  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16343  0025C6                     i1l8526:
 16344                           
 16345                           ; BSR set to: 15
 16346                           ;inc\CANlib.h: 499: }
 16347                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
 16348  0025C6  A034               	btfss	i1CANsendMessage@flags,0,c
 16349  0025C8  D003               	goto	i1l402
 16350                           
 16351                           ; BSR set to: 15
 16352                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
 16353  0025CA  010F               	movlb	15	; () banked
 16354  0025CC  8120               	bsf	32,0,b	;volatile
 16355  0025CE  D002               	goto	i1l403
 16356  0025D0                     i1l402:
 16357                           
 16358                           ; BSR set to: 15
 16359                           ;inc\CANlib.h: 503: else
 16360                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
 16361  0025D0  010F               	movlb	15	; () banked
 16362  0025D2  9120               	bcf	32,0,b	;volatile
 16363  0025D4                     i1l403:
 16364                           
 16365                           ; BSR set to: 15
 16366                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
 16367  0025D4  A234               	btfss	i1CANsendMessage@flags,1,c
 16368  0025D6  D003               	goto	i1l404
 16369                           
 16370                           ; BSR set to: 15
 16371                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
 16372  0025D8  010F               	movlb	15	; () banked
 16373  0025DA  8320               	bsf	32,1,b	;volatile
 16374  0025DC  D002               	goto	i1l8532
 16375  0025DE                     i1l404:
 16376                           
 16377                           ; BSR set to: 15
 16378                           ;inc\CANlib.h: 507: else
 16379                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
 16380  0025DE  010F               	movlb	15	; () banked
 16381  0025E0  9320               	bcf	32,1,b	;volatile
 16382  0025E2                     i1l8532:
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
 16386  0025E2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16387  0025E6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16388  0025EA  50DF               	movf	indf2,w,c
 16389  0025EC  010F               	movlb	15	; () banked
 16390  0025EE  6F26               	movwf	38,b	;volatile
 16391                           
 16392                           ; BSR set to: 15
 16393                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
 16394  0025F0  EE20 F001          	lfsr	2,1
 16395  0025F4  5031               	movf	i1CANsendMessage@data,w,c
 16396  0025F6  26D9               	addwf	fsr2l,f,c
 16397  0025F8  5032               	movf	i1CANsendMessage@data+1,w,c
 16398  0025FA  22DA               	addwfc	fsr2h,f,c
 16399  0025FC  50DF               	movf	indf2,w,c
 16400  0025FE  010F               	movlb	15	; () banked
 16401  002600  6F27               	movwf	39,b	;volatile
 16402                           
 16403                           ; BSR set to: 15
 16404                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
 16405  002602  EE20 F002          	lfsr	2,2
 16406  002606  5031               	movf	i1CANsendMessage@data,w,c
 16407  002608  26D9               	addwf	fsr2l,f,c
 16408  00260A  5032               	movf	i1CANsendMessage@data+1,w,c
 16409  00260C  22DA               	addwfc	fsr2h,f,c
 16410  00260E  50DF               	movf	indf2,w,c
 16411  002610  010F               	movlb	15	; () banked
 16412  002612  6F28               	movwf	40,b	;volatile
 16413                           
 16414                           ; BSR set to: 15
 16415                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
 16416  002614  EE20 F003          	lfsr	2,3
 16417  002618  5031               	movf	i1CANsendMessage@data,w,c
 16418  00261A  26D9               	addwf	fsr2l,f,c
 16419  00261C  5032               	movf	i1CANsendMessage@data+1,w,c
 16420  00261E  22DA               	addwfc	fsr2h,f,c
 16421  002620  50DF               	movf	indf2,w,c
 16422  002622  010F               	movlb	15	; () banked
 16423  002624  6F29               	movwf	41,b	;volatile
 16424                           
 16425                           ; BSR set to: 15
 16426                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
 16427  002626  EE20 F004          	lfsr	2,4
 16428  00262A  5031               	movf	i1CANsendMessage@data,w,c
 16429  00262C  26D9               	addwf	fsr2l,f,c
 16430  00262E  5032               	movf	i1CANsendMessage@data+1,w,c
 16431  002630  22DA               	addwfc	fsr2h,f,c
 16432  002632  50DF               	movf	indf2,w,c
 16433  002634  010F               	movlb	15	; () banked
 16434  002636  6F2A               	movwf	42,b	;volatile
 16435                           
 16436                           ; BSR set to: 15
 16437                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
 16438  002638  EE20 F005          	lfsr	2,5
 16439  00263C  5031               	movf	i1CANsendMessage@data,w,c
 16440  00263E  26D9               	addwf	fsr2l,f,c
 16441  002640  5032               	movf	i1CANsendMessage@data+1,w,c
 16442  002642  22DA               	addwfc	fsr2h,f,c
 16443  002644  50DF               	movf	indf2,w,c
 16444  002646  010F               	movlb	15	; () banked
 16445  002648  6F2B               	movwf	43,b	;volatile
 16446                           
 16447                           ; BSR set to: 15
 16448                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
 16449  00264A  EE20 F006          	lfsr	2,6
 16450  00264E  5031               	movf	i1CANsendMessage@data,w,c
 16451  002650  26D9               	addwf	fsr2l,f,c
 16452  002652  5032               	movf	i1CANsendMessage@data+1,w,c
 16453  002654  22DA               	addwfc	fsr2h,f,c
 16454  002656  50DF               	movf	indf2,w,c
 16455  002658  010F               	movlb	15	; () banked
 16456  00265A  6F2C               	movwf	44,b	;volatile
 16457                           
 16458                           ; BSR set to: 15
 16459                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
 16460  00265C  EE20 F007          	lfsr	2,7
 16461  002660  5031               	movf	i1CANsendMessage@data,w,c
 16462  002662  26D9               	addwf	fsr2l,f,c
 16463  002664  5032               	movf	i1CANsendMessage@data+1,w,c
 16464  002666  22DA               	addwfc	fsr2h,f,c
 16465  002668  50DF               	movf	indf2,w,c
 16466  00266A  010F               	movlb	15	; () banked
 16467  00266C  6F2D               	movwf	45,b	;volatile
 16468                           
 16469                           ; BSR set to: 15
 16470                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
 16471  00266E  010F               	movlb	15	; () banked
 16472  002670  8720               	bsf	32,3,b	;volatile
 16473                           
 16474                           ; BSR set to: 15
 16475                           ;inc\CANlib.h: 521: return;
 16476  002672  0012               	return	
 16477  002674                     __end_ofi1_CANsendMessage:
 16478                           	opt stack 0
 16479                           pclatu	equ	0xFFB
 16480                           pclath	equ	0xFFA
 16481                           tblptru	equ	0xFF8
 16482                           tblptrh	equ	0xFF7
 16483                           tblptrl	equ	0xFF6
 16484                           tablat	equ	0xFF5
 16485                           prodh	equ	0xFF4
 16486                           prodl	equ	0xFF3
 16487                           intcon	equ	0xFF2
 16488                           intcon2	equ	0xFF1
 16489                           postinc0	equ	0xFEE
 16490                           fsr0h	equ	0xFEA
 16491                           fsr0l	equ	0xFE9
 16492                           wreg	equ	0xFE8
 16493                           indf1	equ	0xFE7
 16494                           postdec1	equ	0xFE5
 16495                           fsr1h	equ	0xFE2
 16496                           fsr1l	equ	0xFE1
 16497                           bsr	equ	0xFE0
 16498                           indf2	equ	0xFDF
 16499                           postinc2	equ	0xFDE
 16500                           postdec2	equ	0xFDD
 16501                           plusw2	equ	0xFDB
 16502                           fsr2h	equ	0xFDA
 16503                           fsr2l	equ	0xFD9
 16504                           status	equ	0xFD8
 16505                           
 16506 ;; *************** function i1_CANisTxReady *****************
 16507 ;; Defined at:
 16508 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 16509 ;; Parameters:    Size  Location     Type
 16510 ;;		None
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;		None
 16513 ;; Return value:  Size  Location     Type
 16514 ;;                  1    wreg      unsigned char 
 16515 ;; Registers used:
 16516 ;;		wreg, status,2
 16517 ;; Tracked objects:
 16518 ;;		On entry : 0/0
 16519 ;;		On exit  : 0/0
 16520 ;;		Unchanged: 0/0
 16521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16526 ;;Total ram usage:        1 bytes
 16527 ;; Hardware stack levels used:    1
 16528 ;; Hardware stack levels required when called:    2
 16529 ;; This function calls:
 16530 ;;		Nothing
 16531 ;; This function is called by:
 16532 ;;		_ISR_Bassa
 16533 ;; This function uses a non-reentrant model
 16534 ;;
 16535                           
 16536                           	psect	text37
 16537  0066BC                     __ptext37:
 16538                           	opt stack 0
 16539  0066BC                     i1_CANisTxReady:
 16540                           	opt stack 21
 16541                           
 16542                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16543                           
 16544                           ; BSR set to: 15
 16545                           ;incstack = 0
 16546  0066BC  0E01               	movlw	1
 16547  0066BE  6E2D               	movwf	i1_CANisTxReady$2845,c
 16548  0066C0  010F               	movlb	15	; () banked
 16549  0066C2  A740               	btfss	64,3,b	;volatile
 16550  0066C4  D008               	goto	i1l556
 16551                           
 16552                           ; BSR set to: 15
 16553  0066C6  010F               	movlb	15	; () banked
 16554  0066C8  A730               	btfss	48,3,b	;volatile
 16555  0066CA  D005               	goto	i1l556
 16556                           
 16557                           ; BSR set to: 15
 16558  0066CC  010F               	movlb	15	; () banked
 16559  0066CE  A720               	btfss	32,3,b	;volatile
 16560  0066D0  D002               	goto	i1l556
 16561                           
 16562                           ; BSR set to: 15
 16563  0066D2  0E00               	movlw	0
 16564  0066D4  6E2D               	movwf	i1_CANisTxReady$2845,c
 16565  0066D6                     i1l556:
 16566                           
 16567                           ; BSR set to: 15
 16568  0066D6  502D               	movf	i1_CANisTxReady$2845,w,c
 16569  0066D8  0012               	return	
 16570  0066DA                     __end_ofi1_CANisTxReady:
 16571                           	opt stack 0
 16572                           pclatu	equ	0xFFB
 16573                           pclath	equ	0xFFA
 16574                           tblptru	equ	0xFF8
 16575                           tblptrh	equ	0xFF7
 16576                           tblptrl	equ	0xFF6
 16577                           tablat	equ	0xFF5
 16578                           prodh	equ	0xFF4
 16579                           prodl	equ	0xFF3
 16580                           intcon	equ	0xFF2
 16581                           intcon2	equ	0xFF1
 16582                           postinc0	equ	0xFEE
 16583                           fsr0h	equ	0xFEA
 16584                           fsr0l	equ	0xFE9
 16585                           wreg	equ	0xFE8
 16586                           indf1	equ	0xFE7
 16587                           postdec1	equ	0xFE5
 16588                           fsr1h	equ	0xFE2
 16589                           fsr1l	equ	0xFE1
 16590                           bsr	equ	0xFE0
 16591                           indf2	equ	0xFDF
 16592                           postinc2	equ	0xFDE
 16593                           postdec2	equ	0xFDD
 16594                           plusw2	equ	0xFDB
 16595                           fsr2h	equ	0xFDA
 16596                           fsr2l	equ	0xFD9
 16597                           status	equ	0xFD8
 16598                           
 16599 ;; *************** function _CANreceiveMessage *****************
 16600 ;; Defined at:
 16601 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 16602 ;; Parameters:    Size  Location     Type
 16603 ;;  msg             2    0[COMRAM] PTR struct .
 16604 ;;		 -> msg(15), 
 16605 ;; Auto vars:     Size  Location     Type
 16606 ;;  tamp            1   11[COMRAM] unsigned char 
 16607 ;;  error           1   10[COMRAM] unsigned char 
 16608 ;; Return value:  Size  Location     Type
 16609 ;;                  1    wreg      unsigned char 
 16610 ;; Registers used:
 16611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16612 ;; Tracked objects:
 16613 ;;		On entry : 0/0
 16614 ;;		On exit  : 0/0
 16615 ;;		Unchanged: 0/0
 16616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16619 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16620 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16621 ;;Total ram usage:       12 bytes
 16622 ;; Hardware stack levels used:    1
 16623 ;; Hardware stack levels required when called:    2
 16624 ;; This function calls:
 16625 ;;		Nothing
 16626 ;; This function is called by:
 16627 ;;		_ISR_Bassa
 16628 ;; This function uses a non-reentrant model
 16629 ;;
 16630                           
 16631                           	psect	text38
 16632  002BFE                     __ptext38:
 16633                           	opt stack 0
 16634  002BFE                     _CANreceiveMessage:
 16635                           	opt stack 21
 16636                           
 16637                           ;inc\CANlib.h: 531: BYTE tamp;
 16638                           ;inc\CANlib.h: 532: BYTE error = 0;
 16639                           
 16640                           ; BSR set to: 15
 16641                           ;incstack = 0
 16642  002BFE  0E00               	movlw	0
 16643  002C00  6E37               	movwf	CANreceiveMessage@error,c
 16644                           
 16645                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 16646  002C02  BE74               	btfsc	3956,7,c	;volatile
 16647                           
 16648                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 16649  002C04  8037               	bsf	CANreceiveMessage@error,0,c
 16650                           
 16651                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 16652  002C06  BC74               	btfsc	3956,6,c	;volatile
 16653                           
 16654                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 16655  002C08  8237               	bsf	CANreceiveMessage@error,1,c
 16656                           
 16657                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 16658  002C0A  010F               	movlb	15	; () banked
 16659  002C0C  AF50               	btfss	80,7,b	;volatile
 16660  002C0E  D143               	goto	i1l410
 16661                           
 16662                           ; BSR set to: 15
 16663                           ;inc\CANlib.h: 542: {
 16664                           ;inc\CANlib.h: 543: msg->identifier = 0;
 16665  002C10  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16666  002C14  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16667  002C18  6ADE               	clrf	postinc2,c
 16668  002C1A  6ADE               	clrf	postinc2,c
 16669  002C1C  6ADE               	clrf	postinc2,c
 16670  002C1E  6ADD               	clrf	postdec2,c
 16671                           
 16672                           ; BSR set to: 15
 16673                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 16674  002C20  EE20 F004          	lfsr	2,4
 16675  002C24  502D               	movf	CANreceiveMessage@msg,w,c
 16676  002C26  26D9               	addwf	fsr2l,f,c
 16677  002C28  502E               	movf	CANreceiveMessage@msg+1,w,c
 16678  002C2A  22DA               	addwfc	fsr2h,f,c
 16679  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16680                           
 16681                           ; BSR set to: 15
 16682                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 16683  002C30  EE20 F005          	lfsr	2,5
 16684  002C34  502D               	movf	CANreceiveMessage@msg,w,c
 16685  002C36  26D9               	addwf	fsr2l,f,c
 16686  002C38  502E               	movf	CANreceiveMessage@msg+1,w,c
 16687  002C3A  22DA               	addwfc	fsr2h,f,c
 16688  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16689                           
 16690                           ; BSR set to: 15
 16691                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 16692  002C40  EE20 F006          	lfsr	2,6
 16693  002C44  502D               	movf	CANreceiveMessage@msg,w,c
 16694  002C46  26D9               	addwf	fsr2l,f,c
 16695  002C48  502E               	movf	CANreceiveMessage@msg+1,w,c
 16696  002C4A  22DA               	addwfc	fsr2h,f,c
 16697  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16698                           
 16699                           ; BSR set to: 15
 16700                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 16701  002C50  EE20 F007          	lfsr	2,7
 16702  002C54  502D               	movf	CANreceiveMessage@msg,w,c
 16703  002C56  26D9               	addwf	fsr2l,f,c
 16704  002C58  502E               	movf	CANreceiveMessage@msg+1,w,c
 16705  002C5A  22DA               	addwfc	fsr2h,f,c
 16706  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16707                           
 16708                           ; BSR set to: 15
 16709                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 16710  002C60  EE20 F008          	lfsr	2,8
 16711  002C64  502D               	movf	CANreceiveMessage@msg,w,c
 16712  002C66  26D9               	addwf	fsr2l,f,c
 16713  002C68  502E               	movf	CANreceiveMessage@msg+1,w,c
 16714  002C6A  22DA               	addwfc	fsr2h,f,c
 16715  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16716                           
 16717                           ; BSR set to: 15
 16718                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 16719  002C70  EE20 F009          	lfsr	2,9
 16720  002C74  502D               	movf	CANreceiveMessage@msg,w,c
 16721  002C76  26D9               	addwf	fsr2l,f,c
 16722  002C78  502E               	movf	CANreceiveMessage@msg+1,w,c
 16723  002C7A  22DA               	addwfc	fsr2h,f,c
 16724  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16725                           
 16726                           ; BSR set to: 15
 16727                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 16728  002C80  EE20 F00A          	lfsr	2,10
 16729  002C84  502D               	movf	CANreceiveMessage@msg,w,c
 16730  002C86  26D9               	addwf	fsr2l,f,c
 16731  002C88  502E               	movf	CANreceiveMessage@msg+1,w,c
 16732  002C8A  22DA               	addwfc	fsr2h,f,c
 16733  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16734                           
 16735                           ; BSR set to: 15
 16736                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 16737  002C90  EE20 F00B          	lfsr	2,11
 16738  002C94  502D               	movf	CANreceiveMessage@msg,w,c
 16739  002C96  26D9               	addwf	fsr2l,f,c
 16740  002C98  502E               	movf	CANreceiveMessage@msg+1,w,c
 16741  002C9A  22DA               	addwfc	fsr2h,f,c
 16742  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16743                           
 16744                           ; BSR set to: 15
 16745                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 16746  002CA0  EE20 F00E          	lfsr	2,14
 16747  002CA4  502D               	movf	CANreceiveMessage@msg,w,c
 16748  002CA6  26D9               	addwf	fsr2l,f,c
 16749  002CA8  502E               	movf	CANreceiveMessage@msg+1,w,c
 16750  002CAA  22DA               	addwfc	fsr2h,f,c
 16751  002CAC  010F               	movlb	15	; () banked
 16752  002CAE  AD55               	btfss	85,6,b	;volatile
 16753  002CB0  D002               	goto	i1u733_20
 16754  002CB2  0E01               	movlw	1
 16755  002CB4  D001               	goto	i1u733_26
 16756  002CB6                     i1u733_20:
 16757  002CB6  0E00               	movlw	0
 16758  002CB8                     i1u733_26:
 16759  002CB8  6EDF               	movwf	indf2,c
 16760                           
 16761                           ; BSR set to: 15
 16762                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 16763  002CBA  EE20 F00D          	lfsr	2,13
 16764  002CBE  502D               	movf	CANreceiveMessage@msg,w,c
 16765  002CC0  26D9               	addwf	fsr2l,f,c
 16766  002CC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 16767  002CC4  22DA               	addwfc	fsr2h,f,c
 16768  002CC6  010F               	movlb	15	; () banked
 16769  002CC8  5155               	movf	85,w,b	;volatile
 16770  002CCA  0B0F               	andlw	15
 16771  002CCC  6EDF               	movwf	indf2,c
 16772                           
 16773                           ; BSR set to: 15
 16774                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 16775  002CCE  EE20 F00C          	lfsr	2,12
 16776  002CD2  502D               	movf	CANreceiveMessage@msg,w,c
 16777  002CD4  26D9               	addwf	fsr2l,f,c
 16778  002CD6  502E               	movf	CANreceiveMessage@msg+1,w,c
 16779  002CD8  22DA               	addwfc	fsr2h,f,c
 16780  002CDA  010F               	movlb	15	; () banked
 16781  002CDC  A752               	btfss	82,3,b	;volatile
 16782  002CDE  D002               	goto	i1u734_20
 16783  002CE0  0E01               	movlw	1
 16784  002CE2  D001               	goto	i1u734_26
 16785  002CE4                     i1u734_20:
 16786  002CE4  0E00               	movlw	0
 16787  002CE6                     i1u734_26:
 16788  002CE6  6EDF               	movwf	indf2,c
 16789                           
 16790                           ; BSR set to: 15
 16791                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 16792  002CE8  010F               	movlb	15	; () banked
 16793  002CEA  B752               	btfsc	82,3,b	;volatile
 16794  002CEC  D044               	goto	i1l5930
 16795                           
 16796                           ; BSR set to: 15
 16797                           ;inc\CANlib.h: 560: {
 16798                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16799  002CEE  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 16800  002CF2  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16801  002CF4  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16802  002CF6  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16803  002CF8  0E03               	movlw	3
 16804  002CFA                     i1u736_25:
 16805  002CFA  90D8               	bcf	status,0,c
 16806  002CFC  362F               	rlcf	??_CANreceiveMessage,f,c
 16807  002CFE  3630               	rlcf	??_CANreceiveMessage+1,f,c
 16808  002D00  3631               	rlcf	??_CANreceiveMessage+2,f,c
 16809  002D02  3632               	rlcf	??_CANreceiveMessage+3,f,c
 16810  002D04  2EE8               	decfsz	wreg,f,c
 16811  002D06  D7F9               	goto	i1u736_25
 16812  002D08  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16813  002D0C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16814  002D10  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16815  002D14  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16816  002D18  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16817  002D1C  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16818                           
 16819                           ; BSR set to: 15
 16820                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16821  002D20  010F               	movlb	15	; () banked
 16822  002D22  3952               	swapf	82,w,b	;volatile
 16823  002D24  42E8               	rrncf	wreg,f,c
 16824  002D26  0B07               	andlw	7
 16825  002D28  0B07               	andlw	7
 16826  002D2A  6E38               	movwf	CANreceiveMessage@tamp,c
 16827                           
 16828                           ; BSR set to: 15
 16829                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 16830  002D2C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16831  002D30  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16832  002D34  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 16833  002D38  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 16834  002D3C  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 16835  002D40  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 16836  002D44  5038               	movf	CANreceiveMessage@tamp,w,c
 16837  002D46  242F               	addwf	??_CANreceiveMessage,w,c
 16838  002D48  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16839  002D4A  0E00               	movlw	0
 16840  002D4C  2030               	addwfc	??_CANreceiveMessage+1,w,c
 16841  002D4E  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16842  002D50  0E00               	movlw	0
 16843  002D52  2031               	addwfc	??_CANreceiveMessage+2,w,c
 16844  002D54  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16845  002D56  0E00               	movlw	0
 16846  002D58  2032               	addwfc	??_CANreceiveMessage+3,w,c
 16847  002D5A  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16848  002D5C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16849  002D60  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16850  002D64  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16851  002D68  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16852  002D6C  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16853  002D70  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16854                           
 16855                           ;inc\CANlib.h: 564: }
 16856  002D74  D08D               	goto	i1l5956
 16857  002D76                     i1l5930:
 16858                           
 16859                           ; BSR set to: 15
 16860                           ;inc\CANlib.h: 565: else
 16861                           ;inc\CANlib.h: 566: {
 16862                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 16863  002D76  CF54 F02F          	movff	3924,??_CANreceiveMessage	;volatile
 16864  002D7A  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16865  002D7C  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16866  002D7E  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16867  002D80  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16868  002D84  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16869  002D88  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16870  002D8C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16871  002D90  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16872  002D94  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16873                           
 16874                           ; BSR set to: 15
 16875                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16876  002D98  CF53 F02F          	movff	3923,??_CANreceiveMessage	;volatile
 16877  002D9C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16878  002D9E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16879  002DA0  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16880  002DA2  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16881  002DA6  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16882  002DAA  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16883  002DAE  6A2F               	clrf	??_CANreceiveMessage,c
 16884  002DB0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16885  002DB4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16886  002DB8  502F               	movf	??_CANreceiveMessage,w,c
 16887  002DBA  26DE               	addwf	postinc2,f,c
 16888  002DBC  5030               	movf	??_CANreceiveMessage+1,w,c
 16889  002DBE  22DE               	addwfc	postinc2,f,c
 16890  002DC0  5031               	movf	??_CANreceiveMessage+2,w,c
 16891  002DC2  22DE               	addwfc	postinc2,f,c
 16892  002DC4  5032               	movf	??_CANreceiveMessage+3,w,c
 16893  002DC6  22DE               	addwfc	postinc2,f,c
 16894                           
 16895                           ; BSR set to: 15
 16896                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 16897  002DC8  010F               	movlb	15	; () banked
 16898  002DCA  A152               	btfss	82,0,b	;volatile
 16899  002DCC  D00C               	goto	i1l5938
 16900                           
 16901                           ; BSR set to: 15
 16902                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 16903  002DCE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16904  002DD2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16905  002DD6  0E00               	movlw	0
 16906  002DD8  12DE               	iorwf	postinc2,f,c
 16907  002DDA  0E00               	movlw	0
 16908  002DDC  12DE               	iorwf	postinc2,f,c
 16909  002DDE  0E01               	movlw	1
 16910  002DE0  12DE               	iorwf	postinc2,f,c
 16911  002DE2  0E00               	movlw	0
 16912  002DE4  12DE               	iorwf	postinc2,f,c
 16913  002DE6                     i1l5938:
 16914                           
 16915                           ; BSR set to: 15
 16916                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 16917  002DE6  010F               	movlb	15	; () banked
 16918  002DE8  A352               	btfss	82,1,b	;volatile
 16919  002DEA  D00C               	goto	i1l5942
 16920                           
 16921                           ; BSR set to: 15
 16922                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 16923  002DEC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16924  002DF0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16925  002DF4  0E00               	movlw	0
 16926  002DF6  12DE               	iorwf	postinc2,f,c
 16927  002DF8  0E00               	movlw	0
 16928  002DFA  12DE               	iorwf	postinc2,f,c
 16929  002DFC  0E02               	movlw	2
 16930  002DFE  12DE               	iorwf	postinc2,f,c
 16931  002E00  0E00               	movlw	0
 16932  002E02  12DE               	iorwf	postinc2,f,c
 16933  002E04                     i1l5942:
 16934                           
 16935                           ; BSR set to: 15
 16936                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 16937  002E04  010F               	movlb	15	; () banked
 16938  002E06  AB52               	btfss	82,5,b	;volatile
 16939  002E08  D00C               	goto	i1l5946
 16940                           
 16941                           ; BSR set to: 15
 16942                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 16943  002E0A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16944  002E0E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16945  002E12  0E00               	movlw	0
 16946  002E14  12DE               	iorwf	postinc2,f,c
 16947  002E16  0E00               	movlw	0
 16948  002E18  12DE               	iorwf	postinc2,f,c
 16949  002E1A  0E04               	movlw	4
 16950  002E1C  12DE               	iorwf	postinc2,f,c
 16951  002E1E  0E00               	movlw	0
 16952  002E20  12DE               	iorwf	postinc2,f,c
 16953  002E22                     i1l5946:
 16954                           
 16955                           ; BSR set to: 15
 16956                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 16957  002E22  010F               	movlb	15	; () banked
 16958  002E24  AD52               	btfss	82,6,b	;volatile
 16959  002E26  D00C               	goto	i1l5950
 16960                           
 16961                           ; BSR set to: 15
 16962                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 16963  002E28  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16964  002E2C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16965  002E30  0E00               	movlw	0
 16966  002E32  12DE               	iorwf	postinc2,f,c
 16967  002E34  0E00               	movlw	0
 16968  002E36  12DE               	iorwf	postinc2,f,c
 16969  002E38  0E08               	movlw	8
 16970  002E3A  12DE               	iorwf	postinc2,f,c
 16971  002E3C  0E00               	movlw	0
 16972  002E3E  12DE               	iorwf	postinc2,f,c
 16973  002E40                     i1l5950:
 16974                           
 16975                           ; BSR set to: 15
 16976                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 16977  002E40  010F               	movlb	15	; () banked
 16978  002E42  AF52               	btfss	82,7,b	;volatile
 16979  002E44  D00C               	goto	i1l5954
 16980                           
 16981                           ; BSR set to: 15
 16982                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 16983  002E46  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16984  002E4A  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16985  002E4E  0E00               	movlw	0
 16986  002E50  12DE               	iorwf	postinc2,f,c
 16987  002E52  0E00               	movlw	0
 16988  002E54  12DE               	iorwf	postinc2,f,c
 16989  002E56  0E10               	movlw	16
 16990  002E58  12DE               	iorwf	postinc2,f,c
 16991  002E5A  0E00               	movlw	0
 16992  002E5C  12DE               	iorwf	postinc2,f,c
 16993  002E5E                     i1l5954:
 16994                           
 16995                           ; BSR set to: 15
 16996                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 16997  002E5E  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 16998  002E62  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16999  002E64  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17000  002E66  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17001  002E68  0E15               	movlw	21
 17002  002E6A                     i1u742_25:
 17003  002E6A  90D8               	bcf	status,0,c
 17004  002E6C  362F               	rlcf	??_CANreceiveMessage,f,c
 17005  002E6E  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17006  002E70  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17007  002E72  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17008  002E74  2EE8               	decfsz	wreg,f,c
 17009  002E76  D7F9               	goto	i1u742_25
 17010  002E78  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17011  002E7C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17012  002E80  502F               	movf	??_CANreceiveMessage,w,c
 17013  002E82  12DE               	iorwf	postinc2,f,c
 17014  002E84  5030               	movf	??_CANreceiveMessage+1,w,c
 17015  002E86  12DE               	iorwf	postinc2,f,c
 17016  002E88  5031               	movf	??_CANreceiveMessage+2,w,c
 17017  002E8A  12DE               	iorwf	postinc2,f,c
 17018  002E8C  5032               	movf	??_CANreceiveMessage+3,w,c
 17019  002E8E  12DE               	iorwf	postinc2,f,c
 17020  002E90                     i1l5956:
 17021                           
 17022                           ; BSR set to: 15
 17023                           ;inc\CANlib.h: 582: }
 17024                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 17025  002E90  010F               	movlb	15	; () banked
 17026  002E92  9F50               	bcf	80,7,b	;volatile
 17027                           
 17028                           ; BSR set to: 15
 17029                           ;inc\CANlib.h: 585: return (error);
 17030                           ;	Return value of _CANreceiveMessage is never used
 17031  002E94  0012               	return	
 17032  002E96                     i1l410:
 17033                           
 17034                           ; BSR set to: 15
 17035                           ;inc\CANlib.h: 586: }
 17036                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 17037  002E96  AE60               	btfss	3936,7,c	;volatile
 17038  002E98  0012               	return	
 17039                           
 17040                           ; BSR set to: 15
 17041                           ;inc\CANlib.h: 589: {
 17042                           ;inc\CANlib.h: 590: msg->identifier = 0;
 17043  002E9A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17044  002E9E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17045  002EA2  6ADE               	clrf	postinc2,c
 17046  002EA4  6ADE               	clrf	postinc2,c
 17047  002EA6  6ADE               	clrf	postinc2,c
 17048  002EA8  6ADD               	clrf	postdec2,c
 17049                           
 17050                           ; BSR set to: 15
 17051                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 17052  002EAA  EE20 F004          	lfsr	2,4
 17053  002EAE  502D               	movf	CANreceiveMessage@msg,w,c
 17054  002EB0  26D9               	addwf	fsr2l,f,c
 17055  002EB2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17056  002EB4  22DA               	addwfc	fsr2h,f,c
 17057  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17058                           
 17059                           ; BSR set to: 15
 17060                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 17061  002EBA  EE20 F005          	lfsr	2,5
 17062  002EBE  502D               	movf	CANreceiveMessage@msg,w,c
 17063  002EC0  26D9               	addwf	fsr2l,f,c
 17064  002EC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17065  002EC4  22DA               	addwfc	fsr2h,f,c
 17066  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17067                           
 17068                           ; BSR set to: 15
 17069                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 17070  002ECA  EE20 F006          	lfsr	2,6
 17071  002ECE  502D               	movf	CANreceiveMessage@msg,w,c
 17072  002ED0  26D9               	addwf	fsr2l,f,c
 17073  002ED2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17074  002ED4  22DA               	addwfc	fsr2h,f,c
 17075  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17076                           
 17077                           ; BSR set to: 15
 17078                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 17079  002EDA  EE20 F007          	lfsr	2,7
 17080  002EDE  502D               	movf	CANreceiveMessage@msg,w,c
 17081  002EE0  26D9               	addwf	fsr2l,f,c
 17082  002EE2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17083  002EE4  22DA               	addwfc	fsr2h,f,c
 17084  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17085                           
 17086                           ; BSR set to: 15
 17087                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 17088  002EEA  EE20 F008          	lfsr	2,8
 17089  002EEE  502D               	movf	CANreceiveMessage@msg,w,c
 17090  002EF0  26D9               	addwf	fsr2l,f,c
 17091  002EF2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17092  002EF4  22DA               	addwfc	fsr2h,f,c
 17093  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17094                           
 17095                           ; BSR set to: 15
 17096                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 17097  002EFA  EE20 F009          	lfsr	2,9
 17098  002EFE  502D               	movf	CANreceiveMessage@msg,w,c
 17099  002F00  26D9               	addwf	fsr2l,f,c
 17100  002F02  502E               	movf	CANreceiveMessage@msg+1,w,c
 17101  002F04  22DA               	addwfc	fsr2h,f,c
 17102  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17103                           
 17104                           ; BSR set to: 15
 17105                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 17106  002F0A  EE20 F00A          	lfsr	2,10
 17107  002F0E  502D               	movf	CANreceiveMessage@msg,w,c
 17108  002F10  26D9               	addwf	fsr2l,f,c
 17109  002F12  502E               	movf	CANreceiveMessage@msg+1,w,c
 17110  002F14  22DA               	addwfc	fsr2h,f,c
 17111  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17112                           
 17113                           ; BSR set to: 15
 17114                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 17115  002F1A  EE20 F00B          	lfsr	2,11
 17116  002F1E  502D               	movf	CANreceiveMessage@msg,w,c
 17117  002F20  26D9               	addwf	fsr2l,f,c
 17118  002F22  502E               	movf	CANreceiveMessage@msg+1,w,c
 17119  002F24  22DA               	addwfc	fsr2h,f,c
 17120  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17121                           
 17122                           ; BSR set to: 15
 17123                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 17124  002F2A  EE20 F00E          	lfsr	2,14
 17125  002F2E  502D               	movf	CANreceiveMessage@msg,w,c
 17126  002F30  26D9               	addwf	fsr2l,f,c
 17127  002F32  502E               	movf	CANreceiveMessage@msg+1,w,c
 17128  002F34  22DA               	addwfc	fsr2h,f,c
 17129  002F36  AC65               	btfss	3941,6,c	;volatile
 17130  002F38  D002               	goto	i1u744_20
 17131  002F3A  0E01               	movlw	1
 17132  002F3C  D001               	goto	i1u744_26
 17133  002F3E                     i1u744_20:
 17134  002F3E  0E00               	movlw	0
 17135  002F40                     i1u744_26:
 17136  002F40  6EDF               	movwf	indf2,c
 17137                           
 17138                           ; BSR set to: 15
 17139                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 17140  002F42  EE20 F00D          	lfsr	2,13
 17141  002F46  502D               	movf	CANreceiveMessage@msg,w,c
 17142  002F48  26D9               	addwf	fsr2l,f,c
 17143  002F4A  502E               	movf	CANreceiveMessage@msg+1,w,c
 17144  002F4C  22DA               	addwfc	fsr2h,f,c
 17145  002F4E  5065               	movf	3941,w,c	;volatile
 17146  002F50  0B0F               	andlw	15
 17147  002F52  6EDF               	movwf	indf2,c
 17148                           
 17149                           ; BSR set to: 15
 17150                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 17151  002F54  EE20 F00C          	lfsr	2,12
 17152  002F58  502D               	movf	CANreceiveMessage@msg,w,c
 17153  002F5A  26D9               	addwf	fsr2l,f,c
 17154  002F5C  502E               	movf	CANreceiveMessage@msg+1,w,c
 17155  002F5E  22DA               	addwfc	fsr2h,f,c
 17156  002F60  A662               	btfss	3938,3,c	;volatile
 17157  002F62  D002               	goto	i1u745_20
 17158  002F64  0E01               	movlw	1
 17159  002F66  D001               	goto	i1u745_26
 17160  002F68                     i1u745_20:
 17161  002F68  0E00               	movlw	0
 17162  002F6A                     i1u745_26:
 17163  002F6A  6EDF               	movwf	indf2,c
 17164                           
 17165                           ; BSR set to: 15
 17166                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 17167  002F6C  B662               	btfsc	3938,3,c	;volatile
 17168  002F6E  D043               	goto	i1l5992
 17169                           
 17170                           ; BSR set to: 15
 17171                           ;inc\CANlib.h: 607: {
 17172                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17173  002F70  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17174  002F74  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17175  002F76  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17176  002F78  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17177  002F7A  0E03               	movlw	3
 17178  002F7C                     i1u747_25:
 17179  002F7C  90D8               	bcf	status,0,c
 17180  002F7E  362F               	rlcf	??_CANreceiveMessage,f,c
 17181  002F80  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17182  002F82  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17183  002F84  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17184  002F86  2EE8               	decfsz	wreg,f,c
 17185  002F88  D7F9               	goto	i1u747_25
 17186  002F8A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17187  002F8E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17188  002F92  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17189  002F96  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17190  002F9A  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17191  002F9E  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17192                           
 17193                           ; BSR set to: 15
 17194                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17195  002FA2  3862               	swapf	3938,w,c	;volatile
 17196  002FA4  42E8               	rrncf	wreg,f,c
 17197  002FA6  0B07               	andlw	7
 17198  002FA8  0B07               	andlw	7
 17199  002FAA  6E38               	movwf	CANreceiveMessage@tamp,c
 17200                           
 17201                           ; BSR set to: 15
 17202                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 17203  002FAC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17204  002FB0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17205  002FB4  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 17206  002FB8  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 17207  002FBC  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 17208  002FC0  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 17209  002FC4  5038               	movf	CANreceiveMessage@tamp,w,c
 17210  002FC6  242F               	addwf	??_CANreceiveMessage,w,c
 17211  002FC8  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17212  002FCA  0E00               	movlw	0
 17213  002FCC  2030               	addwfc	??_CANreceiveMessage+1,w,c
 17214  002FCE  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17215  002FD0  0E00               	movlw	0
 17216  002FD2  2031               	addwfc	??_CANreceiveMessage+2,w,c
 17217  002FD4  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17218  002FD6  0E00               	movlw	0
 17219  002FD8  2032               	addwfc	??_CANreceiveMessage+3,w,c
 17220  002FDA  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17221  002FDC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17222  002FE0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17223  002FE4  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17224  002FE8  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17225  002FEC  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17226  002FF0  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17227                           
 17228                           ;inc\CANlib.h: 611: }
 17229  002FF4  D088               	goto	i1l6018
 17230  002FF6                     i1l5992:
 17231                           
 17232                           ; BSR set to: 15
 17233                           ;inc\CANlib.h: 612: else
 17234                           ;inc\CANlib.h: 613: {
 17235                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 17236  002FF6  CF64 F02F          	movff	3940,??_CANreceiveMessage	;volatile
 17237  002FFA  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17238  002FFC  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17239  002FFE  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17240  003000  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17241  003004  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17242  003008  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17243  00300C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17244  003010  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17245  003014  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17246                           
 17247                           ; BSR set to: 15
 17248                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17249  003018  CF63 F02F          	movff	3939,??_CANreceiveMessage	;volatile
 17250  00301C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17251  00301E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17252  003020  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17253  003022  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17254  003026  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17255  00302A  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17256  00302E  6A2F               	clrf	??_CANreceiveMessage,c
 17257  003030  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17258  003034  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17259  003038  502F               	movf	??_CANreceiveMessage,w,c
 17260  00303A  26DE               	addwf	postinc2,f,c
 17261  00303C  5030               	movf	??_CANreceiveMessage+1,w,c
 17262  00303E  22DE               	addwfc	postinc2,f,c
 17263  003040  5031               	movf	??_CANreceiveMessage+2,w,c
 17264  003042  22DE               	addwfc	postinc2,f,c
 17265  003044  5032               	movf	??_CANreceiveMessage+3,w,c
 17266  003046  22DE               	addwfc	postinc2,f,c
 17267                           
 17268                           ; BSR set to: 15
 17269                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 17270  003048  A062               	btfss	3938,0,c	;volatile
 17271  00304A  D00C               	goto	i1l6000
 17272                           
 17273                           ; BSR set to: 15
 17274                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 17275  00304C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17276  003050  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17277  003054  0E00               	movlw	0
 17278  003056  12DE               	iorwf	postinc2,f,c
 17279  003058  0E00               	movlw	0
 17280  00305A  12DE               	iorwf	postinc2,f,c
 17281  00305C  0E01               	movlw	1
 17282  00305E  12DE               	iorwf	postinc2,f,c
 17283  003060  0E00               	movlw	0
 17284  003062  12DE               	iorwf	postinc2,f,c
 17285  003064                     i1l6000:
 17286                           
 17287                           ; BSR set to: 15
 17288                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 17289  003064  A262               	btfss	3938,1,c	;volatile
 17290  003066  D00C               	goto	i1l6004
 17291                           
 17292                           ; BSR set to: 15
 17293                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 17294  003068  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17295  00306C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17296  003070  0E00               	movlw	0
 17297  003072  12DE               	iorwf	postinc2,f,c
 17298  003074  0E00               	movlw	0
 17299  003076  12DE               	iorwf	postinc2,f,c
 17300  003078  0E02               	movlw	2
 17301  00307A  12DE               	iorwf	postinc2,f,c
 17302  00307C  0E00               	movlw	0
 17303  00307E  12DE               	iorwf	postinc2,f,c
 17304  003080                     i1l6004:
 17305                           
 17306                           ; BSR set to: 15
 17307                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 17308  003080  AA62               	btfss	3938,5,c	;volatile
 17309  003082  D00C               	goto	i1l6008
 17310                           
 17311                           ; BSR set to: 15
 17312                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 17313  003084  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17314  003088  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17315  00308C  0E00               	movlw	0
 17316  00308E  12DE               	iorwf	postinc2,f,c
 17317  003090  0E00               	movlw	0
 17318  003092  12DE               	iorwf	postinc2,f,c
 17319  003094  0E04               	movlw	4
 17320  003096  12DE               	iorwf	postinc2,f,c
 17321  003098  0E00               	movlw	0
 17322  00309A  12DE               	iorwf	postinc2,f,c
 17323  00309C                     i1l6008:
 17324                           
 17325                           ; BSR set to: 15
 17326                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 17327  00309C  AC62               	btfss	3938,6,c	;volatile
 17328  00309E  D00C               	goto	i1l6012
 17329                           
 17330                           ; BSR set to: 15
 17331                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 17332  0030A0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17333  0030A4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17334  0030A8  0E00               	movlw	0
 17335  0030AA  12DE               	iorwf	postinc2,f,c
 17336  0030AC  0E00               	movlw	0
 17337  0030AE  12DE               	iorwf	postinc2,f,c
 17338  0030B0  0E08               	movlw	8
 17339  0030B2  12DE               	iorwf	postinc2,f,c
 17340  0030B4  0E00               	movlw	0
 17341  0030B6  12DE               	iorwf	postinc2,f,c
 17342  0030B8                     i1l6012:
 17343                           
 17344                           ; BSR set to: 15
 17345                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 17346  0030B8  AE62               	btfss	3938,7,c	;volatile
 17347  0030BA  D00C               	goto	i1l6016
 17348                           
 17349                           ; BSR set to: 15
 17350                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 17351  0030BC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17352  0030C0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17353  0030C4  0E00               	movlw	0
 17354  0030C6  12DE               	iorwf	postinc2,f,c
 17355  0030C8  0E00               	movlw	0
 17356  0030CA  12DE               	iorwf	postinc2,f,c
 17357  0030CC  0E10               	movlw	16
 17358  0030CE  12DE               	iorwf	postinc2,f,c
 17359  0030D0  0E00               	movlw	0
 17360  0030D2  12DE               	iorwf	postinc2,f,c
 17361  0030D4                     i1l6016:
 17362                           
 17363                           ; BSR set to: 15
 17364                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17365  0030D4  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17366  0030D8  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17367  0030DA  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17368  0030DC  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17369  0030DE  0E15               	movlw	21
 17370  0030E0                     i1u753_25:
 17371  0030E0  90D8               	bcf	status,0,c
 17372  0030E2  362F               	rlcf	??_CANreceiveMessage,f,c
 17373  0030E4  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17374  0030E6  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17375  0030E8  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17376  0030EA  2EE8               	decfsz	wreg,f,c
 17377  0030EC  D7F9               	goto	i1u753_25
 17378  0030EE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17379  0030F2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17380  0030F6  502F               	movf	??_CANreceiveMessage,w,c
 17381  0030F8  12DE               	iorwf	postinc2,f,c
 17382  0030FA  5030               	movf	??_CANreceiveMessage+1,w,c
 17383  0030FC  12DE               	iorwf	postinc2,f,c
 17384  0030FE  5031               	movf	??_CANreceiveMessage+2,w,c
 17385  003100  12DE               	iorwf	postinc2,f,c
 17386  003102  5032               	movf	??_CANreceiveMessage+3,w,c
 17387  003104  12DE               	iorwf	postinc2,f,c
 17388  003106                     i1l6018:
 17389                           
 17390                           ; BSR set to: 15
 17391                           ;inc\CANlib.h: 630: }
 17392                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 17393  003106  9E60               	bcf	3936,7,c	;volatile
 17394                           
 17395                           ; BSR set to: 15
 17396                           ;inc\CANlib.h: 633: return (error);
 17397                           ;	Return value of _CANreceiveMessage is never used
 17398  003108  0012               	return	
 17399  00310A                     __end_of_CANreceiveMessage:
 17400                           	opt stack 0
 17401                           pclatu	equ	0xFFB
 17402                           pclath	equ	0xFFA
 17403                           tblptru	equ	0xFF8
 17404                           tblptrh	equ	0xFF7
 17405                           tblptrl	equ	0xFF6
 17406                           tablat	equ	0xFF5
 17407                           prodh	equ	0xFF4
 17408                           prodl	equ	0xFF3
 17409                           intcon	equ	0xFF2
 17410                           intcon2	equ	0xFF1
 17411                           postinc0	equ	0xFEE
 17412                           fsr0h	equ	0xFEA
 17413                           fsr0l	equ	0xFE9
 17414                           wreg	equ	0xFE8
 17415                           indf1	equ	0xFE7
 17416                           postdec1	equ	0xFE5
 17417                           fsr1h	equ	0xFE2
 17418                           fsr1l	equ	0xFE1
 17419                           bsr	equ	0xFE0
 17420                           indf2	equ	0xFDF
 17421                           postinc2	equ	0xFDE
 17422                           postdec2	equ	0xFDD
 17423                           plusw2	equ	0xFDB
 17424                           fsr2h	equ	0xFDA
 17425                           fsr2l	equ	0xFD9
 17426                           status	equ	0xFD8
 17427                           
 17428 ;; *************** function _ISR_Alta *****************
 17429 ;; Defined at:
 17430 ;;		line 97 in file "parcheggio.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;		None
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;		None               void
 17437 ;; Registers used:
 17438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17439 ;; Tracked objects:
 17440 ;;		On entry : 0/0
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;Total ram usage:       16 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; Hardware stack levels required when called:    1
 17451 ;; This function calls:
 17452 ;;		___lwdiv
 17453 ;; This function is called by:
 17454 ;;		Interrupt level 2
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           	psect	intcode
 17459  000008                     __pintcode:
 17460                           	opt stack 0
 17461  000008                     _ISR_Alta:
 17462                           	opt stack 21
 17463                           
 17464                           ; BSR set to: 15
 17465                           ;incstack = 0
 17466  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17467  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 17468  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 17469  000012  EF9E  F030         	goto	int_func
 17470                           pclatu	equ	0xFFB
 17471                           pclath	equ	0xFFA
 17472                           tblptru	equ	0xFF8
 17473                           tblptrh	equ	0xFF7
 17474                           tblptrl	equ	0xFF6
 17475                           tablat	equ	0xFF5
 17476                           prodh	equ	0xFF4
 17477                           prodl	equ	0xFF3
 17478                           intcon	equ	0xFF2
 17479                           intcon2	equ	0xFF1
 17480                           postinc0	equ	0xFEE
 17481                           fsr0h	equ	0xFEA
 17482                           fsr0l	equ	0xFE9
 17483                           wreg	equ	0xFE8
 17484                           indf1	equ	0xFE7
 17485                           postdec1	equ	0xFE5
 17486                           fsr1h	equ	0xFE2
 17487                           fsr1l	equ	0xFE1
 17488                           bsr	equ	0xFE0
 17489                           indf2	equ	0xFDF
 17490                           postinc2	equ	0xFDE
 17491                           postdec2	equ	0xFDD
 17492                           plusw2	equ	0xFDB
 17493                           fsr2h	equ	0xFDA
 17494                           fsr2l	equ	0xFD9
 17495                           status	equ	0xFD8
 17496                           
 17497                           	psect	intcode_body
 17498  00613C                     __pintcode_body:
 17499                           	opt stack 21
 17500  00613C                     int_func:
 17501                           	opt stack 21
 17502  00613C  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 17503  006140  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 17504  006144  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 17505  006148  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 17506  00614C  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 17507  006150  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 17508  006154  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 17509  006158  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 17510  00615C  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 17511  006160  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 17512  006164  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 17513  006168  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 17514                           
 17515                           ;parcheggio.c: 98: if (INTCON2bits.INTEDG0 == 1) {
 17516  00616C  ACF1               	btfss	intcon2,6,c	;volatile
 17517  00616E  D007               	goto	i2l700
 17518                           
 17519                           ;parcheggio.c: 99: INTCON2bits.INTEDG0 = 0;
 17520  006170  9CF1               	bcf	intcon2,6,c	;volatile
 17521                           
 17522                           ;parcheggio.c: 100: TMR3H = 0;
 17523  006172  0E00               	movlw	0
 17524  006174  6EB3               	movwf	4019,c	;volatile
 17525                           
 17526                           ;parcheggio.c: 101: TMR3L = 0;
 17527  006176  0E00               	movlw	0
 17528  006178  6EB2               	movwf	4018,c	;volatile
 17529                           
 17530                           ;parcheggio.c: 102: distance_error = 0;
 17531  00617A  9854               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17532                           
 17533                           ;parcheggio.c: 103: } else {
 17534  00617C  D030               	goto	i2l8568
 17535  00617E                     i2l700:
 17536                           
 17537                           ;parcheggio.c: 104: gianni = TMR3H;
 17538  00617E  CFB3 F02B          	movff	4019,_gianni	;volatile
 17539                           
 17540                           ;parcheggio.c: 105: asus = TMR3L;
 17541  006182  CFB2 F02A          	movff	4018,_asus	;volatile
 17542                           
 17543                           ;parcheggio.c: 106: timerValue2 = gianni;
 17544  006186  C02B  F027         	movff	_gianni,_timerValue2	;volatile
 17545  00618A  6A28               	clrf	_timerValue2+1,c	;volatile
 17546                           
 17547                           ;parcheggio.c: 107: timerValue2 = ((timerValue2 << 8) | (asus));
 17548  00618C  5027               	movf	_timerValue2,w,c	;volatile
 17549  00618E  0100               	movlb	0	; () banked
 17550  006190  6F67               	movwf	??_ISR_Alta& (0+255),b
 17551  006192  502A               	movf	_asus,w,c	;volatile
 17552  006194  6E27               	movwf	_timerValue2,c	;volatile
 17553  006196  C067  F028         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17554                           
 17555                           ; BSR set to: 0
 17556                           ;parcheggio.c: 108: pulse_time = timerValue2 / 2;
 17557  00619A  90D8               	bcf	status,0,c
 17558  00619C  3028               	rrcf	_timerValue2+1,w,c	;volatile
 17559  00619E  0100               	movlb	0	; () banked
 17560  0061A0  6F67               	movwf	??_ISR_Alta& (0+255),b
 17561  0061A2  3027               	rrcf	_timerValue2,w,c	;volatile
 17562  0061A4  6E21               	movwf	_pulse_time,c	;volatile
 17563  0061A6  C067  F022         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;parcheggio.c: 109: sensor_distance[MUX_index] = pulse_time / 58;
 17567  0061AA  C021  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17568  0061AE  C022  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17569  0061B2  0E00               	movlw	0
 17570  0061B4  0100               	movlb	0	; () banked
 17571  0061B6  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17572  0061B8  0E3A               	movlw	58
 17573  0061BA  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17574  0061BC  ECB5  F031         	call	___lwdiv	;wreg free
 17575  0061C0  5029               	movf	_MUX_index,w,c	;volatile
 17576  0061C2  0D02               	mullw	2
 17577  0061C4  0E01               	movlw	low _sensor_distance
 17578  0061C6  24F3               	addwf	prodl,w,c
 17579  0061C8  6ED9               	movwf	fsr2l,c
 17580  0061CA  0E00               	movlw	high _sensor_distance
 17581  0061CC  20F4               	addwfc	prodh,w,c
 17582  0061CE  6EDA               	movwf	fsr2h,c
 17583  0061D0  0100               	movlb	0	; () banked
 17584  0061D2  C060  FFDE         	movff	?___lwdiv,postinc2
 17585  0061D6  0100               	movlb	0	; () banked
 17586  0061D8  C061  FFDD         	movff	?___lwdiv+1,postdec2
 17587                           
 17588                           ; BSR set to: 0
 17589                           ;parcheggio.c: 110: INTCON2bits.INTEDG0 = 1;
 17590  0061DC  8CF1               	bsf	intcon2,6,c	;volatile
 17591  0061DE                     i2l8568:
 17592                           
 17593                           ;parcheggio.c: 111: }
 17594                           ;parcheggio.c: 112: INTCONbits.INT0IF = 0;
 17595  0061DE  92F2               	bcf	intcon,1,c	;volatile
 17596  0061E0  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 17597  0061E4  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 17598  0061E8  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17599  0061EC  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17600  0061F0  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 17601  0061F4  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 17602  0061F8  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17603  0061FC  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17604  006200  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17605  006204  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17606  006208  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17607  00620C  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17608  006210  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 17609  006214  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 17610  006218  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17611  00621A  0011               	retfie		f
 17612  00621C                     __end_of_ISR_Alta:
 17613                           	opt stack 0
 17614                           pclatu	equ	0xFFB
 17615                           pclath	equ	0xFFA
 17616                           tblptru	equ	0xFF8
 17617                           tblptrh	equ	0xFF7
 17618                           tblptrl	equ	0xFF6
 17619                           tablat	equ	0xFF5
 17620                           prodh	equ	0xFF4
 17621                           prodl	equ	0xFF3
 17622                           intcon	equ	0xFF2
 17623                           intcon2	equ	0xFF1
 17624                           postinc0	equ	0xFEE
 17625                           fsr0h	equ	0xFEA
 17626                           fsr0l	equ	0xFE9
 17627                           wreg	equ	0xFE8
 17628                           indf1	equ	0xFE7
 17629                           postdec1	equ	0xFE5
 17630                           fsr1h	equ	0xFE2
 17631                           fsr1l	equ	0xFE1
 17632                           bsr	equ	0xFE0
 17633                           indf2	equ	0xFDF
 17634                           postinc2	equ	0xFDE
 17635                           postdec2	equ	0xFDD
 17636                           plusw2	equ	0xFDB
 17637                           fsr2h	equ	0xFDA
 17638                           fsr2l	equ	0xFD9
 17639                           status	equ	0xFD8
 17640                           
 17641 ;; *************** function ___lwdiv *****************
 17642 ;; Defined at:
 17643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17644 ;; Parameters:    Size  Location     Type
 17645 ;;  dividend        2    0[BANK0 ] unsigned int 
 17646 ;;  divisor         2    2[BANK0 ] unsigned int 
 17647 ;; Auto vars:     Size  Location     Type
 17648 ;;  quotient        2    5[BANK0 ] unsigned int 
 17649 ;;  counter         1    4[BANK0 ] unsigned char 
 17650 ;; Return value:  Size  Location     Type
 17651 ;;                  2    0[BANK0 ] unsigned int 
 17652 ;; Registers used:
 17653 ;;		wreg, status,2, status,0
 17654 ;; Tracked objects:
 17655 ;;		On entry : 0/0
 17656 ;;		On exit  : 0/0
 17657 ;;		Unchanged: 0/0
 17658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17662 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17663 ;;Total ram usage:        7 bytes
 17664 ;; Hardware stack levels used:    1
 17665 ;; This function calls:
 17666 ;;		Nothing
 17667 ;; This function is called by:
 17668 ;;		_ISR_Alta
 17669 ;; This function uses a non-reentrant model
 17670 ;;
 17671                           
 17672                           	psect	text40
 17673  00636A                     __ptext40:
 17674                           	opt stack 0
 17675  00636A                     ___lwdiv:
 17676                           	opt stack 21
 17677                           
 17678                           ;incstack = 0
 17679  00636A  0E00               	movlw	0
 17680  00636C  0100               	movlb	0	; () banked
 17681  00636E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17682  006370  0E00               	movlw	0
 17683  006372  6F65               	movwf	___lwdiv@quotient& (0+255),b
 17684                           
 17685                           ; BSR set to: 0
 17686  006374  0100               	movlb	0	; () banked
 17687  006376  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17688  006378  0100               	movlb	0	; () banked
 17689  00637A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17690  00637C  B4D8               	btfsc	status,2,c
 17691  00637E  D02C               	goto	i2l1303
 17692                           
 17693                           ; BSR set to: 0
 17694  006380  0E01               	movlw	1
 17695  006382  0100               	movlb	0	; () banked
 17696  006384  6F64               	movwf	___lwdiv@counter& (0+255),b
 17697  006386  D006               	goto	i2l8308
 17698  006388                     i2l8306:
 17699                           
 17700                           ; BSR set to: 0
 17701  006388  0100               	movlb	0	; () banked
 17702  00638A  90D8               	bcf	status,0,c
 17703  00638C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 17704  00638E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17705  006390  0100               	movlb	0	; () banked
 17706  006392  2B64               	incf	___lwdiv@counter& (0+255),f,b
 17707  006394                     i2l8308:
 17708                           
 17709                           ; BSR set to: 0
 17710  006394  0100               	movlb	0	; () banked
 17711  006396  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17712  006398  D7F7               	goto	i2l8306
 17713  00639A                     i2l8310:
 17714                           
 17715                           ; BSR set to: 0
 17716  00639A  0100               	movlb	0	; () banked
 17717  00639C  90D8               	bcf	status,0,c
 17718  00639E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 17719  0063A0  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17720                           
 17721                           ; BSR set to: 0
 17722  0063A2  0100               	movlb	0	; () banked
 17723  0063A4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17724  0063A6  0100               	movlb	0	; () banked
 17725  0063A8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 17726  0063AA  0100               	movlb	0	; () banked
 17727  0063AC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17728  0063AE  0100               	movlb	0	; () banked
 17729  0063B0  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17730  0063B2  A0D8               	btfss	status,0,c
 17731  0063B4  D00A               	goto	i2l8318
 17732                           
 17733                           ; BSR set to: 0
 17734  0063B6  0100               	movlb	0	; () banked
 17735  0063B8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17736  0063BA  0100               	movlb	0	; () banked
 17737  0063BC  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 17738  0063BE  0100               	movlb	0	; () banked
 17739  0063C0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17740  0063C2  0100               	movlb	0	; () banked
 17741  0063C4  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17742                           
 17743                           ; BSR set to: 0
 17744  0063C6  0100               	movlb	0	; () banked
 17745  0063C8  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 17746  0063CA                     i2l8318:
 17747                           
 17748                           ; BSR set to: 0
 17749  0063CA  0100               	movlb	0	; () banked
 17750  0063CC  90D8               	bcf	status,0,c
 17751  0063CE  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17752  0063D0  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 17753                           
 17754                           ; BSR set to: 0
 17755  0063D2  0100               	movlb	0	; () banked
 17756  0063D4  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 17757  0063D6  D7E1               	goto	i2l8310
 17758  0063D8                     i2l1303:
 17759                           
 17760                           ; BSR set to: 0
 17761  0063D8  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 17762  0063DC  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17763                           
 17764                           ; BSR set to: 0
 17765  0063E0  0012               	return		;funcret
 17766  0063E2                     __end_of___lwdiv:
 17767                           	opt stack 0
 17768                           pclatu	equ	0xFFB
 17769                           pclath	equ	0xFFA
 17770                           tblptru	equ	0xFF8
 17771                           tblptrh	equ	0xFF7
 17772                           tblptrl	equ	0xFF6
 17773                           tablat	equ	0xFF5
 17774                           prodh	equ	0xFF4
 17775                           prodl	equ	0xFF3
 17776                           intcon	equ	0xFF2
 17777                           intcon2	equ	0xFF1
 17778                           postinc0	equ	0xFEE
 17779                           fsr0h	equ	0xFEA
 17780                           fsr0l	equ	0xFE9
 17781                           wreg	equ	0xFE8
 17782                           indf1	equ	0xFE7
 17783                           postdec1	equ	0xFE5
 17784                           fsr1h	equ	0xFE2
 17785                           fsr1l	equ	0xFE1
 17786                           bsr	equ	0xFE0
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           plusw2	equ	0xFDB
 17791                           fsr2h	equ	0xFDA
 17792                           fsr2l	equ	0xFD9
 17793                           status	equ	0xFD8
 17794                           pclatu	equ	0xFFB
 17795                           pclath	equ	0xFFA
 17796                           tblptru	equ	0xFF8
 17797                           tblptrh	equ	0xFF7
 17798                           tblptrl	equ	0xFF6
 17799                           tablat	equ	0xFF5
 17800                           prodh	equ	0xFF4
 17801                           prodl	equ	0xFF3
 17802                           intcon	equ	0xFF2
 17803                           intcon2	equ	0xFF1
 17804                           postinc0	equ	0xFEE
 17805                           fsr0h	equ	0xFEA
 17806                           fsr0l	equ	0xFE9
 17807                           wreg	equ	0xFE8
 17808                           indf1	equ	0xFE7
 17809                           postdec1	equ	0xFE5
 17810                           fsr1h	equ	0xFE2
 17811                           fsr1l	equ	0xFE1
 17812                           bsr	equ	0xFE0
 17813                           indf2	equ	0xFDF
 17814                           postinc2	equ	0xFDE
 17815                           postdec2	equ	0xFDD
 17816                           plusw2	equ	0xFDB
 17817                           fsr2h	equ	0xFDA
 17818                           fsr2l	equ	0xFD9
 17819                           status	equ	0xFD8
 17820                           
 17821                           	psect	param0
 17822  0000                     pclatu	equ	0xFFB
 17823                           pclath	equ	0xFFA
 17824                           tblptru	equ	0xFF8
 17825                           tblptrh	equ	0xFF7
 17826                           tblptrl	equ	0xFF6
 17827                           tablat	equ	0xFF5
 17828                           prodh	equ	0xFF4
 17829                           prodl	equ	0xFF3
 17830                           intcon	equ	0xFF2
 17831                           intcon2	equ	0xFF1
 17832                           postinc0	equ	0xFEE
 17833                           fsr0h	equ	0xFEA
 17834                           fsr0l	equ	0xFE9
 17835                           wreg	equ	0xFE8
 17836                           indf1	equ	0xFE7
 17837                           postdec1	equ	0xFE5
 17838                           fsr1h	equ	0xFE2
 17839                           fsr1l	equ	0xFE1
 17840                           bsr	equ	0xFE0
 17841                           indf2	equ	0xFDF
 17842                           postinc2	equ	0xFDE
 17843                           postdec2	equ	0xFDD
 17844                           plusw2	equ	0xFDB
 17845                           fsr2h	equ	0xFDA
 17846                           fsr2l	equ	0xFD9
 17847                           status	equ	0xFD8
 17848                           
 17849                           	psect	temp
 17850  000056                     btemp:
 17851                           	opt stack 0
 17852  000056                     	ds	1
 17853  0000                     int$flags	set	btemp
 17854                           pclatu	equ	0xFFB
 17855                           pclath	equ	0xFFA
 17856                           tblptru	equ	0xFF8
 17857                           tblptrh	equ	0xFF7
 17858                           tblptrl	equ	0xFF6
 17859                           tablat	equ	0xFF5
 17860                           prodh	equ	0xFF4
 17861                           prodl	equ	0xFF3
 17862                           intcon	equ	0xFF2
 17863                           intcon2	equ	0xFF1
 17864                           postinc0	equ	0xFEE
 17865                           fsr0h	equ	0xFEA
 17866                           fsr0l	equ	0xFE9
 17867                           wreg	equ	0xFE8
 17868                           indf1	equ	0xFE7
 17869                           postdec1	equ	0xFE5
 17870                           fsr1h	equ	0xFE2
 17871                           fsr1l	equ	0xFE1
 17872                           bsr	equ	0xFE0
 17873                           indf2	equ	0xFDF
 17874                           postinc2	equ	0xFDE
 17875                           postdec2	equ	0xFDD
 17876                           plusw2	equ	0xFDB
 17877                           fsr2h	equ	0xFDA
 17878                           fsr2l	equ	0xFD9
 17879                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      85
    BANK0           160    122     137
    BANK1           256     89     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _main in BANK0

    _park_search->___xxtofl
    _park_routine->___xxtofl
    _parallelo->___xxtofl
    _parallelo->_asin
    _can_send->_CANsendMessage
    _matematica->_asin
    _cos->_asin
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    _asin->_atan
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_search->_parallelo
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  358310
                                            121 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurazione
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   95960
                                             43 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  247231
                                             77 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86739
                                             41 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    8405
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    8153
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             49 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             41 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                             18 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                              0 BANK1     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                             10 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            117 BANK0      4     0      4
                                             21 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     793
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     725
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    6204
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6204
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    4525
                                             16 COMRAM    23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    3197
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      55       1       90.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CA      20        0.0%
DATA                 0      0     1CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 22 18:07:19 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 00DA                             _z 0015          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 4894  
                         l432 4854                           l521 17E0                           l513 16E0  
                         l433 4858                           l522 17EC                           l514 16E4  
                         l450 49A0                           l434 4864                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49AC                           l443 496C                           l435 4868  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4970                           l436 4874                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 497C                           l437 4878                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4980  
                         l438 4884                           l358 5782                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 498C                           l439 4888                           l359 578C  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 4990  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 499C                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 66B6                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l487 1488                           l479 1380  
                         l399 1E20                           l496 1594                           l488 148C  
                         l832 5256                           l760 5A3E                           l497 1598  
                         l489 1498                           l569 65C4                           l498 15A4  
                         l826 5294                           l499 15A8                           l747 5A42  
                         l780 3AE6                           l749 58F0                           l790 3CD0  
                         l783 3B24                           l793 3D64                           l796 3DEC  
                         l789 3B50                           l896 6662                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 6640                           _asd 02A1  
                         _dir 02A3                           _cos 6058                           _jjj 0130  
                         _kkk 0134                           _msg 0144                           _sin 49F8  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 002D                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000                          l1103 5B8C  
                        ?_abs 0077                          l1411 44C8                          l1420 4500  
                        l1422 456E                          l1414 4470                          l1096 6586  
                        l1441 3666                          l1450 3970                          l1355 32EA  
                        l1339 4CFE                          l1372 345E                          l1356 32DE  
                        l1508 5E22                          l1381 34F2                          l1357 32AA  
                        l1448 3902                          l1458 3A14                          l1490 55EE  
                        l1483 5542                          l1497 564A                          l1498 5662  
                        ?_cos 01B4                          l5302 4898                          l5412 103C  
                        l5308 48DE                          l5260 4712                          l5510 13A0  
                        l5430 10F6                          l5334 49B0                          l7030 38EC  
                        l7104 65F8                          l7200 62FC                          l7130 5FE0  
                        l7114 5F72                          l5612 16F4                          l5516 13E6  
                        l5276 47C8                          l7060 39E6                          l7036 3916  
                        l7140 6010                          l5550 1502                          l5358 0E10  
                        l7302 4514                          l7222 42DC                          l7070 3A34  
                        l7062 39FA                          l7046 396A                          l7142 6020  
                        l7134 5FF4                          l5544 14BC                          l5448 11B0  
                        l5376 0EC8                          l7312 4568                          l7216 42B8  
                        l7072 3A3E                          l7056 39C0                          l7144 602A  
                        l8120 59A2                          l5618 173A                          l5482 12CC  
                        l5394 0F82                          l7330 4622                          l7322 45BE  
                        l7242 433A                          l7226 42E6                          l7090 5B3A  
                        l7082 5A9A                          l7170 55D0                          l5476 1286  
                        l7236 4316                          l7148 6046                          l7164 557A  
                        l7420 1922                          l8116 596A                          l8108 594E  
                        l5646 1810                          l7326 45EC                          l7246 4344  
                        l7086 5AE8                          l7190 56B4                          l7166 5582  
                        l7158 5552                          l8150 3A60                          l5584 161E  
                        l7336 4632                          l7328 4600                          l7096 5BD8  
                        l7360 5E8A                          l7176 562C                          l7168 5592  
                        l7440 1A1C                          l8160 3AA4                          l5578 15D8  
                        l7338 4636                          l7290 44C4                          l7266 43C6  
                        l7258 4398                          l7362 5F2E                          l7178 563C  
                        l7522 1CC0                          l8138 5A00                          l7284 447C  
                        l7276 4444                          l7700 4164                          l7516 1CA0  
                        l8164 3ADC                          l7382 5D86                          l7374 5D50  
                        l7446 1A3C                          l7296 44EA                          l6904 34C6  
                        l6824 322A                          l6752 3128                          l7720 427A  
                        l7712 4244                          l8184 3B48                          l8096 58A2  
                        l8088 588E                          l6914 34EC                          l6906 34CC  
                        l6842 32CE                          l6770 3182                          l6762 3156  
                        l7650 3F4C                          l7378 5D64                          l7804 66E2  
                        l6932 357C                          l6924 3548                          l6860 334C  
                        l6852 330E                          l6836 32BE                          l7740 52F2  
                        l7636 3EEE                          l7572 1E2A                          l7820 5BE0  
                        l8276 3E42                          l6862 3352                          l6870 336E  
                        l6838 32C4                          l6782 31BA                          l6758 314C  
                        l7830 5C2C                          l8278 3E4E                          l8294 3EC2  
                        l8702 625E                          l8710 62C4                          l7808 65B6  
                        l6944 35A0                          l6936 3588                          l6928 355A  
                        l6880 343E                          l6776 3196                          l6960 35F4  
                        l7760 54D2                          l7744 5366                          l7656 3F6C  
                        l7648 3F3A                          l7592 1F24                          l7496 1BA6  
                        l7840 5CA4                          l8288 3E7A                          l8704 626C  
                        l6938 358C                          l6866 335C                          l6794 31EE  
                        l6786 31C4                          l6962 35FA                          l6954 35D0  
                        l7834 5C64                          l7940 5790                          l6980 3654  
                        l6972 362A                          l6964 360C                          l7756 54BA  
                        l7692 40EE                          l7676 3FDE                          l7668 3FAE  
                        l7772 4A2E                          ?_sin 019D                          l6894 34A6  
                        l7694 4128                          l7686 4060                          l7854 4D6E  
                        l7598 1F44                          l7944 5798                          l6888 3490  
                        l6984 367A                          l7688 4068                          l7784 4B58  
                        l7946 57DC                          l7938 577A                          l7954 6678  
                        l6898 34B2                          l6978 364E                          l7866 4E9C  
                        l6988 368E                          l7788 4BCE                          l7958 668A  
                        l7878 4F7E                          l7894 60E0                          l7990 5272  
                        l7984 5220                          l7992 5278                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          u6110 468E  
                        u6115 4682                          u6125 46EE                          u6150 4744  
                        u7040 1830                          u6320 49D0                          u6240 48B8  
                        u6155 4738                          u7045 1824                          u6405 0EA4  
                        u6325 49C4                          u6245 48AC                          u6165 47A4  
                        u6510 1072                          u6430 0EFE                          u6350 0D8C  
                        u6515 1066                          u6435 0EF2                          u6355 0D80  
                        u6525 10D2                          u6445 0F5E                          u6365 0DEC  
                        u6550 112C                          u6470 0FB8                          u6390 0E44  
                        u6800 14DC                          u6720 13C0                          u6640 12A6  
                        u6555 1120                          u6475 0FAC                          u6395 0E38  
                        u9140 39D4                          u9060 388E                          u6805 14D0  
                        u6725 13B4                          u6645 129A                          u6565 118C  
                        u6485 1018                          u9240 5F92                          u9065 3882  
                        u9410 632E                          u8700 328E                          u9245 5F86  
                        u6960 1714                          u6880 15F8                          u9418 6332  
                        u9620 45D2                          u6965 1708                          u6885 15EC  
                        u8680 3274                          u9800 198E                          u8690 328C  
                        u9805 1982                          u9815 19EE                          u9920 1BC6  
                        u9690 5D74                          u9930 1C12                          u9925 1BBA  
                        u9790 1942                          u9935 1C06                          u9945 1C72  
                        u9795 1936      __end_ofi1_CANsendMessage 2674           __size_of_CANSetMask 039E  
                        abs@a 0077                          _alfa 0124                          _fabs 655A  
                        _data 0153                          _beta 0128                          _atan 52A6  
                        _asin 4D10                          _main 621C                          _asus 002A  
                        cos@f 01B4                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0056                          _sqrt 3ED0                          pclat 000FFA  
                        sin@f 019D                          sin@y 01A1                          prodh 000FF4  
                        prodl 000FF3                          start 0308                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                delay_s@value_s 007F                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000              _CANOperationMode 66DA                         ??_abs 0079  
                       ??_cos 00D9                         ??_sin 00D9    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00C1                 ___fltol@sign1 00C9                         ?_atan 00D1  
                       ?_asin 00D5               __end_of___fladd 35B2                         ?_main 002D  
             __end_of___fldiv 465A               __end_of___flneg 660A               __end_of___flmul 3A58  
             __end_of___flsub 655A               __end_of___fltol 6058                         ?_sqrt 00C1  
                       u10050 1E4A                         u10060 1E96                         u10055 1E3E  
                       u10320 4B52                         u10065 1E8A                         u10250 5322  
                       u10330 4B54                         u10075 1EF6                         u10260 5324  
                       _T0CON 000FD5                         u10531 50B4                         u10700 59B2  
                       u10620 589E                         u10541 50C0                         u10580 5270  
                       u10900 3E22                         u11620 627E                         u10760 3A76  
                       u11626 6280                         u10766 3A78                         u11647 65B8  
                       _T3CON 000FB1            __size_of_ISR_Bassa 02F0               __end_of___lwdiv 63E2  
                       i1l410 2E96                         i1l402 25D0                         i1l403 25D4  
                       i1l404 25DE                         i1l370 2082                         i1l363 2214  
                       i1l380 222C                         i1l364 1FF8                         i1l381 22FC  
                       i1l373 2170                         i1l365 1FFC                         i1l390 23AE  
                       i1l382 229A                         i1l374 2174                         i1l366 20CC  
                       i1l383 22A2                         i1l375 217E                         i1l367 206A  
                       i1l384 22AA                         i1l368 2072                         i1l393 2458  
                       i1l385 22B2                         i1l369 207A                         i1l394 245C  
                       i1l378 2444                         i1l706 008C                         i1l395 252C  
                       i1l379 2228                         i1l556 66D6                         i1l396 24CA  
                       i1l388 23A0                         i1l732 02C0                         i1l397 24D2  
                       i1l389 23A4                         i1l725 023C                         i1l398 24DA  
                       i1l718 014E                         i1l399 24E2                         i1l728 02BC  
                       i2l700 617E                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
          __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 621C               __end_of_delay_s 6698                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 012C                         fabs@d 00C1  
                       _first 02A9                         _floor 5D10                         _frexp 62D6  
                       _errno 00E4                         atan@f 00D1                         atan@x 018F  
                       atan@y 018B                         asin@x 00D5                         asin@y 01AC  
    can_send@data_correction1 0087                __pbitbssCOMRAM 02A0                         sin@x2 01A9  
                       tablat 000FF5          __end_of_CANisTxReady 66BC                         plusw2 000FDB  
                       sqrt@a 00C1                         sqrt@i 018C                         sqrt@p 0191  
                       status 000FD8                  ?_park_search 002D               __initialization 63E2  
                __end_of_fabs 6598                  __end_of_atan 54F8                  __end_of_asin 5022  
                __end_of_main 62D6                  __end_of_sqrt 429A                        ??_fabs 00C5  
                      ??_atan 00D5                        ??_asin 00D9                        ??_main 00D9  
           _park_routine$3744 01DC             _park_routine$3745 01E0                        ??_sqrt 00C5  
               __activetblptr 000003             _CANisTxReady$2845 0077                        _ADCON1 000FC1  
                      ?_floor 018B                        ?_frexp 0077                        _CANCON 000F6F  
          _distance_received1 02A6               __CFG_BBSIZ$1024 000000             _spazio_parcheggio 00E6  
               _avvicinamento 02A2                        i1l6000 3064                        i1l6012 30B8  
                      i1l6004 3080                        i2l1303 63D8                        i1l6016 30D4  
                      i1l6008 309C                        i1l6018 3106                        i1l5930 2D76  
                      i1l5950 2E40                        i1l5942 2E04                        i1l8430 22BA  
                      i1l8600 012C                        i1l5954 2E5E                        i1l5946 2E22  
                      i1l5938 2DE6                        i1l8506 24EA                        i1l8450 2396  
                      i1l8354 208A                        i1l8602 0140                        i1l5956 2E90  
                      i1l8532 25E2                        i1l8380 2182                        i1l8526 25C6  
                      i1l8374 2166                        i1l5992 2FF6                        i1l8456 23B2  
                      i1l8632 0182                        i1l8636 018A                        i1l8672 0276  
                      i1l8664 0246                        i1l8584 00BE                        i1l8682 02A6  
                      i1l8658 0218                        i1l8676 027E                        i1l8596 00FA  
                      i2l8310 639A                        i2l8306 6388                        i2l8308 6394  
                      i2l8318 63CA                        i2l8568 61DE                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 5D10            CANsendMessage@tamp 0083  
            __end_of___xxtofl 56C6             __end_of_ISR_Bassa 0308              __end_of_delay_ms 65D2  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 5A4C  
             _data_correction 0163                     ??___fladd 00B1                        ___wmul 660A  
                   ??___fldiv 007F                     ??___flneg 00C1                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D9                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 002B  
                      _raggio 01E8                        clear_0 63E8                        clear_1 63F4  
                      clear_2 6404                     ??_delay_s 007F                        floor@i 018F  
                      floor@x 018B               __CFG_BOREN$BOHW 000000       __size_ofi1_CANisTxReady 001E  
                      sin@sgn 01AD                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00C5                    ___flge@ff2 00C9                  ___xxtofl@arg 00D5  
                ___xxtofl@exp 00D4                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 6448            __end_of_CANSetMask 49F8               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00BD                 ?_park_routine 002D                  eval_poly@res 00C9  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 002D  
                   ?_ISR_Alta 002D                  __pidataBANK0 66F8                  __pidataBANK1 66F0  
               __end_of_floor 5E34                 __end_of_frexp 636A              ??_configurazione 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 00DE         __size_of_CANisTxReady 0024  
                     ??_floor 00D9                       ??_frexp 007D      __end_of_CANOperationMode 66F0  
                  __pbssBANK0 00DA                    __pbssBANK1 0100               _sensor_distance 0001  
          __size_of_eval_poly 0118             ?i1_CANsendMessage 002D                    _data_brake 015B  
              ??_park_routine 01D8                 ISR_Bassa@gigi 0052       __size_of_CANsendMessage 078C  
                  _data_speed 016B                    _activation 02A0            ??i1_CANsendMessage 0035  
    __size_of_can_interpreter 0054            __size_of_parallelo 0284          __size_of_park_search 01C0  
           _old_alignment_gap 013C                    ??_ISR_Alta 0067                       ?___flge 00C5  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 6698  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 002D                     ?___xxtofl 00CB        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 001F                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0120               __size_of___flge 0190  
                  _matematica 2674                       ___fladd 310A                       ___fldiv 429A  
                     ___flneg 65D2                       ___flmul 35B2                       ___flsub 6512  
                     ___fltol 5F4C               __size_of___wmul 0036                       ___lwdiv 636A  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 63E2  
           __end_of_eval_poly 5F4C                       _delay_s 666C                       __ramtop 0D00  
                     __ptext0 621C                       __ptext1 588C                       __ptext2 3A58  
                     __ptext3 5022                       __ptext4 5BDC                       __ptext5 1858  
                     __ptext6 6698                       __ptext7 6640                       __ptext8 2674  
                     __ptext9 6058                     _T0CONbits 000FD5                i1_CANisTxReady 66BC  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 0194                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 0198             __end_of_parallelo 52A6                    ??_delay_ms 007F  
                     asin@sgn 01A0        CANreceiveMessage@error 0037               _start_operation 02AE  
              __pintcode_body 613C          end_of_initialization 6448                     i1u1120_20 22D8  
                   i1u1120_25 22CE                     i1u1121_20 231E                     i1u1121_25 2314  
                   i1u1122_25 236A                     i1u1107_20 20A8                     i1u1107_25 209E  
                   i1u1108_20 20EE                     i1u1108_25 20E4                     i1u1133_20 2508  
                   i1u1133_25 24FE                     i1u1109_25 213A                     i1u1134_20 254E  
                   i1u1134_25 2544                     i1u1135_25 259A                     i1u1165_27 0170  
                     int_func 613C                 _CANInitialize 56C6                     _ISR_Bassa 0018  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                       sqrt@grs 0192                       sqrt@exp 0196  
           ??_can_interpreter 0077        __end_ofi1_CANisTxReady 66DA       _steering_correction_dir 02AF  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 3ED0  
                 ___fladd@grs 00BC                 ___xxtofl@sign 00D3                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0029  
                  _pulse_time 0021       _clock_counter_reference 00E0                   ___flmul@grs 009E  
              _CANsendMessage 1858              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085           i1_CANisTxReady$2845 002D                    ?_ISR_Bassa 002D  
                 ?_matematica 002D                __end_of___flge 5BDC             __size_of_ISR_Alta 6214  
              __end_of___wmul 6640               ?i1_CANisTxReady 002D                    floor@expon 0193  
         start_initialization 63E2                    eval_poly@d 00C1                    eval_poly@n 00C3  
                  eval_poly@x 00BD                   __end_of_abs 666C                   __end_of_cos 613C  
                 __end_of_sin 4D10           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 002D                 _data_steering 0173  
                  frexp@value 0077            ??_CANOperationMode 0077             _distance_received 02A5  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 002C  
                    ??___flge 00CD                      ??___wmul 007B                   __pdataBANK0 00E6  
                 __pdataBANK1 01E4              __CFG_LPT1OSC$OFF 000000     __size_ofi1_CANsendMessage 0690  
                   ___fladd@a 00AD                     ___fladd@b 00A9        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0001  
                   ___flsub@a 0199                     ___flsub@b 0195                 __pcstackBANK0 0060  
               __pcstackBANK1 018B                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0134             __size_of___xxtofl 01CE             __size_of_delay_ms 003A  
             ?_CANsendMessage 0077           __size_of_matematica 058A               ??_CANInitialize 008A  
                   _asin$3753 01B0                     _asin$3754 01A8                     _asin$3755 01A4  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B6  
               _alignment_gap 0011            CANSetFilter@filter 0077                     _data_test 017B  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0053                   ??_ISR_Bassa 003D  
                   __pintcode 0008                      ?___fladd 00A9                      ?___fldiv 0077  
                    ?___flneg 00BD                      ?___flmul 0090                      ?___flsub 0195  
                    ?___fltol 00C1         __size_of_park_routine 0478                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 002D                     _emergency 02A8  
                 __smallconst 0D00                   _COMSTATbits 000F74                     _eval_poly 5E34  
                   _larghezza 01E4              ___lwdiv@quotient 0065                __size_of_floor 0124  
              __size_of_frexp 0094       __size_of_configurazione 006C                     _parallelo 5022  
                _new_distance 02AA         CANreceiveMessage@tamp 0038                _prima_sterzata 0140  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 64BE  
                   atan@recip 0193                  _park_routine 3A58  _delay_quartz_frequency_value 00E8  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u733_20 2CB6  
                    i1u733_26 2CB8                      i1u734_20 2CE4                      i1u742_25 2E6A  
                    i1u734_26 2CE6                      i1u744_20 2F3E                      i1u736_25 2CFA  
                    i1u744_26 2F40                      i1u745_20 2F68                      i1u753_25 30E0  
                    i1u745_26 2F6A                      i1u747_25 2F7C                      _PIR3bits 000FA4  
                    _RXB0EIDH 000F63                      _RXB0EIDL 000F64                      _RXB1EIDH 000F53  
                    _RXB1EIDL 000F54                      _ISR_Alta 0008                     _set_speed 0025  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXF0EIDH 000F02                      _RXB1SIDH 000F51  
                    _RXF0EIDL 000F03                      _RXB1SIDL 000F52                      _RXF1EIDH 000F06  
                    _RXF1EIDL 000F07                      _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B  
                    _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F                      _RXF4EIDH 000F12  
                    _RXF4EIDL 000F13                      _RXF5EIDH 000F16                      _RXF5EIDL 000F17  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01           __end_of_park_search 5A4C  
                    _TXB0EIDH 000F43                      _RXF1SIDH 000F04                      _TXB0EIDL 000F44  
                    _RXF1SIDL 000F05                      _TXB1EIDH 000F33                      _RXF2SIDH 000F08  
                    _TXB1EIDL 000F34                      _RXF2SIDL 000F09                      _TXB2EIDH 000F23  
                    _RXF3SIDH 000F0C                      _TXB2EIDL 000F24                      _RXF3SIDL 000F0D  
                    _RXF4SIDH 000F10                      _RXF4SIDL 000F11                      _RXF5SIDH 000F14  
                    _RXF5SIDL 000F15                      _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B  
                    _TXB0SIDH 000F41                      _RXM1EIDH 000F1E                      _TXB0SIDL 000F42  
                    _RXM1EIDL 000F1F                      _TXB1SIDH 000F31                      _TXB1SIDL 000F32  
                    _TXB2SIDH 000F21                      _TXB2SIDL 000F22                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19                      _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D  
                 _distance_dx 001B                   _distance_sx 001D                      _RXERRCNT 000F75  
                    _TXERRCNT 000F76             ___wmul@multiplier 0077                    ?_eval_poly 00BD  
         __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077  
                 _INTCON2bits 000FF1                     copy_data0 641E                    _CANCONbits 000F6F  
                  ?_parallelo 002D              _distance_average 0019                     frexp@eptr 007B  
                    __Hparam0 0000                      __Lparam0 0000                  _RXB0SIDLbits 000F62  
                _RXB1SIDLbits 000F52              ??i1_CANisTxReady 002D                  ??_matematica 00D9  
               _request_sent1 02AD              __size_of___fladd 04A8                    _CANSetMask 465A  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C              i1_CANsendMessage 1FE4  
                    _cos$3756 01B8              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 5BDC                      ___xxtofl 54F8                  _RXF0SIDLbits 000F01  
                    _delay_ms 6598               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064         i1CANsendMessage@flags 0034                ??_CANSetFilter 007C  
                    __ptext10 49F8                      __ptext11 5D10                      __ptext20 65D2  
                    __ptext12 62D6                      __ptext21 5E34                      __ptext13 54F8  
                    __ptext30 56C6                      __ptext22 35B2                      __ptext14 5F4C  
                    __ptext31 465A                      __ptext23 310A                      __ptext15 6512  
                    __ptext40 636A                      __ptext32 0D52                      __ptext24 5A4C  
                    __ptext16 4D10                      __ptext33 66DA                      __ptext25 429A  
                    __ptext17 3ED0                      __ptext34 64BE                      __ptext26 666C  
                    __ptext18 52A6                      __ptext27 6598                      __ptext19 655A  
                    __ptext36 1FE4                      __ptext28 660A                      __ptext37 66BC  
                    __ptext29 6452                      __ptext38 2BFE                  _RXF2SIDLbits 000F09  
                    _sin$3757 01A5       __end_of_can_interpreter 6512                  _RXF3SIDLbits 000F0D  
                    _distance 00E2            __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 00BA  
               __size_of_sqrt 03CA                   _park_search 588C          CANreceiveMessage@msg 002D  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0056     __size_of_CANOperationMode 0016                 ?_CANisTxReady 002D  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C5              ??_CANsendMessage 007F  
  i1CANsendMessage@dataLength 0033            ?_CANreceiveMessage 002D                  _request_sent 02AC  
                   sqrt@tfrac 018D                _configurazione 6452      CANsendMessage@identifier 0077  
                 ??_parallelo 01B4                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 0081              CANSetFilter@type 007B           ??_CANreceiveMessage 002F  
        i1CANsendMessage@data 0031           _old_data_correction 02AB          i1CANsendMessage@tamp 0039  
                 _TXB0DLCbits 000F45                   _right_speed 0023                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 02A4               _matematica$3750 01D4  
             _matematica$3751 01CC               _matematica$3752 01D0               _matematica$3746 01BC  
             _matematica$3747 01C0               _matematica$3748 01C4               _matematica$3749 01C8  
   __end_of_CANreceiveMessage 310A                      sqrt@frac 019C                      sqrt@sign 018B  
                    sqrt@root 0198    i1CANsendMessage@identifier 002D                   _timerValue2 0027  
      __end_of_configurazione 64BE                 ___fladd@signs 00B9                 _distance_wait 02A7  
            ?_can_interpreter 002D                  ___fladd@aexp 00BA                  ___fladd@bexp 00BB  
       __end_of_CANInitialize 588C         _sensor_distance_short 0183           _sensor_distance_old 0118  
